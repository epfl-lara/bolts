; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14722 () Bool)

(assert start!14722)

(declare-fun b!139567 () Bool)

(declare-fun b_free!3029 () Bool)

(declare-fun b_next!3029 () Bool)

(assert (=> b!139567 (= b_free!3029 (not b_next!3029))))

(declare-fun tp!11557 () Bool)

(declare-fun b_and!8741 () Bool)

(assert (=> b!139567 (= tp!11557 b_and!8741)))

(declare-fun b!139573 () Bool)

(declare-fun b_free!3031 () Bool)

(declare-fun b_next!3031 () Bool)

(assert (=> b!139573 (= b_free!3031 (not b_next!3031))))

(declare-fun tp!11559 () Bool)

(declare-fun b_and!8743 () Bool)

(assert (=> b!139573 (= tp!11559 b_and!8743)))

(declare-fun b!139566 () Bool)

(declare-fun e!91043 () Bool)

(declare-fun e!91049 () Bool)

(assert (=> b!139566 (= e!91043 e!91049)))

(declare-datatypes ((V!3555 0))(
  ( (V!3556 (val!1510 Int)) )
))
(declare-datatypes ((array!4896 0))(
  ( (array!4897 (arr!2314 (Array (_ BitVec 32) (_ BitVec 64))) (size!2586 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1122 0))(
  ( (ValueCellFull!1122 (v!3279 V!3555)) (EmptyCell!1122) )
))
(declare-datatypes ((array!4898 0))(
  ( (array!4899 (arr!2315 (Array (_ BitVec 32) ValueCell!1122)) (size!2587 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1152 0))(
  ( (LongMapFixedSize!1153 (defaultEntry!2940 Int) (mask!7280 (_ BitVec 32)) (extraKeys!2695 (_ BitVec 32)) (zeroValue!2790 V!3555) (minValue!2790 V!3555) (_size!625 (_ BitVec 32)) (_keys!4699 array!4896) (_values!2923 array!4898) (_vacant!625 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!940 0))(
  ( (Cell!941 (v!3280 LongMapFixedSize!1152)) )
))
(declare-datatypes ((LongMap!940 0))(
  ( (LongMap!941 (underlying!481 Cell!940)) )
))
(declare-fun thiss!992 () LongMap!940)

(declare-fun e!91042 () Bool)

(declare-fun e!91046 () Bool)

(declare-fun tp_is_empty!2931 () Bool)

(declare-fun array_inv!1431 (array!4896) Bool)

(declare-fun array_inv!1432 (array!4898) Bool)

(assert (=> b!139567 (= e!91042 (and tp!11557 tp_is_empty!2931 (array_inv!1431 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (array_inv!1432 (_values!2923 (v!3280 (underlying!481 thiss!992)))) e!91046))))

(declare-fun b!139568 () Bool)

(declare-fun e!91047 () Bool)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!139568 (= e!91047 (not (or (bvsge (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b01111111111111111111111111111111) (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))))

(declare-datatypes ((List!1763 0))(
  ( (Nil!1760) (Cons!1759 (h!2366 (_ BitVec 64)) (t!6359 List!1763)) )
))
(declare-fun arrayNoDuplicates!0 (array!4896 (_ BitVec 32) List!1763) Bool)

(assert (=> b!139568 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) from!355 Nil!1760)))

(declare-datatypes ((Unit!4395 0))(
  ( (Unit!4396) )
))
(declare-fun lt!73061 () Unit!4395)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4896 (_ BitVec 32) (_ BitVec 32)) Unit!4395)

(assert (=> b!139568 (= lt!73061 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-fun arrayContainsKey!0 (array!4896 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!139568 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!73064 () Unit!4395)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!144 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4395)

(assert (=> b!139568 (= lt!73064 (lemmaListMapContainsThenArrayContainsFrom!144 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun mapNonEmpty!4833 () Bool)

(declare-fun mapRes!4834 () Bool)

(declare-fun tp!11560 () Bool)

(declare-fun e!91055 () Bool)

(assert (=> mapNonEmpty!4833 (= mapRes!4834 (and tp!11560 e!91055))))

(declare-fun mapRest!4834 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapValue!4834 () ValueCell!1122)

(declare-fun mapKey!4834 () (_ BitVec 32))

(assert (=> mapNonEmpty!4833 (= (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (store mapRest!4834 mapKey!4834 mapValue!4834))))

(declare-fun b!139569 () Bool)

(declare-fun e!91051 () Bool)

(assert (=> b!139569 (= e!91051 e!91047)))

(declare-fun res!66753 () Bool)

(assert (=> b!139569 (=> (not res!66753) (not e!91047))))

(declare-datatypes ((tuple2!2684 0))(
  ( (tuple2!2685 (_1!1352 (_ BitVec 64)) (_2!1352 V!3555)) )
))
(declare-datatypes ((List!1764 0))(
  ( (Nil!1761) (Cons!1760 (h!2367 tuple2!2684) (t!6360 List!1764)) )
))
(declare-datatypes ((ListLongMap!1747 0))(
  ( (ListLongMap!1748 (toList!889 List!1764)) )
))
(declare-fun lt!73065 () ListLongMap!1747)

(declare-fun contains!921 (ListLongMap!1747 (_ BitVec 64)) Bool)

(assert (=> b!139569 (= res!66753 (contains!921 lt!73065 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2686 0))(
  ( (tuple2!2687 (_1!1353 Bool) (_2!1353 LongMapFixedSize!1152)) )
))
(declare-fun lt!73062 () tuple2!2686)

(declare-fun newMap!16 () LongMapFixedSize!1152)

(declare-fun update!210 (LongMapFixedSize!1152 (_ BitVec 64) V!3555) tuple2!2686)

(declare-fun get!1535 (ValueCell!1122 V!3555) V!3555)

(declare-fun dynLambda!443 (Int (_ BitVec 64)) V!3555)

(assert (=> b!139569 (= lt!73062 (update!210 newMap!16 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun mapIsEmpty!4833 () Bool)

(assert (=> mapIsEmpty!4833 mapRes!4834))

(declare-fun b!139570 () Bool)

(declare-fun res!66751 () Bool)

(declare-fun e!91048 () Bool)

(assert (=> b!139570 (=> (not res!66751) (not e!91048))))

(assert (=> b!139570 (= res!66751 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7280 newMap!16)) (_size!625 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!139571 () Bool)

(declare-fun res!66754 () Bool)

(assert (=> b!139571 (=> (not res!66754) (not e!91048))))

(declare-fun valid!554 (LongMapFixedSize!1152) Bool)

(assert (=> b!139571 (= res!66754 (valid!554 newMap!16))))

(declare-fun res!66749 () Bool)

(assert (=> start!14722 (=> (not res!66749) (not e!91048))))

(declare-fun valid!555 (LongMap!940) Bool)

(assert (=> start!14722 (= res!66749 (valid!555 thiss!992))))

(assert (=> start!14722 e!91048))

(assert (=> start!14722 e!91043))

(assert (=> start!14722 true))

(declare-fun e!91044 () Bool)

(assert (=> start!14722 e!91044))

(declare-fun b!139572 () Bool)

(declare-fun e!91050 () Bool)

(assert (=> b!139572 (= e!91050 tp_is_empty!2931)))

(declare-fun e!91053 () Bool)

(assert (=> b!139573 (= e!91044 (and tp!11559 tp_is_empty!2931 (array_inv!1431 (_keys!4699 newMap!16)) (array_inv!1432 (_values!2923 newMap!16)) e!91053))))

(declare-fun b!139574 () Bool)

(declare-fun res!66752 () Bool)

(assert (=> b!139574 (=> (not res!66752) (not e!91048))))

(assert (=> b!139574 (= res!66752 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!139575 () Bool)

(declare-fun e!91052 () Bool)

(assert (=> b!139575 (= e!91052 tp_is_empty!2931)))

(declare-fun mapIsEmpty!4834 () Bool)

(declare-fun mapRes!4833 () Bool)

(assert (=> mapIsEmpty!4834 mapRes!4833))

(declare-fun b!139576 () Bool)

(assert (=> b!139576 (= e!91053 (and e!91050 mapRes!4833))))

(declare-fun condMapEmpty!4834 () Bool)

(declare-fun mapDefault!4833 () ValueCell!1122)

(assert (=> b!139576 (= condMapEmpty!4834 (= (arr!2315 (_values!2923 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4833)))))

(declare-fun b!139577 () Bool)

(assert (=> b!139577 (= e!91049 e!91042)))

(declare-fun b!139578 () Bool)

(declare-fun e!91056 () Bool)

(assert (=> b!139578 (= e!91046 (and e!91056 mapRes!4834))))

(declare-fun condMapEmpty!4833 () Bool)

(declare-fun mapDefault!4834 () ValueCell!1122)

(assert (=> b!139578 (= condMapEmpty!4833 (= (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4834)))))

(declare-fun b!139579 () Bool)

(assert (=> b!139579 (= e!91048 e!91051)))

(declare-fun res!66750 () Bool)

(assert (=> b!139579 (=> (not res!66750) (not e!91051))))

(declare-fun lt!73063 () ListLongMap!1747)

(assert (=> b!139579 (= res!66750 (and (= lt!73063 lt!73065) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1438 (LongMapFixedSize!1152) ListLongMap!1747)

(assert (=> b!139579 (= lt!73065 (map!1438 newMap!16))))

(declare-fun getCurrentListMap!555 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) ListLongMap!1747)

(assert (=> b!139579 (= lt!73063 (getCurrentListMap!555 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!139580 () Bool)

(assert (=> b!139580 (= e!91056 tp_is_empty!2931)))

(declare-fun b!139581 () Bool)

(assert (=> b!139581 (= e!91055 tp_is_empty!2931)))

(declare-fun mapNonEmpty!4834 () Bool)

(declare-fun tp!11558 () Bool)

(assert (=> mapNonEmpty!4834 (= mapRes!4833 (and tp!11558 e!91052))))

(declare-fun mapValue!4833 () ValueCell!1122)

(declare-fun mapRest!4833 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4833 () (_ BitVec 32))

(assert (=> mapNonEmpty!4834 (= (arr!2315 (_values!2923 newMap!16)) (store mapRest!4833 mapKey!4833 mapValue!4833))))

(assert (= (and start!14722 res!66749) b!139574))

(assert (= (and b!139574 res!66752) b!139571))

(assert (= (and b!139571 res!66754) b!139570))

(assert (= (and b!139570 res!66751) b!139579))

(assert (= (and b!139579 res!66750) b!139569))

(assert (= (and b!139569 res!66753) b!139568))

(assert (= (and b!139578 condMapEmpty!4833) mapIsEmpty!4833))

(assert (= (and b!139578 (not condMapEmpty!4833)) mapNonEmpty!4833))

(get-info :version)

(assert (= (and mapNonEmpty!4833 ((_ is ValueCellFull!1122) mapValue!4834)) b!139581))

(assert (= (and b!139578 ((_ is ValueCellFull!1122) mapDefault!4834)) b!139580))

(assert (= b!139567 b!139578))

(assert (= b!139577 b!139567))

(assert (= b!139566 b!139577))

(assert (= start!14722 b!139566))

(assert (= (and b!139576 condMapEmpty!4834) mapIsEmpty!4834))

(assert (= (and b!139576 (not condMapEmpty!4834)) mapNonEmpty!4834))

(assert (= (and mapNonEmpty!4834 ((_ is ValueCellFull!1122) mapValue!4833)) b!139575))

(assert (= (and b!139576 ((_ is ValueCellFull!1122) mapDefault!4833)) b!139572))

(assert (= b!139573 b!139576))

(assert (= start!14722 b!139573))

(declare-fun b_lambda!6281 () Bool)

(assert (=> (not b_lambda!6281) (not b!139569)))

(declare-fun t!6356 () Bool)

(declare-fun tb!2557 () Bool)

(assert (=> (and b!139567 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) t!6356) tb!2557))

(declare-fun result!4189 () Bool)

(assert (=> tb!2557 (= result!4189 tp_is_empty!2931)))

(assert (=> b!139569 t!6356))

(declare-fun b_and!8745 () Bool)

(assert (= b_and!8741 (and (=> t!6356 result!4189) b_and!8745)))

(declare-fun tb!2559 () Bool)

(declare-fun t!6358 () Bool)

(assert (=> (and b!139573 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) t!6358) tb!2559))

(declare-fun result!4193 () Bool)

(assert (= result!4193 result!4189))

(assert (=> b!139569 t!6358))

(declare-fun b_and!8747 () Bool)

(assert (= b_and!8743 (and (=> t!6358 result!4193) b_and!8747)))

(declare-fun m!166723 () Bool)

(assert (=> b!139573 m!166723))

(declare-fun m!166725 () Bool)

(assert (=> b!139573 m!166725))

(declare-fun m!166727 () Bool)

(assert (=> b!139569 m!166727))

(declare-fun m!166729 () Bool)

(assert (=> b!139569 m!166729))

(declare-fun m!166731 () Bool)

(assert (=> b!139569 m!166731))

(declare-fun m!166733 () Bool)

(assert (=> b!139569 m!166733))

(assert (=> b!139569 m!166733))

(declare-fun m!166735 () Bool)

(assert (=> b!139569 m!166735))

(assert (=> b!139569 m!166729))

(assert (=> b!139569 m!166733))

(assert (=> b!139569 m!166731))

(declare-fun m!166737 () Bool)

(assert (=> b!139569 m!166737))

(assert (=> b!139569 m!166727))

(declare-fun m!166739 () Bool)

(assert (=> b!139571 m!166739))

(declare-fun m!166741 () Bool)

(assert (=> start!14722 m!166741))

(declare-fun m!166743 () Bool)

(assert (=> b!139568 m!166743))

(declare-fun m!166745 () Bool)

(assert (=> b!139568 m!166745))

(assert (=> b!139568 m!166733))

(declare-fun m!166747 () Bool)

(assert (=> b!139568 m!166747))

(assert (=> b!139568 m!166733))

(assert (=> b!139568 m!166733))

(declare-fun m!166749 () Bool)

(assert (=> b!139568 m!166749))

(declare-fun m!166751 () Bool)

(assert (=> mapNonEmpty!4833 m!166751))

(declare-fun m!166753 () Bool)

(assert (=> b!139567 m!166753))

(declare-fun m!166755 () Bool)

(assert (=> b!139567 m!166755))

(declare-fun m!166757 () Bool)

(assert (=> mapNonEmpty!4834 m!166757))

(assert (=> b!139579 m!166733))

(declare-fun m!166759 () Bool)

(assert (=> b!139579 m!166759))

(declare-fun m!166761 () Bool)

(assert (=> b!139579 m!166761))

(check-sat (not b!139568) (not b_next!3029) (not mapNonEmpty!4833) (not b!139571) b_and!8745 (not start!14722) (not b_next!3031) (not b_lambda!6281) (not b!139579) (not b!139573) tp_is_empty!2931 (not b!139569) (not mapNonEmpty!4834) (not b!139567) b_and!8747)
(check-sat b_and!8745 b_and!8747 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun b_lambda!6285 () Bool)

(assert (= b_lambda!6281 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6285)))

(check-sat (not b!139568) (not b_next!3029) (not mapNonEmpty!4833) (not b!139571) b_and!8745 (not b_next!3031) (not b!139579) (not b!139573) tp_is_empty!2931 (not b!139569) (not mapNonEmpty!4834) (not b!139567) b_and!8747 (not b_lambda!6285) (not start!14722))
(check-sat b_and!8745 b_and!8747 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun d!43437 () Bool)

(declare-fun res!66779 () Bool)

(declare-fun e!91104 () Bool)

(assert (=> d!43437 (=> (not res!66779) (not e!91104))))

(declare-fun simpleValid!95 (LongMapFixedSize!1152) Bool)

(assert (=> d!43437 (= res!66779 (simpleValid!95 newMap!16))))

(assert (=> d!43437 (= (valid!554 newMap!16) e!91104)))

(declare-fun b!139640 () Bool)

(declare-fun res!66780 () Bool)

(assert (=> b!139640 (=> (not res!66780) (not e!91104))))

(declare-fun arrayCountValidKeys!0 (array!4896 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!139640 (= res!66780 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (_size!625 newMap!16)))))

(declare-fun b!139641 () Bool)

(declare-fun res!66781 () Bool)

(assert (=> b!139641 (=> (not res!66781) (not e!91104))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4896 (_ BitVec 32)) Bool)

(assert (=> b!139641 (= res!66781 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!139642 () Bool)

(assert (=> b!139642 (= e!91104 (arrayNoDuplicates!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 Nil!1760))))

(assert (= (and d!43437 res!66779) b!139640))

(assert (= (and b!139640 res!66780) b!139641))

(assert (= (and b!139641 res!66781) b!139642))

(declare-fun m!166803 () Bool)

(assert (=> d!43437 m!166803))

(declare-fun m!166805 () Bool)

(assert (=> b!139640 m!166805))

(declare-fun m!166807 () Bool)

(assert (=> b!139641 m!166807))

(declare-fun m!166809 () Bool)

(assert (=> b!139642 m!166809))

(assert (=> b!139571 d!43437))

(declare-fun d!43439 () Bool)

(assert (=> d!43439 (= (valid!555 thiss!992) (valid!554 (v!3280 (underlying!481 thiss!992))))))

(declare-fun bs!5838 () Bool)

(assert (= bs!5838 d!43439))

(declare-fun m!166811 () Bool)

(assert (=> bs!5838 m!166811))

(assert (=> start!14722 d!43439))

(declare-fun c!26093 () Bool)

(declare-fun bm!15425 () Bool)

(declare-fun call!15428 () Bool)

(assert (=> bm!15425 (= call!15428 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)))))

(declare-fun b!139654 () Bool)

(declare-fun e!91114 () Bool)

(declare-fun e!91115 () Bool)

(assert (=> b!139654 (= e!91114 e!91115)))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!139654 (= c!26093 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139655 () Bool)

(assert (=> b!139655 (= e!91115 call!15428)))

(declare-fun d!43441 () Bool)

(declare-fun res!66790 () Bool)

(declare-fun e!91116 () Bool)

(assert (=> d!43441 (=> res!66790 e!91116)))

(assert (=> d!43441 (= res!66790 (bvsge from!355 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43441 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) from!355 Nil!1760) e!91116)))

(declare-fun b!139653 () Bool)

(declare-fun e!91113 () Bool)

(declare-fun contains!922 (List!1763 (_ BitVec 64)) Bool)

(assert (=> b!139653 (= e!91113 (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139656 () Bool)

(assert (=> b!139656 (= e!91116 e!91114)))

(declare-fun res!66788 () Bool)

(assert (=> b!139656 (=> (not res!66788) (not e!91114))))

(assert (=> b!139656 (= res!66788 (not e!91113))))

(declare-fun res!66789 () Bool)

(assert (=> b!139656 (=> (not res!66789) (not e!91113))))

(assert (=> b!139656 (= res!66789 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139657 () Bool)

(assert (=> b!139657 (= e!91115 call!15428)))

(assert (= (and d!43441 (not res!66790)) b!139656))

(assert (= (and b!139656 res!66789) b!139653))

(assert (= (and b!139656 res!66788) b!139654))

(assert (= (and b!139654 c!26093) b!139655))

(assert (= (and b!139654 (not c!26093)) b!139657))

(assert (= (or b!139655 b!139657) bm!15425))

(assert (=> bm!15425 m!166733))

(declare-fun m!166813 () Bool)

(assert (=> bm!15425 m!166813))

(assert (=> b!139654 m!166733))

(assert (=> b!139654 m!166733))

(declare-fun m!166815 () Bool)

(assert (=> b!139654 m!166815))

(assert (=> b!139653 m!166733))

(assert (=> b!139653 m!166733))

(declare-fun m!166817 () Bool)

(assert (=> b!139653 m!166817))

(assert (=> b!139656 m!166733))

(assert (=> b!139656 m!166733))

(assert (=> b!139656 m!166815))

(assert (=> b!139568 d!43441))

(declare-fun d!43443 () Bool)

(assert (=> d!43443 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) from!355 Nil!1760)))

(declare-fun lt!73083 () Unit!4395)

(declare-fun choose!39 (array!4896 (_ BitVec 32) (_ BitVec 32)) Unit!4395)

(assert (=> d!43443 (= lt!73083 (choose!39 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!43443 (bvslt (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!43443 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 from!355) lt!73083)))

(declare-fun bs!5839 () Bool)

(assert (= bs!5839 d!43443))

(assert (=> bs!5839 m!166745))

(declare-fun m!166819 () Bool)

(assert (=> bs!5839 m!166819))

(assert (=> b!139568 d!43443))

(declare-fun d!43445 () Bool)

(declare-fun res!66795 () Bool)

(declare-fun e!91121 () Bool)

(assert (=> d!43445 (=> res!66795 e!91121)))

(assert (=> d!43445 (= res!66795 (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43445 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!91121)))

(declare-fun b!139662 () Bool)

(declare-fun e!91122 () Bool)

(assert (=> b!139662 (= e!91121 e!91122)))

(declare-fun res!66796 () Bool)

(assert (=> b!139662 (=> (not res!66796) (not e!91122))))

(assert (=> b!139662 (= res!66796 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!139663 () Bool)

(assert (=> b!139663 (= e!91122 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!43445 (not res!66795)) b!139662))

(assert (= (and b!139662 res!66796) b!139663))

(declare-fun m!166821 () Bool)

(assert (=> d!43445 m!166821))

(assert (=> b!139663 m!166733))

(declare-fun m!166823 () Bool)

(assert (=> b!139663 m!166823))

(assert (=> b!139568 d!43445))

(declare-fun d!43447 () Bool)

(declare-fun e!91125 () Bool)

(assert (=> d!43447 e!91125))

(declare-fun c!26096 () Bool)

(assert (=> d!43447 (= c!26096 (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!73086 () Unit!4395)

(declare-fun choose!863 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4395)

(assert (=> d!43447 (= lt!73086 (choose!863 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> d!43447 (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992))))))

(assert (=> d!43447 (= (lemmaListMapContainsThenArrayContainsFrom!144 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) lt!73086)))

(declare-fun b!139668 () Bool)

(assert (=> b!139668 (= e!91125 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!139669 () Bool)

(assert (=> b!139669 (= e!91125 (ite (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43447 c!26096) b!139668))

(assert (= (and d!43447 (not c!26096)) b!139669))

(assert (=> d!43447 m!166733))

(declare-fun m!166825 () Bool)

(assert (=> d!43447 m!166825))

(declare-fun m!166827 () Bool)

(assert (=> d!43447 m!166827))

(assert (=> b!139668 m!166733))

(assert (=> b!139668 m!166749))

(assert (=> b!139568 d!43447))

(declare-fun d!43449 () Bool)

(assert (=> d!43449 (= (array_inv!1431 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvsge (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139567 d!43449))

(declare-fun d!43451 () Bool)

(assert (=> d!43451 (= (array_inv!1432 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvsge (size!2587 (_values!2923 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!139567 d!43451))

(declare-fun d!43453 () Bool)

(assert (=> d!43453 (= (map!1438 newMap!16) (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bs!5840 () Bool)

(assert (= bs!5840 d!43453))

(declare-fun m!166829 () Bool)

(assert (=> bs!5840 m!166829))

(assert (=> b!139579 d!43453))

(declare-fun bm!15440 () Bool)

(declare-fun call!15448 () ListLongMap!1747)

(declare-fun call!15447 () ListLongMap!1747)

(assert (=> bm!15440 (= call!15448 call!15447)))

(declare-fun b!139712 () Bool)

(declare-fun e!91158 () ListLongMap!1747)

(declare-fun call!15443 () ListLongMap!1747)

(assert (=> b!139712 (= e!91158 call!15443)))

(declare-fun bm!15441 () Bool)

(declare-fun call!15444 () ListLongMap!1747)

(declare-fun getCurrentListMapNoExtraKeys!141 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) ListLongMap!1747)

(assert (=> bm!15441 (= call!15444 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!139713 () Bool)

(declare-fun e!91156 () Unit!4395)

(declare-fun lt!73148 () Unit!4395)

(assert (=> b!139713 (= e!91156 lt!73148)))

(declare-fun lt!73144 () ListLongMap!1747)

(assert (=> b!139713 (= lt!73144 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun lt!73137 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73137 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73142 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73139 () Unit!4395)

(declare-fun addStillContains!96 (ListLongMap!1747 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4395)

(assert (=> b!139713 (= lt!73139 (addStillContains!96 lt!73144 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73142))))

(declare-fun +!174 (ListLongMap!1747 tuple2!2684) ListLongMap!1747)

(assert (=> b!139713 (contains!921 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73142)))

(declare-fun lt!73147 () Unit!4395)

(assert (=> b!139713 (= lt!73147 lt!73139)))

(declare-fun lt!73146 () ListLongMap!1747)

(assert (=> b!139713 (= lt!73146 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun lt!73150 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73150 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73152 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73152 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73143 () Unit!4395)

(declare-fun addApplyDifferent!96 (ListLongMap!1747 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4395)

(assert (=> b!139713 (= lt!73143 (addApplyDifferent!96 lt!73146 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73152))))

(declare-fun apply!120 (ListLongMap!1747 (_ BitVec 64)) V!3555)

(assert (=> b!139713 (= (apply!120 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73152) (apply!120 lt!73146 lt!73152))))

(declare-fun lt!73131 () Unit!4395)

(assert (=> b!139713 (= lt!73131 lt!73143)))

(declare-fun lt!73140 () ListLongMap!1747)

(assert (=> b!139713 (= lt!73140 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun lt!73145 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73145 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73151 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73151 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!73138 () Unit!4395)

(assert (=> b!139713 (= lt!73138 (addApplyDifferent!96 lt!73140 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73151))))

(assert (=> b!139713 (= (apply!120 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73151) (apply!120 lt!73140 lt!73151))))

(declare-fun lt!73136 () Unit!4395)

(assert (=> b!139713 (= lt!73136 lt!73138)))

(declare-fun lt!73149 () ListLongMap!1747)

(assert (=> b!139713 (= lt!73149 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun lt!73132 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73132 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73141 () (_ BitVec 64))

(assert (=> b!139713 (= lt!73141 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!139713 (= lt!73148 (addApplyDifferent!96 lt!73149 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73141))))

(assert (=> b!139713 (= (apply!120 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73141) (apply!120 lt!73149 lt!73141))))

(declare-fun b!139714 () Bool)

(declare-fun res!66819 () Bool)

(declare-fun e!91152 () Bool)

(assert (=> b!139714 (=> (not res!66819) (not e!91152))))

(declare-fun e!91162 () Bool)

(assert (=> b!139714 (= res!66819 e!91162)))

(declare-fun res!66816 () Bool)

(assert (=> b!139714 (=> res!66816 e!91162)))

(declare-fun e!91159 () Bool)

(assert (=> b!139714 (= res!66816 (not e!91159))))

(declare-fun res!66815 () Bool)

(assert (=> b!139714 (=> (not res!66815) (not e!91159))))

(assert (=> b!139714 (= res!66815 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!139715 () Bool)

(assert (=> b!139715 (= e!91158 call!15448)))

(declare-fun b!139716 () Bool)

(declare-fun e!91154 () ListLongMap!1747)

(declare-fun e!91161 () ListLongMap!1747)

(assert (=> b!139716 (= e!91154 e!91161)))

(declare-fun c!26113 () Bool)

(assert (=> b!139716 (= c!26113 (and (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!15446 () ListLongMap!1747)

(declare-fun c!26110 () Bool)

(declare-fun bm!15442 () Bool)

(assert (=> bm!15442 (= call!15447 (+!174 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!139718 () Bool)

(declare-fun Unit!4397 () Unit!4395)

(assert (=> b!139718 (= e!91156 Unit!4397)))

(declare-fun b!139719 () Bool)

(declare-fun e!91163 () Bool)

(declare-fun e!91155 () Bool)

(assert (=> b!139719 (= e!91163 e!91155)))

(declare-fun res!66820 () Bool)

(declare-fun call!15445 () Bool)

(assert (=> b!139719 (= res!66820 call!15445)))

(assert (=> b!139719 (=> (not res!66820) (not e!91155))))

(declare-fun b!139720 () Bool)

(declare-fun e!91164 () Bool)

(assert (=> b!139720 (= e!91152 e!91164)))

(declare-fun c!26109 () Bool)

(assert (=> b!139720 (= c!26109 (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139721 () Bool)

(assert (=> b!139721 (= e!91159 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139722 () Bool)

(declare-fun lt!73135 () ListLongMap!1747)

(assert (=> b!139722 (= e!91155 (= (apply!120 lt!73135 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun bm!15443 () Bool)

(assert (=> bm!15443 (= call!15443 call!15446)))

(declare-fun b!139723 () Bool)

(declare-fun call!15449 () Bool)

(assert (=> b!139723 (= e!91164 (not call!15449))))

(declare-fun b!139724 () Bool)

(declare-fun e!91160 () Bool)

(assert (=> b!139724 (= e!91160 (= (apply!120 lt!73135 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun bm!15444 () Bool)

(assert (=> bm!15444 (= call!15446 call!15444)))

(declare-fun b!139725 () Bool)

(declare-fun e!91153 () Bool)

(assert (=> b!139725 (= e!91162 e!91153)))

(declare-fun res!66823 () Bool)

(assert (=> b!139725 (=> (not res!66823) (not e!91153))))

(assert (=> b!139725 (= res!66823 (contains!921 lt!73135 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139725 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun bm!15445 () Bool)

(assert (=> bm!15445 (= call!15445 (contains!921 lt!73135 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139726 () Bool)

(assert (=> b!139726 (= e!91153 (= (apply!120 lt!73135 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139726 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_values!2923 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> b!139726 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!139727 () Bool)

(declare-fun e!91157 () Bool)

(assert (=> b!139727 (= e!91157 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139728 () Bool)

(declare-fun c!26114 () Bool)

(assert (=> b!139728 (= c!26114 (and (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139728 (= e!91161 e!91158)))

(declare-fun b!139729 () Bool)

(assert (=> b!139729 (= e!91154 (+!174 call!15447 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun d!43455 () Bool)

(assert (=> d!43455 e!91152))

(declare-fun res!66817 () Bool)

(assert (=> d!43455 (=> (not res!66817) (not e!91152))))

(assert (=> d!43455 (= res!66817 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun lt!73134 () ListLongMap!1747)

(assert (=> d!43455 (= lt!73135 lt!73134)))

(declare-fun lt!73133 () Unit!4395)

(assert (=> d!43455 (= lt!73133 e!91156)))

(declare-fun c!26112 () Bool)

(assert (=> d!43455 (= c!26112 e!91157)))

(declare-fun res!66821 () Bool)

(assert (=> d!43455 (=> (not res!66821) (not e!91157))))

(assert (=> d!43455 (= res!66821 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43455 (= lt!73134 e!91154)))

(assert (=> d!43455 (= c!26110 (and (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43455 (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992))))))

(assert (=> d!43455 (= (getCurrentListMap!555 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) lt!73135)))

(declare-fun b!139717 () Bool)

(assert (=> b!139717 (= e!91161 call!15448)))

(declare-fun bm!15446 () Bool)

(assert (=> bm!15446 (= call!15449 (contains!921 lt!73135 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139730 () Bool)

(assert (=> b!139730 (= e!91164 e!91160)))

(declare-fun res!66822 () Bool)

(assert (=> b!139730 (= res!66822 call!15449)))

(assert (=> b!139730 (=> (not res!66822) (not e!91160))))

(declare-fun b!139731 () Bool)

(assert (=> b!139731 (= e!91163 (not call!15445))))

(declare-fun b!139732 () Bool)

(declare-fun res!66818 () Bool)

(assert (=> b!139732 (=> (not res!66818) (not e!91152))))

(assert (=> b!139732 (= res!66818 e!91163)))

(declare-fun c!26111 () Bool)

(assert (=> b!139732 (= c!26111 (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43455 c!26110) b!139729))

(assert (= (and d!43455 (not c!26110)) b!139716))

(assert (= (and b!139716 c!26113) b!139717))

(assert (= (and b!139716 (not c!26113)) b!139728))

(assert (= (and b!139728 c!26114) b!139715))

(assert (= (and b!139728 (not c!26114)) b!139712))

(assert (= (or b!139715 b!139712) bm!15443))

(assert (= (or b!139717 bm!15443) bm!15444))

(assert (= (or b!139717 b!139715) bm!15440))

(assert (= (or b!139729 bm!15444) bm!15441))

(assert (= (or b!139729 bm!15440) bm!15442))

(assert (= (and d!43455 res!66821) b!139727))

(assert (= (and d!43455 c!26112) b!139713))

(assert (= (and d!43455 (not c!26112)) b!139718))

(assert (= (and d!43455 res!66817) b!139714))

(assert (= (and b!139714 res!66815) b!139721))

(assert (= (and b!139714 (not res!66816)) b!139725))

(assert (= (and b!139725 res!66823) b!139726))

(assert (= (and b!139714 res!66819) b!139732))

(assert (= (and b!139732 c!26111) b!139719))

(assert (= (and b!139732 (not c!26111)) b!139731))

(assert (= (and b!139719 res!66820) b!139722))

(assert (= (or b!139719 b!139731) bm!15445))

(assert (= (and b!139732 res!66818) b!139720))

(assert (= (and b!139720 c!26109) b!139730))

(assert (= (and b!139720 (not c!26109)) b!139723))

(assert (= (and b!139730 res!66822) b!139724))

(assert (= (or b!139730 b!139723) bm!15446))

(declare-fun b_lambda!6287 () Bool)

(assert (=> (not b_lambda!6287) (not b!139726)))

(assert (=> b!139726 t!6356))

(declare-fun b_and!8757 () Bool)

(assert (= b_and!8745 (and (=> t!6356 result!4189) b_and!8757)))

(assert (=> b!139726 t!6358))

(declare-fun b_and!8759 () Bool)

(assert (= b_and!8747 (and (=> t!6358 result!4193) b_and!8759)))

(declare-fun m!166831 () Bool)

(assert (=> b!139729 m!166831))

(declare-fun m!166833 () Bool)

(assert (=> bm!15441 m!166833))

(assert (=> d!43455 m!166827))

(declare-fun m!166835 () Bool)

(assert (=> b!139724 m!166835))

(declare-fun m!166837 () Bool)

(assert (=> bm!15442 m!166837))

(assert (=> b!139726 m!166821))

(assert (=> b!139726 m!166821))

(declare-fun m!166839 () Bool)

(assert (=> b!139726 m!166839))

(assert (=> b!139726 m!166729))

(declare-fun m!166841 () Bool)

(assert (=> b!139726 m!166841))

(assert (=> b!139726 m!166729))

(declare-fun m!166843 () Bool)

(assert (=> b!139726 m!166843))

(assert (=> b!139726 m!166841))

(declare-fun m!166845 () Bool)

(assert (=> bm!15445 m!166845))

(declare-fun m!166847 () Bool)

(assert (=> b!139722 m!166847))

(assert (=> b!139721 m!166821))

(assert (=> b!139721 m!166821))

(declare-fun m!166849 () Bool)

(assert (=> b!139721 m!166849))

(assert (=> b!139725 m!166821))

(assert (=> b!139725 m!166821))

(declare-fun m!166851 () Bool)

(assert (=> b!139725 m!166851))

(assert (=> b!139727 m!166821))

(assert (=> b!139727 m!166821))

(assert (=> b!139727 m!166849))

(declare-fun m!166853 () Bool)

(assert (=> bm!15446 m!166853))

(declare-fun m!166855 () Bool)

(assert (=> b!139713 m!166855))

(declare-fun m!166857 () Bool)

(assert (=> b!139713 m!166857))

(declare-fun m!166859 () Bool)

(assert (=> b!139713 m!166859))

(declare-fun m!166861 () Bool)

(assert (=> b!139713 m!166861))

(declare-fun m!166863 () Bool)

(assert (=> b!139713 m!166863))

(declare-fun m!166865 () Bool)

(assert (=> b!139713 m!166865))

(declare-fun m!166867 () Bool)

(assert (=> b!139713 m!166867))

(declare-fun m!166869 () Bool)

(assert (=> b!139713 m!166869))

(assert (=> b!139713 m!166869))

(declare-fun m!166871 () Bool)

(assert (=> b!139713 m!166871))

(assert (=> b!139713 m!166833))

(declare-fun m!166873 () Bool)

(assert (=> b!139713 m!166873))

(declare-fun m!166875 () Bool)

(assert (=> b!139713 m!166875))

(assert (=> b!139713 m!166861))

(declare-fun m!166877 () Bool)

(assert (=> b!139713 m!166877))

(declare-fun m!166879 () Bool)

(assert (=> b!139713 m!166879))

(assert (=> b!139713 m!166821))

(declare-fun m!166881 () Bool)

(assert (=> b!139713 m!166881))

(assert (=> b!139713 m!166855))

(declare-fun m!166883 () Bool)

(assert (=> b!139713 m!166883))

(assert (=> b!139713 m!166873))

(assert (=> b!139579 d!43455))

(declare-fun d!43457 () Bool)

(assert (=> d!43457 (= (array_inv!1431 (_keys!4699 newMap!16)) (bvsge (size!2586 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139573 d!43457))

(declare-fun d!43459 () Bool)

(assert (=> d!43459 (= (array_inv!1432 (_values!2923 newMap!16)) (bvsge (size!2587 (_values!2923 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139573 d!43459))

(declare-fun d!43461 () Bool)

(declare-fun e!91170 () Bool)

(assert (=> d!43461 e!91170))

(declare-fun res!66826 () Bool)

(assert (=> d!43461 (=> res!66826 e!91170)))

(declare-fun lt!73161 () Bool)

(assert (=> d!43461 (= res!66826 (not lt!73161))))

(declare-fun lt!73164 () Bool)

(assert (=> d!43461 (= lt!73161 lt!73164)))

(declare-fun lt!73162 () Unit!4395)

(declare-fun e!91169 () Unit!4395)

(assert (=> d!43461 (= lt!73162 e!91169)))

(declare-fun c!26117 () Bool)

(assert (=> d!43461 (= c!26117 lt!73164)))

(declare-fun containsKey!179 (List!1764 (_ BitVec 64)) Bool)

(assert (=> d!43461 (= lt!73164 (containsKey!179 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43461 (= (contains!921 lt!73065 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73161)))

(declare-fun b!139739 () Bool)

(declare-fun lt!73163 () Unit!4395)

(assert (=> b!139739 (= e!91169 lt!73163)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!128 (List!1764 (_ BitVec 64)) Unit!4395)

(assert (=> b!139739 (= lt!73163 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-datatypes ((Option!181 0))(
  ( (Some!180 (v!3283 V!3555)) (None!179) )
))
(declare-fun isDefined!129 (Option!181) Bool)

(declare-fun getValueByKey!175 (List!1764 (_ BitVec 64)) Option!181)

(assert (=> b!139739 (isDefined!129 (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139740 () Bool)

(declare-fun Unit!4398 () Unit!4395)

(assert (=> b!139740 (= e!91169 Unit!4398)))

(declare-fun b!139741 () Bool)

(assert (=> b!139741 (= e!91170 (isDefined!129 (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (= (and d!43461 c!26117) b!139739))

(assert (= (and d!43461 (not c!26117)) b!139740))

(assert (= (and d!43461 (not res!66826)) b!139741))

(assert (=> d!43461 m!166733))

(declare-fun m!166885 () Bool)

(assert (=> d!43461 m!166885))

(assert (=> b!139739 m!166733))

(declare-fun m!166887 () Bool)

(assert (=> b!139739 m!166887))

(assert (=> b!139739 m!166733))

(declare-fun m!166889 () Bool)

(assert (=> b!139739 m!166889))

(assert (=> b!139739 m!166889))

(declare-fun m!166891 () Bool)

(assert (=> b!139739 m!166891))

(assert (=> b!139741 m!166733))

(assert (=> b!139741 m!166889))

(assert (=> b!139741 m!166889))

(assert (=> b!139741 m!166891))

(assert (=> b!139569 d!43461))

(declare-fun bm!15495 () Bool)

(declare-datatypes ((SeekEntryResult!289 0))(
  ( (MissingZero!289 (index!3319 (_ BitVec 32))) (Found!289 (index!3320 (_ BitVec 32))) (Intermediate!289 (undefined!1101 Bool) (index!3321 (_ BitVec 32)) (x!16146 (_ BitVec 32))) (Undefined!289) (MissingVacant!289 (index!3322 (_ BitVec 32))) )
))
(declare-fun call!15515 () SeekEntryResult!289)

(declare-fun call!15512 () SeekEntryResult!289)

(assert (=> bm!15495 (= call!15515 call!15512)))

(declare-fun call!15503 () Unit!4395)

(declare-fun bm!15496 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4395)

(assert (=> bm!15496 (= call!15503 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(declare-fun b!139818 () Bool)

(declare-fun e!91216 () Bool)

(declare-fun e!91223 () Bool)

(assert (=> b!139818 (= e!91216 e!91223)))

(declare-fun call!15504 () ListLongMap!1747)

(declare-fun res!66866 () Bool)

(assert (=> b!139818 (= res!66866 (contains!921 call!15504 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!139818 (=> (not res!66866) (not e!91223))))

(declare-fun b!139819 () Bool)

(declare-fun e!91220 () Unit!4395)

(declare-fun lt!73236 () Unit!4395)

(assert (=> b!139819 (= e!91220 lt!73236)))

(declare-fun call!15509 () Unit!4395)

(assert (=> b!139819 (= lt!73236 call!15509)))

(declare-fun lt!73234 () SeekEntryResult!289)

(declare-fun call!15519 () SeekEntryResult!289)

(assert (=> b!139819 (= lt!73234 call!15519)))

(declare-fun res!66863 () Bool)

(assert (=> b!139819 (= res!66863 ((_ is Found!289) lt!73234))))

(declare-fun e!91228 () Bool)

(assert (=> b!139819 (=> (not res!66863) (not e!91228))))

(assert (=> b!139819 e!91228))

(declare-fun bm!15497 () Bool)

(declare-fun call!15500 () ListLongMap!1747)

(assert (=> bm!15497 (= call!15500 (map!1438 newMap!16))))

(declare-fun b!139820 () Bool)

(declare-fun e!91214 () Bool)

(assert (=> b!139820 (= e!91214 e!91216)))

(declare-fun c!26144 () Bool)

(declare-fun lt!73223 () tuple2!2686)

(assert (=> b!139820 (= c!26144 (_1!1353 lt!73223))))

(declare-fun bm!15498 () Bool)

(declare-fun call!15498 () ListLongMap!1747)

(declare-fun call!15511 () ListLongMap!1747)

(assert (=> bm!15498 (= call!15498 call!15511)))

(declare-fun b!139821 () Bool)

(declare-fun c!26148 () Bool)

(declare-fun lt!73228 () SeekEntryResult!289)

(assert (=> b!139821 (= c!26148 ((_ is MissingVacant!289) lt!73228))))

(declare-fun e!91229 () tuple2!2686)

(declare-fun e!91225 () tuple2!2686)

(assert (=> b!139821 (= e!91229 e!91225)))

(declare-fun b!139822 () Bool)

(declare-fun e!91224 () tuple2!2686)

(declare-fun e!91222 () tuple2!2686)

(assert (=> b!139822 (= e!91224 e!91222)))

(declare-fun c!26151 () Bool)

(assert (=> b!139822 (= c!26151 (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!15520 () tuple2!2686)

(declare-fun bm!15499 () Bool)

(declare-fun updateHelperNewKey!65 (LongMapFixedSize!1152 (_ BitVec 64) V!3555 (_ BitVec 32)) tuple2!2686)

(assert (=> bm!15499 (= call!15520 (updateHelperNewKey!65 newMap!16 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))

(declare-fun bm!15500 () Bool)

(declare-fun lt!73219 () array!4898)

(declare-fun c!26153 () Bool)

(declare-fun c!26142 () Bool)

(assert (=> bm!15500 (= call!15511 (getCurrentListMap!555 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun bm!15501 () Bool)

(assert (=> bm!15501 (= call!15519 call!15512)))

(declare-fun bm!15502 () Bool)

(declare-fun call!15502 () Bool)

(declare-fun call!15505 () Bool)

(assert (=> bm!15502 (= call!15502 call!15505)))

(declare-fun b!139823 () Bool)

(declare-fun e!91221 () Bool)

(declare-fun e!91230 () Bool)

(assert (=> b!139823 (= e!91221 e!91230)))

(declare-fun res!66864 () Bool)

(declare-fun call!15499 () Bool)

(assert (=> b!139823 (= res!66864 call!15499)))

(assert (=> b!139823 (=> (not res!66864) (not e!91230))))

(declare-fun b!139824 () Bool)

(declare-fun c!26143 () Bool)

(declare-fun lt!73239 () SeekEntryResult!289)

(assert (=> b!139824 (= c!26143 ((_ is MissingVacant!289) lt!73239))))

(declare-fun e!91213 () Bool)

(assert (=> b!139824 (= e!91213 e!91221)))

(declare-fun b!139825 () Bool)

(declare-fun c!26147 () Bool)

(declare-fun lt!73226 () SeekEntryResult!289)

(assert (=> b!139825 (= c!26147 ((_ is MissingVacant!289) lt!73226))))

(declare-fun e!91219 () Bool)

(declare-fun e!91215 () Bool)

(assert (=> b!139825 (= e!91219 e!91215)))

(declare-fun bm!15503 () Bool)

(declare-fun call!15501 () Bool)

(declare-fun call!15514 () ListLongMap!1747)

(assert (=> bm!15503 (= call!15501 (contains!921 call!15514 (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(declare-fun b!139826 () Bool)

(declare-fun lt!73244 () Unit!4395)

(declare-fun lt!73238 () Unit!4395)

(assert (=> b!139826 (= lt!73244 lt!73238)))

(declare-fun call!15521 () ListLongMap!1747)

(declare-fun call!15506 () ListLongMap!1747)

(assert (=> b!139826 (= call!15521 call!15506)))

(declare-fun lt!73222 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4395)

(assert (=> b!139826 (= lt!73238 (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139826 (= lt!73222 (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!139826 (= e!91222 (tuple2!2687 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!625 newMap!16) (_keys!4699 newMap!16) (_values!2923 newMap!16) (_vacant!625 newMap!16))))))

(declare-fun bm!15504 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4896 (_ BitVec 32)) SeekEntryResult!289)

(assert (=> bm!15504 (= call!15512 (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!139827 () Bool)

(assert (=> b!139827 (= e!91224 e!91229)))

(assert (=> b!139827 (= lt!73228 (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> b!139827 (= c!26142 ((_ is Undefined!289) lt!73228))))

(declare-fun bm!15505 () Bool)

(declare-fun call!15518 () Bool)

(declare-fun call!15517 () Bool)

(assert (=> bm!15505 (= call!15518 call!15517)))

(declare-fun bm!15506 () Bool)

(declare-fun call!15513 () Bool)

(assert (=> bm!15506 (= call!15513 call!15517)))

(declare-fun b!139828 () Bool)

(declare-fun e!91226 () Unit!4395)

(declare-fun Unit!4399 () Unit!4395)

(assert (=> b!139828 (= e!91226 Unit!4399)))

(declare-fun lt!73241 () Unit!4395)

(assert (=> b!139828 (= lt!73241 call!15509)))

(declare-fun lt!73235 () SeekEntryResult!289)

(assert (=> b!139828 (= lt!73235 call!15515)))

(declare-fun res!66858 () Bool)

(assert (=> b!139828 (= res!66858 ((_ is Found!289) lt!73235))))

(declare-fun e!91218 () Bool)

(assert (=> b!139828 (=> (not res!66858) (not e!91218))))

(assert (=> b!139828 e!91218))

(declare-fun lt!73231 () Unit!4395)

(assert (=> b!139828 (= lt!73231 lt!73241)))

(assert (=> b!139828 false))

(declare-fun bm!15507 () Bool)

(assert (=> bm!15507 (= call!15517 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!139829 () Bool)

(declare-fun res!66857 () Bool)

(declare-fun e!91212 () Bool)

(assert (=> b!139829 (=> (not res!66857) (not e!91212))))

(assert (=> b!139829 (= res!66857 call!15499)))

(assert (=> b!139829 (= e!91213 e!91212)))

(declare-fun b!139830 () Bool)

(assert (=> b!139830 (= e!91212 (not call!15513))))

(declare-fun b!139831 () Bool)

(declare-fun res!66856 () Bool)

(declare-fun e!91227 () Bool)

(assert (=> b!139831 (=> (not res!66856) (not e!91227))))

(assert (=> b!139831 (= res!66856 call!15502)))

(assert (=> b!139831 (= e!91219 e!91227)))

(declare-fun bm!15508 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4395)

(assert (=> bm!15508 (= call!15509 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(declare-fun c!26150 () Bool)

(declare-fun bm!15509 () Bool)

(declare-fun call!15507 () Bool)

(declare-fun c!26149 () Bool)

(declare-fun c!26145 () Bool)

(declare-fun c!26152 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!15509 (= call!15507 (inRange!0 (ite c!26142 (ite c!26150 (index!3320 lt!73235) (ite c!26145 (index!3319 lt!73239) (index!3322 lt!73239))) (ite c!26152 (index!3320 lt!73234) (ite c!26149 (index!3319 lt!73226) (index!3322 lt!73226)))) (mask!7280 newMap!16)))))

(declare-fun b!139832 () Bool)

(declare-fun res!66867 () Bool)

(assert (=> b!139832 (= res!66867 call!15505)))

(assert (=> b!139832 (=> (not res!66867) (not e!91228))))

(declare-fun b!139833 () Bool)

(declare-fun res!66865 () Bool)

(assert (=> b!139833 (=> (not res!66865) (not e!91212))))

(assert (=> b!139833 (= res!66865 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!73239)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139834 () Bool)

(declare-fun res!66855 () Bool)

(assert (=> b!139834 (=> (not res!66855) (not e!91227))))

(assert (=> b!139834 (= res!66855 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!73226)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139835 () Bool)

(assert (=> b!139835 (= e!91227 (not call!15518))))

(declare-fun b!139836 () Bool)

(declare-fun e!91211 () Bool)

(assert (=> b!139836 (= e!91215 e!91211)))

(declare-fun res!66860 () Bool)

(assert (=> b!139836 (= res!66860 call!15502)))

(assert (=> b!139836 (=> (not res!66860) (not e!91211))))

(declare-fun b!139837 () Bool)

(assert (=> b!139837 (= e!91228 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73234)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139838 () Bool)

(assert (=> b!139838 (= e!91215 ((_ is Undefined!289) lt!73226))))

(declare-fun bm!15510 () Bool)

(declare-fun call!15508 () ListLongMap!1747)

(assert (=> bm!15510 (= call!15506 call!15508)))

(declare-fun b!139839 () Bool)

(assert (=> b!139839 (= e!91218 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73235)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139840 () Bool)

(declare-fun lt!73220 () Unit!4395)

(declare-fun lt!73225 () Unit!4395)

(assert (=> b!139840 (= lt!73220 lt!73225)))

(assert (=> b!139840 (= call!15521 call!15506)))

(declare-fun lt!73240 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!65 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4395)

(assert (=> b!139840 (= lt!73225 (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73240 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139840 (= lt!73240 (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!139840 (= e!91222 (tuple2!2687 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (bvor (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (_size!625 newMap!16) (_keys!4699 newMap!16) (_values!2923 newMap!16) (_vacant!625 newMap!16))))))

(declare-fun b!139841 () Bool)

(declare-fun lt!73242 () Unit!4395)

(declare-fun lt!73233 () Unit!4395)

(assert (=> b!139841 (= lt!73242 lt!73233)))

(assert (=> b!139841 call!15501))

(declare-fun lemmaValidKeyInArrayIsInListMap!123 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) Unit!4395)

(assert (=> b!139841 (= lt!73233 (lemmaValidKeyInArrayIsInListMap!123 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (defaultEntry!2940 newMap!16)))))

(assert (=> b!139841 (= lt!73219 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))))))

(declare-fun lt!73221 () Unit!4395)

(declare-fun lt!73243 () Unit!4395)

(assert (=> b!139841 (= lt!73221 lt!73243)))

(declare-fun call!15516 () ListLongMap!1747)

(assert (=> b!139841 (= call!15516 (getCurrentListMap!555 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4395)

(assert (=> b!139841 (= lt!73243 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73227 () Unit!4395)

(assert (=> b!139841 (= lt!73227 e!91220)))

(assert (=> b!139841 (= c!26152 (contains!921 call!15508 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!91217 () tuple2!2686)

(assert (=> b!139841 (= e!91217 (tuple2!2687 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (_size!625 newMap!16) (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (_vacant!625 newMap!16))))))

(declare-fun bm!15511 () Bool)

(assert (=> bm!15511 (= call!15505 call!15507)))

(declare-fun b!139842 () Bool)

(assert (=> b!139842 (= e!91216 (= call!15504 call!15500))))

(declare-fun b!139843 () Bool)

(assert (=> b!139843 (= e!91221 ((_ is Undefined!289) lt!73239))))

(declare-fun b!139844 () Bool)

(declare-fun lt!73224 () tuple2!2686)

(assert (=> b!139844 (= e!91225 (tuple2!2687 (_1!1353 lt!73224) (_2!1353 lt!73224)))))

(assert (=> b!139844 (= lt!73224 call!15520)))

(declare-fun d!43463 () Bool)

(assert (=> d!43463 e!91214))

(declare-fun res!66861 () Bool)

(assert (=> d!43463 (=> (not res!66861) (not e!91214))))

(assert (=> d!43463 (= res!66861 (valid!554 (_2!1353 lt!73223)))))

(assert (=> d!43463 (= lt!73223 e!91224)))

(assert (=> d!43463 (= c!26153 (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvneg (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!43463 (valid!554 newMap!16)))

(assert (=> d!43463 (= (update!210 newMap!16 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!73223)))

(declare-fun b!139845 () Bool)

(assert (=> b!139845 (= e!91225 e!91217)))

(declare-fun c!26146 () Bool)

(assert (=> b!139845 (= c!26146 ((_ is MissingZero!289) lt!73228))))

(declare-fun bm!15512 () Bool)

(assert (=> bm!15512 (= call!15521 call!15516)))

(declare-fun b!139846 () Bool)

(declare-fun res!66859 () Bool)

(assert (=> b!139846 (= res!66859 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!73239)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139846 (=> (not res!66859) (not e!91230))))

(declare-fun bm!15513 () Bool)

(assert (=> bm!15513 (= call!15514 call!15511)))

(declare-fun b!139847 () Bool)

(declare-fun lt!73245 () tuple2!2686)

(assert (=> b!139847 (= lt!73245 call!15520)))

(assert (=> b!139847 (= e!91217 (tuple2!2687 (_1!1353 lt!73245) (_2!1353 lt!73245)))))

(declare-fun b!139848 () Bool)

(assert (=> b!139848 (= e!91230 (not call!15513))))

(declare-fun b!139849 () Bool)

(assert (=> b!139849 (= e!91223 (= call!15504 (+!174 call!15500 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15514 () Bool)

(assert (=> bm!15514 (= call!15508 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!139850 () Bool)

(declare-fun lt!73229 () Unit!4395)

(assert (=> b!139850 (= e!91226 lt!73229)))

(assert (=> b!139850 (= lt!73229 call!15503)))

(assert (=> b!139850 (= lt!73239 call!15515)))

(assert (=> b!139850 (= c!26145 ((_ is MissingZero!289) lt!73239))))

(assert (=> b!139850 e!91213))

(declare-fun bm!15515 () Bool)

(declare-fun call!15510 () Bool)

(assert (=> bm!15515 (= call!15499 call!15510)))

(declare-fun b!139851 () Bool)

(assert (=> b!139851 (= e!91211 (not call!15518))))

(declare-fun b!139852 () Bool)

(declare-fun lt!73237 () Unit!4395)

(assert (=> b!139852 (= lt!73237 e!91226)))

(assert (=> b!139852 (= c!26150 call!15501)))

(assert (=> b!139852 (= e!91229 (tuple2!2687 false newMap!16))))

(declare-fun b!139853 () Bool)

(declare-fun Unit!4400 () Unit!4395)

(assert (=> b!139853 (= e!91220 Unit!4400)))

(declare-fun lt!73230 () Unit!4395)

(assert (=> b!139853 (= lt!73230 call!15503)))

(assert (=> b!139853 (= lt!73226 call!15519)))

(assert (=> b!139853 (= c!26149 ((_ is MissingZero!289) lt!73226))))

(assert (=> b!139853 e!91219))

(declare-fun lt!73232 () Unit!4395)

(assert (=> b!139853 (= lt!73232 lt!73230)))

(assert (=> b!139853 false))

(declare-fun bm!15516 () Bool)

(assert (=> bm!15516 (= call!15504 (map!1438 (_2!1353 lt!73223)))))

(declare-fun b!139854 () Bool)

(declare-fun res!66862 () Bool)

(assert (=> b!139854 (= res!66862 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!73226)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139854 (=> (not res!66862) (not e!91211))))

(declare-fun bm!15517 () Bool)

(assert (=> bm!15517 (= call!15516 (+!174 (ite c!26153 call!15498 call!15508) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15518 () Bool)

(assert (=> bm!15518 (= call!15510 call!15507)))

(declare-fun b!139855 () Bool)

(declare-fun res!66868 () Bool)

(assert (=> b!139855 (= res!66868 call!15510)))

(assert (=> b!139855 (=> (not res!66868) (not e!91218))))

(assert (= (and d!43463 c!26153) b!139822))

(assert (= (and d!43463 (not c!26153)) b!139827))

(assert (= (and b!139822 c!26151) b!139840))

(assert (= (and b!139822 (not c!26151)) b!139826))

(assert (= (or b!139840 b!139826) bm!15510))

(assert (= (or b!139840 b!139826) bm!15498))

(assert (= (or b!139840 b!139826) bm!15512))

(assert (= (and b!139827 c!26142) b!139852))

(assert (= (and b!139827 (not c!26142)) b!139821))

(assert (= (and b!139852 c!26150) b!139828))

(assert (= (and b!139852 (not c!26150)) b!139850))

(assert (= (and b!139828 res!66858) b!139855))

(assert (= (and b!139855 res!66868) b!139839))

(assert (= (and b!139850 c!26145) b!139829))

(assert (= (and b!139850 (not c!26145)) b!139824))

(assert (= (and b!139829 res!66857) b!139833))

(assert (= (and b!139833 res!66865) b!139830))

(assert (= (and b!139824 c!26143) b!139823))

(assert (= (and b!139824 (not c!26143)) b!139843))

(assert (= (and b!139823 res!66864) b!139846))

(assert (= (and b!139846 res!66859) b!139848))

(assert (= (or b!139829 b!139823) bm!15515))

(assert (= (or b!139830 b!139848) bm!15506))

(assert (= (or b!139855 bm!15515) bm!15518))

(assert (= (or b!139828 b!139850) bm!15495))

(assert (= (and b!139821 c!26148) b!139844))

(assert (= (and b!139821 (not c!26148)) b!139845))

(assert (= (and b!139845 c!26146) b!139847))

(assert (= (and b!139845 (not c!26146)) b!139841))

(assert (= (and b!139841 c!26152) b!139819))

(assert (= (and b!139841 (not c!26152)) b!139853))

(assert (= (and b!139819 res!66863) b!139832))

(assert (= (and b!139832 res!66867) b!139837))

(assert (= (and b!139853 c!26149) b!139831))

(assert (= (and b!139853 (not c!26149)) b!139825))

(assert (= (and b!139831 res!66856) b!139834))

(assert (= (and b!139834 res!66855) b!139835))

(assert (= (and b!139825 c!26147) b!139836))

(assert (= (and b!139825 (not c!26147)) b!139838))

(assert (= (and b!139836 res!66860) b!139854))

(assert (= (and b!139854 res!66862) b!139851))

(assert (= (or b!139831 b!139836) bm!15502))

(assert (= (or b!139835 b!139851) bm!15505))

(assert (= (or b!139832 bm!15502) bm!15511))

(assert (= (or b!139819 b!139853) bm!15501))

(assert (= (or b!139844 b!139847) bm!15499))

(assert (= (or b!139828 b!139819) bm!15508))

(assert (= (or b!139852 b!139841) bm!15513))

(assert (= (or bm!15518 bm!15511) bm!15509))

(assert (= (or bm!15495 bm!15501) bm!15504))

(assert (= (or b!139850 b!139853) bm!15496))

(assert (= (or bm!15506 bm!15505) bm!15507))

(assert (= (or b!139852 b!139841) bm!15503))

(assert (= (or bm!15498 bm!15513) bm!15500))

(assert (= (or bm!15510 b!139841) bm!15514))

(assert (= (or bm!15512 b!139841) bm!15517))

(assert (= (and d!43463 res!66861) b!139820))

(assert (= (and b!139820 c!26144) b!139818))

(assert (= (and b!139820 (not c!26144)) b!139842))

(assert (= (and b!139818 res!66866) b!139849))

(assert (= (or b!139818 b!139849 b!139842) bm!15516))

(assert (= (or b!139849 b!139842) bm!15497))

(assert (=> b!139840 m!166731))

(declare-fun m!166893 () Bool)

(assert (=> b!139840 m!166893))

(assert (=> b!139826 m!166731))

(declare-fun m!166895 () Bool)

(assert (=> b!139826 m!166895))

(declare-fun m!166897 () Bool)

(assert (=> b!139837 m!166897))

(declare-fun m!166899 () Bool)

(assert (=> bm!15514 m!166899))

(declare-fun m!166901 () Bool)

(assert (=> b!139849 m!166901))

(assert (=> b!139827 m!166733))

(declare-fun m!166903 () Bool)

(assert (=> b!139827 m!166903))

(assert (=> bm!15499 m!166733))

(assert (=> bm!15499 m!166731))

(declare-fun m!166905 () Bool)

(assert (=> bm!15499 m!166905))

(declare-fun m!166907 () Bool)

(assert (=> b!139854 m!166907))

(declare-fun m!166909 () Bool)

(assert (=> d!43463 m!166909))

(assert (=> d!43463 m!166739))

(declare-fun m!166911 () Bool)

(assert (=> b!139846 m!166911))

(assert (=> bm!15504 m!166733))

(assert (=> bm!15504 m!166903))

(declare-fun m!166913 () Bool)

(assert (=> b!139841 m!166913))

(assert (=> b!139841 m!166733))

(declare-fun m!166915 () Bool)

(assert (=> b!139841 m!166915))

(declare-fun m!166917 () Bool)

(assert (=> b!139841 m!166917))

(declare-fun m!166919 () Bool)

(assert (=> b!139841 m!166919))

(assert (=> b!139841 m!166733))

(assert (=> b!139841 m!166731))

(declare-fun m!166921 () Bool)

(assert (=> b!139841 m!166921))

(declare-fun m!166923 () Bool)

(assert (=> bm!15517 m!166923))

(declare-fun m!166925 () Bool)

(assert (=> b!139834 m!166925))

(assert (=> bm!15496 m!166733))

(declare-fun m!166927 () Bool)

(assert (=> bm!15496 m!166927))

(declare-fun m!166929 () Bool)

(assert (=> b!139833 m!166929))

(assert (=> bm!15507 m!166733))

(declare-fun m!166931 () Bool)

(assert (=> bm!15507 m!166931))

(declare-fun m!166933 () Bool)

(assert (=> bm!15503 m!166933))

(declare-fun m!166935 () Bool)

(assert (=> bm!15503 m!166935))

(declare-fun m!166937 () Bool)

(assert (=> bm!15509 m!166937))

(assert (=> bm!15497 m!166759))

(assert (=> b!139818 m!166733))

(declare-fun m!166939 () Bool)

(assert (=> b!139818 m!166939))

(declare-fun m!166941 () Bool)

(assert (=> bm!15500 m!166941))

(declare-fun m!166943 () Bool)

(assert (=> bm!15516 m!166943))

(declare-fun m!166945 () Bool)

(assert (=> b!139839 m!166945))

(assert (=> bm!15508 m!166733))

(declare-fun m!166947 () Bool)

(assert (=> bm!15508 m!166947))

(assert (=> b!139569 d!43463))

(declare-fun d!43465 () Bool)

(declare-fun c!26156 () Bool)

(assert (=> d!43465 (= c!26156 ((_ is ValueCellFull!1122) (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!91233 () V!3555)

(assert (=> d!43465 (= (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91233)))

(declare-fun b!139860 () Bool)

(declare-fun get!1536 (ValueCell!1122 V!3555) V!3555)

(assert (=> b!139860 (= e!91233 (get!1536 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!139861 () Bool)

(declare-fun get!1537 (ValueCell!1122 V!3555) V!3555)

(assert (=> b!139861 (= e!91233 (get!1537 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43465 c!26156) b!139860))

(assert (= (and d!43465 (not c!26156)) b!139861))

(assert (=> b!139860 m!166727))

(assert (=> b!139860 m!166729))

(declare-fun m!166949 () Bool)

(assert (=> b!139860 m!166949))

(assert (=> b!139861 m!166727))

(assert (=> b!139861 m!166729))

(declare-fun m!166951 () Bool)

(assert (=> b!139861 m!166951))

(assert (=> b!139569 d!43465))

(declare-fun mapIsEmpty!4843 () Bool)

(declare-fun mapRes!4843 () Bool)

(assert (=> mapIsEmpty!4843 mapRes!4843))

(declare-fun condMapEmpty!4843 () Bool)

(declare-fun mapDefault!4843 () ValueCell!1122)

(assert (=> mapNonEmpty!4834 (= condMapEmpty!4843 (= mapRest!4833 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4843)))))

(declare-fun e!91239 () Bool)

(assert (=> mapNonEmpty!4834 (= tp!11558 (and e!91239 mapRes!4843))))

(declare-fun mapNonEmpty!4843 () Bool)

(declare-fun tp!11575 () Bool)

(declare-fun e!91238 () Bool)

(assert (=> mapNonEmpty!4843 (= mapRes!4843 (and tp!11575 e!91238))))

(declare-fun mapValue!4843 () ValueCell!1122)

(declare-fun mapKey!4843 () (_ BitVec 32))

(declare-fun mapRest!4843 () (Array (_ BitVec 32) ValueCell!1122))

(assert (=> mapNonEmpty!4843 (= mapRest!4833 (store mapRest!4843 mapKey!4843 mapValue!4843))))

(declare-fun b!139869 () Bool)

(assert (=> b!139869 (= e!91239 tp_is_empty!2931)))

(declare-fun b!139868 () Bool)

(assert (=> b!139868 (= e!91238 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4834 condMapEmpty!4843) mapIsEmpty!4843))

(assert (= (and mapNonEmpty!4834 (not condMapEmpty!4843)) mapNonEmpty!4843))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1122) mapValue!4843)) b!139868))

(assert (= (and mapNonEmpty!4834 ((_ is ValueCellFull!1122) mapDefault!4843)) b!139869))

(declare-fun m!166953 () Bool)

(assert (=> mapNonEmpty!4843 m!166953))

(declare-fun mapIsEmpty!4844 () Bool)

(declare-fun mapRes!4844 () Bool)

(assert (=> mapIsEmpty!4844 mapRes!4844))

(declare-fun condMapEmpty!4844 () Bool)

(declare-fun mapDefault!4844 () ValueCell!1122)

(assert (=> mapNonEmpty!4833 (= condMapEmpty!4844 (= mapRest!4834 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4844)))))

(declare-fun e!91241 () Bool)

(assert (=> mapNonEmpty!4833 (= tp!11560 (and e!91241 mapRes!4844))))

(declare-fun mapNonEmpty!4844 () Bool)

(declare-fun tp!11576 () Bool)

(declare-fun e!91240 () Bool)

(assert (=> mapNonEmpty!4844 (= mapRes!4844 (and tp!11576 e!91240))))

(declare-fun mapValue!4844 () ValueCell!1122)

(declare-fun mapRest!4844 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4844 () (_ BitVec 32))

(assert (=> mapNonEmpty!4844 (= mapRest!4834 (store mapRest!4844 mapKey!4844 mapValue!4844))))

(declare-fun b!139871 () Bool)

(assert (=> b!139871 (= e!91241 tp_is_empty!2931)))

(declare-fun b!139870 () Bool)

(assert (=> b!139870 (= e!91240 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4833 condMapEmpty!4844) mapIsEmpty!4844))

(assert (= (and mapNonEmpty!4833 (not condMapEmpty!4844)) mapNonEmpty!4844))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1122) mapValue!4844)) b!139870))

(assert (= (and mapNonEmpty!4833 ((_ is ValueCellFull!1122) mapDefault!4844)) b!139871))

(declare-fun m!166955 () Bool)

(assert (=> mapNonEmpty!4844 m!166955))

(declare-fun b_lambda!6289 () Bool)

(assert (= b_lambda!6287 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6289)))

(check-sat (not b!139841) (not b!139840) (not b!139725) (not b!139656) (not bm!15441) (not bm!15445) (not b!139818) (not b_next!3031) (not b!139642) (not bm!15517) (not b!139641) (not d!43461) (not b!139826) (not b!139663) (not d!43437) (not d!43463) (not b_next!3029) b_and!8759 (not b!139721) (not bm!15500) (not d!43453) (not bm!15504) (not b!139653) (not b!139827) (not bm!15497) (not b!139713) b_and!8757 (not b!139668) (not d!43447) (not d!43455) (not b!139724) (not b!139861) (not bm!15516) (not mapNonEmpty!4844) (not b!139722) (not b!139727) (not b!139860) (not mapNonEmpty!4843) (not bm!15442) (not b_lambda!6285) (not b!139640) (not b!139849) (not d!43439) (not bm!15514) (not b!139729) (not b!139654) (not bm!15508) (not b_lambda!6289) tp_is_empty!2931 (not bm!15446) (not b!139739) (not bm!15509) (not bm!15503) (not bm!15507) (not b!139741) (not b!139726) (not bm!15499) (not bm!15425) (not d!43443) (not bm!15496))
(check-sat b_and!8757 b_and!8759 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun bm!15519 () Bool)

(declare-fun call!15527 () ListLongMap!1747)

(declare-fun call!15526 () ListLongMap!1747)

(assert (=> bm!15519 (= call!15527 call!15526)))

(declare-fun b!139872 () Bool)

(declare-fun e!91248 () ListLongMap!1747)

(declare-fun call!15522 () ListLongMap!1747)

(assert (=> b!139872 (= e!91248 call!15522)))

(declare-fun call!15523 () ListLongMap!1747)

(declare-fun bm!15520 () Bool)

(assert (=> bm!15520 (= call!15523 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!139873 () Bool)

(declare-fun e!91246 () Unit!4395)

(declare-fun lt!73263 () Unit!4395)

(assert (=> b!139873 (= e!91246 lt!73263)))

(declare-fun lt!73259 () ListLongMap!1747)

(assert (=> b!139873 (= lt!73259 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73252 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73252 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73257 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73257 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73254 () Unit!4395)

(assert (=> b!139873 (= lt!73254 (addStillContains!96 lt!73259 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73257))))

(assert (=> b!139873 (contains!921 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73257)))

(declare-fun lt!73262 () Unit!4395)

(assert (=> b!139873 (= lt!73262 lt!73254)))

(declare-fun lt!73261 () ListLongMap!1747)

(assert (=> b!139873 (= lt!73261 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73265 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73265 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73267 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73267 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73258 () Unit!4395)

(assert (=> b!139873 (= lt!73258 (addApplyDifferent!96 lt!73261 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73267))))

(assert (=> b!139873 (= (apply!120 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73267) (apply!120 lt!73261 lt!73267))))

(declare-fun lt!73246 () Unit!4395)

(assert (=> b!139873 (= lt!73246 lt!73258)))

(declare-fun lt!73255 () ListLongMap!1747)

(assert (=> b!139873 (= lt!73255 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73260 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73260 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73266 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73266 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73253 () Unit!4395)

(assert (=> b!139873 (= lt!73253 (addApplyDifferent!96 lt!73255 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73266))))

(assert (=> b!139873 (= (apply!120 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73266) (apply!120 lt!73255 lt!73266))))

(declare-fun lt!73251 () Unit!4395)

(assert (=> b!139873 (= lt!73251 lt!73253)))

(declare-fun lt!73264 () ListLongMap!1747)

(assert (=> b!139873 (= lt!73264 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73247 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73247 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73256 () (_ BitVec 64))

(assert (=> b!139873 (= lt!73256 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139873 (= lt!73263 (addApplyDifferent!96 lt!73264 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73256))))

(assert (=> b!139873 (= (apply!120 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73256) (apply!120 lt!73264 lt!73256))))

(declare-fun b!139874 () Bool)

(declare-fun res!66873 () Bool)

(declare-fun e!91242 () Bool)

(assert (=> b!139874 (=> (not res!66873) (not e!91242))))

(declare-fun e!91252 () Bool)

(assert (=> b!139874 (= res!66873 e!91252)))

(declare-fun res!66870 () Bool)

(assert (=> b!139874 (=> res!66870 e!91252)))

(declare-fun e!91249 () Bool)

(assert (=> b!139874 (= res!66870 (not e!91249))))

(declare-fun res!66869 () Bool)

(assert (=> b!139874 (=> (not res!66869) (not e!91249))))

(assert (=> b!139874 (= res!66869 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!139875 () Bool)

(assert (=> b!139875 (= e!91248 call!15527)))

(declare-fun b!139876 () Bool)

(declare-fun e!91244 () ListLongMap!1747)

(declare-fun e!91251 () ListLongMap!1747)

(assert (=> b!139876 (= e!91244 e!91251)))

(declare-fun c!26161 () Bool)

(assert (=> b!139876 (= c!26161 (and (not (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!15525 () ListLongMap!1747)

(declare-fun bm!15521 () Bool)

(declare-fun c!26158 () Bool)

(assert (=> bm!15521 (= call!15526 (+!174 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)) (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!139878 () Bool)

(declare-fun Unit!4401 () Unit!4395)

(assert (=> b!139878 (= e!91246 Unit!4401)))

(declare-fun b!139879 () Bool)

(declare-fun e!91253 () Bool)

(declare-fun e!91245 () Bool)

(assert (=> b!139879 (= e!91253 e!91245)))

(declare-fun res!66874 () Bool)

(declare-fun call!15524 () Bool)

(assert (=> b!139879 (= res!66874 call!15524)))

(assert (=> b!139879 (=> (not res!66874) (not e!91245))))

(declare-fun b!139880 () Bool)

(declare-fun e!91254 () Bool)

(assert (=> b!139880 (= e!91242 e!91254)))

(declare-fun c!26157 () Bool)

(assert (=> b!139880 (= c!26157 (not (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139881 () Bool)

(assert (=> b!139881 (= e!91249 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!73250 () ListLongMap!1747)

(declare-fun b!139882 () Bool)

(assert (=> b!139882 (= e!91245 (= (apply!120 lt!73250 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))

(declare-fun bm!15522 () Bool)

(assert (=> bm!15522 (= call!15522 call!15525)))

(declare-fun b!139883 () Bool)

(declare-fun call!15528 () Bool)

(assert (=> b!139883 (= e!91254 (not call!15528))))

(declare-fun e!91250 () Bool)

(declare-fun b!139884 () Bool)

(assert (=> b!139884 (= e!91250 (= (apply!120 lt!73250 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))

(declare-fun bm!15523 () Bool)

(assert (=> bm!15523 (= call!15525 call!15523)))

(declare-fun b!139885 () Bool)

(declare-fun e!91243 () Bool)

(assert (=> b!139885 (= e!91252 e!91243)))

(declare-fun res!66877 () Bool)

(assert (=> b!139885 (=> (not res!66877) (not e!91243))))

(assert (=> b!139885 (= res!66877 (contains!921 lt!73250 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!139885 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun bm!15524 () Bool)

(assert (=> bm!15524 (= call!15524 (contains!921 lt!73250 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139886 () Bool)

(assert (=> b!139886 (= e!91243 (= (apply!120 lt!73250 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139886 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(assert (=> b!139886 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!139887 () Bool)

(declare-fun e!91247 () Bool)

(assert (=> b!139887 (= e!91247 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun c!26162 () Bool)

(declare-fun b!139888 () Bool)

(assert (=> b!139888 (= c!26162 (and (not (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!139888 (= e!91251 e!91248)))

(declare-fun b!139889 () Bool)

(assert (=> b!139889 (= e!91244 (+!174 call!15526 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun d!43467 () Bool)

(assert (=> d!43467 e!91242))

(declare-fun res!66871 () Bool)

(assert (=> d!43467 (=> (not res!66871) (not e!91242))))

(assert (=> d!43467 (= res!66871 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun lt!73249 () ListLongMap!1747)

(assert (=> d!43467 (= lt!73250 lt!73249)))

(declare-fun lt!73248 () Unit!4395)

(assert (=> d!43467 (= lt!73248 e!91246)))

(declare-fun c!26160 () Bool)

(assert (=> d!43467 (= c!26160 e!91247)))

(declare-fun res!66875 () Bool)

(assert (=> d!43467 (=> (not res!66875) (not e!91247))))

(assert (=> d!43467 (= res!66875 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43467 (= lt!73249 e!91244)))

(assert (=> d!43467 (= c!26158 (and (not (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43467 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43467 (= (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73250)))

(declare-fun b!139877 () Bool)

(assert (=> b!139877 (= e!91251 call!15527)))

(declare-fun bm!15525 () Bool)

(assert (=> bm!15525 (= call!15528 (contains!921 lt!73250 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!139890 () Bool)

(assert (=> b!139890 (= e!91254 e!91250)))

(declare-fun res!66876 () Bool)

(assert (=> b!139890 (= res!66876 call!15528)))

(assert (=> b!139890 (=> (not res!66876) (not e!91250))))

(declare-fun b!139891 () Bool)

(assert (=> b!139891 (= e!91253 (not call!15524))))

(declare-fun b!139892 () Bool)

(declare-fun res!66872 () Bool)

(assert (=> b!139892 (=> (not res!66872) (not e!91242))))

(assert (=> b!139892 (= res!66872 e!91253)))

(declare-fun c!26159 () Bool)

(assert (=> b!139892 (= c!26159 (not (= (bvand (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43467 c!26158) b!139889))

(assert (= (and d!43467 (not c!26158)) b!139876))

(assert (= (and b!139876 c!26161) b!139877))

(assert (= (and b!139876 (not c!26161)) b!139888))

(assert (= (and b!139888 c!26162) b!139875))

(assert (= (and b!139888 (not c!26162)) b!139872))

(assert (= (or b!139875 b!139872) bm!15522))

(assert (= (or b!139877 bm!15522) bm!15523))

(assert (= (or b!139877 b!139875) bm!15519))

(assert (= (or b!139889 bm!15523) bm!15520))

(assert (= (or b!139889 bm!15519) bm!15521))

(assert (= (and d!43467 res!66875) b!139887))

(assert (= (and d!43467 c!26160) b!139873))

(assert (= (and d!43467 (not c!26160)) b!139878))

(assert (= (and d!43467 res!66871) b!139874))

(assert (= (and b!139874 res!66869) b!139881))

(assert (= (and b!139874 (not res!66870)) b!139885))

(assert (= (and b!139885 res!66877) b!139886))

(assert (= (and b!139874 res!66873) b!139892))

(assert (= (and b!139892 c!26159) b!139879))

(assert (= (and b!139892 (not c!26159)) b!139891))

(assert (= (and b!139879 res!66874) b!139882))

(assert (= (or b!139879 b!139891) bm!15524))

(assert (= (and b!139892 res!66872) b!139880))

(assert (= (and b!139880 c!26157) b!139890))

(assert (= (and b!139880 (not c!26157)) b!139883))

(assert (= (and b!139890 res!66876) b!139884))

(assert (= (or b!139890 b!139883) bm!15525))

(declare-fun b_lambda!6291 () Bool)

(assert (=> (not b_lambda!6291) (not b!139886)))

(declare-fun tb!2565 () Bool)

(declare-fun t!6366 () Bool)

(assert (=> (and b!139567 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16)) t!6366) tb!2565))

(declare-fun result!4203 () Bool)

(assert (=> tb!2565 (= result!4203 tp_is_empty!2931)))

(assert (=> b!139886 t!6366))

(declare-fun b_and!8761 () Bool)

(assert (= b_and!8757 (and (=> t!6366 result!4203) b_and!8761)))

(declare-fun t!6368 () Bool)

(declare-fun tb!2567 () Bool)

(assert (=> (and b!139573 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 newMap!16)) t!6368) tb!2567))

(declare-fun result!4205 () Bool)

(assert (= result!4205 result!4203))

(assert (=> b!139886 t!6368))

(declare-fun b_and!8763 () Bool)

(assert (= b_and!8759 (and (=> t!6368 result!4205) b_and!8763)))

(declare-fun m!166957 () Bool)

(assert (=> b!139889 m!166957))

(declare-fun m!166959 () Bool)

(assert (=> bm!15520 m!166959))

(declare-fun m!166961 () Bool)

(assert (=> d!43467 m!166961))

(declare-fun m!166963 () Bool)

(assert (=> b!139884 m!166963))

(declare-fun m!166965 () Bool)

(assert (=> bm!15521 m!166965))

(declare-fun m!166967 () Bool)

(assert (=> b!139886 m!166967))

(assert (=> b!139886 m!166967))

(declare-fun m!166969 () Bool)

(assert (=> b!139886 m!166969))

(declare-fun m!166971 () Bool)

(assert (=> b!139886 m!166971))

(declare-fun m!166973 () Bool)

(assert (=> b!139886 m!166973))

(assert (=> b!139886 m!166971))

(declare-fun m!166975 () Bool)

(assert (=> b!139886 m!166975))

(assert (=> b!139886 m!166973))

(declare-fun m!166977 () Bool)

(assert (=> bm!15524 m!166977))

(declare-fun m!166979 () Bool)

(assert (=> b!139882 m!166979))

(assert (=> b!139881 m!166967))

(assert (=> b!139881 m!166967))

(declare-fun m!166981 () Bool)

(assert (=> b!139881 m!166981))

(assert (=> b!139885 m!166967))

(assert (=> b!139885 m!166967))

(declare-fun m!166983 () Bool)

(assert (=> b!139885 m!166983))

(assert (=> b!139887 m!166967))

(assert (=> b!139887 m!166967))

(assert (=> b!139887 m!166981))

(declare-fun m!166985 () Bool)

(assert (=> bm!15525 m!166985))

(declare-fun m!166987 () Bool)

(assert (=> b!139873 m!166987))

(declare-fun m!166989 () Bool)

(assert (=> b!139873 m!166989))

(declare-fun m!166991 () Bool)

(assert (=> b!139873 m!166991))

(declare-fun m!166993 () Bool)

(assert (=> b!139873 m!166993))

(declare-fun m!166995 () Bool)

(assert (=> b!139873 m!166995))

(declare-fun m!166997 () Bool)

(assert (=> b!139873 m!166997))

(declare-fun m!166999 () Bool)

(assert (=> b!139873 m!166999))

(declare-fun m!167001 () Bool)

(assert (=> b!139873 m!167001))

(assert (=> b!139873 m!167001))

(declare-fun m!167003 () Bool)

(assert (=> b!139873 m!167003))

(assert (=> b!139873 m!166959))

(declare-fun m!167005 () Bool)

(assert (=> b!139873 m!167005))

(declare-fun m!167007 () Bool)

(assert (=> b!139873 m!167007))

(assert (=> b!139873 m!166993))

(declare-fun m!167009 () Bool)

(assert (=> b!139873 m!167009))

(declare-fun m!167011 () Bool)

(assert (=> b!139873 m!167011))

(assert (=> b!139873 m!166967))

(declare-fun m!167013 () Bool)

(assert (=> b!139873 m!167013))

(assert (=> b!139873 m!166987))

(declare-fun m!167015 () Bool)

(assert (=> b!139873 m!167015))

(assert (=> b!139873 m!167005))

(assert (=> bm!15514 d!43467))

(assert (=> b!139668 d!43445))

(declare-fun d!43469 () Bool)

(declare-fun get!1538 (Option!181) V!3555)

(assert (=> d!43469 (= (apply!120 lt!73135 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5841 () Bool)

(assert (= bs!5841 d!43469))

(declare-fun m!167017 () Bool)

(assert (=> bs!5841 m!167017))

(assert (=> bs!5841 m!167017))

(declare-fun m!167019 () Bool)

(assert (=> bs!5841 m!167019))

(assert (=> b!139724 d!43469))

(declare-fun b!139927 () Bool)

(declare-fun e!91276 () Unit!4395)

(declare-fun lt!73352 () Unit!4395)

(assert (=> b!139927 (= e!91276 lt!73352)))

(assert (=> b!139927 (= lt!73352 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73331 () SeekEntryResult!289)

(declare-fun call!15540 () SeekEntryResult!289)

(assert (=> b!139927 (= lt!73331 call!15540)))

(declare-fun c!26172 () Bool)

(assert (=> b!139927 (= c!26172 ((_ is MissingZero!289) lt!73331))))

(declare-fun e!91273 () Bool)

(assert (=> b!139927 e!91273))

(declare-fun bm!15534 () Bool)

(assert (=> bm!15534 (= call!15540 (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!139928 () Bool)

(declare-fun e!91272 () Bool)

(declare-fun call!15538 () Bool)

(assert (=> b!139928 (= e!91272 (not call!15538))))

(declare-fun b!139929 () Bool)

(declare-fun e!91277 () Bool)

(assert (=> b!139929 (= e!91277 ((_ is Undefined!289) lt!73331))))

(declare-fun bm!15535 () Bool)

(declare-fun call!15539 () Bool)

(declare-fun call!15537 () Bool)

(assert (=> bm!15535 (= call!15539 call!15537)))

(declare-fun d!43471 () Bool)

(declare-fun e!91278 () Bool)

(assert (=> d!43471 e!91278))

(declare-fun res!66900 () Bool)

(assert (=> d!43471 (=> (not res!66900) (not e!91278))))

(declare-fun lt!73341 () tuple2!2686)

(assert (=> d!43471 (= res!66900 (_1!1353 lt!73341))))

(assert (=> d!43471 (= lt!73341 (tuple2!2687 true (LongMapFixedSize!1153 (defaultEntry!2940 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd (_size!625 newMap!16) #b00000000000000000000000000000001) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (_vacant!625 newMap!16))))))

(declare-fun lt!73344 () Unit!4395)

(declare-fun lt!73340 () Unit!4395)

(assert (=> d!43471 (= lt!73344 lt!73340)))

(declare-fun lt!73346 () array!4896)

(declare-fun lt!73351 () array!4898)

(assert (=> d!43471 (contains!921 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))

(assert (=> d!43471 (= lt!73340 (lemmaValidKeyInArrayIsInListMap!123 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43471 (= lt!73351 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))))))

(assert (=> d!43471 (= lt!73346 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun lt!73353 () Unit!4395)

(declare-fun lt!73335 () Unit!4395)

(assert (=> d!43471 (= lt!73353 lt!73335)))

(declare-fun lt!73355 () array!4896)

(assert (=> d!43471 (= (arrayCountValidKeys!0 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4896 (_ BitVec 32)) Unit!4395)

(assert (=> d!43471 (= lt!73335 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))

(assert (=> d!43471 (= lt!73355 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun lt!73345 () Unit!4395)

(declare-fun lt!73343 () Unit!4395)

(assert (=> d!43471 (= lt!73345 lt!73343)))

(declare-fun lt!73348 () array!4896)

(assert (=> d!43471 (arrayContainsKey!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4896 (_ BitVec 64) (_ BitVec 32)) Unit!4395)

(assert (=> d!43471 (= lt!73343 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))

(assert (=> d!43471 (= lt!73348 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun lt!73330 () Unit!4395)

(declare-fun lt!73347 () Unit!4395)

(assert (=> d!43471 (= lt!73330 lt!73347)))

(assert (=> d!43471 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!45 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4395)

(assert (=> d!43471 (= lt!73347 (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73338 () Unit!4395)

(declare-fun lt!73333 () Unit!4395)

(assert (=> d!43471 (= lt!73338 lt!73333)))

(assert (=> d!43471 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4896 (_ BitVec 32) (_ BitVec 32)) Unit!4395)

(assert (=> d!43471 (= lt!73333 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (mask!7280 newMap!16)))))

(declare-fun lt!73328 () Unit!4395)

(declare-fun lt!73357 () Unit!4395)

(assert (=> d!43471 (= lt!73328 lt!73357)))

(assert (=> d!43471 (= (arrayCountValidKeys!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4896 (_ BitVec 32) (_ BitVec 64)) Unit!4395)

(assert (=> d!43471 (= lt!73357 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun lt!73339 () Unit!4395)

(declare-fun lt!73329 () Unit!4395)

(assert (=> d!43471 (= lt!73339 lt!73329)))

(declare-fun lt!73336 () List!1763)

(declare-fun lt!73334 () (_ BitVec 32))

(assert (=> d!43471 (arrayNoDuplicates!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73334 lt!73336)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4896 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1763) Unit!4395)

(assert (=> d!43471 (= lt!73329 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) lt!73334 lt!73336))))

(assert (=> d!43471 (= lt!73336 Nil!1760)))

(assert (=> d!43471 (= lt!73334 #b00000000000000000000000000000000)))

(declare-fun lt!73350 () Unit!4395)

(declare-fun e!91271 () Unit!4395)

(assert (=> d!43471 (= lt!73350 e!91271)))

(declare-fun c!26173 () Bool)

(assert (=> d!43471 (= c!26173 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!73332 () Unit!4395)

(assert (=> d!43471 (= lt!73332 e!91276)))

(declare-fun c!26171 () Bool)

(assert (=> d!43471 (= c!26171 (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43471 (valid!554 newMap!16)))

(assert (=> d!43471 (= (updateHelperNewKey!65 newMap!16 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) lt!73341)))

(declare-fun b!139930 () Bool)

(declare-fun Unit!4402 () Unit!4395)

(assert (=> b!139930 (= e!91276 Unit!4402)))

(declare-fun lt!73349 () Unit!4395)

(assert (=> b!139930 (= lt!73349 (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73342 () SeekEntryResult!289)

(assert (=> b!139930 (= lt!73342 call!15540)))

(declare-fun res!66902 () Bool)

(assert (=> b!139930 (= res!66902 ((_ is Found!289) lt!73342))))

(declare-fun e!91274 () Bool)

(assert (=> b!139930 (=> (not res!66902) (not e!91274))))

(assert (=> b!139930 e!91274))

(declare-fun lt!73354 () Unit!4395)

(assert (=> b!139930 (= lt!73354 lt!73349)))

(assert (=> b!139930 false))

(declare-fun b!139931 () Bool)

(assert (=> b!139931 (= e!91277 e!91272)))

(declare-fun res!66899 () Bool)

(assert (=> b!139931 (= res!66899 call!15539)))

(assert (=> b!139931 (=> (not res!66899) (not e!91272))))

(declare-fun b!139932 () Bool)

(declare-fun res!66904 () Bool)

(declare-fun e!91275 () Bool)

(assert (=> b!139932 (=> (not res!66904) (not e!91275))))

(assert (=> b!139932 (= res!66904 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!73331)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15536 () Bool)

(assert (=> bm!15536 (= call!15538 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!139933 () Bool)

(declare-fun res!66898 () Bool)

(assert (=> b!139933 (=> (not res!66898) (not e!91275))))

(assert (=> b!139933 (= res!66898 call!15539)))

(assert (=> b!139933 (= e!91273 e!91275)))

(declare-fun b!139934 () Bool)

(assert (=> b!139934 (= e!91275 (not call!15538))))

(declare-fun b!139935 () Bool)

(declare-fun res!66903 () Bool)

(assert (=> b!139935 (=> (not res!66903) (not e!91278))))

(assert (=> b!139935 (= res!66903 (valid!554 (_2!1353 lt!73341)))))

(declare-fun b!139936 () Bool)

(declare-fun res!66897 () Bool)

(assert (=> b!139936 (= res!66897 call!15537)))

(assert (=> b!139936 (=> (not res!66897) (not e!91274))))

(declare-fun b!139937 () Bool)

(assert (=> b!139937 (= e!91274 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73342)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139938 () Bool)

(declare-fun Unit!4403 () Unit!4395)

(assert (=> b!139938 (= e!91271 Unit!4403)))

(declare-fun lt!73356 () Unit!4395)

(declare-fun lemmaArrayContainsKeyThenInListMap!45 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4395)

(assert (=> b!139938 (= lt!73356 (lemmaArrayContainsKeyThenInListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> b!139938 (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))

(declare-fun lt!73337 () Unit!4395)

(assert (=> b!139938 (= lt!73337 lt!73356)))

(assert (=> b!139938 false))

(declare-fun b!139939 () Bool)

(declare-fun c!26174 () Bool)

(assert (=> b!139939 (= c!26174 ((_ is MissingVacant!289) lt!73331))))

(assert (=> b!139939 (= e!91273 e!91277)))

(declare-fun b!139940 () Bool)

(declare-fun res!66896 () Bool)

(assert (=> b!139940 (=> (not res!66896) (not e!91278))))

(assert (=> b!139940 (= res!66896 (contains!921 (map!1438 (_2!1353 lt!73341)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun bm!15537 () Bool)

(assert (=> bm!15537 (= call!15537 (inRange!0 (ite c!26171 (index!3320 lt!73342) (ite c!26172 (index!3319 lt!73331) (index!3322 lt!73331))) (mask!7280 newMap!16)))))

(declare-fun b!139941 () Bool)

(assert (=> b!139941 (= e!91278 (= (map!1438 (_2!1353 lt!73341)) (+!174 (map!1438 newMap!16) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!139942 () Bool)

(declare-fun Unit!4404 () Unit!4395)

(assert (=> b!139942 (= e!91271 Unit!4404)))

(declare-fun b!139943 () Bool)

(declare-fun res!66901 () Bool)

(assert (=> b!139943 (= res!66901 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!73331)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139943 (=> (not res!66901) (not e!91272))))

(assert (= (and d!43471 c!26171) b!139930))

(assert (= (and d!43471 (not c!26171)) b!139927))

(assert (= (and b!139930 res!66902) b!139936))

(assert (= (and b!139936 res!66897) b!139937))

(assert (= (and b!139927 c!26172) b!139933))

(assert (= (and b!139927 (not c!26172)) b!139939))

(assert (= (and b!139933 res!66898) b!139932))

(assert (= (and b!139932 res!66904) b!139934))

(assert (= (and b!139939 c!26174) b!139931))

(assert (= (and b!139939 (not c!26174)) b!139929))

(assert (= (and b!139931 res!66899) b!139943))

(assert (= (and b!139943 res!66901) b!139928))

(assert (= (or b!139933 b!139931) bm!15535))

(assert (= (or b!139934 b!139928) bm!15536))

(assert (= (or b!139936 bm!15535) bm!15537))

(assert (= (or b!139930 b!139927) bm!15534))

(assert (= (and d!43471 c!26173) b!139938))

(assert (= (and d!43471 (not c!26173)) b!139942))

(assert (= (and d!43471 res!66900) b!139935))

(assert (= (and b!139935 res!66903) b!139940))

(assert (= (and b!139940 res!66896) b!139941))

(declare-fun m!167021 () Bool)

(assert (=> d!43471 m!167021))

(declare-fun m!167023 () Bool)

(assert (=> d!43471 m!167023))

(declare-fun m!167025 () Bool)

(assert (=> d!43471 m!167025))

(assert (=> d!43471 m!166733))

(declare-fun m!167027 () Bool)

(assert (=> d!43471 m!167027))

(declare-fun m!167029 () Bool)

(assert (=> d!43471 m!167029))

(assert (=> d!43471 m!166805))

(declare-fun m!167031 () Bool)

(assert (=> d!43471 m!167031))

(declare-fun m!167033 () Bool)

(assert (=> d!43471 m!167033))

(declare-fun m!167035 () Bool)

(assert (=> d!43471 m!167035))

(declare-fun m!167037 () Bool)

(assert (=> d!43471 m!167037))

(assert (=> d!43471 m!166733))

(assert (=> d!43471 m!166931))

(declare-fun m!167039 () Bool)

(assert (=> d!43471 m!167039))

(assert (=> d!43471 m!166733))

(declare-fun m!167041 () Bool)

(assert (=> d!43471 m!167041))

(assert (=> d!43471 m!166829))

(declare-fun m!167043 () Bool)

(assert (=> d!43471 m!167043))

(declare-fun m!167045 () Bool)

(assert (=> d!43471 m!167045))

(assert (=> d!43471 m!166733))

(assert (=> d!43471 m!166731))

(declare-fun m!167047 () Bool)

(assert (=> d!43471 m!167047))

(assert (=> d!43471 m!166829))

(assert (=> d!43471 m!166829))

(assert (=> d!43471 m!166733))

(declare-fun m!167049 () Bool)

(assert (=> d!43471 m!167049))

(declare-fun m!167051 () Bool)

(assert (=> d!43471 m!167051))

(assert (=> d!43471 m!167045))

(declare-fun m!167053 () Bool)

(assert (=> d!43471 m!167053))

(assert (=> d!43471 m!166733))

(declare-fun m!167055 () Bool)

(assert (=> d!43471 m!167055))

(assert (=> d!43471 m!166739))

(assert (=> d!43471 m!167051))

(assert (=> d!43471 m!166733))

(declare-fun m!167057 () Bool)

(assert (=> d!43471 m!167057))

(assert (=> d!43471 m!166733))

(declare-fun m!167059 () Bool)

(assert (=> d!43471 m!167059))

(declare-fun m!167061 () Bool)

(assert (=> b!139941 m!167061))

(assert (=> b!139941 m!166759))

(assert (=> b!139941 m!166759))

(declare-fun m!167063 () Bool)

(assert (=> b!139941 m!167063))

(assert (=> bm!15534 m!166733))

(assert (=> bm!15534 m!166903))

(assert (=> b!139940 m!167061))

(assert (=> b!139940 m!167061))

(assert (=> b!139940 m!166733))

(declare-fun m!167065 () Bool)

(assert (=> b!139940 m!167065))

(declare-fun m!167067 () Bool)

(assert (=> b!139935 m!167067))

(declare-fun m!167069 () Bool)

(assert (=> b!139943 m!167069))

(declare-fun m!167071 () Bool)

(assert (=> bm!15537 m!167071))

(assert (=> bm!15536 m!166733))

(assert (=> bm!15536 m!166931))

(assert (=> b!139938 m!166733))

(declare-fun m!167073 () Bool)

(assert (=> b!139938 m!167073))

(assert (=> b!139938 m!166829))

(assert (=> b!139938 m!166829))

(assert (=> b!139938 m!166733))

(assert (=> b!139938 m!167049))

(assert (=> b!139927 m!166733))

(assert (=> b!139927 m!166927))

(declare-fun m!167075 () Bool)

(assert (=> b!139932 m!167075))

(assert (=> b!139930 m!166733))

(assert (=> b!139930 m!166947))

(declare-fun m!167077 () Bool)

(assert (=> b!139937 m!167077))

(assert (=> bm!15499 d!43471))

(declare-fun d!43473 () Bool)

(declare-fun res!66905 () Bool)

(declare-fun e!91279 () Bool)

(assert (=> d!43473 (=> (not res!66905) (not e!91279))))

(assert (=> d!43473 (= res!66905 (simpleValid!95 (_2!1353 lt!73223)))))

(assert (=> d!43473 (= (valid!554 (_2!1353 lt!73223)) e!91279)))

(declare-fun b!139944 () Bool)

(declare-fun res!66906 () Bool)

(assert (=> b!139944 (=> (not res!66906) (not e!91279))))

(assert (=> b!139944 (= res!66906 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))) (_size!625 (_2!1353 lt!73223))))))

(declare-fun b!139945 () Bool)

(declare-fun res!66907 () Bool)

(assert (=> b!139945 (=> (not res!66907) (not e!91279))))

(assert (=> b!139945 (= res!66907 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))))))

(declare-fun b!139946 () Bool)

(assert (=> b!139946 (= e!91279 (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73223)) #b00000000000000000000000000000000 Nil!1760))))

(assert (= (and d!43473 res!66905) b!139944))

(assert (= (and b!139944 res!66906) b!139945))

(assert (= (and b!139945 res!66907) b!139946))

(declare-fun m!167079 () Bool)

(assert (=> d!43473 m!167079))

(declare-fun m!167081 () Bool)

(assert (=> b!139944 m!167081))

(declare-fun m!167083 () Bool)

(assert (=> b!139945 m!167083))

(declare-fun m!167085 () Bool)

(assert (=> b!139946 m!167085))

(assert (=> d!43463 d!43473))

(assert (=> d!43463 d!43437))

(declare-fun d!43475 () Bool)

(assert (=> d!43475 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139721 d!43475))

(assert (=> d!43443 d!43441))

(declare-fun d!43477 () Bool)

(assert (=> d!43477 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) from!355 Nil!1760)))

(assert (=> d!43477 true))

(declare-fun _$71!165 () Unit!4395)

(assert (=> d!43477 (= (choose!39 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!165)))

(declare-fun bs!5842 () Bool)

(assert (= bs!5842 d!43477))

(assert (=> bs!5842 m!166745))

(assert (=> d!43443 d!43477))

(declare-fun d!43479 () Bool)

(assert (=> d!43479 (= (get!1537 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139861 d!43479))

(declare-fun d!43481 () Bool)

(assert (=> d!43481 (= (inRange!0 (ite c!26142 (ite c!26150 (index!3320 lt!73235) (ite c!26145 (index!3319 lt!73239) (index!3322 lt!73239))) (ite c!26152 (index!3320 lt!73234) (ite c!26149 (index!3319 lt!73226) (index!3322 lt!73226)))) (mask!7280 newMap!16)) (and (bvsge (ite c!26142 (ite c!26150 (index!3320 lt!73235) (ite c!26145 (index!3319 lt!73239) (index!3322 lt!73239))) (ite c!26152 (index!3320 lt!73234) (ite c!26149 (index!3319 lt!73226) (index!3322 lt!73226)))) #b00000000000000000000000000000000) (bvslt (ite c!26142 (ite c!26150 (index!3320 lt!73235) (ite c!26145 (index!3319 lt!73239) (index!3322 lt!73239))) (ite c!26152 (index!3320 lt!73234) (ite c!26149 (index!3319 lt!73226) (index!3322 lt!73226)))) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15509 d!43481))

(declare-fun d!43483 () Bool)

(assert (=> d!43483 (= (apply!120 lt!73135 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1538 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5843 () Bool)

(assert (= bs!5843 d!43483))

(assert (=> bs!5843 m!166821))

(declare-fun m!167087 () Bool)

(assert (=> bs!5843 m!167087))

(assert (=> bs!5843 m!167087))

(declare-fun m!167089 () Bool)

(assert (=> bs!5843 m!167089))

(assert (=> b!139726 d!43483))

(declare-fun d!43485 () Bool)

(declare-fun c!26175 () Bool)

(assert (=> d!43485 (= c!26175 ((_ is ValueCellFull!1122) (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91280 () V!3555)

(assert (=> d!43485 (= (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91280)))

(declare-fun b!139947 () Bool)

(assert (=> b!139947 (= e!91280 (get!1536 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!139948 () Bool)

(assert (=> b!139948 (= e!91280 (get!1537 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43485 c!26175) b!139947))

(assert (= (and d!43485 (not c!26175)) b!139948))

(assert (=> b!139947 m!166841))

(assert (=> b!139947 m!166729))

(declare-fun m!167091 () Bool)

(assert (=> b!139947 m!167091))

(assert (=> b!139948 m!166841))

(assert (=> b!139948 m!166729))

(declare-fun m!167093 () Bool)

(assert (=> b!139948 m!167093))

(assert (=> b!139726 d!43485))

(declare-fun d!43487 () Bool)

(declare-fun lt!73360 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!136 (List!1763) (InoxSet (_ BitVec 64)))

(assert (=> d!43487 (= lt!73360 (select (content!136 Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!91286 () Bool)

(assert (=> d!43487 (= lt!73360 e!91286)))

(declare-fun res!66913 () Bool)

(assert (=> d!43487 (=> (not res!66913) (not e!91286))))

(assert (=> d!43487 (= res!66913 ((_ is Cons!1759) Nil!1760))))

(assert (=> d!43487 (= (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73360)))

(declare-fun b!139953 () Bool)

(declare-fun e!91285 () Bool)

(assert (=> b!139953 (= e!91286 e!91285)))

(declare-fun res!66912 () Bool)

(assert (=> b!139953 (=> res!66912 e!91285)))

(assert (=> b!139953 (= res!66912 (= (h!2366 Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!139954 () Bool)

(assert (=> b!139954 (= e!91285 (contains!922 (t!6359 Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!43487 res!66913) b!139953))

(assert (= (and b!139953 (not res!66912)) b!139954))

(declare-fun m!167095 () Bool)

(assert (=> d!43487 m!167095))

(assert (=> d!43487 m!166733))

(declare-fun m!167097 () Bool)

(assert (=> d!43487 m!167097))

(assert (=> b!139954 m!166733))

(declare-fun m!167099 () Bool)

(assert (=> b!139954 m!167099))

(assert (=> b!139653 d!43487))

(declare-fun d!43489 () Bool)

(assert (=> d!43489 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139654 d!43489))

(declare-fun d!43491 () Bool)

(assert (=> d!43491 (= (map!1438 (_2!1353 lt!73223)) (getCurrentListMap!555 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))))))

(declare-fun bs!5844 () Bool)

(assert (= bs!5844 d!43491))

(declare-fun m!167101 () Bool)

(assert (=> bs!5844 m!167101))

(assert (=> bm!15516 d!43491))

(declare-fun bm!15538 () Bool)

(declare-fun call!15541 () Bool)

(declare-fun c!26176 () Bool)

(assert (=> bm!15538 (= call!15541 (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)))))

(declare-fun b!139956 () Bool)

(declare-fun e!91288 () Bool)

(declare-fun e!91289 () Bool)

(assert (=> b!139956 (= e!91288 e!91289)))

(assert (=> b!139956 (= c!26176 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139957 () Bool)

(assert (=> b!139957 (= e!91289 call!15541)))

(declare-fun d!43493 () Bool)

(declare-fun res!66916 () Bool)

(declare-fun e!91290 () Bool)

(assert (=> d!43493 (=> res!66916 e!91290)))

(assert (=> d!43493 (= res!66916 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43493 (= (arrayNoDuplicates!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 Nil!1760) e!91290)))

(declare-fun b!139955 () Bool)

(declare-fun e!91287 () Bool)

(assert (=> b!139955 (= e!91287 (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139958 () Bool)

(assert (=> b!139958 (= e!91290 e!91288)))

(declare-fun res!66914 () Bool)

(assert (=> b!139958 (=> (not res!66914) (not e!91288))))

(assert (=> b!139958 (= res!66914 (not e!91287))))

(declare-fun res!66915 () Bool)

(assert (=> b!139958 (=> (not res!66915) (not e!91287))))

(assert (=> b!139958 (= res!66915 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139959 () Bool)

(assert (=> b!139959 (= e!91289 call!15541)))

(assert (= (and d!43493 (not res!66916)) b!139958))

(assert (= (and b!139958 res!66915) b!139955))

(assert (= (and b!139958 res!66914) b!139956))

(assert (= (and b!139956 c!26176) b!139957))

(assert (= (and b!139956 (not c!26176)) b!139959))

(assert (= (or b!139957 b!139959) bm!15538))

(assert (=> bm!15538 m!166967))

(declare-fun m!167103 () Bool)

(assert (=> bm!15538 m!167103))

(assert (=> b!139956 m!166967))

(assert (=> b!139956 m!166967))

(assert (=> b!139956 m!166981))

(assert (=> b!139955 m!166967))

(assert (=> b!139955 m!166967))

(declare-fun m!167105 () Bool)

(assert (=> b!139955 m!167105))

(assert (=> b!139958 m!166967))

(assert (=> b!139958 m!166967))

(assert (=> b!139958 m!166981))

(assert (=> b!139642 d!43493))

(declare-fun b!139968 () Bool)

(declare-fun e!91296 () (_ BitVec 32))

(declare-fun call!15544 () (_ BitVec 32))

(assert (=> b!139968 (= e!91296 (bvadd #b00000000000000000000000000000001 call!15544))))

(declare-fun b!139969 () Bool)

(assert (=> b!139969 (= e!91296 call!15544)))

(declare-fun b!139970 () Bool)

(declare-fun e!91295 () (_ BitVec 32))

(assert (=> b!139970 (= e!91295 e!91296)))

(declare-fun c!26182 () Bool)

(assert (=> b!139970 (= c!26182 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139971 () Bool)

(assert (=> b!139971 (= e!91295 #b00000000000000000000000000000000)))

(declare-fun d!43495 () Bool)

(declare-fun lt!73363 () (_ BitVec 32))

(assert (=> d!43495 (and (bvsge lt!73363 #b00000000000000000000000000000000) (bvsle lt!73363 (bvsub (size!2586 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43495 (= lt!73363 e!91295)))

(declare-fun c!26181 () Bool)

(assert (=> d!43495 (= c!26181 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43495 (and (bvsle #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 newMap!16)) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43495 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) lt!73363)))

(declare-fun bm!15541 () Bool)

(assert (=> bm!15541 (= call!15544 (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (= (and d!43495 c!26181) b!139971))

(assert (= (and d!43495 (not c!26181)) b!139970))

(assert (= (and b!139970 c!26182) b!139968))

(assert (= (and b!139970 (not c!26182)) b!139969))

(assert (= (or b!139968 b!139969) bm!15541))

(assert (=> b!139970 m!166967))

(assert (=> b!139970 m!166967))

(assert (=> b!139970 m!166981))

(declare-fun m!167107 () Bool)

(assert (=> bm!15541 m!167107))

(assert (=> b!139640 d!43495))

(declare-fun d!43497 () Bool)

(declare-fun e!91298 () Bool)

(assert (=> d!43497 e!91298))

(declare-fun res!66917 () Bool)

(assert (=> d!43497 (=> res!66917 e!91298)))

(declare-fun lt!73364 () Bool)

(assert (=> d!43497 (= res!66917 (not lt!73364))))

(declare-fun lt!73367 () Bool)

(assert (=> d!43497 (= lt!73364 lt!73367)))

(declare-fun lt!73365 () Unit!4395)

(declare-fun e!91297 () Unit!4395)

(assert (=> d!43497 (= lt!73365 e!91297)))

(declare-fun c!26183 () Bool)

(assert (=> d!43497 (= c!26183 lt!73367)))

(assert (=> d!43497 (= lt!73367 (containsKey!179 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!43497 (= (contains!921 lt!73135 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73364)))

(declare-fun b!139972 () Bool)

(declare-fun lt!73366 () Unit!4395)

(assert (=> b!139972 (= e!91297 lt!73366)))

(assert (=> b!139972 (= lt!73366 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139972 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!139973 () Bool)

(declare-fun Unit!4405 () Unit!4395)

(assert (=> b!139973 (= e!91297 Unit!4405)))

(declare-fun b!139974 () Bool)

(assert (=> b!139974 (= e!91298 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!43497 c!26183) b!139972))

(assert (= (and d!43497 (not c!26183)) b!139973))

(assert (= (and d!43497 (not res!66917)) b!139974))

(assert (=> d!43497 m!166821))

(declare-fun m!167109 () Bool)

(assert (=> d!43497 m!167109))

(assert (=> b!139972 m!166821))

(declare-fun m!167111 () Bool)

(assert (=> b!139972 m!167111))

(assert (=> b!139972 m!166821))

(assert (=> b!139972 m!167087))

(assert (=> b!139972 m!167087))

(declare-fun m!167113 () Bool)

(assert (=> b!139972 m!167113))

(assert (=> b!139974 m!166821))

(assert (=> b!139974 m!167087))

(assert (=> b!139974 m!167087))

(assert (=> b!139974 m!167113))

(assert (=> b!139725 d!43497))

(declare-fun d!43499 () Bool)

(assert (=> d!43499 (= (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992)))) (and (or (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000001111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000011111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000001111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000011111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000001111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000011111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000001111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000011111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000001111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000011111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000001111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000011111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000001111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000011111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000111111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000001111111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000011111111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000111111111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00001111111111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00011111111111111111111111111111) (= (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> d!43455 d!43499))

(declare-fun d!43501 () Bool)

(declare-fun res!66918 () Bool)

(declare-fun e!91299 () Bool)

(assert (=> d!43501 (=> res!66918 e!91299)))

(assert (=> d!43501 (= res!66918 (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43501 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!91299)))

(declare-fun b!139975 () Bool)

(declare-fun e!91300 () Bool)

(assert (=> b!139975 (= e!91299 e!91300)))

(declare-fun res!66919 () Bool)

(assert (=> b!139975 (=> (not res!66919) (not e!91300))))

(assert (=> b!139975 (= res!66919 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!139976 () Bool)

(assert (=> b!139976 (= e!91300 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43501 (not res!66918)) b!139975))

(assert (= (and b!139975 res!66919) b!139976))

(declare-fun m!167115 () Bool)

(assert (=> d!43501 m!167115))

(assert (=> b!139976 m!166733))

(declare-fun m!167117 () Bool)

(assert (=> b!139976 m!167117))

(assert (=> b!139663 d!43501))

(declare-fun d!43503 () Bool)

(declare-fun e!91303 () Bool)

(assert (=> d!43503 e!91303))

(declare-fun res!66925 () Bool)

(assert (=> d!43503 (=> (not res!66925) (not e!91303))))

(declare-fun lt!73378 () ListLongMap!1747)

(assert (=> d!43503 (= res!66925 (contains!921 lt!73378 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73379 () List!1764)

(assert (=> d!43503 (= lt!73378 (ListLongMap!1748 lt!73379))))

(declare-fun lt!73376 () Unit!4395)

(declare-fun lt!73377 () Unit!4395)

(assert (=> d!43503 (= lt!73376 lt!73377)))

(assert (=> d!43503 (= (getValueByKey!175 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!91 (List!1764 (_ BitVec 64) V!3555) Unit!4395)

(assert (=> d!43503 (= lt!73377 (lemmaContainsTupThenGetReturnValue!91 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun insertStrictlySorted!93 (List!1764 (_ BitVec 64) V!3555) List!1764)

(assert (=> d!43503 (= lt!73379 (insertStrictlySorted!93 (toList!889 call!15447) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43503 (= (+!174 call!15447 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73378)))

(declare-fun b!139981 () Bool)

(declare-fun res!66924 () Bool)

(assert (=> b!139981 (=> (not res!66924) (not e!91303))))

(assert (=> b!139981 (= res!66924 (= (getValueByKey!175 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!139982 () Bool)

(declare-fun contains!923 (List!1764 tuple2!2684) Bool)

(assert (=> b!139982 (= e!91303 (contains!923 (toList!889 lt!73378) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43503 res!66925) b!139981))

(assert (= (and b!139981 res!66924) b!139982))

(declare-fun m!167119 () Bool)

(assert (=> d!43503 m!167119))

(declare-fun m!167121 () Bool)

(assert (=> d!43503 m!167121))

(declare-fun m!167123 () Bool)

(assert (=> d!43503 m!167123))

(declare-fun m!167125 () Bool)

(assert (=> d!43503 m!167125))

(declare-fun m!167127 () Bool)

(assert (=> b!139981 m!167127))

(declare-fun m!167129 () Bool)

(assert (=> b!139982 m!167129))

(assert (=> b!139729 d!43503))

(declare-fun d!43505 () Bool)

(declare-fun e!91305 () Bool)

(assert (=> d!43505 e!91305))

(declare-fun res!66926 () Bool)

(assert (=> d!43505 (=> res!66926 e!91305)))

(declare-fun lt!73380 () Bool)

(assert (=> d!43505 (= res!66926 (not lt!73380))))

(declare-fun lt!73383 () Bool)

(assert (=> d!43505 (= lt!73380 lt!73383)))

(declare-fun lt!73381 () Unit!4395)

(declare-fun e!91304 () Unit!4395)

(assert (=> d!43505 (= lt!73381 e!91304)))

(declare-fun c!26184 () Bool)

(assert (=> d!43505 (= c!26184 lt!73383)))

(assert (=> d!43505 (= lt!73383 (containsKey!179 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (=> d!43505 (= (contains!921 call!15514 (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) lt!73380)))

(declare-fun b!139983 () Bool)

(declare-fun lt!73382 () Unit!4395)

(assert (=> b!139983 (= e!91304 lt!73382)))

(assert (=> b!139983 (= lt!73382 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (=> b!139983 (isDefined!129 (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(declare-fun b!139984 () Bool)

(declare-fun Unit!4406 () Unit!4395)

(assert (=> b!139984 (= e!91304 Unit!4406)))

(declare-fun b!139985 () Bool)

(assert (=> b!139985 (= e!91305 (isDefined!129 (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(assert (= (and d!43505 c!26184) b!139983))

(assert (= (and d!43505 (not c!26184)) b!139984))

(assert (= (and d!43505 (not res!66926)) b!139985))

(declare-fun m!167131 () Bool)

(assert (=> d!43505 m!167131))

(declare-fun m!167133 () Bool)

(assert (=> b!139983 m!167133))

(declare-fun m!167135 () Bool)

(assert (=> b!139983 m!167135))

(assert (=> b!139983 m!167135))

(declare-fun m!167137 () Bool)

(assert (=> b!139983 m!167137))

(assert (=> b!139985 m!167135))

(assert (=> b!139985 m!167135))

(assert (=> b!139985 m!167137))

(assert (=> bm!15503 d!43505))

(declare-fun d!43507 () Bool)

(declare-fun e!91308 () Bool)

(assert (=> d!43507 e!91308))

(declare-fun res!66929 () Bool)

(assert (=> d!43507 (=> (not res!66929) (not e!91308))))

(assert (=> d!43507 (= res!66929 (and (bvsge (index!3320 lt!73228) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73228) (size!2586 (_keys!4699 newMap!16)))))))

(declare-fun lt!73386 () Unit!4395)

(declare-fun choose!864 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) Int) Unit!4395)

(assert (=> d!43507 (= lt!73386 (choose!864 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43507 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43507 (= (lemmaValidKeyInArrayIsInListMap!123 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (defaultEntry!2940 newMap!16)) lt!73386)))

(declare-fun b!139988 () Bool)

(assert (=> b!139988 (= e!91308 (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(assert (= (and d!43507 res!66929) b!139988))

(declare-fun m!167139 () Bool)

(assert (=> d!43507 m!167139))

(assert (=> d!43507 m!166961))

(declare-fun m!167141 () Bool)

(assert (=> b!139988 m!167141))

(assert (=> b!139988 m!166933))

(assert (=> b!139988 m!167141))

(assert (=> b!139988 m!166933))

(declare-fun m!167143 () Bool)

(assert (=> b!139988 m!167143))

(assert (=> b!139841 d!43507))

(declare-fun bm!15542 () Bool)

(declare-fun call!15550 () ListLongMap!1747)

(declare-fun call!15549 () ListLongMap!1747)

(assert (=> bm!15542 (= call!15550 call!15549)))

(declare-fun b!139989 () Bool)

(declare-fun e!91315 () ListLongMap!1747)

(declare-fun call!15545 () ListLongMap!1747)

(assert (=> b!139989 (= e!91315 call!15545)))

(declare-fun call!15546 () ListLongMap!1747)

(declare-fun bm!15543 () Bool)

(assert (=> bm!15543 (= call!15546 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!139990 () Bool)

(declare-fun e!91313 () Unit!4395)

(declare-fun lt!73404 () Unit!4395)

(assert (=> b!139990 (= e!91313 lt!73404)))

(declare-fun lt!73400 () ListLongMap!1747)

(assert (=> b!139990 (= lt!73400 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73393 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73393 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73398 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73398 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73395 () Unit!4395)

(assert (=> b!139990 (= lt!73395 (addStillContains!96 lt!73400 lt!73393 (zeroValue!2790 newMap!16) lt!73398))))

(assert (=> b!139990 (contains!921 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) lt!73398)))

(declare-fun lt!73403 () Unit!4395)

(assert (=> b!139990 (= lt!73403 lt!73395)))

(declare-fun lt!73402 () ListLongMap!1747)

(assert (=> b!139990 (= lt!73402 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73406 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73406 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73408 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73408 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73399 () Unit!4395)

(assert (=> b!139990 (= lt!73399 (addApplyDifferent!96 lt!73402 lt!73406 (minValue!2790 newMap!16) lt!73408))))

(assert (=> b!139990 (= (apply!120 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) lt!73408) (apply!120 lt!73402 lt!73408))))

(declare-fun lt!73387 () Unit!4395)

(assert (=> b!139990 (= lt!73387 lt!73399)))

(declare-fun lt!73396 () ListLongMap!1747)

(assert (=> b!139990 (= lt!73396 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73401 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73401 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73407 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73407 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73394 () Unit!4395)

(assert (=> b!139990 (= lt!73394 (addApplyDifferent!96 lt!73396 lt!73401 (zeroValue!2790 newMap!16) lt!73407))))

(assert (=> b!139990 (= (apply!120 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) lt!73407) (apply!120 lt!73396 lt!73407))))

(declare-fun lt!73392 () Unit!4395)

(assert (=> b!139990 (= lt!73392 lt!73394)))

(declare-fun lt!73405 () ListLongMap!1747)

(assert (=> b!139990 (= lt!73405 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73388 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73388 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73397 () (_ BitVec 64))

(assert (=> b!139990 (= lt!73397 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!139990 (= lt!73404 (addApplyDifferent!96 lt!73405 lt!73388 (minValue!2790 newMap!16) lt!73397))))

(assert (=> b!139990 (= (apply!120 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) lt!73397) (apply!120 lt!73405 lt!73397))))

(declare-fun b!139991 () Bool)

(declare-fun res!66934 () Bool)

(declare-fun e!91309 () Bool)

(assert (=> b!139991 (=> (not res!66934) (not e!91309))))

(declare-fun e!91319 () Bool)

(assert (=> b!139991 (= res!66934 e!91319)))

(declare-fun res!66931 () Bool)

(assert (=> b!139991 (=> res!66931 e!91319)))

(declare-fun e!91316 () Bool)

(assert (=> b!139991 (= res!66931 (not e!91316))))

(declare-fun res!66930 () Bool)

(assert (=> b!139991 (=> (not res!66930) (not e!91316))))

(assert (=> b!139991 (= res!66930 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!139992 () Bool)

(assert (=> b!139992 (= e!91315 call!15550)))

(declare-fun b!139993 () Bool)

(declare-fun e!91311 () ListLongMap!1747)

(declare-fun e!91318 () ListLongMap!1747)

(assert (=> b!139993 (= e!91311 e!91318)))

(declare-fun c!26189 () Bool)

(assert (=> b!139993 (= c!26189 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15544 () Bool)

(declare-fun call!15548 () ListLongMap!1747)

(declare-fun c!26186 () Bool)

(assert (=> bm!15544 (= call!15549 (+!174 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)) (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!139995 () Bool)

(declare-fun Unit!4407 () Unit!4395)

(assert (=> b!139995 (= e!91313 Unit!4407)))

(declare-fun b!139996 () Bool)

(declare-fun e!91320 () Bool)

(declare-fun e!91312 () Bool)

(assert (=> b!139996 (= e!91320 e!91312)))

(declare-fun res!66935 () Bool)

(declare-fun call!15547 () Bool)

(assert (=> b!139996 (= res!66935 call!15547)))

(assert (=> b!139996 (=> (not res!66935) (not e!91312))))

(declare-fun b!139997 () Bool)

(declare-fun e!91321 () Bool)

(assert (=> b!139997 (= e!91309 e!91321)))

(declare-fun c!26185 () Bool)

(assert (=> b!139997 (= c!26185 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!139998 () Bool)

(assert (=> b!139998 (= e!91316 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!139999 () Bool)

(declare-fun lt!73391 () ListLongMap!1747)

(assert (=> b!139999 (= e!91312 (= (apply!120 lt!73391 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15545 () Bool)

(assert (=> bm!15545 (= call!15545 call!15548)))

(declare-fun b!140000 () Bool)

(declare-fun call!15551 () Bool)

(assert (=> b!140000 (= e!91321 (not call!15551))))

(declare-fun b!140001 () Bool)

(declare-fun e!91317 () Bool)

(assert (=> b!140001 (= e!91317 (= (apply!120 lt!73391 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun bm!15546 () Bool)

(assert (=> bm!15546 (= call!15548 call!15546)))

(declare-fun b!140002 () Bool)

(declare-fun e!91310 () Bool)

(assert (=> b!140002 (= e!91319 e!91310)))

(declare-fun res!66938 () Bool)

(assert (=> b!140002 (=> (not res!66938) (not e!91310))))

(assert (=> b!140002 (= res!66938 (contains!921 lt!73391 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140002 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun bm!15547 () Bool)

(assert (=> bm!15547 (= call!15547 (contains!921 lt!73391 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140003 () Bool)

(assert (=> b!140003 (= e!91310 (= (apply!120 lt!73391 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140003 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))))))))

(assert (=> b!140003 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140004 () Bool)

(declare-fun e!91314 () Bool)

(assert (=> b!140004 (= e!91314 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140005 () Bool)

(declare-fun c!26190 () Bool)

(assert (=> b!140005 (= c!26190 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140005 (= e!91318 e!91315)))

(declare-fun b!140006 () Bool)

(assert (=> b!140006 (= e!91311 (+!174 call!15549 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun d!43509 () Bool)

(assert (=> d!43509 e!91309))

(declare-fun res!66932 () Bool)

(assert (=> d!43509 (=> (not res!66932) (not e!91309))))

(assert (=> d!43509 (= res!66932 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun lt!73390 () ListLongMap!1747)

(assert (=> d!43509 (= lt!73391 lt!73390)))

(declare-fun lt!73389 () Unit!4395)

(assert (=> d!43509 (= lt!73389 e!91313)))

(declare-fun c!26188 () Bool)

(assert (=> d!43509 (= c!26188 e!91314)))

(declare-fun res!66936 () Bool)

(assert (=> d!43509 (=> (not res!66936) (not e!91314))))

(assert (=> d!43509 (= res!66936 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43509 (= lt!73390 e!91311)))

(assert (=> d!43509 (= c!26186 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43509 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43509 (= (getCurrentListMap!555 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73391)))

(declare-fun b!139994 () Bool)

(assert (=> b!139994 (= e!91318 call!15550)))

(declare-fun bm!15548 () Bool)

(assert (=> bm!15548 (= call!15551 (contains!921 lt!73391 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140007 () Bool)

(assert (=> b!140007 (= e!91321 e!91317)))

(declare-fun res!66937 () Bool)

(assert (=> b!140007 (= res!66937 call!15551)))

(assert (=> b!140007 (=> (not res!66937) (not e!91317))))

(declare-fun b!140008 () Bool)

(assert (=> b!140008 (= e!91320 (not call!15547))))

(declare-fun b!140009 () Bool)

(declare-fun res!66933 () Bool)

(assert (=> b!140009 (=> (not res!66933) (not e!91309))))

(assert (=> b!140009 (= res!66933 e!91320)))

(declare-fun c!26187 () Bool)

(assert (=> b!140009 (= c!26187 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43509 c!26186) b!140006))

(assert (= (and d!43509 (not c!26186)) b!139993))

(assert (= (and b!139993 c!26189) b!139994))

(assert (= (and b!139993 (not c!26189)) b!140005))

(assert (= (and b!140005 c!26190) b!139992))

(assert (= (and b!140005 (not c!26190)) b!139989))

(assert (= (or b!139992 b!139989) bm!15545))

(assert (= (or b!139994 bm!15545) bm!15546))

(assert (= (or b!139994 b!139992) bm!15542))

(assert (= (or b!140006 bm!15546) bm!15543))

(assert (= (or b!140006 bm!15542) bm!15544))

(assert (= (and d!43509 res!66936) b!140004))

(assert (= (and d!43509 c!26188) b!139990))

(assert (= (and d!43509 (not c!26188)) b!139995))

(assert (= (and d!43509 res!66932) b!139991))

(assert (= (and b!139991 res!66930) b!139998))

(assert (= (and b!139991 (not res!66931)) b!140002))

(assert (= (and b!140002 res!66938) b!140003))

(assert (= (and b!139991 res!66934) b!140009))

(assert (= (and b!140009 c!26187) b!139996))

(assert (= (and b!140009 (not c!26187)) b!140008))

(assert (= (and b!139996 res!66935) b!139999))

(assert (= (or b!139996 b!140008) bm!15547))

(assert (= (and b!140009 res!66933) b!139997))

(assert (= (and b!139997 c!26185) b!140007))

(assert (= (and b!139997 (not c!26185)) b!140000))

(assert (= (and b!140007 res!66937) b!140001))

(assert (= (or b!140007 b!140000) bm!15548))

(declare-fun b_lambda!6293 () Bool)

(assert (=> (not b_lambda!6293) (not b!140003)))

(assert (=> b!140003 t!6366))

(declare-fun b_and!8765 () Bool)

(assert (= b_and!8761 (and (=> t!6366 result!4203) b_and!8765)))

(assert (=> b!140003 t!6368))

(declare-fun b_and!8767 () Bool)

(assert (= b_and!8763 (and (=> t!6368 result!4205) b_and!8767)))

(declare-fun m!167145 () Bool)

(assert (=> b!140006 m!167145))

(declare-fun m!167147 () Bool)

(assert (=> bm!15543 m!167147))

(assert (=> d!43509 m!166961))

(declare-fun m!167149 () Bool)

(assert (=> b!140001 m!167149))

(declare-fun m!167151 () Bool)

(assert (=> bm!15544 m!167151))

(assert (=> b!140003 m!166967))

(assert (=> b!140003 m!166967))

(declare-fun m!167153 () Bool)

(assert (=> b!140003 m!167153))

(assert (=> b!140003 m!166971))

(declare-fun m!167155 () Bool)

(assert (=> b!140003 m!167155))

(assert (=> b!140003 m!166971))

(declare-fun m!167157 () Bool)

(assert (=> b!140003 m!167157))

(assert (=> b!140003 m!167155))

(declare-fun m!167159 () Bool)

(assert (=> bm!15547 m!167159))

(declare-fun m!167161 () Bool)

(assert (=> b!139999 m!167161))

(assert (=> b!139998 m!166967))

(assert (=> b!139998 m!166967))

(assert (=> b!139998 m!166981))

(assert (=> b!140002 m!166967))

(assert (=> b!140002 m!166967))

(declare-fun m!167163 () Bool)

(assert (=> b!140002 m!167163))

(assert (=> b!140004 m!166967))

(assert (=> b!140004 m!166967))

(assert (=> b!140004 m!166981))

(declare-fun m!167165 () Bool)

(assert (=> bm!15548 m!167165))

(declare-fun m!167167 () Bool)

(assert (=> b!139990 m!167167))

(declare-fun m!167169 () Bool)

(assert (=> b!139990 m!167169))

(declare-fun m!167171 () Bool)

(assert (=> b!139990 m!167171))

(declare-fun m!167173 () Bool)

(assert (=> b!139990 m!167173))

(declare-fun m!167175 () Bool)

(assert (=> b!139990 m!167175))

(declare-fun m!167177 () Bool)

(assert (=> b!139990 m!167177))

(declare-fun m!167179 () Bool)

(assert (=> b!139990 m!167179))

(declare-fun m!167181 () Bool)

(assert (=> b!139990 m!167181))

(assert (=> b!139990 m!167181))

(declare-fun m!167183 () Bool)

(assert (=> b!139990 m!167183))

(assert (=> b!139990 m!167147))

(declare-fun m!167185 () Bool)

(assert (=> b!139990 m!167185))

(declare-fun m!167187 () Bool)

(assert (=> b!139990 m!167187))

(assert (=> b!139990 m!167173))

(declare-fun m!167189 () Bool)

(assert (=> b!139990 m!167189))

(declare-fun m!167191 () Bool)

(assert (=> b!139990 m!167191))

(assert (=> b!139990 m!166967))

(declare-fun m!167193 () Bool)

(assert (=> b!139990 m!167193))

(assert (=> b!139990 m!167167))

(declare-fun m!167195 () Bool)

(assert (=> b!139990 m!167195))

(assert (=> b!139990 m!167185))

(assert (=> b!139841 d!43509))

(declare-fun d!43511 () Bool)

(declare-fun e!91324 () Bool)

(assert (=> d!43511 e!91324))

(declare-fun res!66941 () Bool)

(assert (=> d!43511 (=> (not res!66941) (not e!91324))))

(assert (=> d!43511 (= res!66941 (and (bvsge (index!3320 lt!73228) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73228) (size!2587 (_values!2923 newMap!16)))))))

(declare-fun lt!73411 () Unit!4395)

(declare-fun choose!865 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4395)

(assert (=> d!43511 (= lt!73411 (choose!865 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43511 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43511 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) lt!73411)))

(declare-fun b!140012 () Bool)

(assert (=> b!140012 (= e!91324 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (= (and d!43511 res!66941) b!140012))

(assert (=> d!43511 m!166733))

(assert (=> d!43511 m!166731))

(declare-fun m!167197 () Bool)

(assert (=> d!43511 m!167197))

(assert (=> d!43511 m!166961))

(assert (=> b!140012 m!166829))

(assert (=> b!140012 m!166829))

(assert (=> b!140012 m!167043))

(assert (=> b!140012 m!166917))

(assert (=> b!140012 m!166919))

(assert (=> b!139841 d!43511))

(declare-fun d!43513 () Bool)

(declare-fun e!91326 () Bool)

(assert (=> d!43513 e!91326))

(declare-fun res!66942 () Bool)

(assert (=> d!43513 (=> res!66942 e!91326)))

(declare-fun lt!73412 () Bool)

(assert (=> d!43513 (= res!66942 (not lt!73412))))

(declare-fun lt!73415 () Bool)

(assert (=> d!43513 (= lt!73412 lt!73415)))

(declare-fun lt!73413 () Unit!4395)

(declare-fun e!91325 () Unit!4395)

(assert (=> d!43513 (= lt!73413 e!91325)))

(declare-fun c!26191 () Bool)

(assert (=> d!43513 (= c!26191 lt!73415)))

(assert (=> d!43513 (= lt!73415 (containsKey!179 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43513 (= (contains!921 call!15508 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73412)))

(declare-fun b!140013 () Bool)

(declare-fun lt!73414 () Unit!4395)

(assert (=> b!140013 (= e!91325 lt!73414)))

(assert (=> b!140013 (= lt!73414 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!140013 (isDefined!129 (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140014 () Bool)

(declare-fun Unit!4408 () Unit!4395)

(assert (=> b!140014 (= e!91325 Unit!4408)))

(declare-fun b!140015 () Bool)

(assert (=> b!140015 (= e!91326 (isDefined!129 (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (= (and d!43513 c!26191) b!140013))

(assert (= (and d!43513 (not c!26191)) b!140014))

(assert (= (and d!43513 (not res!66942)) b!140015))

(assert (=> d!43513 m!166733))

(declare-fun m!167199 () Bool)

(assert (=> d!43513 m!167199))

(assert (=> b!140013 m!166733))

(declare-fun m!167201 () Bool)

(assert (=> b!140013 m!167201))

(assert (=> b!140013 m!166733))

(declare-fun m!167203 () Bool)

(assert (=> b!140013 m!167203))

(assert (=> b!140013 m!167203))

(declare-fun m!167205 () Bool)

(assert (=> b!140013 m!167205))

(assert (=> b!140015 m!166733))

(assert (=> b!140015 m!167203))

(assert (=> b!140015 m!167203))

(assert (=> b!140015 m!167205))

(assert (=> b!139841 d!43513))

(declare-fun b!140028 () Bool)

(declare-fun e!91333 () SeekEntryResult!289)

(declare-fun e!91335 () SeekEntryResult!289)

(assert (=> b!140028 (= e!91333 e!91335)))

(declare-fun lt!73423 () (_ BitVec 64))

(declare-fun lt!73424 () SeekEntryResult!289)

(assert (=> b!140028 (= lt!73423 (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!73424)))))

(declare-fun c!26199 () Bool)

(assert (=> b!140028 (= c!26199 (= lt!73423 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140029 () Bool)

(declare-fun c!26200 () Bool)

(assert (=> b!140029 (= c!26200 (= lt!73423 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91334 () SeekEntryResult!289)

(assert (=> b!140029 (= e!91335 e!91334)))

(declare-fun b!140030 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4896 (_ BitVec 32)) SeekEntryResult!289)

(assert (=> b!140030 (= e!91334 (seekKeyOrZeroReturnVacant!0 (x!16146 lt!73424) (index!3321 lt!73424) (index!3321 lt!73424) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140031 () Bool)

(assert (=> b!140031 (= e!91334 (MissingZero!289 (index!3321 lt!73424)))))

(declare-fun lt!73422 () SeekEntryResult!289)

(declare-fun d!43515 () Bool)

(assert (=> d!43515 (and (or ((_ is Undefined!289) lt!73422) (not ((_ is Found!289) lt!73422)) (and (bvsge (index!3320 lt!73422) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73422) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73422) ((_ is Found!289) lt!73422) (not ((_ is MissingZero!289) lt!73422)) (and (bvsge (index!3319 lt!73422) #b00000000000000000000000000000000) (bvslt (index!3319 lt!73422) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73422) ((_ is Found!289) lt!73422) ((_ is MissingZero!289) lt!73422) (not ((_ is MissingVacant!289) lt!73422)) (and (bvsge (index!3322 lt!73422) #b00000000000000000000000000000000) (bvslt (index!3322 lt!73422) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73422) (ite ((_ is Found!289) lt!73422) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73422)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite ((_ is MissingZero!289) lt!73422) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!73422)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!289) lt!73422) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!73422)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43515 (= lt!73422 e!91333)))

(declare-fun c!26198 () Bool)

(assert (=> d!43515 (= c!26198 (and ((_ is Intermediate!289) lt!73424) (undefined!1101 lt!73424)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4896 (_ BitVec 32)) SeekEntryResult!289)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!43515 (= lt!73424 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!43515 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43515 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!73422)))

(declare-fun b!140032 () Bool)

(assert (=> b!140032 (= e!91335 (Found!289 (index!3321 lt!73424)))))

(declare-fun b!140033 () Bool)

(assert (=> b!140033 (= e!91333 Undefined!289)))

(assert (= (and d!43515 c!26198) b!140033))

(assert (= (and d!43515 (not c!26198)) b!140028))

(assert (= (and b!140028 c!26199) b!140032))

(assert (= (and b!140028 (not c!26199)) b!140029))

(assert (= (and b!140029 c!26200) b!140031))

(assert (= (and b!140029 (not c!26200)) b!140030))

(declare-fun m!167207 () Bool)

(assert (=> b!140028 m!167207))

(assert (=> b!140030 m!166733))

(declare-fun m!167209 () Bool)

(assert (=> b!140030 m!167209))

(assert (=> d!43515 m!166733))

(declare-fun m!167211 () Bool)

(assert (=> d!43515 m!167211))

(declare-fun m!167213 () Bool)

(assert (=> d!43515 m!167213))

(assert (=> d!43515 m!166961))

(assert (=> d!43515 m!167211))

(assert (=> d!43515 m!166733))

(declare-fun m!167215 () Bool)

(assert (=> d!43515 m!167215))

(declare-fun m!167217 () Bool)

(assert (=> d!43515 m!167217))

(declare-fun m!167219 () Bool)

(assert (=> d!43515 m!167219))

(assert (=> bm!15504 d!43515))

(declare-fun d!43517 () Bool)

(declare-fun isEmpty!422 (Option!181) Bool)

(assert (=> d!43517 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun bs!5845 () Bool)

(assert (= bs!5845 d!43517))

(assert (=> bs!5845 m!166889))

(declare-fun m!167221 () Bool)

(assert (=> bs!5845 m!167221))

(assert (=> b!139741 d!43517))

(declare-fun e!91341 () Option!181)

(declare-fun b!140044 () Bool)

(assert (=> b!140044 (= e!91341 (getValueByKey!175 (t!6360 (toList!889 lt!73065)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140043 () Bool)

(declare-fun e!91340 () Option!181)

(assert (=> b!140043 (= e!91340 e!91341)))

(declare-fun c!26206 () Bool)

(assert (=> b!140043 (= c!26206 (and ((_ is Cons!1760) (toList!889 lt!73065)) (not (= (_1!1352 (h!2367 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!140045 () Bool)

(assert (=> b!140045 (= e!91341 None!179)))

(declare-fun b!140042 () Bool)

(assert (=> b!140042 (= e!91340 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73065)))))))

(declare-fun d!43519 () Bool)

(declare-fun c!26205 () Bool)

(assert (=> d!43519 (= c!26205 (and ((_ is Cons!1760) (toList!889 lt!73065)) (= (_1!1352 (h!2367 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!43519 (= (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91340)))

(assert (= (and d!43519 c!26205) b!140042))

(assert (= (and d!43519 (not c!26205)) b!140043))

(assert (= (and b!140043 c!26206) b!140044))

(assert (= (and b!140043 (not c!26206)) b!140045))

(assert (=> b!140044 m!166733))

(declare-fun m!167223 () Bool)

(assert (=> b!140044 m!167223))

(assert (=> b!139741 d!43519))

(declare-fun b!140070 () Bool)

(declare-fun res!66952 () Bool)

(declare-fun e!91360 () Bool)

(assert (=> b!140070 (=> (not res!66952) (not e!91360))))

(declare-fun lt!73441 () ListLongMap!1747)

(assert (=> b!140070 (= res!66952 (not (contains!921 lt!73441 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140071 () Bool)

(assert (=> b!140071 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> b!140071 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2587 (_values!2923 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!91356 () Bool)

(assert (=> b!140071 (= e!91356 (= (apply!120 lt!73441 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140072 () Bool)

(declare-fun e!91362 () ListLongMap!1747)

(declare-fun e!91359 () ListLongMap!1747)

(assert (=> b!140072 (= e!91362 e!91359)))

(declare-fun c!26217 () Bool)

(assert (=> b!140072 (= c!26217 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140073 () Bool)

(declare-fun e!91357 () Bool)

(assert (=> b!140073 (= e!91357 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140073 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun d!43521 () Bool)

(assert (=> d!43521 e!91360))

(declare-fun res!66954 () Bool)

(assert (=> d!43521 (=> (not res!66954) (not e!91360))))

(assert (=> d!43521 (= res!66954 (not (contains!921 lt!73441 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43521 (= lt!73441 e!91362)))

(declare-fun c!26218 () Bool)

(assert (=> d!43521 (= c!26218 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43521 (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992))))))

(assert (=> d!43521 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) lt!73441)))

(declare-fun b!140074 () Bool)

(declare-fun e!91358 () Bool)

(declare-fun e!91361 () Bool)

(assert (=> b!140074 (= e!91358 e!91361)))

(declare-fun c!26215 () Bool)

(assert (=> b!140074 (= c!26215 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140075 () Bool)

(assert (=> b!140075 (= e!91361 (= lt!73441 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140076 () Bool)

(assert (=> b!140076 (= e!91358 e!91356)))

(assert (=> b!140076 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun res!66953 () Bool)

(assert (=> b!140076 (= res!66953 (contains!921 lt!73441 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140076 (=> (not res!66953) (not e!91356))))

(declare-fun b!140077 () Bool)

(declare-fun call!15554 () ListLongMap!1747)

(assert (=> b!140077 (= e!91359 call!15554)))

(declare-fun bm!15551 () Bool)

(assert (=> bm!15551 (= call!15554 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!140078 () Bool)

(assert (=> b!140078 (= e!91362 (ListLongMap!1748 Nil!1761))))

(declare-fun b!140079 () Bool)

(declare-fun lt!73439 () Unit!4395)

(declare-fun lt!73445 () Unit!4395)

(assert (=> b!140079 (= lt!73439 lt!73445)))

(declare-fun lt!73442 () V!3555)

(declare-fun lt!73443 () (_ BitVec 64))

(declare-fun lt!73444 () (_ BitVec 64))

(declare-fun lt!73440 () ListLongMap!1747)

(assert (=> b!140079 (not (contains!921 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)) lt!73443))))

(declare-fun addStillNotContains!66 (ListLongMap!1747 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4395)

(assert (=> b!140079 (= lt!73445 (addStillNotContains!66 lt!73440 lt!73444 lt!73442 lt!73443))))

(assert (=> b!140079 (= lt!73443 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140079 (= lt!73442 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140079 (= lt!73444 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!140079 (= lt!73440 call!15554)))

(assert (=> b!140079 (= e!91359 (+!174 call!15554 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140080 () Bool)

(assert (=> b!140080 (= e!91360 e!91358)))

(declare-fun c!26216 () Bool)

(assert (=> b!140080 (= c!26216 e!91357)))

(declare-fun res!66951 () Bool)

(assert (=> b!140080 (=> (not res!66951) (not e!91357))))

(assert (=> b!140080 (= res!66951 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140081 () Bool)

(declare-fun isEmpty!423 (ListLongMap!1747) Bool)

(assert (=> b!140081 (= e!91361 (isEmpty!423 lt!73441))))

(assert (= (and d!43521 c!26218) b!140078))

(assert (= (and d!43521 (not c!26218)) b!140072))

(assert (= (and b!140072 c!26217) b!140079))

(assert (= (and b!140072 (not c!26217)) b!140077))

(assert (= (or b!140079 b!140077) bm!15551))

(assert (= (and d!43521 res!66954) b!140070))

(assert (= (and b!140070 res!66952) b!140080))

(assert (= (and b!140080 res!66951) b!140073))

(assert (= (and b!140080 c!26216) b!140076))

(assert (= (and b!140080 (not c!26216)) b!140074))

(assert (= (and b!140076 res!66953) b!140071))

(assert (= (and b!140074 c!26215) b!140075))

(assert (= (and b!140074 (not c!26215)) b!140081))

(declare-fun b_lambda!6295 () Bool)

(assert (=> (not b_lambda!6295) (not b!140071)))

(assert (=> b!140071 t!6356))

(declare-fun b_and!8769 () Bool)

(assert (= b_and!8765 (and (=> t!6356 result!4189) b_and!8769)))

(assert (=> b!140071 t!6358))

(declare-fun b_and!8771 () Bool)

(assert (= b_and!8767 (and (=> t!6358 result!4193) b_and!8771)))

(declare-fun b_lambda!6297 () Bool)

(assert (=> (not b_lambda!6297) (not b!140079)))

(assert (=> b!140079 t!6356))

(declare-fun b_and!8773 () Bool)

(assert (= b_and!8769 (and (=> t!6356 result!4189) b_and!8773)))

(assert (=> b!140079 t!6358))

(declare-fun b_and!8775 () Bool)

(assert (= b_and!8771 (and (=> t!6358 result!4193) b_and!8775)))

(declare-fun m!167225 () Bool)

(assert (=> b!140075 m!167225))

(assert (=> b!140073 m!166821))

(assert (=> b!140073 m!166821))

(assert (=> b!140073 m!166849))

(declare-fun m!167227 () Bool)

(assert (=> b!140079 m!167227))

(declare-fun m!167229 () Bool)

(assert (=> b!140079 m!167229))

(assert (=> b!140079 m!166821))

(declare-fun m!167231 () Bool)

(assert (=> b!140079 m!167231))

(declare-fun m!167233 () Bool)

(assert (=> b!140079 m!167233))

(assert (=> b!140079 m!166729))

(assert (=> b!140079 m!166841))

(assert (=> b!140079 m!166841))

(assert (=> b!140079 m!166729))

(assert (=> b!140079 m!166843))

(assert (=> b!140079 m!167227))

(assert (=> b!140076 m!166821))

(assert (=> b!140076 m!166821))

(declare-fun m!167235 () Bool)

(assert (=> b!140076 m!167235))

(assert (=> b!140072 m!166821))

(assert (=> b!140072 m!166821))

(assert (=> b!140072 m!166849))

(assert (=> b!140071 m!166821))

(assert (=> b!140071 m!166821))

(declare-fun m!167237 () Bool)

(assert (=> b!140071 m!167237))

(assert (=> b!140071 m!166729))

(assert (=> b!140071 m!166841))

(assert (=> b!140071 m!166841))

(assert (=> b!140071 m!166729))

(assert (=> b!140071 m!166843))

(declare-fun m!167239 () Bool)

(assert (=> b!140081 m!167239))

(declare-fun m!167241 () Bool)

(assert (=> d!43521 m!167241))

(assert (=> d!43521 m!166827))

(declare-fun m!167243 () Bool)

(assert (=> b!140070 m!167243))

(assert (=> bm!15551 m!167225))

(assert (=> bm!15441 d!43521))

(declare-fun d!43523 () Bool)

(declare-fun e!91365 () Bool)

(assert (=> d!43523 e!91365))

(declare-fun c!26221 () Bool)

(assert (=> d!43523 (= c!26221 (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43523 true))

(declare-fun _$29!165 () Unit!4395)

(assert (=> d!43523 (= (choose!863 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) _$29!165)))

(declare-fun b!140086 () Bool)

(assert (=> b!140086 (= e!91365 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!140087 () Bool)

(assert (=> b!140087 (= e!91365 (ite (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!43523 c!26221) b!140086))

(assert (= (and d!43523 (not c!26221)) b!140087))

(assert (=> b!140086 m!166733))

(assert (=> b!140086 m!166749))

(assert (=> d!43447 d!43523))

(assert (=> d!43447 d!43499))

(declare-fun bm!15552 () Bool)

(declare-fun call!15560 () ListLongMap!1747)

(declare-fun call!15559 () ListLongMap!1747)

(assert (=> bm!15552 (= call!15560 call!15559)))

(declare-fun b!140088 () Bool)

(declare-fun e!91372 () ListLongMap!1747)

(declare-fun call!15555 () ListLongMap!1747)

(assert (=> b!140088 (= e!91372 call!15555)))

(declare-fun bm!15553 () Bool)

(declare-fun call!15556 () ListLongMap!1747)

(assert (=> bm!15553 (= call!15556 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!140089 () Bool)

(declare-fun e!91370 () Unit!4395)

(declare-fun lt!73463 () Unit!4395)

(assert (=> b!140089 (= e!91370 lt!73463)))

(declare-fun lt!73459 () ListLongMap!1747)

(assert (=> b!140089 (= lt!73459 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73452 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73452 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73457 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73457 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73454 () Unit!4395)

(assert (=> b!140089 (= lt!73454 (addStillContains!96 lt!73459 lt!73452 (zeroValue!2790 newMap!16) lt!73457))))

(assert (=> b!140089 (contains!921 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) lt!73457)))

(declare-fun lt!73462 () Unit!4395)

(assert (=> b!140089 (= lt!73462 lt!73454)))

(declare-fun lt!73461 () ListLongMap!1747)

(assert (=> b!140089 (= lt!73461 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73465 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73465 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73467 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73467 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73458 () Unit!4395)

(assert (=> b!140089 (= lt!73458 (addApplyDifferent!96 lt!73461 lt!73465 (minValue!2790 newMap!16) lt!73467))))

(assert (=> b!140089 (= (apply!120 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) lt!73467) (apply!120 lt!73461 lt!73467))))

(declare-fun lt!73446 () Unit!4395)

(assert (=> b!140089 (= lt!73446 lt!73458)))

(declare-fun lt!73455 () ListLongMap!1747)

(assert (=> b!140089 (= lt!73455 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73460 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73460 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73466 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73466 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73453 () Unit!4395)

(assert (=> b!140089 (= lt!73453 (addApplyDifferent!96 lt!73455 lt!73460 (zeroValue!2790 newMap!16) lt!73466))))

(assert (=> b!140089 (= (apply!120 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) lt!73466) (apply!120 lt!73455 lt!73466))))

(declare-fun lt!73451 () Unit!4395)

(assert (=> b!140089 (= lt!73451 lt!73453)))

(declare-fun lt!73464 () ListLongMap!1747)

(assert (=> b!140089 (= lt!73464 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73447 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73447 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73456 () (_ BitVec 64))

(assert (=> b!140089 (= lt!73456 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140089 (= lt!73463 (addApplyDifferent!96 lt!73464 lt!73447 (minValue!2790 newMap!16) lt!73456))))

(assert (=> b!140089 (= (apply!120 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) lt!73456) (apply!120 lt!73464 lt!73456))))

(declare-fun b!140090 () Bool)

(declare-fun res!66959 () Bool)

(declare-fun e!91366 () Bool)

(assert (=> b!140090 (=> (not res!66959) (not e!91366))))

(declare-fun e!91376 () Bool)

(assert (=> b!140090 (= res!66959 e!91376)))

(declare-fun res!66956 () Bool)

(assert (=> b!140090 (=> res!66956 e!91376)))

(declare-fun e!91373 () Bool)

(assert (=> b!140090 (= res!66956 (not e!91373))))

(declare-fun res!66955 () Bool)

(assert (=> b!140090 (=> (not res!66955) (not e!91373))))

(assert (=> b!140090 (= res!66955 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140091 () Bool)

(assert (=> b!140091 (= e!91372 call!15560)))

(declare-fun b!140092 () Bool)

(declare-fun e!91368 () ListLongMap!1747)

(declare-fun e!91375 () ListLongMap!1747)

(assert (=> b!140092 (= e!91368 e!91375)))

(declare-fun c!26226 () Bool)

(assert (=> b!140092 (= c!26226 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!26223 () Bool)

(declare-fun bm!15554 () Bool)

(declare-fun call!15558 () ListLongMap!1747)

(assert (=> bm!15554 (= call!15559 (+!174 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)) (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140094 () Bool)

(declare-fun Unit!4409 () Unit!4395)

(assert (=> b!140094 (= e!91370 Unit!4409)))

(declare-fun b!140095 () Bool)

(declare-fun e!91377 () Bool)

(declare-fun e!91369 () Bool)

(assert (=> b!140095 (= e!91377 e!91369)))

(declare-fun res!66960 () Bool)

(declare-fun call!15557 () Bool)

(assert (=> b!140095 (= res!66960 call!15557)))

(assert (=> b!140095 (=> (not res!66960) (not e!91369))))

(declare-fun b!140096 () Bool)

(declare-fun e!91378 () Bool)

(assert (=> b!140096 (= e!91366 e!91378)))

(declare-fun c!26222 () Bool)

(assert (=> b!140096 (= c!26222 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140097 () Bool)

(assert (=> b!140097 (= e!91373 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140098 () Bool)

(declare-fun lt!73450 () ListLongMap!1747)

(assert (=> b!140098 (= e!91369 (= (apply!120 lt!73450 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15555 () Bool)

(assert (=> bm!15555 (= call!15555 call!15558)))

(declare-fun b!140099 () Bool)

(declare-fun call!15561 () Bool)

(assert (=> b!140099 (= e!91378 (not call!15561))))

(declare-fun b!140100 () Bool)

(declare-fun e!91374 () Bool)

(assert (=> b!140100 (= e!91374 (= (apply!120 lt!73450 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun bm!15556 () Bool)

(assert (=> bm!15556 (= call!15558 call!15556)))

(declare-fun b!140101 () Bool)

(declare-fun e!91367 () Bool)

(assert (=> b!140101 (= e!91376 e!91367)))

(declare-fun res!66963 () Bool)

(assert (=> b!140101 (=> (not res!66963) (not e!91367))))

(assert (=> b!140101 (= res!66963 (contains!921 lt!73450 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140101 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun bm!15557 () Bool)

(assert (=> bm!15557 (= call!15557 (contains!921 lt!73450 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140102 () Bool)

(assert (=> b!140102 (= e!91367 (= (apply!120 lt!73450 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140102 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(assert (=> b!140102 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140103 () Bool)

(declare-fun e!91371 () Bool)

(assert (=> b!140103 (= e!91371 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140104 () Bool)

(declare-fun c!26227 () Bool)

(assert (=> b!140104 (= c!26227 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140104 (= e!91375 e!91372)))

(declare-fun b!140105 () Bool)

(assert (=> b!140105 (= e!91368 (+!174 call!15559 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun d!43525 () Bool)

(assert (=> d!43525 e!91366))

(declare-fun res!66957 () Bool)

(assert (=> d!43525 (=> (not res!66957) (not e!91366))))

(assert (=> d!43525 (= res!66957 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun lt!73449 () ListLongMap!1747)

(assert (=> d!43525 (= lt!73450 lt!73449)))

(declare-fun lt!73448 () Unit!4395)

(assert (=> d!43525 (= lt!73448 e!91370)))

(declare-fun c!26225 () Bool)

(assert (=> d!43525 (= c!26225 e!91371)))

(declare-fun res!66961 () Bool)

(assert (=> d!43525 (=> (not res!66961) (not e!91371))))

(assert (=> d!43525 (= res!66961 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43525 (= lt!73449 e!91368)))

(assert (=> d!43525 (= c!26223 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43525 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43525 (= (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73450)))

(declare-fun b!140093 () Bool)

(assert (=> b!140093 (= e!91375 call!15560)))

(declare-fun bm!15558 () Bool)

(assert (=> bm!15558 (= call!15561 (contains!921 lt!73450 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140106 () Bool)

(assert (=> b!140106 (= e!91378 e!91374)))

(declare-fun res!66962 () Bool)

(assert (=> b!140106 (= res!66962 call!15561)))

(assert (=> b!140106 (=> (not res!66962) (not e!91374))))

(declare-fun b!140107 () Bool)

(assert (=> b!140107 (= e!91377 (not call!15557))))

(declare-fun b!140108 () Bool)

(declare-fun res!66958 () Bool)

(assert (=> b!140108 (=> (not res!66958) (not e!91366))))

(assert (=> b!140108 (= res!66958 e!91377)))

(declare-fun c!26224 () Bool)

(assert (=> b!140108 (= c!26224 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43525 c!26223) b!140105))

(assert (= (and d!43525 (not c!26223)) b!140092))

(assert (= (and b!140092 c!26226) b!140093))

(assert (= (and b!140092 (not c!26226)) b!140104))

(assert (= (and b!140104 c!26227) b!140091))

(assert (= (and b!140104 (not c!26227)) b!140088))

(assert (= (or b!140091 b!140088) bm!15555))

(assert (= (or b!140093 bm!15555) bm!15556))

(assert (= (or b!140093 b!140091) bm!15552))

(assert (= (or b!140105 bm!15556) bm!15553))

(assert (= (or b!140105 bm!15552) bm!15554))

(assert (= (and d!43525 res!66961) b!140103))

(assert (= (and d!43525 c!26225) b!140089))

(assert (= (and d!43525 (not c!26225)) b!140094))

(assert (= (and d!43525 res!66957) b!140090))

(assert (= (and b!140090 res!66955) b!140097))

(assert (= (and b!140090 (not res!66956)) b!140101))

(assert (= (and b!140101 res!66963) b!140102))

(assert (= (and b!140090 res!66959) b!140108))

(assert (= (and b!140108 c!26224) b!140095))

(assert (= (and b!140108 (not c!26224)) b!140107))

(assert (= (and b!140095 res!66960) b!140098))

(assert (= (or b!140095 b!140107) bm!15557))

(assert (= (and b!140108 res!66958) b!140096))

(assert (= (and b!140096 c!26222) b!140106))

(assert (= (and b!140096 (not c!26222)) b!140099))

(assert (= (and b!140106 res!66962) b!140100))

(assert (= (or b!140106 b!140099) bm!15558))

(declare-fun b_lambda!6299 () Bool)

(assert (=> (not b_lambda!6299) (not b!140102)))

(assert (=> b!140102 t!6366))

(declare-fun b_and!8777 () Bool)

(assert (= b_and!8773 (and (=> t!6366 result!4203) b_and!8777)))

(assert (=> b!140102 t!6368))

(declare-fun b_and!8779 () Bool)

(assert (= b_and!8775 (and (=> t!6368 result!4205) b_and!8779)))

(declare-fun m!167245 () Bool)

(assert (=> b!140105 m!167245))

(declare-fun m!167247 () Bool)

(assert (=> bm!15553 m!167247))

(assert (=> d!43525 m!166961))

(declare-fun m!167249 () Bool)

(assert (=> b!140100 m!167249))

(declare-fun m!167251 () Bool)

(assert (=> bm!15554 m!167251))

(assert (=> b!140102 m!166967))

(assert (=> b!140102 m!166967))

(declare-fun m!167253 () Bool)

(assert (=> b!140102 m!167253))

(assert (=> b!140102 m!166971))

(assert (=> b!140102 m!166973))

(assert (=> b!140102 m!166971))

(assert (=> b!140102 m!166975))

(assert (=> b!140102 m!166973))

(declare-fun m!167255 () Bool)

(assert (=> bm!15557 m!167255))

(declare-fun m!167257 () Bool)

(assert (=> b!140098 m!167257))

(assert (=> b!140097 m!166967))

(assert (=> b!140097 m!166967))

(assert (=> b!140097 m!166981))

(assert (=> b!140101 m!166967))

(assert (=> b!140101 m!166967))

(declare-fun m!167259 () Bool)

(assert (=> b!140101 m!167259))

(assert (=> b!140103 m!166967))

(assert (=> b!140103 m!166967))

(assert (=> b!140103 m!166981))

(declare-fun m!167261 () Bool)

(assert (=> bm!15558 m!167261))

(declare-fun m!167263 () Bool)

(assert (=> b!140089 m!167263))

(declare-fun m!167265 () Bool)

(assert (=> b!140089 m!167265))

(declare-fun m!167267 () Bool)

(assert (=> b!140089 m!167267))

(declare-fun m!167269 () Bool)

(assert (=> b!140089 m!167269))

(declare-fun m!167271 () Bool)

(assert (=> b!140089 m!167271))

(declare-fun m!167273 () Bool)

(assert (=> b!140089 m!167273))

(declare-fun m!167275 () Bool)

(assert (=> b!140089 m!167275))

(declare-fun m!167277 () Bool)

(assert (=> b!140089 m!167277))

(assert (=> b!140089 m!167277))

(declare-fun m!167279 () Bool)

(assert (=> b!140089 m!167279))

(assert (=> b!140089 m!167247))

(declare-fun m!167281 () Bool)

(assert (=> b!140089 m!167281))

(declare-fun m!167283 () Bool)

(assert (=> b!140089 m!167283))

(assert (=> b!140089 m!167269))

(declare-fun m!167285 () Bool)

(assert (=> b!140089 m!167285))

(declare-fun m!167287 () Bool)

(assert (=> b!140089 m!167287))

(assert (=> b!140089 m!166967))

(declare-fun m!167289 () Bool)

(assert (=> b!140089 m!167289))

(assert (=> b!140089 m!167263))

(declare-fun m!167291 () Bool)

(assert (=> b!140089 m!167291))

(assert (=> b!140089 m!167281))

(assert (=> d!43453 d!43525))

(declare-fun d!43527 () Bool)

(declare-fun e!91379 () Bool)

(assert (=> d!43527 e!91379))

(declare-fun res!66965 () Bool)

(assert (=> d!43527 (=> (not res!66965) (not e!91379))))

(declare-fun lt!73470 () ListLongMap!1747)

(assert (=> d!43527 (= res!66965 (contains!921 lt!73470 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun lt!73471 () List!1764)

(assert (=> d!43527 (= lt!73470 (ListLongMap!1748 lt!73471))))

(declare-fun lt!73468 () Unit!4395)

(declare-fun lt!73469 () Unit!4395)

(assert (=> d!43527 (= lt!73468 lt!73469)))

(assert (=> d!43527 (= (getValueByKey!175 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (Some!180 (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43527 (= lt!73469 (lemmaContainsTupThenGetReturnValue!91 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43527 (= lt!73471 (insertStrictlySorted!93 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43527 (= (+!174 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73470)))

(declare-fun b!140109 () Bool)

(declare-fun res!66964 () Bool)

(assert (=> b!140109 (=> (not res!66964) (not e!91379))))

(assert (=> b!140109 (= res!66964 (= (getValueByKey!175 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (Some!180 (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140110 () Bool)

(assert (=> b!140110 (= e!91379 (contains!923 (toList!889 lt!73470) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!43527 res!66965) b!140109))

(assert (= (and b!140109 res!66964) b!140110))

(declare-fun m!167293 () Bool)

(assert (=> d!43527 m!167293))

(declare-fun m!167295 () Bool)

(assert (=> d!43527 m!167295))

(declare-fun m!167297 () Bool)

(assert (=> d!43527 m!167297))

(declare-fun m!167299 () Bool)

(assert (=> d!43527 m!167299))

(declare-fun m!167301 () Bool)

(assert (=> b!140109 m!167301))

(declare-fun m!167303 () Bool)

(assert (=> b!140110 m!167303))

(assert (=> bm!15442 d!43527))

(declare-fun b!140127 () Bool)

(declare-fun res!66977 () Bool)

(declare-fun e!91391 () Bool)

(assert (=> b!140127 (=> (not res!66977) (not e!91391))))

(declare-fun lt!73477 () SeekEntryResult!289)

(assert (=> b!140127 (= res!66977 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!73477)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140127 (and (bvsge (index!3322 lt!73477) #b00000000000000000000000000000000) (bvslt (index!3322 lt!73477) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140128 () Bool)

(declare-fun e!91390 () Bool)

(declare-fun e!91388 () Bool)

(assert (=> b!140128 (= e!91390 e!91388)))

(declare-fun c!26233 () Bool)

(assert (=> b!140128 (= c!26233 ((_ is MissingVacant!289) lt!73477))))

(declare-fun c!26232 () Bool)

(declare-fun bm!15563 () Bool)

(declare-fun call!15567 () Bool)

(assert (=> bm!15563 (= call!15567 (inRange!0 (ite c!26232 (index!3319 lt!73477) (index!3322 lt!73477)) (mask!7280 newMap!16)))))

(declare-fun b!140129 () Bool)

(declare-fun call!15566 () Bool)

(assert (=> b!140129 (= e!91391 (not call!15566))))

(declare-fun b!140130 () Bool)

(assert (=> b!140130 (and (bvsge (index!3319 lt!73477) #b00000000000000000000000000000000) (bvslt (index!3319 lt!73477) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!66975 () Bool)

(assert (=> b!140130 (= res!66975 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!73477)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91389 () Bool)

(assert (=> b!140130 (=> (not res!66975) (not e!91389))))

(declare-fun d!43529 () Bool)

(assert (=> d!43529 e!91390))

(assert (=> d!43529 (= c!26232 ((_ is MissingZero!289) lt!73477))))

(assert (=> d!43529 (= lt!73477 (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun lt!73476 () Unit!4395)

(declare-fun choose!866 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4395)

(assert (=> d!43529 (= lt!73476 (choose!866 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43529 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43529 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) lt!73476)))

(declare-fun b!140131 () Bool)

(assert (=> b!140131 (= e!91390 e!91389)))

(declare-fun res!66974 () Bool)

(assert (=> b!140131 (= res!66974 call!15567)))

(assert (=> b!140131 (=> (not res!66974) (not e!91389))))

(declare-fun b!140132 () Bool)

(assert (=> b!140132 (= e!91388 ((_ is Undefined!289) lt!73477))))

(declare-fun b!140133 () Bool)

(declare-fun res!66976 () Bool)

(assert (=> b!140133 (=> (not res!66976) (not e!91391))))

(assert (=> b!140133 (= res!66976 call!15567)))

(assert (=> b!140133 (= e!91388 e!91391)))

(declare-fun b!140134 () Bool)

(assert (=> b!140134 (= e!91389 (not call!15566))))

(declare-fun bm!15564 () Bool)

(assert (=> bm!15564 (= call!15566 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!43529 c!26232) b!140131))

(assert (= (and d!43529 (not c!26232)) b!140128))

(assert (= (and b!140131 res!66974) b!140130))

(assert (= (and b!140130 res!66975) b!140134))

(assert (= (and b!140128 c!26233) b!140133))

(assert (= (and b!140128 (not c!26233)) b!140132))

(assert (= (and b!140133 res!66976) b!140127))

(assert (= (and b!140127 res!66977) b!140129))

(assert (= (or b!140131 b!140133) bm!15563))

(assert (= (or b!140134 b!140129) bm!15564))

(declare-fun m!167305 () Bool)

(assert (=> b!140130 m!167305))

(declare-fun m!167307 () Bool)

(assert (=> b!140127 m!167307))

(declare-fun m!167309 () Bool)

(assert (=> bm!15563 m!167309))

(assert (=> d!43529 m!166733))

(assert (=> d!43529 m!166903))

(assert (=> d!43529 m!166733))

(declare-fun m!167311 () Bool)

(assert (=> d!43529 m!167311))

(assert (=> d!43529 m!166961))

(assert (=> bm!15564 m!166733))

(assert (=> bm!15564 m!166931))

(assert (=> bm!15496 d!43529))

(declare-fun bm!15565 () Bool)

(declare-fun call!15573 () ListLongMap!1747)

(declare-fun call!15572 () ListLongMap!1747)

(assert (=> bm!15565 (= call!15573 call!15572)))

(declare-fun b!140135 () Bool)

(declare-fun e!91398 () ListLongMap!1747)

(declare-fun call!15568 () ListLongMap!1747)

(assert (=> b!140135 (= e!91398 call!15568)))

(declare-fun call!15569 () ListLongMap!1747)

(declare-fun bm!15566 () Bool)

(assert (=> bm!15566 (= call!15569 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!140136 () Bool)

(declare-fun e!91396 () Unit!4395)

(declare-fun lt!73495 () Unit!4395)

(assert (=> b!140136 (= e!91396 lt!73495)))

(declare-fun lt!73491 () ListLongMap!1747)

(assert (=> b!140136 (= lt!73491 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73484 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73484 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73489 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73489 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73486 () Unit!4395)

(assert (=> b!140136 (= lt!73486 (addStillContains!96 lt!73491 lt!73484 (zeroValue!2790 newMap!16) lt!73489))))

(assert (=> b!140136 (contains!921 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) lt!73489)))

(declare-fun lt!73494 () Unit!4395)

(assert (=> b!140136 (= lt!73494 lt!73486)))

(declare-fun lt!73493 () ListLongMap!1747)

(assert (=> b!140136 (= lt!73493 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73497 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73497 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73499 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73499 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73490 () Unit!4395)

(assert (=> b!140136 (= lt!73490 (addApplyDifferent!96 lt!73493 lt!73497 (minValue!2790 newMap!16) lt!73499))))

(assert (=> b!140136 (= (apply!120 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) lt!73499) (apply!120 lt!73493 lt!73499))))

(declare-fun lt!73478 () Unit!4395)

(assert (=> b!140136 (= lt!73478 lt!73490)))

(declare-fun lt!73487 () ListLongMap!1747)

(assert (=> b!140136 (= lt!73487 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73492 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73492 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73498 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73498 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73485 () Unit!4395)

(assert (=> b!140136 (= lt!73485 (addApplyDifferent!96 lt!73487 lt!73492 (zeroValue!2790 newMap!16) lt!73498))))

(assert (=> b!140136 (= (apply!120 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) lt!73498) (apply!120 lt!73487 lt!73498))))

(declare-fun lt!73483 () Unit!4395)

(assert (=> b!140136 (= lt!73483 lt!73485)))

(declare-fun lt!73496 () ListLongMap!1747)

(assert (=> b!140136 (= lt!73496 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73479 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73479 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73488 () (_ BitVec 64))

(assert (=> b!140136 (= lt!73488 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140136 (= lt!73495 (addApplyDifferent!96 lt!73496 lt!73479 (minValue!2790 newMap!16) lt!73488))))

(assert (=> b!140136 (= (apply!120 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) lt!73488) (apply!120 lt!73496 lt!73488))))

(declare-fun b!140137 () Bool)

(declare-fun res!66982 () Bool)

(declare-fun e!91392 () Bool)

(assert (=> b!140137 (=> (not res!66982) (not e!91392))))

(declare-fun e!91402 () Bool)

(assert (=> b!140137 (= res!66982 e!91402)))

(declare-fun res!66979 () Bool)

(assert (=> b!140137 (=> res!66979 e!91402)))

(declare-fun e!91399 () Bool)

(assert (=> b!140137 (= res!66979 (not e!91399))))

(declare-fun res!66978 () Bool)

(assert (=> b!140137 (=> (not res!66978) (not e!91399))))

(assert (=> b!140137 (= res!66978 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140138 () Bool)

(assert (=> b!140138 (= e!91398 call!15573)))

(declare-fun b!140139 () Bool)

(declare-fun e!91394 () ListLongMap!1747)

(declare-fun e!91401 () ListLongMap!1747)

(assert (=> b!140139 (= e!91394 e!91401)))

(declare-fun c!26238 () Bool)

(assert (=> b!140139 (= c!26238 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!15571 () ListLongMap!1747)

(declare-fun c!26235 () Bool)

(declare-fun bm!15567 () Bool)

(assert (=> bm!15567 (= call!15572 (+!174 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)) (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140141 () Bool)

(declare-fun Unit!4410 () Unit!4395)

(assert (=> b!140141 (= e!91396 Unit!4410)))

(declare-fun b!140142 () Bool)

(declare-fun e!91403 () Bool)

(declare-fun e!91395 () Bool)

(assert (=> b!140142 (= e!91403 e!91395)))

(declare-fun res!66983 () Bool)

(declare-fun call!15570 () Bool)

(assert (=> b!140142 (= res!66983 call!15570)))

(assert (=> b!140142 (=> (not res!66983) (not e!91395))))

(declare-fun b!140143 () Bool)

(declare-fun e!91404 () Bool)

(assert (=> b!140143 (= e!91392 e!91404)))

(declare-fun c!26234 () Bool)

(assert (=> b!140143 (= c!26234 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140144 () Bool)

(assert (=> b!140144 (= e!91399 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140145 () Bool)

(declare-fun lt!73482 () ListLongMap!1747)

(assert (=> b!140145 (= e!91395 (= (apply!120 lt!73482 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15568 () Bool)

(assert (=> bm!15568 (= call!15568 call!15571)))

(declare-fun b!140146 () Bool)

(declare-fun call!15574 () Bool)

(assert (=> b!140146 (= e!91404 (not call!15574))))

(declare-fun b!140147 () Bool)

(declare-fun e!91400 () Bool)

(assert (=> b!140147 (= e!91400 (= (apply!120 lt!73482 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun bm!15569 () Bool)

(assert (=> bm!15569 (= call!15571 call!15569)))

(declare-fun b!140148 () Bool)

(declare-fun e!91393 () Bool)

(assert (=> b!140148 (= e!91402 e!91393)))

(declare-fun res!66986 () Bool)

(assert (=> b!140148 (=> (not res!66986) (not e!91393))))

(assert (=> b!140148 (= res!66986 (contains!921 lt!73482 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140148 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun bm!15570 () Bool)

(assert (=> bm!15570 (= call!15570 (contains!921 lt!73482 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140149 () Bool)

(assert (=> b!140149 (= e!91393 (= (apply!120 lt!73482 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140149 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219))))))

(assert (=> b!140149 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140150 () Bool)

(declare-fun e!91397 () Bool)

(assert (=> b!140150 (= e!91397 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140151 () Bool)

(declare-fun c!26239 () Bool)

(assert (=> b!140151 (= c!26239 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140151 (= e!91401 e!91398)))

(declare-fun b!140152 () Bool)

(assert (=> b!140152 (= e!91394 (+!174 call!15572 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun d!43531 () Bool)

(assert (=> d!43531 e!91392))

(declare-fun res!66980 () Bool)

(assert (=> d!43531 (=> (not res!66980) (not e!91392))))

(assert (=> d!43531 (= res!66980 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun lt!73481 () ListLongMap!1747)

(assert (=> d!43531 (= lt!73482 lt!73481)))

(declare-fun lt!73480 () Unit!4395)

(assert (=> d!43531 (= lt!73480 e!91396)))

(declare-fun c!26237 () Bool)

(assert (=> d!43531 (= c!26237 e!91397)))

(declare-fun res!66984 () Bool)

(assert (=> d!43531 (=> (not res!66984) (not e!91397))))

(assert (=> d!43531 (= res!66984 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43531 (= lt!73481 e!91394)))

(assert (=> d!43531 (= c!26235 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43531 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43531 (= (getCurrentListMap!555 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73482)))

(declare-fun b!140140 () Bool)

(assert (=> b!140140 (= e!91401 call!15573)))

(declare-fun bm!15571 () Bool)

(assert (=> bm!15571 (= call!15574 (contains!921 lt!73482 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140153 () Bool)

(assert (=> b!140153 (= e!91404 e!91400)))

(declare-fun res!66985 () Bool)

(assert (=> b!140153 (= res!66985 call!15574)))

(assert (=> b!140153 (=> (not res!66985) (not e!91400))))

(declare-fun b!140154 () Bool)

(assert (=> b!140154 (= e!91403 (not call!15570))))

(declare-fun b!140155 () Bool)

(declare-fun res!66981 () Bool)

(assert (=> b!140155 (=> (not res!66981) (not e!91392))))

(assert (=> b!140155 (= res!66981 e!91403)))

(declare-fun c!26236 () Bool)

(assert (=> b!140155 (= c!26236 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43531 c!26235) b!140152))

(assert (= (and d!43531 (not c!26235)) b!140139))

(assert (= (and b!140139 c!26238) b!140140))

(assert (= (and b!140139 (not c!26238)) b!140151))

(assert (= (and b!140151 c!26239) b!140138))

(assert (= (and b!140151 (not c!26239)) b!140135))

(assert (= (or b!140138 b!140135) bm!15568))

(assert (= (or b!140140 bm!15568) bm!15569))

(assert (= (or b!140140 b!140138) bm!15565))

(assert (= (or b!140152 bm!15569) bm!15566))

(assert (= (or b!140152 bm!15565) bm!15567))

(assert (= (and d!43531 res!66984) b!140150))

(assert (= (and d!43531 c!26237) b!140136))

(assert (= (and d!43531 (not c!26237)) b!140141))

(assert (= (and d!43531 res!66980) b!140137))

(assert (= (and b!140137 res!66978) b!140144))

(assert (= (and b!140137 (not res!66979)) b!140148))

(assert (= (and b!140148 res!66986) b!140149))

(assert (= (and b!140137 res!66982) b!140155))

(assert (= (and b!140155 c!26236) b!140142))

(assert (= (and b!140155 (not c!26236)) b!140154))

(assert (= (and b!140142 res!66983) b!140145))

(assert (= (or b!140142 b!140154) bm!15570))

(assert (= (and b!140155 res!66981) b!140143))

(assert (= (and b!140143 c!26234) b!140153))

(assert (= (and b!140143 (not c!26234)) b!140146))

(assert (= (and b!140153 res!66985) b!140147))

(assert (= (or b!140153 b!140146) bm!15571))

(declare-fun b_lambda!6301 () Bool)

(assert (=> (not b_lambda!6301) (not b!140149)))

(assert (=> b!140149 t!6366))

(declare-fun b_and!8781 () Bool)

(assert (= b_and!8777 (and (=> t!6366 result!4203) b_and!8781)))

(assert (=> b!140149 t!6368))

(declare-fun b_and!8783 () Bool)

(assert (= b_and!8779 (and (=> t!6368 result!4205) b_and!8783)))

(declare-fun m!167313 () Bool)

(assert (=> b!140152 m!167313))

(declare-fun m!167315 () Bool)

(assert (=> bm!15566 m!167315))

(assert (=> d!43531 m!166961))

(declare-fun m!167317 () Bool)

(assert (=> b!140147 m!167317))

(declare-fun m!167319 () Bool)

(assert (=> bm!15567 m!167319))

(assert (=> b!140149 m!166967))

(assert (=> b!140149 m!166967))

(declare-fun m!167321 () Bool)

(assert (=> b!140149 m!167321))

(assert (=> b!140149 m!166971))

(declare-fun m!167323 () Bool)

(assert (=> b!140149 m!167323))

(assert (=> b!140149 m!166971))

(declare-fun m!167325 () Bool)

(assert (=> b!140149 m!167325))

(assert (=> b!140149 m!167323))

(declare-fun m!167327 () Bool)

(assert (=> bm!15570 m!167327))

(declare-fun m!167329 () Bool)

(assert (=> b!140145 m!167329))

(assert (=> b!140144 m!166967))

(assert (=> b!140144 m!166967))

(assert (=> b!140144 m!166981))

(assert (=> b!140148 m!166967))

(assert (=> b!140148 m!166967))

(declare-fun m!167331 () Bool)

(assert (=> b!140148 m!167331))

(assert (=> b!140150 m!166967))

(assert (=> b!140150 m!166967))

(assert (=> b!140150 m!166981))

(declare-fun m!167333 () Bool)

(assert (=> bm!15571 m!167333))

(declare-fun m!167335 () Bool)

(assert (=> b!140136 m!167335))

(declare-fun m!167337 () Bool)

(assert (=> b!140136 m!167337))

(declare-fun m!167339 () Bool)

(assert (=> b!140136 m!167339))

(declare-fun m!167341 () Bool)

(assert (=> b!140136 m!167341))

(declare-fun m!167343 () Bool)

(assert (=> b!140136 m!167343))

(declare-fun m!167345 () Bool)

(assert (=> b!140136 m!167345))

(declare-fun m!167347 () Bool)

(assert (=> b!140136 m!167347))

(declare-fun m!167349 () Bool)

(assert (=> b!140136 m!167349))

(assert (=> b!140136 m!167349))

(declare-fun m!167351 () Bool)

(assert (=> b!140136 m!167351))

(assert (=> b!140136 m!167315))

(declare-fun m!167353 () Bool)

(assert (=> b!140136 m!167353))

(declare-fun m!167355 () Bool)

(assert (=> b!140136 m!167355))

(assert (=> b!140136 m!167341))

(declare-fun m!167357 () Bool)

(assert (=> b!140136 m!167357))

(declare-fun m!167359 () Bool)

(assert (=> b!140136 m!167359))

(assert (=> b!140136 m!166967))

(declare-fun m!167361 () Bool)

(assert (=> b!140136 m!167361))

(assert (=> b!140136 m!167335))

(declare-fun m!167363 () Bool)

(assert (=> b!140136 m!167363))

(assert (=> b!140136 m!167353))

(assert (=> bm!15500 d!43531))

(declare-fun d!43533 () Bool)

(declare-fun e!91407 () Bool)

(assert (=> d!43533 e!91407))

(declare-fun res!66991 () Bool)

(assert (=> d!43533 (=> (not res!66991) (not e!91407))))

(declare-fun lt!73505 () SeekEntryResult!289)

(assert (=> d!43533 (= res!66991 ((_ is Found!289) lt!73505))))

(assert (=> d!43533 (= lt!73505 (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun lt!73504 () Unit!4395)

(declare-fun choose!867 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) Int) Unit!4395)

(assert (=> d!43533 (= lt!73504 (choose!867 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43533 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43533 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) lt!73504)))

(declare-fun b!140160 () Bool)

(declare-fun res!66992 () Bool)

(assert (=> b!140160 (=> (not res!66992) (not e!91407))))

(assert (=> b!140160 (= res!66992 (inRange!0 (index!3320 lt!73505) (mask!7280 newMap!16)))))

(declare-fun b!140161 () Bool)

(assert (=> b!140161 (= e!91407 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73505)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!140161 (and (bvsge (index!3320 lt!73505) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73505) (size!2586 (_keys!4699 newMap!16))))))

(assert (= (and d!43533 res!66991) b!140160))

(assert (= (and b!140160 res!66992) b!140161))

(assert (=> d!43533 m!166733))

(assert (=> d!43533 m!166903))

(assert (=> d!43533 m!166733))

(declare-fun m!167365 () Bool)

(assert (=> d!43533 m!167365))

(assert (=> d!43533 m!166961))

(declare-fun m!167367 () Bool)

(assert (=> b!140160 m!167367))

(declare-fun m!167369 () Bool)

(assert (=> b!140161 m!167369))

(assert (=> bm!15508 d!43533))

(declare-fun d!43535 () Bool)

(assert (=> d!43535 (= (get!1536 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!139860 d!43535))

(declare-fun d!43537 () Bool)

(declare-fun e!91408 () Bool)

(assert (=> d!43537 e!91408))

(declare-fun res!66994 () Bool)

(assert (=> d!43537 (=> (not res!66994) (not e!91408))))

(declare-fun lt!73508 () ListLongMap!1747)

(assert (=> d!43537 (= res!66994 (contains!921 lt!73508 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73509 () List!1764)

(assert (=> d!43537 (= lt!73508 (ListLongMap!1748 lt!73509))))

(declare-fun lt!73506 () Unit!4395)

(declare-fun lt!73507 () Unit!4395)

(assert (=> d!43537 (= lt!73506 lt!73507)))

(assert (=> d!43537 (= (getValueByKey!175 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43537 (= lt!73507 (lemmaContainsTupThenGetReturnValue!91 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43537 (= lt!73509 (insertStrictlySorted!93 (toList!889 call!15500) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43537 (= (+!174 call!15500 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73508)))

(declare-fun b!140162 () Bool)

(declare-fun res!66993 () Bool)

(assert (=> b!140162 (=> (not res!66993) (not e!91408))))

(assert (=> b!140162 (= res!66993 (= (getValueByKey!175 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140163 () Bool)

(assert (=> b!140163 (= e!91408 (contains!923 (toList!889 lt!73508) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43537 res!66994) b!140162))

(assert (= (and b!140162 res!66993) b!140163))

(declare-fun m!167371 () Bool)

(assert (=> d!43537 m!167371))

(declare-fun m!167373 () Bool)

(assert (=> d!43537 m!167373))

(declare-fun m!167375 () Bool)

(assert (=> d!43537 m!167375))

(declare-fun m!167377 () Bool)

(assert (=> d!43537 m!167377))

(declare-fun m!167379 () Bool)

(assert (=> b!140162 m!167379))

(declare-fun m!167381 () Bool)

(assert (=> b!140163 m!167381))

(assert (=> b!139849 d!43537))

(declare-fun d!43539 () Bool)

(assert (=> d!43539 (= (apply!120 lt!73135 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5846 () Bool)

(assert (= bs!5846 d!43539))

(declare-fun m!167383 () Bool)

(assert (=> bs!5846 m!167383))

(assert (=> bs!5846 m!167383))

(declare-fun m!167385 () Bool)

(assert (=> bs!5846 m!167385))

(assert (=> b!139722 d!43539))

(declare-fun b!140172 () Bool)

(declare-fun e!91417 () Bool)

(declare-fun e!91416 () Bool)

(assert (=> b!140172 (= e!91417 e!91416)))

(declare-fun lt!73517 () (_ BitVec 64))

(assert (=> b!140172 (= lt!73517 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73518 () Unit!4395)

(assert (=> b!140172 (= lt!73518 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000))))

(assert (=> b!140172 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000)))

(declare-fun lt!73516 () Unit!4395)

(assert (=> b!140172 (= lt!73516 lt!73518)))

(declare-fun res!66999 () Bool)

(assert (=> b!140172 (= res!66999 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) (Found!289 #b00000000000000000000000000000000)))))

(assert (=> b!140172 (=> (not res!66999) (not e!91416))))

(declare-fun d!43541 () Bool)

(declare-fun res!67000 () Bool)

(declare-fun e!91415 () Bool)

(assert (=> d!43541 (=> res!67000 e!91415)))

(assert (=> d!43541 (= res!67000 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43541 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 newMap!16) (mask!7280 newMap!16)) e!91415)))

(declare-fun b!140173 () Bool)

(declare-fun call!15577 () Bool)

(assert (=> b!140173 (= e!91417 call!15577)))

(declare-fun b!140174 () Bool)

(assert (=> b!140174 (= e!91415 e!91417)))

(declare-fun c!26242 () Bool)

(assert (=> b!140174 (= c!26242 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140175 () Bool)

(assert (=> b!140175 (= e!91416 call!15577)))

(declare-fun bm!15574 () Bool)

(assert (=> bm!15574 (= call!15577 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (= (and d!43541 (not res!67000)) b!140174))

(assert (= (and b!140174 c!26242) b!140172))

(assert (= (and b!140174 (not c!26242)) b!140173))

(assert (= (and b!140172 res!66999) b!140175))

(assert (= (or b!140175 b!140173) bm!15574))

(assert (=> b!140172 m!166967))

(declare-fun m!167387 () Bool)

(assert (=> b!140172 m!167387))

(declare-fun m!167389 () Bool)

(assert (=> b!140172 m!167389))

(assert (=> b!140172 m!166967))

(declare-fun m!167391 () Bool)

(assert (=> b!140172 m!167391))

(assert (=> b!140174 m!166967))

(assert (=> b!140174 m!166967))

(assert (=> b!140174 m!166981))

(declare-fun m!167393 () Bool)

(assert (=> bm!15574 m!167393))

(assert (=> b!139641 d!43541))

(declare-fun d!43543 () Bool)

(assert (=> d!43543 (isDefined!129 (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun lt!73521 () Unit!4395)

(declare-fun choose!868 (List!1764 (_ BitVec 64)) Unit!4395)

(assert (=> d!43543 (= lt!73521 (choose!868 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!91420 () Bool)

(assert (=> d!43543 e!91420))

(declare-fun res!67003 () Bool)

(assert (=> d!43543 (=> (not res!67003) (not e!91420))))

(declare-fun isStrictlySorted!320 (List!1764) Bool)

(assert (=> d!43543 (= res!67003 (isStrictlySorted!320 (toList!889 lt!73065)))))

(assert (=> d!43543 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73521)))

(declare-fun b!140178 () Bool)

(assert (=> b!140178 (= e!91420 (containsKey!179 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!43543 res!67003) b!140178))

(assert (=> d!43543 m!166733))

(assert (=> d!43543 m!166889))

(assert (=> d!43543 m!166889))

(assert (=> d!43543 m!166891))

(assert (=> d!43543 m!166733))

(declare-fun m!167395 () Bool)

(assert (=> d!43543 m!167395))

(declare-fun m!167397 () Bool)

(assert (=> d!43543 m!167397))

(assert (=> b!140178 m!166733))

(assert (=> b!140178 m!166885))

(assert (=> b!139739 d!43543))

(assert (=> b!139739 d!43517))

(assert (=> b!139739 d!43519))

(assert (=> b!139727 d!43475))

(declare-fun c!26243 () Bool)

(declare-fun bm!15575 () Bool)

(declare-fun call!15578 () Bool)

(assert (=> bm!15575 (= call!15578 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))))))

(declare-fun b!140180 () Bool)

(declare-fun e!91422 () Bool)

(declare-fun e!91423 () Bool)

(assert (=> b!140180 (= e!91422 e!91423)))

(assert (=> b!140180 (= c!26243 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140181 () Bool)

(assert (=> b!140181 (= e!91423 call!15578)))

(declare-fun d!43545 () Bool)

(declare-fun res!67006 () Bool)

(declare-fun e!91424 () Bool)

(assert (=> d!43545 (=> res!67006 e!91424)))

(assert (=> d!43545 (= res!67006 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43545 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) e!91424)))

(declare-fun b!140179 () Bool)

(declare-fun e!91421 () Bool)

(assert (=> b!140179 (= e!91421 (contains!922 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140182 () Bool)

(assert (=> b!140182 (= e!91424 e!91422)))

(declare-fun res!67004 () Bool)

(assert (=> b!140182 (=> (not res!67004) (not e!91422))))

(assert (=> b!140182 (= res!67004 (not e!91421))))

(declare-fun res!67005 () Bool)

(assert (=> b!140182 (=> (not res!67005) (not e!91421))))

(assert (=> b!140182 (= res!67005 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140183 () Bool)

(assert (=> b!140183 (= e!91423 call!15578)))

(assert (= (and d!43545 (not res!67006)) b!140182))

(assert (= (and b!140182 res!67005) b!140179))

(assert (= (and b!140182 res!67004) b!140180))

(assert (= (and b!140180 c!26243) b!140181))

(assert (= (and b!140180 (not c!26243)) b!140183))

(assert (= (or b!140181 b!140183) bm!15575))

(declare-fun m!167399 () Bool)

(assert (=> bm!15575 m!167399))

(declare-fun m!167401 () Bool)

(assert (=> bm!15575 m!167401))

(assert (=> b!140180 m!167399))

(assert (=> b!140180 m!167399))

(declare-fun m!167403 () Bool)

(assert (=> b!140180 m!167403))

(assert (=> b!140179 m!167399))

(assert (=> b!140179 m!167399))

(declare-fun m!167405 () Bool)

(assert (=> b!140179 m!167405))

(assert (=> b!140182 m!167399))

(assert (=> b!140182 m!167399))

(assert (=> b!140182 m!167403))

(assert (=> bm!15425 d!43545))

(declare-fun d!43547 () Bool)

(declare-fun e!91426 () Bool)

(assert (=> d!43547 e!91426))

(declare-fun res!67007 () Bool)

(assert (=> d!43547 (=> res!67007 e!91426)))

(declare-fun lt!73522 () Bool)

(assert (=> d!43547 (= res!67007 (not lt!73522))))

(declare-fun lt!73525 () Bool)

(assert (=> d!43547 (= lt!73522 lt!73525)))

(declare-fun lt!73523 () Unit!4395)

(declare-fun e!91425 () Unit!4395)

(assert (=> d!43547 (= lt!73523 e!91425)))

(declare-fun c!26244 () Bool)

(assert (=> d!43547 (= c!26244 lt!73525)))

(assert (=> d!43547 (= lt!73525 (containsKey!179 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43547 (= (contains!921 lt!73135 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73522)))

(declare-fun b!140184 () Bool)

(declare-fun lt!73524 () Unit!4395)

(assert (=> b!140184 (= e!91425 lt!73524)))

(assert (=> b!140184 (= lt!73524 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140184 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140185 () Bool)

(declare-fun Unit!4411 () Unit!4395)

(assert (=> b!140185 (= e!91425 Unit!4411)))

(declare-fun b!140186 () Bool)

(assert (=> b!140186 (= e!91426 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43547 c!26244) b!140184))

(assert (= (and d!43547 (not c!26244)) b!140185))

(assert (= (and d!43547 (not res!67007)) b!140186))

(declare-fun m!167407 () Bool)

(assert (=> d!43547 m!167407))

(declare-fun m!167409 () Bool)

(assert (=> b!140184 m!167409))

(assert (=> b!140184 m!167383))

(assert (=> b!140184 m!167383))

(declare-fun m!167411 () Bool)

(assert (=> b!140184 m!167411))

(assert (=> b!140186 m!167383))

(assert (=> b!140186 m!167383))

(assert (=> b!140186 m!167411))

(assert (=> bm!15445 d!43547))

(declare-fun b!140195 () Bool)

(declare-fun res!67017 () Bool)

(declare-fun e!91429 () Bool)

(assert (=> b!140195 (=> (not res!67017) (not e!91429))))

(assert (=> b!140195 (= res!67017 (and (= (size!2587 (_values!2923 newMap!16)) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)) (= (size!2586 (_keys!4699 newMap!16)) (size!2587 (_values!2923 newMap!16))) (bvsge (_size!625 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!625 newMap!16) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!140198 () Bool)

(assert (=> b!140198 (= e!91429 (and (bvsge (extraKeys!2695 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!625 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!43549 () Bool)

(declare-fun res!67016 () Bool)

(assert (=> d!43549 (=> (not res!67016) (not e!91429))))

(assert (=> d!43549 (= res!67016 (validMask!0 (mask!7280 newMap!16)))))

(assert (=> d!43549 (= (simpleValid!95 newMap!16) e!91429)))

(declare-fun b!140196 () Bool)

(declare-fun res!67019 () Bool)

(assert (=> b!140196 (=> (not res!67019) (not e!91429))))

(declare-fun size!2590 (LongMapFixedSize!1152) (_ BitVec 32))

(assert (=> b!140196 (= res!67019 (bvsge (size!2590 newMap!16) (_size!625 newMap!16)))))

(declare-fun b!140197 () Bool)

(declare-fun res!67018 () Bool)

(assert (=> b!140197 (=> (not res!67018) (not e!91429))))

(assert (=> b!140197 (= res!67018 (= (size!2590 newMap!16) (bvadd (_size!625 newMap!16) (bvsdiv (bvadd (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!43549 res!67016) b!140195))

(assert (= (and b!140195 res!67017) b!140196))

(assert (= (and b!140196 res!67019) b!140197))

(assert (= (and b!140197 res!67018) b!140198))

(assert (=> d!43549 m!166961))

(declare-fun m!167413 () Bool)

(assert (=> b!140196 m!167413))

(assert (=> b!140197 m!167413))

(assert (=> d!43437 d!43549))

(assert (=> b!139827 d!43515))

(declare-fun d!43551 () Bool)

(declare-fun e!91430 () Bool)

(assert (=> d!43551 e!91430))

(declare-fun res!67021 () Bool)

(assert (=> d!43551 (=> (not res!67021) (not e!91430))))

(declare-fun lt!73528 () ListLongMap!1747)

(assert (=> d!43551 (= res!67021 (contains!921 lt!73528 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73529 () List!1764)

(assert (=> d!43551 (= lt!73528 (ListLongMap!1748 lt!73529))))

(declare-fun lt!73526 () Unit!4395)

(declare-fun lt!73527 () Unit!4395)

(assert (=> d!43551 (= lt!73526 lt!73527)))

(assert (=> d!43551 (= (getValueByKey!175 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!180 (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43551 (= lt!73527 (lemmaContainsTupThenGetReturnValue!91 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43551 (= lt!73529 (insertStrictlySorted!93 (toList!889 (ite c!26153 call!15498 call!15508)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43551 (= (+!174 (ite c!26153 call!15498 call!15508) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73528)))

(declare-fun b!140199 () Bool)

(declare-fun res!67020 () Bool)

(assert (=> b!140199 (=> (not res!67020) (not e!91430))))

(assert (=> b!140199 (= res!67020 (= (getValueByKey!175 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!180 (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140200 () Bool)

(assert (=> b!140200 (= e!91430 (contains!923 (toList!889 lt!73528) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43551 res!67021) b!140199))

(assert (= (and b!140199 res!67020) b!140200))

(declare-fun m!167415 () Bool)

(assert (=> d!43551 m!167415))

(declare-fun m!167417 () Bool)

(assert (=> d!43551 m!167417))

(declare-fun m!167419 () Bool)

(assert (=> d!43551 m!167419))

(declare-fun m!167421 () Bool)

(assert (=> d!43551 m!167421))

(declare-fun m!167423 () Bool)

(assert (=> b!140199 m!167423))

(declare-fun m!167425 () Bool)

(assert (=> b!140200 m!167425))

(assert (=> bm!15517 d!43551))

(declare-fun d!43553 () Bool)

(assert (=> d!43553 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73532 () Unit!4395)

(declare-fun choose!869 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4395)

(assert (=> d!43553 (= lt!73532 (choose!869 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73240 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43553 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43553 (= (lemmaChangeZeroKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73240 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)) lt!73532)))

(declare-fun bs!5847 () Bool)

(assert (= bs!5847 d!43553))

(assert (=> bs!5847 m!166829))

(declare-fun m!167427 () Bool)

(assert (=> bs!5847 m!167427))

(assert (=> bs!5847 m!166829))

(assert (=> bs!5847 m!166731))

(declare-fun m!167429 () Bool)

(assert (=> bs!5847 m!167429))

(assert (=> bs!5847 m!166961))

(assert (=> bs!5847 m!166731))

(declare-fun m!167431 () Bool)

(assert (=> bs!5847 m!167431))

(assert (=> b!139840 d!43553))

(declare-fun d!43555 () Bool)

(declare-fun e!91431 () Bool)

(assert (=> d!43555 e!91431))

(declare-fun res!67023 () Bool)

(assert (=> d!43555 (=> (not res!67023) (not e!91431))))

(declare-fun lt!73535 () ListLongMap!1747)

(assert (=> d!43555 (= res!67023 (contains!921 lt!73535 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73536 () List!1764)

(assert (=> d!43555 (= lt!73535 (ListLongMap!1748 lt!73536))))

(declare-fun lt!73533 () Unit!4395)

(declare-fun lt!73534 () Unit!4395)

(assert (=> d!43555 (= lt!73533 lt!73534)))

(assert (=> d!43555 (= (getValueByKey!175 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43555 (= lt!73534 (lemmaContainsTupThenGetReturnValue!91 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43555 (= lt!73536 (insertStrictlySorted!93 (toList!889 lt!73140) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43555 (= (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73535)))

(declare-fun b!140201 () Bool)

(declare-fun res!67022 () Bool)

(assert (=> b!140201 (=> (not res!67022) (not e!91431))))

(assert (=> b!140201 (= res!67022 (= (getValueByKey!175 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140202 () Bool)

(assert (=> b!140202 (= e!91431 (contains!923 (toList!889 lt!73535) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43555 res!67023) b!140201))

(assert (= (and b!140201 res!67022) b!140202))

(declare-fun m!167433 () Bool)

(assert (=> d!43555 m!167433))

(declare-fun m!167435 () Bool)

(assert (=> d!43555 m!167435))

(declare-fun m!167437 () Bool)

(assert (=> d!43555 m!167437))

(declare-fun m!167439 () Bool)

(assert (=> d!43555 m!167439))

(declare-fun m!167441 () Bool)

(assert (=> b!140201 m!167441))

(declare-fun m!167443 () Bool)

(assert (=> b!140202 m!167443))

(assert (=> b!139713 d!43555))

(declare-fun d!43557 () Bool)

(assert (=> d!43557 (= (apply!120 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73141) (apply!120 lt!73149 lt!73141))))

(declare-fun lt!73539 () Unit!4395)

(declare-fun choose!870 (ListLongMap!1747 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4395)

(assert (=> d!43557 (= lt!73539 (choose!870 lt!73149 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73141))))

(declare-fun e!91434 () Bool)

(assert (=> d!43557 e!91434))

(declare-fun res!67026 () Bool)

(assert (=> d!43557 (=> (not res!67026) (not e!91434))))

(assert (=> d!43557 (= res!67026 (contains!921 lt!73149 lt!73141))))

(assert (=> d!43557 (= (addApplyDifferent!96 lt!73149 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73141) lt!73539)))

(declare-fun b!140206 () Bool)

(assert (=> b!140206 (= e!91434 (not (= lt!73141 lt!73132)))))

(assert (= (and d!43557 res!67026) b!140206))

(declare-fun m!167445 () Bool)

(assert (=> d!43557 m!167445))

(assert (=> d!43557 m!166855))

(assert (=> d!43557 m!166857))

(assert (=> d!43557 m!166855))

(assert (=> d!43557 m!166881))

(declare-fun m!167447 () Bool)

(assert (=> d!43557 m!167447))

(assert (=> b!139713 d!43557))

(declare-fun d!43559 () Bool)

(declare-fun e!91435 () Bool)

(assert (=> d!43559 e!91435))

(declare-fun res!67028 () Bool)

(assert (=> d!43559 (=> (not res!67028) (not e!91435))))

(declare-fun lt!73542 () ListLongMap!1747)

(assert (=> d!43559 (= res!67028 (contains!921 lt!73542 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73543 () List!1764)

(assert (=> d!43559 (= lt!73542 (ListLongMap!1748 lt!73543))))

(declare-fun lt!73540 () Unit!4395)

(declare-fun lt!73541 () Unit!4395)

(assert (=> d!43559 (= lt!73540 lt!73541)))

(assert (=> d!43559 (= (getValueByKey!175 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43559 (= lt!73541 (lemmaContainsTupThenGetReturnValue!91 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43559 (= lt!73543 (insertStrictlySorted!93 (toList!889 lt!73149) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43559 (= (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73542)))

(declare-fun b!140207 () Bool)

(declare-fun res!67027 () Bool)

(assert (=> b!140207 (=> (not res!67027) (not e!91435))))

(assert (=> b!140207 (= res!67027 (= (getValueByKey!175 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140208 () Bool)

(assert (=> b!140208 (= e!91435 (contains!923 (toList!889 lt!73542) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43559 res!67028) b!140207))

(assert (= (and b!140207 res!67027) b!140208))

(declare-fun m!167449 () Bool)

(assert (=> d!43559 m!167449))

(declare-fun m!167451 () Bool)

(assert (=> d!43559 m!167451))

(declare-fun m!167453 () Bool)

(assert (=> d!43559 m!167453))

(declare-fun m!167455 () Bool)

(assert (=> d!43559 m!167455))

(declare-fun m!167457 () Bool)

(assert (=> b!140207 m!167457))

(declare-fun m!167459 () Bool)

(assert (=> b!140208 m!167459))

(assert (=> b!139713 d!43559))

(assert (=> b!139713 d!43521))

(declare-fun d!43561 () Bool)

(assert (=> d!43561 (= (apply!120 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73141) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73141)))))

(declare-fun bs!5848 () Bool)

(assert (= bs!5848 d!43561))

(declare-fun m!167461 () Bool)

(assert (=> bs!5848 m!167461))

(assert (=> bs!5848 m!167461))

(declare-fun m!167463 () Bool)

(assert (=> bs!5848 m!167463))

(assert (=> b!139713 d!43561))

(declare-fun d!43563 () Bool)

(declare-fun e!91436 () Bool)

(assert (=> d!43563 e!91436))

(declare-fun res!67030 () Bool)

(assert (=> d!43563 (=> (not res!67030) (not e!91436))))

(declare-fun lt!73546 () ListLongMap!1747)

(assert (=> d!43563 (= res!67030 (contains!921 lt!73546 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73547 () List!1764)

(assert (=> d!43563 (= lt!73546 (ListLongMap!1748 lt!73547))))

(declare-fun lt!73544 () Unit!4395)

(declare-fun lt!73545 () Unit!4395)

(assert (=> d!43563 (= lt!73544 lt!73545)))

(assert (=> d!43563 (= (getValueByKey!175 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43563 (= lt!73545 (lemmaContainsTupThenGetReturnValue!91 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43563 (= lt!73547 (insertStrictlySorted!93 (toList!889 lt!73144) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43563 (= (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73546)))

(declare-fun b!140209 () Bool)

(declare-fun res!67029 () Bool)

(assert (=> b!140209 (=> (not res!67029) (not e!91436))))

(assert (=> b!140209 (= res!67029 (= (getValueByKey!175 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140210 () Bool)

(assert (=> b!140210 (= e!91436 (contains!923 (toList!889 lt!73546) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43563 res!67030) b!140209))

(assert (= (and b!140209 res!67029) b!140210))

(declare-fun m!167465 () Bool)

(assert (=> d!43563 m!167465))

(declare-fun m!167467 () Bool)

(assert (=> d!43563 m!167467))

(declare-fun m!167469 () Bool)

(assert (=> d!43563 m!167469))

(declare-fun m!167471 () Bool)

(assert (=> d!43563 m!167471))

(declare-fun m!167473 () Bool)

(assert (=> b!140209 m!167473))

(declare-fun m!167475 () Bool)

(assert (=> b!140210 m!167475))

(assert (=> b!139713 d!43563))

(declare-fun d!43565 () Bool)

(declare-fun e!91437 () Bool)

(assert (=> d!43565 e!91437))

(declare-fun res!67032 () Bool)

(assert (=> d!43565 (=> (not res!67032) (not e!91437))))

(declare-fun lt!73550 () ListLongMap!1747)

(assert (=> d!43565 (= res!67032 (contains!921 lt!73550 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73551 () List!1764)

(assert (=> d!43565 (= lt!73550 (ListLongMap!1748 lt!73551))))

(declare-fun lt!73548 () Unit!4395)

(declare-fun lt!73549 () Unit!4395)

(assert (=> d!43565 (= lt!73548 lt!73549)))

(assert (=> d!43565 (= (getValueByKey!175 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43565 (= lt!73549 (lemmaContainsTupThenGetReturnValue!91 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43565 (= lt!73551 (insertStrictlySorted!93 (toList!889 lt!73146) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43565 (= (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73550)))

(declare-fun b!140211 () Bool)

(declare-fun res!67031 () Bool)

(assert (=> b!140211 (=> (not res!67031) (not e!91437))))

(assert (=> b!140211 (= res!67031 (= (getValueByKey!175 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140212 () Bool)

(assert (=> b!140212 (= e!91437 (contains!923 (toList!889 lt!73550) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43565 res!67032) b!140211))

(assert (= (and b!140211 res!67031) b!140212))

(declare-fun m!167477 () Bool)

(assert (=> d!43565 m!167477))

(declare-fun m!167479 () Bool)

(assert (=> d!43565 m!167479))

(declare-fun m!167481 () Bool)

(assert (=> d!43565 m!167481))

(declare-fun m!167483 () Bool)

(assert (=> d!43565 m!167483))

(declare-fun m!167485 () Bool)

(assert (=> b!140211 m!167485))

(declare-fun m!167487 () Bool)

(assert (=> b!140212 m!167487))

(assert (=> b!139713 d!43565))

(declare-fun d!43567 () Bool)

(assert (=> d!43567 (contains!921 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73142)))

(declare-fun lt!73554 () Unit!4395)

(declare-fun choose!871 (ListLongMap!1747 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4395)

(assert (=> d!43567 (= lt!73554 (choose!871 lt!73144 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73142))))

(assert (=> d!43567 (contains!921 lt!73144 lt!73142)))

(assert (=> d!43567 (= (addStillContains!96 lt!73144 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73142) lt!73554)))

(declare-fun bs!5849 () Bool)

(assert (= bs!5849 d!43567))

(assert (=> bs!5849 m!166861))

(assert (=> bs!5849 m!166861))

(assert (=> bs!5849 m!166863))

(declare-fun m!167489 () Bool)

(assert (=> bs!5849 m!167489))

(declare-fun m!167491 () Bool)

(assert (=> bs!5849 m!167491))

(assert (=> b!139713 d!43567))

(declare-fun d!43569 () Bool)

(declare-fun e!91439 () Bool)

(assert (=> d!43569 e!91439))

(declare-fun res!67033 () Bool)

(assert (=> d!43569 (=> res!67033 e!91439)))

(declare-fun lt!73555 () Bool)

(assert (=> d!43569 (= res!67033 (not lt!73555))))

(declare-fun lt!73558 () Bool)

(assert (=> d!43569 (= lt!73555 lt!73558)))

(declare-fun lt!73556 () Unit!4395)

(declare-fun e!91438 () Unit!4395)

(assert (=> d!43569 (= lt!73556 e!91438)))

(declare-fun c!26245 () Bool)

(assert (=> d!43569 (= c!26245 lt!73558)))

(assert (=> d!43569 (= lt!73558 (containsKey!179 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))

(assert (=> d!43569 (= (contains!921 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73142) lt!73555)))

(declare-fun b!140214 () Bool)

(declare-fun lt!73557 () Unit!4395)

(assert (=> b!140214 (= e!91438 lt!73557)))

(assert (=> b!140214 (= lt!73557 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))

(assert (=> b!140214 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))

(declare-fun b!140215 () Bool)

(declare-fun Unit!4412 () Unit!4395)

(assert (=> b!140215 (= e!91438 Unit!4412)))

(declare-fun b!140216 () Bool)

(assert (=> b!140216 (= e!91439 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142)))))

(assert (= (and d!43569 c!26245) b!140214))

(assert (= (and d!43569 (not c!26245)) b!140215))

(assert (= (and d!43569 (not res!67033)) b!140216))

(declare-fun m!167493 () Bool)

(assert (=> d!43569 m!167493))

(declare-fun m!167495 () Bool)

(assert (=> b!140214 m!167495))

(declare-fun m!167497 () Bool)

(assert (=> b!140214 m!167497))

(assert (=> b!140214 m!167497))

(declare-fun m!167499 () Bool)

(assert (=> b!140214 m!167499))

(assert (=> b!140216 m!167497))

(assert (=> b!140216 m!167497))

(assert (=> b!140216 m!167499))

(assert (=> b!139713 d!43569))

(declare-fun d!43571 () Bool)

(assert (=> d!43571 (= (apply!120 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73152) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73152)))))

(declare-fun bs!5850 () Bool)

(assert (= bs!5850 d!43571))

(declare-fun m!167501 () Bool)

(assert (=> bs!5850 m!167501))

(assert (=> bs!5850 m!167501))

(declare-fun m!167503 () Bool)

(assert (=> bs!5850 m!167503))

(assert (=> b!139713 d!43571))

(declare-fun d!43573 () Bool)

(assert (=> d!43573 (= (apply!120 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73152) (apply!120 lt!73146 lt!73152))))

(declare-fun lt!73559 () Unit!4395)

(assert (=> d!43573 (= lt!73559 (choose!870 lt!73146 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73152))))

(declare-fun e!91440 () Bool)

(assert (=> d!43573 e!91440))

(declare-fun res!67034 () Bool)

(assert (=> d!43573 (=> (not res!67034) (not e!91440))))

(assert (=> d!43573 (= res!67034 (contains!921 lt!73146 lt!73152))))

(assert (=> d!43573 (= (addApplyDifferent!96 lt!73146 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73152) lt!73559)))

(declare-fun b!140217 () Bool)

(assert (=> b!140217 (= e!91440 (not (= lt!73152 lt!73150)))))

(assert (= (and d!43573 res!67034) b!140217))

(declare-fun m!167505 () Bool)

(assert (=> d!43573 m!167505))

(assert (=> d!43573 m!166869))

(assert (=> d!43573 m!166871))

(assert (=> d!43573 m!166869))

(assert (=> d!43573 m!166867))

(declare-fun m!167507 () Bool)

(assert (=> d!43573 m!167507))

(assert (=> b!139713 d!43573))

(declare-fun d!43575 () Bool)

(assert (=> d!43575 (= (apply!120 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73151) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73151)))))

(declare-fun bs!5851 () Bool)

(assert (= bs!5851 d!43575))

(declare-fun m!167509 () Bool)

(assert (=> bs!5851 m!167509))

(assert (=> bs!5851 m!167509))

(declare-fun m!167511 () Bool)

(assert (=> bs!5851 m!167511))

(assert (=> b!139713 d!43575))

(declare-fun d!43577 () Bool)

(assert (=> d!43577 (= (apply!120 lt!73149 lt!73141) (get!1538 (getValueByKey!175 (toList!889 lt!73149) lt!73141)))))

(declare-fun bs!5852 () Bool)

(assert (= bs!5852 d!43577))

(declare-fun m!167513 () Bool)

(assert (=> bs!5852 m!167513))

(assert (=> bs!5852 m!167513))

(declare-fun m!167515 () Bool)

(assert (=> bs!5852 m!167515))

(assert (=> b!139713 d!43577))

(declare-fun d!43579 () Bool)

(assert (=> d!43579 (= (apply!120 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73151) (apply!120 lt!73140 lt!73151))))

(declare-fun lt!73560 () Unit!4395)

(assert (=> d!43579 (= lt!73560 (choose!870 lt!73140 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73151))))

(declare-fun e!91441 () Bool)

(assert (=> d!43579 e!91441))

(declare-fun res!67035 () Bool)

(assert (=> d!43579 (=> (not res!67035) (not e!91441))))

(assert (=> d!43579 (= res!67035 (contains!921 lt!73140 lt!73151))))

(assert (=> d!43579 (= (addApplyDifferent!96 lt!73140 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73151) lt!73560)))

(declare-fun b!140218 () Bool)

(assert (=> b!140218 (= e!91441 (not (= lt!73151 lt!73145)))))

(assert (= (and d!43579 res!67035) b!140218))

(declare-fun m!167517 () Bool)

(assert (=> d!43579 m!167517))

(assert (=> d!43579 m!166873))

(assert (=> d!43579 m!166875))

(assert (=> d!43579 m!166873))

(assert (=> d!43579 m!166883))

(declare-fun m!167519 () Bool)

(assert (=> d!43579 m!167519))

(assert (=> b!139713 d!43579))

(declare-fun d!43581 () Bool)

(assert (=> d!43581 (= (apply!120 lt!73140 lt!73151) (get!1538 (getValueByKey!175 (toList!889 lt!73140) lt!73151)))))

(declare-fun bs!5853 () Bool)

(assert (= bs!5853 d!43581))

(declare-fun m!167521 () Bool)

(assert (=> bs!5853 m!167521))

(assert (=> bs!5853 m!167521))

(declare-fun m!167523 () Bool)

(assert (=> bs!5853 m!167523))

(assert (=> b!139713 d!43581))

(declare-fun d!43583 () Bool)

(assert (=> d!43583 (= (apply!120 lt!73146 lt!73152) (get!1538 (getValueByKey!175 (toList!889 lt!73146) lt!73152)))))

(declare-fun bs!5854 () Bool)

(assert (= bs!5854 d!43583))

(declare-fun m!167525 () Bool)

(assert (=> bs!5854 m!167525))

(assert (=> bs!5854 m!167525))

(declare-fun m!167527 () Bool)

(assert (=> bs!5854 m!167527))

(assert (=> b!139713 d!43583))

(declare-fun d!43585 () Bool)

(declare-fun e!91443 () Bool)

(assert (=> d!43585 e!91443))

(declare-fun res!67036 () Bool)

(assert (=> d!43585 (=> res!67036 e!91443)))

(declare-fun lt!73561 () Bool)

(assert (=> d!43585 (= res!67036 (not lt!73561))))

(declare-fun lt!73564 () Bool)

(assert (=> d!43585 (= lt!73561 lt!73564)))

(declare-fun lt!73562 () Unit!4395)

(declare-fun e!91442 () Unit!4395)

(assert (=> d!43585 (= lt!73562 e!91442)))

(declare-fun c!26246 () Bool)

(assert (=> d!43585 (= c!26246 lt!73564)))

(assert (=> d!43585 (= lt!73564 (containsKey!179 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43585 (= (contains!921 lt!73135 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73561)))

(declare-fun b!140219 () Bool)

(declare-fun lt!73563 () Unit!4395)

(assert (=> b!140219 (= e!91442 lt!73563)))

(assert (=> b!140219 (= lt!73563 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140219 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140220 () Bool)

(declare-fun Unit!4413 () Unit!4395)

(assert (=> b!140220 (= e!91442 Unit!4413)))

(declare-fun b!140221 () Bool)

(assert (=> b!140221 (= e!91443 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43585 c!26246) b!140219))

(assert (= (and d!43585 (not c!26246)) b!140220))

(assert (= (and d!43585 (not res!67036)) b!140221))

(declare-fun m!167529 () Bool)

(assert (=> d!43585 m!167529))

(declare-fun m!167531 () Bool)

(assert (=> b!140219 m!167531))

(assert (=> b!140219 m!167017))

(assert (=> b!140219 m!167017))

(declare-fun m!167533 () Bool)

(assert (=> b!140219 m!167533))

(assert (=> b!140221 m!167017))

(assert (=> b!140221 m!167017))

(assert (=> b!140221 m!167533))

(assert (=> bm!15446 d!43585))

(assert (=> b!139656 d!43489))

(declare-fun d!43587 () Bool)

(assert (=> d!43587 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73567 () Unit!4395)

(declare-fun choose!872 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 V!3555 Int) Unit!4395)

(assert (=> d!43587 (= lt!73567 (choose!872 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43587 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43587 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!65 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) lt!73567)))

(declare-fun bs!5855 () Bool)

(assert (= bs!5855 d!43587))

(assert (=> bs!5855 m!166961))

(assert (=> bs!5855 m!166731))

(declare-fun m!167535 () Bool)

(assert (=> bs!5855 m!167535))

(assert (=> bs!5855 m!166829))

(declare-fun m!167537 () Bool)

(assert (=> bs!5855 m!167537))

(assert (=> bs!5855 m!166829))

(assert (=> bs!5855 m!166731))

(declare-fun m!167539 () Bool)

(assert (=> bs!5855 m!167539))

(assert (=> b!139826 d!43587))

(declare-fun d!43589 () Bool)

(declare-fun res!67037 () Bool)

(declare-fun e!91444 () Bool)

(assert (=> d!43589 (=> (not res!67037) (not e!91444))))

(assert (=> d!43589 (= res!67037 (simpleValid!95 (v!3280 (underlying!481 thiss!992))))))

(assert (=> d!43589 (= (valid!554 (v!3280 (underlying!481 thiss!992))) e!91444)))

(declare-fun b!140222 () Bool)

(declare-fun res!67038 () Bool)

(assert (=> b!140222 (=> (not res!67038) (not e!91444))))

(assert (=> b!140222 (= res!67038 (= (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))) (_size!625 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!140223 () Bool)

(declare-fun res!67039 () Bool)

(assert (=> b!140223 (=> (not res!67039) (not e!91444))))

(assert (=> b!140223 (= res!67039 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!140224 () Bool)

(assert (=> b!140224 (= e!91444 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 Nil!1760))))

(assert (= (and d!43589 res!67037) b!140222))

(assert (= (and b!140222 res!67038) b!140223))

(assert (= (and b!140223 res!67039) b!140224))

(declare-fun m!167541 () Bool)

(assert (=> d!43589 m!167541))

(declare-fun m!167543 () Bool)

(assert (=> b!140222 m!167543))

(declare-fun m!167545 () Bool)

(assert (=> b!140223 m!167545))

(declare-fun m!167547 () Bool)

(assert (=> b!140224 m!167547))

(assert (=> d!43439 d!43589))

(assert (=> bm!15497 d!43453))

(declare-fun d!43591 () Bool)

(declare-fun res!67040 () Bool)

(declare-fun e!91445 () Bool)

(assert (=> d!43591 (=> res!67040 e!91445)))

(assert (=> d!43591 (= res!67040 (= (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43591 (= (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91445)))

(declare-fun b!140225 () Bool)

(declare-fun e!91446 () Bool)

(assert (=> b!140225 (= e!91445 e!91446)))

(declare-fun res!67041 () Bool)

(assert (=> b!140225 (=> (not res!67041) (not e!91446))))

(assert (=> b!140225 (= res!67041 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140226 () Bool)

(assert (=> b!140226 (= e!91446 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43591 (not res!67040)) b!140225))

(assert (= (and b!140225 res!67041) b!140226))

(assert (=> d!43591 m!166967))

(assert (=> b!140226 m!166733))

(declare-fun m!167549 () Bool)

(assert (=> b!140226 m!167549))

(assert (=> bm!15507 d!43591))

(declare-fun d!43593 () Bool)

(declare-fun e!91448 () Bool)

(assert (=> d!43593 e!91448))

(declare-fun res!67042 () Bool)

(assert (=> d!43593 (=> res!67042 e!91448)))

(declare-fun lt!73568 () Bool)

(assert (=> d!43593 (= res!67042 (not lt!73568))))

(declare-fun lt!73571 () Bool)

(assert (=> d!43593 (= lt!73568 lt!73571)))

(declare-fun lt!73569 () Unit!4395)

(declare-fun e!91447 () Unit!4395)

(assert (=> d!43593 (= lt!73569 e!91447)))

(declare-fun c!26247 () Bool)

(assert (=> d!43593 (= c!26247 lt!73571)))

(assert (=> d!43593 (= lt!73571 (containsKey!179 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43593 (= (contains!921 call!15504 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73568)))

(declare-fun b!140227 () Bool)

(declare-fun lt!73570 () Unit!4395)

(assert (=> b!140227 (= e!91447 lt!73570)))

(assert (=> b!140227 (= lt!73570 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!140227 (isDefined!129 (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140228 () Bool)

(declare-fun Unit!4414 () Unit!4395)

(assert (=> b!140228 (= e!91447 Unit!4414)))

(declare-fun b!140229 () Bool)

(assert (=> b!140229 (= e!91448 (isDefined!129 (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (= (and d!43593 c!26247) b!140227))

(assert (= (and d!43593 (not c!26247)) b!140228))

(assert (= (and d!43593 (not res!67042)) b!140229))

(assert (=> d!43593 m!166733))

(declare-fun m!167551 () Bool)

(assert (=> d!43593 m!167551))

(assert (=> b!140227 m!166733))

(declare-fun m!167553 () Bool)

(assert (=> b!140227 m!167553))

(assert (=> b!140227 m!166733))

(declare-fun m!167555 () Bool)

(assert (=> b!140227 m!167555))

(assert (=> b!140227 m!167555))

(declare-fun m!167557 () Bool)

(assert (=> b!140227 m!167557))

(assert (=> b!140229 m!166733))

(assert (=> b!140229 m!167555))

(assert (=> b!140229 m!167555))

(assert (=> b!140229 m!167557))

(assert (=> b!139818 d!43593))

(declare-fun d!43595 () Bool)

(declare-fun res!67047 () Bool)

(declare-fun e!91453 () Bool)

(assert (=> d!43595 (=> res!67047 e!91453)))

(assert (=> d!43595 (= res!67047 (and ((_ is Cons!1760) (toList!889 lt!73065)) (= (_1!1352 (h!2367 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!43595 (= (containsKey!179 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91453)))

(declare-fun b!140234 () Bool)

(declare-fun e!91454 () Bool)

(assert (=> b!140234 (= e!91453 e!91454)))

(declare-fun res!67048 () Bool)

(assert (=> b!140234 (=> (not res!67048) (not e!91454))))

(assert (=> b!140234 (= res!67048 (and (or (not ((_ is Cons!1760) (toList!889 lt!73065))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (toList!889 lt!73065)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!140235 () Bool)

(assert (=> b!140235 (= e!91454 (containsKey!179 (t!6360 (toList!889 lt!73065)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!43595 (not res!67047)) b!140234))

(assert (= (and b!140234 res!67048) b!140235))

(assert (=> b!140235 m!166733))

(declare-fun m!167559 () Bool)

(assert (=> b!140235 m!167559))

(assert (=> d!43461 d!43595))

(declare-fun mapIsEmpty!4845 () Bool)

(declare-fun mapRes!4845 () Bool)

(assert (=> mapIsEmpty!4845 mapRes!4845))

(declare-fun condMapEmpty!4845 () Bool)

(declare-fun mapDefault!4845 () ValueCell!1122)

(assert (=> mapNonEmpty!4843 (= condMapEmpty!4845 (= mapRest!4843 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4845)))))

(declare-fun e!91456 () Bool)

(assert (=> mapNonEmpty!4843 (= tp!11575 (and e!91456 mapRes!4845))))

(declare-fun mapNonEmpty!4845 () Bool)

(declare-fun tp!11577 () Bool)

(declare-fun e!91455 () Bool)

(assert (=> mapNonEmpty!4845 (= mapRes!4845 (and tp!11577 e!91455))))

(declare-fun mapValue!4845 () ValueCell!1122)

(declare-fun mapRest!4845 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4845 () (_ BitVec 32))

(assert (=> mapNonEmpty!4845 (= mapRest!4843 (store mapRest!4845 mapKey!4845 mapValue!4845))))

(declare-fun b!140237 () Bool)

(assert (=> b!140237 (= e!91456 tp_is_empty!2931)))

(declare-fun b!140236 () Bool)

(assert (=> b!140236 (= e!91455 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4843 condMapEmpty!4845) mapIsEmpty!4845))

(assert (= (and mapNonEmpty!4843 (not condMapEmpty!4845)) mapNonEmpty!4845))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1122) mapValue!4845)) b!140236))

(assert (= (and mapNonEmpty!4843 ((_ is ValueCellFull!1122) mapDefault!4845)) b!140237))

(declare-fun m!167561 () Bool)

(assert (=> mapNonEmpty!4845 m!167561))

(declare-fun mapIsEmpty!4846 () Bool)

(declare-fun mapRes!4846 () Bool)

(assert (=> mapIsEmpty!4846 mapRes!4846))

(declare-fun condMapEmpty!4846 () Bool)

(declare-fun mapDefault!4846 () ValueCell!1122)

(assert (=> mapNonEmpty!4844 (= condMapEmpty!4846 (= mapRest!4844 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4846)))))

(declare-fun e!91458 () Bool)

(assert (=> mapNonEmpty!4844 (= tp!11576 (and e!91458 mapRes!4846))))

(declare-fun mapNonEmpty!4846 () Bool)

(declare-fun tp!11578 () Bool)

(declare-fun e!91457 () Bool)

(assert (=> mapNonEmpty!4846 (= mapRes!4846 (and tp!11578 e!91457))))

(declare-fun mapKey!4846 () (_ BitVec 32))

(declare-fun mapValue!4846 () ValueCell!1122)

(declare-fun mapRest!4846 () (Array (_ BitVec 32) ValueCell!1122))

(assert (=> mapNonEmpty!4846 (= mapRest!4844 (store mapRest!4846 mapKey!4846 mapValue!4846))))

(declare-fun b!140239 () Bool)

(assert (=> b!140239 (= e!91458 tp_is_empty!2931)))

(declare-fun b!140238 () Bool)

(assert (=> b!140238 (= e!91457 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4844 condMapEmpty!4846) mapIsEmpty!4846))

(assert (= (and mapNonEmpty!4844 (not condMapEmpty!4846)) mapNonEmpty!4846))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1122) mapValue!4846)) b!140238))

(assert (= (and mapNonEmpty!4844 ((_ is ValueCellFull!1122) mapDefault!4846)) b!140239))

(declare-fun m!167563 () Bool)

(assert (=> mapNonEmpty!4846 m!167563))

(declare-fun b_lambda!6303 () Bool)

(assert (= b_lambda!6293 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6303)))

(declare-fun b_lambda!6305 () Bool)

(assert (= b_lambda!6299 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6305)))

(declare-fun b_lambda!6307 () Bool)

(assert (= b_lambda!6301 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6307)))

(declare-fun b_lambda!6309 () Bool)

(assert (= b_lambda!6291 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6309)))

(declare-fun b_lambda!6311 () Bool)

(assert (= b_lambda!6295 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6311)))

(declare-fun b_lambda!6313 () Bool)

(assert (= b_lambda!6297 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6313)))

(check-sat (not b!140003) (not b!140214) (not b!139947) (not d!43529) (not d!43561) (not d!43531) (not bm!15567) (not b!140160) (not d!43555) (not d!43473) (not b!140222) (not b!139983) (not b!140201) (not b!140180) (not b!139946) (not d!43477) (not b_next!3029) (not b!140197) (not b!140207) (not b!139882) (not b!140081) (not b!140144) (not b!139958) (not b!139889) (not b!140075) (not d!43581) (not b!139970) (not bm!15558) (not b!140150) (not d!43515) (not b!140162) (not d!43517) (not b!140178) (not b!140149) (not b!140030) b_and!8783 (not b!140210) (not b!139944) (not d!43511) (not b!140184) (not b_lambda!6313) (not b!140208) (not b!140105) (not bm!15536) (not b!140086) (not bm!15571) (not d!43575) (not bm!15520) (not bm!15554) (not d!43543) (not b!139873) (not b!140226) (not b_lambda!6311) (not b!140223) (not b!140012) (not b!140227) (not b_lambda!6303) (not d!43547) (not b!140200) (not bm!15541) (not b!140148) (not b!139887) (not b!140209) (not b!140229) (not d!43483) (not b!140186) (not d!43509) (not d!43559) (not b!139972) (not b!140076) (not d!43571) (not d!43567) (not b!140199) (not b!139885) (not b!140079) (not b!139881) (not b!140071) (not b!139886) (not b!140196) (not bm!15566) (not b!140109) (not b!139945) (not b!140145) (not d!43491) (not d!43503) (not d!43507) (not b!140001) (not b!140152) (not b!139988) (not d!43589) (not b!139955) (not d!43497) (not b!140002) (not b!140179) (not bm!15538) (not d!43587) (not b!140103) (not b!140013) (not d!43525) (not d!43579) (not b_lambda!6307) (not b!139938) (not b!139954) (not bm!15551) (not bm!15574) (not d!43583) (not b!140100) (not d!43533) (not bm!15563) (not bm!15537) (not bm!15534) (not b!140089) (not b!139927) (not bm!15547) (not b!140044) (not b!140070) (not b!140073) (not b_lambda!6285) (not b!139940) (not d!43539) (not mapNonEmpty!4845) (not d!43565) (not d!43527) (not b!139998) (not b!139990) (not d!43577) (not d!43471) (not b!140235) (not bm!15557) (not b_lambda!6305) (not b!139935) (not b!140163) (not b!140110) (not b_next!3031) (not mapNonEmpty!4846) b_and!8781 (not b!139884) (not b!139981) (not d!43551) (not bm!15544) (not bm!15575) (not d!43467) (not b!140006) (not d!43513) (not b!139985) (not bm!15543) (not b!139956) (not b!140015) (not bm!15570) (not bm!15564) (not d!43537) (not d!43557) (not b!140216) (not d!43585) (not d!43569) (not b!139982) (not b!140202) (not bm!15548) (not b!140172) (not d!43505) (not b!140147) (not b!140004) (not d!43521) (not b!140072) (not b!140101) (not b!139948) (not d!43573) (not b!140136) (not b!140182) (not bm!15525) (not b!140102) (not b!139974) (not b!139976) (not d!43469) (not d!43563) (not b_lambda!6289) tp_is_empty!2931 (not bm!15524) (not b!139930) (not b!140211) (not b!140174) (not bm!15521) (not d!43549) (not bm!15553) (not d!43553) (not b!139999) (not d!43487) (not b!140097) (not b!140219) (not b_lambda!6309) (not b!140212) (not b!140221) (not d!43593) (not b!140224) (not b!139941) (not b!140098))
(check-sat b_and!8781 b_and!8783 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun d!43597 () Bool)

(declare-fun e!91459 () Bool)

(assert (=> d!43597 e!91459))

(declare-fun res!67050 () Bool)

(assert (=> d!43597 (=> (not res!67050) (not e!91459))))

(declare-fun lt!73574 () ListLongMap!1747)

(assert (=> d!43597 (= res!67050 (contains!921 lt!73574 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!73575 () List!1764)

(assert (=> d!43597 (= lt!73574 (ListLongMap!1748 lt!73575))))

(declare-fun lt!73572 () Unit!4395)

(declare-fun lt!73573 () Unit!4395)

(assert (=> d!43597 (= lt!73572 lt!73573)))

(assert (=> d!43597 (= (getValueByKey!175 lt!73575 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43597 (= lt!73573 (lemmaContainsTupThenGetReturnValue!91 lt!73575 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43597 (= lt!73575 (insertStrictlySorted!93 (toList!889 call!15572) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43597 (= (+!174 call!15572 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!73574)))

(declare-fun b!140240 () Bool)

(declare-fun res!67049 () Bool)

(assert (=> b!140240 (=> (not res!67049) (not e!91459))))

(assert (=> b!140240 (= res!67049 (= (getValueByKey!175 (toList!889 lt!73574) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!140241 () Bool)

(assert (=> b!140241 (= e!91459 (contains!923 (toList!889 lt!73574) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!43597 res!67050) b!140240))

(assert (= (and b!140240 res!67049) b!140241))

(declare-fun m!167565 () Bool)

(assert (=> d!43597 m!167565))

(declare-fun m!167567 () Bool)

(assert (=> d!43597 m!167567))

(declare-fun m!167569 () Bool)

(assert (=> d!43597 m!167569))

(declare-fun m!167571 () Bool)

(assert (=> d!43597 m!167571))

(declare-fun m!167573 () Bool)

(assert (=> b!140240 m!167573))

(declare-fun m!167575 () Bool)

(assert (=> b!140241 m!167575))

(assert (=> b!140152 d!43597))

(declare-fun d!43599 () Bool)

(declare-fun e!91460 () Bool)

(assert (=> d!43599 e!91460))

(declare-fun res!67052 () Bool)

(assert (=> d!43599 (=> (not res!67052) (not e!91460))))

(declare-fun lt!73578 () ListLongMap!1747)

(assert (=> d!43599 (= res!67052 (contains!921 lt!73578 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!73579 () List!1764)

(assert (=> d!43599 (= lt!73578 (ListLongMap!1748 lt!73579))))

(declare-fun lt!73576 () Unit!4395)

(declare-fun lt!73577 () Unit!4395)

(assert (=> d!43599 (= lt!73576 lt!73577)))

(assert (=> d!43599 (= (getValueByKey!175 lt!73579 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43599 (= lt!73577 (lemmaContainsTupThenGetReturnValue!91 lt!73579 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43599 (= lt!73579 (insertStrictlySorted!93 (toList!889 call!15559) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43599 (= (+!174 call!15559 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!73578)))

(declare-fun b!140242 () Bool)

(declare-fun res!67051 () Bool)

(assert (=> b!140242 (=> (not res!67051) (not e!91460))))

(assert (=> b!140242 (= res!67051 (= (getValueByKey!175 (toList!889 lt!73578) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!140243 () Bool)

(assert (=> b!140243 (= e!91460 (contains!923 (toList!889 lt!73578) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!43599 res!67052) b!140242))

(assert (= (and b!140242 res!67051) b!140243))

(declare-fun m!167577 () Bool)

(assert (=> d!43599 m!167577))

(declare-fun m!167579 () Bool)

(assert (=> d!43599 m!167579))

(declare-fun m!167581 () Bool)

(assert (=> d!43599 m!167581))

(declare-fun m!167583 () Bool)

(assert (=> d!43599 m!167583))

(declare-fun m!167585 () Bool)

(assert (=> b!140242 m!167585))

(declare-fun m!167587 () Bool)

(assert (=> b!140243 m!167587))

(assert (=> b!140105 d!43599))

(assert (=> d!43573 d!43565))

(assert (=> d!43573 d!43571))

(declare-fun d!43601 () Bool)

(assert (=> d!43601 (= (apply!120 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73152) (apply!120 lt!73146 lt!73152))))

(assert (=> d!43601 true))

(declare-fun _$34!996 () Unit!4395)

(assert (=> d!43601 (= (choose!870 lt!73146 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73152) _$34!996)))

(declare-fun bs!5856 () Bool)

(assert (= bs!5856 d!43601))

(assert (=> bs!5856 m!166869))

(assert (=> bs!5856 m!166869))

(assert (=> bs!5856 m!166871))

(assert (=> bs!5856 m!166867))

(assert (=> d!43573 d!43601))

(assert (=> d!43573 d!43583))

(declare-fun d!43603 () Bool)

(declare-fun e!91462 () Bool)

(assert (=> d!43603 e!91462))

(declare-fun res!67053 () Bool)

(assert (=> d!43603 (=> res!67053 e!91462)))

(declare-fun lt!73580 () Bool)

(assert (=> d!43603 (= res!67053 (not lt!73580))))

(declare-fun lt!73583 () Bool)

(assert (=> d!43603 (= lt!73580 lt!73583)))

(declare-fun lt!73581 () Unit!4395)

(declare-fun e!91461 () Unit!4395)

(assert (=> d!43603 (= lt!73581 e!91461)))

(declare-fun c!26248 () Bool)

(assert (=> d!43603 (= c!26248 lt!73583)))

(assert (=> d!43603 (= lt!73583 (containsKey!179 (toList!889 lt!73146) lt!73152))))

(assert (=> d!43603 (= (contains!921 lt!73146 lt!73152) lt!73580)))

(declare-fun b!140245 () Bool)

(declare-fun lt!73582 () Unit!4395)

(assert (=> b!140245 (= e!91461 lt!73582)))

(assert (=> b!140245 (= lt!73582 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73146) lt!73152))))

(assert (=> b!140245 (isDefined!129 (getValueByKey!175 (toList!889 lt!73146) lt!73152))))

(declare-fun b!140246 () Bool)

(declare-fun Unit!4415 () Unit!4395)

(assert (=> b!140246 (= e!91461 Unit!4415)))

(declare-fun b!140247 () Bool)

(assert (=> b!140247 (= e!91462 (isDefined!129 (getValueByKey!175 (toList!889 lt!73146) lt!73152)))))

(assert (= (and d!43603 c!26248) b!140245))

(assert (= (and d!43603 (not c!26248)) b!140246))

(assert (= (and d!43603 (not res!67053)) b!140247))

(declare-fun m!167589 () Bool)

(assert (=> d!43603 m!167589))

(declare-fun m!167591 () Bool)

(assert (=> b!140245 m!167591))

(assert (=> b!140245 m!167525))

(assert (=> b!140245 m!167525))

(declare-fun m!167593 () Bool)

(assert (=> b!140245 m!167593))

(assert (=> b!140247 m!167525))

(assert (=> b!140247 m!167525))

(assert (=> b!140247 m!167593))

(assert (=> d!43573 d!43603))

(declare-fun d!43605 () Bool)

(assert (=> d!43605 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!139958 d!43605))

(declare-fun d!43607 () Bool)

(assert (=> d!43607 (= (apply!120 lt!73250 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5857 () Bool)

(assert (= bs!5857 d!43607))

(declare-fun m!167595 () Bool)

(assert (=> bs!5857 m!167595))

(assert (=> bs!5857 m!167595))

(declare-fun m!167597 () Bool)

(assert (=> bs!5857 m!167597))

(assert (=> b!139884 d!43607))

(declare-fun d!43609 () Bool)

(assert (=> d!43609 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140182 d!43609))

(declare-fun b!140248 () Bool)

(declare-fun res!67055 () Bool)

(declare-fun e!91467 () Bool)

(assert (=> b!140248 (=> (not res!67055) (not e!91467))))

(declare-fun lt!73586 () ListLongMap!1747)

(assert (=> b!140248 (= res!67055 (not (contains!921 lt!73586 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140249 () Bool)

(assert (=> b!140249 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!140249 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219))))))

(declare-fun e!91463 () Bool)

(assert (=> b!140249 (= e!91463 (= (apply!120 lt!73586 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140250 () Bool)

(declare-fun e!91469 () ListLongMap!1747)

(declare-fun e!91466 () ListLongMap!1747)

(assert (=> b!140250 (= e!91469 e!91466)))

(declare-fun c!26251 () Bool)

(assert (=> b!140250 (= c!26251 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140251 () Bool)

(declare-fun e!91464 () Bool)

(assert (=> b!140251 (= e!91464 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140251 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!43611 () Bool)

(assert (=> d!43611 e!91467))

(declare-fun res!67057 () Bool)

(assert (=> d!43611 (=> (not res!67057) (not e!91467))))

(assert (=> d!43611 (= res!67057 (not (contains!921 lt!73586 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43611 (= lt!73586 e!91469)))

(declare-fun c!26252 () Bool)

(assert (=> d!43611 (= c!26252 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43611 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43611 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73586)))

(declare-fun b!140252 () Bool)

(declare-fun e!91465 () Bool)

(declare-fun e!91468 () Bool)

(assert (=> b!140252 (= e!91465 e!91468)))

(declare-fun c!26249 () Bool)

(assert (=> b!140252 (= c!26249 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140253 () Bool)

(assert (=> b!140253 (= e!91468 (= lt!73586 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140254 () Bool)

(assert (=> b!140254 (= e!91465 e!91463)))

(assert (=> b!140254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67056 () Bool)

(assert (=> b!140254 (= res!67056 (contains!921 lt!73586 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140254 (=> (not res!67056) (not e!91463))))

(declare-fun b!140255 () Bool)

(declare-fun call!15579 () ListLongMap!1747)

(assert (=> b!140255 (= e!91466 call!15579)))

(declare-fun bm!15576 () Bool)

(assert (=> bm!15576 (= call!15579 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140256 () Bool)

(assert (=> b!140256 (= e!91469 (ListLongMap!1748 Nil!1761))))

(declare-fun b!140257 () Bool)

(declare-fun lt!73584 () Unit!4395)

(declare-fun lt!73590 () Unit!4395)

(assert (=> b!140257 (= lt!73584 lt!73590)))

(declare-fun lt!73585 () ListLongMap!1747)

(declare-fun lt!73589 () (_ BitVec 64))

(declare-fun lt!73587 () V!3555)

(declare-fun lt!73588 () (_ BitVec 64))

(assert (=> b!140257 (not (contains!921 (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587)) lt!73588))))

(assert (=> b!140257 (= lt!73590 (addStillNotContains!66 lt!73585 lt!73589 lt!73587 lt!73588))))

(assert (=> b!140257 (= lt!73588 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140257 (= lt!73587 (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140257 (= lt!73589 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140257 (= lt!73585 call!15579)))

(assert (=> b!140257 (= e!91466 (+!174 call!15579 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140258 () Bool)

(assert (=> b!140258 (= e!91467 e!91465)))

(declare-fun c!26250 () Bool)

(assert (=> b!140258 (= c!26250 e!91464)))

(declare-fun res!67054 () Bool)

(assert (=> b!140258 (=> (not res!67054) (not e!91464))))

(assert (=> b!140258 (= res!67054 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140259 () Bool)

(assert (=> b!140259 (= e!91468 (isEmpty!423 lt!73586))))

(assert (= (and d!43611 c!26252) b!140256))

(assert (= (and d!43611 (not c!26252)) b!140250))

(assert (= (and b!140250 c!26251) b!140257))

(assert (= (and b!140250 (not c!26251)) b!140255))

(assert (= (or b!140257 b!140255) bm!15576))

(assert (= (and d!43611 res!67057) b!140248))

(assert (= (and b!140248 res!67055) b!140258))

(assert (= (and b!140258 res!67054) b!140251))

(assert (= (and b!140258 c!26250) b!140254))

(assert (= (and b!140258 (not c!26250)) b!140252))

(assert (= (and b!140254 res!67056) b!140249))

(assert (= (and b!140252 c!26249) b!140253))

(assert (= (and b!140252 (not c!26249)) b!140259))

(declare-fun b_lambda!6315 () Bool)

(assert (=> (not b_lambda!6315) (not b!140249)))

(assert (=> b!140249 t!6366))

(declare-fun b_and!8785 () Bool)

(assert (= b_and!8781 (and (=> t!6366 result!4203) b_and!8785)))

(assert (=> b!140249 t!6368))

(declare-fun b_and!8787 () Bool)

(assert (= b_and!8783 (and (=> t!6368 result!4205) b_and!8787)))

(declare-fun b_lambda!6317 () Bool)

(assert (=> (not b_lambda!6317) (not b!140257)))

(assert (=> b!140257 t!6366))

(declare-fun b_and!8789 () Bool)

(assert (= b_and!8785 (and (=> t!6366 result!4203) b_and!8789)))

(assert (=> b!140257 t!6368))

(declare-fun b_and!8791 () Bool)

(assert (= b_and!8787 (and (=> t!6368 result!4205) b_and!8791)))

(declare-fun m!167599 () Bool)

(assert (=> b!140253 m!167599))

(assert (=> b!140251 m!166967))

(assert (=> b!140251 m!166967))

(assert (=> b!140251 m!166981))

(declare-fun m!167601 () Bool)

(assert (=> b!140257 m!167601))

(declare-fun m!167603 () Bool)

(assert (=> b!140257 m!167603))

(assert (=> b!140257 m!166967))

(declare-fun m!167605 () Bool)

(assert (=> b!140257 m!167605))

(declare-fun m!167607 () Bool)

(assert (=> b!140257 m!167607))

(assert (=> b!140257 m!166971))

(assert (=> b!140257 m!167323))

(assert (=> b!140257 m!167323))

(assert (=> b!140257 m!166971))

(assert (=> b!140257 m!167325))

(assert (=> b!140257 m!167601))

(assert (=> b!140254 m!166967))

(assert (=> b!140254 m!166967))

(declare-fun m!167609 () Bool)

(assert (=> b!140254 m!167609))

(assert (=> b!140250 m!166967))

(assert (=> b!140250 m!166967))

(assert (=> b!140250 m!166981))

(assert (=> b!140249 m!166967))

(assert (=> b!140249 m!166967))

(declare-fun m!167611 () Bool)

(assert (=> b!140249 m!167611))

(assert (=> b!140249 m!166971))

(assert (=> b!140249 m!167323))

(assert (=> b!140249 m!167323))

(assert (=> b!140249 m!166971))

(assert (=> b!140249 m!167325))

(declare-fun m!167613 () Bool)

(assert (=> b!140259 m!167613))

(declare-fun m!167615 () Bool)

(assert (=> d!43611 m!167615))

(assert (=> d!43611 m!166961))

(declare-fun m!167617 () Bool)

(assert (=> b!140248 m!167617))

(assert (=> bm!15576 m!167599))

(assert (=> bm!15566 d!43611))

(declare-fun b!140260 () Bool)

(declare-fun res!67059 () Bool)

(declare-fun e!91474 () Bool)

(assert (=> b!140260 (=> (not res!67059) (not e!91474))))

(declare-fun lt!73593 () ListLongMap!1747)

(assert (=> b!140260 (= res!67059 (not (contains!921 lt!73593 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140261 () Bool)

(assert (=> b!140261 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!140261 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(declare-fun e!91470 () Bool)

(assert (=> b!140261 (= e!91470 (= (apply!120 lt!73593 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140262 () Bool)

(declare-fun e!91476 () ListLongMap!1747)

(declare-fun e!91473 () ListLongMap!1747)

(assert (=> b!140262 (= e!91476 e!91473)))

(declare-fun c!26255 () Bool)

(assert (=> b!140262 (= c!26255 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140263 () Bool)

(declare-fun e!91471 () Bool)

(assert (=> b!140263 (= e!91471 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140263 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!43613 () Bool)

(assert (=> d!43613 e!91474))

(declare-fun res!67061 () Bool)

(assert (=> d!43613 (=> (not res!67061) (not e!91474))))

(assert (=> d!43613 (= res!67061 (not (contains!921 lt!73593 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43613 (= lt!73593 e!91476)))

(declare-fun c!26256 () Bool)

(assert (=> d!43613 (= c!26256 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43613 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43613 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73593)))

(declare-fun b!140264 () Bool)

(declare-fun e!91472 () Bool)

(declare-fun e!91475 () Bool)

(assert (=> b!140264 (= e!91472 e!91475)))

(declare-fun c!26253 () Bool)

(assert (=> b!140264 (= c!26253 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140265 () Bool)

(assert (=> b!140265 (= e!91475 (= lt!73593 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140266 () Bool)

(assert (=> b!140266 (= e!91472 e!91470)))

(assert (=> b!140266 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67060 () Bool)

(assert (=> b!140266 (= res!67060 (contains!921 lt!73593 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140266 (=> (not res!67060) (not e!91470))))

(declare-fun b!140267 () Bool)

(declare-fun call!15580 () ListLongMap!1747)

(assert (=> b!140267 (= e!91473 call!15580)))

(declare-fun bm!15577 () Bool)

(assert (=> bm!15577 (= call!15580 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140268 () Bool)

(assert (=> b!140268 (= e!91476 (ListLongMap!1748 Nil!1761))))

(declare-fun b!140269 () Bool)

(declare-fun lt!73591 () Unit!4395)

(declare-fun lt!73597 () Unit!4395)

(assert (=> b!140269 (= lt!73591 lt!73597)))

(declare-fun lt!73596 () (_ BitVec 64))

(declare-fun lt!73595 () (_ BitVec 64))

(declare-fun lt!73594 () V!3555)

(declare-fun lt!73592 () ListLongMap!1747)

(assert (=> b!140269 (not (contains!921 (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594)) lt!73595))))

(assert (=> b!140269 (= lt!73597 (addStillNotContains!66 lt!73592 lt!73596 lt!73594 lt!73595))))

(assert (=> b!140269 (= lt!73595 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140269 (= lt!73594 (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140269 (= lt!73596 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140269 (= lt!73592 call!15580)))

(assert (=> b!140269 (= e!91473 (+!174 call!15580 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140270 () Bool)

(assert (=> b!140270 (= e!91474 e!91472)))

(declare-fun c!26254 () Bool)

(assert (=> b!140270 (= c!26254 e!91471)))

(declare-fun res!67058 () Bool)

(assert (=> b!140270 (=> (not res!67058) (not e!91471))))

(assert (=> b!140270 (= res!67058 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140271 () Bool)

(assert (=> b!140271 (= e!91475 (isEmpty!423 lt!73593))))

(assert (= (and d!43613 c!26256) b!140268))

(assert (= (and d!43613 (not c!26256)) b!140262))

(assert (= (and b!140262 c!26255) b!140269))

(assert (= (and b!140262 (not c!26255)) b!140267))

(assert (= (or b!140269 b!140267) bm!15577))

(assert (= (and d!43613 res!67061) b!140260))

(assert (= (and b!140260 res!67059) b!140270))

(assert (= (and b!140270 res!67058) b!140263))

(assert (= (and b!140270 c!26254) b!140266))

(assert (= (and b!140270 (not c!26254)) b!140264))

(assert (= (and b!140266 res!67060) b!140261))

(assert (= (and b!140264 c!26253) b!140265))

(assert (= (and b!140264 (not c!26253)) b!140271))

(declare-fun b_lambda!6319 () Bool)

(assert (=> (not b_lambda!6319) (not b!140261)))

(assert (=> b!140261 t!6366))

(declare-fun b_and!8793 () Bool)

(assert (= b_and!8789 (and (=> t!6366 result!4203) b_and!8793)))

(assert (=> b!140261 t!6368))

(declare-fun b_and!8795 () Bool)

(assert (= b_and!8791 (and (=> t!6368 result!4205) b_and!8795)))

(declare-fun b_lambda!6321 () Bool)

(assert (=> (not b_lambda!6321) (not b!140269)))

(assert (=> b!140269 t!6366))

(declare-fun b_and!8797 () Bool)

(assert (= b_and!8793 (and (=> t!6366 result!4203) b_and!8797)))

(assert (=> b!140269 t!6368))

(declare-fun b_and!8799 () Bool)

(assert (= b_and!8795 (and (=> t!6368 result!4205) b_and!8799)))

(declare-fun m!167619 () Bool)

(assert (=> b!140265 m!167619))

(assert (=> b!140263 m!166967))

(assert (=> b!140263 m!166967))

(assert (=> b!140263 m!166981))

(declare-fun m!167621 () Bool)

(assert (=> b!140269 m!167621))

(declare-fun m!167623 () Bool)

(assert (=> b!140269 m!167623))

(assert (=> b!140269 m!166967))

(declare-fun m!167625 () Bool)

(assert (=> b!140269 m!167625))

(declare-fun m!167627 () Bool)

(assert (=> b!140269 m!167627))

(assert (=> b!140269 m!166971))

(assert (=> b!140269 m!166973))

(assert (=> b!140269 m!166973))

(assert (=> b!140269 m!166971))

(assert (=> b!140269 m!166975))

(assert (=> b!140269 m!167621))

(assert (=> b!140266 m!166967))

(assert (=> b!140266 m!166967))

(declare-fun m!167629 () Bool)

(assert (=> b!140266 m!167629))

(assert (=> b!140262 m!166967))

(assert (=> b!140262 m!166967))

(assert (=> b!140262 m!166981))

(assert (=> b!140261 m!166967))

(assert (=> b!140261 m!166967))

(declare-fun m!167631 () Bool)

(assert (=> b!140261 m!167631))

(assert (=> b!140261 m!166971))

(assert (=> b!140261 m!166973))

(assert (=> b!140261 m!166973))

(assert (=> b!140261 m!166971))

(assert (=> b!140261 m!166975))

(declare-fun m!167633 () Bool)

(assert (=> b!140271 m!167633))

(declare-fun m!167635 () Bool)

(assert (=> d!43613 m!167635))

(assert (=> d!43613 m!166961))

(declare-fun m!167637 () Bool)

(assert (=> b!140260 m!167637))

(assert (=> bm!15577 m!167619))

(assert (=> bm!15553 d!43613))

(declare-fun d!43615 () Bool)

(declare-fun e!91478 () Bool)

(assert (=> d!43615 e!91478))

(declare-fun res!67062 () Bool)

(assert (=> d!43615 (=> res!67062 e!91478)))

(declare-fun lt!73598 () Bool)

(assert (=> d!43615 (= res!67062 (not lt!73598))))

(declare-fun lt!73601 () Bool)

(assert (=> d!43615 (= lt!73598 lt!73601)))

(declare-fun lt!73599 () Unit!4395)

(declare-fun e!91477 () Unit!4395)

(assert (=> d!43615 (= lt!73599 e!91477)))

(declare-fun c!26257 () Bool)

(assert (=> d!43615 (= c!26257 lt!73601)))

(assert (=> d!43615 (= lt!73601 (containsKey!179 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43615 (= (contains!921 lt!73482 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73598)))

(declare-fun b!140272 () Bool)

(declare-fun lt!73600 () Unit!4395)

(assert (=> b!140272 (= e!91477 lt!73600)))

(assert (=> b!140272 (= lt!73600 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140272 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140273 () Bool)

(declare-fun Unit!4416 () Unit!4395)

(assert (=> b!140273 (= e!91477 Unit!4416)))

(declare-fun b!140274 () Bool)

(assert (=> b!140274 (= e!91478 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43615 c!26257) b!140272))

(assert (= (and d!43615 (not c!26257)) b!140273))

(assert (= (and d!43615 (not res!67062)) b!140274))

(declare-fun m!167639 () Bool)

(assert (=> d!43615 m!167639))

(declare-fun m!167641 () Bool)

(assert (=> b!140272 m!167641))

(declare-fun m!167643 () Bool)

(assert (=> b!140272 m!167643))

(assert (=> b!140272 m!167643))

(declare-fun m!167645 () Bool)

(assert (=> b!140272 m!167645))

(assert (=> b!140274 m!167643))

(assert (=> b!140274 m!167643))

(assert (=> b!140274 m!167645))

(assert (=> bm!15570 d!43615))

(declare-fun d!43617 () Bool)

(declare-fun e!91480 () Bool)

(assert (=> d!43617 e!91480))

(declare-fun res!67063 () Bool)

(assert (=> d!43617 (=> res!67063 e!91480)))

(declare-fun lt!73602 () Bool)

(assert (=> d!43617 (= res!67063 (not lt!73602))))

(declare-fun lt!73605 () Bool)

(assert (=> d!43617 (= lt!73602 lt!73605)))

(declare-fun lt!73603 () Unit!4395)

(declare-fun e!91479 () Unit!4395)

(assert (=> d!43617 (= lt!73603 e!91479)))

(declare-fun c!26258 () Bool)

(assert (=> d!43617 (= c!26258 lt!73605)))

(assert (=> d!43617 (= lt!73605 (containsKey!179 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43617 (= (contains!921 lt!73450 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73602)))

(declare-fun b!140275 () Bool)

(declare-fun lt!73604 () Unit!4395)

(assert (=> b!140275 (= e!91479 lt!73604)))

(assert (=> b!140275 (= lt!73604 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140275 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140276 () Bool)

(declare-fun Unit!4417 () Unit!4395)

(assert (=> b!140276 (= e!91479 Unit!4417)))

(declare-fun b!140277 () Bool)

(assert (=> b!140277 (= e!91480 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43617 c!26258) b!140275))

(assert (= (and d!43617 (not c!26258)) b!140276))

(assert (= (and d!43617 (not res!67063)) b!140277))

(declare-fun m!167647 () Bool)

(assert (=> d!43617 m!167647))

(declare-fun m!167649 () Bool)

(assert (=> b!140275 m!167649))

(declare-fun m!167651 () Bool)

(assert (=> b!140275 m!167651))

(assert (=> b!140275 m!167651))

(declare-fun m!167653 () Bool)

(assert (=> b!140275 m!167653))

(assert (=> b!140277 m!167651))

(assert (=> b!140277 m!167651))

(assert (=> b!140277 m!167653))

(assert (=> bm!15557 d!43617))

(declare-fun d!43619 () Bool)

(assert (=> d!43619 (= (get!1538 (getValueByKey!175 (toList!889 lt!73149) lt!73141)) (v!3283 (getValueByKey!175 (toList!889 lt!73149) lt!73141)))))

(assert (=> d!43577 d!43619))

(declare-fun b!140280 () Bool)

(declare-fun e!91482 () Option!181)

(assert (=> b!140280 (= e!91482 (getValueByKey!175 (t!6360 (toList!889 lt!73149)) lt!73141))))

(declare-fun b!140279 () Bool)

(declare-fun e!91481 () Option!181)

(assert (=> b!140279 (= e!91481 e!91482)))

(declare-fun c!26260 () Bool)

(assert (=> b!140279 (= c!26260 (and ((_ is Cons!1760) (toList!889 lt!73149)) (not (= (_1!1352 (h!2367 (toList!889 lt!73149))) lt!73141))))))

(declare-fun b!140281 () Bool)

(assert (=> b!140281 (= e!91482 None!179)))

(declare-fun b!140278 () Bool)

(assert (=> b!140278 (= e!91481 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73149)))))))

(declare-fun d!43621 () Bool)

(declare-fun c!26259 () Bool)

(assert (=> d!43621 (= c!26259 (and ((_ is Cons!1760) (toList!889 lt!73149)) (= (_1!1352 (h!2367 (toList!889 lt!73149))) lt!73141)))))

(assert (=> d!43621 (= (getValueByKey!175 (toList!889 lt!73149) lt!73141) e!91481)))

(assert (= (and d!43621 c!26259) b!140278))

(assert (= (and d!43621 (not c!26259)) b!140279))

(assert (= (and b!140279 c!26260) b!140280))

(assert (= (and b!140279 (not c!26260)) b!140281))

(declare-fun m!167655 () Bool)

(assert (=> b!140280 m!167655))

(assert (=> d!43577 d!43621))

(declare-fun d!43623 () Bool)

(assert (=> d!43623 (= (apply!120 lt!73391 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5858 () Bool)

(assert (= bs!5858 d!43623))

(declare-fun m!167657 () Bool)

(assert (=> bs!5858 m!167657))

(assert (=> bs!5858 m!167657))

(declare-fun m!167659 () Bool)

(assert (=> bs!5858 m!167659))

(assert (=> b!139999 d!43623))

(declare-fun d!43625 () Bool)

(declare-fun lt!73606 () Bool)

(assert (=> d!43625 (= lt!73606 (select (content!136 Nil!1760) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91484 () Bool)

(assert (=> d!43625 (= lt!73606 e!91484)))

(declare-fun res!67065 () Bool)

(assert (=> d!43625 (=> (not res!67065) (not e!91484))))

(assert (=> d!43625 (= res!67065 ((_ is Cons!1759) Nil!1760))))

(assert (=> d!43625 (= (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73606)))

(declare-fun b!140282 () Bool)

(declare-fun e!91483 () Bool)

(assert (=> b!140282 (= e!91484 e!91483)))

(declare-fun res!67064 () Bool)

(assert (=> b!140282 (=> res!67064 e!91483)))

(assert (=> b!140282 (= res!67064 (= (h!2366 Nil!1760) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140283 () Bool)

(assert (=> b!140283 (= e!91483 (contains!922 (t!6359 Nil!1760) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!43625 res!67065) b!140282))

(assert (= (and b!140282 (not res!67064)) b!140283))

(assert (=> d!43625 m!167095))

(assert (=> d!43625 m!166967))

(declare-fun m!167661 () Bool)

(assert (=> d!43625 m!167661))

(assert (=> b!140283 m!166967))

(declare-fun m!167663 () Bool)

(assert (=> b!140283 m!167663))

(assert (=> b!139955 d!43625))

(assert (=> b!139881 d!43605))

(declare-fun d!43627 () Bool)

(assert (=> d!43627 (= (isEmpty!422 (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not ((_ is Some!180) (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(assert (=> d!43517 d!43627))

(declare-fun lt!73607 () Bool)

(declare-fun d!43629 () Bool)

(assert (=> d!43629 (= lt!73607 (select (content!136 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!91486 () Bool)

(assert (=> d!43629 (= lt!73607 e!91486)))

(declare-fun res!67067 () Bool)

(assert (=> d!43629 (=> (not res!67067) (not e!91486))))

(assert (=> d!43629 (= res!67067 ((_ is Cons!1759) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)))))

(assert (=> d!43629 (= (contains!922 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!73607)))

(declare-fun b!140284 () Bool)

(declare-fun e!91485 () Bool)

(assert (=> b!140284 (= e!91486 e!91485)))

(declare-fun res!67066 () Bool)

(assert (=> b!140284 (=> res!67066 e!91485)))

(assert (=> b!140284 (= res!67066 (= (h!2366 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140285 () Bool)

(assert (=> b!140285 (= e!91485 (contains!922 (t!6359 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!43629 res!67067) b!140284))

(assert (= (and b!140284 (not res!67066)) b!140285))

(declare-fun m!167665 () Bool)

(assert (=> d!43629 m!167665))

(assert (=> d!43629 m!167399))

(declare-fun m!167667 () Bool)

(assert (=> d!43629 m!167667))

(assert (=> b!140285 m!167399))

(declare-fun m!167669 () Bool)

(assert (=> b!140285 m!167669))

(assert (=> b!140179 d!43629))

(declare-fun d!43631 () Bool)

(declare-fun e!91488 () Bool)

(assert (=> d!43631 e!91488))

(declare-fun res!67068 () Bool)

(assert (=> d!43631 (=> res!67068 e!91488)))

(declare-fun lt!73608 () Bool)

(assert (=> d!43631 (= res!67068 (not lt!73608))))

(declare-fun lt!73611 () Bool)

(assert (=> d!43631 (= lt!73608 lt!73611)))

(declare-fun lt!73609 () Unit!4395)

(declare-fun e!91487 () Unit!4395)

(assert (=> d!43631 (= lt!73609 e!91487)))

(declare-fun c!26261 () Bool)

(assert (=> d!43631 (= c!26261 lt!73611)))

(assert (=> d!43631 (= lt!73611 (containsKey!179 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43631 (= (contains!921 lt!73550 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73608)))

(declare-fun b!140286 () Bool)

(declare-fun lt!73610 () Unit!4395)

(assert (=> b!140286 (= e!91487 lt!73610)))

(assert (=> b!140286 (= lt!73610 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> b!140286 (isDefined!129 (getValueByKey!175 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140287 () Bool)

(declare-fun Unit!4418 () Unit!4395)

(assert (=> b!140287 (= e!91487 Unit!4418)))

(declare-fun b!140288 () Bool)

(assert (=> b!140288 (= e!91488 (isDefined!129 (getValueByKey!175 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43631 c!26261) b!140286))

(assert (= (and d!43631 (not c!26261)) b!140287))

(assert (= (and d!43631 (not res!67068)) b!140288))

(declare-fun m!167671 () Bool)

(assert (=> d!43631 m!167671))

(declare-fun m!167673 () Bool)

(assert (=> b!140286 m!167673))

(assert (=> b!140286 m!167485))

(assert (=> b!140286 m!167485))

(declare-fun m!167675 () Bool)

(assert (=> b!140286 m!167675))

(assert (=> b!140288 m!167485))

(assert (=> b!140288 m!167485))

(assert (=> b!140288 m!167675))

(assert (=> d!43565 d!43631))

(declare-fun b!140291 () Bool)

(declare-fun e!91490 () Option!181)

(assert (=> b!140291 (= e!91490 (getValueByKey!175 (t!6360 lt!73551) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140290 () Bool)

(declare-fun e!91489 () Option!181)

(assert (=> b!140290 (= e!91489 e!91490)))

(declare-fun c!26263 () Bool)

(assert (=> b!140290 (= c!26263 (and ((_ is Cons!1760) lt!73551) (not (= (_1!1352 (h!2367 lt!73551)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140292 () Bool)

(assert (=> b!140292 (= e!91490 None!179)))

(declare-fun b!140289 () Bool)

(assert (=> b!140289 (= e!91489 (Some!180 (_2!1352 (h!2367 lt!73551))))))

(declare-fun c!26262 () Bool)

(declare-fun d!43633 () Bool)

(assert (=> d!43633 (= c!26262 (and ((_ is Cons!1760) lt!73551) (= (_1!1352 (h!2367 lt!73551)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43633 (= (getValueByKey!175 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91489)))

(assert (= (and d!43633 c!26262) b!140289))

(assert (= (and d!43633 (not c!26262)) b!140290))

(assert (= (and b!140290 c!26263) b!140291))

(assert (= (and b!140290 (not c!26263)) b!140292))

(declare-fun m!167677 () Bool)

(assert (=> b!140291 m!167677))

(assert (=> d!43565 d!43633))

(declare-fun d!43635 () Bool)

(assert (=> d!43635 (= (getValueByKey!175 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73614 () Unit!4395)

(declare-fun choose!873 (List!1764 (_ BitVec 64) V!3555) Unit!4395)

(assert (=> d!43635 (= lt!73614 (choose!873 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!91493 () Bool)

(assert (=> d!43635 e!91493))

(declare-fun res!67073 () Bool)

(assert (=> d!43635 (=> (not res!67073) (not e!91493))))

(assert (=> d!43635 (= res!67073 (isStrictlySorted!320 lt!73551))))

(assert (=> d!43635 (= (lemmaContainsTupThenGetReturnValue!91 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73614)))

(declare-fun b!140297 () Bool)

(declare-fun res!67074 () Bool)

(assert (=> b!140297 (=> (not res!67074) (not e!91493))))

(assert (=> b!140297 (= res!67074 (containsKey!179 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140298 () Bool)

(assert (=> b!140298 (= e!91493 (contains!923 lt!73551 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43635 res!67073) b!140297))

(assert (= (and b!140297 res!67074) b!140298))

(assert (=> d!43635 m!167479))

(declare-fun m!167679 () Bool)

(assert (=> d!43635 m!167679))

(declare-fun m!167681 () Bool)

(assert (=> d!43635 m!167681))

(declare-fun m!167683 () Bool)

(assert (=> b!140297 m!167683))

(declare-fun m!167685 () Bool)

(assert (=> b!140298 m!167685))

(assert (=> d!43565 d!43635))

(declare-fun d!43637 () Bool)

(declare-fun e!91504 () Bool)

(assert (=> d!43637 e!91504))

(declare-fun res!67080 () Bool)

(assert (=> d!43637 (=> (not res!67080) (not e!91504))))

(declare-fun lt!73617 () List!1764)

(assert (=> d!43637 (= res!67080 (isStrictlySorted!320 lt!73617))))

(declare-fun e!91506 () List!1764)

(assert (=> d!43637 (= lt!73617 e!91506)))

(declare-fun c!26272 () Bool)

(assert (=> d!43637 (= c!26272 (and ((_ is Cons!1760) (toList!889 lt!73146)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73146))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43637 (isStrictlySorted!320 (toList!889 lt!73146))))

(assert (=> d!43637 (= (insertStrictlySorted!93 (toList!889 lt!73146) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73617)))

(declare-fun b!140319 () Bool)

(assert (=> b!140319 (= e!91504 (contains!923 lt!73617 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!91507 () List!1764)

(declare-fun call!15587 () List!1764)

(declare-fun bm!15584 () Bool)

(declare-fun $colon$colon!93 (List!1764 tuple2!2684) List!1764)

(assert (=> bm!15584 (= call!15587 ($colon$colon!93 e!91507 (ite c!26272 (h!2367 (toList!889 lt!73146)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26275 () Bool)

(assert (=> bm!15584 (= c!26275 c!26272)))

(declare-fun b!140320 () Bool)

(assert (=> b!140320 (= e!91506 call!15587)))

(declare-fun b!140321 () Bool)

(assert (=> b!140321 (= e!91507 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73146)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140322 () Bool)

(declare-fun e!91508 () List!1764)

(declare-fun call!15588 () List!1764)

(assert (=> b!140322 (= e!91508 call!15588)))

(declare-fun bm!15585 () Bool)

(assert (=> bm!15585 (= call!15588 call!15587)))

(declare-fun b!140323 () Bool)

(declare-fun e!91505 () List!1764)

(declare-fun call!15589 () List!1764)

(assert (=> b!140323 (= e!91505 call!15589)))

(declare-fun c!26274 () Bool)

(declare-fun b!140324 () Bool)

(assert (=> b!140324 (= c!26274 (and ((_ is Cons!1760) (toList!889 lt!73146)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73146))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!140324 (= e!91508 e!91505)))

(declare-fun b!140325 () Bool)

(assert (=> b!140325 (= e!91506 e!91508)))

(declare-fun c!26273 () Bool)

(assert (=> b!140325 (= c!26273 (and ((_ is Cons!1760) (toList!889 lt!73146)) (= (_1!1352 (h!2367 (toList!889 lt!73146))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140326 () Bool)

(assert (=> b!140326 (= e!91507 (ite c!26273 (t!6360 (toList!889 lt!73146)) (ite c!26274 (Cons!1760 (h!2367 (toList!889 lt!73146)) (t!6360 (toList!889 lt!73146))) Nil!1761)))))

(declare-fun bm!15586 () Bool)

(assert (=> bm!15586 (= call!15589 call!15588)))

(declare-fun b!140327 () Bool)

(declare-fun res!67079 () Bool)

(assert (=> b!140327 (=> (not res!67079) (not e!91504))))

(assert (=> b!140327 (= res!67079 (containsKey!179 lt!73617 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140328 () Bool)

(assert (=> b!140328 (= e!91505 call!15589)))

(assert (= (and d!43637 c!26272) b!140320))

(assert (= (and d!43637 (not c!26272)) b!140325))

(assert (= (and b!140325 c!26273) b!140322))

(assert (= (and b!140325 (not c!26273)) b!140324))

(assert (= (and b!140324 c!26274) b!140328))

(assert (= (and b!140324 (not c!26274)) b!140323))

(assert (= (or b!140328 b!140323) bm!15586))

(assert (= (or b!140322 bm!15586) bm!15585))

(assert (= (or b!140320 bm!15585) bm!15584))

(assert (= (and bm!15584 c!26275) b!140321))

(assert (= (and bm!15584 (not c!26275)) b!140326))

(assert (= (and d!43637 res!67080) b!140327))

(assert (= (and b!140327 res!67079) b!140319))

(declare-fun m!167687 () Bool)

(assert (=> b!140319 m!167687))

(declare-fun m!167689 () Bool)

(assert (=> b!140327 m!167689))

(declare-fun m!167691 () Bool)

(assert (=> b!140321 m!167691))

(declare-fun m!167693 () Bool)

(assert (=> bm!15584 m!167693))

(declare-fun m!167695 () Bool)

(assert (=> d!43637 m!167695))

(declare-fun m!167697 () Bool)

(assert (=> d!43637 m!167697))

(assert (=> d!43565 d!43637))

(declare-fun b!140329 () Bool)

(declare-fun e!91511 () Bool)

(declare-fun e!91510 () Bool)

(assert (=> b!140329 (= e!91511 e!91510)))

(declare-fun lt!73619 () (_ BitVec 64))

(assert (=> b!140329 (= lt!73619 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!73620 () Unit!4395)

(assert (=> b!140329 (= lt!73620 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73619 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!140329 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73619 #b00000000000000000000000000000000)))

(declare-fun lt!73618 () Unit!4395)

(assert (=> b!140329 (= lt!73618 lt!73620)))

(declare-fun res!67081 () Bool)

(assert (=> b!140329 (= res!67081 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)) (Found!289 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!140329 (=> (not res!67081) (not e!91510))))

(declare-fun d!43639 () Bool)

(declare-fun res!67082 () Bool)

(declare-fun e!91509 () Bool)

(assert (=> d!43639 (=> res!67082 e!91509)))

(assert (=> d!43639 (= res!67082 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43639 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)) e!91509)))

(declare-fun b!140330 () Bool)

(declare-fun call!15590 () Bool)

(assert (=> b!140330 (= e!91511 call!15590)))

(declare-fun b!140331 () Bool)

(assert (=> b!140331 (= e!91509 e!91511)))

(declare-fun c!26276 () Bool)

(assert (=> b!140331 (= c!26276 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140332 () Bool)

(assert (=> b!140332 (= e!91510 call!15590)))

(declare-fun bm!15587 () Bool)

(assert (=> bm!15587 (= call!15590 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (= (and d!43639 (not res!67082)) b!140331))

(assert (= (and b!140331 c!26276) b!140329))

(assert (= (and b!140331 (not c!26276)) b!140330))

(assert (= (and b!140329 res!67081) b!140332))

(assert (= (or b!140332 b!140330) bm!15587))

(declare-fun m!167699 () Bool)

(assert (=> b!140329 m!167699))

(declare-fun m!167701 () Bool)

(assert (=> b!140329 m!167701))

(declare-fun m!167703 () Bool)

(assert (=> b!140329 m!167703))

(assert (=> b!140329 m!167699))

(declare-fun m!167705 () Bool)

(assert (=> b!140329 m!167705))

(assert (=> b!140331 m!167699))

(assert (=> b!140331 m!167699))

(declare-fun m!167707 () Bool)

(assert (=> b!140331 m!167707))

(declare-fun m!167709 () Bool)

(assert (=> bm!15587 m!167709))

(assert (=> bm!15574 d!43639))

(declare-fun bm!15588 () Bool)

(declare-fun call!15591 () Bool)

(declare-fun c!26277 () Bool)

(assert (=> bm!15588 (= call!15591 (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26277 (Cons!1759 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) Nil!1760) Nil!1760)))))

(declare-fun b!140334 () Bool)

(declare-fun e!91513 () Bool)

(declare-fun e!91514 () Bool)

(assert (=> b!140334 (= e!91513 e!91514)))

(assert (=> b!140334 (= c!26277 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!140335 () Bool)

(assert (=> b!140335 (= e!91514 call!15591)))

(declare-fun d!43641 () Bool)

(declare-fun res!67085 () Bool)

(declare-fun e!91515 () Bool)

(assert (=> d!43641 (=> res!67085 e!91515)))

(assert (=> d!43641 (= res!67085 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!43641 (= (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73223)) #b00000000000000000000000000000000 Nil!1760) e!91515)))

(declare-fun b!140333 () Bool)

(declare-fun e!91512 () Bool)

(assert (=> b!140333 (= e!91512 (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!140336 () Bool)

(assert (=> b!140336 (= e!91515 e!91513)))

(declare-fun res!67083 () Bool)

(assert (=> b!140336 (=> (not res!67083) (not e!91513))))

(assert (=> b!140336 (= res!67083 (not e!91512))))

(declare-fun res!67084 () Bool)

(assert (=> b!140336 (=> (not res!67084) (not e!91512))))

(assert (=> b!140336 (= res!67084 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!140337 () Bool)

(assert (=> b!140337 (= e!91514 call!15591)))

(assert (= (and d!43641 (not res!67085)) b!140336))

(assert (= (and b!140336 res!67084) b!140333))

(assert (= (and b!140336 res!67083) b!140334))

(assert (= (and b!140334 c!26277) b!140335))

(assert (= (and b!140334 (not c!26277)) b!140337))

(assert (= (or b!140335 b!140337) bm!15588))

(declare-fun m!167711 () Bool)

(assert (=> bm!15588 m!167711))

(declare-fun m!167713 () Bool)

(assert (=> bm!15588 m!167713))

(assert (=> b!140334 m!167711))

(assert (=> b!140334 m!167711))

(declare-fun m!167715 () Bool)

(assert (=> b!140334 m!167715))

(assert (=> b!140333 m!167711))

(assert (=> b!140333 m!167711))

(declare-fun m!167717 () Bool)

(assert (=> b!140333 m!167717))

(assert (=> b!140336 m!167711))

(assert (=> b!140336 m!167711))

(assert (=> b!140336 m!167715))

(assert (=> b!139946 d!43641))

(declare-fun d!43643 () Bool)

(assert (=> d!43643 (isDefined!129 (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun lt!73621 () Unit!4395)

(assert (=> d!43643 (= lt!73621 (choose!868 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!91516 () Bool)

(assert (=> d!43643 e!91516))

(declare-fun res!67086 () Bool)

(assert (=> d!43643 (=> (not res!67086) (not e!91516))))

(assert (=> d!43643 (= res!67086 (isStrictlySorted!320 (toList!889 call!15504)))))

(assert (=> d!43643 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73621)))

(declare-fun b!140338 () Bool)

(assert (=> b!140338 (= e!91516 (containsKey!179 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!43643 res!67086) b!140338))

(assert (=> d!43643 m!166733))

(assert (=> d!43643 m!167555))

(assert (=> d!43643 m!167555))

(assert (=> d!43643 m!167557))

(assert (=> d!43643 m!166733))

(declare-fun m!167719 () Bool)

(assert (=> d!43643 m!167719))

(declare-fun m!167721 () Bool)

(assert (=> d!43643 m!167721))

(assert (=> b!140338 m!166733))

(assert (=> b!140338 m!167551))

(assert (=> b!140227 d!43643))

(declare-fun d!43645 () Bool)

(assert (=> d!43645 (= (isDefined!129 (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun bs!5859 () Bool)

(assert (= bs!5859 d!43645))

(assert (=> bs!5859 m!167555))

(declare-fun m!167723 () Bool)

(assert (=> bs!5859 m!167723))

(assert (=> b!140227 d!43645))

(declare-fun b!140341 () Bool)

(declare-fun e!91518 () Option!181)

(assert (=> b!140341 (= e!91518 (getValueByKey!175 (t!6360 (toList!889 call!15504)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140340 () Bool)

(declare-fun e!91517 () Option!181)

(assert (=> b!140340 (= e!91517 e!91518)))

(declare-fun c!26279 () Bool)

(assert (=> b!140340 (= c!26279 (and ((_ is Cons!1760) (toList!889 call!15504)) (not (= (_1!1352 (h!2367 (toList!889 call!15504))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!140342 () Bool)

(assert (=> b!140342 (= e!91518 None!179)))

(declare-fun b!140339 () Bool)

(assert (=> b!140339 (= e!91517 (Some!180 (_2!1352 (h!2367 (toList!889 call!15504)))))))

(declare-fun d!43647 () Bool)

(declare-fun c!26278 () Bool)

(assert (=> d!43647 (= c!26278 (and ((_ is Cons!1760) (toList!889 call!15504)) (= (_1!1352 (h!2367 (toList!889 call!15504))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!43647 (= (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91517)))

(assert (= (and d!43647 c!26278) b!140339))

(assert (= (and d!43647 (not c!26278)) b!140340))

(assert (= (and b!140340 c!26279) b!140341))

(assert (= (and b!140340 (not c!26279)) b!140342))

(assert (=> b!140341 m!166733))

(declare-fun m!167725 () Bool)

(assert (=> b!140341 m!167725))

(assert (=> b!140227 d!43647))

(assert (=> b!140004 d!43605))

(declare-fun d!43649 () Bool)

(assert (=> d!43649 (= (apply!120 lt!73250 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5860 () Bool)

(assert (= bs!5860 d!43649))

(assert (=> bs!5860 m!166967))

(declare-fun m!167727 () Bool)

(assert (=> bs!5860 m!167727))

(assert (=> bs!5860 m!167727))

(declare-fun m!167729 () Bool)

(assert (=> bs!5860 m!167729))

(assert (=> b!139886 d!43649))

(declare-fun d!43651 () Bool)

(declare-fun c!26280 () Bool)

(assert (=> d!43651 (= c!26280 ((_ is ValueCellFull!1122) (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!91519 () V!3555)

(assert (=> d!43651 (= (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91519)))

(declare-fun b!140343 () Bool)

(assert (=> b!140343 (= e!91519 (get!1536 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140344 () Bool)

(assert (=> b!140344 (= e!91519 (get!1537 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43651 c!26280) b!140343))

(assert (= (and d!43651 (not c!26280)) b!140344))

(assert (=> b!140343 m!166973))

(assert (=> b!140343 m!166971))

(declare-fun m!167731 () Bool)

(assert (=> b!140343 m!167731))

(assert (=> b!140344 m!166973))

(assert (=> b!140344 m!166971))

(declare-fun m!167733 () Bool)

(assert (=> b!140344 m!167733))

(assert (=> b!139886 d!43651))

(declare-fun d!43653 () Bool)

(assert (=> d!43653 (= (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142)) (not (isEmpty!422 (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))))

(declare-fun bs!5861 () Bool)

(assert (= bs!5861 d!43653))

(assert (=> bs!5861 m!167497))

(declare-fun m!167735 () Bool)

(assert (=> bs!5861 m!167735))

(assert (=> b!140216 d!43653))

(declare-fun b!140347 () Bool)

(declare-fun e!91521 () Option!181)

(assert (=> b!140347 (= e!91521 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73142))))

(declare-fun b!140346 () Bool)

(declare-fun e!91520 () Option!181)

(assert (=> b!140346 (= e!91520 e!91521)))

(declare-fun c!26282 () Bool)

(assert (=> b!140346 (= c!26282 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73142))))))

(declare-fun b!140348 () Bool)

(assert (=> b!140348 (= e!91521 None!179)))

(declare-fun b!140345 () Bool)

(assert (=> b!140345 (= e!91520 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun c!26281 () Bool)

(declare-fun d!43655 () Bool)

(assert (=> d!43655 (= c!26281 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73142)))))

(assert (=> d!43655 (= (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142) e!91520)))

(assert (= (and d!43655 c!26281) b!140345))

(assert (= (and d!43655 (not c!26281)) b!140346))

(assert (= (and b!140346 c!26282) b!140347))

(assert (= (and b!140346 (not c!26282)) b!140348))

(declare-fun m!167737 () Bool)

(assert (=> b!140347 m!167737))

(assert (=> b!140216 d!43655))

(declare-fun e!91523 () Option!181)

(declare-fun b!140351 () Bool)

(assert (=> b!140351 (= e!91523 (getValueByKey!175 (t!6360 (toList!889 lt!73550)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140350 () Bool)

(declare-fun e!91522 () Option!181)

(assert (=> b!140350 (= e!91522 e!91523)))

(declare-fun c!26284 () Bool)

(assert (=> b!140350 (= c!26284 (and ((_ is Cons!1760) (toList!889 lt!73550)) (not (= (_1!1352 (h!2367 (toList!889 lt!73550))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140352 () Bool)

(assert (=> b!140352 (= e!91523 None!179)))

(declare-fun b!140349 () Bool)

(assert (=> b!140349 (= e!91522 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73550)))))))

(declare-fun d!43657 () Bool)

(declare-fun c!26283 () Bool)

(assert (=> d!43657 (= c!26283 (and ((_ is Cons!1760) (toList!889 lt!73550)) (= (_1!1352 (h!2367 (toList!889 lt!73550))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43657 (= (getValueByKey!175 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91522)))

(assert (= (and d!43657 c!26283) b!140349))

(assert (= (and d!43657 (not c!26283)) b!140350))

(assert (= (and b!140350 c!26284) b!140351))

(assert (= (and b!140350 (not c!26284)) b!140352))

(declare-fun m!167739 () Bool)

(assert (=> b!140351 m!167739))

(assert (=> b!140211 d!43657))

(assert (=> b!140086 d!43445))

(declare-fun d!43659 () Bool)

(assert (=> d!43659 (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))

(assert (=> d!43659 true))

(declare-fun _$16!158 () Unit!4395)

(assert (=> d!43659 (= (choose!864 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (defaultEntry!2940 newMap!16)) _$16!158)))

(declare-fun bs!5862 () Bool)

(assert (= bs!5862 d!43659))

(assert (=> bs!5862 m!167141))

(assert (=> bs!5862 m!166933))

(assert (=> bs!5862 m!167141))

(assert (=> bs!5862 m!166933))

(assert (=> bs!5862 m!167143))

(assert (=> d!43507 d!43659))

(declare-fun d!43661 () Bool)

(assert (=> d!43661 (= (validMask!0 (mask!7280 newMap!16)) (and (or (= (mask!7280 newMap!16) #b00000000000000000000000000000111) (= (mask!7280 newMap!16) #b00000000000000000000000000001111) (= (mask!7280 newMap!16) #b00000000000000000000000000011111) (= (mask!7280 newMap!16) #b00000000000000000000000000111111) (= (mask!7280 newMap!16) #b00000000000000000000000001111111) (= (mask!7280 newMap!16) #b00000000000000000000000011111111) (= (mask!7280 newMap!16) #b00000000000000000000000111111111) (= (mask!7280 newMap!16) #b00000000000000000000001111111111) (= (mask!7280 newMap!16) #b00000000000000000000011111111111) (= (mask!7280 newMap!16) #b00000000000000000000111111111111) (= (mask!7280 newMap!16) #b00000000000000000001111111111111) (= (mask!7280 newMap!16) #b00000000000000000011111111111111) (= (mask!7280 newMap!16) #b00000000000000000111111111111111) (= (mask!7280 newMap!16) #b00000000000000001111111111111111) (= (mask!7280 newMap!16) #b00000000000000011111111111111111) (= (mask!7280 newMap!16) #b00000000000000111111111111111111) (= (mask!7280 newMap!16) #b00000000000001111111111111111111) (= (mask!7280 newMap!16) #b00000000000011111111111111111111) (= (mask!7280 newMap!16) #b00000000000111111111111111111111) (= (mask!7280 newMap!16) #b00000000001111111111111111111111) (= (mask!7280 newMap!16) #b00000000011111111111111111111111) (= (mask!7280 newMap!16) #b00000000111111111111111111111111) (= (mask!7280 newMap!16) #b00000001111111111111111111111111) (= (mask!7280 newMap!16) #b00000011111111111111111111111111) (= (mask!7280 newMap!16) #b00000111111111111111111111111111) (= (mask!7280 newMap!16) #b00001111111111111111111111111111) (= (mask!7280 newMap!16) #b00011111111111111111111111111111) (= (mask!7280 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7280 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!43507 d!43661))

(declare-fun d!43663 () Bool)

(declare-fun res!67087 () Bool)

(declare-fun e!91524 () Bool)

(assert (=> d!43663 (=> res!67087 e!91524)))

(assert (=> d!43663 (= res!67087 (and ((_ is Cons!1760) (toList!889 call!15514)) (= (_1!1352 (h!2367 (toList!889 call!15514))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(assert (=> d!43663 (= (containsKey!179 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) e!91524)))

(declare-fun b!140353 () Bool)

(declare-fun e!91525 () Bool)

(assert (=> b!140353 (= e!91524 e!91525)))

(declare-fun res!67088 () Bool)

(assert (=> b!140353 (=> (not res!67088) (not e!91525))))

(assert (=> b!140353 (= res!67088 (and (or (not ((_ is Cons!1760) (toList!889 call!15514))) (bvsle (_1!1352 (h!2367 (toList!889 call!15514))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))) ((_ is Cons!1760) (toList!889 call!15514)) (bvslt (_1!1352 (h!2367 (toList!889 call!15514))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(declare-fun b!140354 () Bool)

(assert (=> b!140354 (= e!91525 (containsKey!179 (t!6360 (toList!889 call!15514)) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (= (and d!43663 (not res!67087)) b!140353))

(assert (= (and b!140353 res!67088) b!140354))

(declare-fun m!167741 () Bool)

(assert (=> b!140354 m!167741))

(assert (=> d!43505 d!43663))

(declare-fun d!43665 () Bool)

(declare-fun e!91527 () Bool)

(assert (=> d!43665 e!91527))

(declare-fun res!67089 () Bool)

(assert (=> d!43665 (=> res!67089 e!91527)))

(declare-fun lt!73622 () Bool)

(assert (=> d!43665 (= res!67089 (not lt!73622))))

(declare-fun lt!73625 () Bool)

(assert (=> d!43665 (= lt!73622 lt!73625)))

(declare-fun lt!73623 () Unit!4395)

(declare-fun e!91526 () Unit!4395)

(assert (=> d!43665 (= lt!73623 e!91526)))

(declare-fun c!26285 () Bool)

(assert (=> d!43665 (= c!26285 lt!73625)))

(assert (=> d!43665 (= lt!73625 (containsKey!179 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43665 (= (contains!921 lt!73508 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73622)))

(declare-fun b!140355 () Bool)

(declare-fun lt!73624 () Unit!4395)

(assert (=> b!140355 (= e!91526 lt!73624)))

(assert (=> b!140355 (= lt!73624 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!140355 (isDefined!129 (getValueByKey!175 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140356 () Bool)

(declare-fun Unit!4419 () Unit!4395)

(assert (=> b!140356 (= e!91526 Unit!4419)))

(declare-fun b!140357 () Bool)

(assert (=> b!140357 (= e!91527 (isDefined!129 (getValueByKey!175 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43665 c!26285) b!140355))

(assert (= (and d!43665 (not c!26285)) b!140356))

(assert (= (and d!43665 (not res!67089)) b!140357))

(declare-fun m!167743 () Bool)

(assert (=> d!43665 m!167743))

(declare-fun m!167745 () Bool)

(assert (=> b!140355 m!167745))

(assert (=> b!140355 m!167379))

(assert (=> b!140355 m!167379))

(declare-fun m!167747 () Bool)

(assert (=> b!140355 m!167747))

(assert (=> b!140357 m!167379))

(assert (=> b!140357 m!167379))

(assert (=> b!140357 m!167747))

(assert (=> d!43537 d!43665))

(declare-fun b!140360 () Bool)

(declare-fun e!91529 () Option!181)

(assert (=> b!140360 (= e!91529 (getValueByKey!175 (t!6360 lt!73509) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140359 () Bool)

(declare-fun e!91528 () Option!181)

(assert (=> b!140359 (= e!91528 e!91529)))

(declare-fun c!26287 () Bool)

(assert (=> b!140359 (= c!26287 (and ((_ is Cons!1760) lt!73509) (not (= (_1!1352 (h!2367 lt!73509)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140361 () Bool)

(assert (=> b!140361 (= e!91529 None!179)))

(declare-fun b!140358 () Bool)

(assert (=> b!140358 (= e!91528 (Some!180 (_2!1352 (h!2367 lt!73509))))))

(declare-fun d!43667 () Bool)

(declare-fun c!26286 () Bool)

(assert (=> d!43667 (= c!26286 (and ((_ is Cons!1760) lt!73509) (= (_1!1352 (h!2367 lt!73509)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43667 (= (getValueByKey!175 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91528)))

(assert (= (and d!43667 c!26286) b!140358))

(assert (= (and d!43667 (not c!26286)) b!140359))

(assert (= (and b!140359 c!26287) b!140360))

(assert (= (and b!140359 (not c!26287)) b!140361))

(declare-fun m!167749 () Bool)

(assert (=> b!140360 m!167749))

(assert (=> d!43537 d!43667))

(declare-fun d!43669 () Bool)

(assert (=> d!43669 (= (getValueByKey!175 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73626 () Unit!4395)

(assert (=> d!43669 (= lt!73626 (choose!873 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91530 () Bool)

(assert (=> d!43669 e!91530))

(declare-fun res!67090 () Bool)

(assert (=> d!43669 (=> (not res!67090) (not e!91530))))

(assert (=> d!43669 (= res!67090 (isStrictlySorted!320 lt!73509))))

(assert (=> d!43669 (= (lemmaContainsTupThenGetReturnValue!91 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73626)))

(declare-fun b!140362 () Bool)

(declare-fun res!67091 () Bool)

(assert (=> b!140362 (=> (not res!67091) (not e!91530))))

(assert (=> b!140362 (= res!67091 (containsKey!179 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140363 () Bool)

(assert (=> b!140363 (= e!91530 (contains!923 lt!73509 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!43669 res!67090) b!140362))

(assert (= (and b!140362 res!67091) b!140363))

(assert (=> d!43669 m!167373))

(declare-fun m!167751 () Bool)

(assert (=> d!43669 m!167751))

(declare-fun m!167753 () Bool)

(assert (=> d!43669 m!167753))

(declare-fun m!167755 () Bool)

(assert (=> b!140362 m!167755))

(declare-fun m!167757 () Bool)

(assert (=> b!140363 m!167757))

(assert (=> d!43537 d!43669))

(declare-fun d!43671 () Bool)

(declare-fun e!91531 () Bool)

(assert (=> d!43671 e!91531))

(declare-fun res!67093 () Bool)

(assert (=> d!43671 (=> (not res!67093) (not e!91531))))

(declare-fun lt!73627 () List!1764)

(assert (=> d!43671 (= res!67093 (isStrictlySorted!320 lt!73627))))

(declare-fun e!91533 () List!1764)

(assert (=> d!43671 (= lt!73627 e!91533)))

(declare-fun c!26288 () Bool)

(assert (=> d!43671 (= c!26288 (and ((_ is Cons!1760) (toList!889 call!15500)) (bvslt (_1!1352 (h!2367 (toList!889 call!15500))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43671 (isStrictlySorted!320 (toList!889 call!15500))))

(assert (=> d!43671 (= (insertStrictlySorted!93 (toList!889 call!15500) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73627)))

(declare-fun b!140364 () Bool)

(assert (=> b!140364 (= e!91531 (contains!923 lt!73627 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!15589 () Bool)

(declare-fun e!91534 () List!1764)

(declare-fun call!15592 () List!1764)

(assert (=> bm!15589 (= call!15592 ($colon$colon!93 e!91534 (ite c!26288 (h!2367 (toList!889 call!15500)) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26291 () Bool)

(assert (=> bm!15589 (= c!26291 c!26288)))

(declare-fun b!140365 () Bool)

(assert (=> b!140365 (= e!91533 call!15592)))

(declare-fun b!140366 () Bool)

(assert (=> b!140366 (= e!91534 (insertStrictlySorted!93 (t!6360 (toList!889 call!15500)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140367 () Bool)

(declare-fun e!91535 () List!1764)

(declare-fun call!15593 () List!1764)

(assert (=> b!140367 (= e!91535 call!15593)))

(declare-fun bm!15590 () Bool)

(assert (=> bm!15590 (= call!15593 call!15592)))

(declare-fun b!140368 () Bool)

(declare-fun e!91532 () List!1764)

(declare-fun call!15594 () List!1764)

(assert (=> b!140368 (= e!91532 call!15594)))

(declare-fun c!26290 () Bool)

(declare-fun b!140369 () Bool)

(assert (=> b!140369 (= c!26290 (and ((_ is Cons!1760) (toList!889 call!15500)) (bvsgt (_1!1352 (h!2367 (toList!889 call!15500))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!140369 (= e!91535 e!91532)))

(declare-fun b!140370 () Bool)

(assert (=> b!140370 (= e!91533 e!91535)))

(declare-fun c!26289 () Bool)

(assert (=> b!140370 (= c!26289 (and ((_ is Cons!1760) (toList!889 call!15500)) (= (_1!1352 (h!2367 (toList!889 call!15500))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140371 () Bool)

(assert (=> b!140371 (= e!91534 (ite c!26289 (t!6360 (toList!889 call!15500)) (ite c!26290 (Cons!1760 (h!2367 (toList!889 call!15500)) (t!6360 (toList!889 call!15500))) Nil!1761)))))

(declare-fun bm!15591 () Bool)

(assert (=> bm!15591 (= call!15594 call!15593)))

(declare-fun b!140372 () Bool)

(declare-fun res!67092 () Bool)

(assert (=> b!140372 (=> (not res!67092) (not e!91531))))

(assert (=> b!140372 (= res!67092 (containsKey!179 lt!73627 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140373 () Bool)

(assert (=> b!140373 (= e!91532 call!15594)))

(assert (= (and d!43671 c!26288) b!140365))

(assert (= (and d!43671 (not c!26288)) b!140370))

(assert (= (and b!140370 c!26289) b!140367))

(assert (= (and b!140370 (not c!26289)) b!140369))

(assert (= (and b!140369 c!26290) b!140373))

(assert (= (and b!140369 (not c!26290)) b!140368))

(assert (= (or b!140373 b!140368) bm!15591))

(assert (= (or b!140367 bm!15591) bm!15590))

(assert (= (or b!140365 bm!15590) bm!15589))

(assert (= (and bm!15589 c!26291) b!140366))

(assert (= (and bm!15589 (not c!26291)) b!140371))

(assert (= (and d!43671 res!67093) b!140372))

(assert (= (and b!140372 res!67092) b!140364))

(declare-fun m!167759 () Bool)

(assert (=> b!140364 m!167759))

(declare-fun m!167761 () Bool)

(assert (=> b!140372 m!167761))

(declare-fun m!167763 () Bool)

(assert (=> b!140366 m!167763))

(declare-fun m!167765 () Bool)

(assert (=> bm!15589 m!167765))

(declare-fun m!167767 () Bool)

(assert (=> d!43671 m!167767))

(declare-fun m!167769 () Bool)

(assert (=> d!43671 m!167769))

(assert (=> d!43537 d!43671))

(declare-fun b!140374 () Bool)

(declare-fun res!67095 () Bool)

(declare-fun e!91540 () Bool)

(assert (=> b!140374 (=> (not res!67095) (not e!91540))))

(declare-fun lt!73630 () ListLongMap!1747)

(assert (=> b!140374 (= res!67095 (not (contains!921 lt!73630 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140375 () Bool)

(assert (=> b!140375 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> b!140375 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2587 (_values!2923 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!91536 () Bool)

(assert (=> b!140375 (= e!91536 (= (apply!120 lt!73630 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140376 () Bool)

(declare-fun e!91542 () ListLongMap!1747)

(declare-fun e!91539 () ListLongMap!1747)

(assert (=> b!140376 (= e!91542 e!91539)))

(declare-fun c!26294 () Bool)

(assert (=> b!140376 (= c!26294 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!140377 () Bool)

(declare-fun e!91537 () Bool)

(assert (=> b!140377 (= e!91537 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140377 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!43673 () Bool)

(assert (=> d!43673 e!91540))

(declare-fun res!67097 () Bool)

(assert (=> d!43673 (=> (not res!67097) (not e!91540))))

(assert (=> d!43673 (= res!67097 (not (contains!921 lt!73630 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43673 (= lt!73630 e!91542)))

(declare-fun c!26295 () Bool)

(assert (=> d!43673 (= c!26295 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43673 (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992))))))

(assert (=> d!43673 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) lt!73630)))

(declare-fun b!140378 () Bool)

(declare-fun e!91538 () Bool)

(declare-fun e!91541 () Bool)

(assert (=> b!140378 (= e!91538 e!91541)))

(declare-fun c!26292 () Bool)

(assert (=> b!140378 (= c!26292 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140379 () Bool)

(assert (=> b!140379 (= e!91541 (= lt!73630 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140380 () Bool)

(assert (=> b!140380 (= e!91538 e!91536)))

(assert (=> b!140380 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun res!67096 () Bool)

(assert (=> b!140380 (= res!67096 (contains!921 lt!73630 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!140380 (=> (not res!67096) (not e!91536))))

(declare-fun b!140381 () Bool)

(declare-fun call!15595 () ListLongMap!1747)

(assert (=> b!140381 (= e!91539 call!15595)))

(declare-fun bm!15592 () Bool)

(assert (=> bm!15592 (= call!15595 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!140382 () Bool)

(assert (=> b!140382 (= e!91542 (ListLongMap!1748 Nil!1761))))

(declare-fun b!140383 () Bool)

(declare-fun lt!73628 () Unit!4395)

(declare-fun lt!73634 () Unit!4395)

(assert (=> b!140383 (= lt!73628 lt!73634)))

(declare-fun lt!73633 () (_ BitVec 64))

(declare-fun lt!73629 () ListLongMap!1747)

(declare-fun lt!73631 () V!3555)

(declare-fun lt!73632 () (_ BitVec 64))

(assert (=> b!140383 (not (contains!921 (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631)) lt!73632))))

(assert (=> b!140383 (= lt!73634 (addStillNotContains!66 lt!73629 lt!73633 lt!73631 lt!73632))))

(assert (=> b!140383 (= lt!73632 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140383 (= lt!73631 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140383 (= lt!73633 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!140383 (= lt!73629 call!15595)))

(assert (=> b!140383 (= e!91539 (+!174 call!15595 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140384 () Bool)

(assert (=> b!140384 (= e!91540 e!91538)))

(declare-fun c!26293 () Bool)

(assert (=> b!140384 (= c!26293 e!91537)))

(declare-fun res!67094 () Bool)

(assert (=> b!140384 (=> (not res!67094) (not e!91537))))

(assert (=> b!140384 (= res!67094 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140385 () Bool)

(assert (=> b!140385 (= e!91541 (isEmpty!423 lt!73630))))

(assert (= (and d!43673 c!26295) b!140382))

(assert (= (and d!43673 (not c!26295)) b!140376))

(assert (= (and b!140376 c!26294) b!140383))

(assert (= (and b!140376 (not c!26294)) b!140381))

(assert (= (or b!140383 b!140381) bm!15592))

(assert (= (and d!43673 res!67097) b!140374))

(assert (= (and b!140374 res!67095) b!140384))

(assert (= (and b!140384 res!67094) b!140377))

(assert (= (and b!140384 c!26293) b!140380))

(assert (= (and b!140384 (not c!26293)) b!140378))

(assert (= (and b!140380 res!67096) b!140375))

(assert (= (and b!140378 c!26292) b!140379))

(assert (= (and b!140378 (not c!26292)) b!140385))

(declare-fun b_lambda!6323 () Bool)

(assert (=> (not b_lambda!6323) (not b!140375)))

(assert (=> b!140375 t!6356))

(declare-fun b_and!8801 () Bool)

(assert (= b_and!8797 (and (=> t!6356 result!4189) b_and!8801)))

(assert (=> b!140375 t!6358))

(declare-fun b_and!8803 () Bool)

(assert (= b_and!8799 (and (=> t!6358 result!4193) b_and!8803)))

(declare-fun b_lambda!6325 () Bool)

(assert (=> (not b_lambda!6325) (not b!140383)))

(assert (=> b!140383 t!6356))

(declare-fun b_and!8805 () Bool)

(assert (= b_and!8801 (and (=> t!6356 result!4189) b_and!8805)))

(assert (=> b!140383 t!6358))

(declare-fun b_and!8807 () Bool)

(assert (= b_and!8803 (and (=> t!6358 result!4193) b_and!8807)))

(declare-fun m!167771 () Bool)

(assert (=> b!140379 m!167771))

(assert (=> b!140377 m!167115))

(assert (=> b!140377 m!167115))

(declare-fun m!167773 () Bool)

(assert (=> b!140377 m!167773))

(declare-fun m!167775 () Bool)

(assert (=> b!140383 m!167775))

(declare-fun m!167777 () Bool)

(assert (=> b!140383 m!167777))

(assert (=> b!140383 m!167115))

(declare-fun m!167779 () Bool)

(assert (=> b!140383 m!167779))

(declare-fun m!167781 () Bool)

(assert (=> b!140383 m!167781))

(assert (=> b!140383 m!166729))

(declare-fun m!167783 () Bool)

(assert (=> b!140383 m!167783))

(assert (=> b!140383 m!167783))

(assert (=> b!140383 m!166729))

(declare-fun m!167785 () Bool)

(assert (=> b!140383 m!167785))

(assert (=> b!140383 m!167775))

(assert (=> b!140380 m!167115))

(assert (=> b!140380 m!167115))

(declare-fun m!167787 () Bool)

(assert (=> b!140380 m!167787))

(assert (=> b!140376 m!167115))

(assert (=> b!140376 m!167115))

(assert (=> b!140376 m!167773))

(assert (=> b!140375 m!167115))

(assert (=> b!140375 m!167115))

(declare-fun m!167789 () Bool)

(assert (=> b!140375 m!167789))

(assert (=> b!140375 m!166729))

(assert (=> b!140375 m!167783))

(assert (=> b!140375 m!167783))

(assert (=> b!140375 m!166729))

(assert (=> b!140375 m!167785))

(declare-fun m!167791 () Bool)

(assert (=> b!140385 m!167791))

(declare-fun m!167793 () Bool)

(assert (=> d!43673 m!167793))

(assert (=> d!43673 m!166827))

(declare-fun m!167795 () Bool)

(assert (=> b!140374 m!167795))

(assert (=> bm!15592 m!167771))

(assert (=> bm!15551 d!43673))

(declare-fun d!43675 () Bool)

(declare-fun e!91543 () Bool)

(assert (=> d!43675 e!91543))

(declare-fun res!67099 () Bool)

(assert (=> d!43675 (=> (not res!67099) (not e!91543))))

(declare-fun lt!73637 () ListLongMap!1747)

(assert (=> d!43675 (= res!67099 (contains!921 lt!73637 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73638 () List!1764)

(assert (=> d!43675 (= lt!73637 (ListLongMap!1748 lt!73638))))

(declare-fun lt!73635 () Unit!4395)

(declare-fun lt!73636 () Unit!4395)

(assert (=> d!43675 (= lt!73635 lt!73636)))

(assert (=> d!43675 (= (getValueByKey!175 lt!73638 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43675 (= lt!73636 (lemmaContainsTupThenGetReturnValue!91 lt!73638 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43675 (= lt!73638 (insertStrictlySorted!93 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43675 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73637)))

(declare-fun b!140386 () Bool)

(declare-fun res!67098 () Bool)

(assert (=> b!140386 (=> (not res!67098) (not e!91543))))

(assert (=> b!140386 (= res!67098 (= (getValueByKey!175 (toList!889 lt!73637) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140387 () Bool)

(assert (=> b!140387 (= e!91543 (contains!923 (toList!889 lt!73637) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43675 res!67099) b!140386))

(assert (= (and b!140386 res!67098) b!140387))

(declare-fun m!167797 () Bool)

(assert (=> d!43675 m!167797))

(declare-fun m!167799 () Bool)

(assert (=> d!43675 m!167799))

(declare-fun m!167801 () Bool)

(assert (=> d!43675 m!167801))

(declare-fun m!167803 () Bool)

(assert (=> d!43675 m!167803))

(declare-fun m!167805 () Bool)

(assert (=> b!140386 m!167805))

(declare-fun m!167807 () Bool)

(assert (=> b!140387 m!167807))

(assert (=> d!43587 d!43675))

(declare-fun bm!15593 () Bool)

(declare-fun call!15601 () ListLongMap!1747)

(declare-fun call!15600 () ListLongMap!1747)

(assert (=> bm!15593 (= call!15601 call!15600)))

(declare-fun b!140388 () Bool)

(declare-fun e!91550 () ListLongMap!1747)

(declare-fun call!15596 () ListLongMap!1747)

(assert (=> b!140388 (= e!91550 call!15596)))

(declare-fun call!15597 () ListLongMap!1747)

(declare-fun bm!15594 () Bool)

(assert (=> bm!15594 (= call!15597 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!140389 () Bool)

(declare-fun e!91548 () Unit!4395)

(declare-fun lt!73656 () Unit!4395)

(assert (=> b!140389 (= e!91548 lt!73656)))

(declare-fun lt!73652 () ListLongMap!1747)

(assert (=> b!140389 (= lt!73652 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73645 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73645 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73650 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73650 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73647 () Unit!4395)

(assert (=> b!140389 (= lt!73647 (addStillContains!96 lt!73652 lt!73645 (zeroValue!2790 newMap!16) lt!73650))))

(assert (=> b!140389 (contains!921 (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))) lt!73650)))

(declare-fun lt!73655 () Unit!4395)

(assert (=> b!140389 (= lt!73655 lt!73647)))

(declare-fun lt!73654 () ListLongMap!1747)

(assert (=> b!140389 (= lt!73654 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73658 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73658 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73660 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73660 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73651 () Unit!4395)

(assert (=> b!140389 (= lt!73651 (addApplyDifferent!96 lt!73654 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73660))))

(assert (=> b!140389 (= (apply!120 (+!174 lt!73654 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73660) (apply!120 lt!73654 lt!73660))))

(declare-fun lt!73639 () Unit!4395)

(assert (=> b!140389 (= lt!73639 lt!73651)))

(declare-fun lt!73648 () ListLongMap!1747)

(assert (=> b!140389 (= lt!73648 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73653 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73653 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73659 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73659 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73646 () Unit!4395)

(assert (=> b!140389 (= lt!73646 (addApplyDifferent!96 lt!73648 lt!73653 (zeroValue!2790 newMap!16) lt!73659))))

(assert (=> b!140389 (= (apply!120 (+!174 lt!73648 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))) lt!73659) (apply!120 lt!73648 lt!73659))))

(declare-fun lt!73644 () Unit!4395)

(assert (=> b!140389 (= lt!73644 lt!73646)))

(declare-fun lt!73657 () ListLongMap!1747)

(assert (=> b!140389 (= lt!73657 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73640 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73640 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73649 () (_ BitVec 64))

(assert (=> b!140389 (= lt!73649 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140389 (= lt!73656 (addApplyDifferent!96 lt!73657 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73649))))

(assert (=> b!140389 (= (apply!120 (+!174 lt!73657 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73649) (apply!120 lt!73657 lt!73649))))

(declare-fun b!140390 () Bool)

(declare-fun res!67104 () Bool)

(declare-fun e!91544 () Bool)

(assert (=> b!140390 (=> (not res!67104) (not e!91544))))

(declare-fun e!91554 () Bool)

(assert (=> b!140390 (= res!67104 e!91554)))

(declare-fun res!67101 () Bool)

(assert (=> b!140390 (=> res!67101 e!91554)))

(declare-fun e!91551 () Bool)

(assert (=> b!140390 (= res!67101 (not e!91551))))

(declare-fun res!67100 () Bool)

(assert (=> b!140390 (=> (not res!67100) (not e!91551))))

(assert (=> b!140390 (= res!67100 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140391 () Bool)

(assert (=> b!140391 (= e!91550 call!15601)))

(declare-fun b!140392 () Bool)

(declare-fun e!91546 () ListLongMap!1747)

(declare-fun e!91553 () ListLongMap!1747)

(assert (=> b!140392 (= e!91546 e!91553)))

(declare-fun c!26300 () Bool)

(assert (=> b!140392 (= c!26300 (and (not (= (bvand lt!73222 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!73222 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!15599 () ListLongMap!1747)

(declare-fun bm!15595 () Bool)

(declare-fun c!26297 () Bool)

(assert (=> bm!15595 (= call!15600 (+!174 (ite c!26297 call!15597 (ite c!26300 call!15599 call!15596)) (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140394 () Bool)

(declare-fun Unit!4420 () Unit!4395)

(assert (=> b!140394 (= e!91548 Unit!4420)))

(declare-fun b!140395 () Bool)

(declare-fun e!91555 () Bool)

(declare-fun e!91547 () Bool)

(assert (=> b!140395 (= e!91555 e!91547)))

(declare-fun res!67105 () Bool)

(declare-fun call!15598 () Bool)

(assert (=> b!140395 (= res!67105 call!15598)))

(assert (=> b!140395 (=> (not res!67105) (not e!91547))))

(declare-fun b!140396 () Bool)

(declare-fun e!91556 () Bool)

(assert (=> b!140396 (= e!91544 e!91556)))

(declare-fun c!26296 () Bool)

(assert (=> b!140396 (= c!26296 (not (= (bvand lt!73222 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140397 () Bool)

(assert (=> b!140397 (= e!91551 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140398 () Bool)

(declare-fun lt!73643 () ListLongMap!1747)

(assert (=> b!140398 (= e!91547 (= (apply!120 lt!73643 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15596 () Bool)

(assert (=> bm!15596 (= call!15596 call!15599)))

(declare-fun b!140399 () Bool)

(declare-fun call!15602 () Bool)

(assert (=> b!140399 (= e!91556 (not call!15602))))

(declare-fun e!91552 () Bool)

(declare-fun b!140400 () Bool)

(assert (=> b!140400 (= e!91552 (= (apply!120 lt!73643 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!15597 () Bool)

(assert (=> bm!15597 (= call!15599 call!15597)))

(declare-fun b!140401 () Bool)

(declare-fun e!91545 () Bool)

(assert (=> b!140401 (= e!91554 e!91545)))

(declare-fun res!67108 () Bool)

(assert (=> b!140401 (=> (not res!67108) (not e!91545))))

(assert (=> b!140401 (= res!67108 (contains!921 lt!73643 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140401 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun bm!15598 () Bool)

(assert (=> bm!15598 (= call!15598 (contains!921 lt!73643 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140402 () Bool)

(assert (=> b!140402 (= e!91545 (= (apply!120 lt!73643 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(assert (=> b!140402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140403 () Bool)

(declare-fun e!91549 () Bool)

(assert (=> b!140403 (= e!91549 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140404 () Bool)

(declare-fun c!26301 () Bool)

(assert (=> b!140404 (= c!26301 (and (not (= (bvand lt!73222 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!73222 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140404 (= e!91553 e!91550)))

(declare-fun b!140405 () Bool)

(assert (=> b!140405 (= e!91546 (+!174 call!15600 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!43677 () Bool)

(assert (=> d!43677 e!91544))

(declare-fun res!67102 () Bool)

(assert (=> d!43677 (=> (not res!67102) (not e!91544))))

(assert (=> d!43677 (= res!67102 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun lt!73642 () ListLongMap!1747)

(assert (=> d!43677 (= lt!73643 lt!73642)))

(declare-fun lt!73641 () Unit!4395)

(assert (=> d!43677 (= lt!73641 e!91548)))

(declare-fun c!26299 () Bool)

(assert (=> d!43677 (= c!26299 e!91549)))

(declare-fun res!67106 () Bool)

(assert (=> d!43677 (=> (not res!67106) (not e!91549))))

(assert (=> d!43677 (= res!67106 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43677 (= lt!73642 e!91546)))

(assert (=> d!43677 (= c!26297 (and (not (= (bvand lt!73222 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!73222 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43677 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43677 (= (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73643)))

(declare-fun b!140393 () Bool)

(assert (=> b!140393 (= e!91553 call!15601)))

(declare-fun bm!15599 () Bool)

(assert (=> bm!15599 (= call!15602 (contains!921 lt!73643 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140406 () Bool)

(assert (=> b!140406 (= e!91556 e!91552)))

(declare-fun res!67107 () Bool)

(assert (=> b!140406 (= res!67107 call!15602)))

(assert (=> b!140406 (=> (not res!67107) (not e!91552))))

(declare-fun b!140407 () Bool)

(assert (=> b!140407 (= e!91555 (not call!15598))))

(declare-fun b!140408 () Bool)

(declare-fun res!67103 () Bool)

(assert (=> b!140408 (=> (not res!67103) (not e!91544))))

(assert (=> b!140408 (= res!67103 e!91555)))

(declare-fun c!26298 () Bool)

(assert (=> b!140408 (= c!26298 (not (= (bvand lt!73222 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43677 c!26297) b!140405))

(assert (= (and d!43677 (not c!26297)) b!140392))

(assert (= (and b!140392 c!26300) b!140393))

(assert (= (and b!140392 (not c!26300)) b!140404))

(assert (= (and b!140404 c!26301) b!140391))

(assert (= (and b!140404 (not c!26301)) b!140388))

(assert (= (or b!140391 b!140388) bm!15596))

(assert (= (or b!140393 bm!15596) bm!15597))

(assert (= (or b!140393 b!140391) bm!15593))

(assert (= (or b!140405 bm!15597) bm!15594))

(assert (= (or b!140405 bm!15593) bm!15595))

(assert (= (and d!43677 res!67106) b!140403))

(assert (= (and d!43677 c!26299) b!140389))

(assert (= (and d!43677 (not c!26299)) b!140394))

(assert (= (and d!43677 res!67102) b!140390))

(assert (= (and b!140390 res!67100) b!140397))

(assert (= (and b!140390 (not res!67101)) b!140401))

(assert (= (and b!140401 res!67108) b!140402))

(assert (= (and b!140390 res!67104) b!140408))

(assert (= (and b!140408 c!26298) b!140395))

(assert (= (and b!140408 (not c!26298)) b!140407))

(assert (= (and b!140395 res!67105) b!140398))

(assert (= (or b!140395 b!140407) bm!15598))

(assert (= (and b!140408 res!67103) b!140396))

(assert (= (and b!140396 c!26296) b!140406))

(assert (= (and b!140396 (not c!26296)) b!140399))

(assert (= (and b!140406 res!67107) b!140400))

(assert (= (or b!140406 b!140399) bm!15599))

(declare-fun b_lambda!6327 () Bool)

(assert (=> (not b_lambda!6327) (not b!140402)))

(assert (=> b!140402 t!6366))

(declare-fun b_and!8809 () Bool)

(assert (= b_and!8805 (and (=> t!6366 result!4203) b_and!8809)))

(assert (=> b!140402 t!6368))

(declare-fun b_and!8811 () Bool)

(assert (= b_and!8807 (and (=> t!6368 result!4205) b_and!8811)))

(declare-fun m!167809 () Bool)

(assert (=> b!140405 m!167809))

(assert (=> bm!15594 m!166731))

(declare-fun m!167811 () Bool)

(assert (=> bm!15594 m!167811))

(assert (=> d!43677 m!166961))

(declare-fun m!167813 () Bool)

(assert (=> b!140400 m!167813))

(declare-fun m!167815 () Bool)

(assert (=> bm!15595 m!167815))

(assert (=> b!140402 m!166967))

(assert (=> b!140402 m!166967))

(declare-fun m!167817 () Bool)

(assert (=> b!140402 m!167817))

(assert (=> b!140402 m!166971))

(assert (=> b!140402 m!166973))

(assert (=> b!140402 m!166971))

(assert (=> b!140402 m!166975))

(assert (=> b!140402 m!166973))

(declare-fun m!167819 () Bool)

(assert (=> bm!15598 m!167819))

(declare-fun m!167821 () Bool)

(assert (=> b!140398 m!167821))

(assert (=> b!140397 m!166967))

(assert (=> b!140397 m!166967))

(assert (=> b!140397 m!166981))

(assert (=> b!140401 m!166967))

(assert (=> b!140401 m!166967))

(declare-fun m!167823 () Bool)

(assert (=> b!140401 m!167823))

(assert (=> b!140403 m!166967))

(assert (=> b!140403 m!166967))

(assert (=> b!140403 m!166981))

(declare-fun m!167825 () Bool)

(assert (=> bm!15599 m!167825))

(declare-fun m!167827 () Bool)

(assert (=> b!140389 m!167827))

(declare-fun m!167829 () Bool)

(assert (=> b!140389 m!167829))

(declare-fun m!167831 () Bool)

(assert (=> b!140389 m!167831))

(declare-fun m!167833 () Bool)

(assert (=> b!140389 m!167833))

(declare-fun m!167835 () Bool)

(assert (=> b!140389 m!167835))

(declare-fun m!167837 () Bool)

(assert (=> b!140389 m!167837))

(declare-fun m!167839 () Bool)

(assert (=> b!140389 m!167839))

(declare-fun m!167841 () Bool)

(assert (=> b!140389 m!167841))

(assert (=> b!140389 m!167841))

(declare-fun m!167843 () Bool)

(assert (=> b!140389 m!167843))

(assert (=> b!140389 m!166731))

(assert (=> b!140389 m!167811))

(declare-fun m!167845 () Bool)

(assert (=> b!140389 m!167845))

(declare-fun m!167847 () Bool)

(assert (=> b!140389 m!167847))

(assert (=> b!140389 m!167833))

(assert (=> b!140389 m!166731))

(declare-fun m!167849 () Bool)

(assert (=> b!140389 m!167849))

(assert (=> b!140389 m!166731))

(declare-fun m!167851 () Bool)

(assert (=> b!140389 m!167851))

(assert (=> b!140389 m!166967))

(declare-fun m!167853 () Bool)

(assert (=> b!140389 m!167853))

(assert (=> b!140389 m!167827))

(declare-fun m!167855 () Bool)

(assert (=> b!140389 m!167855))

(assert (=> b!140389 m!167845))

(assert (=> d!43587 d!43677))

(assert (=> d!43587 d!43525))

(assert (=> d!43587 d!43661))

(declare-fun d!43679 () Bool)

(assert (=> d!43679 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!43679 true))

(declare-fun _$8!124 () Unit!4395)

(assert (=> d!43679 (= (choose!872 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) _$8!124)))

(declare-fun bs!5863 () Bool)

(assert (= bs!5863 d!43679))

(assert (=> bs!5863 m!166829))

(assert (=> bs!5863 m!166829))

(assert (=> bs!5863 m!167537))

(assert (=> bs!5863 m!166731))

(assert (=> bs!5863 m!167535))

(assert (=> d!43587 d!43679))

(declare-fun d!43681 () Bool)

(assert (=> d!43681 (= (content!136 Nil!1760) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!43487 d!43681))

(assert (=> d!43549 d!43661))

(assert (=> d!43509 d!43661))

(declare-fun d!43683 () Bool)

(assert (=> d!43683 (isDefined!129 (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(declare-fun lt!73661 () Unit!4395)

(assert (=> d!43683 (= lt!73661 (choose!868 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(declare-fun e!91557 () Bool)

(assert (=> d!43683 e!91557))

(declare-fun res!67109 () Bool)

(assert (=> d!43683 (=> (not res!67109) (not e!91557))))

(assert (=> d!43683 (= res!67109 (isStrictlySorted!320 (toList!889 call!15514)))))

(assert (=> d!43683 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) lt!73661)))

(declare-fun b!140409 () Bool)

(assert (=> b!140409 (= e!91557 (containsKey!179 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (= (and d!43683 res!67109) b!140409))

(assert (=> d!43683 m!167135))

(assert (=> d!43683 m!167135))

(assert (=> d!43683 m!167137))

(declare-fun m!167857 () Bool)

(assert (=> d!43683 m!167857))

(declare-fun m!167859 () Bool)

(assert (=> d!43683 m!167859))

(assert (=> b!140409 m!167131))

(assert (=> b!139983 d!43683))

(declare-fun d!43685 () Bool)

(assert (=> d!43685 (= (isDefined!129 (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))))

(declare-fun bs!5864 () Bool)

(assert (= bs!5864 d!43685))

(assert (=> bs!5864 m!167135))

(declare-fun m!167861 () Bool)

(assert (=> bs!5864 m!167861))

(assert (=> b!139983 d!43685))

(declare-fun e!91559 () Option!181)

(declare-fun b!140412 () Bool)

(assert (=> b!140412 (= e!91559 (getValueByKey!175 (t!6360 (toList!889 call!15514)) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(declare-fun b!140411 () Bool)

(declare-fun e!91558 () Option!181)

(assert (=> b!140411 (= e!91558 e!91559)))

(declare-fun c!26303 () Bool)

(assert (=> b!140411 (= c!26303 (and ((_ is Cons!1760) (toList!889 call!15514)) (not (= (_1!1352 (h!2367 (toList!889 call!15514))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))))

(declare-fun b!140413 () Bool)

(assert (=> b!140413 (= e!91559 None!179)))

(declare-fun b!140410 () Bool)

(assert (=> b!140410 (= e!91558 (Some!180 (_2!1352 (h!2367 (toList!889 call!15514)))))))

(declare-fun d!43687 () Bool)

(declare-fun c!26302 () Bool)

(assert (=> d!43687 (= c!26302 (and ((_ is Cons!1760) (toList!889 call!15514)) (= (_1!1352 (h!2367 (toList!889 call!15514))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(assert (=> d!43687 (= (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) e!91558)))

(assert (= (and d!43687 c!26302) b!140410))

(assert (= (and d!43687 (not c!26302)) b!140411))

(assert (= (and b!140411 c!26303) b!140412))

(assert (= (and b!140411 (not c!26303)) b!140413))

(declare-fun m!167863 () Bool)

(assert (=> b!140412 m!167863))

(assert (=> b!139983 d!43687))

(declare-fun d!43689 () Bool)

(declare-fun res!67110 () Bool)

(declare-fun e!91560 () Bool)

(assert (=> d!43689 (=> res!67110 e!91560)))

(assert (=> d!43689 (= res!67110 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73065))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73065)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!43689 (= (containsKey!179 (t!6360 (toList!889 lt!73065)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91560)))

(declare-fun b!140414 () Bool)

(declare-fun e!91561 () Bool)

(assert (=> b!140414 (= e!91560 e!91561)))

(declare-fun res!67111 () Bool)

(assert (=> b!140414 (=> (not res!67111) (not e!91561))))

(assert (=> b!140414 (= res!67111 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 lt!73065)))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 lt!73065)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (t!6360 (toList!889 lt!73065))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73065)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!140415 () Bool)

(assert (=> b!140415 (= e!91561 (containsKey!179 (t!6360 (t!6360 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!43689 (not res!67110)) b!140414))

(assert (= (and b!140414 res!67111) b!140415))

(assert (=> b!140415 m!166733))

(declare-fun m!167865 () Bool)

(assert (=> b!140415 m!167865))

(assert (=> b!140235 d!43689))

(declare-fun d!43691 () Bool)

(declare-fun lt!73664 () Bool)

(declare-fun content!137 (List!1764) (InoxSet tuple2!2684))

(assert (=> d!43691 (= lt!73664 (select (content!137 (toList!889 lt!73508)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!91566 () Bool)

(assert (=> d!43691 (= lt!73664 e!91566)))

(declare-fun res!67117 () Bool)

(assert (=> d!43691 (=> (not res!67117) (not e!91566))))

(assert (=> d!43691 (= res!67117 ((_ is Cons!1760) (toList!889 lt!73508)))))

(assert (=> d!43691 (= (contains!923 (toList!889 lt!73508) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73664)))

(declare-fun b!140420 () Bool)

(declare-fun e!91567 () Bool)

(assert (=> b!140420 (= e!91566 e!91567)))

(declare-fun res!67116 () Bool)

(assert (=> b!140420 (=> res!67116 e!91567)))

(assert (=> b!140420 (= res!67116 (= (h!2367 (toList!889 lt!73508)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140421 () Bool)

(assert (=> b!140421 (= e!91567 (contains!923 (t!6360 (toList!889 lt!73508)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43691 res!67117) b!140420))

(assert (= (and b!140420 (not res!67116)) b!140421))

(declare-fun m!167867 () Bool)

(assert (=> d!43691 m!167867))

(declare-fun m!167869 () Bool)

(assert (=> d!43691 m!167869))

(declare-fun m!167871 () Bool)

(assert (=> b!140421 m!167871))

(assert (=> b!140163 d!43691))

(declare-fun e!91569 () Option!181)

(declare-fun b!140424 () Bool)

(assert (=> b!140424 (= e!91569 (getValueByKey!175 (t!6360 (toList!889 lt!73528)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140423 () Bool)

(declare-fun e!91568 () Option!181)

(assert (=> b!140423 (= e!91568 e!91569)))

(declare-fun c!26305 () Bool)

(assert (=> b!140423 (= c!26305 (and ((_ is Cons!1760) (toList!889 lt!73528)) (not (= (_1!1352 (h!2367 (toList!889 lt!73528))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!140425 () Bool)

(assert (=> b!140425 (= e!91569 None!179)))

(declare-fun b!140422 () Bool)

(assert (=> b!140422 (= e!91568 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73528)))))))

(declare-fun c!26304 () Bool)

(declare-fun d!43693 () Bool)

(assert (=> d!43693 (= c!26304 (and ((_ is Cons!1760) (toList!889 lt!73528)) (= (_1!1352 (h!2367 (toList!889 lt!73528))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43693 (= (getValueByKey!175 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91568)))

(assert (= (and d!43693 c!26304) b!140422))

(assert (= (and d!43693 (not c!26304)) b!140423))

(assert (= (and b!140423 c!26305) b!140424))

(assert (= (and b!140423 (not c!26305)) b!140425))

(declare-fun m!167873 () Bool)

(assert (=> b!140424 m!167873))

(assert (=> b!140199 d!43693))

(declare-fun d!43695 () Bool)

(assert (=> d!43695 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000)))

(declare-fun lt!73667 () Unit!4395)

(declare-fun choose!13 (array!4896 (_ BitVec 64) (_ BitVec 32)) Unit!4395)

(assert (=> d!43695 (= lt!73667 (choose!13 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000))))

(assert (=> d!43695 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!43695 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000) lt!73667)))

(declare-fun bs!5865 () Bool)

(assert (= bs!5865 d!43695))

(assert (=> bs!5865 m!167389))

(declare-fun m!167875 () Bool)

(assert (=> bs!5865 m!167875))

(assert (=> b!140172 d!43695))

(declare-fun d!43697 () Bool)

(declare-fun res!67118 () Bool)

(declare-fun e!91570 () Bool)

(assert (=> d!43697 (=> res!67118 e!91570)))

(assert (=> d!43697 (= res!67118 (= (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) lt!73517))))

(assert (=> d!43697 (= (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000) e!91570)))

(declare-fun b!140426 () Bool)

(declare-fun e!91571 () Bool)

(assert (=> b!140426 (= e!91570 e!91571)))

(declare-fun res!67119 () Bool)

(assert (=> b!140426 (=> (not res!67119) (not e!91571))))

(assert (=> b!140426 (= res!67119 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140427 () Bool)

(assert (=> b!140427 (= e!91571 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73517 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43697 (not res!67118)) b!140426))

(assert (= (and b!140426 res!67119) b!140427))

(assert (=> d!43697 m!166967))

(declare-fun m!167877 () Bool)

(assert (=> b!140427 m!167877))

(assert (=> b!140172 d!43697))

(declare-fun b!140428 () Bool)

(declare-fun e!91572 () SeekEntryResult!289)

(declare-fun e!91574 () SeekEntryResult!289)

(assert (=> b!140428 (= e!91572 e!91574)))

(declare-fun lt!73669 () (_ BitVec 64))

(declare-fun lt!73670 () SeekEntryResult!289)

(assert (=> b!140428 (= lt!73669 (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!73670)))))

(declare-fun c!26307 () Bool)

(assert (=> b!140428 (= c!26307 (= lt!73669 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140429 () Bool)

(declare-fun c!26308 () Bool)

(assert (=> b!140429 (= c!26308 (= lt!73669 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91573 () SeekEntryResult!289)

(assert (=> b!140429 (= e!91574 e!91573)))

(declare-fun b!140430 () Bool)

(assert (=> b!140430 (= e!91573 (seekKeyOrZeroReturnVacant!0 (x!16146 lt!73670) (index!3321 lt!73670) (index!3321 lt!73670) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140431 () Bool)

(assert (=> b!140431 (= e!91573 (MissingZero!289 (index!3321 lt!73670)))))

(declare-fun d!43699 () Bool)

(declare-fun lt!73668 () SeekEntryResult!289)

(assert (=> d!43699 (and (or ((_ is Undefined!289) lt!73668) (not ((_ is Found!289) lt!73668)) (and (bvsge (index!3320 lt!73668) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73668) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73668) ((_ is Found!289) lt!73668) (not ((_ is MissingZero!289) lt!73668)) (and (bvsge (index!3319 lt!73668) #b00000000000000000000000000000000) (bvslt (index!3319 lt!73668) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73668) ((_ is Found!289) lt!73668) ((_ is MissingZero!289) lt!73668) (not ((_ is MissingVacant!289) lt!73668)) (and (bvsge (index!3322 lt!73668) #b00000000000000000000000000000000) (bvslt (index!3322 lt!73668) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73668) (ite ((_ is Found!289) lt!73668) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73668)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!289) lt!73668) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!73668)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!289) lt!73668) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!73668)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43699 (= lt!73668 e!91572)))

(declare-fun c!26306 () Bool)

(assert (=> d!43699 (= c!26306 (and ((_ is Intermediate!289) lt!73670) (undefined!1101 lt!73670)))))

(assert (=> d!43699 (= lt!73670 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!43699 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43699 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!73668)))

(declare-fun b!140432 () Bool)

(assert (=> b!140432 (= e!91574 (Found!289 (index!3321 lt!73670)))))

(declare-fun b!140433 () Bool)

(assert (=> b!140433 (= e!91572 Undefined!289)))

(assert (= (and d!43699 c!26306) b!140433))

(assert (= (and d!43699 (not c!26306)) b!140428))

(assert (= (and b!140428 c!26307) b!140432))

(assert (= (and b!140428 (not c!26307)) b!140429))

(assert (= (and b!140429 c!26308) b!140431))

(assert (= (and b!140429 (not c!26308)) b!140430))

(declare-fun m!167879 () Bool)

(assert (=> b!140428 m!167879))

(assert (=> b!140430 m!166967))

(declare-fun m!167881 () Bool)

(assert (=> b!140430 m!167881))

(assert (=> d!43699 m!166967))

(declare-fun m!167883 () Bool)

(assert (=> d!43699 m!167883))

(declare-fun m!167885 () Bool)

(assert (=> d!43699 m!167885))

(assert (=> d!43699 m!166961))

(assert (=> d!43699 m!167883))

(assert (=> d!43699 m!166967))

(declare-fun m!167887 () Bool)

(assert (=> d!43699 m!167887))

(declare-fun m!167889 () Bool)

(assert (=> d!43699 m!167889))

(declare-fun m!167891 () Bool)

(assert (=> d!43699 m!167891))

(assert (=> b!140172 d!43699))

(declare-fun d!43701 () Bool)

(declare-fun e!91576 () Bool)

(assert (=> d!43701 e!91576))

(declare-fun res!67120 () Bool)

(assert (=> d!43701 (=> res!67120 e!91576)))

(declare-fun lt!73671 () Bool)

(assert (=> d!43701 (= res!67120 (not lt!73671))))

(declare-fun lt!73674 () Bool)

(assert (=> d!43701 (= lt!73671 lt!73674)))

(declare-fun lt!73672 () Unit!4395)

(declare-fun e!91575 () Unit!4395)

(assert (=> d!43701 (= lt!73672 e!91575)))

(declare-fun c!26309 () Bool)

(assert (=> d!43701 (= c!26309 lt!73674)))

(assert (=> d!43701 (= lt!73674 (containsKey!179 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43701 (= (contains!921 lt!73441 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73671)))

(declare-fun b!140434 () Bool)

(declare-fun lt!73673 () Unit!4395)

(assert (=> b!140434 (= e!91575 lt!73673)))

(assert (=> b!140434 (= lt!73673 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140434 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140435 () Bool)

(declare-fun Unit!4421 () Unit!4395)

(assert (=> b!140435 (= e!91575 Unit!4421)))

(declare-fun b!140436 () Bool)

(assert (=> b!140436 (= e!91576 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43701 c!26309) b!140434))

(assert (= (and d!43701 (not c!26309)) b!140435))

(assert (= (and d!43701 (not res!67120)) b!140436))

(declare-fun m!167893 () Bool)

(assert (=> d!43701 m!167893))

(declare-fun m!167895 () Bool)

(assert (=> b!140434 m!167895))

(declare-fun m!167897 () Bool)

(assert (=> b!140434 m!167897))

(assert (=> b!140434 m!167897))

(declare-fun m!167899 () Bool)

(assert (=> b!140434 m!167899))

(assert (=> b!140436 m!167897))

(assert (=> b!140436 m!167897))

(assert (=> b!140436 m!167899))

(assert (=> b!140070 d!43701))

(declare-fun d!43703 () Bool)

(assert (=> d!43703 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5866 () Bool)

(assert (= bs!5866 d!43703))

(assert (=> bs!5866 m!167017))

(declare-fun m!167901 () Bool)

(assert (=> bs!5866 m!167901))

(assert (=> b!140221 d!43703))

(declare-fun b!140439 () Bool)

(declare-fun e!91578 () Option!181)

(assert (=> b!140439 (= e!91578 (getValueByKey!175 (t!6360 (toList!889 lt!73135)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140438 () Bool)

(declare-fun e!91577 () Option!181)

(assert (=> b!140438 (= e!91577 e!91578)))

(declare-fun c!26311 () Bool)

(assert (=> b!140438 (= c!26311 (and ((_ is Cons!1760) (toList!889 lt!73135)) (not (= (_1!1352 (h!2367 (toList!889 lt!73135))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140440 () Bool)

(assert (=> b!140440 (= e!91578 None!179)))

(declare-fun b!140437 () Bool)

(assert (=> b!140437 (= e!91577 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73135)))))))

(declare-fun d!43705 () Bool)

(declare-fun c!26310 () Bool)

(assert (=> d!43705 (= c!26310 (and ((_ is Cons!1760) (toList!889 lt!73135)) (= (_1!1352 (h!2367 (toList!889 lt!73135))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43705 (= (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000) e!91577)))

(assert (= (and d!43705 c!26310) b!140437))

(assert (= (and d!43705 (not c!26310)) b!140438))

(assert (= (and b!140438 c!26311) b!140439))

(assert (= (and b!140438 (not c!26311)) b!140440))

(declare-fun m!167903 () Bool)

(assert (=> b!140439 m!167903))

(assert (=> b!140221 d!43705))

(declare-fun d!43707 () Bool)

(assert (=> d!43707 (= (size!2590 newMap!16) (bvadd (_size!625 newMap!16) (bvsdiv (bvadd (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140197 d!43707))

(declare-fun bm!15600 () Bool)

(declare-fun call!15603 () Bool)

(declare-fun c!26312 () Bool)

(assert (=> bm!15600 (= call!15603 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26312 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) Nil!1760) Nil!1760)))))

(declare-fun b!140442 () Bool)

(declare-fun e!91580 () Bool)

(declare-fun e!91581 () Bool)

(assert (=> b!140442 (= e!91580 e!91581)))

(assert (=> b!140442 (= c!26312 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140443 () Bool)

(assert (=> b!140443 (= e!91581 call!15603)))

(declare-fun d!43709 () Bool)

(declare-fun res!67123 () Bool)

(declare-fun e!91582 () Bool)

(assert (=> d!43709 (=> res!67123 e!91582)))

(assert (=> d!43709 (= res!67123 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43709 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 Nil!1760) e!91582)))

(declare-fun b!140441 () Bool)

(declare-fun e!91579 () Bool)

(assert (=> b!140441 (= e!91579 (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140444 () Bool)

(assert (=> b!140444 (= e!91582 e!91580)))

(declare-fun res!67121 () Bool)

(assert (=> b!140444 (=> (not res!67121) (not e!91580))))

(assert (=> b!140444 (= res!67121 (not e!91579))))

(declare-fun res!67122 () Bool)

(assert (=> b!140444 (=> (not res!67122) (not e!91579))))

(assert (=> b!140444 (= res!67122 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140445 () Bool)

(assert (=> b!140445 (= e!91581 call!15603)))

(assert (= (and d!43709 (not res!67123)) b!140444))

(assert (= (and b!140444 res!67122) b!140441))

(assert (= (and b!140444 res!67121) b!140442))

(assert (= (and b!140442 c!26312) b!140443))

(assert (= (and b!140442 (not c!26312)) b!140445))

(assert (= (or b!140443 b!140445) bm!15600))

(declare-fun m!167905 () Bool)

(assert (=> bm!15600 m!167905))

(declare-fun m!167907 () Bool)

(assert (=> bm!15600 m!167907))

(assert (=> b!140442 m!167905))

(assert (=> b!140442 m!167905))

(declare-fun m!167909 () Bool)

(assert (=> b!140442 m!167909))

(assert (=> b!140441 m!167905))

(assert (=> b!140441 m!167905))

(declare-fun m!167911 () Bool)

(assert (=> b!140441 m!167911))

(assert (=> b!140444 m!167905))

(assert (=> b!140444 m!167905))

(assert (=> b!140444 m!167909))

(assert (=> b!140224 d!43709))

(declare-fun b!140448 () Bool)

(declare-fun e!91584 () Option!181)

(assert (=> b!140448 (= e!91584 (getValueByKey!175 (t!6360 (toList!889 lt!73535)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140447 () Bool)

(declare-fun e!91583 () Option!181)

(assert (=> b!140447 (= e!91583 e!91584)))

(declare-fun c!26314 () Bool)

(assert (=> b!140447 (= c!26314 (and ((_ is Cons!1760) (toList!889 lt!73535)) (not (= (_1!1352 (h!2367 (toList!889 lt!73535))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140449 () Bool)

(assert (=> b!140449 (= e!91584 None!179)))

(declare-fun b!140446 () Bool)

(assert (=> b!140446 (= e!91583 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73535)))))))

(declare-fun c!26313 () Bool)

(declare-fun d!43711 () Bool)

(assert (=> d!43711 (= c!26313 (and ((_ is Cons!1760) (toList!889 lt!73535)) (= (_1!1352 (h!2367 (toList!889 lt!73535))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43711 (= (getValueByKey!175 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91583)))

(assert (= (and d!43711 c!26313) b!140446))

(assert (= (and d!43711 (not c!26313)) b!140447))

(assert (= (and b!140447 c!26314) b!140448))

(assert (= (and b!140447 (not c!26314)) b!140449))

(declare-fun m!167913 () Bool)

(assert (=> b!140448 m!167913))

(assert (=> b!140201 d!43711))

(declare-fun d!43713 () Bool)

(declare-fun e!91586 () Bool)

(assert (=> d!43713 e!91586))

(declare-fun res!67124 () Bool)

(assert (=> d!43713 (=> res!67124 e!91586)))

(declare-fun lt!73675 () Bool)

(assert (=> d!43713 (= res!67124 (not lt!73675))))

(declare-fun lt!73678 () Bool)

(assert (=> d!43713 (= lt!73675 lt!73678)))

(declare-fun lt!73676 () Unit!4395)

(declare-fun e!91585 () Unit!4395)

(assert (=> d!43713 (= lt!73676 e!91585)))

(declare-fun c!26315 () Bool)

(assert (=> d!43713 (= c!26315 lt!73678)))

(assert (=> d!43713 (= lt!73678 (containsKey!179 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43713 (= (contains!921 (map!1438 (_2!1353 lt!73341)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73675)))

(declare-fun b!140450 () Bool)

(declare-fun lt!73677 () Unit!4395)

(assert (=> b!140450 (= e!91585 lt!73677)))

(assert (=> b!140450 (= lt!73677 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!140450 (isDefined!129 (getValueByKey!175 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140451 () Bool)

(declare-fun Unit!4422 () Unit!4395)

(assert (=> b!140451 (= e!91585 Unit!4422)))

(declare-fun b!140452 () Bool)

(assert (=> b!140452 (= e!91586 (isDefined!129 (getValueByKey!175 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (= (and d!43713 c!26315) b!140450))

(assert (= (and d!43713 (not c!26315)) b!140451))

(assert (= (and d!43713 (not res!67124)) b!140452))

(assert (=> d!43713 m!166733))

(declare-fun m!167915 () Bool)

(assert (=> d!43713 m!167915))

(assert (=> b!140450 m!166733))

(declare-fun m!167917 () Bool)

(assert (=> b!140450 m!167917))

(assert (=> b!140450 m!166733))

(declare-fun m!167919 () Bool)

(assert (=> b!140450 m!167919))

(assert (=> b!140450 m!167919))

(declare-fun m!167921 () Bool)

(assert (=> b!140450 m!167921))

(assert (=> b!140452 m!166733))

(assert (=> b!140452 m!167919))

(assert (=> b!140452 m!167919))

(assert (=> b!140452 m!167921))

(assert (=> b!139940 d!43713))

(declare-fun d!43715 () Bool)

(assert (=> d!43715 (= (map!1438 (_2!1353 lt!73341)) (getCurrentListMap!555 (_keys!4699 (_2!1353 lt!73341)) (_values!2923 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341)) (extraKeys!2695 (_2!1353 lt!73341)) (zeroValue!2790 (_2!1353 lt!73341)) (minValue!2790 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73341))))))

(declare-fun bs!5867 () Bool)

(assert (= bs!5867 d!43715))

(declare-fun m!167923 () Bool)

(assert (=> bs!5867 m!167923))

(assert (=> b!139940 d!43715))

(declare-fun d!43717 () Bool)

(assert (=> d!43717 (= (get!1538 (getValueByKey!175 (toList!889 lt!73140) lt!73151)) (v!3283 (getValueByKey!175 (toList!889 lt!73140) lt!73151)))))

(assert (=> d!43581 d!43717))

(declare-fun b!140455 () Bool)

(declare-fun e!91588 () Option!181)

(assert (=> b!140455 (= e!91588 (getValueByKey!175 (t!6360 (toList!889 lt!73140)) lt!73151))))

(declare-fun b!140454 () Bool)

(declare-fun e!91587 () Option!181)

(assert (=> b!140454 (= e!91587 e!91588)))

(declare-fun c!26317 () Bool)

(assert (=> b!140454 (= c!26317 (and ((_ is Cons!1760) (toList!889 lt!73140)) (not (= (_1!1352 (h!2367 (toList!889 lt!73140))) lt!73151))))))

(declare-fun b!140456 () Bool)

(assert (=> b!140456 (= e!91588 None!179)))

(declare-fun b!140453 () Bool)

(assert (=> b!140453 (= e!91587 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73140)))))))

(declare-fun d!43719 () Bool)

(declare-fun c!26316 () Bool)

(assert (=> d!43719 (= c!26316 (and ((_ is Cons!1760) (toList!889 lt!73140)) (= (_1!1352 (h!2367 (toList!889 lt!73140))) lt!73151)))))

(assert (=> d!43719 (= (getValueByKey!175 (toList!889 lt!73140) lt!73151) e!91587)))

(assert (= (and d!43719 c!26316) b!140453))

(assert (= (and d!43719 (not c!26316)) b!140454))

(assert (= (and b!140454 c!26317) b!140455))

(assert (= (and b!140454 (not c!26317)) b!140456))

(declare-fun m!167925 () Bool)

(assert (=> b!140455 m!167925))

(assert (=> d!43581 d!43719))

(declare-fun d!43721 () Bool)

(assert (=> d!43721 (= (get!1538 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3283 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43483 d!43721))

(declare-fun e!91590 () Option!181)

(declare-fun b!140459 () Bool)

(assert (=> b!140459 (= e!91590 (getValueByKey!175 (t!6360 (toList!889 lt!73135)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140458 () Bool)

(declare-fun e!91589 () Option!181)

(assert (=> b!140458 (= e!91589 e!91590)))

(declare-fun c!26319 () Bool)

(assert (=> b!140458 (= c!26319 (and ((_ is Cons!1760) (toList!889 lt!73135)) (not (= (_1!1352 (h!2367 (toList!889 lt!73135))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!140460 () Bool)

(assert (=> b!140460 (= e!91590 None!179)))

(declare-fun b!140457 () Bool)

(assert (=> b!140457 (= e!91589 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73135)))))))

(declare-fun c!26318 () Bool)

(declare-fun d!43723 () Bool)

(assert (=> d!43723 (= c!26318 (and ((_ is Cons!1760) (toList!889 lt!73135)) (= (_1!1352 (h!2367 (toList!889 lt!73135))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43723 (= (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91589)))

(assert (= (and d!43723 c!26318) b!140457))

(assert (= (and d!43723 (not c!26318)) b!140458))

(assert (= (and b!140458 c!26319) b!140459))

(assert (= (and b!140458 (not c!26319)) b!140460))

(assert (=> b!140459 m!166821))

(declare-fun m!167927 () Bool)

(assert (=> b!140459 m!167927))

(assert (=> d!43483 d!43723))

(declare-fun d!43725 () Bool)

(declare-fun e!91591 () Bool)

(assert (=> d!43725 e!91591))

(declare-fun res!67126 () Bool)

(assert (=> d!43725 (=> (not res!67126) (not e!91591))))

(declare-fun lt!73681 () ListLongMap!1747)

(assert (=> d!43725 (= res!67126 (contains!921 lt!73681 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun lt!73682 () List!1764)

(assert (=> d!43725 (= lt!73681 (ListLongMap!1748 lt!73682))))

(declare-fun lt!73679 () Unit!4395)

(declare-fun lt!73680 () Unit!4395)

(assert (=> d!43725 (= lt!73679 lt!73680)))

(assert (=> d!43725 (= (getValueByKey!175 lt!73682 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (Some!180 (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!43725 (= lt!73680 (lemmaContainsTupThenGetReturnValue!91 lt!73682 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!43725 (= lt!73682 (insertStrictlySorted!93 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!43725 (= (+!174 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)) (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73681)))

(declare-fun b!140461 () Bool)

(declare-fun res!67125 () Bool)

(assert (=> b!140461 (=> (not res!67125) (not e!91591))))

(assert (=> b!140461 (= res!67125 (= (getValueByKey!175 (toList!889 lt!73681) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (Some!180 (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!140462 () Bool)

(assert (=> b!140462 (= e!91591 (contains!923 (toList!889 lt!73681) (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!43725 res!67126) b!140461))

(assert (= (and b!140461 res!67125) b!140462))

(declare-fun m!167929 () Bool)

(assert (=> d!43725 m!167929))

(declare-fun m!167931 () Bool)

(assert (=> d!43725 m!167931))

(declare-fun m!167933 () Bool)

(assert (=> d!43725 m!167933))

(declare-fun m!167935 () Bool)

(assert (=> d!43725 m!167935))

(declare-fun m!167937 () Bool)

(assert (=> b!140461 m!167937))

(declare-fun m!167939 () Bool)

(assert (=> b!140462 m!167939))

(assert (=> bm!15521 d!43725))

(declare-fun d!43727 () Bool)

(assert (not d!43727))

(assert (=> b!139954 d!43727))

(assert (=> b!140075 d!43673))

(declare-fun d!43729 () Bool)

(declare-fun e!91593 () Bool)

(assert (=> d!43729 e!91593))

(declare-fun res!67127 () Bool)

(assert (=> d!43729 (=> res!67127 e!91593)))

(declare-fun lt!73683 () Bool)

(assert (=> d!43729 (= res!67127 (not lt!73683))))

(declare-fun lt!73686 () Bool)

(assert (=> d!43729 (= lt!73683 lt!73686)))

(declare-fun lt!73684 () Unit!4395)

(declare-fun e!91592 () Unit!4395)

(assert (=> d!43729 (= lt!73684 e!91592)))

(declare-fun c!26320 () Bool)

(assert (=> d!43729 (= c!26320 lt!73686)))

(assert (=> d!43729 (= lt!73686 (containsKey!179 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43729 (= (contains!921 lt!73378 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73683)))

(declare-fun b!140463 () Bool)

(declare-fun lt!73685 () Unit!4395)

(assert (=> b!140463 (= e!91592 lt!73685)))

(assert (=> b!140463 (= lt!73685 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> b!140463 (isDefined!129 (getValueByKey!175 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140464 () Bool)

(declare-fun Unit!4423 () Unit!4395)

(assert (=> b!140464 (= e!91592 Unit!4423)))

(declare-fun b!140465 () Bool)

(assert (=> b!140465 (= e!91593 (isDefined!129 (getValueByKey!175 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43729 c!26320) b!140463))

(assert (= (and d!43729 (not c!26320)) b!140464))

(assert (= (and d!43729 (not res!67127)) b!140465))

(declare-fun m!167941 () Bool)

(assert (=> d!43729 m!167941))

(declare-fun m!167943 () Bool)

(assert (=> b!140463 m!167943))

(assert (=> b!140463 m!167127))

(assert (=> b!140463 m!167127))

(declare-fun m!167945 () Bool)

(assert (=> b!140463 m!167945))

(assert (=> b!140465 m!167127))

(assert (=> b!140465 m!167127))

(assert (=> b!140465 m!167945))

(assert (=> d!43503 d!43729))

(declare-fun b!140468 () Bool)

(declare-fun e!91595 () Option!181)

(assert (=> b!140468 (= e!91595 (getValueByKey!175 (t!6360 lt!73379) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140467 () Bool)

(declare-fun e!91594 () Option!181)

(assert (=> b!140467 (= e!91594 e!91595)))

(declare-fun c!26322 () Bool)

(assert (=> b!140467 (= c!26322 (and ((_ is Cons!1760) lt!73379) (not (= (_1!1352 (h!2367 lt!73379)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140469 () Bool)

(assert (=> b!140469 (= e!91595 None!179)))

(declare-fun b!140466 () Bool)

(assert (=> b!140466 (= e!91594 (Some!180 (_2!1352 (h!2367 lt!73379))))))

(declare-fun d!43731 () Bool)

(declare-fun c!26321 () Bool)

(assert (=> d!43731 (= c!26321 (and ((_ is Cons!1760) lt!73379) (= (_1!1352 (h!2367 lt!73379)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43731 (= (getValueByKey!175 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91594)))

(assert (= (and d!43731 c!26321) b!140466))

(assert (= (and d!43731 (not c!26321)) b!140467))

(assert (= (and b!140467 c!26322) b!140468))

(assert (= (and b!140467 (not c!26322)) b!140469))

(declare-fun m!167947 () Bool)

(assert (=> b!140468 m!167947))

(assert (=> d!43503 d!43731))

(declare-fun d!43733 () Bool)

(assert (=> d!43733 (= (getValueByKey!175 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73687 () Unit!4395)

(assert (=> d!43733 (= lt!73687 (choose!873 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!91596 () Bool)

(assert (=> d!43733 e!91596))

(declare-fun res!67128 () Bool)

(assert (=> d!43733 (=> (not res!67128) (not e!91596))))

(assert (=> d!43733 (= res!67128 (isStrictlySorted!320 lt!73379))))

(assert (=> d!43733 (= (lemmaContainsTupThenGetReturnValue!91 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73687)))

(declare-fun b!140470 () Bool)

(declare-fun res!67129 () Bool)

(assert (=> b!140470 (=> (not res!67129) (not e!91596))))

(assert (=> b!140470 (= res!67129 (containsKey!179 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140471 () Bool)

(assert (=> b!140471 (= e!91596 (contains!923 lt!73379 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43733 res!67128) b!140470))

(assert (= (and b!140470 res!67129) b!140471))

(assert (=> d!43733 m!167121))

(declare-fun m!167949 () Bool)

(assert (=> d!43733 m!167949))

(declare-fun m!167951 () Bool)

(assert (=> d!43733 m!167951))

(declare-fun m!167953 () Bool)

(assert (=> b!140470 m!167953))

(declare-fun m!167955 () Bool)

(assert (=> b!140471 m!167955))

(assert (=> d!43503 d!43733))

(declare-fun d!43735 () Bool)

(declare-fun e!91597 () Bool)

(assert (=> d!43735 e!91597))

(declare-fun res!67131 () Bool)

(assert (=> d!43735 (=> (not res!67131) (not e!91597))))

(declare-fun lt!73688 () List!1764)

(assert (=> d!43735 (= res!67131 (isStrictlySorted!320 lt!73688))))

(declare-fun e!91599 () List!1764)

(assert (=> d!43735 (= lt!73688 e!91599)))

(declare-fun c!26323 () Bool)

(assert (=> d!43735 (= c!26323 (and ((_ is Cons!1760) (toList!889 call!15447)) (bvslt (_1!1352 (h!2367 (toList!889 call!15447))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43735 (isStrictlySorted!320 (toList!889 call!15447))))

(assert (=> d!43735 (= (insertStrictlySorted!93 (toList!889 call!15447) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73688)))

(declare-fun b!140472 () Bool)

(assert (=> b!140472 (= e!91597 (contains!923 lt!73688 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!91600 () List!1764)

(declare-fun bm!15601 () Bool)

(declare-fun call!15604 () List!1764)

(assert (=> bm!15601 (= call!15604 ($colon$colon!93 e!91600 (ite c!26323 (h!2367 (toList!889 call!15447)) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26326 () Bool)

(assert (=> bm!15601 (= c!26326 c!26323)))

(declare-fun b!140473 () Bool)

(assert (=> b!140473 (= e!91599 call!15604)))

(declare-fun b!140474 () Bool)

(assert (=> b!140474 (= e!91600 (insertStrictlySorted!93 (t!6360 (toList!889 call!15447)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140475 () Bool)

(declare-fun e!91601 () List!1764)

(declare-fun call!15605 () List!1764)

(assert (=> b!140475 (= e!91601 call!15605)))

(declare-fun bm!15602 () Bool)

(assert (=> bm!15602 (= call!15605 call!15604)))

(declare-fun b!140476 () Bool)

(declare-fun e!91598 () List!1764)

(declare-fun call!15606 () List!1764)

(assert (=> b!140476 (= e!91598 call!15606)))

(declare-fun b!140477 () Bool)

(declare-fun c!26325 () Bool)

(assert (=> b!140477 (= c!26325 (and ((_ is Cons!1760) (toList!889 call!15447)) (bvsgt (_1!1352 (h!2367 (toList!889 call!15447))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!140477 (= e!91601 e!91598)))

(declare-fun b!140478 () Bool)

(assert (=> b!140478 (= e!91599 e!91601)))

(declare-fun c!26324 () Bool)

(assert (=> b!140478 (= c!26324 (and ((_ is Cons!1760) (toList!889 call!15447)) (= (_1!1352 (h!2367 (toList!889 call!15447))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140479 () Bool)

(assert (=> b!140479 (= e!91600 (ite c!26324 (t!6360 (toList!889 call!15447)) (ite c!26325 (Cons!1760 (h!2367 (toList!889 call!15447)) (t!6360 (toList!889 call!15447))) Nil!1761)))))

(declare-fun bm!15603 () Bool)

(assert (=> bm!15603 (= call!15606 call!15605)))

(declare-fun b!140480 () Bool)

(declare-fun res!67130 () Bool)

(assert (=> b!140480 (=> (not res!67130) (not e!91597))))

(assert (=> b!140480 (= res!67130 (containsKey!179 lt!73688 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140481 () Bool)

(assert (=> b!140481 (= e!91598 call!15606)))

(assert (= (and d!43735 c!26323) b!140473))

(assert (= (and d!43735 (not c!26323)) b!140478))

(assert (= (and b!140478 c!26324) b!140475))

(assert (= (and b!140478 (not c!26324)) b!140477))

(assert (= (and b!140477 c!26325) b!140481))

(assert (= (and b!140477 (not c!26325)) b!140476))

(assert (= (or b!140481 b!140476) bm!15603))

(assert (= (or b!140475 bm!15603) bm!15602))

(assert (= (or b!140473 bm!15602) bm!15601))

(assert (= (and bm!15601 c!26326) b!140474))

(assert (= (and bm!15601 (not c!26326)) b!140479))

(assert (= (and d!43735 res!67131) b!140480))

(assert (= (and b!140480 res!67130) b!140472))

(declare-fun m!167957 () Bool)

(assert (=> b!140472 m!167957))

(declare-fun m!167959 () Bool)

(assert (=> b!140480 m!167959))

(declare-fun m!167961 () Bool)

(assert (=> b!140474 m!167961))

(declare-fun m!167963 () Bool)

(assert (=> bm!15601 m!167963))

(declare-fun m!167965 () Bool)

(assert (=> d!43735 m!167965))

(declare-fun m!167967 () Bool)

(assert (=> d!43735 m!167967))

(assert (=> d!43503 d!43735))

(assert (=> d!43533 d!43515))

(declare-fun d!43737 () Bool)

(declare-fun e!91604 () Bool)

(assert (=> d!43737 e!91604))

(declare-fun res!67137 () Bool)

(assert (=> d!43737 (=> (not res!67137) (not e!91604))))

(declare-fun lt!73691 () SeekEntryResult!289)

(assert (=> d!43737 (= res!67137 ((_ is Found!289) lt!73691))))

(assert (=> d!43737 (= lt!73691 (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!43737 true))

(declare-fun _$33!120 () Unit!4395)

(assert (=> d!43737 (= (choose!867 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) _$33!120)))

(declare-fun b!140486 () Bool)

(declare-fun res!67136 () Bool)

(assert (=> b!140486 (=> (not res!67136) (not e!91604))))

(assert (=> b!140486 (= res!67136 (inRange!0 (index!3320 lt!73691) (mask!7280 newMap!16)))))

(declare-fun b!140487 () Bool)

(assert (=> b!140487 (= e!91604 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73691)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!43737 res!67137) b!140486))

(assert (= (and b!140486 res!67136) b!140487))

(assert (=> d!43737 m!166733))

(assert (=> d!43737 m!166903))

(declare-fun m!167969 () Bool)

(assert (=> b!140486 m!167969))

(declare-fun m!167971 () Bool)

(assert (=> b!140487 m!167971))

(assert (=> d!43533 d!43737))

(assert (=> d!43533 d!43661))

(declare-fun d!43739 () Bool)

(declare-fun e!91606 () Bool)

(assert (=> d!43739 e!91606))

(declare-fun res!67138 () Bool)

(assert (=> d!43739 (=> res!67138 e!91606)))

(declare-fun lt!73692 () Bool)

(assert (=> d!43739 (= res!67138 (not lt!73692))))

(declare-fun lt!73695 () Bool)

(assert (=> d!43739 (= lt!73692 lt!73695)))

(declare-fun lt!73693 () Unit!4395)

(declare-fun e!91605 () Unit!4395)

(assert (=> d!43739 (= lt!73693 e!91605)))

(declare-fun c!26327 () Bool)

(assert (=> d!43739 (= c!26327 lt!73695)))

(assert (=> d!43739 (= lt!73695 (containsKey!179 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43739 (= (contains!921 lt!73391 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73692)))

(declare-fun b!140488 () Bool)

(declare-fun lt!73694 () Unit!4395)

(assert (=> b!140488 (= e!91605 lt!73694)))

(assert (=> b!140488 (= lt!73694 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140488 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140489 () Bool)

(declare-fun Unit!4424 () Unit!4395)

(assert (=> b!140489 (= e!91605 Unit!4424)))

(declare-fun b!140490 () Bool)

(assert (=> b!140490 (= e!91606 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43739 c!26327) b!140488))

(assert (= (and d!43739 (not c!26327)) b!140489))

(assert (= (and d!43739 (not res!67138)) b!140490))

(assert (=> d!43739 m!166967))

(declare-fun m!167973 () Bool)

(assert (=> d!43739 m!167973))

(assert (=> b!140488 m!166967))

(declare-fun m!167975 () Bool)

(assert (=> b!140488 m!167975))

(assert (=> b!140488 m!166967))

(declare-fun m!167977 () Bool)

(assert (=> b!140488 m!167977))

(assert (=> b!140488 m!167977))

(declare-fun m!167979 () Bool)

(assert (=> b!140488 m!167979))

(assert (=> b!140490 m!166967))

(assert (=> b!140490 m!167977))

(assert (=> b!140490 m!167977))

(assert (=> b!140490 m!167979))

(assert (=> b!140002 d!43739))

(declare-fun d!43741 () Bool)

(declare-fun e!91608 () Bool)

(assert (=> d!43741 e!91608))

(declare-fun res!67139 () Bool)

(assert (=> d!43741 (=> res!67139 e!91608)))

(declare-fun lt!73696 () Bool)

(assert (=> d!43741 (= res!67139 (not lt!73696))))

(declare-fun lt!73699 () Bool)

(assert (=> d!43741 (= lt!73696 lt!73699)))

(declare-fun lt!73697 () Unit!4395)

(declare-fun e!91607 () Unit!4395)

(assert (=> d!43741 (= lt!73697 e!91607)))

(declare-fun c!26328 () Bool)

(assert (=> d!43741 (= c!26328 lt!73699)))

(assert (=> d!43741 (= lt!73699 (containsKey!179 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43741 (= (contains!921 lt!73528 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73696)))

(declare-fun b!140491 () Bool)

(declare-fun lt!73698 () Unit!4395)

(assert (=> b!140491 (= e!91607 lt!73698)))

(assert (=> b!140491 (= lt!73698 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!140491 (isDefined!129 (getValueByKey!175 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140492 () Bool)

(declare-fun Unit!4425 () Unit!4395)

(assert (=> b!140492 (= e!91607 Unit!4425)))

(declare-fun b!140493 () Bool)

(assert (=> b!140493 (= e!91608 (isDefined!129 (getValueByKey!175 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43741 c!26328) b!140491))

(assert (= (and d!43741 (not c!26328)) b!140492))

(assert (= (and d!43741 (not res!67139)) b!140493))

(declare-fun m!167981 () Bool)

(assert (=> d!43741 m!167981))

(declare-fun m!167983 () Bool)

(assert (=> b!140491 m!167983))

(assert (=> b!140491 m!167423))

(assert (=> b!140491 m!167423))

(declare-fun m!167985 () Bool)

(assert (=> b!140491 m!167985))

(assert (=> b!140493 m!167423))

(assert (=> b!140493 m!167423))

(assert (=> b!140493 m!167985))

(assert (=> d!43551 d!43741))

(declare-fun e!91610 () Option!181)

(declare-fun b!140496 () Bool)

(assert (=> b!140496 (= e!91610 (getValueByKey!175 (t!6360 lt!73529) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140495 () Bool)

(declare-fun e!91609 () Option!181)

(assert (=> b!140495 (= e!91609 e!91610)))

(declare-fun c!26330 () Bool)

(assert (=> b!140495 (= c!26330 (and ((_ is Cons!1760) lt!73529) (not (= (_1!1352 (h!2367 lt!73529)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!140497 () Bool)

(assert (=> b!140497 (= e!91610 None!179)))

(declare-fun b!140494 () Bool)

(assert (=> b!140494 (= e!91609 (Some!180 (_2!1352 (h!2367 lt!73529))))))

(declare-fun c!26329 () Bool)

(declare-fun d!43743 () Bool)

(assert (=> d!43743 (= c!26329 (and ((_ is Cons!1760) lt!73529) (= (_1!1352 (h!2367 lt!73529)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43743 (= (getValueByKey!175 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91609)))

(assert (= (and d!43743 c!26329) b!140494))

(assert (= (and d!43743 (not c!26329)) b!140495))

(assert (= (and b!140495 c!26330) b!140496))

(assert (= (and b!140495 (not c!26330)) b!140497))

(declare-fun m!167987 () Bool)

(assert (=> b!140496 m!167987))

(assert (=> d!43551 d!43743))

(declare-fun d!43745 () Bool)

(assert (=> d!43745 (= (getValueByKey!175 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!180 (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!73700 () Unit!4395)

(assert (=> d!43745 (= lt!73700 (choose!873 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!91611 () Bool)

(assert (=> d!43745 e!91611))

(declare-fun res!67140 () Bool)

(assert (=> d!43745 (=> (not res!67140) (not e!91611))))

(assert (=> d!43745 (= res!67140 (isStrictlySorted!320 lt!73529))))

(assert (=> d!43745 (= (lemmaContainsTupThenGetReturnValue!91 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73700)))

(declare-fun b!140498 () Bool)

(declare-fun res!67141 () Bool)

(assert (=> b!140498 (=> (not res!67141) (not e!91611))))

(assert (=> b!140498 (= res!67141 (containsKey!179 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140499 () Bool)

(assert (=> b!140499 (= e!91611 (contains!923 lt!73529 (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43745 res!67140) b!140498))

(assert (= (and b!140498 res!67141) b!140499))

(assert (=> d!43745 m!167417))

(declare-fun m!167989 () Bool)

(assert (=> d!43745 m!167989))

(declare-fun m!167991 () Bool)

(assert (=> d!43745 m!167991))

(declare-fun m!167993 () Bool)

(assert (=> b!140498 m!167993))

(declare-fun m!167995 () Bool)

(assert (=> b!140499 m!167995))

(assert (=> d!43551 d!43745))

(declare-fun d!43747 () Bool)

(declare-fun e!91612 () Bool)

(assert (=> d!43747 e!91612))

(declare-fun res!67143 () Bool)

(assert (=> d!43747 (=> (not res!67143) (not e!91612))))

(declare-fun lt!73701 () List!1764)

(assert (=> d!43747 (= res!67143 (isStrictlySorted!320 lt!73701))))

(declare-fun e!91614 () List!1764)

(assert (=> d!43747 (= lt!73701 e!91614)))

(declare-fun c!26331 () Bool)

(assert (=> d!43747 (= c!26331 (and ((_ is Cons!1760) (toList!889 (ite c!26153 call!15498 call!15508))) (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508)))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43747 (isStrictlySorted!320 (toList!889 (ite c!26153 call!15498 call!15508)))))

(assert (=> d!43747 (= (insertStrictlySorted!93 (toList!889 (ite c!26153 call!15498 call!15508)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!73701)))

(declare-fun b!140500 () Bool)

(assert (=> b!140500 (= e!91612 (contains!923 lt!73701 (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun call!15607 () List!1764)

(declare-fun bm!15604 () Bool)

(declare-fun e!91615 () List!1764)

(assert (=> bm!15604 (= call!15607 ($colon$colon!93 e!91615 (ite c!26331 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508))) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26334 () Bool)

(assert (=> bm!15604 (= c!26334 c!26331)))

(declare-fun b!140501 () Bool)

(assert (=> b!140501 (= e!91614 call!15607)))

(declare-fun b!140502 () Bool)

(assert (=> b!140502 (= e!91615 (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140503 () Bool)

(declare-fun e!91616 () List!1764)

(declare-fun call!15608 () List!1764)

(assert (=> b!140503 (= e!91616 call!15608)))

(declare-fun bm!15605 () Bool)

(assert (=> bm!15605 (= call!15608 call!15607)))

(declare-fun b!140504 () Bool)

(declare-fun e!91613 () List!1764)

(declare-fun call!15609 () List!1764)

(assert (=> b!140504 (= e!91613 call!15609)))

(declare-fun c!26333 () Bool)

(declare-fun b!140505 () Bool)

(assert (=> b!140505 (= c!26333 (and ((_ is Cons!1760) (toList!889 (ite c!26153 call!15498 call!15508))) (bvsgt (_1!1352 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508)))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!140505 (= e!91616 e!91613)))

(declare-fun b!140506 () Bool)

(assert (=> b!140506 (= e!91614 e!91616)))

(declare-fun c!26332 () Bool)

(assert (=> b!140506 (= c!26332 (and ((_ is Cons!1760) (toList!889 (ite c!26153 call!15498 call!15508))) (= (_1!1352 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508)))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!140507 () Bool)

(assert (=> b!140507 (= e!91615 (ite c!26332 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))) (ite c!26333 (Cons!1760 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508))) (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) Nil!1761)))))

(declare-fun bm!15606 () Bool)

(assert (=> bm!15606 (= call!15609 call!15608)))

(declare-fun b!140508 () Bool)

(declare-fun res!67142 () Bool)

(assert (=> b!140508 (=> (not res!67142) (not e!91612))))

(assert (=> b!140508 (= res!67142 (containsKey!179 lt!73701 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140509 () Bool)

(assert (=> b!140509 (= e!91613 call!15609)))

(assert (= (and d!43747 c!26331) b!140501))

(assert (= (and d!43747 (not c!26331)) b!140506))

(assert (= (and b!140506 c!26332) b!140503))

(assert (= (and b!140506 (not c!26332)) b!140505))

(assert (= (and b!140505 c!26333) b!140509))

(assert (= (and b!140505 (not c!26333)) b!140504))

(assert (= (or b!140509 b!140504) bm!15606))

(assert (= (or b!140503 bm!15606) bm!15605))

(assert (= (or b!140501 bm!15605) bm!15604))

(assert (= (and bm!15604 c!26334) b!140502))

(assert (= (and bm!15604 (not c!26334)) b!140507))

(assert (= (and d!43747 res!67143) b!140508))

(assert (= (and b!140508 res!67142) b!140500))

(declare-fun m!167997 () Bool)

(assert (=> b!140500 m!167997))

(declare-fun m!167999 () Bool)

(assert (=> b!140508 m!167999))

(declare-fun m!168001 () Bool)

(assert (=> b!140502 m!168001))

(declare-fun m!168003 () Bool)

(assert (=> bm!15604 m!168003))

(declare-fun m!168005 () Bool)

(assert (=> d!43747 m!168005))

(declare-fun m!168007 () Bool)

(assert (=> d!43747 m!168007))

(assert (=> d!43551 d!43747))

(declare-fun d!43749 () Bool)

(declare-fun e!91618 () Bool)

(assert (=> d!43749 e!91618))

(declare-fun res!67144 () Bool)

(assert (=> d!43749 (=> res!67144 e!91618)))

(declare-fun lt!73702 () Bool)

(assert (=> d!43749 (= res!67144 (not lt!73702))))

(declare-fun lt!73705 () Bool)

(assert (=> d!43749 (= lt!73702 lt!73705)))

(declare-fun lt!73703 () Unit!4395)

(declare-fun e!91617 () Unit!4395)

(assert (=> d!43749 (= lt!73703 e!91617)))

(declare-fun c!26335 () Bool)

(assert (=> d!43749 (= c!26335 lt!73705)))

(assert (=> d!43749 (= lt!73705 (containsKey!179 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43749 (= (contains!921 lt!73470 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73702)))

(declare-fun b!140510 () Bool)

(declare-fun lt!73704 () Unit!4395)

(assert (=> b!140510 (= e!91617 lt!73704)))

(assert (=> b!140510 (= lt!73704 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!140510 (isDefined!129 (getValueByKey!175 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140511 () Bool)

(declare-fun Unit!4426 () Unit!4395)

(assert (=> b!140511 (= e!91617 Unit!4426)))

(declare-fun b!140512 () Bool)

(assert (=> b!140512 (= e!91618 (isDefined!129 (getValueByKey!175 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (= (and d!43749 c!26335) b!140510))

(assert (= (and d!43749 (not c!26335)) b!140511))

(assert (= (and d!43749 (not res!67144)) b!140512))

(declare-fun m!168009 () Bool)

(assert (=> d!43749 m!168009))

(declare-fun m!168011 () Bool)

(assert (=> b!140510 m!168011))

(assert (=> b!140510 m!167301))

(assert (=> b!140510 m!167301))

(declare-fun m!168013 () Bool)

(assert (=> b!140510 m!168013))

(assert (=> b!140512 m!167301))

(assert (=> b!140512 m!167301))

(assert (=> b!140512 m!168013))

(assert (=> d!43527 d!43749))

(declare-fun e!91620 () Option!181)

(declare-fun b!140515 () Bool)

(assert (=> b!140515 (= e!91620 (getValueByKey!175 (t!6360 lt!73471) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140514 () Bool)

(declare-fun e!91619 () Option!181)

(assert (=> b!140514 (= e!91619 e!91620)))

(declare-fun c!26337 () Bool)

(assert (=> b!140514 (= c!26337 (and ((_ is Cons!1760) lt!73471) (not (= (_1!1352 (h!2367 lt!73471)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun b!140516 () Bool)

(assert (=> b!140516 (= e!91620 None!179)))

(declare-fun b!140513 () Bool)

(assert (=> b!140513 (= e!91619 (Some!180 (_2!1352 (h!2367 lt!73471))))))

(declare-fun d!43751 () Bool)

(declare-fun c!26336 () Bool)

(assert (=> d!43751 (= c!26336 (and ((_ is Cons!1760) lt!73471) (= (_1!1352 (h!2367 lt!73471)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!43751 (= (getValueByKey!175 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!91619)))

(assert (= (and d!43751 c!26336) b!140513))

(assert (= (and d!43751 (not c!26336)) b!140514))

(assert (= (and b!140514 c!26337) b!140515))

(assert (= (and b!140514 (not c!26337)) b!140516))

(declare-fun m!168015 () Bool)

(assert (=> b!140515 m!168015))

(assert (=> d!43527 d!43751))

(declare-fun d!43753 () Bool)

(assert (=> d!43753 (= (getValueByKey!175 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (Some!180 (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun lt!73706 () Unit!4395)

(assert (=> d!43753 (= lt!73706 (choose!873 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!91621 () Bool)

(assert (=> d!43753 e!91621))

(declare-fun res!67145 () Bool)

(assert (=> d!43753 (=> (not res!67145) (not e!91621))))

(assert (=> d!43753 (= res!67145 (isStrictlySorted!320 lt!73471))))

(assert (=> d!43753 (= (lemmaContainsTupThenGetReturnValue!91 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73706)))

(declare-fun b!140517 () Bool)

(declare-fun res!67146 () Bool)

(assert (=> b!140517 (=> (not res!67146) (not e!91621))))

(assert (=> b!140517 (= res!67146 (containsKey!179 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140518 () Bool)

(assert (=> b!140518 (= e!91621 (contains!923 lt!73471 (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (= (and d!43753 res!67145) b!140517))

(assert (= (and b!140517 res!67146) b!140518))

(assert (=> d!43753 m!167295))

(declare-fun m!168017 () Bool)

(assert (=> d!43753 m!168017))

(declare-fun m!168019 () Bool)

(assert (=> d!43753 m!168019))

(declare-fun m!168021 () Bool)

(assert (=> b!140517 m!168021))

(declare-fun m!168023 () Bool)

(assert (=> b!140518 m!168023))

(assert (=> d!43527 d!43753))

(declare-fun d!43755 () Bool)

(declare-fun e!91622 () Bool)

(assert (=> d!43755 e!91622))

(declare-fun res!67148 () Bool)

(assert (=> d!43755 (=> (not res!67148) (not e!91622))))

(declare-fun lt!73707 () List!1764)

(assert (=> d!43755 (= res!67148 (isStrictlySorted!320 lt!73707))))

(declare-fun e!91624 () List!1764)

(assert (=> d!43755 (= lt!73707 e!91624)))

(declare-fun c!26338 () Bool)

(assert (=> d!43755 (= c!26338 (and ((_ is Cons!1760) (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!43755 (isStrictlySorted!320 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))))

(assert (=> d!43755 (= (insertStrictlySorted!93 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73707)))

(declare-fun b!140519 () Bool)

(assert (=> b!140519 (= e!91622 (contains!923 lt!73707 (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun e!91625 () List!1764)

(declare-fun bm!15607 () Bool)

(declare-fun call!15610 () List!1764)

(assert (=> bm!15607 (= call!15610 ($colon$colon!93 e!91625 (ite c!26338 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun c!26341 () Bool)

(assert (=> bm!15607 (= c!26341 c!26338)))

(declare-fun b!140520 () Bool)

(assert (=> b!140520 (= e!91624 call!15610)))

(declare-fun b!140521 () Bool)

(assert (=> b!140521 (= e!91625 (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140522 () Bool)

(declare-fun e!91626 () List!1764)

(declare-fun call!15611 () List!1764)

(assert (=> b!140522 (= e!91626 call!15611)))

(declare-fun bm!15608 () Bool)

(assert (=> bm!15608 (= call!15611 call!15610)))

(declare-fun b!140523 () Bool)

(declare-fun e!91623 () List!1764)

(declare-fun call!15612 () List!1764)

(assert (=> b!140523 (= e!91623 call!15612)))

(declare-fun c!26340 () Bool)

(declare-fun b!140524 () Bool)

(assert (=> b!140524 (= c!26340 (and ((_ is Cons!1760) (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (bvsgt (_1!1352 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> b!140524 (= e!91626 e!91623)))

(declare-fun b!140525 () Bool)

(assert (=> b!140525 (= e!91624 e!91626)))

(declare-fun c!26339 () Bool)

(assert (=> b!140525 (= c!26339 (and ((_ is Cons!1760) (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (= (_1!1352 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140526 () Bool)

(assert (=> b!140526 (= e!91625 (ite c!26339 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (ite c!26340 (Cons!1760 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) Nil!1761)))))

(declare-fun bm!15609 () Bool)

(assert (=> bm!15609 (= call!15612 call!15611)))

(declare-fun b!140527 () Bool)

(declare-fun res!67147 () Bool)

(assert (=> b!140527 (=> (not res!67147) (not e!91622))))

(assert (=> b!140527 (= res!67147 (containsKey!179 lt!73707 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140528 () Bool)

(assert (=> b!140528 (= e!91623 call!15612)))

(assert (= (and d!43755 c!26338) b!140520))

(assert (= (and d!43755 (not c!26338)) b!140525))

(assert (= (and b!140525 c!26339) b!140522))

(assert (= (and b!140525 (not c!26339)) b!140524))

(assert (= (and b!140524 c!26340) b!140528))

(assert (= (and b!140524 (not c!26340)) b!140523))

(assert (= (or b!140528 b!140523) bm!15609))

(assert (= (or b!140522 bm!15609) bm!15608))

(assert (= (or b!140520 bm!15608) bm!15607))

(assert (= (and bm!15607 c!26341) b!140521))

(assert (= (and bm!15607 (not c!26341)) b!140526))

(assert (= (and d!43755 res!67148) b!140527))

(assert (= (and b!140527 res!67147) b!140519))

(declare-fun m!168025 () Bool)

(assert (=> b!140519 m!168025))

(declare-fun m!168027 () Bool)

(assert (=> b!140527 m!168027))

(declare-fun m!168029 () Bool)

(assert (=> b!140521 m!168029))

(declare-fun m!168031 () Bool)

(assert (=> bm!15607 m!168031))

(declare-fun m!168033 () Bool)

(assert (=> d!43755 m!168033))

(declare-fun m!168035 () Bool)

(assert (=> d!43755 m!168035))

(assert (=> d!43527 d!43755))

(declare-fun call!15613 () Bool)

(declare-fun c!26342 () Bool)

(declare-fun bm!15610 () Bool)

(assert (=> bm!15610 (= call!15613 (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26342 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760))))))

(declare-fun b!140530 () Bool)

(declare-fun e!91628 () Bool)

(declare-fun e!91629 () Bool)

(assert (=> b!140530 (= e!91628 e!91629)))

(assert (=> b!140530 (= c!26342 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140531 () Bool)

(assert (=> b!140531 (= e!91629 call!15613)))

(declare-fun d!43757 () Bool)

(declare-fun res!67151 () Bool)

(declare-fun e!91630 () Bool)

(assert (=> d!43757 (=> res!67151 e!91630)))

(assert (=> d!43757 (= res!67151 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43757 (= (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) e!91630)))

(declare-fun b!140529 () Bool)

(declare-fun e!91627 () Bool)

(assert (=> b!140529 (= e!91627 (contains!922 (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140532 () Bool)

(assert (=> b!140532 (= e!91630 e!91628)))

(declare-fun res!67149 () Bool)

(assert (=> b!140532 (=> (not res!67149) (not e!91628))))

(assert (=> b!140532 (= res!67149 (not e!91627))))

(declare-fun res!67150 () Bool)

(assert (=> b!140532 (=> (not res!67150) (not e!91627))))

(assert (=> b!140532 (= res!67150 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140533 () Bool)

(assert (=> b!140533 (= e!91629 call!15613)))

(assert (= (and d!43757 (not res!67151)) b!140532))

(assert (= (and b!140532 res!67150) b!140529))

(assert (= (and b!140532 res!67149) b!140530))

(assert (= (and b!140530 c!26342) b!140531))

(assert (= (and b!140530 (not c!26342)) b!140533))

(assert (= (or b!140531 b!140533) bm!15610))

(assert (=> bm!15610 m!167699))

(declare-fun m!168037 () Bool)

(assert (=> bm!15610 m!168037))

(assert (=> b!140530 m!167699))

(assert (=> b!140530 m!167699))

(assert (=> b!140530 m!167707))

(assert (=> b!140529 m!167699))

(assert (=> b!140529 m!167699))

(declare-fun m!168039 () Bool)

(assert (=> b!140529 m!168039))

(assert (=> b!140532 m!167699))

(assert (=> b!140532 m!167699))

(assert (=> b!140532 m!167707))

(assert (=> bm!15538 d!43757))

(declare-fun d!43759 () Bool)

(assert (=> d!43759 (= (apply!120 lt!73250 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5868 () Bool)

(assert (= bs!5868 d!43759))

(declare-fun m!168041 () Bool)

(assert (=> bs!5868 m!168041))

(assert (=> bs!5868 m!168041))

(declare-fun m!168043 () Bool)

(assert (=> bs!5868 m!168043))

(assert (=> b!139882 d!43759))

(declare-fun d!43761 () Bool)

(assert (=> d!43761 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5869 () Bool)

(assert (= bs!5869 d!43761))

(assert (=> bs!5869 m!167087))

(declare-fun m!168045 () Bool)

(assert (=> bs!5869 m!168045))

(assert (=> b!139974 d!43761))

(assert (=> b!139974 d!43723))

(assert (=> b!139927 d!43529))

(declare-fun d!43763 () Bool)

(assert (=> d!43763 (= (apply!120 lt!73482 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5870 () Bool)

(assert (= bs!5870 d!43763))

(assert (=> bs!5870 m!166967))

(declare-fun m!168047 () Bool)

(assert (=> bs!5870 m!168047))

(assert (=> bs!5870 m!168047))

(declare-fun m!168049 () Bool)

(assert (=> bs!5870 m!168049))

(assert (=> b!140149 d!43763))

(declare-fun d!43765 () Bool)

(declare-fun c!26343 () Bool)

(assert (=> d!43765 (= c!26343 ((_ is ValueCellFull!1122) (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000)))))

(declare-fun e!91631 () V!3555)

(assert (=> d!43765 (= (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91631)))

(declare-fun b!140534 () Bool)

(assert (=> b!140534 (= e!91631 (get!1536 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140535 () Bool)

(assert (=> b!140535 (= e!91631 (get!1537 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43765 c!26343) b!140534))

(assert (= (and d!43765 (not c!26343)) b!140535))

(assert (=> b!140534 m!167323))

(assert (=> b!140534 m!166971))

(declare-fun m!168051 () Bool)

(assert (=> b!140534 m!168051))

(assert (=> b!140535 m!167323))

(assert (=> b!140535 m!166971))

(declare-fun m!168053 () Bool)

(assert (=> b!140535 m!168053))

(assert (=> b!140149 d!43765))

(declare-fun d!43767 () Bool)

(assert (=> d!43767 (= (apply!120 lt!73450 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5871 () Bool)

(assert (= bs!5871 d!43767))

(assert (=> bs!5871 m!166967))

(declare-fun m!168055 () Bool)

(assert (=> bs!5871 m!168055))

(assert (=> bs!5871 m!168055))

(declare-fun m!168057 () Bool)

(assert (=> bs!5871 m!168057))

(assert (=> b!140102 d!43767))

(assert (=> b!140102 d!43651))

(declare-fun call!15614 () Bool)

(declare-fun bm!15611 () Bool)

(declare-fun c!26344 () Bool)

(assert (=> bm!15611 (= call!15614 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26344 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)))))))

(declare-fun b!140537 () Bool)

(declare-fun e!91633 () Bool)

(declare-fun e!91634 () Bool)

(assert (=> b!140537 (= e!91633 e!91634)))

(assert (=> b!140537 (= c!26344 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140538 () Bool)

(assert (=> b!140538 (= e!91634 call!15614)))

(declare-fun d!43769 () Bool)

(declare-fun res!67154 () Bool)

(declare-fun e!91635 () Bool)

(assert (=> d!43769 (=> res!67154 e!91635)))

(assert (=> d!43769 (= res!67154 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43769 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) e!91635)))

(declare-fun e!91632 () Bool)

(declare-fun b!140536 () Bool)

(assert (=> b!140536 (= e!91632 (contains!922 (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140539 () Bool)

(assert (=> b!140539 (= e!91635 e!91633)))

(declare-fun res!67152 () Bool)

(assert (=> b!140539 (=> (not res!67152) (not e!91633))))

(assert (=> b!140539 (= res!67152 (not e!91632))))

(declare-fun res!67153 () Bool)

(assert (=> b!140539 (=> (not res!67153) (not e!91632))))

(assert (=> b!140539 (= res!67153 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!140540 () Bool)

(assert (=> b!140540 (= e!91634 call!15614)))

(assert (= (and d!43769 (not res!67154)) b!140539))

(assert (= (and b!140539 res!67153) b!140536))

(assert (= (and b!140539 res!67152) b!140537))

(assert (= (and b!140537 c!26344) b!140538))

(assert (= (and b!140537 (not c!26344)) b!140540))

(assert (= (or b!140538 b!140540) bm!15611))

(declare-fun m!168059 () Bool)

(assert (=> bm!15611 m!168059))

(declare-fun m!168061 () Bool)

(assert (=> bm!15611 m!168061))

(assert (=> b!140537 m!168059))

(assert (=> b!140537 m!168059))

(declare-fun m!168063 () Bool)

(assert (=> b!140537 m!168063))

(assert (=> b!140536 m!168059))

(assert (=> b!140536 m!168059))

(declare-fun m!168065 () Bool)

(assert (=> b!140536 m!168065))

(assert (=> b!140539 m!168059))

(assert (=> b!140539 m!168059))

(assert (=> b!140539 m!168063))

(assert (=> bm!15575 d!43769))

(declare-fun b!140543 () Bool)

(declare-fun e!91637 () Option!181)

(assert (=> b!140543 (= e!91637 (getValueByKey!175 (t!6360 (toList!889 lt!73470)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140542 () Bool)

(declare-fun e!91636 () Option!181)

(assert (=> b!140542 (= e!91636 e!91637)))

(declare-fun c!26346 () Bool)

(assert (=> b!140542 (= c!26346 (and ((_ is Cons!1760) (toList!889 lt!73470)) (not (= (_1!1352 (h!2367 (toList!889 lt!73470))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun b!140544 () Bool)

(assert (=> b!140544 (= e!91637 None!179)))

(declare-fun b!140541 () Bool)

(assert (=> b!140541 (= e!91636 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73470)))))))

(declare-fun c!26345 () Bool)

(declare-fun d!43771 () Bool)

(assert (=> d!43771 (= c!26345 (and ((_ is Cons!1760) (toList!889 lt!73470)) (= (_1!1352 (h!2367 (toList!889 lt!73470))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!43771 (= (getValueByKey!175 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!91636)))

(assert (= (and d!43771 c!26345) b!140541))

(assert (= (and d!43771 (not c!26345)) b!140542))

(assert (= (and b!140542 c!26346) b!140543))

(assert (= (and b!140542 (not c!26346)) b!140544))

(declare-fun m!168067 () Bool)

(assert (=> b!140543 m!168067))

(assert (=> b!140109 d!43771))

(declare-fun d!43773 () Bool)

(declare-fun e!91639 () Bool)

(assert (=> d!43773 e!91639))

(declare-fun res!67155 () Bool)

(assert (=> d!43773 (=> res!67155 e!91639)))

(declare-fun lt!73708 () Bool)

(assert (=> d!43773 (= res!67155 (not lt!73708))))

(declare-fun lt!73711 () Bool)

(assert (=> d!43773 (= lt!73708 lt!73711)))

(declare-fun lt!73709 () Unit!4395)

(declare-fun e!91638 () Unit!4395)

(assert (=> d!43773 (= lt!73709 e!91638)))

(declare-fun c!26347 () Bool)

(assert (=> d!43773 (= c!26347 lt!73711)))

(assert (=> d!43773 (= lt!73711 (containsKey!179 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43773 (= (contains!921 lt!73535 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73708)))

(declare-fun b!140545 () Bool)

(declare-fun lt!73710 () Unit!4395)

(assert (=> b!140545 (= e!91638 lt!73710)))

(assert (=> b!140545 (= lt!73710 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> b!140545 (isDefined!129 (getValueByKey!175 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140546 () Bool)

(declare-fun Unit!4427 () Unit!4395)

(assert (=> b!140546 (= e!91638 Unit!4427)))

(declare-fun b!140547 () Bool)

(assert (=> b!140547 (= e!91639 (isDefined!129 (getValueByKey!175 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43773 c!26347) b!140545))

(assert (= (and d!43773 (not c!26347)) b!140546))

(assert (= (and d!43773 (not res!67155)) b!140547))

(declare-fun m!168069 () Bool)

(assert (=> d!43773 m!168069))

(declare-fun m!168071 () Bool)

(assert (=> b!140545 m!168071))

(assert (=> b!140545 m!167441))

(assert (=> b!140545 m!167441))

(declare-fun m!168073 () Bool)

(assert (=> b!140545 m!168073))

(assert (=> b!140547 m!167441))

(assert (=> b!140547 m!167441))

(assert (=> b!140547 m!168073))

(assert (=> d!43555 d!43773))

(declare-fun b!140550 () Bool)

(declare-fun e!91641 () Option!181)

(assert (=> b!140550 (= e!91641 (getValueByKey!175 (t!6360 lt!73536) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140549 () Bool)

(declare-fun e!91640 () Option!181)

(assert (=> b!140549 (= e!91640 e!91641)))

(declare-fun c!26349 () Bool)

(assert (=> b!140549 (= c!26349 (and ((_ is Cons!1760) lt!73536) (not (= (_1!1352 (h!2367 lt!73536)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140551 () Bool)

(assert (=> b!140551 (= e!91641 None!179)))

(declare-fun b!140548 () Bool)

(assert (=> b!140548 (= e!91640 (Some!180 (_2!1352 (h!2367 lt!73536))))))

(declare-fun c!26348 () Bool)

(declare-fun d!43775 () Bool)

(assert (=> d!43775 (= c!26348 (and ((_ is Cons!1760) lt!73536) (= (_1!1352 (h!2367 lt!73536)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43775 (= (getValueByKey!175 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91640)))

(assert (= (and d!43775 c!26348) b!140548))

(assert (= (and d!43775 (not c!26348)) b!140549))

(assert (= (and b!140549 c!26349) b!140550))

(assert (= (and b!140549 (not c!26349)) b!140551))

(declare-fun m!168075 () Bool)

(assert (=> b!140550 m!168075))

(assert (=> d!43555 d!43775))

(declare-fun d!43777 () Bool)

(assert (=> d!43777 (= (getValueByKey!175 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73712 () Unit!4395)

(assert (=> d!43777 (= lt!73712 (choose!873 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!91642 () Bool)

(assert (=> d!43777 e!91642))

(declare-fun res!67156 () Bool)

(assert (=> d!43777 (=> (not res!67156) (not e!91642))))

(assert (=> d!43777 (= res!67156 (isStrictlySorted!320 lt!73536))))

(assert (=> d!43777 (= (lemmaContainsTupThenGetReturnValue!91 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73712)))

(declare-fun b!140552 () Bool)

(declare-fun res!67157 () Bool)

(assert (=> b!140552 (=> (not res!67157) (not e!91642))))

(assert (=> b!140552 (= res!67157 (containsKey!179 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140553 () Bool)

(assert (=> b!140553 (= e!91642 (contains!923 lt!73536 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43777 res!67156) b!140552))

(assert (= (and b!140552 res!67157) b!140553))

(assert (=> d!43777 m!167435))

(declare-fun m!168077 () Bool)

(assert (=> d!43777 m!168077))

(declare-fun m!168079 () Bool)

(assert (=> d!43777 m!168079))

(declare-fun m!168081 () Bool)

(assert (=> b!140552 m!168081))

(declare-fun m!168083 () Bool)

(assert (=> b!140553 m!168083))

(assert (=> d!43555 d!43777))

(declare-fun d!43779 () Bool)

(declare-fun e!91643 () Bool)

(assert (=> d!43779 e!91643))

(declare-fun res!67159 () Bool)

(assert (=> d!43779 (=> (not res!67159) (not e!91643))))

(declare-fun lt!73713 () List!1764)

(assert (=> d!43779 (= res!67159 (isStrictlySorted!320 lt!73713))))

(declare-fun e!91645 () List!1764)

(assert (=> d!43779 (= lt!73713 e!91645)))

(declare-fun c!26350 () Bool)

(assert (=> d!43779 (= c!26350 (and ((_ is Cons!1760) (toList!889 lt!73140)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73140))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43779 (isStrictlySorted!320 (toList!889 lt!73140))))

(assert (=> d!43779 (= (insertStrictlySorted!93 (toList!889 lt!73140) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73713)))

(declare-fun b!140554 () Bool)

(assert (=> b!140554 (= e!91643 (contains!923 lt!73713 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun call!15615 () List!1764)

(declare-fun bm!15612 () Bool)

(declare-fun e!91646 () List!1764)

(assert (=> bm!15612 (= call!15615 ($colon$colon!93 e!91646 (ite c!26350 (h!2367 (toList!889 lt!73140)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26353 () Bool)

(assert (=> bm!15612 (= c!26353 c!26350)))

(declare-fun b!140555 () Bool)

(assert (=> b!140555 (= e!91645 call!15615)))

(declare-fun b!140556 () Bool)

(assert (=> b!140556 (= e!91646 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73140)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140557 () Bool)

(declare-fun e!91647 () List!1764)

(declare-fun call!15616 () List!1764)

(assert (=> b!140557 (= e!91647 call!15616)))

(declare-fun bm!15613 () Bool)

(assert (=> bm!15613 (= call!15616 call!15615)))

(declare-fun b!140558 () Bool)

(declare-fun e!91644 () List!1764)

(declare-fun call!15617 () List!1764)

(assert (=> b!140558 (= e!91644 call!15617)))

(declare-fun c!26352 () Bool)

(declare-fun b!140559 () Bool)

(assert (=> b!140559 (= c!26352 (and ((_ is Cons!1760) (toList!889 lt!73140)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73140))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!140559 (= e!91647 e!91644)))

(declare-fun b!140560 () Bool)

(assert (=> b!140560 (= e!91645 e!91647)))

(declare-fun c!26351 () Bool)

(assert (=> b!140560 (= c!26351 (and ((_ is Cons!1760) (toList!889 lt!73140)) (= (_1!1352 (h!2367 (toList!889 lt!73140))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140561 () Bool)

(assert (=> b!140561 (= e!91646 (ite c!26351 (t!6360 (toList!889 lt!73140)) (ite c!26352 (Cons!1760 (h!2367 (toList!889 lt!73140)) (t!6360 (toList!889 lt!73140))) Nil!1761)))))

(declare-fun bm!15614 () Bool)

(assert (=> bm!15614 (= call!15617 call!15616)))

(declare-fun b!140562 () Bool)

(declare-fun res!67158 () Bool)

(assert (=> b!140562 (=> (not res!67158) (not e!91643))))

(assert (=> b!140562 (= res!67158 (containsKey!179 lt!73713 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140563 () Bool)

(assert (=> b!140563 (= e!91644 call!15617)))

(assert (= (and d!43779 c!26350) b!140555))

(assert (= (and d!43779 (not c!26350)) b!140560))

(assert (= (and b!140560 c!26351) b!140557))

(assert (= (and b!140560 (not c!26351)) b!140559))

(assert (= (and b!140559 c!26352) b!140563))

(assert (= (and b!140559 (not c!26352)) b!140558))

(assert (= (or b!140563 b!140558) bm!15614))

(assert (= (or b!140557 bm!15614) bm!15613))

(assert (= (or b!140555 bm!15613) bm!15612))

(assert (= (and bm!15612 c!26353) b!140556))

(assert (= (and bm!15612 (not c!26353)) b!140561))

(assert (= (and d!43779 res!67159) b!140562))

(assert (= (and b!140562 res!67158) b!140554))

(declare-fun m!168085 () Bool)

(assert (=> b!140554 m!168085))

(declare-fun m!168087 () Bool)

(assert (=> b!140562 m!168087))

(declare-fun m!168089 () Bool)

(assert (=> b!140556 m!168089))

(declare-fun m!168091 () Bool)

(assert (=> bm!15612 m!168091))

(declare-fun m!168093 () Bool)

(assert (=> d!43779 m!168093))

(declare-fun m!168095 () Bool)

(assert (=> d!43779 m!168095))

(assert (=> d!43555 d!43779))

(assert (=> b!139887 d!43605))

(assert (=> bm!15536 d!43591))

(declare-fun lt!73714 () Bool)

(declare-fun d!43781 () Bool)

(assert (=> d!43781 (= lt!73714 (select (content!137 (toList!889 lt!73550)) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!91648 () Bool)

(assert (=> d!43781 (= lt!73714 e!91648)))

(declare-fun res!67161 () Bool)

(assert (=> d!43781 (=> (not res!67161) (not e!91648))))

(assert (=> d!43781 (= res!67161 ((_ is Cons!1760) (toList!889 lt!73550)))))

(assert (=> d!43781 (= (contains!923 (toList!889 lt!73550) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73714)))

(declare-fun b!140564 () Bool)

(declare-fun e!91649 () Bool)

(assert (=> b!140564 (= e!91648 e!91649)))

(declare-fun res!67160 () Bool)

(assert (=> b!140564 (=> res!67160 e!91649)))

(assert (=> b!140564 (= res!67160 (= (h!2367 (toList!889 lt!73550)) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140565 () Bool)

(assert (=> b!140565 (= e!91649 (contains!923 (t!6360 (toList!889 lt!73550)) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43781 res!67161) b!140564))

(assert (= (and b!140564 (not res!67160)) b!140565))

(declare-fun m!168097 () Bool)

(assert (=> d!43781 m!168097))

(declare-fun m!168099 () Bool)

(assert (=> d!43781 m!168099))

(declare-fun m!168101 () Bool)

(assert (=> b!140565 m!168101))

(assert (=> b!140212 d!43781))

(assert (=> b!140136 d!43611))

(declare-fun d!43783 () Bool)

(assert (=> d!43783 (= (apply!120 lt!73496 lt!73488) (get!1538 (getValueByKey!175 (toList!889 lt!73496) lt!73488)))))

(declare-fun bs!5872 () Bool)

(assert (= bs!5872 d!43783))

(declare-fun m!168103 () Bool)

(assert (=> bs!5872 m!168103))

(assert (=> bs!5872 m!168103))

(declare-fun m!168105 () Bool)

(assert (=> bs!5872 m!168105))

(assert (=> b!140136 d!43783))

(declare-fun d!43785 () Bool)

(assert (=> d!43785 (= (apply!120 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) lt!73488) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) lt!73488)))))

(declare-fun bs!5873 () Bool)

(assert (= bs!5873 d!43785))

(declare-fun m!168107 () Bool)

(assert (=> bs!5873 m!168107))

(assert (=> bs!5873 m!168107))

(declare-fun m!168109 () Bool)

(assert (=> bs!5873 m!168109))

(assert (=> b!140136 d!43785))

(declare-fun d!43787 () Bool)

(assert (=> d!43787 (= (apply!120 lt!73487 lt!73498) (get!1538 (getValueByKey!175 (toList!889 lt!73487) lt!73498)))))

(declare-fun bs!5874 () Bool)

(assert (= bs!5874 d!43787))

(declare-fun m!168111 () Bool)

(assert (=> bs!5874 m!168111))

(assert (=> bs!5874 m!168111))

(declare-fun m!168113 () Bool)

(assert (=> bs!5874 m!168113))

(assert (=> b!140136 d!43787))

(declare-fun d!43789 () Bool)

(assert (=> d!43789 (= (apply!120 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) lt!73499) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) lt!73499)))))

(declare-fun bs!5875 () Bool)

(assert (= bs!5875 d!43789))

(declare-fun m!168115 () Bool)

(assert (=> bs!5875 m!168115))

(assert (=> bs!5875 m!168115))

(declare-fun m!168117 () Bool)

(assert (=> bs!5875 m!168117))

(assert (=> b!140136 d!43789))

(declare-fun d!43791 () Bool)

(assert (=> d!43791 (= (apply!120 lt!73493 lt!73499) (get!1538 (getValueByKey!175 (toList!889 lt!73493) lt!73499)))))

(declare-fun bs!5876 () Bool)

(assert (= bs!5876 d!43791))

(declare-fun m!168119 () Bool)

(assert (=> bs!5876 m!168119))

(assert (=> bs!5876 m!168119))

(declare-fun m!168121 () Bool)

(assert (=> bs!5876 m!168121))

(assert (=> b!140136 d!43791))

(declare-fun d!43793 () Bool)

(assert (=> d!43793 (= (apply!120 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) lt!73488) (apply!120 lt!73496 lt!73488))))

(declare-fun lt!73715 () Unit!4395)

(assert (=> d!43793 (= lt!73715 (choose!870 lt!73496 lt!73479 (minValue!2790 newMap!16) lt!73488))))

(declare-fun e!91650 () Bool)

(assert (=> d!43793 e!91650))

(declare-fun res!67162 () Bool)

(assert (=> d!43793 (=> (not res!67162) (not e!91650))))

(assert (=> d!43793 (= res!67162 (contains!921 lt!73496 lt!73488))))

(assert (=> d!43793 (= (addApplyDifferent!96 lt!73496 lt!73479 (minValue!2790 newMap!16) lt!73488) lt!73715)))

(declare-fun b!140566 () Bool)

(assert (=> b!140566 (= e!91650 (not (= lt!73488 lt!73479)))))

(assert (= (and d!43793 res!67162) b!140566))

(declare-fun m!168123 () Bool)

(assert (=> d!43793 m!168123))

(assert (=> d!43793 m!167335))

(assert (=> d!43793 m!167337))

(assert (=> d!43793 m!167335))

(assert (=> d!43793 m!167361))

(declare-fun m!168125 () Bool)

(assert (=> d!43793 m!168125))

(assert (=> b!140136 d!43793))

(declare-fun d!43795 () Bool)

(declare-fun e!91652 () Bool)

(assert (=> d!43795 e!91652))

(declare-fun res!67163 () Bool)

(assert (=> d!43795 (=> res!67163 e!91652)))

(declare-fun lt!73716 () Bool)

(assert (=> d!43795 (= res!67163 (not lt!73716))))

(declare-fun lt!73719 () Bool)

(assert (=> d!43795 (= lt!73716 lt!73719)))

(declare-fun lt!73717 () Unit!4395)

(declare-fun e!91651 () Unit!4395)

(assert (=> d!43795 (= lt!73717 e!91651)))

(declare-fun c!26354 () Bool)

(assert (=> d!43795 (= c!26354 lt!73719)))

(assert (=> d!43795 (= lt!73719 (containsKey!179 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489))))

(assert (=> d!43795 (= (contains!921 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) lt!73489) lt!73716)))

(declare-fun b!140567 () Bool)

(declare-fun lt!73718 () Unit!4395)

(assert (=> b!140567 (= e!91651 lt!73718)))

(assert (=> b!140567 (= lt!73718 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489))))

(assert (=> b!140567 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489))))

(declare-fun b!140568 () Bool)

(declare-fun Unit!4428 () Unit!4395)

(assert (=> b!140568 (= e!91651 Unit!4428)))

(declare-fun b!140569 () Bool)

(assert (=> b!140569 (= e!91652 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489)))))

(assert (= (and d!43795 c!26354) b!140567))

(assert (= (and d!43795 (not c!26354)) b!140568))

(assert (= (and d!43795 (not res!67163)) b!140569))

(declare-fun m!168127 () Bool)

(assert (=> d!43795 m!168127))

(declare-fun m!168129 () Bool)

(assert (=> b!140567 m!168129))

(declare-fun m!168131 () Bool)

(assert (=> b!140567 m!168131))

(assert (=> b!140567 m!168131))

(declare-fun m!168133 () Bool)

(assert (=> b!140567 m!168133))

(assert (=> b!140569 m!168131))

(assert (=> b!140569 m!168131))

(assert (=> b!140569 m!168133))

(assert (=> b!140136 d!43795))

(declare-fun d!43797 () Bool)

(declare-fun e!91653 () Bool)

(assert (=> d!43797 e!91653))

(declare-fun res!67165 () Bool)

(assert (=> d!43797 (=> (not res!67165) (not e!91653))))

(declare-fun lt!73722 () ListLongMap!1747)

(assert (=> d!43797 (= res!67165 (contains!921 lt!73722 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73723 () List!1764)

(assert (=> d!43797 (= lt!73722 (ListLongMap!1748 lt!73723))))

(declare-fun lt!73720 () Unit!4395)

(declare-fun lt!73721 () Unit!4395)

(assert (=> d!43797 (= lt!73720 lt!73721)))

(assert (=> d!43797 (= (getValueByKey!175 lt!73723 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43797 (= lt!73721 (lemmaContainsTupThenGetReturnValue!91 lt!73723 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43797 (= lt!73723 (insertStrictlySorted!93 (toList!889 lt!73491) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43797 (= (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) lt!73722)))

(declare-fun b!140570 () Bool)

(declare-fun res!67164 () Bool)

(assert (=> b!140570 (=> (not res!67164) (not e!91653))))

(assert (=> b!140570 (= res!67164 (= (getValueByKey!175 (toList!889 lt!73722) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140571 () Bool)

(assert (=> b!140571 (= e!91653 (contains!923 (toList!889 lt!73722) (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43797 res!67165) b!140570))

(assert (= (and b!140570 res!67164) b!140571))

(declare-fun m!168135 () Bool)

(assert (=> d!43797 m!168135))

(declare-fun m!168137 () Bool)

(assert (=> d!43797 m!168137))

(declare-fun m!168139 () Bool)

(assert (=> d!43797 m!168139))

(declare-fun m!168141 () Bool)

(assert (=> d!43797 m!168141))

(declare-fun m!168143 () Bool)

(assert (=> b!140570 m!168143))

(declare-fun m!168145 () Bool)

(assert (=> b!140571 m!168145))

(assert (=> b!140136 d!43797))

(declare-fun d!43799 () Bool)

(declare-fun e!91654 () Bool)

(assert (=> d!43799 e!91654))

(declare-fun res!67167 () Bool)

(assert (=> d!43799 (=> (not res!67167) (not e!91654))))

(declare-fun lt!73726 () ListLongMap!1747)

(assert (=> d!43799 (= res!67167 (contains!921 lt!73726 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun lt!73727 () List!1764)

(assert (=> d!43799 (= lt!73726 (ListLongMap!1748 lt!73727))))

(declare-fun lt!73724 () Unit!4395)

(declare-fun lt!73725 () Unit!4395)

(assert (=> d!43799 (= lt!73724 lt!73725)))

(assert (=> d!43799 (= (getValueByKey!175 lt!73727 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(assert (=> d!43799 (= lt!73725 (lemmaContainsTupThenGetReturnValue!91 lt!73727 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(assert (=> d!43799 (= lt!73727 (insertStrictlySorted!93 (toList!889 lt!73496) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(assert (=> d!43799 (= (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) lt!73726)))

(declare-fun b!140572 () Bool)

(declare-fun res!67166 () Bool)

(assert (=> b!140572 (=> (not res!67166) (not e!91654))))

(assert (=> b!140572 (= res!67166 (= (getValueByKey!175 (toList!889 lt!73726) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(declare-fun b!140573 () Bool)

(assert (=> b!140573 (= e!91654 (contains!923 (toList!889 lt!73726) (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))

(assert (= (and d!43799 res!67167) b!140572))

(assert (= (and b!140572 res!67166) b!140573))

(declare-fun m!168147 () Bool)

(assert (=> d!43799 m!168147))

(declare-fun m!168149 () Bool)

(assert (=> d!43799 m!168149))

(declare-fun m!168151 () Bool)

(assert (=> d!43799 m!168151))

(declare-fun m!168153 () Bool)

(assert (=> d!43799 m!168153))

(declare-fun m!168155 () Bool)

(assert (=> b!140572 m!168155))

(declare-fun m!168157 () Bool)

(assert (=> b!140573 m!168157))

(assert (=> b!140136 d!43799))

(declare-fun d!43801 () Bool)

(declare-fun e!91655 () Bool)

(assert (=> d!43801 e!91655))

(declare-fun res!67169 () Bool)

(assert (=> d!43801 (=> (not res!67169) (not e!91655))))

(declare-fun lt!73730 () ListLongMap!1747)

(assert (=> d!43801 (= res!67169 (contains!921 lt!73730 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73731 () List!1764)

(assert (=> d!43801 (= lt!73730 (ListLongMap!1748 lt!73731))))

(declare-fun lt!73728 () Unit!4395)

(declare-fun lt!73729 () Unit!4395)

(assert (=> d!43801 (= lt!73728 lt!73729)))

(assert (=> d!43801 (= (getValueByKey!175 lt!73731 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43801 (= lt!73729 (lemmaContainsTupThenGetReturnValue!91 lt!73731 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43801 (= lt!73731 (insertStrictlySorted!93 (toList!889 lt!73487) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43801 (= (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) lt!73730)))

(declare-fun b!140574 () Bool)

(declare-fun res!67168 () Bool)

(assert (=> b!140574 (=> (not res!67168) (not e!91655))))

(assert (=> b!140574 (= res!67168 (= (getValueByKey!175 (toList!889 lt!73730) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140575 () Bool)

(assert (=> b!140575 (= e!91655 (contains!923 (toList!889 lt!73730) (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43801 res!67169) b!140574))

(assert (= (and b!140574 res!67168) b!140575))

(declare-fun m!168159 () Bool)

(assert (=> d!43801 m!168159))

(declare-fun m!168161 () Bool)

(assert (=> d!43801 m!168161))

(declare-fun m!168163 () Bool)

(assert (=> d!43801 m!168163))

(declare-fun m!168165 () Bool)

(assert (=> d!43801 m!168165))

(declare-fun m!168167 () Bool)

(assert (=> b!140574 m!168167))

(declare-fun m!168169 () Bool)

(assert (=> b!140575 m!168169))

(assert (=> b!140136 d!43801))

(declare-fun d!43803 () Bool)

(declare-fun e!91656 () Bool)

(assert (=> d!43803 e!91656))

(declare-fun res!67171 () Bool)

(assert (=> d!43803 (=> (not res!67171) (not e!91656))))

(declare-fun lt!73734 () ListLongMap!1747)

(assert (=> d!43803 (= res!67171 (contains!921 lt!73734 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun lt!73735 () List!1764)

(assert (=> d!43803 (= lt!73734 (ListLongMap!1748 lt!73735))))

(declare-fun lt!73732 () Unit!4395)

(declare-fun lt!73733 () Unit!4395)

(assert (=> d!43803 (= lt!73732 lt!73733)))

(assert (=> d!43803 (= (getValueByKey!175 lt!73735 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(assert (=> d!43803 (= lt!73733 (lemmaContainsTupThenGetReturnValue!91 lt!73735 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(assert (=> d!43803 (= lt!73735 (insertStrictlySorted!93 (toList!889 lt!73493) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(assert (=> d!43803 (= (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) lt!73734)))

(declare-fun b!140576 () Bool)

(declare-fun res!67170 () Bool)

(assert (=> b!140576 (=> (not res!67170) (not e!91656))))

(assert (=> b!140576 (= res!67170 (= (getValueByKey!175 (toList!889 lt!73734) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(declare-fun b!140577 () Bool)

(assert (=> b!140577 (= e!91656 (contains!923 (toList!889 lt!73734) (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))

(assert (= (and d!43803 res!67171) b!140576))

(assert (= (and b!140576 res!67170) b!140577))

(declare-fun m!168171 () Bool)

(assert (=> d!43803 m!168171))

(declare-fun m!168173 () Bool)

(assert (=> d!43803 m!168173))

(declare-fun m!168175 () Bool)

(assert (=> d!43803 m!168175))

(declare-fun m!168177 () Bool)

(assert (=> d!43803 m!168177))

(declare-fun m!168179 () Bool)

(assert (=> b!140576 m!168179))

(declare-fun m!168181 () Bool)

(assert (=> b!140577 m!168181))

(assert (=> b!140136 d!43803))

(declare-fun d!43805 () Bool)

(assert (=> d!43805 (= (apply!120 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) lt!73498) (apply!120 lt!73487 lt!73498))))

(declare-fun lt!73736 () Unit!4395)

(assert (=> d!43805 (= lt!73736 (choose!870 lt!73487 lt!73492 (zeroValue!2790 newMap!16) lt!73498))))

(declare-fun e!91657 () Bool)

(assert (=> d!43805 e!91657))

(declare-fun res!67172 () Bool)

(assert (=> d!43805 (=> (not res!67172) (not e!91657))))

(assert (=> d!43805 (= res!67172 (contains!921 lt!73487 lt!73498))))

(assert (=> d!43805 (= (addApplyDifferent!96 lt!73487 lt!73492 (zeroValue!2790 newMap!16) lt!73498) lt!73736)))

(declare-fun b!140578 () Bool)

(assert (=> b!140578 (= e!91657 (not (= lt!73498 lt!73492)))))

(assert (= (and d!43805 res!67172) b!140578))

(declare-fun m!168183 () Bool)

(assert (=> d!43805 m!168183))

(assert (=> d!43805 m!167353))

(assert (=> d!43805 m!167355))

(assert (=> d!43805 m!167353))

(assert (=> d!43805 m!167363))

(declare-fun m!168185 () Bool)

(assert (=> d!43805 m!168185))

(assert (=> b!140136 d!43805))

(declare-fun d!43807 () Bool)

(assert (=> d!43807 (contains!921 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) lt!73489)))

(declare-fun lt!73737 () Unit!4395)

(assert (=> d!43807 (= lt!73737 (choose!871 lt!73491 lt!73484 (zeroValue!2790 newMap!16) lt!73489))))

(assert (=> d!43807 (contains!921 lt!73491 lt!73489)))

(assert (=> d!43807 (= (addStillContains!96 lt!73491 lt!73484 (zeroValue!2790 newMap!16) lt!73489) lt!73737)))

(declare-fun bs!5877 () Bool)

(assert (= bs!5877 d!43807))

(assert (=> bs!5877 m!167341))

(assert (=> bs!5877 m!167341))

(assert (=> bs!5877 m!167343))

(declare-fun m!168187 () Bool)

(assert (=> bs!5877 m!168187))

(declare-fun m!168189 () Bool)

(assert (=> bs!5877 m!168189))

(assert (=> b!140136 d!43807))

(declare-fun d!43809 () Bool)

(assert (=> d!43809 (= (apply!120 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) lt!73499) (apply!120 lt!73493 lt!73499))))

(declare-fun lt!73738 () Unit!4395)

(assert (=> d!43809 (= lt!73738 (choose!870 lt!73493 lt!73497 (minValue!2790 newMap!16) lt!73499))))

(declare-fun e!91658 () Bool)

(assert (=> d!43809 e!91658))

(declare-fun res!67173 () Bool)

(assert (=> d!43809 (=> (not res!67173) (not e!91658))))

(assert (=> d!43809 (= res!67173 (contains!921 lt!73493 lt!73499))))

(assert (=> d!43809 (= (addApplyDifferent!96 lt!73493 lt!73497 (minValue!2790 newMap!16) lt!73499) lt!73738)))

(declare-fun b!140579 () Bool)

(assert (=> b!140579 (= e!91658 (not (= lt!73499 lt!73497)))))

(assert (= (and d!43809 res!67173) b!140579))

(declare-fun m!168191 () Bool)

(assert (=> d!43809 m!168191))

(assert (=> d!43809 m!167349))

(assert (=> d!43809 m!167351))

(assert (=> d!43809 m!167349))

(assert (=> d!43809 m!167347))

(declare-fun m!168193 () Bool)

(assert (=> d!43809 m!168193))

(assert (=> b!140136 d!43809))

(declare-fun d!43811 () Bool)

(assert (=> d!43811 (= (apply!120 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) lt!73498) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) lt!73498)))))

(declare-fun bs!5878 () Bool)

(assert (= bs!5878 d!43811))

(declare-fun m!168195 () Bool)

(assert (=> bs!5878 m!168195))

(assert (=> bs!5878 m!168195))

(declare-fun m!168197 () Bool)

(assert (=> bs!5878 m!168197))

(assert (=> b!140136 d!43811))

(declare-fun d!43813 () Bool)

(declare-fun e!91659 () Bool)

(assert (=> d!43813 e!91659))

(declare-fun res!67175 () Bool)

(assert (=> d!43813 (=> (not res!67175) (not e!91659))))

(declare-fun lt!73741 () ListLongMap!1747)

(assert (=> d!43813 (= res!67175 (contains!921 lt!73741 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73742 () List!1764)

(assert (=> d!43813 (= lt!73741 (ListLongMap!1748 lt!73742))))

(declare-fun lt!73739 () Unit!4395)

(declare-fun lt!73740 () Unit!4395)

(assert (=> d!43813 (= lt!73739 lt!73740)))

(assert (=> d!43813 (= (getValueByKey!175 lt!73742 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43813 (= lt!73740 (lemmaContainsTupThenGetReturnValue!91 lt!73742 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43813 (= lt!73742 (insertStrictlySorted!93 (toList!889 lt!73459) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43813 (= (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) lt!73741)))

(declare-fun b!140580 () Bool)

(declare-fun res!67174 () Bool)

(assert (=> b!140580 (=> (not res!67174) (not e!91659))))

(assert (=> b!140580 (= res!67174 (= (getValueByKey!175 (toList!889 lt!73741) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140581 () Bool)

(assert (=> b!140581 (= e!91659 (contains!923 (toList!889 lt!73741) (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43813 res!67175) b!140580))

(assert (= (and b!140580 res!67174) b!140581))

(declare-fun m!168199 () Bool)

(assert (=> d!43813 m!168199))

(declare-fun m!168201 () Bool)

(assert (=> d!43813 m!168201))

(declare-fun m!168203 () Bool)

(assert (=> d!43813 m!168203))

(declare-fun m!168205 () Bool)

(assert (=> d!43813 m!168205))

(declare-fun m!168207 () Bool)

(assert (=> b!140580 m!168207))

(declare-fun m!168209 () Bool)

(assert (=> b!140581 m!168209))

(assert (=> b!140089 d!43813))

(declare-fun d!43815 () Bool)

(assert (=> d!43815 (= (apply!120 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) lt!73456) (apply!120 lt!73464 lt!73456))))

(declare-fun lt!73743 () Unit!4395)

(assert (=> d!43815 (= lt!73743 (choose!870 lt!73464 lt!73447 (minValue!2790 newMap!16) lt!73456))))

(declare-fun e!91660 () Bool)

(assert (=> d!43815 e!91660))

(declare-fun res!67176 () Bool)

(assert (=> d!43815 (=> (not res!67176) (not e!91660))))

(assert (=> d!43815 (= res!67176 (contains!921 lt!73464 lt!73456))))

(assert (=> d!43815 (= (addApplyDifferent!96 lt!73464 lt!73447 (minValue!2790 newMap!16) lt!73456) lt!73743)))

(declare-fun b!140582 () Bool)

(assert (=> b!140582 (= e!91660 (not (= lt!73456 lt!73447)))))

(assert (= (and d!43815 res!67176) b!140582))

(declare-fun m!168211 () Bool)

(assert (=> d!43815 m!168211))

(assert (=> d!43815 m!167263))

(assert (=> d!43815 m!167265))

(assert (=> d!43815 m!167263))

(assert (=> d!43815 m!167289))

(declare-fun m!168213 () Bool)

(assert (=> d!43815 m!168213))

(assert (=> b!140089 d!43815))

(declare-fun d!43817 () Bool)

(assert (=> d!43817 (= (apply!120 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) lt!73466) (apply!120 lt!73455 lt!73466))))

(declare-fun lt!73744 () Unit!4395)

(assert (=> d!43817 (= lt!73744 (choose!870 lt!73455 lt!73460 (zeroValue!2790 newMap!16) lt!73466))))

(declare-fun e!91661 () Bool)

(assert (=> d!43817 e!91661))

(declare-fun res!67177 () Bool)

(assert (=> d!43817 (=> (not res!67177) (not e!91661))))

(assert (=> d!43817 (= res!67177 (contains!921 lt!73455 lt!73466))))

(assert (=> d!43817 (= (addApplyDifferent!96 lt!73455 lt!73460 (zeroValue!2790 newMap!16) lt!73466) lt!73744)))

(declare-fun b!140583 () Bool)

(assert (=> b!140583 (= e!91661 (not (= lt!73466 lt!73460)))))

(assert (= (and d!43817 res!67177) b!140583))

(declare-fun m!168215 () Bool)

(assert (=> d!43817 m!168215))

(assert (=> d!43817 m!167281))

(assert (=> d!43817 m!167283))

(assert (=> d!43817 m!167281))

(assert (=> d!43817 m!167291))

(declare-fun m!168217 () Bool)

(assert (=> d!43817 m!168217))

(assert (=> b!140089 d!43817))

(declare-fun d!43819 () Bool)

(declare-fun e!91662 () Bool)

(assert (=> d!43819 e!91662))

(declare-fun res!67179 () Bool)

(assert (=> d!43819 (=> (not res!67179) (not e!91662))))

(declare-fun lt!73747 () ListLongMap!1747)

(assert (=> d!43819 (= res!67179 (contains!921 lt!73747 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun lt!73748 () List!1764)

(assert (=> d!43819 (= lt!73747 (ListLongMap!1748 lt!73748))))

(declare-fun lt!73745 () Unit!4395)

(declare-fun lt!73746 () Unit!4395)

(assert (=> d!43819 (= lt!73745 lt!73746)))

(assert (=> d!43819 (= (getValueByKey!175 lt!73748 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(assert (=> d!43819 (= lt!73746 (lemmaContainsTupThenGetReturnValue!91 lt!73748 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(assert (=> d!43819 (= lt!73748 (insertStrictlySorted!93 (toList!889 lt!73461) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(assert (=> d!43819 (= (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) lt!73747)))

(declare-fun b!140584 () Bool)

(declare-fun res!67178 () Bool)

(assert (=> b!140584 (=> (not res!67178) (not e!91662))))

(assert (=> b!140584 (= res!67178 (= (getValueByKey!175 (toList!889 lt!73747) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(declare-fun b!140585 () Bool)

(assert (=> b!140585 (= e!91662 (contains!923 (toList!889 lt!73747) (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))

(assert (= (and d!43819 res!67179) b!140584))

(assert (= (and b!140584 res!67178) b!140585))

(declare-fun m!168219 () Bool)

(assert (=> d!43819 m!168219))

(declare-fun m!168221 () Bool)

(assert (=> d!43819 m!168221))

(declare-fun m!168223 () Bool)

(assert (=> d!43819 m!168223))

(declare-fun m!168225 () Bool)

(assert (=> d!43819 m!168225))

(declare-fun m!168227 () Bool)

(assert (=> b!140584 m!168227))

(declare-fun m!168229 () Bool)

(assert (=> b!140585 m!168229))

(assert (=> b!140089 d!43819))

(declare-fun d!43821 () Bool)

(assert (=> d!43821 (= (apply!120 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) lt!73467) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) lt!73467)))))

(declare-fun bs!5879 () Bool)

(assert (= bs!5879 d!43821))

(declare-fun m!168231 () Bool)

(assert (=> bs!5879 m!168231))

(assert (=> bs!5879 m!168231))

(declare-fun m!168233 () Bool)

(assert (=> bs!5879 m!168233))

(assert (=> b!140089 d!43821))

(declare-fun d!43823 () Bool)

(assert (=> d!43823 (= (apply!120 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) lt!73456) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) lt!73456)))))

(declare-fun bs!5880 () Bool)

(assert (= bs!5880 d!43823))

(declare-fun m!168235 () Bool)

(assert (=> bs!5880 m!168235))

(assert (=> bs!5880 m!168235))

(declare-fun m!168237 () Bool)

(assert (=> bs!5880 m!168237))

(assert (=> b!140089 d!43823))

(declare-fun d!43825 () Bool)

(assert (=> d!43825 (= (apply!120 lt!73455 lt!73466) (get!1538 (getValueByKey!175 (toList!889 lt!73455) lt!73466)))))

(declare-fun bs!5881 () Bool)

(assert (= bs!5881 d!43825))

(declare-fun m!168239 () Bool)

(assert (=> bs!5881 m!168239))

(assert (=> bs!5881 m!168239))

(declare-fun m!168241 () Bool)

(assert (=> bs!5881 m!168241))

(assert (=> b!140089 d!43825))

(declare-fun d!43827 () Bool)

(declare-fun e!91663 () Bool)

(assert (=> d!43827 e!91663))

(declare-fun res!67181 () Bool)

(assert (=> d!43827 (=> (not res!67181) (not e!91663))))

(declare-fun lt!73751 () ListLongMap!1747)

(assert (=> d!43827 (= res!67181 (contains!921 lt!73751 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73752 () List!1764)

(assert (=> d!43827 (= lt!73751 (ListLongMap!1748 lt!73752))))

(declare-fun lt!73749 () Unit!4395)

(declare-fun lt!73750 () Unit!4395)

(assert (=> d!43827 (= lt!73749 lt!73750)))

(assert (=> d!43827 (= (getValueByKey!175 lt!73752 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43827 (= lt!73750 (lemmaContainsTupThenGetReturnValue!91 lt!73752 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43827 (= lt!73752 (insertStrictlySorted!93 (toList!889 lt!73455) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(assert (=> d!43827 (= (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) lt!73751)))

(declare-fun b!140586 () Bool)

(declare-fun res!67180 () Bool)

(assert (=> b!140586 (=> (not res!67180) (not e!91663))))

(assert (=> b!140586 (= res!67180 (= (getValueByKey!175 (toList!889 lt!73751) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140587 () Bool)

(assert (=> b!140587 (= e!91663 (contains!923 (toList!889 lt!73751) (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))

(assert (= (and d!43827 res!67181) b!140586))

(assert (= (and b!140586 res!67180) b!140587))

(declare-fun m!168243 () Bool)

(assert (=> d!43827 m!168243))

(declare-fun m!168245 () Bool)

(assert (=> d!43827 m!168245))

(declare-fun m!168247 () Bool)

(assert (=> d!43827 m!168247))

(declare-fun m!168249 () Bool)

(assert (=> d!43827 m!168249))

(declare-fun m!168251 () Bool)

(assert (=> b!140586 m!168251))

(declare-fun m!168253 () Bool)

(assert (=> b!140587 m!168253))

(assert (=> b!140089 d!43827))

(declare-fun d!43829 () Bool)

(declare-fun e!91664 () Bool)

(assert (=> d!43829 e!91664))

(declare-fun res!67183 () Bool)

(assert (=> d!43829 (=> (not res!67183) (not e!91664))))

(declare-fun lt!73755 () ListLongMap!1747)

(assert (=> d!43829 (= res!67183 (contains!921 lt!73755 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun lt!73756 () List!1764)

(assert (=> d!43829 (= lt!73755 (ListLongMap!1748 lt!73756))))

(declare-fun lt!73753 () Unit!4395)

(declare-fun lt!73754 () Unit!4395)

(assert (=> d!43829 (= lt!73753 lt!73754)))

(assert (=> d!43829 (= (getValueByKey!175 lt!73756 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(assert (=> d!43829 (= lt!73754 (lemmaContainsTupThenGetReturnValue!91 lt!73756 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(assert (=> d!43829 (= lt!73756 (insertStrictlySorted!93 (toList!889 lt!73464) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(assert (=> d!43829 (= (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) lt!73755)))

(declare-fun b!140588 () Bool)

(declare-fun res!67182 () Bool)

(assert (=> b!140588 (=> (not res!67182) (not e!91664))))

(assert (=> b!140588 (= res!67182 (= (getValueByKey!175 (toList!889 lt!73755) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(declare-fun b!140589 () Bool)

(assert (=> b!140589 (= e!91664 (contains!923 (toList!889 lt!73755) (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))

(assert (= (and d!43829 res!67183) b!140588))

(assert (= (and b!140588 res!67182) b!140589))

(declare-fun m!168255 () Bool)

(assert (=> d!43829 m!168255))

(declare-fun m!168257 () Bool)

(assert (=> d!43829 m!168257))

(declare-fun m!168259 () Bool)

(assert (=> d!43829 m!168259))

(declare-fun m!168261 () Bool)

(assert (=> d!43829 m!168261))

(declare-fun m!168263 () Bool)

(assert (=> b!140588 m!168263))

(declare-fun m!168265 () Bool)

(assert (=> b!140589 m!168265))

(assert (=> b!140089 d!43829))

(declare-fun d!43831 () Bool)

(assert (=> d!43831 (= (apply!120 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) lt!73467) (apply!120 lt!73461 lt!73467))))

(declare-fun lt!73757 () Unit!4395)

(assert (=> d!43831 (= lt!73757 (choose!870 lt!73461 lt!73465 (minValue!2790 newMap!16) lt!73467))))

(declare-fun e!91665 () Bool)

(assert (=> d!43831 e!91665))

(declare-fun res!67184 () Bool)

(assert (=> d!43831 (=> (not res!67184) (not e!91665))))

(assert (=> d!43831 (= res!67184 (contains!921 lt!73461 lt!73467))))

(assert (=> d!43831 (= (addApplyDifferent!96 lt!73461 lt!73465 (minValue!2790 newMap!16) lt!73467) lt!73757)))

(declare-fun b!140590 () Bool)

(assert (=> b!140590 (= e!91665 (not (= lt!73467 lt!73465)))))

(assert (= (and d!43831 res!67184) b!140590))

(declare-fun m!168267 () Bool)

(assert (=> d!43831 m!168267))

(assert (=> d!43831 m!167277))

(assert (=> d!43831 m!167279))

(assert (=> d!43831 m!167277))

(assert (=> d!43831 m!167275))

(declare-fun m!168269 () Bool)

(assert (=> d!43831 m!168269))

(assert (=> b!140089 d!43831))

(declare-fun d!43833 () Bool)

(assert (=> d!43833 (contains!921 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) lt!73457)))

(declare-fun lt!73758 () Unit!4395)

(assert (=> d!43833 (= lt!73758 (choose!871 lt!73459 lt!73452 (zeroValue!2790 newMap!16) lt!73457))))

(assert (=> d!43833 (contains!921 lt!73459 lt!73457)))

(assert (=> d!43833 (= (addStillContains!96 lt!73459 lt!73452 (zeroValue!2790 newMap!16) lt!73457) lt!73758)))

(declare-fun bs!5882 () Bool)

(assert (= bs!5882 d!43833))

(assert (=> bs!5882 m!167269))

(assert (=> bs!5882 m!167269))

(assert (=> bs!5882 m!167271))

(declare-fun m!168271 () Bool)

(assert (=> bs!5882 m!168271))

(declare-fun m!168273 () Bool)

(assert (=> bs!5882 m!168273))

(assert (=> b!140089 d!43833))

(declare-fun d!43835 () Bool)

(assert (=> d!43835 (= (apply!120 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) lt!73466) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) lt!73466)))))

(declare-fun bs!5883 () Bool)

(assert (= bs!5883 d!43835))

(declare-fun m!168275 () Bool)

(assert (=> bs!5883 m!168275))

(assert (=> bs!5883 m!168275))

(declare-fun m!168277 () Bool)

(assert (=> bs!5883 m!168277))

(assert (=> b!140089 d!43835))

(declare-fun d!43837 () Bool)

(assert (=> d!43837 (= (apply!120 lt!73461 lt!73467) (get!1538 (getValueByKey!175 (toList!889 lt!73461) lt!73467)))))

(declare-fun bs!5884 () Bool)

(assert (= bs!5884 d!43837))

(declare-fun m!168279 () Bool)

(assert (=> bs!5884 m!168279))

(assert (=> bs!5884 m!168279))

(declare-fun m!168281 () Bool)

(assert (=> bs!5884 m!168281))

(assert (=> b!140089 d!43837))

(declare-fun d!43839 () Bool)

(declare-fun e!91667 () Bool)

(assert (=> d!43839 e!91667))

(declare-fun res!67185 () Bool)

(assert (=> d!43839 (=> res!67185 e!91667)))

(declare-fun lt!73759 () Bool)

(assert (=> d!43839 (= res!67185 (not lt!73759))))

(declare-fun lt!73762 () Bool)

(assert (=> d!43839 (= lt!73759 lt!73762)))

(declare-fun lt!73760 () Unit!4395)

(declare-fun e!91666 () Unit!4395)

(assert (=> d!43839 (= lt!73760 e!91666)))

(declare-fun c!26355 () Bool)

(assert (=> d!43839 (= c!26355 lt!73762)))

(assert (=> d!43839 (= lt!73762 (containsKey!179 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457))))

(assert (=> d!43839 (= (contains!921 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) lt!73457) lt!73759)))

(declare-fun b!140591 () Bool)

(declare-fun lt!73761 () Unit!4395)

(assert (=> b!140591 (= e!91666 lt!73761)))

(assert (=> b!140591 (= lt!73761 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457))))

(assert (=> b!140591 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457))))

(declare-fun b!140592 () Bool)

(declare-fun Unit!4429 () Unit!4395)

(assert (=> b!140592 (= e!91666 Unit!4429)))

(declare-fun b!140593 () Bool)

(assert (=> b!140593 (= e!91667 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457)))))

(assert (= (and d!43839 c!26355) b!140591))

(assert (= (and d!43839 (not c!26355)) b!140592))

(assert (= (and d!43839 (not res!67185)) b!140593))

(declare-fun m!168283 () Bool)

(assert (=> d!43839 m!168283))

(declare-fun m!168285 () Bool)

(assert (=> b!140591 m!168285))

(declare-fun m!168287 () Bool)

(assert (=> b!140591 m!168287))

(assert (=> b!140591 m!168287))

(declare-fun m!168289 () Bool)

(assert (=> b!140591 m!168289))

(assert (=> b!140593 m!168287))

(assert (=> b!140593 m!168287))

(assert (=> b!140593 m!168289))

(assert (=> b!140089 d!43839))

(declare-fun d!43841 () Bool)

(assert (=> d!43841 (= (apply!120 lt!73464 lt!73456) (get!1538 (getValueByKey!175 (toList!889 lt!73464) lt!73456)))))

(declare-fun bs!5885 () Bool)

(assert (= bs!5885 d!43841))

(declare-fun m!168291 () Bool)

(assert (=> bs!5885 m!168291))

(assert (=> bs!5885 m!168291))

(declare-fun m!168293 () Bool)

(assert (=> bs!5885 m!168293))

(assert (=> b!140089 d!43841))

(assert (=> b!140089 d!43613))

(declare-fun d!43843 () Bool)

(assert (=> d!43843 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5886 () Bool)

(assert (= bs!5886 d!43843))

(assert (=> bs!5886 m!167383))

(declare-fun m!168295 () Bool)

(assert (=> bs!5886 m!168295))

(assert (=> b!140186 d!43843))

(declare-fun b!140596 () Bool)

(declare-fun e!91669 () Option!181)

(assert (=> b!140596 (= e!91669 (getValueByKey!175 (t!6360 (toList!889 lt!73135)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140595 () Bool)

(declare-fun e!91668 () Option!181)

(assert (=> b!140595 (= e!91668 e!91669)))

(declare-fun c!26357 () Bool)

(assert (=> b!140595 (= c!26357 (and ((_ is Cons!1760) (toList!889 lt!73135)) (not (= (_1!1352 (h!2367 (toList!889 lt!73135))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140597 () Bool)

(assert (=> b!140597 (= e!91669 None!179)))

(declare-fun b!140594 () Bool)

(assert (=> b!140594 (= e!91668 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73135)))))))

(declare-fun d!43845 () Bool)

(declare-fun c!26356 () Bool)

(assert (=> d!43845 (= c!26356 (and ((_ is Cons!1760) (toList!889 lt!73135)) (= (_1!1352 (h!2367 (toList!889 lt!73135))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43845 (= (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000) e!91668)))

(assert (= (and d!43845 c!26356) b!140594))

(assert (= (and d!43845 (not c!26356)) b!140595))

(assert (= (and b!140595 c!26357) b!140596))

(assert (= (and b!140595 (not c!26357)) b!140597))

(declare-fun m!168297 () Bool)

(assert (=> b!140596 m!168297))

(assert (=> b!140186 d!43845))

(declare-fun d!43847 () Bool)

(declare-fun e!91671 () Bool)

(assert (=> d!43847 e!91671))

(declare-fun res!67186 () Bool)

(assert (=> d!43847 (=> res!67186 e!91671)))

(declare-fun lt!73763 () Bool)

(assert (=> d!43847 (= res!67186 (not lt!73763))))

(declare-fun lt!73766 () Bool)

(assert (=> d!43847 (= lt!73763 lt!73766)))

(declare-fun lt!73764 () Unit!4395)

(declare-fun e!91670 () Unit!4395)

(assert (=> d!43847 (= lt!73764 e!91670)))

(declare-fun c!26358 () Bool)

(assert (=> d!43847 (= c!26358 lt!73766)))

(assert (=> d!43847 (= lt!73766 (containsKey!179 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43847 (= (contains!921 lt!73482 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73763)))

(declare-fun b!140598 () Bool)

(declare-fun lt!73765 () Unit!4395)

(assert (=> b!140598 (= e!91670 lt!73765)))

(assert (=> b!140598 (= lt!73765 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140598 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140599 () Bool)

(declare-fun Unit!4430 () Unit!4395)

(assert (=> b!140599 (= e!91670 Unit!4430)))

(declare-fun b!140600 () Bool)

(assert (=> b!140600 (= e!91671 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43847 c!26358) b!140598))

(assert (= (and d!43847 (not c!26358)) b!140599))

(assert (= (and d!43847 (not res!67186)) b!140600))

(declare-fun m!168299 () Bool)

(assert (=> d!43847 m!168299))

(declare-fun m!168301 () Bool)

(assert (=> b!140598 m!168301))

(declare-fun m!168303 () Bool)

(assert (=> b!140598 m!168303))

(assert (=> b!140598 m!168303))

(declare-fun m!168305 () Bool)

(assert (=> b!140598 m!168305))

(assert (=> b!140600 m!168303))

(assert (=> b!140600 m!168303))

(assert (=> b!140600 m!168305))

(assert (=> bm!15571 d!43847))

(declare-fun d!43849 () Bool)

(declare-fun e!91673 () Bool)

(assert (=> d!43849 e!91673))

(declare-fun res!67187 () Bool)

(assert (=> d!43849 (=> res!67187 e!91673)))

(declare-fun lt!73767 () Bool)

(assert (=> d!43849 (= res!67187 (not lt!73767))))

(declare-fun lt!73770 () Bool)

(assert (=> d!43849 (= lt!73767 lt!73770)))

(declare-fun lt!73768 () Unit!4395)

(declare-fun e!91672 () Unit!4395)

(assert (=> d!43849 (= lt!73768 e!91672)))

(declare-fun c!26359 () Bool)

(assert (=> d!43849 (= c!26359 lt!73770)))

(assert (=> d!43849 (= lt!73770 (containsKey!179 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43849 (= (contains!921 lt!73450 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73767)))

(declare-fun b!140601 () Bool)

(declare-fun lt!73769 () Unit!4395)

(assert (=> b!140601 (= e!91672 lt!73769)))

(assert (=> b!140601 (= lt!73769 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140601 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140602 () Bool)

(declare-fun Unit!4431 () Unit!4395)

(assert (=> b!140602 (= e!91672 Unit!4431)))

(declare-fun b!140603 () Bool)

(assert (=> b!140603 (= e!91673 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43849 c!26359) b!140601))

(assert (= (and d!43849 (not c!26359)) b!140602))

(assert (= (and d!43849 (not res!67187)) b!140603))

(declare-fun m!168307 () Bool)

(assert (=> d!43849 m!168307))

(declare-fun m!168309 () Bool)

(assert (=> b!140601 m!168309))

(declare-fun m!168311 () Bool)

(assert (=> b!140601 m!168311))

(assert (=> b!140601 m!168311))

(declare-fun m!168313 () Bool)

(assert (=> b!140601 m!168313))

(assert (=> b!140603 m!168311))

(assert (=> b!140603 m!168311))

(assert (=> b!140603 m!168313))

(assert (=> bm!15558 d!43849))

(declare-fun d!43851 () Bool)

(declare-fun e!91675 () Bool)

(assert (=> d!43851 e!91675))

(declare-fun res!67188 () Bool)

(assert (=> d!43851 (=> res!67188 e!91675)))

(declare-fun lt!73771 () Bool)

(assert (=> d!43851 (= res!67188 (not lt!73771))))

(declare-fun lt!73774 () Bool)

(assert (=> d!43851 (= lt!73771 lt!73774)))

(declare-fun lt!73772 () Unit!4395)

(declare-fun e!91674 () Unit!4395)

(assert (=> d!43851 (= lt!73772 e!91674)))

(declare-fun c!26360 () Bool)

(assert (=> d!43851 (= c!26360 lt!73774)))

(assert (=> d!43851 (= lt!73774 (containsKey!179 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(assert (=> d!43851 (= (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))) lt!73771)))

(declare-fun b!140604 () Bool)

(declare-fun lt!73773 () Unit!4395)

(assert (=> b!140604 (= e!91674 lt!73773)))

(assert (=> b!140604 (= lt!73773 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(assert (=> b!140604 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(declare-fun b!140605 () Bool)

(declare-fun Unit!4432 () Unit!4395)

(assert (=> b!140605 (= e!91674 Unit!4432)))

(declare-fun b!140606 () Bool)

(assert (=> b!140606 (= e!91675 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (= (and d!43851 c!26360) b!140604))

(assert (= (and d!43851 (not c!26360)) b!140605))

(assert (= (and d!43851 (not res!67188)) b!140606))

(assert (=> d!43851 m!166933))

(declare-fun m!168315 () Bool)

(assert (=> d!43851 m!168315))

(assert (=> b!140604 m!166933))

(declare-fun m!168317 () Bool)

(assert (=> b!140604 m!168317))

(assert (=> b!140604 m!166933))

(declare-fun m!168319 () Bool)

(assert (=> b!140604 m!168319))

(assert (=> b!140604 m!168319))

(declare-fun m!168321 () Bool)

(assert (=> b!140604 m!168321))

(assert (=> b!140606 m!166933))

(assert (=> b!140606 m!168319))

(assert (=> b!140606 m!168319))

(assert (=> b!140606 m!168321))

(assert (=> b!139988 d!43851))

(declare-fun bm!15615 () Bool)

(declare-fun call!15623 () ListLongMap!1747)

(declare-fun call!15622 () ListLongMap!1747)

(assert (=> bm!15615 (= call!15623 call!15622)))

(declare-fun b!140607 () Bool)

(declare-fun e!91682 () ListLongMap!1747)

(declare-fun call!15618 () ListLongMap!1747)

(assert (=> b!140607 (= e!91682 call!15618)))

(declare-fun bm!15616 () Bool)

(declare-fun call!15619 () ListLongMap!1747)

(assert (=> bm!15616 (= call!15619 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!140608 () Bool)

(declare-fun e!91680 () Unit!4395)

(declare-fun lt!73792 () Unit!4395)

(assert (=> b!140608 (= e!91680 lt!73792)))

(declare-fun lt!73788 () ListLongMap!1747)

(assert (=> b!140608 (= lt!73788 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73781 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73781 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73786 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73786 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73783 () Unit!4395)

(assert (=> b!140608 (= lt!73783 (addStillContains!96 lt!73788 lt!73781 (zeroValue!2790 newMap!16) lt!73786))))

(assert (=> b!140608 (contains!921 (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))) lt!73786)))

(declare-fun lt!73791 () Unit!4395)

(assert (=> b!140608 (= lt!73791 lt!73783)))

(declare-fun lt!73790 () ListLongMap!1747)

(assert (=> b!140608 (= lt!73790 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73794 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73794 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73796 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73796 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73787 () Unit!4395)

(assert (=> b!140608 (= lt!73787 (addApplyDifferent!96 lt!73790 lt!73794 (minValue!2790 newMap!16) lt!73796))))

(assert (=> b!140608 (= (apply!120 (+!174 lt!73790 (tuple2!2685 lt!73794 (minValue!2790 newMap!16))) lt!73796) (apply!120 lt!73790 lt!73796))))

(declare-fun lt!73775 () Unit!4395)

(assert (=> b!140608 (= lt!73775 lt!73787)))

(declare-fun lt!73784 () ListLongMap!1747)

(assert (=> b!140608 (= lt!73784 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73789 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73789 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73795 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73795 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!73782 () Unit!4395)

(assert (=> b!140608 (= lt!73782 (addApplyDifferent!96 lt!73784 lt!73789 (zeroValue!2790 newMap!16) lt!73795))))

(assert (=> b!140608 (= (apply!120 (+!174 lt!73784 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))) lt!73795) (apply!120 lt!73784 lt!73795))))

(declare-fun lt!73780 () Unit!4395)

(assert (=> b!140608 (= lt!73780 lt!73782)))

(declare-fun lt!73793 () ListLongMap!1747)

(assert (=> b!140608 (= lt!73793 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73776 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73776 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73785 () (_ BitVec 64))

(assert (=> b!140608 (= lt!73785 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140608 (= lt!73792 (addApplyDifferent!96 lt!73793 lt!73776 (minValue!2790 newMap!16) lt!73785))))

(assert (=> b!140608 (= (apply!120 (+!174 lt!73793 (tuple2!2685 lt!73776 (minValue!2790 newMap!16))) lt!73785) (apply!120 lt!73793 lt!73785))))

(declare-fun b!140609 () Bool)

(declare-fun res!67193 () Bool)

(declare-fun e!91676 () Bool)

(assert (=> b!140609 (=> (not res!67193) (not e!91676))))

(declare-fun e!91686 () Bool)

(assert (=> b!140609 (= res!67193 e!91686)))

(declare-fun res!67190 () Bool)

(assert (=> b!140609 (=> res!67190 e!91686)))

(declare-fun e!91683 () Bool)

(assert (=> b!140609 (= res!67190 (not e!91683))))

(declare-fun res!67189 () Bool)

(assert (=> b!140609 (=> (not res!67189) (not e!91683))))

(assert (=> b!140609 (= res!67189 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140610 () Bool)

(assert (=> b!140610 (= e!91682 call!15623)))

(declare-fun b!140611 () Bool)

(declare-fun e!91678 () ListLongMap!1747)

(declare-fun e!91685 () ListLongMap!1747)

(assert (=> b!140611 (= e!91678 e!91685)))

(declare-fun c!26365 () Bool)

(assert (=> b!140611 (= c!26365 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!15621 () ListLongMap!1747)

(declare-fun c!26362 () Bool)

(declare-fun bm!15617 () Bool)

(assert (=> bm!15617 (= call!15622 (+!174 (ite c!26362 call!15619 (ite c!26365 call!15621 call!15618)) (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140613 () Bool)

(declare-fun Unit!4433 () Unit!4395)

(assert (=> b!140613 (= e!91680 Unit!4433)))

(declare-fun b!140614 () Bool)

(declare-fun e!91687 () Bool)

(declare-fun e!91679 () Bool)

(assert (=> b!140614 (= e!91687 e!91679)))

(declare-fun res!67194 () Bool)

(declare-fun call!15620 () Bool)

(assert (=> b!140614 (= res!67194 call!15620)))

(assert (=> b!140614 (=> (not res!67194) (not e!91679))))

(declare-fun b!140615 () Bool)

(declare-fun e!91688 () Bool)

(assert (=> b!140615 (= e!91676 e!91688)))

(declare-fun c!26361 () Bool)

(assert (=> b!140615 (= c!26361 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140616 () Bool)

(assert (=> b!140616 (= e!91683 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140617 () Bool)

(declare-fun lt!73779 () ListLongMap!1747)

(assert (=> b!140617 (= e!91679 (= (apply!120 lt!73779 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15618 () Bool)

(assert (=> bm!15618 (= call!15618 call!15621)))

(declare-fun b!140618 () Bool)

(declare-fun call!15624 () Bool)

(assert (=> b!140618 (= e!91688 (not call!15624))))

(declare-fun b!140619 () Bool)

(declare-fun e!91684 () Bool)

(assert (=> b!140619 (= e!91684 (= (apply!120 lt!73779 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun bm!15619 () Bool)

(assert (=> bm!15619 (= call!15621 call!15619)))

(declare-fun b!140620 () Bool)

(declare-fun e!91677 () Bool)

(assert (=> b!140620 (= e!91686 e!91677)))

(declare-fun res!67197 () Bool)

(assert (=> b!140620 (=> (not res!67197) (not e!91677))))

(assert (=> b!140620 (= res!67197 (contains!921 lt!73779 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140620 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun bm!15620 () Bool)

(assert (=> bm!15620 (= call!15620 (contains!921 lt!73779 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140621 () Bool)

(assert (=> b!140621 (= e!91677 (= (apply!120 lt!73779 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 lt!73219) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140621 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73219)))))

(assert (=> b!140621 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140622 () Bool)

(declare-fun e!91681 () Bool)

(assert (=> b!140622 (= e!91681 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140623 () Bool)

(declare-fun c!26366 () Bool)

(assert (=> b!140623 (= c!26366 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140623 (= e!91685 e!91682)))

(declare-fun b!140624 () Bool)

(assert (=> b!140624 (= e!91678 (+!174 call!15622 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun d!43853 () Bool)

(assert (=> d!43853 e!91676))

(declare-fun res!67191 () Bool)

(assert (=> d!43853 (=> (not res!67191) (not e!91676))))

(assert (=> d!43853 (= res!67191 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun lt!73778 () ListLongMap!1747)

(assert (=> d!43853 (= lt!73779 lt!73778)))

(declare-fun lt!73777 () Unit!4395)

(assert (=> d!43853 (= lt!73777 e!91680)))

(declare-fun c!26364 () Bool)

(assert (=> d!43853 (= c!26364 e!91681)))

(declare-fun res!67195 () Bool)

(assert (=> d!43853 (=> (not res!67195) (not e!91681))))

(assert (=> d!43853 (= res!67195 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43853 (= lt!73778 e!91678)))

(assert (=> d!43853 (= c!26362 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43853 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43853 (= (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73779)))

(declare-fun b!140612 () Bool)

(assert (=> b!140612 (= e!91685 call!15623)))

(declare-fun bm!15621 () Bool)

(assert (=> bm!15621 (= call!15624 (contains!921 lt!73779 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140625 () Bool)

(assert (=> b!140625 (= e!91688 e!91684)))

(declare-fun res!67196 () Bool)

(assert (=> b!140625 (= res!67196 call!15624)))

(assert (=> b!140625 (=> (not res!67196) (not e!91684))))

(declare-fun b!140626 () Bool)

(assert (=> b!140626 (= e!91687 (not call!15620))))

(declare-fun b!140627 () Bool)

(declare-fun res!67192 () Bool)

(assert (=> b!140627 (=> (not res!67192) (not e!91676))))

(assert (=> b!140627 (= res!67192 e!91687)))

(declare-fun c!26363 () Bool)

(assert (=> b!140627 (= c!26363 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43853 c!26362) b!140624))

(assert (= (and d!43853 (not c!26362)) b!140611))

(assert (= (and b!140611 c!26365) b!140612))

(assert (= (and b!140611 (not c!26365)) b!140623))

(assert (= (and b!140623 c!26366) b!140610))

(assert (= (and b!140623 (not c!26366)) b!140607))

(assert (= (or b!140610 b!140607) bm!15618))

(assert (= (or b!140612 bm!15618) bm!15619))

(assert (= (or b!140612 b!140610) bm!15615))

(assert (= (or b!140624 bm!15619) bm!15616))

(assert (= (or b!140624 bm!15615) bm!15617))

(assert (= (and d!43853 res!67195) b!140622))

(assert (= (and d!43853 c!26364) b!140608))

(assert (= (and d!43853 (not c!26364)) b!140613))

(assert (= (and d!43853 res!67191) b!140609))

(assert (= (and b!140609 res!67189) b!140616))

(assert (= (and b!140609 (not res!67190)) b!140620))

(assert (= (and b!140620 res!67197) b!140621))

(assert (= (and b!140609 res!67193) b!140627))

(assert (= (and b!140627 c!26363) b!140614))

(assert (= (and b!140627 (not c!26363)) b!140626))

(assert (= (and b!140614 res!67194) b!140617))

(assert (= (or b!140614 b!140626) bm!15620))

(assert (= (and b!140627 res!67192) b!140615))

(assert (= (and b!140615 c!26361) b!140625))

(assert (= (and b!140615 (not c!26361)) b!140618))

(assert (= (and b!140625 res!67196) b!140619))

(assert (= (or b!140625 b!140618) bm!15621))

(declare-fun b_lambda!6329 () Bool)

(assert (=> (not b_lambda!6329) (not b!140621)))

(assert (=> b!140621 t!6366))

(declare-fun b_and!8813 () Bool)

(assert (= b_and!8809 (and (=> t!6366 result!4203) b_and!8813)))

(assert (=> b!140621 t!6368))

(declare-fun b_and!8815 () Bool)

(assert (= b_and!8811 (and (=> t!6368 result!4205) b_and!8815)))

(declare-fun m!168323 () Bool)

(assert (=> b!140624 m!168323))

(declare-fun m!168325 () Bool)

(assert (=> bm!15616 m!168325))

(assert (=> d!43853 m!166961))

(declare-fun m!168327 () Bool)

(assert (=> b!140619 m!168327))

(declare-fun m!168329 () Bool)

(assert (=> bm!15617 m!168329))

(assert (=> b!140621 m!166967))

(assert (=> b!140621 m!166967))

(declare-fun m!168331 () Bool)

(assert (=> b!140621 m!168331))

(assert (=> b!140621 m!166971))

(declare-fun m!168333 () Bool)

(assert (=> b!140621 m!168333))

(assert (=> b!140621 m!166971))

(declare-fun m!168335 () Bool)

(assert (=> b!140621 m!168335))

(assert (=> b!140621 m!168333))

(declare-fun m!168337 () Bool)

(assert (=> bm!15620 m!168337))

(declare-fun m!168339 () Bool)

(assert (=> b!140617 m!168339))

(assert (=> b!140616 m!166967))

(assert (=> b!140616 m!166967))

(assert (=> b!140616 m!166981))

(assert (=> b!140620 m!166967))

(assert (=> b!140620 m!166967))

(declare-fun m!168341 () Bool)

(assert (=> b!140620 m!168341))

(assert (=> b!140622 m!166967))

(assert (=> b!140622 m!166967))

(assert (=> b!140622 m!166981))

(declare-fun m!168343 () Bool)

(assert (=> bm!15621 m!168343))

(declare-fun m!168345 () Bool)

(assert (=> b!140608 m!168345))

(declare-fun m!168347 () Bool)

(assert (=> b!140608 m!168347))

(declare-fun m!168349 () Bool)

(assert (=> b!140608 m!168349))

(declare-fun m!168351 () Bool)

(assert (=> b!140608 m!168351))

(declare-fun m!168353 () Bool)

(assert (=> b!140608 m!168353))

(declare-fun m!168355 () Bool)

(assert (=> b!140608 m!168355))

(declare-fun m!168357 () Bool)

(assert (=> b!140608 m!168357))

(declare-fun m!168359 () Bool)

(assert (=> b!140608 m!168359))

(assert (=> b!140608 m!168359))

(declare-fun m!168361 () Bool)

(assert (=> b!140608 m!168361))

(assert (=> b!140608 m!168325))

(declare-fun m!168363 () Bool)

(assert (=> b!140608 m!168363))

(declare-fun m!168365 () Bool)

(assert (=> b!140608 m!168365))

(assert (=> b!140608 m!168351))

(declare-fun m!168367 () Bool)

(assert (=> b!140608 m!168367))

(declare-fun m!168369 () Bool)

(assert (=> b!140608 m!168369))

(assert (=> b!140608 m!166967))

(declare-fun m!168371 () Bool)

(assert (=> b!140608 m!168371))

(assert (=> b!140608 m!168345))

(declare-fun m!168373 () Bool)

(assert (=> b!140608 m!168373))

(assert (=> b!140608 m!168363))

(assert (=> b!139988 d!43853))

(assert (=> b!140178 d!43595))

(declare-fun d!43855 () Bool)

(assert (=> d!43855 (= (isDefined!129 (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun bs!5887 () Bool)

(assert (= bs!5887 d!43855))

(assert (=> bs!5887 m!167203))

(declare-fun m!168375 () Bool)

(assert (=> bs!5887 m!168375))

(assert (=> b!140015 d!43855))

(declare-fun e!91690 () Option!181)

(declare-fun b!140630 () Bool)

(assert (=> b!140630 (= e!91690 (getValueByKey!175 (t!6360 (toList!889 call!15508)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140629 () Bool)

(declare-fun e!91689 () Option!181)

(assert (=> b!140629 (= e!91689 e!91690)))

(declare-fun c!26368 () Bool)

(assert (=> b!140629 (= c!26368 (and ((_ is Cons!1760) (toList!889 call!15508)) (not (= (_1!1352 (h!2367 (toList!889 call!15508))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!140631 () Bool)

(assert (=> b!140631 (= e!91690 None!179)))

(declare-fun b!140628 () Bool)

(assert (=> b!140628 (= e!91689 (Some!180 (_2!1352 (h!2367 (toList!889 call!15508)))))))

(declare-fun c!26367 () Bool)

(declare-fun d!43857 () Bool)

(assert (=> d!43857 (= c!26367 (and ((_ is Cons!1760) (toList!889 call!15508)) (= (_1!1352 (h!2367 (toList!889 call!15508))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!43857 (= (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91689)))

(assert (= (and d!43857 c!26367) b!140628))

(assert (= (and d!43857 (not c!26367)) b!140629))

(assert (= (and b!140629 c!26368) b!140630))

(assert (= (and b!140629 (not c!26368)) b!140631))

(assert (=> b!140630 m!166733))

(declare-fun m!168377 () Bool)

(assert (=> b!140630 m!168377))

(assert (=> b!140015 d!43857))

(declare-fun lt!73797 () Bool)

(declare-fun d!43859 () Bool)

(assert (=> d!43859 (= lt!73797 (select (content!137 (toList!889 lt!73528)) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!91691 () Bool)

(assert (=> d!43859 (= lt!73797 e!91691)))

(declare-fun res!67199 () Bool)

(assert (=> d!43859 (=> (not res!67199) (not e!91691))))

(assert (=> d!43859 (= res!67199 ((_ is Cons!1760) (toList!889 lt!73528)))))

(assert (=> d!43859 (= (contains!923 (toList!889 lt!73528) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73797)))

(declare-fun b!140632 () Bool)

(declare-fun e!91692 () Bool)

(assert (=> b!140632 (= e!91691 e!91692)))

(declare-fun res!67198 () Bool)

(assert (=> b!140632 (=> res!67198 e!91692)))

(assert (=> b!140632 (= res!67198 (= (h!2367 (toList!889 lt!73528)) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!140633 () Bool)

(assert (=> b!140633 (= e!91692 (contains!923 (t!6360 (toList!889 lt!73528)) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43859 res!67199) b!140632))

(assert (= (and b!140632 (not res!67198)) b!140633))

(declare-fun m!168379 () Bool)

(assert (=> d!43859 m!168379))

(declare-fun m!168381 () Bool)

(assert (=> d!43859 m!168381))

(declare-fun m!168383 () Bool)

(assert (=> b!140633 m!168383))

(assert (=> b!140200 d!43859))

(declare-fun d!43861 () Bool)

(assert (=> d!43861 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73151)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73151)))))

(assert (=> d!43575 d!43861))

(declare-fun b!140636 () Bool)

(declare-fun e!91694 () Option!181)

(assert (=> b!140636 (= e!91694 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73151))))

(declare-fun b!140635 () Bool)

(declare-fun e!91693 () Option!181)

(assert (=> b!140635 (= e!91693 e!91694)))

(declare-fun c!26370 () Bool)

(assert (=> b!140635 (= c!26370 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73151))))))

(declare-fun b!140637 () Bool)

(assert (=> b!140637 (= e!91694 None!179)))

(declare-fun b!140634 () Bool)

(assert (=> b!140634 (= e!91693 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun d!43863 () Bool)

(declare-fun c!26369 () Bool)

(assert (=> d!43863 (= c!26369 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73151)))))

(assert (=> d!43863 (= (getValueByKey!175 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73151) e!91693)))

(assert (= (and d!43863 c!26369) b!140634))

(assert (= (and d!43863 (not c!26369)) b!140635))

(assert (= (and b!140635 c!26370) b!140636))

(assert (= (and b!140635 (not c!26370)) b!140637))

(declare-fun m!168385 () Bool)

(assert (=> b!140636 m!168385))

(assert (=> d!43575 d!43863))

(assert (=> d!43467 d!43661))

(assert (=> b!140144 d!43605))

(assert (=> b!140097 d!43605))

(declare-fun e!91696 () Option!181)

(declare-fun b!140640 () Bool)

(assert (=> b!140640 (= e!91696 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140639 () Bool)

(declare-fun e!91695 () Option!181)

(assert (=> b!140639 (= e!91695 e!91696)))

(declare-fun c!26372 () Bool)

(assert (=> b!140639 (= c!26372 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73065))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73065)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!140641 () Bool)

(assert (=> b!140641 (= e!91696 None!179)))

(declare-fun b!140638 () Bool)

(assert (=> b!140638 (= e!91695 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73065))))))))

(declare-fun d!43865 () Bool)

(declare-fun c!26371 () Bool)

(assert (=> d!43865 (= c!26371 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73065))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73065)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!43865 (= (getValueByKey!175 (t!6360 (toList!889 lt!73065)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91695)))

(assert (= (and d!43865 c!26371) b!140638))

(assert (= (and d!43865 (not c!26371)) b!140639))

(assert (= (and b!140639 c!26372) b!140640))

(assert (= (and b!140639 (not c!26372)) b!140641))

(assert (=> b!140640 m!166733))

(declare-fun m!168387 () Bool)

(assert (=> b!140640 m!168387))

(assert (=> b!140044 d!43865))

(declare-fun d!43867 () Bool)

(declare-fun e!91697 () Bool)

(assert (=> d!43867 e!91697))

(declare-fun res!67201 () Bool)

(assert (=> d!43867 (=> (not res!67201) (not e!91697))))

(declare-fun lt!73800 () ListLongMap!1747)

(assert (=> d!43867 (= res!67201 (contains!921 lt!73800 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!73801 () List!1764)

(assert (=> d!43867 (= lt!73800 (ListLongMap!1748 lt!73801))))

(declare-fun lt!73798 () Unit!4395)

(declare-fun lt!73799 () Unit!4395)

(assert (=> d!43867 (= lt!73798 lt!73799)))

(assert (=> d!43867 (= (getValueByKey!175 lt!73801 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43867 (= lt!73799 (lemmaContainsTupThenGetReturnValue!91 lt!73801 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43867 (= lt!73801 (insertStrictlySorted!93 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43867 (= (+!174 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)) (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73800)))

(declare-fun b!140642 () Bool)

(declare-fun res!67200 () Bool)

(assert (=> b!140642 (=> (not res!67200) (not e!91697))))

(assert (=> b!140642 (= res!67200 (= (getValueByKey!175 (toList!889 lt!73800) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!140643 () Bool)

(assert (=> b!140643 (= e!91697 (contains!923 (toList!889 lt!73800) (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!43867 res!67201) b!140642))

(assert (= (and b!140642 res!67200) b!140643))

(declare-fun m!168389 () Bool)

(assert (=> d!43867 m!168389))

(declare-fun m!168391 () Bool)

(assert (=> d!43867 m!168391))

(declare-fun m!168393 () Bool)

(assert (=> d!43867 m!168393))

(declare-fun m!168395 () Bool)

(assert (=> d!43867 m!168395))

(declare-fun m!168397 () Bool)

(assert (=> b!140642 m!168397))

(declare-fun m!168399 () Bool)

(assert (=> b!140643 m!168399))

(assert (=> bm!15567 d!43867))

(declare-fun d!43869 () Bool)

(declare-fun e!91698 () Bool)

(assert (=> d!43869 e!91698))

(declare-fun res!67203 () Bool)

(assert (=> d!43869 (=> (not res!67203) (not e!91698))))

(declare-fun lt!73804 () ListLongMap!1747)

(assert (=> d!43869 (= res!67203 (contains!921 lt!73804 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!73805 () List!1764)

(assert (=> d!43869 (= lt!73804 (ListLongMap!1748 lt!73805))))

(declare-fun lt!73802 () Unit!4395)

(declare-fun lt!73803 () Unit!4395)

(assert (=> d!43869 (= lt!73802 lt!73803)))

(assert (=> d!43869 (= (getValueByKey!175 lt!73805 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43869 (= lt!73803 (lemmaContainsTupThenGetReturnValue!91 lt!73805 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43869 (= lt!73805 (insertStrictlySorted!93 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!43869 (= (+!174 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)) (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!73804)))

(declare-fun b!140644 () Bool)

(declare-fun res!67202 () Bool)

(assert (=> b!140644 (=> (not res!67202) (not e!91698))))

(assert (=> b!140644 (= res!67202 (= (getValueByKey!175 (toList!889 lt!73804) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!140645 () Bool)

(assert (=> b!140645 (= e!91698 (contains!923 (toList!889 lt!73804) (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!43869 res!67203) b!140644))

(assert (= (and b!140644 res!67202) b!140645))

(declare-fun m!168401 () Bool)

(assert (=> d!43869 m!168401))

(declare-fun m!168403 () Bool)

(assert (=> d!43869 m!168403))

(declare-fun m!168405 () Bool)

(assert (=> d!43869 m!168405))

(declare-fun m!168407 () Bool)

(assert (=> d!43869 m!168407))

(declare-fun m!168409 () Bool)

(assert (=> b!140644 m!168409))

(declare-fun m!168411 () Bool)

(assert (=> b!140645 m!168411))

(assert (=> bm!15554 d!43869))

(assert (=> d!43543 d!43517))

(assert (=> d!43543 d!43519))

(declare-fun d!43871 () Bool)

(assert (=> d!43871 (isDefined!129 (getValueByKey!175 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43871 true))

(declare-fun _$12!412 () Unit!4395)

(assert (=> d!43871 (= (choose!868 (toList!889 lt!73065) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) _$12!412)))

(declare-fun bs!5888 () Bool)

(assert (= bs!5888 d!43871))

(assert (=> bs!5888 m!166733))

(assert (=> bs!5888 m!166889))

(assert (=> bs!5888 m!166889))

(assert (=> bs!5888 m!166891))

(assert (=> d!43543 d!43871))

(declare-fun d!43873 () Bool)

(declare-fun res!67208 () Bool)

(declare-fun e!91703 () Bool)

(assert (=> d!43873 (=> res!67208 e!91703)))

(assert (=> d!43873 (= res!67208 (or ((_ is Nil!1761) (toList!889 lt!73065)) ((_ is Nil!1761) (t!6360 (toList!889 lt!73065)))))))

(assert (=> d!43873 (= (isStrictlySorted!320 (toList!889 lt!73065)) e!91703)))

(declare-fun b!140650 () Bool)

(declare-fun e!91704 () Bool)

(assert (=> b!140650 (= e!91703 e!91704)))

(declare-fun res!67209 () Bool)

(assert (=> b!140650 (=> (not res!67209) (not e!91704))))

(assert (=> b!140650 (= res!67209 (bvslt (_1!1352 (h!2367 (toList!889 lt!73065))) (_1!1352 (h!2367 (t!6360 (toList!889 lt!73065))))))))

(declare-fun b!140651 () Bool)

(assert (=> b!140651 (= e!91704 (isStrictlySorted!320 (t!6360 (toList!889 lt!73065))))))

(assert (= (and d!43873 (not res!67208)) b!140650))

(assert (= (and b!140650 res!67209) b!140651))

(declare-fun m!168413 () Bool)

(assert (=> b!140651 m!168413))

(assert (=> d!43543 d!43873))

(declare-fun b!140654 () Bool)

(declare-fun e!91706 () Option!181)

(assert (=> b!140654 (= e!91706 (getValueByKey!175 (t!6360 (toList!889 lt!73378)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140653 () Bool)

(declare-fun e!91705 () Option!181)

(assert (=> b!140653 (= e!91705 e!91706)))

(declare-fun c!26374 () Bool)

(assert (=> b!140653 (= c!26374 (and ((_ is Cons!1760) (toList!889 lt!73378)) (not (= (_1!1352 (h!2367 (toList!889 lt!73378))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140655 () Bool)

(assert (=> b!140655 (= e!91706 None!179)))

(declare-fun b!140652 () Bool)

(assert (=> b!140652 (= e!91705 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73378)))))))

(declare-fun d!43875 () Bool)

(declare-fun c!26373 () Bool)

(assert (=> d!43875 (= c!26373 (and ((_ is Cons!1760) (toList!889 lt!73378)) (= (_1!1352 (h!2367 (toList!889 lt!73378))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43875 (= (getValueByKey!175 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91705)))

(assert (= (and d!43875 c!26373) b!140652))

(assert (= (and d!43875 (not c!26373)) b!140653))

(assert (= (and b!140653 c!26374) b!140654))

(assert (= (and b!140653 (not c!26374)) b!140655))

(declare-fun m!168415 () Bool)

(assert (=> b!140654 m!168415))

(assert (=> b!139981 d!43875))

(declare-fun d!43877 () Bool)

(declare-fun e!91708 () Bool)

(assert (=> d!43877 e!91708))

(declare-fun res!67210 () Bool)

(assert (=> d!43877 (=> res!67210 e!91708)))

(declare-fun lt!73806 () Bool)

(assert (=> d!43877 (= res!67210 (not lt!73806))))

(declare-fun lt!73809 () Bool)

(assert (=> d!43877 (= lt!73806 lt!73809)))

(declare-fun lt!73807 () Unit!4395)

(declare-fun e!91707 () Unit!4395)

(assert (=> d!43877 (= lt!73807 e!91707)))

(declare-fun c!26375 () Bool)

(assert (=> d!43877 (= c!26375 lt!73809)))

(assert (=> d!43877 (= lt!73809 (containsKey!179 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!43877 (= (contains!921 lt!73542 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73806)))

(declare-fun b!140656 () Bool)

(declare-fun lt!73808 () Unit!4395)

(assert (=> b!140656 (= e!91707 lt!73808)))

(assert (=> b!140656 (= lt!73808 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> b!140656 (isDefined!129 (getValueByKey!175 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140657 () Bool)

(declare-fun Unit!4434 () Unit!4395)

(assert (=> b!140657 (= e!91707 Unit!4434)))

(declare-fun b!140658 () Bool)

(assert (=> b!140658 (= e!91708 (isDefined!129 (getValueByKey!175 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43877 c!26375) b!140656))

(assert (= (and d!43877 (not c!26375)) b!140657))

(assert (= (and d!43877 (not res!67210)) b!140658))

(declare-fun m!168417 () Bool)

(assert (=> d!43877 m!168417))

(declare-fun m!168419 () Bool)

(assert (=> b!140656 m!168419))

(assert (=> b!140656 m!167457))

(assert (=> b!140656 m!167457))

(declare-fun m!168421 () Bool)

(assert (=> b!140656 m!168421))

(assert (=> b!140658 m!167457))

(assert (=> b!140658 m!167457))

(assert (=> b!140658 m!168421))

(assert (=> d!43559 d!43877))

(declare-fun b!140661 () Bool)

(declare-fun e!91710 () Option!181)

(assert (=> b!140661 (= e!91710 (getValueByKey!175 (t!6360 lt!73543) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140660 () Bool)

(declare-fun e!91709 () Option!181)

(assert (=> b!140660 (= e!91709 e!91710)))

(declare-fun c!26377 () Bool)

(assert (=> b!140660 (= c!26377 (and ((_ is Cons!1760) lt!73543) (not (= (_1!1352 (h!2367 lt!73543)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140662 () Bool)

(assert (=> b!140662 (= e!91710 None!179)))

(declare-fun b!140659 () Bool)

(assert (=> b!140659 (= e!91709 (Some!180 (_2!1352 (h!2367 lt!73543))))))

(declare-fun c!26376 () Bool)

(declare-fun d!43879 () Bool)

(assert (=> d!43879 (= c!26376 (and ((_ is Cons!1760) lt!73543) (= (_1!1352 (h!2367 lt!73543)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43879 (= (getValueByKey!175 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91709)))

(assert (= (and d!43879 c!26376) b!140659))

(assert (= (and d!43879 (not c!26376)) b!140660))

(assert (= (and b!140660 c!26377) b!140661))

(assert (= (and b!140660 (not c!26377)) b!140662))

(declare-fun m!168423 () Bool)

(assert (=> b!140661 m!168423))

(assert (=> d!43559 d!43879))

(declare-fun d!43881 () Bool)

(assert (=> d!43881 (= (getValueByKey!175 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!73810 () Unit!4395)

(assert (=> d!43881 (= lt!73810 (choose!873 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!91711 () Bool)

(assert (=> d!43881 e!91711))

(declare-fun res!67211 () Bool)

(assert (=> d!43881 (=> (not res!67211) (not e!91711))))

(assert (=> d!43881 (= res!67211 (isStrictlySorted!320 lt!73543))))

(assert (=> d!43881 (= (lemmaContainsTupThenGetReturnValue!91 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73810)))

(declare-fun b!140663 () Bool)

(declare-fun res!67212 () Bool)

(assert (=> b!140663 (=> (not res!67212) (not e!91711))))

(assert (=> b!140663 (= res!67212 (containsKey!179 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140664 () Bool)

(assert (=> b!140664 (= e!91711 (contains!923 lt!73543 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!43881 res!67211) b!140663))

(assert (= (and b!140663 res!67212) b!140664))

(assert (=> d!43881 m!167451))

(declare-fun m!168425 () Bool)

(assert (=> d!43881 m!168425))

(declare-fun m!168427 () Bool)

(assert (=> d!43881 m!168427))

(declare-fun m!168429 () Bool)

(assert (=> b!140663 m!168429))

(declare-fun m!168431 () Bool)

(assert (=> b!140664 m!168431))

(assert (=> d!43559 d!43881))

(declare-fun d!43883 () Bool)

(declare-fun e!91712 () Bool)

(assert (=> d!43883 e!91712))

(declare-fun res!67214 () Bool)

(assert (=> d!43883 (=> (not res!67214) (not e!91712))))

(declare-fun lt!73811 () List!1764)

(assert (=> d!43883 (= res!67214 (isStrictlySorted!320 lt!73811))))

(declare-fun e!91714 () List!1764)

(assert (=> d!43883 (= lt!73811 e!91714)))

(declare-fun c!26378 () Bool)

(assert (=> d!43883 (= c!26378 (and ((_ is Cons!1760) (toList!889 lt!73149)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73149))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43883 (isStrictlySorted!320 (toList!889 lt!73149))))

(assert (=> d!43883 (= (insertStrictlySorted!93 (toList!889 lt!73149) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73811)))

(declare-fun b!140665 () Bool)

(assert (=> b!140665 (= e!91712 (contains!923 lt!73811 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!91715 () List!1764)

(declare-fun bm!15622 () Bool)

(declare-fun call!15625 () List!1764)

(assert (=> bm!15622 (= call!15625 ($colon$colon!93 e!91715 (ite c!26378 (h!2367 (toList!889 lt!73149)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26381 () Bool)

(assert (=> bm!15622 (= c!26381 c!26378)))

(declare-fun b!140666 () Bool)

(assert (=> b!140666 (= e!91714 call!15625)))

(declare-fun b!140667 () Bool)

(assert (=> b!140667 (= e!91715 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73149)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140668 () Bool)

(declare-fun e!91716 () List!1764)

(declare-fun call!15626 () List!1764)

(assert (=> b!140668 (= e!91716 call!15626)))

(declare-fun bm!15623 () Bool)

(assert (=> bm!15623 (= call!15626 call!15625)))

(declare-fun b!140669 () Bool)

(declare-fun e!91713 () List!1764)

(declare-fun call!15627 () List!1764)

(assert (=> b!140669 (= e!91713 call!15627)))

(declare-fun b!140670 () Bool)

(declare-fun c!26380 () Bool)

(assert (=> b!140670 (= c!26380 (and ((_ is Cons!1760) (toList!889 lt!73149)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73149))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!140670 (= e!91716 e!91713)))

(declare-fun b!140671 () Bool)

(assert (=> b!140671 (= e!91714 e!91716)))

(declare-fun c!26379 () Bool)

(assert (=> b!140671 (= c!26379 (and ((_ is Cons!1760) (toList!889 lt!73149)) (= (_1!1352 (h!2367 (toList!889 lt!73149))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140672 () Bool)

(assert (=> b!140672 (= e!91715 (ite c!26379 (t!6360 (toList!889 lt!73149)) (ite c!26380 (Cons!1760 (h!2367 (toList!889 lt!73149)) (t!6360 (toList!889 lt!73149))) Nil!1761)))))

(declare-fun bm!15624 () Bool)

(assert (=> bm!15624 (= call!15627 call!15626)))

(declare-fun b!140673 () Bool)

(declare-fun res!67213 () Bool)

(assert (=> b!140673 (=> (not res!67213) (not e!91712))))

(assert (=> b!140673 (= res!67213 (containsKey!179 lt!73811 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140674 () Bool)

(assert (=> b!140674 (= e!91713 call!15627)))

(assert (= (and d!43883 c!26378) b!140666))

(assert (= (and d!43883 (not c!26378)) b!140671))

(assert (= (and b!140671 c!26379) b!140668))

(assert (= (and b!140671 (not c!26379)) b!140670))

(assert (= (and b!140670 c!26380) b!140674))

(assert (= (and b!140670 (not c!26380)) b!140669))

(assert (= (or b!140674 b!140669) bm!15624))

(assert (= (or b!140668 bm!15624) bm!15623))

(assert (= (or b!140666 bm!15623) bm!15622))

(assert (= (and bm!15622 c!26381) b!140667))

(assert (= (and bm!15622 (not c!26381)) b!140672))

(assert (= (and d!43883 res!67214) b!140673))

(assert (= (and b!140673 res!67213) b!140665))

(declare-fun m!168433 () Bool)

(assert (=> b!140665 m!168433))

(declare-fun m!168435 () Bool)

(assert (=> b!140673 m!168435))

(declare-fun m!168437 () Bool)

(assert (=> b!140667 m!168437))

(declare-fun m!168439 () Bool)

(assert (=> bm!15622 m!168439))

(declare-fun m!168441 () Bool)

(assert (=> d!43883 m!168441))

(declare-fun m!168443 () Bool)

(assert (=> d!43883 m!168443))

(assert (=> d!43559 d!43883))

(declare-fun d!43885 () Bool)

(assert (=> d!43885 (= (inRange!0 (index!3320 lt!73505) (mask!7280 newMap!16)) (and (bvsge (index!3320 lt!73505) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73505) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!140160 d!43885))

(declare-fun d!43887 () Bool)

(assert (=> d!43887 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73152)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73152)))))

(assert (=> d!43571 d!43887))

(declare-fun e!91718 () Option!181)

(declare-fun b!140677 () Bool)

(assert (=> b!140677 (= e!91718 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73152))))

(declare-fun b!140676 () Bool)

(declare-fun e!91717 () Option!181)

(assert (=> b!140676 (= e!91717 e!91718)))

(declare-fun c!26383 () Bool)

(assert (=> b!140676 (= c!26383 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73152))))))

(declare-fun b!140678 () Bool)

(assert (=> b!140678 (= e!91718 None!179)))

(declare-fun b!140675 () Bool)

(assert (=> b!140675 (= e!91717 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun d!43889 () Bool)

(declare-fun c!26382 () Bool)

(assert (=> d!43889 (= c!26382 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73152)))))

(assert (=> d!43889 (= (getValueByKey!175 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73152) e!91717)))

(assert (= (and d!43889 c!26382) b!140675))

(assert (= (and d!43889 (not c!26382)) b!140676))

(assert (= (and b!140676 c!26383) b!140677))

(assert (= (and b!140676 (not c!26383)) b!140678))

(declare-fun m!168445 () Bool)

(assert (=> b!140677 m!168445))

(assert (=> d!43571 d!43889))

(declare-fun d!43891 () Bool)

(assert (=> d!43891 (= (apply!120 lt!73482 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5889 () Bool)

(assert (= bs!5889 d!43891))

(assert (=> bs!5889 m!168303))

(assert (=> bs!5889 m!168303))

(declare-fun m!168447 () Bool)

(assert (=> bs!5889 m!168447))

(assert (=> b!140147 d!43891))

(declare-fun d!43893 () Bool)

(assert (=> d!43893 (= (apply!120 lt!73450 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5890 () Bool)

(assert (= bs!5890 d!43893))

(assert (=> bs!5890 m!168311))

(assert (=> bs!5890 m!168311))

(declare-fun m!168449 () Bool)

(assert (=> bs!5890 m!168449))

(assert (=> b!140100 d!43893))

(declare-fun d!43895 () Bool)

(declare-fun res!67215 () Bool)

(declare-fun e!91719 () Bool)

(assert (=> d!43895 (=> res!67215 e!91719)))

(assert (=> d!43895 (= res!67215 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73142)))))

(assert (=> d!43895 (= (containsKey!179 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142) e!91719)))

(declare-fun b!140679 () Bool)

(declare-fun e!91720 () Bool)

(assert (=> b!140679 (= e!91719 e!91720)))

(declare-fun res!67216 () Bool)

(assert (=> b!140679 (=> (not res!67216) (not e!91720))))

(assert (=> b!140679 (= res!67216 (and (or (not ((_ is Cons!1760) (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (bvsle (_1!1352 (h!2367 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73142)) ((_ is Cons!1760) (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (bvslt (_1!1352 (h!2367 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73142)))))

(declare-fun b!140680 () Bool)

(assert (=> b!140680 (= e!91720 (containsKey!179 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73142))))

(assert (= (and d!43895 (not res!67215)) b!140679))

(assert (= (and b!140679 res!67216) b!140680))

(declare-fun m!168451 () Bool)

(assert (=> b!140680 m!168451))

(assert (=> d!43569 d!43895))

(declare-fun d!43897 () Bool)

(declare-fun e!91723 () Bool)

(assert (=> d!43897 e!91723))

(declare-fun res!67219 () Bool)

(assert (=> d!43897 (=> (not res!67219) (not e!91723))))

(assert (=> d!43897 (= res!67219 (and (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2586 (_keys!4699 newMap!16)))))))

(declare-fun lt!73814 () Unit!4395)

(declare-fun choose!41 (array!4896 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1763) Unit!4395)

(assert (=> d!43897 (= lt!73814 (choose!41 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) lt!73334 lt!73336))))

(assert (=> d!43897 (bvslt (size!2586 (_keys!4699 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!43897 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) lt!73334 lt!73336) lt!73814)))

(declare-fun b!140683 () Bool)

(assert (=> b!140683 (= e!91723 (arrayNoDuplicates!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73334 lt!73336))))

(assert (= (and d!43897 res!67219) b!140683))

(assert (=> d!43897 m!166733))

(declare-fun m!168453 () Bool)

(assert (=> d!43897 m!168453))

(assert (=> b!140683 m!167023))

(assert (=> b!140683 m!167035))

(assert (=> d!43471 d!43897))

(assert (=> d!43471 d!43437))

(declare-fun b!140684 () Bool)

(declare-fun e!91725 () (_ BitVec 32))

(declare-fun call!15628 () (_ BitVec 32))

(assert (=> b!140684 (= e!91725 (bvadd #b00000000000000000000000000000001 call!15628))))

(declare-fun b!140685 () Bool)

(assert (=> b!140685 (= e!91725 call!15628)))

(declare-fun b!140686 () Bool)

(declare-fun e!91724 () (_ BitVec 32))

(assert (=> b!140686 (= e!91724 e!91725)))

(declare-fun c!26385 () Bool)

(assert (=> b!140686 (= c!26385 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140687 () Bool)

(assert (=> b!140687 (= e!91724 #b00000000000000000000000000000000)))

(declare-fun lt!73815 () (_ BitVec 32))

(declare-fun d!43899 () Bool)

(assert (=> d!43899 (and (bvsge lt!73815 #b00000000000000000000000000000000) (bvsle lt!73815 (bvsub (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!43899 (= lt!73815 e!91724)))

(declare-fun c!26384 () Bool)

(assert (=> d!43899 (= c!26384 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43899 (and (bvsle #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 newMap!16)) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!43899 (= (arrayCountValidKeys!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) lt!73815)))

(declare-fun bm!15625 () Bool)

(assert (=> bm!15625 (= call!15628 (arrayCountValidKeys!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (= (and d!43899 c!26384) b!140687))

(assert (= (and d!43899 (not c!26384)) b!140686))

(assert (= (and b!140686 c!26385) b!140684))

(assert (= (and b!140686 (not c!26385)) b!140685))

(assert (= (or b!140684 b!140685) bm!15625))

(declare-fun m!168455 () Bool)

(assert (=> b!140686 m!168455))

(assert (=> b!140686 m!168455))

(declare-fun m!168457 () Bool)

(assert (=> b!140686 m!168457))

(declare-fun m!168459 () Bool)

(assert (=> bm!15625 m!168459))

(assert (=> d!43471 d!43899))

(declare-fun d!43901 () Bool)

(assert (=> d!43901 (arrayContainsKey!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!73816 () Unit!4395)

(assert (=> d!43901 (= lt!73816 (choose!13 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))

(assert (=> d!43901 (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000)))

(assert (=> d!43901 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) lt!73816)))

(declare-fun bs!5891 () Bool)

(assert (= bs!5891 d!43901))

(assert (=> bs!5891 m!166733))

(assert (=> bs!5891 m!167041))

(assert (=> bs!5891 m!166733))

(declare-fun m!168461 () Bool)

(assert (=> bs!5891 m!168461))

(assert (=> d!43471 d!43901))

(declare-fun b!140688 () Bool)

(declare-fun e!91727 () (_ BitVec 32))

(declare-fun call!15629 () (_ BitVec 32))

(assert (=> b!140688 (= e!91727 (bvadd #b00000000000000000000000000000001 call!15629))))

(declare-fun b!140689 () Bool)

(assert (=> b!140689 (= e!91727 call!15629)))

(declare-fun b!140690 () Bool)

(declare-fun e!91726 () (_ BitVec 32))

(assert (=> b!140690 (= e!91726 e!91727)))

(declare-fun c!26387 () Bool)

(assert (=> b!140690 (= c!26387 (validKeyInArray!0 (select (arr!2314 lt!73355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(declare-fun b!140691 () Bool)

(assert (=> b!140691 (= e!91726 #b00000000000000000000000000000000)))

(declare-fun lt!73817 () (_ BitVec 32))

(declare-fun d!43903 () Bool)

(assert (=> d!43903 (and (bvsge lt!73817 #b00000000000000000000000000000000) (bvsle lt!73817 (bvsub (size!2586 lt!73355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (=> d!43903 (= lt!73817 e!91726)))

(declare-fun c!26386 () Bool)

(assert (=> d!43903 (= c!26386 (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)))))

(assert (=> d!43903 (and (bvsle (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)) (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001) (size!2586 lt!73355)))))

(assert (=> d!43903 (= (arrayCountValidKeys!0 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)) lt!73817)))

(declare-fun bm!15626 () Bool)

(assert (=> bm!15626 (= call!15629 (arrayCountValidKeys!0 lt!73355 (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)))))

(assert (= (and d!43903 c!26386) b!140691))

(assert (= (and d!43903 (not c!26386)) b!140690))

(assert (= (and b!140690 c!26387) b!140688))

(assert (= (and b!140690 (not c!26387)) b!140689))

(assert (= (or b!140688 b!140689) bm!15626))

(declare-fun m!168463 () Bool)

(assert (=> b!140690 m!168463))

(assert (=> b!140690 m!168463))

(declare-fun m!168465 () Bool)

(assert (=> b!140690 m!168465))

(declare-fun m!168467 () Bool)

(assert (=> bm!15626 m!168467))

(assert (=> d!43471 d!43903))

(declare-fun d!43905 () Bool)

(declare-fun e!91728 () Bool)

(assert (=> d!43905 e!91728))

(declare-fun res!67221 () Bool)

(assert (=> d!43905 (=> (not res!67221) (not e!91728))))

(declare-fun lt!73820 () ListLongMap!1747)

(assert (=> d!43905 (= res!67221 (contains!921 lt!73820 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73821 () List!1764)

(assert (=> d!43905 (= lt!73820 (ListLongMap!1748 lt!73821))))

(declare-fun lt!73818 () Unit!4395)

(declare-fun lt!73819 () Unit!4395)

(assert (=> d!43905 (= lt!73818 lt!73819)))

(assert (=> d!43905 (= (getValueByKey!175 lt!73821 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43905 (= lt!73819 (lemmaContainsTupThenGetReturnValue!91 lt!73821 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43905 (= lt!73821 (insertStrictlySorted!93 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43905 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73820)))

(declare-fun b!140692 () Bool)

(declare-fun res!67220 () Bool)

(assert (=> b!140692 (=> (not res!67220) (not e!91728))))

(assert (=> b!140692 (= res!67220 (= (getValueByKey!175 (toList!889 lt!73820) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140693 () Bool)

(assert (=> b!140693 (= e!91728 (contains!923 (toList!889 lt!73820) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43905 res!67221) b!140692))

(assert (= (and b!140692 res!67220) b!140693))

(declare-fun m!168469 () Bool)

(assert (=> d!43905 m!168469))

(declare-fun m!168471 () Bool)

(assert (=> d!43905 m!168471))

(declare-fun m!168473 () Bool)

(assert (=> d!43905 m!168473))

(declare-fun m!168475 () Bool)

(assert (=> d!43905 m!168475))

(declare-fun m!168477 () Bool)

(assert (=> b!140692 m!168477))

(declare-fun m!168479 () Bool)

(assert (=> b!140693 m!168479))

(assert (=> d!43471 d!43905))

(declare-fun bm!15627 () Bool)

(declare-fun call!15635 () ListLongMap!1747)

(declare-fun call!15634 () ListLongMap!1747)

(assert (=> bm!15627 (= call!15635 call!15634)))

(declare-fun b!140694 () Bool)

(declare-fun e!91735 () ListLongMap!1747)

(declare-fun call!15630 () ListLongMap!1747)

(assert (=> b!140694 (= e!91735 call!15630)))

(declare-fun bm!15628 () Bool)

(declare-fun call!15631 () ListLongMap!1747)

(assert (=> bm!15628 (= call!15631 (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!140695 () Bool)

(declare-fun e!91733 () Unit!4395)

(declare-fun lt!73839 () Unit!4395)

(assert (=> b!140695 (= e!91733 lt!73839)))

(declare-fun lt!73835 () ListLongMap!1747)

(assert (=> b!140695 (= lt!73835 (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73828 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73828 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73833 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73833 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73830 () Unit!4395)

(assert (=> b!140695 (= lt!73830 (addStillContains!96 lt!73835 lt!73828 (zeroValue!2790 newMap!16) lt!73833))))

(assert (=> b!140695 (contains!921 (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))) lt!73833)))

(declare-fun lt!73838 () Unit!4395)

(assert (=> b!140695 (= lt!73838 lt!73830)))

(declare-fun lt!73837 () ListLongMap!1747)

(assert (=> b!140695 (= lt!73837 (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73841 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73841 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73843 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73843 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73834 () Unit!4395)

(assert (=> b!140695 (= lt!73834 (addApplyDifferent!96 lt!73837 lt!73841 (minValue!2790 newMap!16) lt!73843))))

(assert (=> b!140695 (= (apply!120 (+!174 lt!73837 (tuple2!2685 lt!73841 (minValue!2790 newMap!16))) lt!73843) (apply!120 lt!73837 lt!73843))))

(declare-fun lt!73822 () Unit!4395)

(assert (=> b!140695 (= lt!73822 lt!73834)))

(declare-fun lt!73831 () ListLongMap!1747)

(assert (=> b!140695 (= lt!73831 (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73836 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73836 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73842 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73842 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73829 () Unit!4395)

(assert (=> b!140695 (= lt!73829 (addApplyDifferent!96 lt!73831 lt!73836 (zeroValue!2790 newMap!16) lt!73842))))

(assert (=> b!140695 (= (apply!120 (+!174 lt!73831 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))) lt!73842) (apply!120 lt!73831 lt!73842))))

(declare-fun lt!73827 () Unit!4395)

(assert (=> b!140695 (= lt!73827 lt!73829)))

(declare-fun lt!73840 () ListLongMap!1747)

(assert (=> b!140695 (= lt!73840 (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73823 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73823 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73832 () (_ BitVec 64))

(assert (=> b!140695 (= lt!73832 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!140695 (= lt!73839 (addApplyDifferent!96 lt!73840 lt!73823 (minValue!2790 newMap!16) lt!73832))))

(assert (=> b!140695 (= (apply!120 (+!174 lt!73840 (tuple2!2685 lt!73823 (minValue!2790 newMap!16))) lt!73832) (apply!120 lt!73840 lt!73832))))

(declare-fun b!140696 () Bool)

(declare-fun res!67226 () Bool)

(declare-fun e!91729 () Bool)

(assert (=> b!140696 (=> (not res!67226) (not e!91729))))

(declare-fun e!91739 () Bool)

(assert (=> b!140696 (= res!67226 e!91739)))

(declare-fun res!67223 () Bool)

(assert (=> b!140696 (=> res!67223 e!91739)))

(declare-fun e!91736 () Bool)

(assert (=> b!140696 (= res!67223 (not e!91736))))

(declare-fun res!67222 () Bool)

(assert (=> b!140696 (=> (not res!67222) (not e!91736))))

(assert (=> b!140696 (= res!67222 (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun b!140697 () Bool)

(assert (=> b!140697 (= e!91735 call!15635)))

(declare-fun b!140698 () Bool)

(declare-fun e!91731 () ListLongMap!1747)

(declare-fun e!91738 () ListLongMap!1747)

(assert (=> b!140698 (= e!91731 e!91738)))

(declare-fun c!26392 () Bool)

(assert (=> b!140698 (= c!26392 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15629 () Bool)

(declare-fun c!26389 () Bool)

(declare-fun call!15633 () ListLongMap!1747)

(assert (=> bm!15629 (= call!15634 (+!174 (ite c!26389 call!15631 (ite c!26392 call!15633 call!15630)) (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140700 () Bool)

(declare-fun Unit!4435 () Unit!4395)

(assert (=> b!140700 (= e!91733 Unit!4435)))

(declare-fun b!140701 () Bool)

(declare-fun e!91740 () Bool)

(declare-fun e!91732 () Bool)

(assert (=> b!140701 (= e!91740 e!91732)))

(declare-fun res!67227 () Bool)

(declare-fun call!15632 () Bool)

(assert (=> b!140701 (= res!67227 call!15632)))

(assert (=> b!140701 (=> (not res!67227) (not e!91732))))

(declare-fun b!140702 () Bool)

(declare-fun e!91741 () Bool)

(assert (=> b!140702 (= e!91729 e!91741)))

(declare-fun c!26388 () Bool)

(assert (=> b!140702 (= c!26388 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140703 () Bool)

(assert (=> b!140703 (= e!91736 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140704 () Bool)

(declare-fun lt!73826 () ListLongMap!1747)

(assert (=> b!140704 (= e!91732 (= (apply!120 lt!73826 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15630 () Bool)

(assert (=> bm!15630 (= call!15630 call!15633)))

(declare-fun b!140705 () Bool)

(declare-fun call!15636 () Bool)

(assert (=> b!140705 (= e!91741 (not call!15636))))

(declare-fun b!140706 () Bool)

(declare-fun e!91737 () Bool)

(assert (=> b!140706 (= e!91737 (= (apply!120 lt!73826 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun bm!15631 () Bool)

(assert (=> bm!15631 (= call!15633 call!15631)))

(declare-fun b!140707 () Bool)

(declare-fun e!91730 () Bool)

(assert (=> b!140707 (= e!91739 e!91730)))

(declare-fun res!67230 () Bool)

(assert (=> b!140707 (=> (not res!67230) (not e!91730))))

(assert (=> b!140707 (= res!67230 (contains!921 lt!73826 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!140707 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun bm!15632 () Bool)

(assert (=> bm!15632 (= call!15632 (contains!921 lt!73826 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140708 () Bool)

(assert (=> b!140708 (= e!91730 (= (apply!120 lt!73826 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140708 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))))))))

(assert (=> b!140708 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun b!140709 () Bool)

(declare-fun e!91734 () Bool)

(assert (=> b!140709 (= e!91734 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140710 () Bool)

(declare-fun c!26393 () Bool)

(assert (=> b!140710 (= c!26393 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140710 (= e!91738 e!91735)))

(declare-fun b!140711 () Bool)

(assert (=> b!140711 (= e!91731 (+!174 call!15634 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun d!43907 () Bool)

(assert (=> d!43907 e!91729))

(declare-fun res!67224 () Bool)

(assert (=> d!43907 (=> (not res!67224) (not e!91729))))

(assert (=> d!43907 (= res!67224 (or (bvsge #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))))

(declare-fun lt!73825 () ListLongMap!1747)

(assert (=> d!43907 (= lt!73826 lt!73825)))

(declare-fun lt!73824 () Unit!4395)

(assert (=> d!43907 (= lt!73824 e!91733)))

(declare-fun c!26391 () Bool)

(assert (=> d!43907 (= c!26391 e!91734)))

(declare-fun res!67228 () Bool)

(assert (=> d!43907 (=> (not res!67228) (not e!91734))))

(assert (=> d!43907 (= res!67228 (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!43907 (= lt!73825 e!91731)))

(assert (=> d!43907 (= c!26389 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43907 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43907 (= (getCurrentListMap!555 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73826)))

(declare-fun b!140699 () Bool)

(assert (=> b!140699 (= e!91738 call!15635)))

(declare-fun bm!15633 () Bool)

(assert (=> bm!15633 (= call!15636 (contains!921 lt!73826 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140712 () Bool)

(assert (=> b!140712 (= e!91741 e!91737)))

(declare-fun res!67229 () Bool)

(assert (=> b!140712 (= res!67229 call!15636)))

(assert (=> b!140712 (=> (not res!67229) (not e!91737))))

(declare-fun b!140713 () Bool)

(assert (=> b!140713 (= e!91740 (not call!15632))))

(declare-fun b!140714 () Bool)

(declare-fun res!67225 () Bool)

(assert (=> b!140714 (=> (not res!67225) (not e!91729))))

(assert (=> b!140714 (= res!67225 e!91740)))

(declare-fun c!26390 () Bool)

(assert (=> b!140714 (= c!26390 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43907 c!26389) b!140711))

(assert (= (and d!43907 (not c!26389)) b!140698))

(assert (= (and b!140698 c!26392) b!140699))

(assert (= (and b!140698 (not c!26392)) b!140710))

(assert (= (and b!140710 c!26393) b!140697))

(assert (= (and b!140710 (not c!26393)) b!140694))

(assert (= (or b!140697 b!140694) bm!15630))

(assert (= (or b!140699 bm!15630) bm!15631))

(assert (= (or b!140699 b!140697) bm!15627))

(assert (= (or b!140711 bm!15631) bm!15628))

(assert (= (or b!140711 bm!15627) bm!15629))

(assert (= (and d!43907 res!67228) b!140709))

(assert (= (and d!43907 c!26391) b!140695))

(assert (= (and d!43907 (not c!26391)) b!140700))

(assert (= (and d!43907 res!67224) b!140696))

(assert (= (and b!140696 res!67222) b!140703))

(assert (= (and b!140696 (not res!67223)) b!140707))

(assert (= (and b!140707 res!67230) b!140708))

(assert (= (and b!140696 res!67226) b!140714))

(assert (= (and b!140714 c!26390) b!140701))

(assert (= (and b!140714 (not c!26390)) b!140713))

(assert (= (and b!140701 res!67227) b!140704))

(assert (= (or b!140701 b!140713) bm!15632))

(assert (= (and b!140714 res!67225) b!140702))

(assert (= (and b!140702 c!26388) b!140712))

(assert (= (and b!140702 (not c!26388)) b!140705))

(assert (= (and b!140712 res!67229) b!140706))

(assert (= (or b!140712 b!140705) bm!15633))

(declare-fun b_lambda!6331 () Bool)

(assert (=> (not b_lambda!6331) (not b!140708)))

(assert (=> b!140708 t!6366))

(declare-fun b_and!8817 () Bool)

(assert (= b_and!8813 (and (=> t!6366 result!4203) b_and!8817)))

(assert (=> b!140708 t!6368))

(declare-fun b_and!8819 () Bool)

(assert (= b_and!8815 (and (=> t!6368 result!4205) b_and!8819)))

(declare-fun m!168481 () Bool)

(assert (=> b!140711 m!168481))

(declare-fun m!168483 () Bool)

(assert (=> bm!15628 m!168483))

(assert (=> d!43907 m!166961))

(declare-fun m!168485 () Bool)

(assert (=> b!140706 m!168485))

(declare-fun m!168487 () Bool)

(assert (=> bm!15629 m!168487))

(assert (=> b!140708 m!168455))

(assert (=> b!140708 m!168455))

(declare-fun m!168489 () Bool)

(assert (=> b!140708 m!168489))

(assert (=> b!140708 m!166971))

(declare-fun m!168491 () Bool)

(assert (=> b!140708 m!168491))

(assert (=> b!140708 m!166971))

(declare-fun m!168493 () Bool)

(assert (=> b!140708 m!168493))

(assert (=> b!140708 m!168491))

(declare-fun m!168495 () Bool)

(assert (=> bm!15632 m!168495))

(declare-fun m!168497 () Bool)

(assert (=> b!140704 m!168497))

(assert (=> b!140703 m!168455))

(assert (=> b!140703 m!168455))

(assert (=> b!140703 m!168457))

(assert (=> b!140707 m!168455))

(assert (=> b!140707 m!168455))

(declare-fun m!168499 () Bool)

(assert (=> b!140707 m!168499))

(assert (=> b!140709 m!168455))

(assert (=> b!140709 m!168455))

(assert (=> b!140709 m!168457))

(declare-fun m!168501 () Bool)

(assert (=> bm!15633 m!168501))

(declare-fun m!168503 () Bool)

(assert (=> b!140695 m!168503))

(declare-fun m!168505 () Bool)

(assert (=> b!140695 m!168505))

(declare-fun m!168507 () Bool)

(assert (=> b!140695 m!168507))

(declare-fun m!168509 () Bool)

(assert (=> b!140695 m!168509))

(declare-fun m!168511 () Bool)

(assert (=> b!140695 m!168511))

(declare-fun m!168513 () Bool)

(assert (=> b!140695 m!168513))

(declare-fun m!168515 () Bool)

(assert (=> b!140695 m!168515))

(declare-fun m!168517 () Bool)

(assert (=> b!140695 m!168517))

(assert (=> b!140695 m!168517))

(declare-fun m!168519 () Bool)

(assert (=> b!140695 m!168519))

(assert (=> b!140695 m!168483))

(declare-fun m!168521 () Bool)

(assert (=> b!140695 m!168521))

(declare-fun m!168523 () Bool)

(assert (=> b!140695 m!168523))

(assert (=> b!140695 m!168509))

(declare-fun m!168525 () Bool)

(assert (=> b!140695 m!168525))

(declare-fun m!168527 () Bool)

(assert (=> b!140695 m!168527))

(assert (=> b!140695 m!168455))

(declare-fun m!168529 () Bool)

(assert (=> b!140695 m!168529))

(assert (=> b!140695 m!168503))

(declare-fun m!168531 () Bool)

(assert (=> b!140695 m!168531))

(assert (=> b!140695 m!168521))

(assert (=> d!43471 d!43907))

(declare-fun d!43909 () Bool)

(declare-fun res!67231 () Bool)

(declare-fun e!91742 () Bool)

(assert (=> d!43909 (=> res!67231 e!91742)))

(assert (=> d!43909 (= res!67231 (= (select (arr!2314 lt!73348) #b00000000000000000000000000000000) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43909 (= (arrayContainsKey!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000) e!91742)))

(declare-fun b!140715 () Bool)

(declare-fun e!91743 () Bool)

(assert (=> b!140715 (= e!91742 e!91743)))

(declare-fun res!67232 () Bool)

(assert (=> b!140715 (=> (not res!67232) (not e!91743))))

(assert (=> b!140715 (= res!67232 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 lt!73348)))))

(declare-fun b!140716 () Bool)

(assert (=> b!140716 (= e!91743 (arrayContainsKey!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43909 (not res!67231)) b!140715))

(assert (= (and b!140715 res!67232) b!140716))

(declare-fun m!168533 () Bool)

(assert (=> d!43909 m!168533))

(assert (=> b!140716 m!166733))

(declare-fun m!168535 () Bool)

(assert (=> b!140716 m!168535))

(assert (=> d!43471 d!43909))

(declare-fun d!43911 () Bool)

(declare-fun e!91744 () Bool)

(assert (=> d!43911 e!91744))

(declare-fun res!67233 () Bool)

(assert (=> d!43911 (=> (not res!67233) (not e!91744))))

(assert (=> d!43911 (= res!67233 (and (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2586 lt!73346))))))

(declare-fun lt!73844 () Unit!4395)

(assert (=> d!43911 (= lt!73844 (choose!864 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43911 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43911 (= (lemmaValidKeyInArrayIsInListMap!123 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (defaultEntry!2940 newMap!16)) lt!73844)))

(declare-fun b!140717 () Bool)

(assert (=> b!140717 (= e!91744 (contains!921 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 lt!73346) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (= (and d!43911 res!67233) b!140717))

(declare-fun m!168537 () Bool)

(assert (=> d!43911 m!168537))

(assert (=> d!43911 m!166961))

(assert (=> b!140717 m!167051))

(declare-fun m!168539 () Bool)

(assert (=> b!140717 m!168539))

(assert (=> b!140717 m!167051))

(assert (=> b!140717 m!168539))

(declare-fun m!168541 () Bool)

(assert (=> b!140717 m!168541))

(assert (=> d!43471 d!43911))

(declare-fun d!43913 () Bool)

(declare-fun e!91746 () Bool)

(assert (=> d!43913 e!91746))

(declare-fun res!67234 () Bool)

(assert (=> d!43913 (=> res!67234 e!91746)))

(declare-fun lt!73845 () Bool)

(assert (=> d!43913 (= res!67234 (not lt!73845))))

(declare-fun lt!73848 () Bool)

(assert (=> d!43913 (= lt!73845 lt!73848)))

(declare-fun lt!73846 () Unit!4395)

(declare-fun e!91745 () Unit!4395)

(assert (=> d!43913 (= lt!73846 e!91745)))

(declare-fun c!26394 () Bool)

(assert (=> d!43913 (= c!26394 lt!73848)))

(assert (=> d!43913 (= lt!73848 (containsKey!179 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43913 (= (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73845)))

(declare-fun b!140718 () Bool)

(declare-fun lt!73847 () Unit!4395)

(assert (=> b!140718 (= e!91745 lt!73847)))

(assert (=> b!140718 (= lt!73847 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!140718 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140719 () Bool)

(declare-fun Unit!4436 () Unit!4395)

(assert (=> b!140719 (= e!91745 Unit!4436)))

(declare-fun b!140720 () Bool)

(assert (=> b!140720 (= e!91746 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (= (and d!43913 c!26394) b!140718))

(assert (= (and d!43913 (not c!26394)) b!140719))

(assert (= (and d!43913 (not res!67234)) b!140720))

(assert (=> d!43913 m!166733))

(declare-fun m!168543 () Bool)

(assert (=> d!43913 m!168543))

(assert (=> b!140718 m!166733))

(declare-fun m!168545 () Bool)

(assert (=> b!140718 m!168545))

(assert (=> b!140718 m!166733))

(declare-fun m!168547 () Bool)

(assert (=> b!140718 m!168547))

(assert (=> b!140718 m!168547))

(declare-fun m!168549 () Bool)

(assert (=> b!140718 m!168549))

(assert (=> b!140720 m!166733))

(assert (=> b!140720 m!168547))

(assert (=> b!140720 m!168547))

(assert (=> b!140720 m!168549))

(assert (=> d!43471 d!43913))

(assert (=> d!43471 d!43525))

(declare-fun bm!15634 () Bool)

(declare-fun c!26395 () Bool)

(declare-fun call!15637 () Bool)

(assert (=> bm!15634 (= call!15637 (arrayNoDuplicates!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (bvadd lt!73334 #b00000000000000000000000000000001) (ite c!26395 (Cons!1759 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334) lt!73336) lt!73336)))))

(declare-fun b!140722 () Bool)

(declare-fun e!91748 () Bool)

(declare-fun e!91749 () Bool)

(assert (=> b!140722 (= e!91748 e!91749)))

(assert (=> b!140722 (= c!26395 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)))))

(declare-fun b!140723 () Bool)

(assert (=> b!140723 (= e!91749 call!15637)))

(declare-fun d!43915 () Bool)

(declare-fun res!67237 () Bool)

(declare-fun e!91750 () Bool)

(assert (=> d!43915 (=> res!67237 e!91750)))

(assert (=> d!43915 (= res!67237 (bvsge lt!73334 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!43915 (= (arrayNoDuplicates!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73334 lt!73336) e!91750)))

(declare-fun b!140721 () Bool)

(declare-fun e!91747 () Bool)

(assert (=> b!140721 (= e!91747 (contains!922 lt!73336 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)))))

(declare-fun b!140724 () Bool)

(assert (=> b!140724 (= e!91750 e!91748)))

(declare-fun res!67235 () Bool)

(assert (=> b!140724 (=> (not res!67235) (not e!91748))))

(assert (=> b!140724 (= res!67235 (not e!91747))))

(declare-fun res!67236 () Bool)

(assert (=> b!140724 (=> (not res!67236) (not e!91747))))

(assert (=> b!140724 (= res!67236 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)))))

(declare-fun b!140725 () Bool)

(assert (=> b!140725 (= e!91749 call!15637)))

(assert (= (and d!43915 (not res!67237)) b!140724))

(assert (= (and b!140724 res!67236) b!140721))

(assert (= (and b!140724 res!67235) b!140722))

(assert (= (and b!140722 c!26395) b!140723))

(assert (= (and b!140722 (not c!26395)) b!140725))

(assert (= (or b!140723 b!140725) bm!15634))

(declare-fun m!168551 () Bool)

(assert (=> bm!15634 m!168551))

(declare-fun m!168553 () Bool)

(assert (=> bm!15634 m!168553))

(assert (=> b!140722 m!168551))

(assert (=> b!140722 m!168551))

(declare-fun m!168555 () Bool)

(assert (=> b!140722 m!168555))

(assert (=> b!140721 m!168551))

(assert (=> b!140721 m!168551))

(declare-fun m!168557 () Bool)

(assert (=> b!140721 m!168557))

(assert (=> b!140724 m!168551))

(assert (=> b!140724 m!168551))

(assert (=> b!140724 m!168555))

(assert (=> d!43471 d!43915))

(assert (=> d!43471 d!43591))

(declare-fun b!140734 () Bool)

(declare-fun res!67247 () Bool)

(declare-fun e!91756 () Bool)

(assert (=> b!140734 (=> (not res!67247) (not e!91756))))

(assert (=> b!140734 (= res!67247 (not (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))))

(declare-fun b!140735 () Bool)

(declare-fun res!67248 () Bool)

(assert (=> b!140735 (=> (not res!67248) (not e!91756))))

(assert (=> b!140735 (= res!67248 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun d!43917 () Bool)

(declare-fun e!91755 () Bool)

(assert (=> d!43917 e!91755))

(declare-fun res!67246 () Bool)

(assert (=> d!43917 (=> (not res!67246) (not e!91755))))

(assert (=> d!43917 (= res!67246 (and (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2586 (_keys!4699 newMap!16)))))))

(declare-fun lt!73851 () Unit!4395)

(declare-fun choose!1 (array!4896 (_ BitVec 32) (_ BitVec 64)) Unit!4395)

(assert (=> d!43917 (= lt!73851 (choose!1 (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!43917 e!91756))

(declare-fun res!67249 () Bool)

(assert (=> d!43917 (=> (not res!67249) (not e!91756))))

(assert (=> d!43917 (= res!67249 (and (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2586 (_keys!4699 newMap!16)))))))

(assert (=> d!43917 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!73851)))

(declare-fun b!140737 () Bool)

(assert (=> b!140737 (= e!91755 (= (arrayCountValidKeys!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!140736 () Bool)

(assert (=> b!140736 (= e!91756 (bvslt (size!2586 (_keys!4699 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!43917 res!67249) b!140734))

(assert (= (and b!140734 res!67247) b!140735))

(assert (= (and b!140735 res!67248) b!140736))

(assert (= (and d!43917 res!67246) b!140737))

(declare-fun m!168559 () Bool)

(assert (=> b!140734 m!168559))

(assert (=> b!140734 m!168559))

(declare-fun m!168561 () Bool)

(assert (=> b!140734 m!168561))

(assert (=> b!140735 m!166733))

(assert (=> b!140735 m!166815))

(assert (=> d!43917 m!166733))

(declare-fun m!168563 () Bool)

(assert (=> d!43917 m!168563))

(assert (=> b!140737 m!167023))

(assert (=> b!140737 m!167029))

(assert (=> b!140737 m!166805))

(assert (=> d!43471 d!43917))

(declare-fun d!43919 () Bool)

(declare-fun e!91759 () Bool)

(assert (=> d!43919 e!91759))

(declare-fun res!67252 () Bool)

(assert (=> d!43919 (=> (not res!67252) (not e!91759))))

(assert (=> d!43919 (= res!67252 (and (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2586 (_keys!4699 newMap!16))) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2587 (_values!2923 newMap!16)))))))

(declare-fun lt!73854 () Unit!4395)

(declare-fun choose!874 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 32) (_ BitVec 64) V!3555 Int) Unit!4395)

(assert (=> d!43919 (= lt!73854 (choose!874 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)))))

(assert (=> d!43919 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43919 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) lt!73854)))

(declare-fun b!140740 () Bool)

(assert (=> b!140740 (= e!91759 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (= (and d!43919 res!67252) b!140740))

(assert (=> d!43919 m!166733))

(assert (=> d!43919 m!166731))

(declare-fun m!168565 () Bool)

(assert (=> d!43919 m!168565))

(assert (=> d!43919 m!166961))

(assert (=> b!140740 m!167025))

(assert (=> b!140740 m!166829))

(assert (=> b!140740 m!167043))

(assert (=> b!140740 m!167023))

(assert (=> b!140740 m!167021))

(assert (=> b!140740 m!166829))

(assert (=> d!43471 d!43919))

(declare-fun d!43921 () Bool)

(declare-fun e!91761 () Bool)

(assert (=> d!43921 e!91761))

(declare-fun res!67253 () Bool)

(assert (=> d!43921 (=> res!67253 e!91761)))

(declare-fun lt!73855 () Bool)

(assert (=> d!43921 (= res!67253 (not lt!73855))))

(declare-fun lt!73858 () Bool)

(assert (=> d!43921 (= lt!73855 lt!73858)))

(declare-fun lt!73856 () Unit!4395)

(declare-fun e!91760 () Unit!4395)

(assert (=> d!43921 (= lt!73856 e!91760)))

(declare-fun c!26396 () Bool)

(assert (=> d!43921 (= c!26396 lt!73858)))

(assert (=> d!43921 (= lt!73858 (containsKey!179 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (=> d!43921 (= (contains!921 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))) lt!73855)))

(declare-fun b!140741 () Bool)

(declare-fun lt!73857 () Unit!4395)

(assert (=> b!140741 (= e!91760 lt!73857)))

(assert (=> b!140741 (= lt!73857 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (=> b!140741 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(declare-fun b!140742 () Bool)

(declare-fun Unit!4437 () Unit!4395)

(assert (=> b!140742 (= e!91760 Unit!4437)))

(declare-fun b!140743 () Bool)

(assert (=> b!140743 (= e!91761 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))))

(assert (= (and d!43921 c!26396) b!140741))

(assert (= (and d!43921 (not c!26396)) b!140742))

(assert (= (and d!43921 (not res!67253)) b!140743))

(assert (=> d!43921 m!167045))

(declare-fun m!168567 () Bool)

(assert (=> d!43921 m!168567))

(assert (=> b!140741 m!167045))

(declare-fun m!168569 () Bool)

(assert (=> b!140741 m!168569))

(assert (=> b!140741 m!167045))

(declare-fun m!168571 () Bool)

(assert (=> b!140741 m!168571))

(assert (=> b!140741 m!168571))

(declare-fun m!168573 () Bool)

(assert (=> b!140741 m!168573))

(assert (=> b!140743 m!167045))

(assert (=> b!140743 m!168571))

(assert (=> b!140743 m!168571))

(assert (=> b!140743 m!168573))

(assert (=> d!43471 d!43921))

(declare-fun bm!15635 () Bool)

(declare-fun call!15643 () ListLongMap!1747)

(declare-fun call!15642 () ListLongMap!1747)

(assert (=> bm!15635 (= call!15643 call!15642)))

(declare-fun b!140744 () Bool)

(declare-fun e!91768 () ListLongMap!1747)

(declare-fun call!15638 () ListLongMap!1747)

(assert (=> b!140744 (= e!91768 call!15638)))

(declare-fun call!15639 () ListLongMap!1747)

(declare-fun bm!15636 () Bool)

(assert (=> bm!15636 (= call!15639 (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!140745 () Bool)

(declare-fun e!91766 () Unit!4395)

(declare-fun lt!73876 () Unit!4395)

(assert (=> b!140745 (= e!91766 lt!73876)))

(declare-fun lt!73872 () ListLongMap!1747)

(assert (=> b!140745 (= lt!73872 (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73865 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73865 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73870 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73870 (select (arr!2314 lt!73346) #b00000000000000000000000000000000))))

(declare-fun lt!73867 () Unit!4395)

(assert (=> b!140745 (= lt!73867 (addStillContains!96 lt!73872 lt!73865 (zeroValue!2790 newMap!16) lt!73870))))

(assert (=> b!140745 (contains!921 (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))) lt!73870)))

(declare-fun lt!73875 () Unit!4395)

(assert (=> b!140745 (= lt!73875 lt!73867)))

(declare-fun lt!73874 () ListLongMap!1747)

(assert (=> b!140745 (= lt!73874 (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73878 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73878 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73880 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73880 (select (arr!2314 lt!73346) #b00000000000000000000000000000000))))

(declare-fun lt!73871 () Unit!4395)

(assert (=> b!140745 (= lt!73871 (addApplyDifferent!96 lt!73874 lt!73878 (minValue!2790 newMap!16) lt!73880))))

(assert (=> b!140745 (= (apply!120 (+!174 lt!73874 (tuple2!2685 lt!73878 (minValue!2790 newMap!16))) lt!73880) (apply!120 lt!73874 lt!73880))))

(declare-fun lt!73859 () Unit!4395)

(assert (=> b!140745 (= lt!73859 lt!73871)))

(declare-fun lt!73868 () ListLongMap!1747)

(assert (=> b!140745 (= lt!73868 (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73873 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73873 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73879 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73879 (select (arr!2314 lt!73346) #b00000000000000000000000000000000))))

(declare-fun lt!73866 () Unit!4395)

(assert (=> b!140745 (= lt!73866 (addApplyDifferent!96 lt!73868 lt!73873 (zeroValue!2790 newMap!16) lt!73879))))

(assert (=> b!140745 (= (apply!120 (+!174 lt!73868 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))) lt!73879) (apply!120 lt!73868 lt!73879))))

(declare-fun lt!73864 () Unit!4395)

(assert (=> b!140745 (= lt!73864 lt!73866)))

(declare-fun lt!73877 () ListLongMap!1747)

(assert (=> b!140745 (= lt!73877 (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!73860 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73860 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73869 () (_ BitVec 64))

(assert (=> b!140745 (= lt!73869 (select (arr!2314 lt!73346) #b00000000000000000000000000000000))))

(assert (=> b!140745 (= lt!73876 (addApplyDifferent!96 lt!73877 lt!73860 (minValue!2790 newMap!16) lt!73869))))

(assert (=> b!140745 (= (apply!120 (+!174 lt!73877 (tuple2!2685 lt!73860 (minValue!2790 newMap!16))) lt!73869) (apply!120 lt!73877 lt!73869))))

(declare-fun b!140746 () Bool)

(declare-fun res!67258 () Bool)

(declare-fun e!91762 () Bool)

(assert (=> b!140746 (=> (not res!67258) (not e!91762))))

(declare-fun e!91772 () Bool)

(assert (=> b!140746 (= res!67258 e!91772)))

(declare-fun res!67255 () Bool)

(assert (=> b!140746 (=> res!67255 e!91772)))

(declare-fun e!91769 () Bool)

(assert (=> b!140746 (= res!67255 (not e!91769))))

(declare-fun res!67254 () Bool)

(assert (=> b!140746 (=> (not res!67254) (not e!91769))))

(assert (=> b!140746 (= res!67254 (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(declare-fun b!140747 () Bool)

(assert (=> b!140747 (= e!91768 call!15643)))

(declare-fun b!140748 () Bool)

(declare-fun e!91764 () ListLongMap!1747)

(declare-fun e!91771 () ListLongMap!1747)

(assert (=> b!140748 (= e!91764 e!91771)))

(declare-fun c!26401 () Bool)

(assert (=> b!140748 (= c!26401 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!26398 () Bool)

(declare-fun call!15641 () ListLongMap!1747)

(declare-fun bm!15637 () Bool)

(assert (=> bm!15637 (= call!15642 (+!174 (ite c!26398 call!15639 (ite c!26401 call!15641 call!15638)) (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!140750 () Bool)

(declare-fun Unit!4438 () Unit!4395)

(assert (=> b!140750 (= e!91766 Unit!4438)))

(declare-fun b!140751 () Bool)

(declare-fun e!91773 () Bool)

(declare-fun e!91765 () Bool)

(assert (=> b!140751 (= e!91773 e!91765)))

(declare-fun res!67259 () Bool)

(declare-fun call!15640 () Bool)

(assert (=> b!140751 (= res!67259 call!15640)))

(assert (=> b!140751 (=> (not res!67259) (not e!91765))))

(declare-fun b!140752 () Bool)

(declare-fun e!91774 () Bool)

(assert (=> b!140752 (= e!91762 e!91774)))

(declare-fun c!26397 () Bool)

(assert (=> b!140752 (= c!26397 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140753 () Bool)

(assert (=> b!140753 (= e!91769 (validKeyInArray!0 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(declare-fun b!140754 () Bool)

(declare-fun lt!73863 () ListLongMap!1747)

(assert (=> b!140754 (= e!91765 (= (apply!120 lt!73863 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 newMap!16)))))

(declare-fun bm!15638 () Bool)

(assert (=> bm!15638 (= call!15638 call!15641)))

(declare-fun b!140755 () Bool)

(declare-fun call!15644 () Bool)

(assert (=> b!140755 (= e!91774 (not call!15644))))

(declare-fun b!140756 () Bool)

(declare-fun e!91770 () Bool)

(assert (=> b!140756 (= e!91770 (= (apply!120 lt!73863 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun bm!15639 () Bool)

(assert (=> bm!15639 (= call!15641 call!15639)))

(declare-fun b!140757 () Bool)

(declare-fun e!91763 () Bool)

(assert (=> b!140757 (= e!91772 e!91763)))

(declare-fun res!67262 () Bool)

(assert (=> b!140757 (=> (not res!67262) (not e!91763))))

(assert (=> b!140757 (= res!67262 (contains!921 lt!73863 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(assert (=> b!140757 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(declare-fun bm!15640 () Bool)

(assert (=> bm!15640 (= call!15640 (contains!921 lt!73863 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140758 () Bool)

(assert (=> b!140758 (= e!91763 (= (apply!120 lt!73863 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 lt!73351) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73351)))))

(assert (=> b!140758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(declare-fun b!140759 () Bool)

(declare-fun e!91767 () Bool)

(assert (=> b!140759 (= e!91767 (validKeyInArray!0 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(declare-fun b!140760 () Bool)

(declare-fun c!26402 () Bool)

(assert (=> b!140760 (= c!26402 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140760 (= e!91771 e!91768)))

(declare-fun b!140761 () Bool)

(assert (=> b!140761 (= e!91764 (+!174 call!15642 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun d!43923 () Bool)

(assert (=> d!43923 e!91762))

(declare-fun res!67256 () Bool)

(assert (=> d!43923 (=> (not res!67256) (not e!91762))))

(assert (=> d!43923 (= res!67256 (or (bvsge #b00000000000000000000000000000000 (size!2586 lt!73346)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))))

(declare-fun lt!73862 () ListLongMap!1747)

(assert (=> d!43923 (= lt!73863 lt!73862)))

(declare-fun lt!73861 () Unit!4395)

(assert (=> d!43923 (= lt!73861 e!91766)))

(declare-fun c!26400 () Bool)

(assert (=> d!43923 (= c!26400 e!91767)))

(declare-fun res!67260 () Bool)

(assert (=> d!43923 (=> (not res!67260) (not e!91767))))

(assert (=> d!43923 (= res!67260 (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(assert (=> d!43923 (= lt!73862 e!91764)))

(assert (=> d!43923 (= c!26398 (and (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43923 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43923 (= (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73863)))

(declare-fun b!140749 () Bool)

(assert (=> b!140749 (= e!91771 call!15643)))

(declare-fun bm!15641 () Bool)

(assert (=> bm!15641 (= call!15644 (contains!921 lt!73863 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140762 () Bool)

(assert (=> b!140762 (= e!91774 e!91770)))

(declare-fun res!67261 () Bool)

(assert (=> b!140762 (= res!67261 call!15644)))

(assert (=> b!140762 (=> (not res!67261) (not e!91770))))

(declare-fun b!140763 () Bool)

(assert (=> b!140763 (= e!91773 (not call!15640))))

(declare-fun b!140764 () Bool)

(declare-fun res!67257 () Bool)

(assert (=> b!140764 (=> (not res!67257) (not e!91762))))

(assert (=> b!140764 (= res!67257 e!91773)))

(declare-fun c!26399 () Bool)

(assert (=> b!140764 (= c!26399 (not (= (bvand (extraKeys!2695 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43923 c!26398) b!140761))

(assert (= (and d!43923 (not c!26398)) b!140748))

(assert (= (and b!140748 c!26401) b!140749))

(assert (= (and b!140748 (not c!26401)) b!140760))

(assert (= (and b!140760 c!26402) b!140747))

(assert (= (and b!140760 (not c!26402)) b!140744))

(assert (= (or b!140747 b!140744) bm!15638))

(assert (= (or b!140749 bm!15638) bm!15639))

(assert (= (or b!140749 b!140747) bm!15635))

(assert (= (or b!140761 bm!15639) bm!15636))

(assert (= (or b!140761 bm!15635) bm!15637))

(assert (= (and d!43923 res!67260) b!140759))

(assert (= (and d!43923 c!26400) b!140745))

(assert (= (and d!43923 (not c!26400)) b!140750))

(assert (= (and d!43923 res!67256) b!140746))

(assert (= (and b!140746 res!67254) b!140753))

(assert (= (and b!140746 (not res!67255)) b!140757))

(assert (= (and b!140757 res!67262) b!140758))

(assert (= (and b!140746 res!67258) b!140764))

(assert (= (and b!140764 c!26399) b!140751))

(assert (= (and b!140764 (not c!26399)) b!140763))

(assert (= (and b!140751 res!67259) b!140754))

(assert (= (or b!140751 b!140763) bm!15640))

(assert (= (and b!140764 res!67257) b!140752))

(assert (= (and b!140752 c!26397) b!140762))

(assert (= (and b!140752 (not c!26397)) b!140755))

(assert (= (and b!140762 res!67261) b!140756))

(assert (= (or b!140762 b!140755) bm!15641))

(declare-fun b_lambda!6333 () Bool)

(assert (=> (not b_lambda!6333) (not b!140758)))

(assert (=> b!140758 t!6366))

(declare-fun b_and!8821 () Bool)

(assert (= b_and!8817 (and (=> t!6366 result!4203) b_and!8821)))

(assert (=> b!140758 t!6368))

(declare-fun b_and!8823 () Bool)

(assert (= b_and!8819 (and (=> t!6368 result!4205) b_and!8823)))

(declare-fun m!168575 () Bool)

(assert (=> b!140761 m!168575))

(declare-fun m!168577 () Bool)

(assert (=> bm!15636 m!168577))

(assert (=> d!43923 m!166961))

(declare-fun m!168579 () Bool)

(assert (=> b!140756 m!168579))

(declare-fun m!168581 () Bool)

(assert (=> bm!15637 m!168581))

(declare-fun m!168583 () Bool)

(assert (=> b!140758 m!168583))

(assert (=> b!140758 m!168583))

(declare-fun m!168585 () Bool)

(assert (=> b!140758 m!168585))

(assert (=> b!140758 m!166971))

(declare-fun m!168587 () Bool)

(assert (=> b!140758 m!168587))

(assert (=> b!140758 m!166971))

(declare-fun m!168589 () Bool)

(assert (=> b!140758 m!168589))

(assert (=> b!140758 m!168587))

(declare-fun m!168591 () Bool)

(assert (=> bm!15640 m!168591))

(declare-fun m!168593 () Bool)

(assert (=> b!140754 m!168593))

(assert (=> b!140753 m!168583))

(assert (=> b!140753 m!168583))

(declare-fun m!168595 () Bool)

(assert (=> b!140753 m!168595))

(assert (=> b!140757 m!168583))

(assert (=> b!140757 m!168583))

(declare-fun m!168597 () Bool)

(assert (=> b!140757 m!168597))

(assert (=> b!140759 m!168583))

(assert (=> b!140759 m!168583))

(assert (=> b!140759 m!168595))

(declare-fun m!168599 () Bool)

(assert (=> bm!15641 m!168599))

(declare-fun m!168601 () Bool)

(assert (=> b!140745 m!168601))

(declare-fun m!168603 () Bool)

(assert (=> b!140745 m!168603))

(declare-fun m!168605 () Bool)

(assert (=> b!140745 m!168605))

(declare-fun m!168607 () Bool)

(assert (=> b!140745 m!168607))

(declare-fun m!168609 () Bool)

(assert (=> b!140745 m!168609))

(declare-fun m!168611 () Bool)

(assert (=> b!140745 m!168611))

(declare-fun m!168613 () Bool)

(assert (=> b!140745 m!168613))

(declare-fun m!168615 () Bool)

(assert (=> b!140745 m!168615))

(assert (=> b!140745 m!168615))

(declare-fun m!168617 () Bool)

(assert (=> b!140745 m!168617))

(assert (=> b!140745 m!168577))

(declare-fun m!168619 () Bool)

(assert (=> b!140745 m!168619))

(declare-fun m!168621 () Bool)

(assert (=> b!140745 m!168621))

(assert (=> b!140745 m!168607))

(declare-fun m!168623 () Bool)

(assert (=> b!140745 m!168623))

(declare-fun m!168625 () Bool)

(assert (=> b!140745 m!168625))

(assert (=> b!140745 m!168583))

(declare-fun m!168627 () Bool)

(assert (=> b!140745 m!168627))

(assert (=> b!140745 m!168601))

(declare-fun m!168629 () Bool)

(assert (=> b!140745 m!168629))

(assert (=> b!140745 m!168619))

(assert (=> d!43471 d!43923))

(declare-fun d!43925 () Bool)

(assert (=> d!43925 (= (arrayCountValidKeys!0 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!73883 () Unit!4395)

(declare-fun choose!2 (array!4896 (_ BitVec 32)) Unit!4395)

(assert (=> d!43925 (= lt!73883 (choose!2 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))

(declare-fun e!91777 () Bool)

(assert (=> d!43925 e!91777))

(declare-fun res!67267 () Bool)

(assert (=> d!43925 (=> (not res!67267) (not e!91777))))

(assert (=> d!43925 (= res!67267 (and (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2586 lt!73355))))))

(assert (=> d!43925 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) lt!73883)))

(declare-fun b!140769 () Bool)

(declare-fun res!67268 () Bool)

(assert (=> b!140769 (=> (not res!67268) (not e!91777))))

(assert (=> b!140769 (= res!67268 (validKeyInArray!0 (select (arr!2314 lt!73355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(declare-fun b!140770 () Bool)

(assert (=> b!140770 (= e!91777 (bvslt (size!2586 lt!73355) #b01111111111111111111111111111111))))

(assert (= (and d!43925 res!67267) b!140769))

(assert (= (and b!140769 res!67268) b!140770))

(assert (=> d!43925 m!167039))

(declare-fun m!168631 () Bool)

(assert (=> d!43925 m!168631))

(assert (=> b!140769 m!168463))

(assert (=> b!140769 m!168463))

(assert (=> b!140769 m!168465))

(assert (=> d!43471 d!43925))

(assert (=> d!43471 d!43495))

(declare-fun b!140771 () Bool)

(declare-fun e!91780 () Bool)

(declare-fun e!91779 () Bool)

(assert (=> b!140771 (= e!91780 e!91779)))

(declare-fun lt!73885 () (_ BitVec 64))

(assert (=> b!140771 (= lt!73885 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!73886 () Unit!4395)

(assert (=> b!140771 (= lt!73886 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73885 #b00000000000000000000000000000000))))

(assert (=> b!140771 (arrayContainsKey!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73885 #b00000000000000000000000000000000)))

(declare-fun lt!73884 () Unit!4395)

(assert (=> b!140771 (= lt!73884 lt!73886)))

(declare-fun res!67269 () Bool)

(assert (=> b!140771 (= res!67269 (= (seekEntryOrOpen!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) (Found!289 #b00000000000000000000000000000000)))))

(assert (=> b!140771 (=> (not res!67269) (not e!91779))))

(declare-fun d!43927 () Bool)

(declare-fun res!67270 () Bool)

(declare-fun e!91778 () Bool)

(assert (=> d!43927 (=> res!67270 e!91778)))

(assert (=> d!43927 (= res!67270 (bvsge #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!43927 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) e!91778)))

(declare-fun b!140772 () Bool)

(declare-fun call!15645 () Bool)

(assert (=> b!140772 (= e!91780 call!15645)))

(declare-fun b!140773 () Bool)

(assert (=> b!140773 (= e!91778 e!91780)))

(declare-fun c!26403 () Bool)

(assert (=> b!140773 (= c!26403 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!140774 () Bool)

(assert (=> b!140774 (= e!91779 call!15645)))

(declare-fun bm!15642 () Bool)

(assert (=> bm!15642 (= call!15645 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(assert (= (and d!43927 (not res!67270)) b!140773))

(assert (= (and b!140773 c!26403) b!140771))

(assert (= (and b!140773 (not c!26403)) b!140772))

(assert (= (and b!140771 res!67269) b!140774))

(assert (= (or b!140774 b!140772) bm!15642))

(assert (=> b!140771 m!168455))

(declare-fun m!168633 () Bool)

(assert (=> b!140771 m!168633))

(declare-fun m!168635 () Bool)

(assert (=> b!140771 m!168635))

(assert (=> b!140771 m!168455))

(declare-fun m!168637 () Bool)

(assert (=> b!140771 m!168637))

(assert (=> b!140773 m!168455))

(assert (=> b!140773 m!168455))

(assert (=> b!140773 m!168457))

(declare-fun m!168639 () Bool)

(assert (=> bm!15642 m!168639))

(assert (=> d!43471 d!43927))

(declare-fun d!43929 () Bool)

(declare-fun e!91783 () Bool)

(assert (=> d!43929 e!91783))

(declare-fun res!67273 () Bool)

(assert (=> d!43929 (=> (not res!67273) (not e!91783))))

(assert (=> d!43929 (= res!67273 (and (bvsge (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000000) (bvslt (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (size!2586 (_keys!4699 newMap!16)))))))

(declare-fun lt!73889 () Unit!4395)

(declare-fun choose!102 ((_ BitVec 64) array!4896 (_ BitVec 32) (_ BitVec 32)) Unit!4395)

(assert (=> d!43929 (= lt!73889 (choose!102 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (mask!7280 newMap!16)))))

(assert (=> d!43929 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43929 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (mask!7280 newMap!16)) lt!73889)))

(declare-fun b!140777 () Bool)

(assert (=> b!140777 (= e!91783 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(assert (= (and d!43929 res!67273) b!140777))

(assert (=> d!43929 m!166733))

(declare-fun m!168641 () Bool)

(assert (=> d!43929 m!168641))

(assert (=> d!43929 m!166961))

(assert (=> b!140777 m!167023))

(assert (=> b!140777 m!167031))

(assert (=> d!43471 d!43929))

(assert (=> bm!15564 d!43591))

(declare-fun e!91785 () Option!181)

(declare-fun b!140780 () Bool)

(assert (=> b!140780 (= e!91785 (getValueByKey!175 (t!6360 (toList!889 lt!73542)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140779 () Bool)

(declare-fun e!91784 () Option!181)

(assert (=> b!140779 (= e!91784 e!91785)))

(declare-fun c!26405 () Bool)

(assert (=> b!140779 (= c!26405 (and ((_ is Cons!1760) (toList!889 lt!73542)) (not (= (_1!1352 (h!2367 (toList!889 lt!73542))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140781 () Bool)

(assert (=> b!140781 (= e!91785 None!179)))

(declare-fun b!140778 () Bool)

(assert (=> b!140778 (= e!91784 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73542)))))))

(declare-fun d!43931 () Bool)

(declare-fun c!26404 () Bool)

(assert (=> d!43931 (= c!26404 (and ((_ is Cons!1760) (toList!889 lt!73542)) (= (_1!1352 (h!2367 (toList!889 lt!73542))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43931 (= (getValueByKey!175 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91784)))

(assert (= (and d!43931 c!26404) b!140778))

(assert (= (and d!43931 (not c!26404)) b!140779))

(assert (= (and b!140779 c!26405) b!140780))

(assert (= (and b!140779 (not c!26405)) b!140781))

(declare-fun m!168643 () Bool)

(assert (=> b!140780 m!168643))

(assert (=> b!140207 d!43931))

(declare-fun d!43933 () Bool)

(assert (=> d!43933 (= (apply!120 lt!73441 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1538 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5892 () Bool)

(assert (= bs!5892 d!43933))

(assert (=> bs!5892 m!166821))

(declare-fun m!168645 () Bool)

(assert (=> bs!5892 m!168645))

(assert (=> bs!5892 m!168645))

(declare-fun m!168647 () Bool)

(assert (=> bs!5892 m!168647))

(assert (=> b!140071 d!43933))

(assert (=> b!140071 d!43485))

(declare-fun d!43935 () Bool)

(assert (=> d!43935 (= (inRange!0 (ite c!26171 (index!3320 lt!73342) (ite c!26172 (index!3319 lt!73331) (index!3322 lt!73331))) (mask!7280 newMap!16)) (and (bvsge (ite c!26171 (index!3320 lt!73342) (ite c!26172 (index!3319 lt!73331) (index!3322 lt!73331))) #b00000000000000000000000000000000) (bvslt (ite c!26171 (index!3320 lt!73342) (ite c!26172 (index!3319 lt!73331) (index!3322 lt!73331))) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15537 d!43935))

(declare-fun b!140782 () Bool)

(declare-fun res!67275 () Bool)

(declare-fun e!91786 () Bool)

(assert (=> b!140782 (=> (not res!67275) (not e!91786))))

(assert (=> b!140782 (= res!67275 (and (= (size!2587 (_values!2923 (_2!1353 lt!73223))) (bvadd (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000000000001)) (= (size!2586 (_keys!4699 (_2!1353 lt!73223))) (size!2587 (_values!2923 (_2!1353 lt!73223)))) (bvsge (_size!625 (_2!1353 lt!73223)) #b00000000000000000000000000000000) (bvsle (_size!625 (_2!1353 lt!73223)) (bvadd (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000000000001))))))

(declare-fun b!140785 () Bool)

(assert (=> b!140785 (= e!91786 (and (bvsge (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000011) (bvsge (_vacant!625 (_2!1353 lt!73223)) #b00000000000000000000000000000000)))))

(declare-fun d!43937 () Bool)

(declare-fun res!67274 () Bool)

(assert (=> d!43937 (=> (not res!67274) (not e!91786))))

(assert (=> d!43937 (= res!67274 (validMask!0 (mask!7280 (_2!1353 lt!73223))))))

(assert (=> d!43937 (= (simpleValid!95 (_2!1353 lt!73223)) e!91786)))

(declare-fun b!140783 () Bool)

(declare-fun res!67277 () Bool)

(assert (=> b!140783 (=> (not res!67277) (not e!91786))))

(assert (=> b!140783 (= res!67277 (bvsge (size!2590 (_2!1353 lt!73223)) (_size!625 (_2!1353 lt!73223))))))

(declare-fun b!140784 () Bool)

(declare-fun res!67276 () Bool)

(assert (=> b!140784 (=> (not res!67276) (not e!91786))))

(assert (=> b!140784 (= res!67276 (= (size!2590 (_2!1353 lt!73223)) (bvadd (_size!625 (_2!1353 lt!73223)) (bvsdiv (bvadd (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!43937 res!67274) b!140782))

(assert (= (and b!140782 res!67275) b!140783))

(assert (= (and b!140783 res!67277) b!140784))

(assert (= (and b!140784 res!67276) b!140785))

(declare-fun m!168649 () Bool)

(assert (=> d!43937 m!168649))

(declare-fun m!168651 () Bool)

(assert (=> b!140783 m!168651))

(assert (=> b!140784 m!168651))

(assert (=> d!43473 d!43937))

(declare-fun d!43939 () Bool)

(declare-fun lt!73890 () Bool)

(assert (=> d!43939 (= lt!73890 (select (content!137 (toList!889 lt!73535)) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!91787 () Bool)

(assert (=> d!43939 (= lt!73890 e!91787)))

(declare-fun res!67279 () Bool)

(assert (=> d!43939 (=> (not res!67279) (not e!91787))))

(assert (=> d!43939 (= res!67279 ((_ is Cons!1760) (toList!889 lt!73535)))))

(assert (=> d!43939 (= (contains!923 (toList!889 lt!73535) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73890)))

(declare-fun b!140786 () Bool)

(declare-fun e!91788 () Bool)

(assert (=> b!140786 (= e!91787 e!91788)))

(declare-fun res!67278 () Bool)

(assert (=> b!140786 (=> res!67278 e!91788)))

(assert (=> b!140786 (= res!67278 (= (h!2367 (toList!889 lt!73535)) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140787 () Bool)

(assert (=> b!140787 (= e!91788 (contains!923 (t!6360 (toList!889 lt!73535)) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43939 res!67279) b!140786))

(assert (= (and b!140786 (not res!67278)) b!140787))

(declare-fun m!168653 () Bool)

(assert (=> d!43939 m!168653))

(declare-fun m!168655 () Bool)

(assert (=> d!43939 m!168655))

(declare-fun m!168657 () Bool)

(assert (=> b!140787 m!168657))

(assert (=> b!140202 d!43939))

(assert (=> b!140180 d!43609))

(assert (=> d!43567 d!43569))

(assert (=> d!43567 d!43563))

(declare-fun d!43941 () Bool)

(assert (=> d!43941 (contains!921 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73142)))

(assert (=> d!43941 true))

(declare-fun _$35!389 () Unit!4395)

(assert (=> d!43941 (= (choose!871 lt!73144 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73142) _$35!389)))

(declare-fun bs!5893 () Bool)

(assert (= bs!5893 d!43941))

(assert (=> bs!5893 m!166861))

(assert (=> bs!5893 m!166861))

(assert (=> bs!5893 m!166863))

(assert (=> d!43567 d!43941))

(declare-fun d!43943 () Bool)

(declare-fun e!91790 () Bool)

(assert (=> d!43943 e!91790))

(declare-fun res!67280 () Bool)

(assert (=> d!43943 (=> res!67280 e!91790)))

(declare-fun lt!73891 () Bool)

(assert (=> d!43943 (= res!67280 (not lt!73891))))

(declare-fun lt!73894 () Bool)

(assert (=> d!43943 (= lt!73891 lt!73894)))

(declare-fun lt!73892 () Unit!4395)

(declare-fun e!91789 () Unit!4395)

(assert (=> d!43943 (= lt!73892 e!91789)))

(declare-fun c!26406 () Bool)

(assert (=> d!43943 (= c!26406 lt!73894)))

(assert (=> d!43943 (= lt!73894 (containsKey!179 (toList!889 lt!73144) lt!73142))))

(assert (=> d!43943 (= (contains!921 lt!73144 lt!73142) lt!73891)))

(declare-fun b!140789 () Bool)

(declare-fun lt!73893 () Unit!4395)

(assert (=> b!140789 (= e!91789 lt!73893)))

(assert (=> b!140789 (= lt!73893 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73144) lt!73142))))

(assert (=> b!140789 (isDefined!129 (getValueByKey!175 (toList!889 lt!73144) lt!73142))))

(declare-fun b!140790 () Bool)

(declare-fun Unit!4439 () Unit!4395)

(assert (=> b!140790 (= e!91789 Unit!4439)))

(declare-fun b!140791 () Bool)

(assert (=> b!140791 (= e!91790 (isDefined!129 (getValueByKey!175 (toList!889 lt!73144) lt!73142)))))

(assert (= (and d!43943 c!26406) b!140789))

(assert (= (and d!43943 (not c!26406)) b!140790))

(assert (= (and d!43943 (not res!67280)) b!140791))

(declare-fun m!168659 () Bool)

(assert (=> d!43943 m!168659))

(declare-fun m!168661 () Bool)

(assert (=> b!140789 m!168661))

(declare-fun m!168663 () Bool)

(assert (=> b!140789 m!168663))

(assert (=> b!140789 m!168663))

(declare-fun m!168665 () Bool)

(assert (=> b!140789 m!168665))

(assert (=> b!140791 m!168663))

(assert (=> b!140791 m!168663))

(assert (=> b!140791 m!168665))

(assert (=> d!43567 d!43943))

(declare-fun b!140804 () Bool)

(declare-fun e!91797 () SeekEntryResult!289)

(assert (=> b!140804 (= e!91797 (MissingVacant!289 (index!3321 lt!73424)))))

(declare-fun b!140805 () Bool)

(declare-fun e!91798 () SeekEntryResult!289)

(assert (=> b!140805 (= e!91798 (Found!289 (index!3321 lt!73424)))))

(declare-fun b!140806 () Bool)

(declare-fun c!26415 () Bool)

(declare-fun lt!73899 () (_ BitVec 64))

(assert (=> b!140806 (= c!26415 (= lt!73899 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140806 (= e!91798 e!91797)))

(declare-fun b!140807 () Bool)

(declare-fun e!91799 () SeekEntryResult!289)

(assert (=> b!140807 (= e!91799 Undefined!289)))

(declare-fun lt!73900 () SeekEntryResult!289)

(declare-fun d!43945 () Bool)

(assert (=> d!43945 (and (or ((_ is Undefined!289) lt!73900) (not ((_ is Found!289) lt!73900)) (and (bvsge (index!3320 lt!73900) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73900) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73900) ((_ is Found!289) lt!73900) (not ((_ is MissingVacant!289) lt!73900)) (not (= (index!3322 lt!73900) (index!3321 lt!73424))) (and (bvsge (index!3322 lt!73900) #b00000000000000000000000000000000) (bvslt (index!3322 lt!73900) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!73900) (ite ((_ is Found!289) lt!73900) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73900)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (and ((_ is MissingVacant!289) lt!73900) (= (index!3322 lt!73900) (index!3321 lt!73424)) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!73900)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!43945 (= lt!73900 e!91799)))

(declare-fun c!26414 () Bool)

(assert (=> d!43945 (= c!26414 (bvsge (x!16146 lt!73424) #b01111111111111111111111111111110))))

(assert (=> d!43945 (= lt!73899 (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!73424)))))

(assert (=> d!43945 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43945 (= (seekKeyOrZeroReturnVacant!0 (x!16146 lt!73424) (index!3321 lt!73424) (index!3321 lt!73424) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!73900)))

(declare-fun b!140808 () Bool)

(assert (=> b!140808 (= e!91799 e!91798)))

(declare-fun c!26413 () Bool)

(assert (=> b!140808 (= c!26413 (= lt!73899 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!140809 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!140809 (= e!91797 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16146 lt!73424) #b00000000000000000000000000000001) (nextIndex!0 (index!3321 lt!73424) (x!16146 lt!73424) (mask!7280 newMap!16)) (index!3321 lt!73424) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (= (and d!43945 c!26414) b!140807))

(assert (= (and d!43945 (not c!26414)) b!140808))

(assert (= (and b!140808 c!26413) b!140805))

(assert (= (and b!140808 (not c!26413)) b!140806))

(assert (= (and b!140806 c!26415) b!140804))

(assert (= (and b!140806 (not c!26415)) b!140809))

(declare-fun m!168667 () Bool)

(assert (=> d!43945 m!168667))

(declare-fun m!168669 () Bool)

(assert (=> d!43945 m!168669))

(assert (=> d!43945 m!167207))

(assert (=> d!43945 m!166961))

(declare-fun m!168671 () Bool)

(assert (=> b!140809 m!168671))

(assert (=> b!140809 m!168671))

(assert (=> b!140809 m!166733))

(declare-fun m!168673 () Bool)

(assert (=> b!140809 m!168673))

(assert (=> b!140030 d!43945))

(assert (=> b!139930 d!43533))

(assert (=> b!140229 d!43645))

(assert (=> b!140229 d!43647))

(declare-fun d!43947 () Bool)

(declare-fun e!91801 () Bool)

(assert (=> d!43947 e!91801))

(declare-fun res!67281 () Bool)

(assert (=> d!43947 (=> res!67281 e!91801)))

(declare-fun lt!73901 () Bool)

(assert (=> d!43947 (= res!67281 (not lt!73901))))

(declare-fun lt!73904 () Bool)

(assert (=> d!43947 (= lt!73901 lt!73904)))

(declare-fun lt!73902 () Unit!4395)

(declare-fun e!91800 () Unit!4395)

(assert (=> d!43947 (= lt!73902 e!91800)))

(declare-fun c!26416 () Bool)

(assert (=> d!43947 (= c!26416 lt!73904)))

(assert (=> d!43947 (= lt!73904 (containsKey!179 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!43947 (= (contains!921 lt!73441 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!73901)))

(declare-fun b!140810 () Bool)

(declare-fun lt!73903 () Unit!4395)

(assert (=> b!140810 (= e!91800 lt!73903)))

(assert (=> b!140810 (= lt!73903 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!140810 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!140811 () Bool)

(declare-fun Unit!4440 () Unit!4395)

(assert (=> b!140811 (= e!91800 Unit!4440)))

(declare-fun b!140812 () Bool)

(assert (=> b!140812 (= e!91801 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!43947 c!26416) b!140810))

(assert (= (and d!43947 (not c!26416)) b!140811))

(assert (= (and d!43947 (not res!67281)) b!140812))

(assert (=> d!43947 m!166821))

(declare-fun m!168675 () Bool)

(assert (=> d!43947 m!168675))

(assert (=> b!140810 m!166821))

(declare-fun m!168677 () Bool)

(assert (=> b!140810 m!168677))

(assert (=> b!140810 m!166821))

(assert (=> b!140810 m!168645))

(assert (=> b!140810 m!168645))

(declare-fun m!168679 () Bool)

(assert (=> b!140810 m!168679))

(assert (=> b!140812 m!166821))

(assert (=> b!140812 m!168645))

(assert (=> b!140812 m!168645))

(assert (=> b!140812 m!168679))

(assert (=> b!140076 d!43947))

(declare-fun lt!73905 () Bool)

(declare-fun d!43949 () Bool)

(assert (=> d!43949 (= lt!73905 (select (content!137 (toList!889 lt!73542)) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!91802 () Bool)

(assert (=> d!43949 (= lt!73905 e!91802)))

(declare-fun res!67283 () Bool)

(assert (=> d!43949 (=> (not res!67283) (not e!91802))))

(assert (=> d!43949 (= res!67283 ((_ is Cons!1760) (toList!889 lt!73542)))))

(assert (=> d!43949 (= (contains!923 (toList!889 lt!73542) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73905)))

(declare-fun b!140813 () Bool)

(declare-fun e!91803 () Bool)

(assert (=> b!140813 (= e!91802 e!91803)))

(declare-fun res!67282 () Bool)

(assert (=> b!140813 (=> res!67282 e!91803)))

(assert (=> b!140813 (= res!67282 (= (h!2367 (toList!889 lt!73542)) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140814 () Bool)

(assert (=> b!140814 (= e!91803 (contains!923 (t!6360 (toList!889 lt!73542)) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43949 res!67283) b!140813))

(assert (= (and b!140813 (not res!67282)) b!140814))

(declare-fun m!168681 () Bool)

(assert (=> d!43949 m!168681))

(declare-fun m!168683 () Bool)

(assert (=> d!43949 m!168683))

(declare-fun m!168685 () Bool)

(assert (=> b!140814 m!168685))

(assert (=> b!140208 d!43949))

(assert (=> bm!15534 d!43515))

(assert (=> b!140072 d!43475))

(assert (=> b!139956 d!43605))

(assert (=> b!140150 d!43605))

(assert (=> b!140103 d!43605))

(declare-fun d!43951 () Bool)

(assert (=> d!43951 (= (get!1538 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43539 d!43951))

(assert (=> d!43539 d!43845))

(declare-fun d!43953 () Bool)

(declare-fun e!91804 () Bool)

(assert (=> d!43953 e!91804))

(declare-fun res!67285 () Bool)

(assert (=> d!43953 (=> (not res!67285) (not e!91804))))

(declare-fun lt!73908 () ListLongMap!1747)

(assert (=> d!43953 (= res!67285 (contains!921 lt!73908 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!73909 () List!1764)

(assert (=> d!43953 (= lt!73908 (ListLongMap!1748 lt!73909))))

(declare-fun lt!73906 () Unit!4395)

(declare-fun lt!73907 () Unit!4395)

(assert (=> d!43953 (= lt!73906 lt!73907)))

(assert (=> d!43953 (= (getValueByKey!175 lt!73909 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43953 (= lt!73907 (lemmaContainsTupThenGetReturnValue!91 lt!73909 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43953 (= lt!73909 (insertStrictlySorted!93 (toList!889 call!15554) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43953 (= (+!174 call!15554 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73908)))

(declare-fun b!140815 () Bool)

(declare-fun res!67284 () Bool)

(assert (=> b!140815 (=> (not res!67284) (not e!91804))))

(assert (=> b!140815 (= res!67284 (= (getValueByKey!175 (toList!889 lt!73908) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140816 () Bool)

(assert (=> b!140816 (= e!91804 (contains!923 (toList!889 lt!73908) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43953 res!67285) b!140815))

(assert (= (and b!140815 res!67284) b!140816))

(declare-fun m!168687 () Bool)

(assert (=> d!43953 m!168687))

(declare-fun m!168689 () Bool)

(assert (=> d!43953 m!168689))

(declare-fun m!168691 () Bool)

(assert (=> d!43953 m!168691))

(declare-fun m!168693 () Bool)

(assert (=> d!43953 m!168693))

(declare-fun m!168695 () Bool)

(assert (=> b!140815 m!168695))

(declare-fun m!168697 () Bool)

(assert (=> b!140816 m!168697))

(assert (=> b!140079 d!43953))

(assert (=> b!140079 d!43485))

(declare-fun d!43955 () Bool)

(assert (=> d!43955 (not (contains!921 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)) lt!73443))))

(declare-fun lt!73912 () Unit!4395)

(declare-fun choose!875 (ListLongMap!1747 (_ BitVec 64) V!3555 (_ BitVec 64)) Unit!4395)

(assert (=> d!43955 (= lt!73912 (choose!875 lt!73440 lt!73444 lt!73442 lt!73443))))

(declare-fun e!91807 () Bool)

(assert (=> d!43955 e!91807))

(declare-fun res!67288 () Bool)

(assert (=> d!43955 (=> (not res!67288) (not e!91807))))

(assert (=> d!43955 (= res!67288 (not (contains!921 lt!73440 lt!73443)))))

(assert (=> d!43955 (= (addStillNotContains!66 lt!73440 lt!73444 lt!73442 lt!73443) lt!73912)))

(declare-fun b!140820 () Bool)

(assert (=> b!140820 (= e!91807 (not (= lt!73444 lt!73443)))))

(assert (= (and d!43955 res!67288) b!140820))

(assert (=> d!43955 m!167227))

(assert (=> d!43955 m!167227))

(assert (=> d!43955 m!167229))

(declare-fun m!168699 () Bool)

(assert (=> d!43955 m!168699))

(declare-fun m!168701 () Bool)

(assert (=> d!43955 m!168701))

(assert (=> b!140079 d!43955))

(declare-fun d!43957 () Bool)

(declare-fun e!91808 () Bool)

(assert (=> d!43957 e!91808))

(declare-fun res!67290 () Bool)

(assert (=> d!43957 (=> (not res!67290) (not e!91808))))

(declare-fun lt!73915 () ListLongMap!1747)

(assert (=> d!43957 (= res!67290 (contains!921 lt!73915 (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun lt!73916 () List!1764)

(assert (=> d!43957 (= lt!73915 (ListLongMap!1748 lt!73916))))

(declare-fun lt!73913 () Unit!4395)

(declare-fun lt!73914 () Unit!4395)

(assert (=> d!43957 (= lt!73913 lt!73914)))

(assert (=> d!43957 (= (getValueByKey!175 lt!73916 (_1!1352 (tuple2!2685 lt!73444 lt!73442))) (Some!180 (_2!1352 (tuple2!2685 lt!73444 lt!73442))))))

(assert (=> d!43957 (= lt!73914 (lemmaContainsTupThenGetReturnValue!91 lt!73916 (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442))))))

(assert (=> d!43957 (= lt!73916 (insertStrictlySorted!93 (toList!889 lt!73440) (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442))))))

(assert (=> d!43957 (= (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)) lt!73915)))

(declare-fun b!140821 () Bool)

(declare-fun res!67289 () Bool)

(assert (=> b!140821 (=> (not res!67289) (not e!91808))))

(assert (=> b!140821 (= res!67289 (= (getValueByKey!175 (toList!889 lt!73915) (_1!1352 (tuple2!2685 lt!73444 lt!73442))) (Some!180 (_2!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(declare-fun b!140822 () Bool)

(assert (=> b!140822 (= e!91808 (contains!923 (toList!889 lt!73915) (tuple2!2685 lt!73444 lt!73442)))))

(assert (= (and d!43957 res!67290) b!140821))

(assert (= (and b!140821 res!67289) b!140822))

(declare-fun m!168703 () Bool)

(assert (=> d!43957 m!168703))

(declare-fun m!168705 () Bool)

(assert (=> d!43957 m!168705))

(declare-fun m!168707 () Bool)

(assert (=> d!43957 m!168707))

(declare-fun m!168709 () Bool)

(assert (=> d!43957 m!168709))

(declare-fun m!168711 () Bool)

(assert (=> b!140821 m!168711))

(declare-fun m!168713 () Bool)

(assert (=> b!140822 m!168713))

(assert (=> b!140079 d!43957))

(declare-fun d!43959 () Bool)

(declare-fun e!91810 () Bool)

(assert (=> d!43959 e!91810))

(declare-fun res!67291 () Bool)

(assert (=> d!43959 (=> res!67291 e!91810)))

(declare-fun lt!73917 () Bool)

(assert (=> d!43959 (= res!67291 (not lt!73917))))

(declare-fun lt!73920 () Bool)

(assert (=> d!43959 (= lt!73917 lt!73920)))

(declare-fun lt!73918 () Unit!4395)

(declare-fun e!91809 () Unit!4395)

(assert (=> d!43959 (= lt!73918 e!91809)))

(declare-fun c!26417 () Bool)

(assert (=> d!43959 (= c!26417 lt!73920)))

(assert (=> d!43959 (= lt!73920 (containsKey!179 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443))))

(assert (=> d!43959 (= (contains!921 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)) lt!73443) lt!73917)))

(declare-fun b!140823 () Bool)

(declare-fun lt!73919 () Unit!4395)

(assert (=> b!140823 (= e!91809 lt!73919)))

(assert (=> b!140823 (= lt!73919 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443))))

(assert (=> b!140823 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443))))

(declare-fun b!140824 () Bool)

(declare-fun Unit!4441 () Unit!4395)

(assert (=> b!140824 (= e!91809 Unit!4441)))

(declare-fun b!140825 () Bool)

(assert (=> b!140825 (= e!91810 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443)))))

(assert (= (and d!43959 c!26417) b!140823))

(assert (= (and d!43959 (not c!26417)) b!140824))

(assert (= (and d!43959 (not res!67291)) b!140825))

(declare-fun m!168715 () Bool)

(assert (=> d!43959 m!168715))

(declare-fun m!168717 () Bool)

(assert (=> b!140823 m!168717))

(declare-fun m!168719 () Bool)

(assert (=> b!140823 m!168719))

(assert (=> b!140823 m!168719))

(declare-fun m!168721 () Bool)

(assert (=> b!140823 m!168721))

(assert (=> b!140825 m!168719))

(assert (=> b!140825 m!168719))

(assert (=> b!140825 m!168721))

(assert (=> b!140079 d!43959))

(declare-fun b!140826 () Bool)

(declare-fun res!67293 () Bool)

(declare-fun e!91811 () Bool)

(assert (=> b!140826 (=> (not res!67293) (not e!91811))))

(assert (=> b!140826 (= res!67293 (and (= (size!2587 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001)) (= (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (size!2587 (_values!2923 (v!3280 (underlying!481 thiss!992))))) (bvsge (_size!625 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!625 (v!3280 (underlying!481 thiss!992))) (bvadd (mask!7280 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!140829 () Bool)

(assert (=> b!140829 (= e!91811 (and (bvsge (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!625 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!43961 () Bool)

(declare-fun res!67292 () Bool)

(assert (=> d!43961 (=> (not res!67292) (not e!91811))))

(assert (=> d!43961 (= res!67292 (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992)))))))

(assert (=> d!43961 (= (simpleValid!95 (v!3280 (underlying!481 thiss!992))) e!91811)))

(declare-fun b!140827 () Bool)

(declare-fun res!67295 () Bool)

(assert (=> b!140827 (=> (not res!67295) (not e!91811))))

(assert (=> b!140827 (= res!67295 (bvsge (size!2590 (v!3280 (underlying!481 thiss!992))) (_size!625 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!140828 () Bool)

(declare-fun res!67294 () Bool)

(assert (=> b!140828 (=> (not res!67294) (not e!91811))))

(assert (=> b!140828 (= res!67294 (= (size!2590 (v!3280 (underlying!481 thiss!992))) (bvadd (_size!625 (v!3280 (underlying!481 thiss!992))) (bvsdiv (bvadd (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!43961 res!67292) b!140826))

(assert (= (and b!140826 res!67293) b!140827))

(assert (= (and b!140827 res!67295) b!140828))

(assert (= (and b!140828 res!67294) b!140829))

(assert (=> d!43961 m!166827))

(declare-fun m!168723 () Bool)

(assert (=> b!140827 m!168723))

(assert (=> b!140828 m!168723))

(assert (=> d!43589 d!43961))

(declare-fun d!43963 () Bool)

(declare-fun lt!73921 () Bool)

(assert (=> d!43963 (= lt!73921 (select (content!137 (toList!889 lt!73470)) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!91812 () Bool)

(assert (=> d!43963 (= lt!73921 e!91812)))

(declare-fun res!67297 () Bool)

(assert (=> d!43963 (=> (not res!67297) (not e!91812))))

(assert (=> d!43963 (= res!67297 ((_ is Cons!1760) (toList!889 lt!73470)))))

(assert (=> d!43963 (= (contains!923 (toList!889 lt!73470) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73921)))

(declare-fun b!140830 () Bool)

(declare-fun e!91813 () Bool)

(assert (=> b!140830 (= e!91812 e!91813)))

(declare-fun res!67296 () Bool)

(assert (=> b!140830 (=> res!67296 e!91813)))

(assert (=> b!140830 (= res!67296 (= (h!2367 (toList!889 lt!73470)) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140831 () Bool)

(assert (=> b!140831 (= e!91813 (contains!923 (t!6360 (toList!889 lt!73470)) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!43963 res!67297) b!140830))

(assert (= (and b!140830 (not res!67296)) b!140831))

(declare-fun m!168725 () Bool)

(assert (=> d!43963 m!168725))

(declare-fun m!168727 () Bool)

(assert (=> d!43963 m!168727))

(declare-fun m!168729 () Bool)

(assert (=> b!140831 m!168729))

(assert (=> b!140110 d!43963))

(declare-fun d!43965 () Bool)

(declare-fun res!67298 () Bool)

(declare-fun e!91814 () Bool)

(assert (=> d!43965 (=> res!67298 e!91814)))

(assert (=> d!43965 (= res!67298 (and ((_ is Cons!1760) (toList!889 lt!73135)) (= (_1!1352 (h!2367 (toList!889 lt!73135))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43965 (= (containsKey!179 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000) e!91814)))

(declare-fun b!140832 () Bool)

(declare-fun e!91815 () Bool)

(assert (=> b!140832 (= e!91814 e!91815)))

(declare-fun res!67299 () Bool)

(assert (=> b!140832 (=> (not res!67299) (not e!91815))))

(assert (=> b!140832 (= res!67299 (and (or (not ((_ is Cons!1760) (toList!889 lt!73135))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73135))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73135)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73135))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140833 () Bool)

(assert (=> b!140833 (= e!91815 (containsKey!179 (t!6360 (toList!889 lt!73135)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43965 (not res!67298)) b!140832))

(assert (= (and b!140832 res!67299) b!140833))

(declare-fun m!168731 () Bool)

(assert (=> b!140833 m!168731))

(assert (=> d!43585 d!43965))

(declare-fun b!140834 () Bool)

(declare-fun res!67301 () Bool)

(declare-fun e!91820 () Bool)

(assert (=> b!140834 (=> (not res!67301) (not e!91820))))

(declare-fun lt!73924 () ListLongMap!1747)

(assert (=> b!140834 (= res!67301 (not (contains!921 lt!73924 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140835 () Bool)

(assert (=> b!140835 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!140835 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))))))))

(declare-fun e!91816 () Bool)

(assert (=> b!140835 (= e!91816 (= (apply!120 lt!73924 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140836 () Bool)

(declare-fun e!91822 () ListLongMap!1747)

(declare-fun e!91819 () ListLongMap!1747)

(assert (=> b!140836 (= e!91822 e!91819)))

(declare-fun c!26420 () Bool)

(assert (=> b!140836 (= c!26420 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140837 () Bool)

(declare-fun e!91817 () Bool)

(assert (=> b!140837 (= e!91817 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140837 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!43967 () Bool)

(assert (=> d!43967 e!91820))

(declare-fun res!67303 () Bool)

(assert (=> d!43967 (=> (not res!67303) (not e!91820))))

(assert (=> d!43967 (= res!67303 (not (contains!921 lt!73924 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43967 (= lt!73924 e!91822)))

(declare-fun c!26421 () Bool)

(assert (=> d!43967 (= c!26421 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43967 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43967 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73924)))

(declare-fun b!140838 () Bool)

(declare-fun e!91818 () Bool)

(declare-fun e!91821 () Bool)

(assert (=> b!140838 (= e!91818 e!91821)))

(declare-fun c!26418 () Bool)

(assert (=> b!140838 (= c!26418 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140839 () Bool)

(assert (=> b!140839 (= e!91821 (= lt!73924 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140840 () Bool)

(assert (=> b!140840 (= e!91818 e!91816)))

(assert (=> b!140840 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67302 () Bool)

(assert (=> b!140840 (= res!67302 (contains!921 lt!73924 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140840 (=> (not res!67302) (not e!91816))))

(declare-fun b!140841 () Bool)

(declare-fun call!15646 () ListLongMap!1747)

(assert (=> b!140841 (= e!91819 call!15646)))

(declare-fun bm!15643 () Bool)

(assert (=> bm!15643 (= call!15646 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140842 () Bool)

(assert (=> b!140842 (= e!91822 (ListLongMap!1748 Nil!1761))))

(declare-fun b!140843 () Bool)

(declare-fun lt!73922 () Unit!4395)

(declare-fun lt!73928 () Unit!4395)

(assert (=> b!140843 (= lt!73922 lt!73928)))

(declare-fun lt!73923 () ListLongMap!1747)

(declare-fun lt!73927 () (_ BitVec 64))

(declare-fun lt!73925 () V!3555)

(declare-fun lt!73926 () (_ BitVec 64))

(assert (=> b!140843 (not (contains!921 (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925)) lt!73926))))

(assert (=> b!140843 (= lt!73928 (addStillNotContains!66 lt!73923 lt!73927 lt!73925 lt!73926))))

(assert (=> b!140843 (= lt!73926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140843 (= lt!73925 (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140843 (= lt!73927 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140843 (= lt!73923 call!15646)))

(assert (=> b!140843 (= e!91819 (+!174 call!15646 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140844 () Bool)

(assert (=> b!140844 (= e!91820 e!91818)))

(declare-fun c!26419 () Bool)

(assert (=> b!140844 (= c!26419 e!91817)))

(declare-fun res!67300 () Bool)

(assert (=> b!140844 (=> (not res!67300) (not e!91817))))

(assert (=> b!140844 (= res!67300 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140845 () Bool)

(assert (=> b!140845 (= e!91821 (isEmpty!423 lt!73924))))

(assert (= (and d!43967 c!26421) b!140842))

(assert (= (and d!43967 (not c!26421)) b!140836))

(assert (= (and b!140836 c!26420) b!140843))

(assert (= (and b!140836 (not c!26420)) b!140841))

(assert (= (or b!140843 b!140841) bm!15643))

(assert (= (and d!43967 res!67303) b!140834))

(assert (= (and b!140834 res!67301) b!140844))

(assert (= (and b!140844 res!67300) b!140837))

(assert (= (and b!140844 c!26419) b!140840))

(assert (= (and b!140844 (not c!26419)) b!140838))

(assert (= (and b!140840 res!67302) b!140835))

(assert (= (and b!140838 c!26418) b!140839))

(assert (= (and b!140838 (not c!26418)) b!140845))

(declare-fun b_lambda!6335 () Bool)

(assert (=> (not b_lambda!6335) (not b!140835)))

(assert (=> b!140835 t!6366))

(declare-fun b_and!8825 () Bool)

(assert (= b_and!8821 (and (=> t!6366 result!4203) b_and!8825)))

(assert (=> b!140835 t!6368))

(declare-fun b_and!8827 () Bool)

(assert (= b_and!8823 (and (=> t!6368 result!4205) b_and!8827)))

(declare-fun b_lambda!6337 () Bool)

(assert (=> (not b_lambda!6337) (not b!140843)))

(assert (=> b!140843 t!6366))

(declare-fun b_and!8829 () Bool)

(assert (= b_and!8825 (and (=> t!6366 result!4203) b_and!8829)))

(assert (=> b!140843 t!6368))

(declare-fun b_and!8831 () Bool)

(assert (= b_and!8827 (and (=> t!6368 result!4205) b_and!8831)))

(declare-fun m!168733 () Bool)

(assert (=> b!140839 m!168733))

(assert (=> b!140837 m!166967))

(assert (=> b!140837 m!166967))

(assert (=> b!140837 m!166981))

(declare-fun m!168735 () Bool)

(assert (=> b!140843 m!168735))

(declare-fun m!168737 () Bool)

(assert (=> b!140843 m!168737))

(assert (=> b!140843 m!166967))

(declare-fun m!168739 () Bool)

(assert (=> b!140843 m!168739))

(declare-fun m!168741 () Bool)

(assert (=> b!140843 m!168741))

(assert (=> b!140843 m!166971))

(assert (=> b!140843 m!167155))

(assert (=> b!140843 m!167155))

(assert (=> b!140843 m!166971))

(assert (=> b!140843 m!167157))

(assert (=> b!140843 m!168735))

(assert (=> b!140840 m!166967))

(assert (=> b!140840 m!166967))

(declare-fun m!168743 () Bool)

(assert (=> b!140840 m!168743))

(assert (=> b!140836 m!166967))

(assert (=> b!140836 m!166967))

(assert (=> b!140836 m!166981))

(assert (=> b!140835 m!166967))

(assert (=> b!140835 m!166967))

(declare-fun m!168745 () Bool)

(assert (=> b!140835 m!168745))

(assert (=> b!140835 m!166971))

(assert (=> b!140835 m!167155))

(assert (=> b!140835 m!167155))

(assert (=> b!140835 m!166971))

(assert (=> b!140835 m!167157))

(declare-fun m!168747 () Bool)

(assert (=> b!140845 m!168747))

(declare-fun m!168749 () Bool)

(assert (=> d!43967 m!168749))

(assert (=> d!43967 m!166961))

(declare-fun m!168751 () Bool)

(assert (=> b!140834 m!168751))

(assert (=> bm!15643 m!168733))

(assert (=> bm!15543 d!43967))

(declare-fun d!43969 () Bool)

(declare-fun e!91823 () Bool)

(assert (=> d!43969 e!91823))

(declare-fun res!67305 () Bool)

(assert (=> d!43969 (=> (not res!67305) (not e!91823))))

(declare-fun lt!73931 () ListLongMap!1747)

(assert (=> d!43969 (= res!67305 (contains!921 lt!73931 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!73932 () List!1764)

(assert (=> d!43969 (= lt!73931 (ListLongMap!1748 lt!73932))))

(declare-fun lt!73929 () Unit!4395)

(declare-fun lt!73930 () Unit!4395)

(assert (=> d!43969 (= lt!73929 lt!73930)))

(assert (=> d!43969 (= (getValueByKey!175 lt!73932 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43969 (= lt!73930 (lemmaContainsTupThenGetReturnValue!91 lt!73932 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43969 (= lt!73932 (insertStrictlySorted!93 (toList!889 call!15549) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!43969 (= (+!174 call!15549 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!73931)))

(declare-fun b!140846 () Bool)

(declare-fun res!67304 () Bool)

(assert (=> b!140846 (=> (not res!67304) (not e!91823))))

(assert (=> b!140846 (= res!67304 (= (getValueByKey!175 (toList!889 lt!73931) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!140847 () Bool)

(assert (=> b!140847 (= e!91823 (contains!923 (toList!889 lt!73931) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!43969 res!67305) b!140846))

(assert (= (and b!140846 res!67304) b!140847))

(declare-fun m!168753 () Bool)

(assert (=> d!43969 m!168753))

(declare-fun m!168755 () Bool)

(assert (=> d!43969 m!168755))

(declare-fun m!168757 () Bool)

(assert (=> d!43969 m!168757))

(declare-fun m!168759 () Bool)

(assert (=> d!43969 m!168759))

(declare-fun m!168761 () Bool)

(assert (=> b!140846 m!168761))

(declare-fun m!168763 () Bool)

(assert (=> b!140847 m!168763))

(assert (=> b!140006 d!43969))

(declare-fun d!43971 () Bool)

(declare-fun e!91825 () Bool)

(assert (=> d!43971 e!91825))

(declare-fun res!67306 () Bool)

(assert (=> d!43971 (=> res!67306 e!91825)))

(declare-fun lt!73933 () Bool)

(assert (=> d!43971 (= res!67306 (not lt!73933))))

(declare-fun lt!73936 () Bool)

(assert (=> d!43971 (= lt!73933 lt!73936)))

(declare-fun lt!73934 () Unit!4395)

(declare-fun e!91824 () Unit!4395)

(assert (=> d!43971 (= lt!73934 e!91824)))

(declare-fun c!26422 () Bool)

(assert (=> d!43971 (= c!26422 lt!73936)))

(assert (=> d!43971 (= lt!73936 (containsKey!179 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!43971 (= (contains!921 lt!73250 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!73933)))

(declare-fun b!140848 () Bool)

(declare-fun lt!73935 () Unit!4395)

(assert (=> b!140848 (= e!91824 lt!73935)))

(assert (=> b!140848 (= lt!73935 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140848 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140849 () Bool)

(declare-fun Unit!4442 () Unit!4395)

(assert (=> b!140849 (= e!91824 Unit!4442)))

(declare-fun b!140850 () Bool)

(assert (=> b!140850 (= e!91825 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!43971 c!26422) b!140848))

(assert (= (and d!43971 (not c!26422)) b!140849))

(assert (= (and d!43971 (not res!67306)) b!140850))

(assert (=> d!43971 m!166967))

(declare-fun m!168765 () Bool)

(assert (=> d!43971 m!168765))

(assert (=> b!140848 m!166967))

(declare-fun m!168767 () Bool)

(assert (=> b!140848 m!168767))

(assert (=> b!140848 m!166967))

(assert (=> b!140848 m!167727))

(assert (=> b!140848 m!167727))

(declare-fun m!168769 () Bool)

(assert (=> b!140848 m!168769))

(assert (=> b!140850 m!166967))

(assert (=> b!140850 m!167727))

(assert (=> b!140850 m!167727))

(assert (=> b!140850 m!168769))

(assert (=> b!139885 d!43971))

(declare-fun bm!15644 () Bool)

(declare-fun call!15652 () ListLongMap!1747)

(declare-fun call!15651 () ListLongMap!1747)

(assert (=> bm!15644 (= call!15652 call!15651)))

(declare-fun b!140851 () Bool)

(declare-fun e!91832 () ListLongMap!1747)

(declare-fun call!15647 () ListLongMap!1747)

(assert (=> b!140851 (= e!91832 call!15647)))

(declare-fun bm!15645 () Bool)

(declare-fun call!15648 () ListLongMap!1747)

(assert (=> bm!15645 (= call!15648 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))))))

(declare-fun b!140852 () Bool)

(declare-fun e!91830 () Unit!4395)

(declare-fun lt!73954 () Unit!4395)

(assert (=> b!140852 (= e!91830 lt!73954)))

(declare-fun lt!73950 () ListLongMap!1747)

(assert (=> b!140852 (= lt!73950 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))))))

(declare-fun lt!73943 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73943 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73948 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73948 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))

(declare-fun lt!73945 () Unit!4395)

(assert (=> b!140852 (= lt!73945 (addStillContains!96 lt!73950 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)) lt!73948))))

(assert (=> b!140852 (contains!921 (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))) lt!73948)))

(declare-fun lt!73953 () Unit!4395)

(assert (=> b!140852 (= lt!73953 lt!73945)))

(declare-fun lt!73952 () ListLongMap!1747)

(assert (=> b!140852 (= lt!73952 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))))))

(declare-fun lt!73956 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73956 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73958 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73958 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))

(declare-fun lt!73949 () Unit!4395)

(assert (=> b!140852 (= lt!73949 (addApplyDifferent!96 lt!73952 lt!73956 (minValue!2790 (_2!1353 lt!73223)) lt!73958))))

(assert (=> b!140852 (= (apply!120 (+!174 lt!73952 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))) lt!73958) (apply!120 lt!73952 lt!73958))))

(declare-fun lt!73937 () Unit!4395)

(assert (=> b!140852 (= lt!73937 lt!73949)))

(declare-fun lt!73946 () ListLongMap!1747)

(assert (=> b!140852 (= lt!73946 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))))))

(declare-fun lt!73951 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73951 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73957 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73957 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))

(declare-fun lt!73944 () Unit!4395)

(assert (=> b!140852 (= lt!73944 (addApplyDifferent!96 lt!73946 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)) lt!73957))))

(assert (=> b!140852 (= (apply!120 (+!174 lt!73946 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))) lt!73957) (apply!120 lt!73946 lt!73957))))

(declare-fun lt!73942 () Unit!4395)

(assert (=> b!140852 (= lt!73942 lt!73944)))

(declare-fun lt!73955 () ListLongMap!1747)

(assert (=> b!140852 (= lt!73955 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))))))

(declare-fun lt!73938 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73938 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!73947 () (_ BitVec 64))

(assert (=> b!140852 (= lt!73947 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))

(assert (=> b!140852 (= lt!73954 (addApplyDifferent!96 lt!73955 lt!73938 (minValue!2790 (_2!1353 lt!73223)) lt!73947))))

(assert (=> b!140852 (= (apply!120 (+!174 lt!73955 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))) lt!73947) (apply!120 lt!73955 lt!73947))))

(declare-fun b!140853 () Bool)

(declare-fun res!67311 () Bool)

(declare-fun e!91826 () Bool)

(assert (=> b!140853 (=> (not res!67311) (not e!91826))))

(declare-fun e!91836 () Bool)

(assert (=> b!140853 (= res!67311 e!91836)))

(declare-fun res!67308 () Bool)

(assert (=> b!140853 (=> res!67308 e!91836)))

(declare-fun e!91833 () Bool)

(assert (=> b!140853 (= res!67308 (not e!91833))))

(declare-fun res!67307 () Bool)

(assert (=> b!140853 (=> (not res!67307) (not e!91833))))

(assert (=> b!140853 (= res!67307 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(declare-fun b!140854 () Bool)

(assert (=> b!140854 (= e!91832 call!15652)))

(declare-fun b!140855 () Bool)

(declare-fun e!91828 () ListLongMap!1747)

(declare-fun e!91835 () ListLongMap!1747)

(assert (=> b!140855 (= e!91828 e!91835)))

(declare-fun c!26427 () Bool)

(assert (=> b!140855 (= c!26427 (and (not (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!26424 () Bool)

(declare-fun bm!15646 () Bool)

(declare-fun call!15650 () ListLongMap!1747)

(assert (=> bm!15646 (= call!15651 (+!174 (ite c!26424 call!15648 (ite c!26427 call!15650 call!15647)) (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))))))

(declare-fun b!140857 () Bool)

(declare-fun Unit!4443 () Unit!4395)

(assert (=> b!140857 (= e!91830 Unit!4443)))

(declare-fun b!140858 () Bool)

(declare-fun e!91837 () Bool)

(declare-fun e!91829 () Bool)

(assert (=> b!140858 (= e!91837 e!91829)))

(declare-fun res!67312 () Bool)

(declare-fun call!15649 () Bool)

(assert (=> b!140858 (= res!67312 call!15649)))

(assert (=> b!140858 (=> (not res!67312) (not e!91829))))

(declare-fun b!140859 () Bool)

(declare-fun e!91838 () Bool)

(assert (=> b!140859 (= e!91826 e!91838)))

(declare-fun c!26423 () Bool)

(assert (=> b!140859 (= c!26423 (not (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!140860 () Bool)

(assert (=> b!140860 (= e!91833 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!140861 () Bool)

(declare-fun lt!73941 () ListLongMap!1747)

(assert (=> b!140861 (= e!91829 (= (apply!120 lt!73941 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 (_2!1353 lt!73223))))))

(declare-fun bm!15647 () Bool)

(assert (=> bm!15647 (= call!15647 call!15650)))

(declare-fun b!140862 () Bool)

(declare-fun call!15653 () Bool)

(assert (=> b!140862 (= e!91838 (not call!15653))))

(declare-fun b!140863 () Bool)

(declare-fun e!91834 () Bool)

(assert (=> b!140863 (= e!91834 (= (apply!120 lt!73941 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 (_2!1353 lt!73223))))))

(declare-fun bm!15648 () Bool)

(assert (=> bm!15648 (= call!15650 call!15648)))

(declare-fun b!140864 () Bool)

(declare-fun e!91827 () Bool)

(assert (=> b!140864 (= e!91836 e!91827)))

(declare-fun res!67315 () Bool)

(assert (=> b!140864 (=> (not res!67315) (not e!91827))))

(assert (=> b!140864 (= res!67315 (contains!921 lt!73941 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(assert (=> b!140864 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(declare-fun bm!15649 () Bool)

(assert (=> bm!15649 (= call!15649 (contains!921 lt!73941 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140865 () Bool)

(assert (=> b!140865 (= e!91827 (= (apply!120 lt!73941 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73223)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140865 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 (_2!1353 lt!73223)))))))

(assert (=> b!140865 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(declare-fun b!140866 () Bool)

(declare-fun e!91831 () Bool)

(assert (=> b!140866 (= e!91831 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!140867 () Bool)

(declare-fun c!26428 () Bool)

(assert (=> b!140867 (= c!26428 (and (not (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!140867 (= e!91835 e!91832)))

(declare-fun b!140868 () Bool)

(assert (=> b!140868 (= e!91828 (+!174 call!15651 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))))

(declare-fun d!43973 () Bool)

(assert (=> d!43973 e!91826))

(declare-fun res!67309 () Bool)

(assert (=> d!43973 (=> (not res!67309) (not e!91826))))

(assert (=> d!43973 (= res!67309 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))))

(declare-fun lt!73940 () ListLongMap!1747)

(assert (=> d!43973 (= lt!73941 lt!73940)))

(declare-fun lt!73939 () Unit!4395)

(assert (=> d!43973 (= lt!73939 e!91830)))

(declare-fun c!26426 () Bool)

(assert (=> d!43973 (= c!26426 e!91831)))

(declare-fun res!67313 () Bool)

(assert (=> d!43973 (=> (not res!67313) (not e!91831))))

(assert (=> d!43973 (= res!67313 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!43973 (= lt!73940 e!91828)))

(assert (=> d!43973 (= c!26424 (and (not (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43973 (validMask!0 (mask!7280 (_2!1353 lt!73223)))))

(assert (=> d!43973 (= (getCurrentListMap!555 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))) lt!73941)))

(declare-fun b!140856 () Bool)

(assert (=> b!140856 (= e!91835 call!15652)))

(declare-fun bm!15650 () Bool)

(assert (=> bm!15650 (= call!15653 (contains!921 lt!73941 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140869 () Bool)

(assert (=> b!140869 (= e!91838 e!91834)))

(declare-fun res!67314 () Bool)

(assert (=> b!140869 (= res!67314 call!15653)))

(assert (=> b!140869 (=> (not res!67314) (not e!91834))))

(declare-fun b!140870 () Bool)

(assert (=> b!140870 (= e!91837 (not call!15649))))

(declare-fun b!140871 () Bool)

(declare-fun res!67310 () Bool)

(assert (=> b!140871 (=> (not res!67310) (not e!91826))))

(assert (=> b!140871 (= res!67310 e!91837)))

(declare-fun c!26425 () Bool)

(assert (=> b!140871 (= c!26425 (not (= (bvand (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!43973 c!26424) b!140868))

(assert (= (and d!43973 (not c!26424)) b!140855))

(assert (= (and b!140855 c!26427) b!140856))

(assert (= (and b!140855 (not c!26427)) b!140867))

(assert (= (and b!140867 c!26428) b!140854))

(assert (= (and b!140867 (not c!26428)) b!140851))

(assert (= (or b!140854 b!140851) bm!15647))

(assert (= (or b!140856 bm!15647) bm!15648))

(assert (= (or b!140856 b!140854) bm!15644))

(assert (= (or b!140868 bm!15648) bm!15645))

(assert (= (or b!140868 bm!15644) bm!15646))

(assert (= (and d!43973 res!67313) b!140866))

(assert (= (and d!43973 c!26426) b!140852))

(assert (= (and d!43973 (not c!26426)) b!140857))

(assert (= (and d!43973 res!67309) b!140853))

(assert (= (and b!140853 res!67307) b!140860))

(assert (= (and b!140853 (not res!67308)) b!140864))

(assert (= (and b!140864 res!67315) b!140865))

(assert (= (and b!140853 res!67311) b!140871))

(assert (= (and b!140871 c!26425) b!140858))

(assert (= (and b!140871 (not c!26425)) b!140870))

(assert (= (and b!140858 res!67312) b!140861))

(assert (= (or b!140858 b!140870) bm!15649))

(assert (= (and b!140871 res!67310) b!140859))

(assert (= (and b!140859 c!26423) b!140869))

(assert (= (and b!140859 (not c!26423)) b!140862))

(assert (= (and b!140869 res!67314) b!140863))

(assert (= (or b!140869 b!140862) bm!15650))

(declare-fun b_lambda!6339 () Bool)

(assert (=> (not b_lambda!6339) (not b!140865)))

(declare-fun t!6370 () Bool)

(declare-fun tb!2569 () Bool)

(assert (=> (and b!139567 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 (_2!1353 lt!73223))) t!6370) tb!2569))

(declare-fun result!4207 () Bool)

(assert (=> tb!2569 (= result!4207 tp_is_empty!2931)))

(assert (=> b!140865 t!6370))

(declare-fun b_and!8833 () Bool)

(assert (= b_and!8829 (and (=> t!6370 result!4207) b_and!8833)))

(declare-fun tb!2571 () Bool)

(declare-fun t!6372 () Bool)

(assert (=> (and b!139573 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (_2!1353 lt!73223))) t!6372) tb!2571))

(declare-fun result!4209 () Bool)

(assert (= result!4209 result!4207))

(assert (=> b!140865 t!6372))

(declare-fun b_and!8835 () Bool)

(assert (= b_and!8831 (and (=> t!6372 result!4209) b_and!8835)))

(declare-fun m!168771 () Bool)

(assert (=> b!140868 m!168771))

(declare-fun m!168773 () Bool)

(assert (=> bm!15645 m!168773))

(assert (=> d!43973 m!168649))

(declare-fun m!168775 () Bool)

(assert (=> b!140863 m!168775))

(declare-fun m!168777 () Bool)

(assert (=> bm!15646 m!168777))

(assert (=> b!140865 m!167711))

(assert (=> b!140865 m!167711))

(declare-fun m!168779 () Bool)

(assert (=> b!140865 m!168779))

(declare-fun m!168781 () Bool)

(assert (=> b!140865 m!168781))

(declare-fun m!168783 () Bool)

(assert (=> b!140865 m!168783))

(assert (=> b!140865 m!168781))

(declare-fun m!168785 () Bool)

(assert (=> b!140865 m!168785))

(assert (=> b!140865 m!168783))

(declare-fun m!168787 () Bool)

(assert (=> bm!15649 m!168787))

(declare-fun m!168789 () Bool)

(assert (=> b!140861 m!168789))

(assert (=> b!140860 m!167711))

(assert (=> b!140860 m!167711))

(assert (=> b!140860 m!167715))

(assert (=> b!140864 m!167711))

(assert (=> b!140864 m!167711))

(declare-fun m!168791 () Bool)

(assert (=> b!140864 m!168791))

(assert (=> b!140866 m!167711))

(assert (=> b!140866 m!167711))

(assert (=> b!140866 m!167715))

(declare-fun m!168793 () Bool)

(assert (=> bm!15650 m!168793))

(declare-fun m!168795 () Bool)

(assert (=> b!140852 m!168795))

(declare-fun m!168797 () Bool)

(assert (=> b!140852 m!168797))

(declare-fun m!168799 () Bool)

(assert (=> b!140852 m!168799))

(declare-fun m!168801 () Bool)

(assert (=> b!140852 m!168801))

(declare-fun m!168803 () Bool)

(assert (=> b!140852 m!168803))

(declare-fun m!168805 () Bool)

(assert (=> b!140852 m!168805))

(declare-fun m!168807 () Bool)

(assert (=> b!140852 m!168807))

(declare-fun m!168809 () Bool)

(assert (=> b!140852 m!168809))

(assert (=> b!140852 m!168809))

(declare-fun m!168811 () Bool)

(assert (=> b!140852 m!168811))

(assert (=> b!140852 m!168773))

(declare-fun m!168813 () Bool)

(assert (=> b!140852 m!168813))

(declare-fun m!168815 () Bool)

(assert (=> b!140852 m!168815))

(assert (=> b!140852 m!168801))

(declare-fun m!168817 () Bool)

(assert (=> b!140852 m!168817))

(declare-fun m!168819 () Bool)

(assert (=> b!140852 m!168819))

(assert (=> b!140852 m!167711))

(declare-fun m!168821 () Bool)

(assert (=> b!140852 m!168821))

(assert (=> b!140852 m!168795))

(declare-fun m!168823 () Bool)

(assert (=> b!140852 m!168823))

(assert (=> b!140852 m!168813))

(assert (=> d!43491 d!43973))

(assert (=> b!139970 d!43605))

(declare-fun d!43975 () Bool)

(declare-fun e!91840 () Bool)

(assert (=> d!43975 e!91840))

(declare-fun res!67316 () Bool)

(assert (=> d!43975 (=> res!67316 e!91840)))

(declare-fun lt!73959 () Bool)

(assert (=> d!43975 (= res!67316 (not lt!73959))))

(declare-fun lt!73962 () Bool)

(assert (=> d!43975 (= lt!73959 lt!73962)))

(declare-fun lt!73960 () Unit!4395)

(declare-fun e!91839 () Unit!4395)

(assert (=> d!43975 (= lt!73960 e!91839)))

(declare-fun c!26429 () Bool)

(assert (=> d!43975 (= c!26429 lt!73962)))

(assert (=> d!43975 (= lt!73962 (containsKey!179 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43975 (= (contains!921 lt!73391 #b0000000000000000000000000000000000000000000000000000000000000000) lt!73959)))

(declare-fun b!140872 () Bool)

(declare-fun lt!73961 () Unit!4395)

(assert (=> b!140872 (= e!91839 lt!73961)))

(assert (=> b!140872 (= lt!73961 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140872 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140873 () Bool)

(declare-fun Unit!4444 () Unit!4395)

(assert (=> b!140873 (= e!91839 Unit!4444)))

(declare-fun b!140874 () Bool)

(assert (=> b!140874 (= e!91840 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43975 c!26429) b!140872))

(assert (= (and d!43975 (not c!26429)) b!140873))

(assert (= (and d!43975 (not res!67316)) b!140874))

(declare-fun m!168825 () Bool)

(assert (=> d!43975 m!168825))

(declare-fun m!168827 () Bool)

(assert (=> b!140872 m!168827))

(assert (=> b!140872 m!167657))

(assert (=> b!140872 m!167657))

(declare-fun m!168829 () Bool)

(assert (=> b!140872 m!168829))

(assert (=> b!140874 m!167657))

(assert (=> b!140874 m!167657))

(assert (=> b!140874 m!168829))

(assert (=> bm!15547 d!43975))

(declare-fun d!43977 () Bool)

(assert (=> d!43977 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))

(declare-fun lt!73963 () Unit!4395)

(assert (=> d!43977 (= lt!73963 (choose!868 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))

(declare-fun e!91841 () Bool)

(assert (=> d!43977 e!91841))

(declare-fun res!67317 () Bool)

(assert (=> d!43977 (=> (not res!67317) (not e!91841))))

(assert (=> d!43977 (= res!67317 (isStrictlySorted!320 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43977 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142) lt!73963)))

(declare-fun b!140875 () Bool)

(assert (=> b!140875 (= e!91841 (containsKey!179 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))

(assert (= (and d!43977 res!67317) b!140875))

(assert (=> d!43977 m!167497))

(assert (=> d!43977 m!167497))

(assert (=> d!43977 m!167499))

(declare-fun m!168831 () Bool)

(assert (=> d!43977 m!168831))

(declare-fun m!168833 () Bool)

(assert (=> d!43977 m!168833))

(assert (=> b!140875 m!167493))

(assert (=> b!140214 d!43977))

(assert (=> b!140214 d!43653))

(assert (=> b!140214 d!43655))

(declare-fun d!43979 () Bool)

(assert (=> d!43979 (= (get!1536 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!139947 d!43979))

(declare-fun b!140878 () Bool)

(declare-fun e!91843 () Option!181)

(assert (=> b!140878 (= e!91843 (getValueByKey!175 (t!6360 (toList!889 lt!73546)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140877 () Bool)

(declare-fun e!91842 () Option!181)

(assert (=> b!140877 (= e!91842 e!91843)))

(declare-fun c!26431 () Bool)

(assert (=> b!140877 (= c!26431 (and ((_ is Cons!1760) (toList!889 lt!73546)) (not (= (_1!1352 (h!2367 (toList!889 lt!73546))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140879 () Bool)

(assert (=> b!140879 (= e!91843 None!179)))

(declare-fun b!140876 () Bool)

(assert (=> b!140876 (= e!91842 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73546)))))))

(declare-fun d!43981 () Bool)

(declare-fun c!26430 () Bool)

(assert (=> d!43981 (= c!26430 (and ((_ is Cons!1760) (toList!889 lt!73546)) (= (_1!1352 (h!2367 (toList!889 lt!73546))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!43981 (= (getValueByKey!175 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91842)))

(assert (= (and d!43981 c!26430) b!140876))

(assert (= (and d!43981 (not c!26430)) b!140877))

(assert (= (and b!140877 c!26431) b!140878))

(assert (= (and b!140877 (not c!26431)) b!140879))

(declare-fun m!168835 () Bool)

(assert (=> b!140878 m!168835))

(assert (=> b!140209 d!43981))

(declare-fun d!43983 () Bool)

(assert (=> d!43983 (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))

(declare-fun lt!73966 () Unit!4395)

(declare-fun choose!876 (array!4896 array!4898 (_ BitVec 32) (_ BitVec 32) V!3555 V!3555 (_ BitVec 64) (_ BitVec 32) Int) Unit!4395)

(assert (=> d!43983 (= lt!73966 (choose!876 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!43983 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43983 (= (lemmaArrayContainsKeyThenInListMap!45 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73966)))

(declare-fun bs!5894 () Bool)

(assert (= bs!5894 d!43983))

(assert (=> bs!5894 m!166829))

(assert (=> bs!5894 m!166829))

(assert (=> bs!5894 m!166733))

(assert (=> bs!5894 m!167049))

(assert (=> bs!5894 m!166733))

(declare-fun m!168837 () Bool)

(assert (=> bs!5894 m!168837))

(assert (=> bs!5894 m!166961))

(assert (=> b!139938 d!43983))

(assert (=> b!139938 d!43913))

(assert (=> b!139938 d!43525))

(assert (=> b!140012 d!43905))

(assert (=> b!140012 d!43525))

(assert (=> b!140012 d!43509))

(declare-fun d!43985 () Bool)

(declare-fun lt!73967 () Bool)

(assert (=> d!43985 (= lt!73967 (select (content!137 (toList!889 lt!73378)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!91844 () Bool)

(assert (=> d!43985 (= lt!73967 e!91844)))

(declare-fun res!67319 () Bool)

(assert (=> d!43985 (=> (not res!67319) (not e!91844))))

(assert (=> d!43985 (= res!67319 ((_ is Cons!1760) (toList!889 lt!73378)))))

(assert (=> d!43985 (= (contains!923 (toList!889 lt!73378) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73967)))

(declare-fun b!140880 () Bool)

(declare-fun e!91845 () Bool)

(assert (=> b!140880 (= e!91844 e!91845)))

(declare-fun res!67318 () Bool)

(assert (=> b!140880 (=> res!67318 e!91845)))

(assert (=> b!140880 (= res!67318 (= (h!2367 (toList!889 lt!73378)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!140881 () Bool)

(assert (=> b!140881 (= e!91845 (contains!923 (t!6360 (toList!889 lt!73378)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43985 res!67319) b!140880))

(assert (= (and b!140880 (not res!67318)) b!140881))

(declare-fun m!168839 () Bool)

(assert (=> d!43985 m!168839))

(declare-fun m!168841 () Bool)

(assert (=> d!43985 m!168841))

(declare-fun m!168843 () Bool)

(assert (=> b!140881 m!168843))

(assert (=> b!139982 d!43985))

(declare-fun b!140882 () Bool)

(declare-fun e!91847 () (_ BitVec 32))

(declare-fun call!15654 () (_ BitVec 32))

(assert (=> b!140882 (= e!91847 (bvadd #b00000000000000000000000000000001 call!15654))))

(declare-fun b!140883 () Bool)

(assert (=> b!140883 (= e!91847 call!15654)))

(declare-fun b!140884 () Bool)

(declare-fun e!91846 () (_ BitVec 32))

(assert (=> b!140884 (= e!91846 e!91847)))

(declare-fun c!26433 () Bool)

(assert (=> b!140884 (= c!26433 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!140885 () Bool)

(assert (=> b!140885 (= e!91846 #b00000000000000000000000000000000)))

(declare-fun d!43987 () Bool)

(declare-fun lt!73968 () (_ BitVec 32))

(assert (=> d!43987 (and (bvsge lt!73968 #b00000000000000000000000000000000) (bvsle lt!73968 (bvsub (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!43987 (= lt!73968 e!91846)))

(declare-fun c!26432 () Bool)

(assert (=> d!43987 (= c!26432 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43987 (and (bvsle #b00000000000000000000000000000000 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!43987 (= (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000000 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))) lt!73968)))

(declare-fun bm!15651 () Bool)

(assert (=> bm!15651 (= call!15654 (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!43987 c!26432) b!140885))

(assert (= (and d!43987 (not c!26432)) b!140884))

(assert (= (and b!140884 c!26433) b!140882))

(assert (= (and b!140884 (not c!26433)) b!140883))

(assert (= (or b!140882 b!140883) bm!15651))

(assert (=> b!140884 m!167905))

(assert (=> b!140884 m!167905))

(assert (=> b!140884 m!167909))

(declare-fun m!168845 () Bool)

(assert (=> bm!15651 m!168845))

(assert (=> b!140222 d!43987))

(declare-fun d!43989 () Bool)

(assert (=> d!43989 (= (apply!120 lt!73482 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5895 () Bool)

(assert (= bs!5895 d!43989))

(assert (=> bs!5895 m!167643))

(assert (=> bs!5895 m!167643))

(declare-fun m!168847 () Bool)

(assert (=> bs!5895 m!168847))

(assert (=> b!140145 d!43989))

(declare-fun d!43991 () Bool)

(assert (=> d!43991 (= (apply!120 lt!73450 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5896 () Bool)

(assert (= bs!5896 d!43991))

(assert (=> bs!5896 m!167651))

(assert (=> bs!5896 m!167651))

(declare-fun m!168849 () Bool)

(assert (=> bs!5896 m!168849))

(assert (=> b!140098 d!43991))

(declare-fun d!43993 () Bool)

(declare-fun res!67320 () Bool)

(declare-fun e!91848 () Bool)

(assert (=> d!43993 (=> res!67320 e!91848)))

(assert (=> d!43993 (= res!67320 (and ((_ is Cons!1760) (toList!889 lt!73135)) (= (_1!1352 (h!2367 (toList!889 lt!73135))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43993 (= (containsKey!179 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000) e!91848)))

(declare-fun b!140886 () Bool)

(declare-fun e!91849 () Bool)

(assert (=> b!140886 (= e!91848 e!91849)))

(declare-fun res!67321 () Bool)

(assert (=> b!140886 (=> (not res!67321) (not e!91849))))

(assert (=> b!140886 (= res!67321 (and (or (not ((_ is Cons!1760) (toList!889 lt!73135))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73135))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73135)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73135))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140887 () Bool)

(assert (=> b!140887 (= e!91849 (containsKey!179 (t!6360 (toList!889 lt!73135)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43993 (not res!67320)) b!140886))

(assert (= (and b!140886 res!67321) b!140887))

(declare-fun m!168851 () Bool)

(assert (=> b!140887 m!168851))

(assert (=> d!43547 d!43993))

(declare-fun b!140888 () Bool)

(declare-fun res!67323 () Bool)

(declare-fun e!91854 () Bool)

(assert (=> b!140888 (=> (not res!67323) (not e!91854))))

(declare-fun lt!73971 () ListLongMap!1747)

(assert (=> b!140888 (= res!67323 (not (contains!921 lt!73971 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!140889 () Bool)

(assert (=> b!140889 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!140889 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(declare-fun e!91850 () Bool)

(assert (=> b!140889 (= e!91850 (= (apply!120 lt!73971 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!140890 () Bool)

(declare-fun e!91856 () ListLongMap!1747)

(declare-fun e!91853 () ListLongMap!1747)

(assert (=> b!140890 (= e!91856 e!91853)))

(declare-fun c!26436 () Bool)

(assert (=> b!140890 (= c!26436 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!140891 () Bool)

(declare-fun e!91851 () Bool)

(assert (=> b!140891 (= e!91851 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140891 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!43995 () Bool)

(assert (=> d!43995 e!91854))

(declare-fun res!67325 () Bool)

(assert (=> d!43995 (=> (not res!67325) (not e!91854))))

(assert (=> d!43995 (= res!67325 (not (contains!921 lt!73971 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43995 (= lt!73971 e!91856)))

(declare-fun c!26437 () Bool)

(assert (=> d!43995 (= c!26437 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!43995 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!43995 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!73971)))

(declare-fun b!140892 () Bool)

(declare-fun e!91852 () Bool)

(declare-fun e!91855 () Bool)

(assert (=> b!140892 (= e!91852 e!91855)))

(declare-fun c!26434 () Bool)

(assert (=> b!140892 (= c!26434 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140893 () Bool)

(assert (=> b!140893 (= e!91855 (= lt!73971 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!140894 () Bool)

(assert (=> b!140894 (= e!91852 e!91850)))

(assert (=> b!140894 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67324 () Bool)

(assert (=> b!140894 (= res!67324 (contains!921 lt!73971 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140894 (=> (not res!67324) (not e!91850))))

(declare-fun b!140895 () Bool)

(declare-fun call!15655 () ListLongMap!1747)

(assert (=> b!140895 (= e!91853 call!15655)))

(declare-fun bm!15652 () Bool)

(assert (=> bm!15652 (= call!15655 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!140896 () Bool)

(assert (=> b!140896 (= e!91856 (ListLongMap!1748 Nil!1761))))

(declare-fun b!140897 () Bool)

(declare-fun lt!73969 () Unit!4395)

(declare-fun lt!73975 () Unit!4395)

(assert (=> b!140897 (= lt!73969 lt!73975)))

(declare-fun lt!73974 () (_ BitVec 64))

(declare-fun lt!73970 () ListLongMap!1747)

(declare-fun lt!73972 () V!3555)

(declare-fun lt!73973 () (_ BitVec 64))

(assert (=> b!140897 (not (contains!921 (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972)) lt!73973))))

(assert (=> b!140897 (= lt!73975 (addStillNotContains!66 lt!73970 lt!73974 lt!73972 lt!73973))))

(assert (=> b!140897 (= lt!73973 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!140897 (= lt!73972 (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!140897 (= lt!73974 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!140897 (= lt!73970 call!15655)))

(assert (=> b!140897 (= e!91853 (+!174 call!15655 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!140898 () Bool)

(assert (=> b!140898 (= e!91854 e!91852)))

(declare-fun c!26435 () Bool)

(assert (=> b!140898 (= c!26435 e!91851)))

(declare-fun res!67322 () Bool)

(assert (=> b!140898 (=> (not res!67322) (not e!91851))))

(assert (=> b!140898 (= res!67322 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!140899 () Bool)

(assert (=> b!140899 (= e!91855 (isEmpty!423 lt!73971))))

(assert (= (and d!43995 c!26437) b!140896))

(assert (= (and d!43995 (not c!26437)) b!140890))

(assert (= (and b!140890 c!26436) b!140897))

(assert (= (and b!140890 (not c!26436)) b!140895))

(assert (= (or b!140897 b!140895) bm!15652))

(assert (= (and d!43995 res!67325) b!140888))

(assert (= (and b!140888 res!67323) b!140898))

(assert (= (and b!140898 res!67322) b!140891))

(assert (= (and b!140898 c!26435) b!140894))

(assert (= (and b!140898 (not c!26435)) b!140892))

(assert (= (and b!140894 res!67324) b!140889))

(assert (= (and b!140892 c!26434) b!140893))

(assert (= (and b!140892 (not c!26434)) b!140899))

(declare-fun b_lambda!6341 () Bool)

(assert (=> (not b_lambda!6341) (not b!140889)))

(assert (=> b!140889 t!6366))

(declare-fun b_and!8837 () Bool)

(assert (= b_and!8833 (and (=> t!6366 result!4203) b_and!8837)))

(assert (=> b!140889 t!6368))

(declare-fun b_and!8839 () Bool)

(assert (= b_and!8835 (and (=> t!6368 result!4205) b_and!8839)))

(declare-fun b_lambda!6343 () Bool)

(assert (=> (not b_lambda!6343) (not b!140897)))

(assert (=> b!140897 t!6366))

(declare-fun b_and!8841 () Bool)

(assert (= b_and!8837 (and (=> t!6366 result!4203) b_and!8841)))

(assert (=> b!140897 t!6368))

(declare-fun b_and!8843 () Bool)

(assert (= b_and!8839 (and (=> t!6368 result!4205) b_and!8843)))

(declare-fun m!168853 () Bool)

(assert (=> b!140893 m!168853))

(assert (=> b!140891 m!166967))

(assert (=> b!140891 m!166967))

(assert (=> b!140891 m!166981))

(declare-fun m!168855 () Bool)

(assert (=> b!140897 m!168855))

(declare-fun m!168857 () Bool)

(assert (=> b!140897 m!168857))

(assert (=> b!140897 m!166967))

(declare-fun m!168859 () Bool)

(assert (=> b!140897 m!168859))

(declare-fun m!168861 () Bool)

(assert (=> b!140897 m!168861))

(assert (=> b!140897 m!166971))

(assert (=> b!140897 m!166973))

(assert (=> b!140897 m!166973))

(assert (=> b!140897 m!166971))

(assert (=> b!140897 m!166975))

(assert (=> b!140897 m!168855))

(assert (=> b!140894 m!166967))

(assert (=> b!140894 m!166967))

(declare-fun m!168863 () Bool)

(assert (=> b!140894 m!168863))

(assert (=> b!140890 m!166967))

(assert (=> b!140890 m!166967))

(assert (=> b!140890 m!166981))

(assert (=> b!140889 m!166967))

(assert (=> b!140889 m!166967))

(declare-fun m!168865 () Bool)

(assert (=> b!140889 m!168865))

(assert (=> b!140889 m!166971))

(assert (=> b!140889 m!166973))

(assert (=> b!140889 m!166973))

(assert (=> b!140889 m!166971))

(assert (=> b!140889 m!166975))

(declare-fun m!168867 () Bool)

(assert (=> b!140899 m!168867))

(declare-fun m!168869 () Bool)

(assert (=> d!43995 m!168869))

(assert (=> d!43995 m!166961))

(declare-fun m!168871 () Bool)

(assert (=> b!140888 m!168871))

(assert (=> bm!15652 m!168853))

(assert (=> bm!15520 d!43995))

(declare-fun d!43997 () Bool)

(declare-fun e!91858 () Bool)

(assert (=> d!43997 e!91858))

(declare-fun res!67326 () Bool)

(assert (=> d!43997 (=> res!67326 e!91858)))

(declare-fun lt!73976 () Bool)

(assert (=> d!43997 (= res!67326 (not lt!73976))))

(declare-fun lt!73979 () Bool)

(assert (=> d!43997 (= lt!73976 lt!73979)))

(declare-fun lt!73977 () Unit!4395)

(declare-fun e!91857 () Unit!4395)

(assert (=> d!43997 (= lt!73977 e!91857)))

(declare-fun c!26438 () Bool)

(assert (=> d!43997 (= c!26438 lt!73979)))

(assert (=> d!43997 (= lt!73979 (containsKey!179 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43997 (= (contains!921 lt!73391 #b1000000000000000000000000000000000000000000000000000000000000000) lt!73976)))

(declare-fun b!140900 () Bool)

(declare-fun lt!73978 () Unit!4395)

(assert (=> b!140900 (= e!91857 lt!73978)))

(assert (=> b!140900 (= lt!73978 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140900 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140901 () Bool)

(declare-fun Unit!4445 () Unit!4395)

(assert (=> b!140901 (= e!91857 Unit!4445)))

(declare-fun b!140902 () Bool)

(assert (=> b!140902 (= e!91858 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43997 c!26438) b!140900))

(assert (= (and d!43997 (not c!26438)) b!140901))

(assert (= (and d!43997 (not res!67326)) b!140902))

(declare-fun m!168873 () Bool)

(assert (=> d!43997 m!168873))

(declare-fun m!168875 () Bool)

(assert (=> b!140900 m!168875))

(declare-fun m!168877 () Bool)

(assert (=> b!140900 m!168877))

(assert (=> b!140900 m!168877))

(declare-fun m!168879 () Bool)

(assert (=> b!140900 m!168879))

(assert (=> b!140902 m!168877))

(assert (=> b!140902 m!168877))

(assert (=> b!140902 m!168879))

(assert (=> bm!15548 d!43997))

(declare-fun d!43999 () Bool)

(declare-fun e!91859 () Bool)

(assert (=> d!43999 e!91859))

(declare-fun res!67328 () Bool)

(assert (=> d!43999 (=> (not res!67328) (not e!91859))))

(declare-fun lt!73982 () ListLongMap!1747)

(assert (=> d!43999 (= res!67328 (contains!921 lt!73982 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!73983 () List!1764)

(assert (=> d!43999 (= lt!73982 (ListLongMap!1748 lt!73983))))

(declare-fun lt!73980 () Unit!4395)

(declare-fun lt!73981 () Unit!4395)

(assert (=> d!43999 (= lt!73980 lt!73981)))

(assert (=> d!43999 (= (getValueByKey!175 lt!73983 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43999 (= lt!73981 (lemmaContainsTupThenGetReturnValue!91 lt!73983 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43999 (= lt!73983 (insertStrictlySorted!93 (toList!889 call!15526) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!43999 (= (+!174 call!15526 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73982)))

(declare-fun b!140903 () Bool)

(declare-fun res!67327 () Bool)

(assert (=> b!140903 (=> (not res!67327) (not e!91859))))

(assert (=> b!140903 (= res!67327 (= (getValueByKey!175 (toList!889 lt!73982) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!140904 () Bool)

(assert (=> b!140904 (= e!91859 (contains!923 (toList!889 lt!73982) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!43999 res!67328) b!140903))

(assert (= (and b!140903 res!67327) b!140904))

(declare-fun m!168881 () Bool)

(assert (=> d!43999 m!168881))

(declare-fun m!168883 () Bool)

(assert (=> d!43999 m!168883))

(declare-fun m!168885 () Bool)

(assert (=> d!43999 m!168885))

(declare-fun m!168887 () Bool)

(assert (=> d!43999 m!168887))

(declare-fun m!168889 () Bool)

(assert (=> b!140903 m!168889))

(declare-fun m!168891 () Bool)

(assert (=> b!140904 m!168891))

(assert (=> b!139889 d!43999))

(declare-fun d!44001 () Bool)

(assert (=> d!44001 (= (apply!120 lt!73396 lt!73407) (get!1538 (getValueByKey!175 (toList!889 lt!73396) lt!73407)))))

(declare-fun bs!5897 () Bool)

(assert (= bs!5897 d!44001))

(declare-fun m!168893 () Bool)

(assert (=> bs!5897 m!168893))

(assert (=> bs!5897 m!168893))

(declare-fun m!168895 () Bool)

(assert (=> bs!5897 m!168895))

(assert (=> b!139990 d!44001))

(declare-fun d!44003 () Bool)

(declare-fun e!91860 () Bool)

(assert (=> d!44003 e!91860))

(declare-fun res!67330 () Bool)

(assert (=> d!44003 (=> (not res!67330) (not e!91860))))

(declare-fun lt!73986 () ListLongMap!1747)

(assert (=> d!44003 (= res!67330 (contains!921 lt!73986 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!73987 () List!1764)

(assert (=> d!44003 (= lt!73986 (ListLongMap!1748 lt!73987))))

(declare-fun lt!73984 () Unit!4395)

(declare-fun lt!73985 () Unit!4395)

(assert (=> d!44003 (= lt!73984 lt!73985)))

(assert (=> d!44003 (= (getValueByKey!175 lt!73987 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44003 (= lt!73985 (lemmaContainsTupThenGetReturnValue!91 lt!73987 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44003 (= lt!73987 (insertStrictlySorted!93 (toList!889 lt!73396) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44003 (= (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) lt!73986)))

(declare-fun b!140905 () Bool)

(declare-fun res!67329 () Bool)

(assert (=> b!140905 (=> (not res!67329) (not e!91860))))

(assert (=> b!140905 (= res!67329 (= (getValueByKey!175 (toList!889 lt!73986) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140906 () Bool)

(assert (=> b!140906 (= e!91860 (contains!923 (toList!889 lt!73986) (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44003 res!67330) b!140905))

(assert (= (and b!140905 res!67329) b!140906))

(declare-fun m!168897 () Bool)

(assert (=> d!44003 m!168897))

(declare-fun m!168899 () Bool)

(assert (=> d!44003 m!168899))

(declare-fun m!168901 () Bool)

(assert (=> d!44003 m!168901))

(declare-fun m!168903 () Bool)

(assert (=> d!44003 m!168903))

(declare-fun m!168905 () Bool)

(assert (=> b!140905 m!168905))

(declare-fun m!168907 () Bool)

(assert (=> b!140906 m!168907))

(assert (=> b!139990 d!44003))

(declare-fun d!44005 () Bool)

(assert (=> d!44005 (= (apply!120 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) lt!73408) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) lt!73408)))))

(declare-fun bs!5898 () Bool)

(assert (= bs!5898 d!44005))

(declare-fun m!168909 () Bool)

(assert (=> bs!5898 m!168909))

(assert (=> bs!5898 m!168909))

(declare-fun m!168911 () Bool)

(assert (=> bs!5898 m!168911))

(assert (=> b!139990 d!44005))

(declare-fun d!44007 () Bool)

(declare-fun e!91861 () Bool)

(assert (=> d!44007 e!91861))

(declare-fun res!67332 () Bool)

(assert (=> d!44007 (=> (not res!67332) (not e!91861))))

(declare-fun lt!73990 () ListLongMap!1747)

(assert (=> d!44007 (= res!67332 (contains!921 lt!73990 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun lt!73991 () List!1764)

(assert (=> d!44007 (= lt!73990 (ListLongMap!1748 lt!73991))))

(declare-fun lt!73988 () Unit!4395)

(declare-fun lt!73989 () Unit!4395)

(assert (=> d!44007 (= lt!73988 lt!73989)))

(assert (=> d!44007 (= (getValueByKey!175 lt!73991 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(assert (=> d!44007 (= lt!73989 (lemmaContainsTupThenGetReturnValue!91 lt!73991 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(assert (=> d!44007 (= lt!73991 (insertStrictlySorted!93 (toList!889 lt!73402) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(assert (=> d!44007 (= (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) lt!73990)))

(declare-fun b!140907 () Bool)

(declare-fun res!67331 () Bool)

(assert (=> b!140907 (=> (not res!67331) (not e!91861))))

(assert (=> b!140907 (= res!67331 (= (getValueByKey!175 (toList!889 lt!73990) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(declare-fun b!140908 () Bool)

(assert (=> b!140908 (= e!91861 (contains!923 (toList!889 lt!73990) (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))

(assert (= (and d!44007 res!67332) b!140907))

(assert (= (and b!140907 res!67331) b!140908))

(declare-fun m!168913 () Bool)

(assert (=> d!44007 m!168913))

(declare-fun m!168915 () Bool)

(assert (=> d!44007 m!168915))

(declare-fun m!168917 () Bool)

(assert (=> d!44007 m!168917))

(declare-fun m!168919 () Bool)

(assert (=> d!44007 m!168919))

(declare-fun m!168921 () Bool)

(assert (=> b!140907 m!168921))

(declare-fun m!168923 () Bool)

(assert (=> b!140908 m!168923))

(assert (=> b!139990 d!44007))

(declare-fun d!44009 () Bool)

(assert (=> d!44009 (= (apply!120 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) lt!73408) (apply!120 lt!73402 lt!73408))))

(declare-fun lt!73992 () Unit!4395)

(assert (=> d!44009 (= lt!73992 (choose!870 lt!73402 lt!73406 (minValue!2790 newMap!16) lt!73408))))

(declare-fun e!91862 () Bool)

(assert (=> d!44009 e!91862))

(declare-fun res!67333 () Bool)

(assert (=> d!44009 (=> (not res!67333) (not e!91862))))

(assert (=> d!44009 (= res!67333 (contains!921 lt!73402 lt!73408))))

(assert (=> d!44009 (= (addApplyDifferent!96 lt!73402 lt!73406 (minValue!2790 newMap!16) lt!73408) lt!73992)))

(declare-fun b!140909 () Bool)

(assert (=> b!140909 (= e!91862 (not (= lt!73408 lt!73406)))))

(assert (= (and d!44009 res!67333) b!140909))

(declare-fun m!168925 () Bool)

(assert (=> d!44009 m!168925))

(assert (=> d!44009 m!167181))

(assert (=> d!44009 m!167183))

(assert (=> d!44009 m!167181))

(assert (=> d!44009 m!167179))

(declare-fun m!168927 () Bool)

(assert (=> d!44009 m!168927))

(assert (=> b!139990 d!44009))

(assert (=> b!139990 d!43967))

(declare-fun d!44011 () Bool)

(declare-fun e!91863 () Bool)

(assert (=> d!44011 e!91863))

(declare-fun res!67335 () Bool)

(assert (=> d!44011 (=> (not res!67335) (not e!91863))))

(declare-fun lt!73995 () ListLongMap!1747)

(assert (=> d!44011 (= res!67335 (contains!921 lt!73995 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun lt!73996 () List!1764)

(assert (=> d!44011 (= lt!73995 (ListLongMap!1748 lt!73996))))

(declare-fun lt!73993 () Unit!4395)

(declare-fun lt!73994 () Unit!4395)

(assert (=> d!44011 (= lt!73993 lt!73994)))

(assert (=> d!44011 (= (getValueByKey!175 lt!73996 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(assert (=> d!44011 (= lt!73994 (lemmaContainsTupThenGetReturnValue!91 lt!73996 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(assert (=> d!44011 (= lt!73996 (insertStrictlySorted!93 (toList!889 lt!73405) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(assert (=> d!44011 (= (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) lt!73995)))

(declare-fun b!140910 () Bool)

(declare-fun res!67334 () Bool)

(assert (=> b!140910 (=> (not res!67334) (not e!91863))))

(assert (=> b!140910 (= res!67334 (= (getValueByKey!175 (toList!889 lt!73995) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(declare-fun b!140911 () Bool)

(assert (=> b!140911 (= e!91863 (contains!923 (toList!889 lt!73995) (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))

(assert (= (and d!44011 res!67335) b!140910))

(assert (= (and b!140910 res!67334) b!140911))

(declare-fun m!168929 () Bool)

(assert (=> d!44011 m!168929))

(declare-fun m!168931 () Bool)

(assert (=> d!44011 m!168931))

(declare-fun m!168933 () Bool)

(assert (=> d!44011 m!168933))

(declare-fun m!168935 () Bool)

(assert (=> d!44011 m!168935))

(declare-fun m!168937 () Bool)

(assert (=> b!140910 m!168937))

(declare-fun m!168939 () Bool)

(assert (=> b!140911 m!168939))

(assert (=> b!139990 d!44011))

(declare-fun d!44013 () Bool)

(assert (=> d!44013 (contains!921 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) lt!73398)))

(declare-fun lt!73997 () Unit!4395)

(assert (=> d!44013 (= lt!73997 (choose!871 lt!73400 lt!73393 (zeroValue!2790 newMap!16) lt!73398))))

(assert (=> d!44013 (contains!921 lt!73400 lt!73398)))

(assert (=> d!44013 (= (addStillContains!96 lt!73400 lt!73393 (zeroValue!2790 newMap!16) lt!73398) lt!73997)))

(declare-fun bs!5899 () Bool)

(assert (= bs!5899 d!44013))

(assert (=> bs!5899 m!167173))

(assert (=> bs!5899 m!167173))

(assert (=> bs!5899 m!167175))

(declare-fun m!168941 () Bool)

(assert (=> bs!5899 m!168941))

(declare-fun m!168943 () Bool)

(assert (=> bs!5899 m!168943))

(assert (=> b!139990 d!44013))

(declare-fun d!44015 () Bool)

(assert (=> d!44015 (= (apply!120 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) lt!73397) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) lt!73397)))))

(declare-fun bs!5900 () Bool)

(assert (= bs!5900 d!44015))

(declare-fun m!168945 () Bool)

(assert (=> bs!5900 m!168945))

(assert (=> bs!5900 m!168945))

(declare-fun m!168947 () Bool)

(assert (=> bs!5900 m!168947))

(assert (=> b!139990 d!44015))

(declare-fun d!44017 () Bool)

(declare-fun e!91864 () Bool)

(assert (=> d!44017 e!91864))

(declare-fun res!67337 () Bool)

(assert (=> d!44017 (=> (not res!67337) (not e!91864))))

(declare-fun lt!74000 () ListLongMap!1747)

(assert (=> d!44017 (= res!67337 (contains!921 lt!74000 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74001 () List!1764)

(assert (=> d!44017 (= lt!74000 (ListLongMap!1748 lt!74001))))

(declare-fun lt!73998 () Unit!4395)

(declare-fun lt!73999 () Unit!4395)

(assert (=> d!44017 (= lt!73998 lt!73999)))

(assert (=> d!44017 (= (getValueByKey!175 lt!74001 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44017 (= lt!73999 (lemmaContainsTupThenGetReturnValue!91 lt!74001 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44017 (= lt!74001 (insertStrictlySorted!93 (toList!889 lt!73400) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44017 (= (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) lt!74000)))

(declare-fun b!140912 () Bool)

(declare-fun res!67336 () Bool)

(assert (=> b!140912 (=> (not res!67336) (not e!91864))))

(assert (=> b!140912 (= res!67336 (= (getValueByKey!175 (toList!889 lt!74000) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(declare-fun b!140913 () Bool)

(assert (=> b!140913 (= e!91864 (contains!923 (toList!889 lt!74000) (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44017 res!67337) b!140912))

(assert (= (and b!140912 res!67336) b!140913))

(declare-fun m!168949 () Bool)

(assert (=> d!44017 m!168949))

(declare-fun m!168951 () Bool)

(assert (=> d!44017 m!168951))

(declare-fun m!168953 () Bool)

(assert (=> d!44017 m!168953))

(declare-fun m!168955 () Bool)

(assert (=> d!44017 m!168955))

(declare-fun m!168957 () Bool)

(assert (=> b!140912 m!168957))

(declare-fun m!168959 () Bool)

(assert (=> b!140913 m!168959))

(assert (=> b!139990 d!44017))

(declare-fun d!44019 () Bool)

(declare-fun e!91866 () Bool)

(assert (=> d!44019 e!91866))

(declare-fun res!67338 () Bool)

(assert (=> d!44019 (=> res!67338 e!91866)))

(declare-fun lt!74002 () Bool)

(assert (=> d!44019 (= res!67338 (not lt!74002))))

(declare-fun lt!74005 () Bool)

(assert (=> d!44019 (= lt!74002 lt!74005)))

(declare-fun lt!74003 () Unit!4395)

(declare-fun e!91865 () Unit!4395)

(assert (=> d!44019 (= lt!74003 e!91865)))

(declare-fun c!26439 () Bool)

(assert (=> d!44019 (= c!26439 lt!74005)))

(assert (=> d!44019 (= lt!74005 (containsKey!179 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398))))

(assert (=> d!44019 (= (contains!921 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) lt!73398) lt!74002)))

(declare-fun b!140914 () Bool)

(declare-fun lt!74004 () Unit!4395)

(assert (=> b!140914 (= e!91865 lt!74004)))

(assert (=> b!140914 (= lt!74004 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398))))

(assert (=> b!140914 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398))))

(declare-fun b!140915 () Bool)

(declare-fun Unit!4446 () Unit!4395)

(assert (=> b!140915 (= e!91865 Unit!4446)))

(declare-fun b!140916 () Bool)

(assert (=> b!140916 (= e!91866 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398)))))

(assert (= (and d!44019 c!26439) b!140914))

(assert (= (and d!44019 (not c!26439)) b!140915))

(assert (= (and d!44019 (not res!67338)) b!140916))

(declare-fun m!168961 () Bool)

(assert (=> d!44019 m!168961))

(declare-fun m!168963 () Bool)

(assert (=> b!140914 m!168963))

(declare-fun m!168965 () Bool)

(assert (=> b!140914 m!168965))

(assert (=> b!140914 m!168965))

(declare-fun m!168967 () Bool)

(assert (=> b!140914 m!168967))

(assert (=> b!140916 m!168965))

(assert (=> b!140916 m!168965))

(assert (=> b!140916 m!168967))

(assert (=> b!139990 d!44019))

(declare-fun d!44021 () Bool)

(assert (=> d!44021 (= (apply!120 lt!73402 lt!73408) (get!1538 (getValueByKey!175 (toList!889 lt!73402) lt!73408)))))

(declare-fun bs!5901 () Bool)

(assert (= bs!5901 d!44021))

(declare-fun m!168969 () Bool)

(assert (=> bs!5901 m!168969))

(assert (=> bs!5901 m!168969))

(declare-fun m!168971 () Bool)

(assert (=> bs!5901 m!168971))

(assert (=> b!139990 d!44021))

(declare-fun d!44023 () Bool)

(assert (=> d!44023 (= (apply!120 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) lt!73407) (apply!120 lt!73396 lt!73407))))

(declare-fun lt!74006 () Unit!4395)

(assert (=> d!44023 (= lt!74006 (choose!870 lt!73396 lt!73401 (zeroValue!2790 newMap!16) lt!73407))))

(declare-fun e!91867 () Bool)

(assert (=> d!44023 e!91867))

(declare-fun res!67339 () Bool)

(assert (=> d!44023 (=> (not res!67339) (not e!91867))))

(assert (=> d!44023 (= res!67339 (contains!921 lt!73396 lt!73407))))

(assert (=> d!44023 (= (addApplyDifferent!96 lt!73396 lt!73401 (zeroValue!2790 newMap!16) lt!73407) lt!74006)))

(declare-fun b!140917 () Bool)

(assert (=> b!140917 (= e!91867 (not (= lt!73407 lt!73401)))))

(assert (= (and d!44023 res!67339) b!140917))

(declare-fun m!168973 () Bool)

(assert (=> d!44023 m!168973))

(assert (=> d!44023 m!167185))

(assert (=> d!44023 m!167187))

(assert (=> d!44023 m!167185))

(assert (=> d!44023 m!167195))

(declare-fun m!168975 () Bool)

(assert (=> d!44023 m!168975))

(assert (=> b!139990 d!44023))

(declare-fun d!44025 () Bool)

(assert (=> d!44025 (= (apply!120 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) lt!73397) (apply!120 lt!73405 lt!73397))))

(declare-fun lt!74007 () Unit!4395)

(assert (=> d!44025 (= lt!74007 (choose!870 lt!73405 lt!73388 (minValue!2790 newMap!16) lt!73397))))

(declare-fun e!91868 () Bool)

(assert (=> d!44025 e!91868))

(declare-fun res!67340 () Bool)

(assert (=> d!44025 (=> (not res!67340) (not e!91868))))

(assert (=> d!44025 (= res!67340 (contains!921 lt!73405 lt!73397))))

(assert (=> d!44025 (= (addApplyDifferent!96 lt!73405 lt!73388 (minValue!2790 newMap!16) lt!73397) lt!74007)))

(declare-fun b!140918 () Bool)

(assert (=> b!140918 (= e!91868 (not (= lt!73397 lt!73388)))))

(assert (= (and d!44025 res!67340) b!140918))

(declare-fun m!168977 () Bool)

(assert (=> d!44025 m!168977))

(assert (=> d!44025 m!167167))

(assert (=> d!44025 m!167169))

(assert (=> d!44025 m!167167))

(assert (=> d!44025 m!167193))

(declare-fun m!168979 () Bool)

(assert (=> d!44025 m!168979))

(assert (=> b!139990 d!44025))

(declare-fun d!44027 () Bool)

(assert (=> d!44027 (= (apply!120 lt!73405 lt!73397) (get!1538 (getValueByKey!175 (toList!889 lt!73405) lt!73397)))))

(declare-fun bs!5902 () Bool)

(assert (= bs!5902 d!44027))

(declare-fun m!168981 () Bool)

(assert (=> bs!5902 m!168981))

(assert (=> bs!5902 m!168981))

(declare-fun m!168983 () Bool)

(assert (=> bs!5902 m!168983))

(assert (=> b!139990 d!44027))

(declare-fun d!44029 () Bool)

(assert (=> d!44029 (= (apply!120 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) lt!73407) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) lt!73407)))))

(declare-fun bs!5903 () Bool)

(assert (= bs!5903 d!44029))

(declare-fun m!168985 () Bool)

(assert (=> bs!5903 m!168985))

(assert (=> bs!5903 m!168985))

(declare-fun m!168987 () Bool)

(assert (=> bs!5903 m!168987))

(assert (=> b!139990 d!44029))

(declare-fun d!44031 () Bool)

(assert (=> d!44031 (= (inRange!0 (ite c!26232 (index!3319 lt!73477) (index!3322 lt!73477)) (mask!7280 newMap!16)) (and (bvsge (ite c!26232 (index!3319 lt!73477) (index!3322 lt!73477)) #b00000000000000000000000000000000) (bvslt (ite c!26232 (index!3319 lt!73477) (index!3322 lt!73477)) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15563 d!44031))

(declare-fun d!44033 () Bool)

(assert (=> d!44033 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74008 () Unit!4395)

(assert (=> d!44033 (= lt!74008 (choose!868 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91869 () Bool)

(assert (=> d!44033 e!91869))

(declare-fun res!67341 () Bool)

(assert (=> d!44033 (=> (not res!67341) (not e!91869))))

(assert (=> d!44033 (= res!67341 (isStrictlySorted!320 (toList!889 lt!73135)))))

(assert (=> d!44033 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74008)))

(declare-fun b!140919 () Bool)

(assert (=> b!140919 (= e!91869 (containsKey!179 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44033 res!67341) b!140919))

(assert (=> d!44033 m!167017))

(assert (=> d!44033 m!167017))

(assert (=> d!44033 m!167533))

(declare-fun m!168989 () Bool)

(assert (=> d!44033 m!168989))

(declare-fun m!168991 () Bool)

(assert (=> d!44033 m!168991))

(assert (=> b!140919 m!167529))

(assert (=> b!140219 d!44033))

(assert (=> b!140219 d!43703))

(assert (=> b!140219 d!43705))

(declare-fun d!44035 () Bool)

(declare-fun e!91871 () Bool)

(assert (=> d!44035 e!91871))

(declare-fun res!67342 () Bool)

(assert (=> d!44035 (=> res!67342 e!91871)))

(declare-fun lt!74009 () Bool)

(assert (=> d!44035 (= res!67342 (not lt!74009))))

(declare-fun lt!74012 () Bool)

(assert (=> d!44035 (= lt!74009 lt!74012)))

(declare-fun lt!74010 () Unit!4395)

(declare-fun e!91870 () Unit!4395)

(assert (=> d!44035 (= lt!74010 e!91870)))

(declare-fun c!26440 () Bool)

(assert (=> d!44035 (= c!26440 lt!74012)))

(assert (=> d!44035 (= lt!74012 (containsKey!179 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44035 (= (contains!921 lt!73441 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74009)))

(declare-fun b!140920 () Bool)

(declare-fun lt!74011 () Unit!4395)

(assert (=> b!140920 (= e!91870 lt!74011)))

(assert (=> b!140920 (= lt!74011 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140920 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140921 () Bool)

(declare-fun Unit!4447 () Unit!4395)

(assert (=> b!140921 (= e!91870 Unit!4447)))

(declare-fun b!140922 () Bool)

(assert (=> b!140922 (= e!91871 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44035 c!26440) b!140920))

(assert (= (and d!44035 (not c!26440)) b!140921))

(assert (= (and d!44035 (not res!67342)) b!140922))

(declare-fun m!168993 () Bool)

(assert (=> d!44035 m!168993))

(declare-fun m!168995 () Bool)

(assert (=> b!140920 m!168995))

(declare-fun m!168997 () Bool)

(assert (=> b!140920 m!168997))

(assert (=> b!140920 m!168997))

(declare-fun m!168999 () Bool)

(assert (=> b!140920 m!168999))

(assert (=> b!140922 m!168997))

(assert (=> b!140922 m!168997))

(assert (=> b!140922 m!168999))

(assert (=> d!43521 d!44035))

(assert (=> d!43521 d!43499))

(declare-fun b!140923 () Bool)

(declare-fun e!91873 () (_ BitVec 32))

(declare-fun call!15656 () (_ BitVec 32))

(assert (=> b!140923 (= e!91873 (bvadd #b00000000000000000000000000000001 call!15656))))

(declare-fun b!140924 () Bool)

(assert (=> b!140924 (= e!91873 call!15656)))

(declare-fun b!140925 () Bool)

(declare-fun e!91872 () (_ BitVec 32))

(assert (=> b!140925 (= e!91872 e!91873)))

(declare-fun c!26442 () Bool)

(assert (=> b!140925 (= c!26442 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!140926 () Bool)

(assert (=> b!140926 (= e!91872 #b00000000000000000000000000000000)))

(declare-fun d!44037 () Bool)

(declare-fun lt!74013 () (_ BitVec 32))

(assert (=> d!44037 (and (bvsge lt!74013 #b00000000000000000000000000000000) (bvsle lt!74013 (bvsub (size!2586 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(assert (=> d!44037 (= lt!74013 e!91872)))

(declare-fun c!26441 () Bool)

(assert (=> d!44037 (= c!26441 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!44037 (and (bvsle #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 (_2!1353 lt!73223))) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!44037 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))) lt!74013)))

(declare-fun bm!15653 () Bool)

(assert (=> bm!15653 (= call!15656 (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (= (and d!44037 c!26441) b!140926))

(assert (= (and d!44037 (not c!26441)) b!140925))

(assert (= (and b!140925 c!26442) b!140923))

(assert (= (and b!140925 (not c!26442)) b!140924))

(assert (= (or b!140923 b!140924) bm!15653))

(assert (=> b!140925 m!167711))

(assert (=> b!140925 m!167711))

(assert (=> b!140925 m!167715))

(declare-fun m!169001 () Bool)

(assert (=> bm!15653 m!169001))

(assert (=> b!139944 d!44037))

(assert (=> b!140174 d!43605))

(declare-fun d!44039 () Bool)

(declare-fun e!91875 () Bool)

(assert (=> d!44039 e!91875))

(declare-fun res!67343 () Bool)

(assert (=> d!44039 (=> res!67343 e!91875)))

(declare-fun lt!74014 () Bool)

(assert (=> d!44039 (= res!67343 (not lt!74014))))

(declare-fun lt!74017 () Bool)

(assert (=> d!44039 (= lt!74014 lt!74017)))

(declare-fun lt!74015 () Unit!4395)

(declare-fun e!91874 () Unit!4395)

(assert (=> d!44039 (= lt!74015 e!91874)))

(declare-fun c!26443 () Bool)

(assert (=> d!44039 (= c!26443 lt!74017)))

(assert (=> d!44039 (= lt!74017 (containsKey!179 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!44039 (= (contains!921 lt!73546 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74014)))

(declare-fun b!140927 () Bool)

(declare-fun lt!74016 () Unit!4395)

(assert (=> b!140927 (= e!91874 lt!74016)))

(assert (=> b!140927 (= lt!74016 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> b!140927 (isDefined!129 (getValueByKey!175 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140928 () Bool)

(declare-fun Unit!4448 () Unit!4395)

(assert (=> b!140928 (= e!91874 Unit!4448)))

(declare-fun b!140929 () Bool)

(assert (=> b!140929 (= e!91875 (isDefined!129 (getValueByKey!175 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44039 c!26443) b!140927))

(assert (= (and d!44039 (not c!26443)) b!140928))

(assert (= (and d!44039 (not res!67343)) b!140929))

(declare-fun m!169003 () Bool)

(assert (=> d!44039 m!169003))

(declare-fun m!169005 () Bool)

(assert (=> b!140927 m!169005))

(assert (=> b!140927 m!167473))

(assert (=> b!140927 m!167473))

(declare-fun m!169007 () Bool)

(assert (=> b!140927 m!169007))

(assert (=> b!140929 m!167473))

(assert (=> b!140929 m!167473))

(assert (=> b!140929 m!169007))

(assert (=> d!43563 d!44039))

(declare-fun b!140932 () Bool)

(declare-fun e!91877 () Option!181)

(assert (=> b!140932 (= e!91877 (getValueByKey!175 (t!6360 lt!73547) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140931 () Bool)

(declare-fun e!91876 () Option!181)

(assert (=> b!140931 (= e!91876 e!91877)))

(declare-fun c!26445 () Bool)

(assert (=> b!140931 (= c!26445 (and ((_ is Cons!1760) lt!73547) (not (= (_1!1352 (h!2367 lt!73547)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!140933 () Bool)

(assert (=> b!140933 (= e!91877 None!179)))

(declare-fun b!140930 () Bool)

(assert (=> b!140930 (= e!91876 (Some!180 (_2!1352 (h!2367 lt!73547))))))

(declare-fun c!26444 () Bool)

(declare-fun d!44041 () Bool)

(assert (=> d!44041 (= c!26444 (and ((_ is Cons!1760) lt!73547) (= (_1!1352 (h!2367 lt!73547)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44041 (= (getValueByKey!175 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!91876)))

(assert (= (and d!44041 c!26444) b!140930))

(assert (= (and d!44041 (not c!26444)) b!140931))

(assert (= (and b!140931 c!26445) b!140932))

(assert (= (and b!140931 (not c!26445)) b!140933))

(declare-fun m!169009 () Bool)

(assert (=> b!140932 m!169009))

(assert (=> d!43563 d!44041))

(declare-fun d!44043 () Bool)

(assert (=> d!44043 (= (getValueByKey!175 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!74018 () Unit!4395)

(assert (=> d!44043 (= lt!74018 (choose!873 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!91878 () Bool)

(assert (=> d!44043 e!91878))

(declare-fun res!67344 () Bool)

(assert (=> d!44043 (=> (not res!67344) (not e!91878))))

(assert (=> d!44043 (= res!67344 (isStrictlySorted!320 lt!73547))))

(assert (=> d!44043 (= (lemmaContainsTupThenGetReturnValue!91 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74018)))

(declare-fun b!140934 () Bool)

(declare-fun res!67345 () Bool)

(assert (=> b!140934 (=> (not res!67345) (not e!91878))))

(assert (=> b!140934 (= res!67345 (containsKey!179 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140935 () Bool)

(assert (=> b!140935 (= e!91878 (contains!923 lt!73547 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44043 res!67344) b!140934))

(assert (= (and b!140934 res!67345) b!140935))

(assert (=> d!44043 m!167467))

(declare-fun m!169011 () Bool)

(assert (=> d!44043 m!169011))

(declare-fun m!169013 () Bool)

(assert (=> d!44043 m!169013))

(declare-fun m!169015 () Bool)

(assert (=> b!140934 m!169015))

(declare-fun m!169017 () Bool)

(assert (=> b!140935 m!169017))

(assert (=> d!43563 d!44043))

(declare-fun d!44045 () Bool)

(declare-fun e!91879 () Bool)

(assert (=> d!44045 e!91879))

(declare-fun res!67347 () Bool)

(assert (=> d!44045 (=> (not res!67347) (not e!91879))))

(declare-fun lt!74019 () List!1764)

(assert (=> d!44045 (= res!67347 (isStrictlySorted!320 lt!74019))))

(declare-fun e!91881 () List!1764)

(assert (=> d!44045 (= lt!74019 e!91881)))

(declare-fun c!26446 () Bool)

(assert (=> d!44045 (= c!26446 (and ((_ is Cons!1760) (toList!889 lt!73144)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73144))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44045 (isStrictlySorted!320 (toList!889 lt!73144))))

(assert (=> d!44045 (= (insertStrictlySorted!93 (toList!889 lt!73144) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74019)))

(declare-fun b!140936 () Bool)

(assert (=> b!140936 (= e!91879 (contains!923 lt!74019 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun bm!15654 () Bool)

(declare-fun e!91882 () List!1764)

(declare-fun call!15657 () List!1764)

(assert (=> bm!15654 (= call!15657 ($colon$colon!93 e!91882 (ite c!26446 (h!2367 (toList!889 lt!73144)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26449 () Bool)

(assert (=> bm!15654 (= c!26449 c!26446)))

(declare-fun b!140937 () Bool)

(assert (=> b!140937 (= e!91881 call!15657)))

(declare-fun b!140938 () Bool)

(assert (=> b!140938 (= e!91882 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73144)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140939 () Bool)

(declare-fun e!91883 () List!1764)

(declare-fun call!15658 () List!1764)

(assert (=> b!140939 (= e!91883 call!15658)))

(declare-fun bm!15655 () Bool)

(assert (=> bm!15655 (= call!15658 call!15657)))

(declare-fun b!140940 () Bool)

(declare-fun e!91880 () List!1764)

(declare-fun call!15659 () List!1764)

(assert (=> b!140940 (= e!91880 call!15659)))

(declare-fun c!26448 () Bool)

(declare-fun b!140941 () Bool)

(assert (=> b!140941 (= c!26448 (and ((_ is Cons!1760) (toList!889 lt!73144)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73144))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!140941 (= e!91883 e!91880)))

(declare-fun b!140942 () Bool)

(assert (=> b!140942 (= e!91881 e!91883)))

(declare-fun c!26447 () Bool)

(assert (=> b!140942 (= c!26447 (and ((_ is Cons!1760) (toList!889 lt!73144)) (= (_1!1352 (h!2367 (toList!889 lt!73144))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!140943 () Bool)

(assert (=> b!140943 (= e!91882 (ite c!26447 (t!6360 (toList!889 lt!73144)) (ite c!26448 (Cons!1760 (h!2367 (toList!889 lt!73144)) (t!6360 (toList!889 lt!73144))) Nil!1761)))))

(declare-fun bm!15656 () Bool)

(assert (=> bm!15656 (= call!15659 call!15658)))

(declare-fun b!140944 () Bool)

(declare-fun res!67346 () Bool)

(assert (=> b!140944 (=> (not res!67346) (not e!91879))))

(assert (=> b!140944 (= res!67346 (containsKey!179 lt!74019 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!140945 () Bool)

(assert (=> b!140945 (= e!91880 call!15659)))

(assert (= (and d!44045 c!26446) b!140937))

(assert (= (and d!44045 (not c!26446)) b!140942))

(assert (= (and b!140942 c!26447) b!140939))

(assert (= (and b!140942 (not c!26447)) b!140941))

(assert (= (and b!140941 c!26448) b!140945))

(assert (= (and b!140941 (not c!26448)) b!140940))

(assert (= (or b!140945 b!140940) bm!15656))

(assert (= (or b!140939 bm!15656) bm!15655))

(assert (= (or b!140937 bm!15655) bm!15654))

(assert (= (and bm!15654 c!26449) b!140938))

(assert (= (and bm!15654 (not c!26449)) b!140943))

(assert (= (and d!44045 res!67347) b!140944))

(assert (= (and b!140944 res!67346) b!140936))

(declare-fun m!169019 () Bool)

(assert (=> b!140936 m!169019))

(declare-fun m!169021 () Bool)

(assert (=> b!140944 m!169021))

(declare-fun m!169023 () Bool)

(assert (=> b!140938 m!169023))

(declare-fun m!169025 () Bool)

(assert (=> bm!15654 m!169025))

(declare-fun m!169027 () Bool)

(assert (=> d!44045 m!169027))

(declare-fun m!169029 () Bool)

(assert (=> d!44045 m!169029))

(assert (=> d!43563 d!44045))

(assert (=> d!43477 d!43441))

(assert (=> b!139985 d!43685))

(assert (=> b!139985 d!43687))

(assert (=> b!139941 d!43715))

(declare-fun d!44047 () Bool)

(declare-fun e!91884 () Bool)

(assert (=> d!44047 e!91884))

(declare-fun res!67349 () Bool)

(assert (=> d!44047 (=> (not res!67349) (not e!91884))))

(declare-fun lt!74022 () ListLongMap!1747)

(assert (=> d!44047 (= res!67349 (contains!921 lt!74022 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74023 () List!1764)

(assert (=> d!44047 (= lt!74022 (ListLongMap!1748 lt!74023))))

(declare-fun lt!74020 () Unit!4395)

(declare-fun lt!74021 () Unit!4395)

(assert (=> d!44047 (= lt!74020 lt!74021)))

(assert (=> d!44047 (= (getValueByKey!175 lt!74023 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44047 (= lt!74021 (lemmaContainsTupThenGetReturnValue!91 lt!74023 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44047 (= lt!74023 (insertStrictlySorted!93 (toList!889 (map!1438 newMap!16)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44047 (= (+!174 (map!1438 newMap!16) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74022)))

(declare-fun b!140946 () Bool)

(declare-fun res!67348 () Bool)

(assert (=> b!140946 (=> (not res!67348) (not e!91884))))

(assert (=> b!140946 (= res!67348 (= (getValueByKey!175 (toList!889 lt!74022) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!140947 () Bool)

(assert (=> b!140947 (= e!91884 (contains!923 (toList!889 lt!74022) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44047 res!67349) b!140946))

(assert (= (and b!140946 res!67348) b!140947))

(declare-fun m!169031 () Bool)

(assert (=> d!44047 m!169031))

(declare-fun m!169033 () Bool)

(assert (=> d!44047 m!169033))

(declare-fun m!169035 () Bool)

(assert (=> d!44047 m!169035))

(declare-fun m!169037 () Bool)

(assert (=> d!44047 m!169037))

(declare-fun m!169039 () Bool)

(assert (=> b!140946 m!169039))

(declare-fun m!169041 () Bool)

(assert (=> b!140947 m!169041))

(assert (=> b!139941 d!44047))

(assert (=> b!139941 d!43453))

(declare-fun d!44049 () Bool)

(declare-fun res!67350 () Bool)

(declare-fun e!91885 () Bool)

(assert (=> d!44049 (=> res!67350 e!91885)))

(assert (=> d!44049 (= res!67350 (and ((_ is Cons!1760) (toList!889 call!15508)) (= (_1!1352 (h!2367 (toList!889 call!15508))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44049 (= (containsKey!179 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91885)))

(declare-fun b!140948 () Bool)

(declare-fun e!91886 () Bool)

(assert (=> b!140948 (= e!91885 e!91886)))

(declare-fun res!67351 () Bool)

(assert (=> b!140948 (=> (not res!67351) (not e!91886))))

(assert (=> b!140948 (= res!67351 (and (or (not ((_ is Cons!1760) (toList!889 call!15508))) (bvsle (_1!1352 (h!2367 (toList!889 call!15508))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (toList!889 call!15508)) (bvslt (_1!1352 (h!2367 (toList!889 call!15508))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!140949 () Bool)

(assert (=> b!140949 (= e!91886 (containsKey!179 (t!6360 (toList!889 call!15508)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!44049 (not res!67350)) b!140948))

(assert (= (and b!140948 res!67351) b!140949))

(assert (=> b!140949 m!166733))

(declare-fun m!169043 () Bool)

(assert (=> b!140949 m!169043))

(assert (=> d!43513 d!44049))

(declare-fun b!140968 () Bool)

(declare-fun lt!74029 () SeekEntryResult!289)

(assert (=> b!140968 (and (bvsge (index!3321 lt!74029) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74029) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67358 () Bool)

(assert (=> b!140968 (= res!67358 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74029)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91900 () Bool)

(assert (=> b!140968 (=> res!67358 e!91900)))

(declare-fun b!140969 () Bool)

(assert (=> b!140969 (and (bvsge (index!3321 lt!74029) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74029) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67360 () Bool)

(assert (=> b!140969 (= res!67360 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74029)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!140969 (=> res!67360 e!91900)))

(declare-fun e!91901 () Bool)

(assert (=> b!140969 (= e!91901 e!91900)))

(declare-fun d!44051 () Bool)

(declare-fun e!91899 () Bool)

(assert (=> d!44051 e!91899))

(declare-fun c!26456 () Bool)

(assert (=> d!44051 (= c!26456 (and ((_ is Intermediate!289) lt!74029) (undefined!1101 lt!74029)))))

(declare-fun e!91898 () SeekEntryResult!289)

(assert (=> d!44051 (= lt!74029 e!91898)))

(declare-fun c!26457 () Bool)

(assert (=> d!44051 (= c!26457 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!74028 () (_ BitVec 64))

(assert (=> d!44051 (= lt!74028 (select (arr!2314 (_keys!4699 newMap!16)) (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16))))))

(assert (=> d!44051 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44051 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74029)))

(declare-fun b!140970 () Bool)

(declare-fun e!91897 () SeekEntryResult!289)

(assert (=> b!140970 (= e!91897 (Intermediate!289 false (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!140971 () Bool)

(assert (=> b!140971 (= e!91899 e!91901)))

(declare-fun res!67359 () Bool)

(assert (=> b!140971 (= res!67359 (and ((_ is Intermediate!289) lt!74029) (not (undefined!1101 lt!74029)) (bvslt (x!16146 lt!74029) #b01111111111111111111111111111110) (bvsge (x!16146 lt!74029) #b00000000000000000000000000000000) (bvsge (x!16146 lt!74029) #b00000000000000000000000000000000)))))

(assert (=> b!140971 (=> (not res!67359) (not e!91901))))

(declare-fun b!140972 () Bool)

(assert (=> b!140972 (= e!91899 (bvsge (x!16146 lt!74029) #b01111111111111111111111111111110))))

(declare-fun b!140973 () Bool)

(assert (=> b!140973 (and (bvsge (index!3321 lt!74029) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74029) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!140973 (= e!91900 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74029)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!140974 () Bool)

(assert (=> b!140974 (= e!91897 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!140975 () Bool)

(assert (=> b!140975 (= e!91898 (Intermediate!289 true (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!140976 () Bool)

(assert (=> b!140976 (= e!91898 e!91897)))

(declare-fun c!26458 () Bool)

(assert (=> b!140976 (= c!26458 (or (= lt!74028 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (= (bvadd lt!74028 lt!74028) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44051 c!26457) b!140975))

(assert (= (and d!44051 (not c!26457)) b!140976))

(assert (= (and b!140976 c!26458) b!140970))

(assert (= (and b!140976 (not c!26458)) b!140974))

(assert (= (and d!44051 c!26456) b!140972))

(assert (= (and d!44051 (not c!26456)) b!140971))

(assert (= (and b!140971 res!67359) b!140969))

(assert (= (and b!140969 (not res!67360)) b!140968))

(assert (= (and b!140968 (not res!67358)) b!140973))

(declare-fun m!169045 () Bool)

(assert (=> b!140973 m!169045))

(assert (=> b!140974 m!167211))

(declare-fun m!169047 () Bool)

(assert (=> b!140974 m!169047))

(assert (=> b!140974 m!169047))

(assert (=> b!140974 m!166733))

(declare-fun m!169049 () Bool)

(assert (=> b!140974 m!169049))

(assert (=> b!140968 m!169045))

(assert (=> d!44051 m!167211))

(declare-fun m!169051 () Bool)

(assert (=> d!44051 m!169051))

(assert (=> d!44051 m!166961))

(assert (=> b!140969 m!169045))

(assert (=> d!43515 d!44051))

(declare-fun d!44053 () Bool)

(declare-fun lt!74035 () (_ BitVec 32))

(declare-fun lt!74034 () (_ BitVec 32))

(assert (=> d!44053 (= lt!74035 (bvmul (bvxor lt!74034 (bvlshr lt!74034 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!44053 (= lt!74034 ((_ extract 31 0) (bvand (bvxor (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvlshr (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!44053 (and (bvsge (mask!7280 newMap!16) #b00000000000000000000000000000000) (let ((res!67361 (let ((h!2368 ((_ extract 31 0) (bvand (bvxor (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvlshr (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16250 (bvmul (bvxor h!2368 (bvlshr h!2368 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16250 (bvlshr x!16250 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))) (and (bvslt res!67361 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67361 #b00000000000000000000000000000000))))))

(assert (=> d!44053 (= (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) (bvand (bvxor lt!74035 (bvlshr lt!74035 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))

(assert (=> d!43515 d!44053))

(assert (=> d!43515 d!43661))

(declare-fun d!44055 () Bool)

(assert (=> d!44055 (= (apply!120 lt!73391 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5904 () Bool)

(assert (= bs!5904 d!44055))

(assert (=> bs!5904 m!168877))

(assert (=> bs!5904 m!168877))

(declare-fun m!169053 () Bool)

(assert (=> bs!5904 m!169053))

(assert (=> b!140001 d!44055))

(declare-fun d!44057 () Bool)

(assert (=> d!44057 (= (get!1538 (getValueByKey!175 (toList!889 lt!73146) lt!73152)) (v!3283 (getValueByKey!175 (toList!889 lt!73146) lt!73152)))))

(assert (=> d!43583 d!44057))

(declare-fun b!140979 () Bool)

(declare-fun e!91903 () Option!181)

(assert (=> b!140979 (= e!91903 (getValueByKey!175 (t!6360 (toList!889 lt!73146)) lt!73152))))

(declare-fun b!140978 () Bool)

(declare-fun e!91902 () Option!181)

(assert (=> b!140978 (= e!91902 e!91903)))

(declare-fun c!26460 () Bool)

(assert (=> b!140978 (= c!26460 (and ((_ is Cons!1760) (toList!889 lt!73146)) (not (= (_1!1352 (h!2367 (toList!889 lt!73146))) lt!73152))))))

(declare-fun b!140980 () Bool)

(assert (=> b!140980 (= e!91903 None!179)))

(declare-fun b!140977 () Bool)

(assert (=> b!140977 (= e!91902 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73146)))))))

(declare-fun d!44059 () Bool)

(declare-fun c!26459 () Bool)

(assert (=> d!44059 (= c!26459 (and ((_ is Cons!1760) (toList!889 lt!73146)) (= (_1!1352 (h!2367 (toList!889 lt!73146))) lt!73152)))))

(assert (=> d!44059 (= (getValueByKey!175 (toList!889 lt!73146) lt!73152) e!91902)))

(assert (= (and d!44059 c!26459) b!140977))

(assert (= (and d!44059 (not c!26459)) b!140978))

(assert (= (and b!140978 c!26460) b!140979))

(assert (= (and b!140978 (not c!26460)) b!140980))

(declare-fun m!169055 () Bool)

(assert (=> b!140979 m!169055))

(assert (=> d!43583 d!44059))

(declare-fun d!44061 () Bool)

(assert (=> d!44061 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74036 () Unit!4395)

(assert (=> d!44061 (= lt!74036 (choose!868 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91904 () Bool)

(assert (=> d!44061 e!91904))

(declare-fun res!67362 () Bool)

(assert (=> d!44061 (=> (not res!67362) (not e!91904))))

(assert (=> d!44061 (= res!67362 (isStrictlySorted!320 (toList!889 lt!73135)))))

(assert (=> d!44061 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74036)))

(declare-fun b!140981 () Bool)

(assert (=> b!140981 (= e!91904 (containsKey!179 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44061 res!67362) b!140981))

(assert (=> d!44061 m!167383))

(assert (=> d!44061 m!167383))

(assert (=> d!44061 m!167411))

(declare-fun m!169057 () Bool)

(assert (=> d!44061 m!169057))

(assert (=> d!44061 m!168991))

(assert (=> b!140981 m!167407))

(assert (=> b!140184 d!44061))

(assert (=> b!140184 d!43843))

(assert (=> b!140184 d!43845))

(declare-fun b!140982 () Bool)

(declare-fun e!91907 () Bool)

(declare-fun e!91906 () Bool)

(assert (=> b!140982 (= e!91907 e!91906)))

(declare-fun lt!74038 () (_ BitVec 64))

(assert (=> b!140982 (= lt!74038 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))

(declare-fun lt!74039 () Unit!4395)

(assert (=> b!140982 (= lt!74039 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1353 lt!73223)) lt!74038 #b00000000000000000000000000000000))))

(assert (=> b!140982 (arrayContainsKey!0 (_keys!4699 (_2!1353 lt!73223)) lt!74038 #b00000000000000000000000000000000)))

(declare-fun lt!74037 () Unit!4395)

(assert (=> b!140982 (= lt!74037 lt!74039)))

(declare-fun res!67363 () Bool)

(assert (=> b!140982 (= res!67363 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))) (Found!289 #b00000000000000000000000000000000)))))

(assert (=> b!140982 (=> (not res!67363) (not e!91906))))

(declare-fun d!44063 () Bool)

(declare-fun res!67364 () Bool)

(declare-fun e!91905 () Bool)

(assert (=> d!44063 (=> res!67364 e!91905)))

(assert (=> d!44063 (= res!67364 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!44063 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))) e!91905)))

(declare-fun b!140983 () Bool)

(declare-fun call!15660 () Bool)

(assert (=> b!140983 (= e!91907 call!15660)))

(declare-fun b!140984 () Bool)

(assert (=> b!140984 (= e!91905 e!91907)))

(declare-fun c!26461 () Bool)

(assert (=> b!140984 (= c!26461 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!140985 () Bool)

(assert (=> b!140985 (= e!91906 call!15660)))

(declare-fun bm!15657 () Bool)

(assert (=> bm!15657 (= call!15660 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))))))

(assert (= (and d!44063 (not res!67364)) b!140984))

(assert (= (and b!140984 c!26461) b!140982))

(assert (= (and b!140984 (not c!26461)) b!140983))

(assert (= (and b!140982 res!67363) b!140985))

(assert (= (or b!140985 b!140983) bm!15657))

(assert (=> b!140982 m!167711))

(declare-fun m!169059 () Bool)

(assert (=> b!140982 m!169059))

(declare-fun m!169061 () Bool)

(assert (=> b!140982 m!169061))

(assert (=> b!140982 m!167711))

(declare-fun m!169063 () Bool)

(assert (=> b!140982 m!169063))

(assert (=> b!140984 m!167711))

(assert (=> b!140984 m!167711))

(assert (=> b!140984 m!167715))

(declare-fun m!169065 () Bool)

(assert (=> bm!15657 m!169065))

(assert (=> b!139945 d!44063))

(assert (=> b!140073 d!43475))

(declare-fun b!140986 () Bool)

(declare-fun e!91909 () (_ BitVec 32))

(declare-fun call!15661 () (_ BitVec 32))

(assert (=> b!140986 (= e!91909 (bvadd #b00000000000000000000000000000001 call!15661))))

(declare-fun b!140987 () Bool)

(assert (=> b!140987 (= e!91909 call!15661)))

(declare-fun b!140988 () Bool)

(declare-fun e!91908 () (_ BitVec 32))

(assert (=> b!140988 (= e!91908 e!91909)))

(declare-fun c!26463 () Bool)

(assert (=> b!140988 (= c!26463 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!140989 () Bool)

(assert (=> b!140989 (= e!91908 #b00000000000000000000000000000000)))

(declare-fun d!44065 () Bool)

(declare-fun lt!74040 () (_ BitVec 32))

(assert (=> d!44065 (and (bvsge lt!74040 #b00000000000000000000000000000000) (bvsle lt!74040 (bvsub (size!2586 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!44065 (= lt!74040 e!91908)))

(declare-fun c!26462 () Bool)

(assert (=> d!44065 (= c!26462 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44065 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 newMap!16)) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44065 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))) lt!74040)))

(declare-fun bm!15658 () Bool)

(assert (=> bm!15658 (= call!15661 (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (= (and d!44065 c!26462) b!140989))

(assert (= (and d!44065 (not c!26462)) b!140988))

(assert (= (and b!140988 c!26463) b!140986))

(assert (= (and b!140988 (not c!26463)) b!140987))

(assert (= (or b!140986 b!140987) bm!15658))

(assert (=> b!140988 m!167699))

(assert (=> b!140988 m!167699))

(assert (=> b!140988 m!167707))

(declare-fun m!169067 () Bool)

(assert (=> bm!15658 m!169067))

(assert (=> bm!15541 d!44065))

(assert (=> d!43529 d!43515))

(declare-fun b!141006 () Bool)

(declare-fun res!67373 () Bool)

(declare-fun lt!74043 () SeekEntryResult!289)

(assert (=> b!141006 (= res!67373 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!74043)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!91918 () Bool)

(assert (=> b!141006 (=> (not res!67373) (not e!91918))))

(declare-fun d!44067 () Bool)

(declare-fun e!91919 () Bool)

(assert (=> d!44067 e!91919))

(declare-fun c!26468 () Bool)

(assert (=> d!44067 (= c!26468 ((_ is MissingZero!289) lt!74043))))

(assert (=> d!44067 (= lt!74043 (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!44067 true))

(declare-fun _$34!999 () Unit!4395)

(assert (=> d!44067 (= (choose!866 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (defaultEntry!2940 newMap!16)) _$34!999)))

(declare-fun b!141007 () Bool)

(declare-fun e!91921 () Bool)

(assert (=> b!141007 (= e!91919 e!91921)))

(declare-fun c!26469 () Bool)

(assert (=> b!141007 (= c!26469 ((_ is MissingVacant!289) lt!74043))))

(declare-fun call!15667 () Bool)

(declare-fun bm!15663 () Bool)

(assert (=> bm!15663 (= call!15667 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!15664 () Bool)

(declare-fun call!15666 () Bool)

(assert (=> bm!15664 (= call!15666 (inRange!0 (ite c!26468 (index!3319 lt!74043) (index!3322 lt!74043)) (mask!7280 newMap!16)))))

(declare-fun b!141008 () Bool)

(declare-fun res!67375 () Bool)

(declare-fun e!91920 () Bool)

(assert (=> b!141008 (=> (not res!67375) (not e!91920))))

(assert (=> b!141008 (= res!67375 call!15666)))

(assert (=> b!141008 (= e!91921 e!91920)))

(declare-fun b!141009 () Bool)

(declare-fun res!67374 () Bool)

(assert (=> b!141009 (=> (not res!67374) (not e!91920))))

(assert (=> b!141009 (= res!67374 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!74043)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141010 () Bool)

(assert (=> b!141010 (= e!91921 ((_ is Undefined!289) lt!74043))))

(declare-fun b!141011 () Bool)

(assert (=> b!141011 (= e!91920 (not call!15667))))

(declare-fun b!141012 () Bool)

(assert (=> b!141012 (= e!91919 e!91918)))

(declare-fun res!67376 () Bool)

(assert (=> b!141012 (= res!67376 call!15666)))

(assert (=> b!141012 (=> (not res!67376) (not e!91918))))

(declare-fun b!141013 () Bool)

(assert (=> b!141013 (= e!91918 (not call!15667))))

(assert (= (and d!44067 c!26468) b!141012))

(assert (= (and d!44067 (not c!26468)) b!141007))

(assert (= (and b!141012 res!67376) b!141006))

(assert (= (and b!141006 res!67373) b!141013))

(assert (= (and b!141007 c!26469) b!141008))

(assert (= (and b!141007 (not c!26469)) b!141010))

(assert (= (and b!141008 res!67375) b!141009))

(assert (= (and b!141009 res!67374) b!141011))

(assert (= (or b!141012 b!141008) bm!15664))

(assert (= (or b!141013 b!141011) bm!15663))

(declare-fun m!169069 () Bool)

(assert (=> b!141006 m!169069))

(declare-fun m!169071 () Bool)

(assert (=> b!141009 m!169071))

(assert (=> bm!15663 m!166733))

(assert (=> bm!15663 m!166931))

(declare-fun m!169073 () Bool)

(assert (=> bm!15664 m!169073))

(assert (=> d!44067 m!166733))

(assert (=> d!44067 m!166903))

(assert (=> d!43529 d!44067))

(assert (=> d!43529 d!43661))

(declare-fun d!44069 () Bool)

(assert (=> d!44069 (= (get!1537 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!139948 d!44069))

(declare-fun d!44071 () Bool)

(declare-fun lt!74044 () Bool)

(assert (=> d!44071 (= lt!74044 (select (content!137 (toList!889 lt!73546)) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!91922 () Bool)

(assert (=> d!44071 (= lt!74044 e!91922)))

(declare-fun res!67378 () Bool)

(assert (=> d!44071 (=> (not res!67378) (not e!91922))))

(assert (=> d!44071 (= res!67378 ((_ is Cons!1760) (toList!889 lt!73546)))))

(assert (=> d!44071 (= (contains!923 (toList!889 lt!73546) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!74044)))

(declare-fun b!141014 () Bool)

(declare-fun e!91923 () Bool)

(assert (=> b!141014 (= e!91922 e!91923)))

(declare-fun res!67377 () Bool)

(assert (=> b!141014 (=> res!67377 e!91923)))

(assert (=> b!141014 (= res!67377 (= (h!2367 (toList!889 lt!73546)) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!141015 () Bool)

(assert (=> b!141015 (= e!91923 (contains!923 (t!6360 (toList!889 lt!73546)) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!44071 res!67378) b!141014))

(assert (= (and b!141014 (not res!67377)) b!141015))

(declare-fun m!169075 () Bool)

(assert (=> d!44071 m!169075))

(declare-fun m!169077 () Bool)

(assert (=> d!44071 m!169077))

(declare-fun m!169079 () Bool)

(assert (=> b!141015 m!169079))

(assert (=> b!140210 d!44071))

(assert (=> d!43531 d!43661))

(assert (=> d!43525 d!43661))

(assert (=> d!43557 d!43559))

(declare-fun d!44073 () Bool)

(assert (=> d!44073 (= (apply!120 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73141) (apply!120 lt!73149 lt!73141))))

(assert (=> d!44073 true))

(declare-fun _$34!1000 () Unit!4395)

(assert (=> d!44073 (= (choose!870 lt!73149 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73141) _$34!1000)))

(declare-fun bs!5905 () Bool)

(assert (= bs!5905 d!44073))

(assert (=> bs!5905 m!166855))

(assert (=> bs!5905 m!166855))

(assert (=> bs!5905 m!166857))

(assert (=> bs!5905 m!166881))

(assert (=> d!43557 d!44073))

(assert (=> d!43557 d!43577))

(declare-fun d!44075 () Bool)

(declare-fun e!91925 () Bool)

(assert (=> d!44075 e!91925))

(declare-fun res!67379 () Bool)

(assert (=> d!44075 (=> res!67379 e!91925)))

(declare-fun lt!74045 () Bool)

(assert (=> d!44075 (= res!67379 (not lt!74045))))

(declare-fun lt!74048 () Bool)

(assert (=> d!44075 (= lt!74045 lt!74048)))

(declare-fun lt!74046 () Unit!4395)

(declare-fun e!91924 () Unit!4395)

(assert (=> d!44075 (= lt!74046 e!91924)))

(declare-fun c!26470 () Bool)

(assert (=> d!44075 (= c!26470 lt!74048)))

(assert (=> d!44075 (= lt!74048 (containsKey!179 (toList!889 lt!73149) lt!73141))))

(assert (=> d!44075 (= (contains!921 lt!73149 lt!73141) lt!74045)))

(declare-fun b!141016 () Bool)

(declare-fun lt!74047 () Unit!4395)

(assert (=> b!141016 (= e!91924 lt!74047)))

(assert (=> b!141016 (= lt!74047 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73149) lt!73141))))

(assert (=> b!141016 (isDefined!129 (getValueByKey!175 (toList!889 lt!73149) lt!73141))))

(declare-fun b!141017 () Bool)

(declare-fun Unit!4449 () Unit!4395)

(assert (=> b!141017 (= e!91924 Unit!4449)))

(declare-fun b!141018 () Bool)

(assert (=> b!141018 (= e!91925 (isDefined!129 (getValueByKey!175 (toList!889 lt!73149) lt!73141)))))

(assert (= (and d!44075 c!26470) b!141016))

(assert (= (and d!44075 (not c!26470)) b!141017))

(assert (= (and d!44075 (not res!67379)) b!141018))

(declare-fun m!169081 () Bool)

(assert (=> d!44075 m!169081))

(declare-fun m!169083 () Bool)

(assert (=> b!141016 m!169083))

(assert (=> b!141016 m!167513))

(assert (=> b!141016 m!167513))

(declare-fun m!169085 () Bool)

(assert (=> b!141016 m!169085))

(assert (=> b!141018 m!167513))

(assert (=> b!141018 m!167513))

(assert (=> b!141018 m!169085))

(assert (=> d!43557 d!44075))

(assert (=> d!43557 d!43561))

(declare-fun d!44077 () Bool)

(declare-fun res!67380 () Bool)

(declare-fun e!91926 () Bool)

(assert (=> d!44077 (=> res!67380 e!91926)))

(assert (=> d!44077 (= res!67380 (and ((_ is Cons!1760) (toList!889 lt!73135)) (= (_1!1352 (h!2367 (toList!889 lt!73135))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44077 (= (containsKey!179 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!91926)))

(declare-fun b!141019 () Bool)

(declare-fun e!91927 () Bool)

(assert (=> b!141019 (= e!91926 e!91927)))

(declare-fun res!67381 () Bool)

(assert (=> b!141019 (=> (not res!67381) (not e!91927))))

(assert (=> b!141019 (= res!67381 (and (or (not ((_ is Cons!1760) (toList!889 lt!73135))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73135))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1760) (toList!889 lt!73135)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73135))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!141020 () Bool)

(assert (=> b!141020 (= e!91927 (containsKey!179 (t!6360 (toList!889 lt!73135)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44077 (not res!67380)) b!141019))

(assert (= (and b!141019 res!67381) b!141020))

(assert (=> b!141020 m!166821))

(declare-fun m!169087 () Bool)

(assert (=> b!141020 m!169087))

(assert (=> d!43497 d!44077))

(declare-fun d!44079 () Bool)

(assert (=> d!44079 (= (get!1538 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43469 d!44079))

(assert (=> d!43469 d!43705))

(declare-fun d!44081 () Bool)

(assert (=> d!44081 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!44081 true))

(declare-fun _$5!140 () Unit!4395)

(assert (=> d!44081 (= (choose!865 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (index!3320 lt!73228) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) _$5!140)))

(declare-fun bs!5906 () Bool)

(assert (= bs!5906 d!44081))

(assert (=> bs!5906 m!166829))

(assert (=> bs!5906 m!166829))

(assert (=> bs!5906 m!167043))

(assert (=> bs!5906 m!166917))

(assert (=> bs!5906 m!166919))

(assert (=> d!43511 d!44081))

(assert (=> d!43511 d!43661))

(declare-fun d!44083 () Bool)

(assert (=> d!44083 (isDefined!129 (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun lt!74049 () Unit!4395)

(assert (=> d!44083 (= lt!74049 (choose!868 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!91928 () Bool)

(assert (=> d!44083 e!91928))

(declare-fun res!67382 () Bool)

(assert (=> d!44083 (=> (not res!67382) (not e!91928))))

(assert (=> d!44083 (= res!67382 (isStrictlySorted!320 (toList!889 call!15508)))))

(assert (=> d!44083 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!74049)))

(declare-fun b!141021 () Bool)

(assert (=> b!141021 (= e!91928 (containsKey!179 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!44083 res!67382) b!141021))

(assert (=> d!44083 m!166733))

(assert (=> d!44083 m!167203))

(assert (=> d!44083 m!167203))

(assert (=> d!44083 m!167205))

(assert (=> d!44083 m!166733))

(declare-fun m!169089 () Bool)

(assert (=> d!44083 m!169089))

(declare-fun m!169091 () Bool)

(assert (=> d!44083 m!169091))

(assert (=> b!141021 m!166733))

(assert (=> b!141021 m!167199))

(assert (=> b!140013 d!44083))

(assert (=> b!140013 d!43855))

(assert (=> b!140013 d!43857))

(declare-fun d!44085 () Bool)

(declare-fun e!91929 () Bool)

(assert (=> d!44085 e!91929))

(declare-fun res!67384 () Bool)

(assert (=> d!44085 (=> (not res!67384) (not e!91929))))

(declare-fun lt!74052 () ListLongMap!1747)

(assert (=> d!44085 (= res!67384 (contains!921 lt!74052 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74053 () List!1764)

(assert (=> d!44085 (= lt!74052 (ListLongMap!1748 lt!74053))))

(declare-fun lt!74050 () Unit!4395)

(declare-fun lt!74051 () Unit!4395)

(assert (=> d!44085 (= lt!74050 lt!74051)))

(assert (=> d!44085 (= (getValueByKey!175 lt!74053 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44085 (= lt!74051 (lemmaContainsTupThenGetReturnValue!91 lt!74053 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44085 (= lt!74053 (insertStrictlySorted!93 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44085 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74052)))

(declare-fun b!141022 () Bool)

(declare-fun res!67383 () Bool)

(assert (=> b!141022 (=> (not res!67383) (not e!91929))))

(assert (=> b!141022 (= res!67383 (= (getValueByKey!175 (toList!889 lt!74052) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141023 () Bool)

(assert (=> b!141023 (= e!91929 (contains!923 (toList!889 lt!74052) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44085 res!67384) b!141022))

(assert (= (and b!141022 res!67383) b!141023))

(declare-fun m!169093 () Bool)

(assert (=> d!44085 m!169093))

(declare-fun m!169095 () Bool)

(assert (=> d!44085 m!169095))

(declare-fun m!169097 () Bool)

(assert (=> d!44085 m!169097))

(declare-fun m!169099 () Bool)

(assert (=> d!44085 m!169099))

(declare-fun m!169101 () Bool)

(assert (=> b!141022 m!169101))

(declare-fun m!169103 () Bool)

(assert (=> b!141023 m!169103))

(assert (=> d!43553 d!44085))

(declare-fun bm!15665 () Bool)

(declare-fun call!15673 () ListLongMap!1747)

(declare-fun call!15672 () ListLongMap!1747)

(assert (=> bm!15665 (= call!15673 call!15672)))

(declare-fun b!141024 () Bool)

(declare-fun e!91936 () ListLongMap!1747)

(declare-fun call!15668 () ListLongMap!1747)

(assert (=> b!141024 (= e!91936 call!15668)))

(declare-fun call!15669 () ListLongMap!1747)

(declare-fun bm!15666 () Bool)

(assert (=> bm!15666 (= call!15669 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun b!141025 () Bool)

(declare-fun e!91934 () Unit!4395)

(declare-fun lt!74071 () Unit!4395)

(assert (=> b!141025 (= e!91934 lt!74071)))

(declare-fun lt!74067 () ListLongMap!1747)

(assert (=> b!141025 (= lt!74067 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!74060 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74060 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74065 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74065 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!74062 () Unit!4395)

(assert (=> b!141025 (= lt!74062 (addStillContains!96 lt!74067 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!74065))))

(assert (=> b!141025 (contains!921 (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74065)))

(declare-fun lt!74070 () Unit!4395)

(assert (=> b!141025 (= lt!74070 lt!74062)))

(declare-fun lt!74069 () ListLongMap!1747)

(assert (=> b!141025 (= lt!74069 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!74073 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74073 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74075 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74075 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!74066 () Unit!4395)

(assert (=> b!141025 (= lt!74066 (addApplyDifferent!96 lt!74069 lt!74073 (minValue!2790 newMap!16) lt!74075))))

(assert (=> b!141025 (= (apply!120 (+!174 lt!74069 (tuple2!2685 lt!74073 (minValue!2790 newMap!16))) lt!74075) (apply!120 lt!74069 lt!74075))))

(declare-fun lt!74054 () Unit!4395)

(assert (=> b!141025 (= lt!74054 lt!74066)))

(declare-fun lt!74063 () ListLongMap!1747)

(assert (=> b!141025 (= lt!74063 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!74068 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74068 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74074 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74074 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!74061 () Unit!4395)

(assert (=> b!141025 (= lt!74061 (addApplyDifferent!96 lt!74063 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!74074))))

(assert (=> b!141025 (= (apply!120 (+!174 lt!74063 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74074) (apply!120 lt!74063 lt!74074))))

(declare-fun lt!74059 () Unit!4395)

(assert (=> b!141025 (= lt!74059 lt!74061)))

(declare-fun lt!74072 () ListLongMap!1747)

(assert (=> b!141025 (= lt!74072 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(declare-fun lt!74055 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74055 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74064 () (_ BitVec 64))

(assert (=> b!141025 (= lt!74064 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!141025 (= lt!74071 (addApplyDifferent!96 lt!74072 lt!74055 (minValue!2790 newMap!16) lt!74064))))

(assert (=> b!141025 (= (apply!120 (+!174 lt!74072 (tuple2!2685 lt!74055 (minValue!2790 newMap!16))) lt!74064) (apply!120 lt!74072 lt!74064))))

(declare-fun b!141026 () Bool)

(declare-fun res!67389 () Bool)

(declare-fun e!91930 () Bool)

(assert (=> b!141026 (=> (not res!67389) (not e!91930))))

(declare-fun e!91940 () Bool)

(assert (=> b!141026 (= res!67389 e!91940)))

(declare-fun res!67386 () Bool)

(assert (=> b!141026 (=> res!67386 e!91940)))

(declare-fun e!91937 () Bool)

(assert (=> b!141026 (= res!67386 (not e!91937))))

(declare-fun res!67385 () Bool)

(assert (=> b!141026 (=> (not res!67385) (not e!91937))))

(assert (=> b!141026 (= res!67385 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141027 () Bool)

(assert (=> b!141027 (= e!91936 call!15673)))

(declare-fun b!141028 () Bool)

(declare-fun e!91932 () ListLongMap!1747)

(declare-fun e!91939 () ListLongMap!1747)

(assert (=> b!141028 (= e!91932 e!91939)))

(declare-fun c!26475 () Bool)

(assert (=> b!141028 (= c!26475 (and (not (= (bvand lt!73240 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!73240 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!26472 () Bool)

(declare-fun call!15671 () ListLongMap!1747)

(declare-fun bm!15667 () Bool)

(assert (=> bm!15667 (= call!15672 (+!174 (ite c!26472 call!15669 (ite c!26475 call!15671 call!15668)) (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141030 () Bool)

(declare-fun Unit!4450 () Unit!4395)

(assert (=> b!141030 (= e!91934 Unit!4450)))

(declare-fun b!141031 () Bool)

(declare-fun e!91941 () Bool)

(declare-fun e!91933 () Bool)

(assert (=> b!141031 (= e!91941 e!91933)))

(declare-fun res!67390 () Bool)

(declare-fun call!15670 () Bool)

(assert (=> b!141031 (= res!67390 call!15670)))

(assert (=> b!141031 (=> (not res!67390) (not e!91933))))

(declare-fun b!141032 () Bool)

(declare-fun e!91942 () Bool)

(assert (=> b!141032 (= e!91930 e!91942)))

(declare-fun c!26471 () Bool)

(assert (=> b!141032 (= c!26471 (not (= (bvand lt!73240 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!141033 () Bool)

(assert (=> b!141033 (= e!91937 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74058 () ListLongMap!1747)

(declare-fun b!141034 () Bool)

(assert (=> b!141034 (= e!91933 (= (apply!120 lt!74058 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!15668 () Bool)

(assert (=> bm!15668 (= call!15668 call!15671)))

(declare-fun b!141035 () Bool)

(declare-fun call!15674 () Bool)

(assert (=> b!141035 (= e!91942 (not call!15674))))

(declare-fun b!141036 () Bool)

(declare-fun e!91938 () Bool)

(assert (=> b!141036 (= e!91938 (= (apply!120 lt!74058 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 newMap!16)))))

(declare-fun bm!15669 () Bool)

(assert (=> bm!15669 (= call!15671 call!15669)))

(declare-fun b!141037 () Bool)

(declare-fun e!91931 () Bool)

(assert (=> b!141037 (= e!91940 e!91931)))

(declare-fun res!67393 () Bool)

(assert (=> b!141037 (=> (not res!67393) (not e!91931))))

(assert (=> b!141037 (= res!67393 (contains!921 lt!74058 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141037 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun bm!15670 () Bool)

(assert (=> bm!15670 (= call!15670 (contains!921 lt!74058 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141038 () Bool)

(assert (=> b!141038 (= e!91931 (= (apply!120 lt!74058 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!141038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(assert (=> b!141038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141039 () Bool)

(declare-fun e!91935 () Bool)

(assert (=> b!141039 (= e!91935 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141040 () Bool)

(declare-fun c!26476 () Bool)

(assert (=> b!141040 (= c!26476 (and (not (= (bvand lt!73240 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!73240 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!141040 (= e!91939 e!91936)))

(declare-fun b!141041 () Bool)

(assert (=> b!141041 (= e!91932 (+!174 call!15672 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun d!44087 () Bool)

(assert (=> d!44087 e!91930))

(declare-fun res!67387 () Bool)

(assert (=> d!44087 (=> (not res!67387) (not e!91930))))

(assert (=> d!44087 (= res!67387 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun lt!74057 () ListLongMap!1747)

(assert (=> d!44087 (= lt!74058 lt!74057)))

(declare-fun lt!74056 () Unit!4395)

(assert (=> d!44087 (= lt!74056 e!91934)))

(declare-fun c!26474 () Bool)

(assert (=> d!44087 (= c!26474 e!91935)))

(declare-fun res!67391 () Bool)

(assert (=> d!44087 (=> (not res!67391) (not e!91935))))

(assert (=> d!44087 (= res!67391 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44087 (= lt!74057 e!91932)))

(assert (=> d!44087 (= c!26472 (and (not (= (bvand lt!73240 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!73240 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!44087 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44087 (= (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74058)))

(declare-fun b!141029 () Bool)

(assert (=> b!141029 (= e!91939 call!15673)))

(declare-fun bm!15671 () Bool)

(assert (=> bm!15671 (= call!15674 (contains!921 lt!74058 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141042 () Bool)

(assert (=> b!141042 (= e!91942 e!91938)))

(declare-fun res!67392 () Bool)

(assert (=> b!141042 (= res!67392 call!15674)))

(assert (=> b!141042 (=> (not res!67392) (not e!91938))))

(declare-fun b!141043 () Bool)

(assert (=> b!141043 (= e!91941 (not call!15670))))

(declare-fun b!141044 () Bool)

(declare-fun res!67388 () Bool)

(assert (=> b!141044 (=> (not res!67388) (not e!91930))))

(assert (=> b!141044 (= res!67388 e!91941)))

(declare-fun c!26473 () Bool)

(assert (=> b!141044 (= c!26473 (not (= (bvand lt!73240 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!44087 c!26472) b!141041))

(assert (= (and d!44087 (not c!26472)) b!141028))

(assert (= (and b!141028 c!26475) b!141029))

(assert (= (and b!141028 (not c!26475)) b!141040))

(assert (= (and b!141040 c!26476) b!141027))

(assert (= (and b!141040 (not c!26476)) b!141024))

(assert (= (or b!141027 b!141024) bm!15668))

(assert (= (or b!141029 bm!15668) bm!15669))

(assert (= (or b!141029 b!141027) bm!15665))

(assert (= (or b!141041 bm!15669) bm!15666))

(assert (= (or b!141041 bm!15665) bm!15667))

(assert (= (and d!44087 res!67391) b!141039))

(assert (= (and d!44087 c!26474) b!141025))

(assert (= (and d!44087 (not c!26474)) b!141030))

(assert (= (and d!44087 res!67387) b!141026))

(assert (= (and b!141026 res!67385) b!141033))

(assert (= (and b!141026 (not res!67386)) b!141037))

(assert (= (and b!141037 res!67393) b!141038))

(assert (= (and b!141026 res!67389) b!141044))

(assert (= (and b!141044 c!26473) b!141031))

(assert (= (and b!141044 (not c!26473)) b!141043))

(assert (= (and b!141031 res!67390) b!141034))

(assert (= (or b!141031 b!141043) bm!15670))

(assert (= (and b!141044 res!67388) b!141032))

(assert (= (and b!141032 c!26471) b!141042))

(assert (= (and b!141032 (not c!26471)) b!141035))

(assert (= (and b!141042 res!67392) b!141036))

(assert (= (or b!141042 b!141035) bm!15671))

(declare-fun b_lambda!6345 () Bool)

(assert (=> (not b_lambda!6345) (not b!141038)))

(assert (=> b!141038 t!6366))

(declare-fun b_and!8845 () Bool)

(assert (= b_and!8841 (and (=> t!6366 result!4203) b_and!8845)))

(assert (=> b!141038 t!6368))

(declare-fun b_and!8847 () Bool)

(assert (= b_and!8843 (and (=> t!6368 result!4205) b_and!8847)))

(declare-fun m!169105 () Bool)

(assert (=> b!141041 m!169105))

(assert (=> bm!15666 m!166731))

(declare-fun m!169107 () Bool)

(assert (=> bm!15666 m!169107))

(assert (=> d!44087 m!166961))

(declare-fun m!169109 () Bool)

(assert (=> b!141036 m!169109))

(declare-fun m!169111 () Bool)

(assert (=> bm!15667 m!169111))

(assert (=> b!141038 m!166967))

(assert (=> b!141038 m!166967))

(declare-fun m!169113 () Bool)

(assert (=> b!141038 m!169113))

(assert (=> b!141038 m!166971))

(assert (=> b!141038 m!166973))

(assert (=> b!141038 m!166971))

(assert (=> b!141038 m!166975))

(assert (=> b!141038 m!166973))

(declare-fun m!169115 () Bool)

(assert (=> bm!15670 m!169115))

(declare-fun m!169117 () Bool)

(assert (=> b!141034 m!169117))

(assert (=> b!141033 m!166967))

(assert (=> b!141033 m!166967))

(assert (=> b!141033 m!166981))

(assert (=> b!141037 m!166967))

(assert (=> b!141037 m!166967))

(declare-fun m!169119 () Bool)

(assert (=> b!141037 m!169119))

(assert (=> b!141039 m!166967))

(assert (=> b!141039 m!166967))

(assert (=> b!141039 m!166981))

(declare-fun m!169121 () Bool)

(assert (=> bm!15671 m!169121))

(declare-fun m!169123 () Bool)

(assert (=> b!141025 m!169123))

(declare-fun m!169125 () Bool)

(assert (=> b!141025 m!169125))

(assert (=> b!141025 m!166731))

(declare-fun m!169127 () Bool)

(assert (=> b!141025 m!169127))

(declare-fun m!169129 () Bool)

(assert (=> b!141025 m!169129))

(declare-fun m!169131 () Bool)

(assert (=> b!141025 m!169131))

(assert (=> b!141025 m!166731))

(declare-fun m!169133 () Bool)

(assert (=> b!141025 m!169133))

(declare-fun m!169135 () Bool)

(assert (=> b!141025 m!169135))

(declare-fun m!169137 () Bool)

(assert (=> b!141025 m!169137))

(assert (=> b!141025 m!169137))

(declare-fun m!169139 () Bool)

(assert (=> b!141025 m!169139))

(assert (=> b!141025 m!166731))

(assert (=> b!141025 m!169107))

(declare-fun m!169141 () Bool)

(assert (=> b!141025 m!169141))

(declare-fun m!169143 () Bool)

(assert (=> b!141025 m!169143))

(assert (=> b!141025 m!169129))

(declare-fun m!169145 () Bool)

(assert (=> b!141025 m!169145))

(declare-fun m!169147 () Bool)

(assert (=> b!141025 m!169147))

(assert (=> b!141025 m!166967))

(declare-fun m!169149 () Bool)

(assert (=> b!141025 m!169149))

(assert (=> b!141025 m!169123))

(declare-fun m!169151 () Bool)

(assert (=> b!141025 m!169151))

(assert (=> b!141025 m!169141))

(assert (=> d!43553 d!44087))

(assert (=> d!43553 d!43525))

(assert (=> d!43553 d!43661))

(declare-fun d!44089 () Bool)

(assert (=> d!44089 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!44089 true))

(declare-fun _$7!122 () Unit!4395)

(assert (=> d!44089 (= (choose!869 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) lt!73240 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (defaultEntry!2940 newMap!16)) _$7!122)))

(declare-fun bs!5907 () Bool)

(assert (= bs!5907 d!44089))

(assert (=> bs!5907 m!166829))

(assert (=> bs!5907 m!166829))

(assert (=> bs!5907 m!167427))

(assert (=> bs!5907 m!166731))

(assert (=> bs!5907 m!167431))

(assert (=> d!43553 d!44089))

(declare-fun d!44091 () Bool)

(assert (=> d!44091 (= (apply!120 lt!73391 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5908 () Bool)

(assert (= bs!5908 d!44091))

(assert (=> bs!5908 m!166967))

(assert (=> bs!5908 m!167977))

(assert (=> bs!5908 m!167977))

(declare-fun m!169153 () Bool)

(assert (=> bs!5908 m!169153))

(assert (=> b!140003 d!44091))

(declare-fun d!44093 () Bool)

(declare-fun c!26477 () Bool)

(assert (=> d!44093 (= c!26477 ((_ is ValueCellFull!1122) (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!91943 () V!3555)

(assert (=> d!44093 (= (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!91943)))

(declare-fun b!141045 () Bool)

(assert (=> b!141045 (= e!91943 (get!1536 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141046 () Bool)

(assert (=> b!141046 (= e!91943 (get!1537 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44093 c!26477) b!141045))

(assert (= (and d!44093 (not c!26477)) b!141046))

(assert (=> b!141045 m!167155))

(assert (=> b!141045 m!166971))

(declare-fun m!169155 () Bool)

(assert (=> b!141045 m!169155))

(assert (=> b!141046 m!167155))

(assert (=> b!141046 m!166971))

(declare-fun m!169157 () Bool)

(assert (=> b!141046 m!169157))

(assert (=> b!140003 d!44093))

(assert (=> d!43579 d!43575))

(declare-fun d!44095 () Bool)

(declare-fun e!91945 () Bool)

(assert (=> d!44095 e!91945))

(declare-fun res!67394 () Bool)

(assert (=> d!44095 (=> res!67394 e!91945)))

(declare-fun lt!74076 () Bool)

(assert (=> d!44095 (= res!67394 (not lt!74076))))

(declare-fun lt!74079 () Bool)

(assert (=> d!44095 (= lt!74076 lt!74079)))

(declare-fun lt!74077 () Unit!4395)

(declare-fun e!91944 () Unit!4395)

(assert (=> d!44095 (= lt!74077 e!91944)))

(declare-fun c!26478 () Bool)

(assert (=> d!44095 (= c!26478 lt!74079)))

(assert (=> d!44095 (= lt!74079 (containsKey!179 (toList!889 lt!73140) lt!73151))))

(assert (=> d!44095 (= (contains!921 lt!73140 lt!73151) lt!74076)))

(declare-fun b!141047 () Bool)

(declare-fun lt!74078 () Unit!4395)

(assert (=> b!141047 (= e!91944 lt!74078)))

(assert (=> b!141047 (= lt!74078 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73140) lt!73151))))

(assert (=> b!141047 (isDefined!129 (getValueByKey!175 (toList!889 lt!73140) lt!73151))))

(declare-fun b!141048 () Bool)

(declare-fun Unit!4451 () Unit!4395)

(assert (=> b!141048 (= e!91944 Unit!4451)))

(declare-fun b!141049 () Bool)

(assert (=> b!141049 (= e!91945 (isDefined!129 (getValueByKey!175 (toList!889 lt!73140) lt!73151)))))

(assert (= (and d!44095 c!26478) b!141047))

(assert (= (and d!44095 (not c!26478)) b!141048))

(assert (= (and d!44095 (not res!67394)) b!141049))

(declare-fun m!169159 () Bool)

(assert (=> d!44095 m!169159))

(declare-fun m!169161 () Bool)

(assert (=> b!141047 m!169161))

(assert (=> b!141047 m!167521))

(assert (=> b!141047 m!167521))

(declare-fun m!169163 () Bool)

(assert (=> b!141047 m!169163))

(assert (=> b!141049 m!167521))

(assert (=> b!141049 m!167521))

(assert (=> b!141049 m!169163))

(assert (=> d!43579 d!44095))

(assert (=> d!43579 d!43581))

(declare-fun d!44097 () Bool)

(assert (=> d!44097 (= (apply!120 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!73151) (apply!120 lt!73140 lt!73151))))

(assert (=> d!44097 true))

(declare-fun _$34!1001 () Unit!4395)

(assert (=> d!44097 (= (choose!870 lt!73140 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) lt!73151) _$34!1001)))

(declare-fun bs!5909 () Bool)

(assert (= bs!5909 d!44097))

(assert (=> bs!5909 m!166873))

(assert (=> bs!5909 m!166873))

(assert (=> bs!5909 m!166875))

(assert (=> bs!5909 m!166883))

(assert (=> d!43579 d!44097))

(assert (=> d!43579 d!43555))

(declare-fun d!44099 () Bool)

(declare-fun e!91947 () Bool)

(assert (=> d!44099 e!91947))

(declare-fun res!67395 () Bool)

(assert (=> d!44099 (=> res!67395 e!91947)))

(declare-fun lt!74080 () Bool)

(assert (=> d!44099 (= res!67395 (not lt!74080))))

(declare-fun lt!74083 () Bool)

(assert (=> d!44099 (= lt!74080 lt!74083)))

(declare-fun lt!74081 () Unit!4395)

(declare-fun e!91946 () Unit!4395)

(assert (=> d!44099 (= lt!74081 e!91946)))

(declare-fun c!26479 () Bool)

(assert (=> d!44099 (= c!26479 lt!74083)))

(assert (=> d!44099 (= lt!74083 (containsKey!179 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44099 (= (contains!921 lt!73250 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74080)))

(declare-fun b!141050 () Bool)

(declare-fun lt!74082 () Unit!4395)

(assert (=> b!141050 (= e!91946 lt!74082)))

(assert (=> b!141050 (= lt!74082 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141050 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141051 () Bool)

(declare-fun Unit!4452 () Unit!4395)

(assert (=> b!141051 (= e!91946 Unit!4452)))

(declare-fun b!141052 () Bool)

(assert (=> b!141052 (= e!91947 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44099 c!26479) b!141050))

(assert (= (and d!44099 (not c!26479)) b!141051))

(assert (= (and d!44099 (not res!67395)) b!141052))

(declare-fun m!169165 () Bool)

(assert (=> d!44099 m!169165))

(declare-fun m!169167 () Bool)

(assert (=> b!141050 m!169167))

(assert (=> b!141050 m!168041))

(assert (=> b!141050 m!168041))

(declare-fun m!169169 () Bool)

(assert (=> b!141050 m!169169))

(assert (=> b!141052 m!168041))

(assert (=> b!141052 m!168041))

(assert (=> b!141052 m!169169))

(assert (=> bm!15524 d!44099))

(declare-fun d!44101 () Bool)

(assert (=> d!44101 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73141)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73141)))))

(assert (=> d!43561 d!44101))

(declare-fun e!91949 () Option!181)

(declare-fun b!141055 () Bool)

(assert (=> b!141055 (= e!91949 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73141))))

(declare-fun b!141054 () Bool)

(declare-fun e!91948 () Option!181)

(assert (=> b!141054 (= e!91948 e!91949)))

(declare-fun c!26481 () Bool)

(assert (=> b!141054 (= c!26481 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73141))))))

(declare-fun b!141056 () Bool)

(assert (=> b!141056 (= e!91949 None!179)))

(declare-fun b!141053 () Bool)

(assert (=> b!141053 (= e!91948 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun c!26480 () Bool)

(declare-fun d!44103 () Bool)

(assert (=> d!44103 (= c!26480 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73141)))))

(assert (=> d!44103 (= (getValueByKey!175 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73141) e!91948)))

(assert (= (and d!44103 c!26480) b!141053))

(assert (= (and d!44103 (not c!26480)) b!141054))

(assert (= (and b!141054 c!26481) b!141055))

(assert (= (and b!141054 (not c!26481)) b!141056))

(declare-fun m!169171 () Bool)

(assert (=> b!141055 m!169171))

(assert (=> d!43561 d!44103))

(declare-fun d!44105 () Bool)

(declare-fun res!67396 () Bool)

(declare-fun e!91950 () Bool)

(assert (=> d!44105 (=> res!67396 e!91950)))

(assert (=> d!44105 (= res!67396 (and ((_ is Cons!1760) (toList!889 call!15504)) (= (_1!1352 (h!2367 (toList!889 call!15504))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44105 (= (containsKey!179 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!91950)))

(declare-fun b!141057 () Bool)

(declare-fun e!91951 () Bool)

(assert (=> b!141057 (= e!91950 e!91951)))

(declare-fun res!67397 () Bool)

(assert (=> b!141057 (=> (not res!67397) (not e!91951))))

(assert (=> b!141057 (= res!67397 (and (or (not ((_ is Cons!1760) (toList!889 call!15504))) (bvsle (_1!1352 (h!2367 (toList!889 call!15504))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (toList!889 call!15504)) (bvslt (_1!1352 (h!2367 (toList!889 call!15504))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!141058 () Bool)

(assert (=> b!141058 (= e!91951 (containsKey!179 (t!6360 (toList!889 call!15504)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!44105 (not res!67396)) b!141057))

(assert (= (and b!141057 res!67397) b!141058))

(assert (=> b!141058 m!166733))

(declare-fun m!169173 () Bool)

(assert (=> b!141058 m!169173))

(assert (=> d!43593 d!44105))

(declare-fun e!91953 () Option!181)

(declare-fun b!141061 () Bool)

(assert (=> b!141061 (= e!91953 (getValueByKey!175 (t!6360 (toList!889 lt!73508)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141060 () Bool)

(declare-fun e!91952 () Option!181)

(assert (=> b!141060 (= e!91952 e!91953)))

(declare-fun c!26483 () Bool)

(assert (=> b!141060 (= c!26483 (and ((_ is Cons!1760) (toList!889 lt!73508)) (not (= (_1!1352 (h!2367 (toList!889 lt!73508))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141062 () Bool)

(assert (=> b!141062 (= e!91953 None!179)))

(declare-fun b!141059 () Bool)

(assert (=> b!141059 (= e!91952 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73508)))))))

(declare-fun d!44107 () Bool)

(declare-fun c!26482 () Bool)

(assert (=> d!44107 (= c!26482 (and ((_ is Cons!1760) (toList!889 lt!73508)) (= (_1!1352 (h!2367 (toList!889 lt!73508))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44107 (= (getValueByKey!175 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!91952)))

(assert (= (and d!44107 c!26482) b!141059))

(assert (= (and d!44107 (not c!26482)) b!141060))

(assert (= (and b!141060 c!26483) b!141061))

(assert (= (and b!141060 (not c!26483)) b!141062))

(declare-fun m!169175 () Bool)

(assert (=> b!141061 m!169175))

(assert (=> b!140162 d!44107))

(declare-fun b!141063 () Bool)

(declare-fun e!91956 () Bool)

(declare-fun e!91955 () Bool)

(assert (=> b!141063 (= e!91956 e!91955)))

(declare-fun lt!74085 () (_ BitVec 64))

(assert (=> b!141063 (= lt!74085 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!74086 () Unit!4395)

(assert (=> b!141063 (= lt!74086 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74085 #b00000000000000000000000000000000))))

(assert (=> b!141063 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74085 #b00000000000000000000000000000000)))

(declare-fun lt!74084 () Unit!4395)

(assert (=> b!141063 (= lt!74084 lt!74086)))

(declare-fun res!67398 () Bool)

(assert (=> b!141063 (= res!67398 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))) (Found!289 #b00000000000000000000000000000000)))))

(assert (=> b!141063 (=> (not res!67398) (not e!91955))))

(declare-fun d!44109 () Bool)

(declare-fun res!67399 () Bool)

(declare-fun e!91954 () Bool)

(assert (=> d!44109 (=> res!67399 e!91954)))

(assert (=> d!44109 (= res!67399 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!44109 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))) e!91954)))

(declare-fun b!141064 () Bool)

(declare-fun call!15675 () Bool)

(assert (=> b!141064 (= e!91956 call!15675)))

(declare-fun b!141065 () Bool)

(assert (=> b!141065 (= e!91954 e!91956)))

(declare-fun c!26484 () Bool)

(assert (=> b!141065 (= c!26484 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!141066 () Bool)

(assert (=> b!141066 (= e!91955 call!15675)))

(declare-fun bm!15672 () Bool)

(assert (=> bm!15672 (= call!15675 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))))))

(assert (= (and d!44109 (not res!67399)) b!141065))

(assert (= (and b!141065 c!26484) b!141063))

(assert (= (and b!141065 (not c!26484)) b!141064))

(assert (= (and b!141063 res!67398) b!141066))

(assert (= (or b!141066 b!141064) bm!15672))

(assert (=> b!141063 m!167905))

(declare-fun m!169177 () Bool)

(assert (=> b!141063 m!169177))

(declare-fun m!169179 () Bool)

(assert (=> b!141063 m!169179))

(assert (=> b!141063 m!167905))

(declare-fun m!169181 () Bool)

(assert (=> b!141063 m!169181))

(assert (=> b!141065 m!167905))

(assert (=> b!141065 m!167905))

(assert (=> b!141065 m!167909))

(declare-fun m!169183 () Bool)

(assert (=> bm!15672 m!169183))

(assert (=> b!140223 d!44109))

(declare-fun d!44111 () Bool)

(declare-fun res!67400 () Bool)

(declare-fun e!91957 () Bool)

(assert (=> d!44111 (=> res!67400 e!91957)))

(assert (=> d!44111 (= res!67400 (= (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!44111 (= (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!91957)))

(declare-fun b!141067 () Bool)

(declare-fun e!91958 () Bool)

(assert (=> b!141067 (= e!91957 e!91958)))

(declare-fun res!67401 () Bool)

(assert (=> b!141067 (=> (not res!67401) (not e!91958))))

(assert (=> b!141067 (= res!67401 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141068 () Bool)

(assert (=> b!141068 (= e!91958 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44111 (not res!67400)) b!141067))

(assert (= (and b!141067 res!67401) b!141068))

(assert (=> d!44111 m!167699))

(assert (=> b!141068 m!166733))

(declare-fun m!169185 () Bool)

(assert (=> b!141068 m!169185))

(assert (=> b!140226 d!44111))

(declare-fun d!44113 () Bool)

(declare-fun isEmpty!424 (List!1764) Bool)

(assert (=> d!44113 (= (isEmpty!423 lt!73441) (isEmpty!424 (toList!889 lt!73441)))))

(declare-fun bs!5910 () Bool)

(assert (= bs!5910 d!44113))

(declare-fun m!169187 () Bool)

(assert (=> bs!5910 m!169187))

(assert (=> b!140081 d!44113))

(declare-fun d!44115 () Bool)

(declare-fun res!67402 () Bool)

(declare-fun e!91959 () Bool)

(assert (=> d!44115 (=> (not res!67402) (not e!91959))))

(assert (=> d!44115 (= res!67402 (simpleValid!95 (_2!1353 lt!73341)))))

(assert (=> d!44115 (= (valid!554 (_2!1353 lt!73341)) e!91959)))

(declare-fun b!141069 () Bool)

(declare-fun res!67403 () Bool)

(assert (=> b!141069 (=> (not res!67403) (not e!91959))))

(assert (=> b!141069 (= res!67403 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))) (_size!625 (_2!1353 lt!73341))))))

(declare-fun b!141070 () Bool)

(declare-fun res!67404 () Bool)

(assert (=> b!141070 (=> (not res!67404) (not e!91959))))

(assert (=> b!141070 (= res!67404 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341))))))

(declare-fun b!141071 () Bool)

(assert (=> b!141071 (= e!91959 (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73341)) #b00000000000000000000000000000000 Nil!1760))))

(assert (= (and d!44115 res!67402) b!141069))

(assert (= (and b!141069 res!67403) b!141070))

(assert (= (and b!141070 res!67404) b!141071))

(declare-fun m!169189 () Bool)

(assert (=> d!44115 m!169189))

(declare-fun m!169191 () Bool)

(assert (=> b!141069 m!169191))

(declare-fun m!169193 () Bool)

(assert (=> b!141070 m!169193))

(declare-fun m!169195 () Bool)

(assert (=> b!141071 m!169195))

(assert (=> b!139935 d!44115))

(declare-fun d!44117 () Bool)

(declare-fun e!91961 () Bool)

(assert (=> d!44117 e!91961))

(declare-fun res!67405 () Bool)

(assert (=> d!44117 (=> res!67405 e!91961)))

(declare-fun lt!74087 () Bool)

(assert (=> d!44117 (= res!67405 (not lt!74087))))

(declare-fun lt!74090 () Bool)

(assert (=> d!44117 (= lt!74087 lt!74090)))

(declare-fun lt!74088 () Unit!4395)

(declare-fun e!91960 () Unit!4395)

(assert (=> d!44117 (= lt!74088 e!91960)))

(declare-fun c!26485 () Bool)

(assert (=> d!44117 (= c!26485 lt!74090)))

(assert (=> d!44117 (= lt!74090 (containsKey!179 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44117 (= (contains!921 lt!73250 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74087)))

(declare-fun b!141072 () Bool)

(declare-fun lt!74089 () Unit!4395)

(assert (=> b!141072 (= e!91960 lt!74089)))

(assert (=> b!141072 (= lt!74089 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141072 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141073 () Bool)

(declare-fun Unit!4453 () Unit!4395)

(assert (=> b!141073 (= e!91960 Unit!4453)))

(declare-fun b!141074 () Bool)

(assert (=> b!141074 (= e!91961 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44117 c!26485) b!141072))

(assert (= (and d!44117 (not c!26485)) b!141073))

(assert (= (and d!44117 (not res!67405)) b!141074))

(declare-fun m!169197 () Bool)

(assert (=> d!44117 m!169197))

(declare-fun m!169199 () Bool)

(assert (=> b!141072 m!169199))

(assert (=> b!141072 m!167595))

(assert (=> b!141072 m!167595))

(declare-fun m!169201 () Bool)

(assert (=> b!141072 m!169201))

(assert (=> b!141074 m!167595))

(assert (=> b!141074 m!167595))

(assert (=> b!141074 m!169201))

(assert (=> bm!15525 d!44117))

(declare-fun d!44119 () Bool)

(assert (=> d!44119 (= (apply!120 lt!73261 lt!73267) (get!1538 (getValueByKey!175 (toList!889 lt!73261) lt!73267)))))

(declare-fun bs!5911 () Bool)

(assert (= bs!5911 d!44119))

(declare-fun m!169203 () Bool)

(assert (=> bs!5911 m!169203))

(assert (=> bs!5911 m!169203))

(declare-fun m!169205 () Bool)

(assert (=> bs!5911 m!169205))

(assert (=> b!139873 d!44119))

(declare-fun d!44121 () Bool)

(declare-fun e!91962 () Bool)

(assert (=> d!44121 e!91962))

(declare-fun res!67407 () Bool)

(assert (=> d!44121 (=> (not res!67407) (not e!91962))))

(declare-fun lt!74093 () ListLongMap!1747)

(assert (=> d!44121 (= res!67407 (contains!921 lt!74093 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!74094 () List!1764)

(assert (=> d!44121 (= lt!74093 (ListLongMap!1748 lt!74094))))

(declare-fun lt!74091 () Unit!4395)

(declare-fun lt!74092 () Unit!4395)

(assert (=> d!44121 (= lt!74091 lt!74092)))

(assert (=> d!44121 (= (getValueByKey!175 lt!74094 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44121 (= lt!74092 (lemmaContainsTupThenGetReturnValue!91 lt!74094 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44121 (= lt!74094 (insertStrictlySorted!93 (toList!889 lt!73264) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44121 (= (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74093)))

(declare-fun b!141075 () Bool)

(declare-fun res!67406 () Bool)

(assert (=> b!141075 (=> (not res!67406) (not e!91962))))

(assert (=> b!141075 (= res!67406 (= (getValueByKey!175 (toList!889 lt!74093) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141076 () Bool)

(assert (=> b!141076 (= e!91962 (contains!923 (toList!889 lt!74093) (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!44121 res!67407) b!141075))

(assert (= (and b!141075 res!67406) b!141076))

(declare-fun m!169207 () Bool)

(assert (=> d!44121 m!169207))

(declare-fun m!169209 () Bool)

(assert (=> d!44121 m!169209))

(declare-fun m!169211 () Bool)

(assert (=> d!44121 m!169211))

(declare-fun m!169213 () Bool)

(assert (=> d!44121 m!169213))

(declare-fun m!169215 () Bool)

(assert (=> b!141075 m!169215))

(declare-fun m!169217 () Bool)

(assert (=> b!141076 m!169217))

(assert (=> b!139873 d!44121))

(declare-fun d!44123 () Bool)

(assert (=> d!44123 (= (apply!120 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73256) (apply!120 lt!73264 lt!73256))))

(declare-fun lt!74095 () Unit!4395)

(assert (=> d!44123 (= lt!74095 (choose!870 lt!73264 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73256))))

(declare-fun e!91963 () Bool)

(assert (=> d!44123 e!91963))

(declare-fun res!67408 () Bool)

(assert (=> d!44123 (=> (not res!67408) (not e!91963))))

(assert (=> d!44123 (= res!67408 (contains!921 lt!73264 lt!73256))))

(assert (=> d!44123 (= (addApplyDifferent!96 lt!73264 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73256) lt!74095)))

(declare-fun b!141077 () Bool)

(assert (=> b!141077 (= e!91963 (not (= lt!73256 lt!73247)))))

(assert (= (and d!44123 res!67408) b!141077))

(declare-fun m!169219 () Bool)

(assert (=> d!44123 m!169219))

(assert (=> d!44123 m!166987))

(assert (=> d!44123 m!166989))

(assert (=> d!44123 m!166987))

(assert (=> d!44123 m!167013))

(declare-fun m!169221 () Bool)

(assert (=> d!44123 m!169221))

(assert (=> b!139873 d!44123))

(declare-fun d!44125 () Bool)

(assert (=> d!44125 (= (apply!120 lt!73255 lt!73266) (get!1538 (getValueByKey!175 (toList!889 lt!73255) lt!73266)))))

(declare-fun bs!5912 () Bool)

(assert (= bs!5912 d!44125))

(declare-fun m!169223 () Bool)

(assert (=> bs!5912 m!169223))

(assert (=> bs!5912 m!169223))

(declare-fun m!169225 () Bool)

(assert (=> bs!5912 m!169225))

(assert (=> b!139873 d!44125))

(declare-fun d!44127 () Bool)

(declare-fun e!91964 () Bool)

(assert (=> d!44127 e!91964))

(declare-fun res!67410 () Bool)

(assert (=> d!44127 (=> (not res!67410) (not e!91964))))

(declare-fun lt!74098 () ListLongMap!1747)

(assert (=> d!44127 (= res!67410 (contains!921 lt!74098 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!74099 () List!1764)

(assert (=> d!44127 (= lt!74098 (ListLongMap!1748 lt!74099))))

(declare-fun lt!74096 () Unit!4395)

(declare-fun lt!74097 () Unit!4395)

(assert (=> d!44127 (= lt!74096 lt!74097)))

(assert (=> d!44127 (= (getValueByKey!175 lt!74099 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44127 (= lt!74097 (lemmaContainsTupThenGetReturnValue!91 lt!74099 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44127 (= lt!74099 (insertStrictlySorted!93 (toList!889 lt!73255) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44127 (= (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!74098)))

(declare-fun b!141078 () Bool)

(declare-fun res!67409 () Bool)

(assert (=> b!141078 (=> (not res!67409) (not e!91964))))

(assert (=> b!141078 (= res!67409 (= (getValueByKey!175 (toList!889 lt!74098) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141079 () Bool)

(assert (=> b!141079 (= e!91964 (contains!923 (toList!889 lt!74098) (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44127 res!67410) b!141078))

(assert (= (and b!141078 res!67409) b!141079))

(declare-fun m!169227 () Bool)

(assert (=> d!44127 m!169227))

(declare-fun m!169229 () Bool)

(assert (=> d!44127 m!169229))

(declare-fun m!169231 () Bool)

(assert (=> d!44127 m!169231))

(declare-fun m!169233 () Bool)

(assert (=> d!44127 m!169233))

(declare-fun m!169235 () Bool)

(assert (=> b!141078 m!169235))

(declare-fun m!169237 () Bool)

(assert (=> b!141079 m!169237))

(assert (=> b!139873 d!44127))

(declare-fun d!44129 () Bool)

(assert (=> d!44129 (= (apply!120 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73267) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73267)))))

(declare-fun bs!5913 () Bool)

(assert (= bs!5913 d!44129))

(declare-fun m!169239 () Bool)

(assert (=> bs!5913 m!169239))

(assert (=> bs!5913 m!169239))

(declare-fun m!169241 () Bool)

(assert (=> bs!5913 m!169241))

(assert (=> b!139873 d!44129))

(declare-fun d!44131 () Bool)

(assert (=> d!44131 (= (apply!120 lt!73264 lt!73256) (get!1538 (getValueByKey!175 (toList!889 lt!73264) lt!73256)))))

(declare-fun bs!5914 () Bool)

(assert (= bs!5914 d!44131))

(declare-fun m!169243 () Bool)

(assert (=> bs!5914 m!169243))

(assert (=> bs!5914 m!169243))

(declare-fun m!169245 () Bool)

(assert (=> bs!5914 m!169245))

(assert (=> b!139873 d!44131))

(assert (=> b!139873 d!43995))

(declare-fun d!44133 () Bool)

(assert (=> d!44133 (= (apply!120 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73266) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73266)))))

(declare-fun bs!5915 () Bool)

(assert (= bs!5915 d!44133))

(declare-fun m!169247 () Bool)

(assert (=> bs!5915 m!169247))

(assert (=> bs!5915 m!169247))

(declare-fun m!169249 () Bool)

(assert (=> bs!5915 m!169249))

(assert (=> b!139873 d!44133))

(declare-fun d!44135 () Bool)

(assert (=> d!44135 (= (apply!120 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73267) (apply!120 lt!73261 lt!73267))))

(declare-fun lt!74100 () Unit!4395)

(assert (=> d!44135 (= lt!74100 (choose!870 lt!73261 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73267))))

(declare-fun e!91965 () Bool)

(assert (=> d!44135 e!91965))

(declare-fun res!67411 () Bool)

(assert (=> d!44135 (=> (not res!67411) (not e!91965))))

(assert (=> d!44135 (= res!67411 (contains!921 lt!73261 lt!73267))))

(assert (=> d!44135 (= (addApplyDifferent!96 lt!73261 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73267) lt!74100)))

(declare-fun b!141080 () Bool)

(assert (=> b!141080 (= e!91965 (not (= lt!73267 lt!73265)))))

(assert (= (and d!44135 res!67411) b!141080))

(declare-fun m!169251 () Bool)

(assert (=> d!44135 m!169251))

(assert (=> d!44135 m!167001))

(assert (=> d!44135 m!167003))

(assert (=> d!44135 m!167001))

(assert (=> d!44135 m!166999))

(declare-fun m!169253 () Bool)

(assert (=> d!44135 m!169253))

(assert (=> b!139873 d!44135))

(declare-fun d!44137 () Bool)

(declare-fun e!91966 () Bool)

(assert (=> d!44137 e!91966))

(declare-fun res!67413 () Bool)

(assert (=> d!44137 (=> (not res!67413) (not e!91966))))

(declare-fun lt!74103 () ListLongMap!1747)

(assert (=> d!44137 (= res!67413 (contains!921 lt!74103 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!74104 () List!1764)

(assert (=> d!44137 (= lt!74103 (ListLongMap!1748 lt!74104))))

(declare-fun lt!74101 () Unit!4395)

(declare-fun lt!74102 () Unit!4395)

(assert (=> d!44137 (= lt!74101 lt!74102)))

(assert (=> d!44137 (= (getValueByKey!175 lt!74104 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44137 (= lt!74102 (lemmaContainsTupThenGetReturnValue!91 lt!74104 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44137 (= lt!74104 (insertStrictlySorted!93 (toList!889 lt!73261) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44137 (= (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74103)))

(declare-fun b!141081 () Bool)

(declare-fun res!67412 () Bool)

(assert (=> b!141081 (=> (not res!67412) (not e!91966))))

(assert (=> b!141081 (= res!67412 (= (getValueByKey!175 (toList!889 lt!74103) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141082 () Bool)

(assert (=> b!141082 (= e!91966 (contains!923 (toList!889 lt!74103) (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!44137 res!67413) b!141081))

(assert (= (and b!141081 res!67412) b!141082))

(declare-fun m!169255 () Bool)

(assert (=> d!44137 m!169255))

(declare-fun m!169257 () Bool)

(assert (=> d!44137 m!169257))

(declare-fun m!169259 () Bool)

(assert (=> d!44137 m!169259))

(declare-fun m!169261 () Bool)

(assert (=> d!44137 m!169261))

(declare-fun m!169263 () Bool)

(assert (=> b!141081 m!169263))

(declare-fun m!169265 () Bool)

(assert (=> b!141082 m!169265))

(assert (=> b!139873 d!44137))

(declare-fun d!44139 () Bool)

(declare-fun e!91967 () Bool)

(assert (=> d!44139 e!91967))

(declare-fun res!67415 () Bool)

(assert (=> d!44139 (=> (not res!67415) (not e!91967))))

(declare-fun lt!74107 () ListLongMap!1747)

(assert (=> d!44139 (= res!67415 (contains!921 lt!74107 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!74108 () List!1764)

(assert (=> d!44139 (= lt!74107 (ListLongMap!1748 lt!74108))))

(declare-fun lt!74105 () Unit!4395)

(declare-fun lt!74106 () Unit!4395)

(assert (=> d!44139 (= lt!74105 lt!74106)))

(assert (=> d!44139 (= (getValueByKey!175 lt!74108 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44139 (= lt!74106 (lemmaContainsTupThenGetReturnValue!91 lt!74108 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44139 (= lt!74108 (insertStrictlySorted!93 (toList!889 lt!73259) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44139 (= (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!74107)))

(declare-fun b!141083 () Bool)

(declare-fun res!67414 () Bool)

(assert (=> b!141083 (=> (not res!67414) (not e!91967))))

(assert (=> b!141083 (= res!67414 (= (getValueByKey!175 (toList!889 lt!74107) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141084 () Bool)

(assert (=> b!141084 (= e!91967 (contains!923 (toList!889 lt!74107) (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44139 res!67415) b!141083))

(assert (= (and b!141083 res!67414) b!141084))

(declare-fun m!169267 () Bool)

(assert (=> d!44139 m!169267))

(declare-fun m!169269 () Bool)

(assert (=> d!44139 m!169269))

(declare-fun m!169271 () Bool)

(assert (=> d!44139 m!169271))

(declare-fun m!169273 () Bool)

(assert (=> d!44139 m!169273))

(declare-fun m!169275 () Bool)

(assert (=> b!141083 m!169275))

(declare-fun m!169277 () Bool)

(assert (=> b!141084 m!169277))

(assert (=> b!139873 d!44139))

(declare-fun d!44141 () Bool)

(assert (=> d!44141 (= (apply!120 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73256) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73256)))))

(declare-fun bs!5916 () Bool)

(assert (= bs!5916 d!44141))

(declare-fun m!169279 () Bool)

(assert (=> bs!5916 m!169279))

(assert (=> bs!5916 m!169279))

(declare-fun m!169281 () Bool)

(assert (=> bs!5916 m!169281))

(assert (=> b!139873 d!44141))

(declare-fun d!44143 () Bool)

(assert (=> d!44143 (contains!921 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73257)))

(declare-fun lt!74109 () Unit!4395)

(assert (=> d!44143 (= lt!74109 (choose!871 lt!73259 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73257))))

(assert (=> d!44143 (contains!921 lt!73259 lt!73257)))

(assert (=> d!44143 (= (addStillContains!96 lt!73259 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73257) lt!74109)))

(declare-fun bs!5917 () Bool)

(assert (= bs!5917 d!44143))

(assert (=> bs!5917 m!166993))

(assert (=> bs!5917 m!166993))

(assert (=> bs!5917 m!166995))

(declare-fun m!169283 () Bool)

(assert (=> bs!5917 m!169283))

(declare-fun m!169285 () Bool)

(assert (=> bs!5917 m!169285))

(assert (=> b!139873 d!44143))

(declare-fun d!44145 () Bool)

(declare-fun e!91969 () Bool)

(assert (=> d!44145 e!91969))

(declare-fun res!67416 () Bool)

(assert (=> d!44145 (=> res!67416 e!91969)))

(declare-fun lt!74110 () Bool)

(assert (=> d!44145 (= res!67416 (not lt!74110))))

(declare-fun lt!74113 () Bool)

(assert (=> d!44145 (= lt!74110 lt!74113)))

(declare-fun lt!74111 () Unit!4395)

(declare-fun e!91968 () Unit!4395)

(assert (=> d!44145 (= lt!74111 e!91968)))

(declare-fun c!26486 () Bool)

(assert (=> d!44145 (= c!26486 lt!74113)))

(assert (=> d!44145 (= lt!74113 (containsKey!179 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257))))

(assert (=> d!44145 (= (contains!921 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73257) lt!74110)))

(declare-fun b!141085 () Bool)

(declare-fun lt!74112 () Unit!4395)

(assert (=> b!141085 (= e!91968 lt!74112)))

(assert (=> b!141085 (= lt!74112 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257))))

(assert (=> b!141085 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257))))

(declare-fun b!141086 () Bool)

(declare-fun Unit!4454 () Unit!4395)

(assert (=> b!141086 (= e!91968 Unit!4454)))

(declare-fun b!141087 () Bool)

(assert (=> b!141087 (= e!91969 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257)))))

(assert (= (and d!44145 c!26486) b!141085))

(assert (= (and d!44145 (not c!26486)) b!141086))

(assert (= (and d!44145 (not res!67416)) b!141087))

(declare-fun m!169287 () Bool)

(assert (=> d!44145 m!169287))

(declare-fun m!169289 () Bool)

(assert (=> b!141085 m!169289))

(declare-fun m!169291 () Bool)

(assert (=> b!141085 m!169291))

(assert (=> b!141085 m!169291))

(declare-fun m!169293 () Bool)

(assert (=> b!141085 m!169293))

(assert (=> b!141087 m!169291))

(assert (=> b!141087 m!169291))

(assert (=> b!141087 m!169293))

(assert (=> b!139873 d!44145))

(declare-fun d!44147 () Bool)

(assert (=> d!44147 (= (apply!120 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73266) (apply!120 lt!73255 lt!73266))))

(declare-fun lt!74114 () Unit!4395)

(assert (=> d!44147 (= lt!74114 (choose!870 lt!73255 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73266))))

(declare-fun e!91970 () Bool)

(assert (=> d!44147 e!91970))

(declare-fun res!67417 () Bool)

(assert (=> d!44147 (=> (not res!67417) (not e!91970))))

(assert (=> d!44147 (= res!67417 (contains!921 lt!73255 lt!73266))))

(assert (=> d!44147 (= (addApplyDifferent!96 lt!73255 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73266) lt!74114)))

(declare-fun b!141088 () Bool)

(assert (=> b!141088 (= e!91970 (not (= lt!73266 lt!73260)))))

(assert (= (and d!44147 res!67417) b!141088))

(declare-fun m!169295 () Bool)

(assert (=> d!44147 m!169295))

(assert (=> d!44147 m!167005))

(assert (=> d!44147 m!167007))

(assert (=> d!44147 m!167005))

(assert (=> d!44147 m!167015))

(declare-fun m!169297 () Bool)

(assert (=> d!44147 m!169297))

(assert (=> b!139873 d!44147))

(declare-fun d!44149 () Bool)

(declare-fun res!67418 () Bool)

(declare-fun e!91971 () Bool)

(assert (=> d!44149 (=> res!67418 e!91971)))

(assert (=> d!44149 (= res!67418 (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!44149 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!91971)))

(declare-fun b!141089 () Bool)

(declare-fun e!91972 () Bool)

(assert (=> b!141089 (= e!91971 e!91972)))

(declare-fun res!67419 () Bool)

(assert (=> b!141089 (=> (not res!67419) (not e!91972))))

(assert (=> b!141089 (= res!67419 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!141090 () Bool)

(assert (=> b!141090 (= e!91972 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44149 (not res!67418)) b!141089))

(assert (= (and b!141089 res!67419) b!141090))

(declare-fun m!169299 () Bool)

(assert (=> d!44149 m!169299))

(assert (=> b!141090 m!166733))

(declare-fun m!169301 () Bool)

(assert (=> b!141090 m!169301))

(assert (=> b!139976 d!44149))

(declare-fun d!44151 () Bool)

(assert (=> d!44151 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!74115 () Unit!4395)

(assert (=> d!44151 (= lt!74115 (choose!868 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!91973 () Bool)

(assert (=> d!44151 e!91973))

(declare-fun res!67420 () Bool)

(assert (=> d!44151 (=> (not res!67420) (not e!91973))))

(assert (=> d!44151 (= res!67420 (isStrictlySorted!320 (toList!889 lt!73135)))))

(assert (=> d!44151 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!74115)))

(declare-fun b!141091 () Bool)

(assert (=> b!141091 (= e!91973 (containsKey!179 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44151 res!67420) b!141091))

(assert (=> d!44151 m!166821))

(assert (=> d!44151 m!167087))

(assert (=> d!44151 m!167087))

(assert (=> d!44151 m!167113))

(assert (=> d!44151 m!166821))

(declare-fun m!169303 () Bool)

(assert (=> d!44151 m!169303))

(assert (=> d!44151 m!168991))

(assert (=> b!141091 m!166821))

(assert (=> b!141091 m!167109))

(assert (=> b!139972 d!44151))

(assert (=> b!139972 d!43761))

(assert (=> b!139972 d!43723))

(assert (=> b!139998 d!43605))

(assert (=> b!140196 d!43707))

(declare-fun d!44153 () Bool)

(declare-fun e!91975 () Bool)

(assert (=> d!44153 e!91975))

(declare-fun res!67421 () Bool)

(assert (=> d!44153 (=> res!67421 e!91975)))

(declare-fun lt!74116 () Bool)

(assert (=> d!44153 (= res!67421 (not lt!74116))))

(declare-fun lt!74119 () Bool)

(assert (=> d!44153 (= lt!74116 lt!74119)))

(declare-fun lt!74117 () Unit!4395)

(declare-fun e!91974 () Unit!4395)

(assert (=> d!44153 (= lt!74117 e!91974)))

(declare-fun c!26487 () Bool)

(assert (=> d!44153 (= c!26487 lt!74119)))

(assert (=> d!44153 (= lt!74119 (containsKey!179 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44153 (= (contains!921 lt!73482 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74116)))

(declare-fun b!141092 () Bool)

(declare-fun lt!74118 () Unit!4395)

(assert (=> b!141092 (= e!91974 lt!74118)))

(assert (=> b!141092 (= lt!74118 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141092 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141093 () Bool)

(declare-fun Unit!4455 () Unit!4395)

(assert (=> b!141093 (= e!91974 Unit!4455)))

(declare-fun b!141094 () Bool)

(assert (=> b!141094 (= e!91975 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44153 c!26487) b!141092))

(assert (= (and d!44153 (not c!26487)) b!141093))

(assert (= (and d!44153 (not res!67421)) b!141094))

(assert (=> d!44153 m!166967))

(declare-fun m!169305 () Bool)

(assert (=> d!44153 m!169305))

(assert (=> b!141092 m!166967))

(declare-fun m!169307 () Bool)

(assert (=> b!141092 m!169307))

(assert (=> b!141092 m!166967))

(assert (=> b!141092 m!168047))

(assert (=> b!141092 m!168047))

(declare-fun m!169309 () Bool)

(assert (=> b!141092 m!169309))

(assert (=> b!141094 m!166967))

(assert (=> b!141094 m!168047))

(assert (=> b!141094 m!168047))

(assert (=> b!141094 m!169309))

(assert (=> b!140148 d!44153))

(declare-fun d!44155 () Bool)

(declare-fun e!91977 () Bool)

(assert (=> d!44155 e!91977))

(declare-fun res!67422 () Bool)

(assert (=> d!44155 (=> res!67422 e!91977)))

(declare-fun lt!74120 () Bool)

(assert (=> d!44155 (= res!67422 (not lt!74120))))

(declare-fun lt!74123 () Bool)

(assert (=> d!44155 (= lt!74120 lt!74123)))

(declare-fun lt!74121 () Unit!4395)

(declare-fun e!91976 () Unit!4395)

(assert (=> d!44155 (= lt!74121 e!91976)))

(declare-fun c!26488 () Bool)

(assert (=> d!44155 (= c!26488 lt!74123)))

(assert (=> d!44155 (= lt!74123 (containsKey!179 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44155 (= (contains!921 lt!73450 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74120)))

(declare-fun b!141095 () Bool)

(declare-fun lt!74122 () Unit!4395)

(assert (=> b!141095 (= e!91976 lt!74122)))

(assert (=> b!141095 (= lt!74122 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141095 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141096 () Bool)

(declare-fun Unit!4456 () Unit!4395)

(assert (=> b!141096 (= e!91976 Unit!4456)))

(declare-fun b!141097 () Bool)

(assert (=> b!141097 (= e!91977 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44155 c!26488) b!141095))

(assert (= (and d!44155 (not c!26488)) b!141096))

(assert (= (and d!44155 (not res!67422)) b!141097))

(assert (=> d!44155 m!166967))

(declare-fun m!169311 () Bool)

(assert (=> d!44155 m!169311))

(assert (=> b!141095 m!166967))

(declare-fun m!169313 () Bool)

(assert (=> b!141095 m!169313))

(assert (=> b!141095 m!166967))

(assert (=> b!141095 m!168055))

(assert (=> b!141095 m!168055))

(declare-fun m!169315 () Bool)

(assert (=> b!141095 m!169315))

(assert (=> b!141097 m!166967))

(assert (=> b!141097 m!168055))

(assert (=> b!141097 m!168055))

(assert (=> b!141097 m!169315))

(assert (=> b!140101 d!44155))

(declare-fun d!44157 () Bool)

(declare-fun e!91978 () Bool)

(assert (=> d!44157 e!91978))

(declare-fun res!67424 () Bool)

(assert (=> d!44157 (=> (not res!67424) (not e!91978))))

(declare-fun lt!74126 () ListLongMap!1747)

(assert (=> d!44157 (= res!67424 (contains!921 lt!74126 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74127 () List!1764)

(assert (=> d!44157 (= lt!74126 (ListLongMap!1748 lt!74127))))

(declare-fun lt!74124 () Unit!4395)

(declare-fun lt!74125 () Unit!4395)

(assert (=> d!44157 (= lt!74124 lt!74125)))

(assert (=> d!44157 (= (getValueByKey!175 lt!74127 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44157 (= lt!74125 (lemmaContainsTupThenGetReturnValue!91 lt!74127 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44157 (= lt!74127 (insertStrictlySorted!93 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44157 (= (+!174 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)) (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74126)))

(declare-fun b!141098 () Bool)

(declare-fun res!67423 () Bool)

(assert (=> b!141098 (=> (not res!67423) (not e!91978))))

(assert (=> b!141098 (= res!67423 (= (getValueByKey!175 (toList!889 lt!74126) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141099 () Bool)

(assert (=> b!141099 (= e!91978 (contains!923 (toList!889 lt!74126) (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44157 res!67424) b!141098))

(assert (= (and b!141098 res!67423) b!141099))

(declare-fun m!169317 () Bool)

(assert (=> d!44157 m!169317))

(declare-fun m!169319 () Bool)

(assert (=> d!44157 m!169319))

(declare-fun m!169321 () Bool)

(assert (=> d!44157 m!169321))

(declare-fun m!169323 () Bool)

(assert (=> d!44157 m!169323))

(declare-fun m!169325 () Bool)

(assert (=> b!141098 m!169325))

(declare-fun m!169327 () Bool)

(assert (=> b!141099 m!169327))

(assert (=> bm!15544 d!44157))

(declare-fun mapIsEmpty!4847 () Bool)

(declare-fun mapRes!4847 () Bool)

(assert (=> mapIsEmpty!4847 mapRes!4847))

(declare-fun condMapEmpty!4847 () Bool)

(declare-fun mapDefault!4847 () ValueCell!1122)

(assert (=> mapNonEmpty!4846 (= condMapEmpty!4847 (= mapRest!4846 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4847)))))

(declare-fun e!91980 () Bool)

(assert (=> mapNonEmpty!4846 (= tp!11578 (and e!91980 mapRes!4847))))

(declare-fun mapNonEmpty!4847 () Bool)

(declare-fun tp!11579 () Bool)

(declare-fun e!91979 () Bool)

(assert (=> mapNonEmpty!4847 (= mapRes!4847 (and tp!11579 e!91979))))

(declare-fun mapValue!4847 () ValueCell!1122)

(declare-fun mapRest!4847 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4847 () (_ BitVec 32))

(assert (=> mapNonEmpty!4847 (= mapRest!4846 (store mapRest!4847 mapKey!4847 mapValue!4847))))

(declare-fun b!141101 () Bool)

(assert (=> b!141101 (= e!91980 tp_is_empty!2931)))

(declare-fun b!141100 () Bool)

(assert (=> b!141100 (= e!91979 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4846 condMapEmpty!4847) mapIsEmpty!4847))

(assert (= (and mapNonEmpty!4846 (not condMapEmpty!4847)) mapNonEmpty!4847))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1122) mapValue!4847)) b!141100))

(assert (= (and mapNonEmpty!4846 ((_ is ValueCellFull!1122) mapDefault!4847)) b!141101))

(declare-fun m!169329 () Bool)

(assert (=> mapNonEmpty!4847 m!169329))

(declare-fun mapIsEmpty!4848 () Bool)

(declare-fun mapRes!4848 () Bool)

(assert (=> mapIsEmpty!4848 mapRes!4848))

(declare-fun condMapEmpty!4848 () Bool)

(declare-fun mapDefault!4848 () ValueCell!1122)

(assert (=> mapNonEmpty!4845 (= condMapEmpty!4848 (= mapRest!4845 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4848)))))

(declare-fun e!91982 () Bool)

(assert (=> mapNonEmpty!4845 (= tp!11577 (and e!91982 mapRes!4848))))

(declare-fun mapNonEmpty!4848 () Bool)

(declare-fun tp!11580 () Bool)

(declare-fun e!91981 () Bool)

(assert (=> mapNonEmpty!4848 (= mapRes!4848 (and tp!11580 e!91981))))

(declare-fun mapKey!4848 () (_ BitVec 32))

(declare-fun mapValue!4848 () ValueCell!1122)

(declare-fun mapRest!4848 () (Array (_ BitVec 32) ValueCell!1122))

(assert (=> mapNonEmpty!4848 (= mapRest!4845 (store mapRest!4848 mapKey!4848 mapValue!4848))))

(declare-fun b!141103 () Bool)

(assert (=> b!141103 (= e!91982 tp_is_empty!2931)))

(declare-fun b!141102 () Bool)

(assert (=> b!141102 (= e!91981 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4845 condMapEmpty!4848) mapIsEmpty!4848))

(assert (= (and mapNonEmpty!4845 (not condMapEmpty!4848)) mapNonEmpty!4848))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1122) mapValue!4848)) b!141102))

(assert (= (and mapNonEmpty!4845 ((_ is ValueCellFull!1122) mapDefault!4848)) b!141103))

(declare-fun m!169331 () Bool)

(assert (=> mapNonEmpty!4848 m!169331))

(declare-fun b_lambda!6347 () Bool)

(assert (= b_lambda!6317 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6347)))

(declare-fun b_lambda!6349 () Bool)

(assert (= b_lambda!6323 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6349)))

(declare-fun b_lambda!6351 () Bool)

(assert (= b_lambda!6321 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6351)))

(declare-fun b_lambda!6353 () Bool)

(assert (= b_lambda!6335 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6353)))

(declare-fun b_lambda!6355 () Bool)

(assert (= b_lambda!6333 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6355)))

(declare-fun b_lambda!6357 () Bool)

(assert (= b_lambda!6319 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6357)))

(declare-fun b_lambda!6359 () Bool)

(assert (= b_lambda!6315 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6359)))

(declare-fun b_lambda!6361 () Bool)

(assert (= b_lambda!6331 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6361)))

(declare-fun b_lambda!6363 () Bool)

(assert (= b_lambda!6327 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6363)))

(declare-fun b_lambda!6365 () Bool)

(assert (= b_lambda!6337 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6365)))

(declare-fun b_lambda!6367 () Bool)

(assert (= b_lambda!6343 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6367)))

(declare-fun b_lambda!6369 () Bool)

(assert (= b_lambda!6341 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6369)))

(declare-fun b_lambda!6371 () Bool)

(assert (= b_lambda!6329 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6371)))

(declare-fun b_lambda!6373 () Bool)

(assert (= b_lambda!6325 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6373)))

(declare-fun b_lambda!6375 () Bool)

(assert (= b_lambda!6345 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6375)))

(check-sat (not d!44083) (not b!140616) (not d!43917) (not b!140680) (not b!140936) (not b!140912) (not d!43941) (not b!140459) (not b!140455) (not b!141033) (not b!140677) (not b!140336) (not b!140567) (not b!140496) (not d!43985) (not b!141074) (not d!43853) (not b!140920) (not d!44007) (not b!141045) (not b!140572) (not d!44153) (not b!141016) (not d!44021) (not bm!15592) (not b!140721) (not d!44029) (not bm!15588) (not d!43911) (not b!140379) (not d!43611) (not d!43851) (not b!140683) (not b!140907) (not b!140643) (not b!140536) (not d!43983) (not d!43847) (not b!140809) (not b!140562) (not b!140355) (not b!140412) (not b!140754) (not bm!15584) (not b!140664) (not b!140297) (not b!140839) (not b!140947) (not b!140784) (not d!43785) (not b!140288) (not b!140588) (not bm!15658) (not b!140389) (not b!140777) (not b!141071) (not bm!15636) (not b!140265) (not d!43973) (not b!140245) (not d!43841) (not b!140291) (not b!140450) (not b_next!3029) (not b!140409) (not b!140574) (not b!141038) (not b!140620) (not b!141022) (not bm!15604) (not b!140539) (not b!140259) (not b!140606) (not b!140894) (not b!140274) (not b!140863) (not d!43825) (not d!44097) (not b!140462) (not b!140903) (not bm!15587) (not b!140569) (not d!44047) (not b!140600) (not d!43763) (not b!140905) (not d!43665) (not b!140663) (not b!140874) (not d!43745) (not b!140397) (not b!140471) (not d!44073) (not d!43725) (not d!44137) (not d!43625) (not b!140421) (not b!141068) (not d!43995) (not d!44061) (not b!140430) (not d!44087) (not b!140251) (not b!140899) (not b!140825) (not d!43791) (not d!44091) (not b!140321) (not d!44017) (not d!43777) (not b!140949) (not d!43969) (not b!140577) (not d!43739) (not b!140363) (not b!140872) (not b!140510) (not bm!15598) (not bm!15646) (not b!140740) (not b!140741) (not d!43623) (not b_lambda!6367) (not d!43685) (not b!140810) (not b!140472) (not bm!15649) (not b!140327) (not b!140906) (not b!140331) (not b!140686) (not bm!15641) (not d!43815) (not b!140834) (not b!140938) (not b!140275) (not d!44145) (not b!140277) (not d!43813) (not b!140753) (not d!43833) (not b_lambda!6313) (not d!43923) (not b!140257) (not b!141090) (not d!43615) (not d!43905) (not b!140581) (not bm!15667) (not d!43673) (not b!140403) (not b!140827) (not d!43947) (not b!140661) (not b!140758) (not b!140835) (not b!140852) (not bm!15650) (not b!140737) (not b!140624) (not d!43977) (not b!140711) (not d!43669) (not b!140622) (not bm!15616) (not d!43631) (not b!140914) (not b!140580) (not bm!15589) (not b!140887) (not b!140787) (not b!141092) (not d!43907) (not b!140360) (not b!140556) (not b!140329) (not b!140904) (not d!44099) (not b_lambda!6311) (not b!141047) (not b!140816) (not b_lambda!6371) (not b!140861) (not b!141039) (not b!140673) (not d!44113) (not b!140745) (not d!43635) (not b!141023) (not d!43807) (not d!44033) (not b!140897) (not b!140442) (not d!43729) (not b!141025) (not bm!15672) (not d!44095) (not d!43823) (not d!43755) (not b!140508) (not d!43613) (not b!140543) (not b!140480) (not b!140468) (not b_lambda!6303) (not d!44023) (not d!43795) (not d!43703) (not b!140354) (not b!140828) (not b!140398) (not d!43881) (not b!140343) (not b!140439) (not d!44127) (not b!140875) (not b!140651) (not b!140286) (not d!44011) (not bm!15626) (not b!141084) (not b!140743) (not bm!15654) (not d!43829) (not b!140344) (not d!43741) (not b!140601) (not d!43991) (not b!140545) (not b!140640) (not b!140333) (not bm!15629) (not bm!15620) (not b_lambda!6351) (not d!43955) (not b!140656) (not b!140617) (not d!43699) (not b!140357) (not b!140241) (not b!140376) (not d!43801) (not b!140262) (not d!43597) (not b!140815) (not b!140380) (not b_lambda!6353) (not b!140704) (not d!43925) (not b!140911) (not b!140831) (not bm!15671) (not b!140757) (not bm!15599) (not d!43989) (not b_lambda!6347) (not b!141034) (not b!140633) (not b!141091) (not b!140338) (not b!140780) (not b!140644) (not b!140527) (not b!140756) (not b!140850) (not b!140518) (not b!140865) (not b!141020) (not bm!15628) (not b!140878) (not d!43683) (not b!140847) (not b!140589) (not bm!15600) (not b!141037) (not b!140565) (not d!43753) (not b!141018) (not b!140500) (not b!141070) (not d!44129) (not d!43695) (not b!140868) (not b!141049) (not b!140706) (not b!140822) (not b!140608) (not b!140910) (not b!140585) (not bm!15595) (not b!141063) (not b!140537) (not d!43959) (not b!140253) (not b!140347) (not bm!15643) (not b_lambda!6359) (not d!44121) (not b!140334) (not d!43859) (not b!140982) (not b!140493) (not d!43957) (not b!140908) (not bm!15652) (not d!43967) (not b_lambda!6307) (not d!43805) (not d!43819) (not b!140919) (not b!140575) (not b!140848) (not bm!15653) (not b!140645) (not b!140491) (not d!43799) (not bm!15637) (not b!140934) (not b!141099) (not d!43659) (not d!44027) (not mapNonEmpty!4848) (not b!140734) (not b_lambda!6355) (not b!141094) (not b!140283) (not d!43715) (not d!43809) (not bm!15670) (not d!44157) (not bm!15612) (not b!140250) (not b!140783) (not d!43713) (not b!140532) (not b!141085) (not b!140902) (not b!140386) (not d!44009) (not b!141052) (not b!140846) (not b!140974) (not b_lambda!6369) (not d!43999) (not b!140490) (not b!140377) (not b!140591) (not d!44071) (not b!140584) (not bm!15617) (not d!43893) (not d!44035) (not b!140366) (not b!141087) (not d!43975) (not b!140893) (not d!44025) (not d!43679) (not b!140864) (not mapNonEmpty!4847) (not b!140465) (not d!43701) (not d!43797) (not d!44147) (not b_lambda!6285) (not b!140400) (not b!140821) (not b!140515) (not b!140452) (not d!43821) (not d!43779) (not bm!15611) (not b!140362) (not b!140247) (not d!44117) (not d!44119) (not d!43937) (not b!140517) (not b!140593) (not b!140521) (not d!44051) (not d!43759) (not bm!15632) (not b!140269) (not bm!15621) (not d!43971) (not d!43735) (not b!140944) (not b!140280) (not d!43953) (not d!44133) (not d!43637) (not b!140502) (not d!43877) (not b!141083) (not b!140271) (not d!43913) (not b!141076) (not b!140285) (not b!140266) (not d!44003) (not b!140823) (not b!141081) (not b_lambda!6305) (not d!43883) (not b!140372) (not d!43945) (not b!140248) (not b!140619) (not bm!15664) (not b!140383) (not b!140836) (not b_next!3031) (not d!43901) (not b!140553) (not d!44019) (not d!43675) (not d!43787) (not b!140375) (not b!140621) (not b!140550) (not d!43599) (not bm!15657) (not b!141072) (not b!140789) (not d!43849) (not b!140833) (not b!140573) (not d!43761) (not d!43897) (not b!140586) (not b_lambda!6373) (not b!140535) (not d!43733) (not b!140385) (not b!141046) (not d!43645) (not b!140884) (not b_lambda!6363) (not b!140319) (not b!140708) (not b!140499) (not d!43691) (not b!140981) (not b!141061) (not b!140444) (not d!44135) (not d!43997) (not bm!15651) (not b!140498) (not bm!15607) (not b!140547) (not d!43617) (not d!44115) (not b!140512) (not b!140927) (not b!140374) (not d!43811) (not d!43837) (not d!43855) (not b!140693) (not b!140900) (not b!140979) (not d!44045) (not b!140720) (not bm!15610) (not b!140771) (not b!140243) (not d!43601) (not b!140791) (not b!140260) (not b!140658) (not b!140529) (not b!140761) (not d!43677) (not b!140598) (not b!140665) (not b!140814) (not d!43649) (not b_lambda!6339) (not b!140603) (not b!140298) (not bm!15576) (not b!141041) (not b!140405) (not d!44141) (not d!43831) (not b!140604) (not b!140519) (not b!140866) (not b!141097) (not b!141050) (not b!141082) (not b!140724) (not b_lambda!6349) (not b!140843) (not d!43933) (not d!44155) (not d!44055) (not d!43827) (not b!140427) (not b!140860) (not d!43839) (not d!43747) (not b!140461) (not b!140916) (not d!44081) (not b!140254) (not b!140722) (not b!140470) (not b!141079) (not bm!15577) (not b!140845) (not b!140534) (not b!140935) (not b!140441) (not b!140249) (not b!140707) (not d!43943) (not d!44043) (not b_lambda!6357) (not b!140932) (not d!43803) (not b!140530) (not d!44075) (not b!141078) (not d!43783) (not d!43603) (not b!140463) (not b!140448) (not b!140929) (not b!141036) (not bm!15666) (not bm!15633) (not b!140695) (not d!43867) (not d!43843) (not b!140554) (not b!140913) (not b!140552) (not b!140642) (not d!43607) (not b!140888) (not b!140925) (not bm!15625) (not b!140759) (not d!44085) (not b!140709) (not b!140587) (not bm!15622) (not b!140424) (not d!43789) (not b!140891) (not b!141098) (not d!43891) (not b!140654) (not bm!15634) (not b!140434) (not b!140988) (not d!43817) (not b!140351) (not b!141065) b_and!8845 (not b!140667) (not d!43737) (not b!141021) (not b_lambda!6289) tp_is_empty!2931 (not bm!15642) (not b!140890) (not d!44013) (not bm!15640) (not b!141058) (not d!43949) (not d!43793) (not b!140717) (not b!140692) (not b!140716) (not d!43963) (not b!140486) (not b!140881) (not b_lambda!6375) (not d!43835) (not bm!15645) (not b!140984) (not d!44067) (not b!140812) (not d!43671) (not b!140946) (not d!43749) (not d!43871) (not b!140570) (not b!141055) (not b!140703) (not b!141075) (not b!140922) (not b!140364) (not d!44005) (not b!140240) (not d!43939) (not d!44089) (not b!140387) (not b!140840) (not bm!15594) (not b!140263) (not b_lambda!6361) (not b!140636) b_and!8847 (not d!43781) (not d!44143) (not d!43929) (not d!43921) (not d!43653) (not b!141095) (not bm!15663) (not b!140690) (not b!140735) (not b!140272) (not d!43643) (not b!141015) (not d!44015) (not d!43773) (not b_lambda!6309) (not b!140596) (not d!43919) (not b!140261) (not d!43961) (not d!44039) (not b!140571) (not b!140488) (not b!141069) (not bm!15601) (not b!140415) (not d!44139) (not d!43869) (not b!140401) (not b!140341) (not b!140773) (not b!140630) (not b!140837) (not d!43767) (not d!44151) (not b!140718) (not b!140242) (not d!43629) (not b!140436) (not d!44001) (not d!44131) (not b_lambda!6365) (not b!140769) (not d!44125) (not b!140402) (not b!140889) (not b!140576) (not b!140474) (not d!44123))
(check-sat b_and!8845 b_and!8847 (not b_next!3029) (not b_next!3031))
(get-model)

(declare-fun d!44159 () Bool)

(assert (=> d!44159 (= (isEmpty!422 (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142)) (not ((_ is Some!180) (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))))

(assert (=> d!43653 d!44159))

(assert (=> d!43793 d!43783))

(assert (=> d!43793 d!43785))

(declare-fun d!44161 () Bool)

(assert (=> d!44161 (= (apply!120 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) lt!73488) (apply!120 lt!73496 lt!73488))))

(assert (=> d!44161 true))

(declare-fun _$34!1002 () Unit!4395)

(assert (=> d!44161 (= (choose!870 lt!73496 lt!73479 (minValue!2790 newMap!16) lt!73488) _$34!1002)))

(declare-fun bs!5918 () Bool)

(assert (= bs!5918 d!44161))

(assert (=> bs!5918 m!167335))

(assert (=> bs!5918 m!167335))

(assert (=> bs!5918 m!167337))

(assert (=> bs!5918 m!167361))

(assert (=> d!43793 d!44161))

(assert (=> d!43793 d!43799))

(declare-fun d!44163 () Bool)

(declare-fun e!91984 () Bool)

(assert (=> d!44163 e!91984))

(declare-fun res!67425 () Bool)

(assert (=> d!44163 (=> res!67425 e!91984)))

(declare-fun lt!74128 () Bool)

(assert (=> d!44163 (= res!67425 (not lt!74128))))

(declare-fun lt!74131 () Bool)

(assert (=> d!44163 (= lt!74128 lt!74131)))

(declare-fun lt!74129 () Unit!4395)

(declare-fun e!91983 () Unit!4395)

(assert (=> d!44163 (= lt!74129 e!91983)))

(declare-fun c!26489 () Bool)

(assert (=> d!44163 (= c!26489 lt!74131)))

(assert (=> d!44163 (= lt!74131 (containsKey!179 (toList!889 lt!73496) lt!73488))))

(assert (=> d!44163 (= (contains!921 lt!73496 lt!73488) lt!74128)))

(declare-fun b!141104 () Bool)

(declare-fun lt!74130 () Unit!4395)

(assert (=> b!141104 (= e!91983 lt!74130)))

(assert (=> b!141104 (= lt!74130 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73496) lt!73488))))

(assert (=> b!141104 (isDefined!129 (getValueByKey!175 (toList!889 lt!73496) lt!73488))))

(declare-fun b!141105 () Bool)

(declare-fun Unit!4457 () Unit!4395)

(assert (=> b!141105 (= e!91983 Unit!4457)))

(declare-fun b!141106 () Bool)

(assert (=> b!141106 (= e!91984 (isDefined!129 (getValueByKey!175 (toList!889 lt!73496) lt!73488)))))

(assert (= (and d!44163 c!26489) b!141104))

(assert (= (and d!44163 (not c!26489)) b!141105))

(assert (= (and d!44163 (not res!67425)) b!141106))

(declare-fun m!169333 () Bool)

(assert (=> d!44163 m!169333))

(declare-fun m!169335 () Bool)

(assert (=> b!141104 m!169335))

(assert (=> b!141104 m!168103))

(assert (=> b!141104 m!168103))

(declare-fun m!169337 () Bool)

(assert (=> b!141104 m!169337))

(assert (=> b!141106 m!168103))

(assert (=> b!141106 m!168103))

(assert (=> b!141106 m!169337))

(assert (=> d!43793 d!44163))

(declare-fun d!44165 () Bool)

(declare-fun e!91986 () Bool)

(assert (=> d!44165 e!91986))

(declare-fun res!67426 () Bool)

(assert (=> d!44165 (=> res!67426 e!91986)))

(declare-fun lt!74132 () Bool)

(assert (=> d!44165 (= res!67426 (not lt!74132))))

(declare-fun lt!74135 () Bool)

(assert (=> d!44165 (= lt!74132 lt!74135)))

(declare-fun lt!74133 () Unit!4395)

(declare-fun e!91985 () Unit!4395)

(assert (=> d!44165 (= lt!74133 e!91985)))

(declare-fun c!26490 () Bool)

(assert (=> d!44165 (= c!26490 lt!74135)))

(assert (=> d!44165 (= lt!74135 (containsKey!179 (toList!889 lt!73826) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44165 (= (contains!921 lt!73826 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74132)))

(declare-fun b!141107 () Bool)

(declare-fun lt!74134 () Unit!4395)

(assert (=> b!141107 (= e!91985 lt!74134)))

(assert (=> b!141107 (= lt!74134 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73826) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141107 (isDefined!129 (getValueByKey!175 (toList!889 lt!73826) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141108 () Bool)

(declare-fun Unit!4458 () Unit!4395)

(assert (=> b!141108 (= e!91985 Unit!4458)))

(declare-fun b!141109 () Bool)

(assert (=> b!141109 (= e!91986 (isDefined!129 (getValueByKey!175 (toList!889 lt!73826) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44165 c!26490) b!141107))

(assert (= (and d!44165 (not c!26490)) b!141108))

(assert (= (and d!44165 (not res!67426)) b!141109))

(declare-fun m!169339 () Bool)

(assert (=> d!44165 m!169339))

(declare-fun m!169341 () Bool)

(assert (=> b!141107 m!169341))

(declare-fun m!169343 () Bool)

(assert (=> b!141107 m!169343))

(assert (=> b!141107 m!169343))

(declare-fun m!169345 () Bool)

(assert (=> b!141107 m!169345))

(assert (=> b!141109 m!169343))

(assert (=> b!141109 m!169343))

(assert (=> b!141109 m!169345))

(assert (=> bm!15633 d!44165))

(assert (=> b!140837 d!43605))

(declare-fun d!44167 () Bool)

(assert (=> d!44167 (= (apply!120 lt!73643 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73643) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5919 () Bool)

(assert (= bs!5919 d!44167))

(declare-fun m!169347 () Bool)

(assert (=> bs!5919 m!169347))

(assert (=> bs!5919 m!169347))

(declare-fun m!169349 () Bool)

(assert (=> bs!5919 m!169349))

(assert (=> b!140400 d!44167))

(declare-fun d!44169 () Bool)

(declare-fun e!91988 () Bool)

(assert (=> d!44169 e!91988))

(declare-fun res!67427 () Bool)

(assert (=> d!44169 (=> res!67427 e!91988)))

(declare-fun lt!74136 () Bool)

(assert (=> d!44169 (= res!67427 (not lt!74136))))

(declare-fun lt!74139 () Bool)

(assert (=> d!44169 (= lt!74136 lt!74139)))

(declare-fun lt!74137 () Unit!4395)

(declare-fun e!91987 () Unit!4395)

(assert (=> d!44169 (= lt!74137 e!91987)))

(declare-fun c!26491 () Bool)

(assert (=> d!44169 (= c!26491 lt!74139)))

(assert (=> d!44169 (= lt!74139 (containsKey!179 (toList!889 lt!73971) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44169 (= (contains!921 lt!73971 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74136)))

(declare-fun b!141110 () Bool)

(declare-fun lt!74138 () Unit!4395)

(assert (=> b!141110 (= e!91987 lt!74138)))

(assert (=> b!141110 (= lt!74138 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73971) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141110 (isDefined!129 (getValueByKey!175 (toList!889 lt!73971) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141111 () Bool)

(declare-fun Unit!4459 () Unit!4395)

(assert (=> b!141111 (= e!91987 Unit!4459)))

(declare-fun b!141112 () Bool)

(assert (=> b!141112 (= e!91988 (isDefined!129 (getValueByKey!175 (toList!889 lt!73971) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44169 c!26491) b!141110))

(assert (= (and d!44169 (not c!26491)) b!141111))

(assert (= (and d!44169 (not res!67427)) b!141112))

(assert (=> d!44169 m!166967))

(declare-fun m!169351 () Bool)

(assert (=> d!44169 m!169351))

(assert (=> b!141110 m!166967))

(declare-fun m!169353 () Bool)

(assert (=> b!141110 m!169353))

(assert (=> b!141110 m!166967))

(declare-fun m!169355 () Bool)

(assert (=> b!141110 m!169355))

(assert (=> b!141110 m!169355))

(declare-fun m!169357 () Bool)

(assert (=> b!141110 m!169357))

(assert (=> b!141112 m!166967))

(assert (=> b!141112 m!169355))

(assert (=> b!141112 m!169355))

(assert (=> b!141112 m!169357))

(assert (=> b!140894 d!44169))

(declare-fun d!44171 () Bool)

(assert (=> d!44171 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) lt!73498)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) lt!73498)))))

(assert (=> d!43811 d!44171))

(declare-fun e!91990 () Option!181)

(declare-fun b!141115 () Bool)

(assert (=> b!141115 (= e!91990 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))) lt!73498))))

(declare-fun b!141114 () Bool)

(declare-fun e!91989 () Option!181)

(assert (=> b!141114 (= e!91989 e!91990)))

(declare-fun c!26493 () Bool)

(assert (=> b!141114 (= c!26493 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))) lt!73498))))))

(declare-fun b!141116 () Bool)

(assert (=> b!141116 (= e!91990 None!179)))

(declare-fun b!141113 () Bool)

(assert (=> b!141113 (= e!91989 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))))

(declare-fun d!44173 () Bool)

(declare-fun c!26492 () Bool)

(assert (=> d!44173 (= c!26492 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))) lt!73498)))))

(assert (=> d!44173 (= (getValueByKey!175 (toList!889 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) lt!73498) e!91989)))

(assert (= (and d!44173 c!26492) b!141113))

(assert (= (and d!44173 (not c!26492)) b!141114))

(assert (= (and b!141114 c!26493) b!141115))

(assert (= (and b!141114 (not c!26493)) b!141116))

(declare-fun m!169359 () Bool)

(assert (=> b!141115 m!169359))

(assert (=> d!43811 d!44173))

(assert (=> d!43679 d!43675))

(assert (=> d!43679 d!43525))

(assert (=> d!43679 d!43677))

(declare-fun d!44175 () Bool)

(declare-fun e!91992 () Bool)

(assert (=> d!44175 e!91992))

(declare-fun res!67428 () Bool)

(assert (=> d!44175 (=> res!67428 e!91992)))

(declare-fun lt!74140 () Bool)

(assert (=> d!44175 (= res!67428 (not lt!74140))))

(declare-fun lt!74143 () Bool)

(assert (=> d!44175 (= lt!74140 lt!74143)))

(declare-fun lt!74141 () Unit!4395)

(declare-fun e!91991 () Unit!4395)

(assert (=> d!44175 (= lt!74141 e!91991)))

(declare-fun c!26494 () Bool)

(assert (=> d!44175 (= c!26494 lt!74143)))

(assert (=> d!44175 (= lt!74143 (containsKey!179 (toList!889 (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587))) lt!73588))))

(assert (=> d!44175 (= (contains!921 (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587)) lt!73588) lt!74140)))

(declare-fun b!141117 () Bool)

(declare-fun lt!74142 () Unit!4395)

(assert (=> b!141117 (= e!91991 lt!74142)))

(assert (=> b!141117 (= lt!74142 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587))) lt!73588))))

(assert (=> b!141117 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587))) lt!73588))))

(declare-fun b!141118 () Bool)

(declare-fun Unit!4460 () Unit!4395)

(assert (=> b!141118 (= e!91991 Unit!4460)))

(declare-fun b!141119 () Bool)

(assert (=> b!141119 (= e!91992 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587))) lt!73588)))))

(assert (= (and d!44175 c!26494) b!141117))

(assert (= (and d!44175 (not c!26494)) b!141118))

(assert (= (and d!44175 (not res!67428)) b!141119))

(declare-fun m!169361 () Bool)

(assert (=> d!44175 m!169361))

(declare-fun m!169363 () Bool)

(assert (=> b!141117 m!169363))

(declare-fun m!169365 () Bool)

(assert (=> b!141117 m!169365))

(assert (=> b!141117 m!169365))

(declare-fun m!169367 () Bool)

(assert (=> b!141117 m!169367))

(assert (=> b!141119 m!169365))

(assert (=> b!141119 m!169365))

(assert (=> b!141119 m!169367))

(assert (=> b!140257 d!44175))

(assert (=> b!140257 d!43765))

(declare-fun d!44177 () Bool)

(declare-fun e!91993 () Bool)

(assert (=> d!44177 e!91993))

(declare-fun res!67430 () Bool)

(assert (=> d!44177 (=> (not res!67430) (not e!91993))))

(declare-fun lt!74146 () ListLongMap!1747)

(assert (=> d!44177 (= res!67430 (contains!921 lt!74146 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74147 () List!1764)

(assert (=> d!44177 (= lt!74146 (ListLongMap!1748 lt!74147))))

(declare-fun lt!74144 () Unit!4395)

(declare-fun lt!74145 () Unit!4395)

(assert (=> d!44177 (= lt!74144 lt!74145)))

(assert (=> d!44177 (= (getValueByKey!175 lt!74147 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44177 (= lt!74145 (lemmaContainsTupThenGetReturnValue!91 lt!74147 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44177 (= lt!74147 (insertStrictlySorted!93 (toList!889 call!15579) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44177 (= (+!174 call!15579 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74146)))

(declare-fun b!141120 () Bool)

(declare-fun res!67429 () Bool)

(assert (=> b!141120 (=> (not res!67429) (not e!91993))))

(assert (=> b!141120 (= res!67429 (= (getValueByKey!175 (toList!889 lt!74146) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141121 () Bool)

(assert (=> b!141121 (= e!91993 (contains!923 (toList!889 lt!74146) (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44177 res!67430) b!141120))

(assert (= (and b!141120 res!67429) b!141121))

(declare-fun m!169369 () Bool)

(assert (=> d!44177 m!169369))

(declare-fun m!169371 () Bool)

(assert (=> d!44177 m!169371))

(declare-fun m!169373 () Bool)

(assert (=> d!44177 m!169373))

(declare-fun m!169375 () Bool)

(assert (=> d!44177 m!169375))

(declare-fun m!169377 () Bool)

(assert (=> b!141120 m!169377))

(declare-fun m!169379 () Bool)

(assert (=> b!141121 m!169379))

(assert (=> b!140257 d!44177))

(declare-fun d!44179 () Bool)

(declare-fun e!91994 () Bool)

(assert (=> d!44179 e!91994))

(declare-fun res!67432 () Bool)

(assert (=> d!44179 (=> (not res!67432) (not e!91994))))

(declare-fun lt!74150 () ListLongMap!1747)

(assert (=> d!44179 (= res!67432 (contains!921 lt!74150 (_1!1352 (tuple2!2685 lt!73589 lt!73587))))))

(declare-fun lt!74151 () List!1764)

(assert (=> d!44179 (= lt!74150 (ListLongMap!1748 lt!74151))))

(declare-fun lt!74148 () Unit!4395)

(declare-fun lt!74149 () Unit!4395)

(assert (=> d!44179 (= lt!74148 lt!74149)))

(assert (=> d!44179 (= (getValueByKey!175 lt!74151 (_1!1352 (tuple2!2685 lt!73589 lt!73587))) (Some!180 (_2!1352 (tuple2!2685 lt!73589 lt!73587))))))

(assert (=> d!44179 (= lt!74149 (lemmaContainsTupThenGetReturnValue!91 lt!74151 (_1!1352 (tuple2!2685 lt!73589 lt!73587)) (_2!1352 (tuple2!2685 lt!73589 lt!73587))))))

(assert (=> d!44179 (= lt!74151 (insertStrictlySorted!93 (toList!889 lt!73585) (_1!1352 (tuple2!2685 lt!73589 lt!73587)) (_2!1352 (tuple2!2685 lt!73589 lt!73587))))))

(assert (=> d!44179 (= (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587)) lt!74150)))

(declare-fun b!141122 () Bool)

(declare-fun res!67431 () Bool)

(assert (=> b!141122 (=> (not res!67431) (not e!91994))))

(assert (=> b!141122 (= res!67431 (= (getValueByKey!175 (toList!889 lt!74150) (_1!1352 (tuple2!2685 lt!73589 lt!73587))) (Some!180 (_2!1352 (tuple2!2685 lt!73589 lt!73587)))))))

(declare-fun b!141123 () Bool)

(assert (=> b!141123 (= e!91994 (contains!923 (toList!889 lt!74150) (tuple2!2685 lt!73589 lt!73587)))))

(assert (= (and d!44179 res!67432) b!141122))

(assert (= (and b!141122 res!67431) b!141123))

(declare-fun m!169381 () Bool)

(assert (=> d!44179 m!169381))

(declare-fun m!169383 () Bool)

(assert (=> d!44179 m!169383))

(declare-fun m!169385 () Bool)

(assert (=> d!44179 m!169385))

(declare-fun m!169387 () Bool)

(assert (=> d!44179 m!169387))

(declare-fun m!169389 () Bool)

(assert (=> b!141122 m!169389))

(declare-fun m!169391 () Bool)

(assert (=> b!141123 m!169391))

(assert (=> b!140257 d!44179))

(declare-fun d!44181 () Bool)

(assert (=> d!44181 (not (contains!921 (+!174 lt!73585 (tuple2!2685 lt!73589 lt!73587)) lt!73588))))

(declare-fun lt!74152 () Unit!4395)

(assert (=> d!44181 (= lt!74152 (choose!875 lt!73585 lt!73589 lt!73587 lt!73588))))

(declare-fun e!91995 () Bool)

(assert (=> d!44181 e!91995))

(declare-fun res!67433 () Bool)

(assert (=> d!44181 (=> (not res!67433) (not e!91995))))

(assert (=> d!44181 (= res!67433 (not (contains!921 lt!73585 lt!73588)))))

(assert (=> d!44181 (= (addStillNotContains!66 lt!73585 lt!73589 lt!73587 lt!73588) lt!74152)))

(declare-fun b!141124 () Bool)

(assert (=> b!141124 (= e!91995 (not (= lt!73589 lt!73588)))))

(assert (= (and d!44181 res!67433) b!141124))

(assert (=> d!44181 m!167601))

(assert (=> d!44181 m!167601))

(assert (=> d!44181 m!167603))

(declare-fun m!169393 () Bool)

(assert (=> d!44181 m!169393))

(declare-fun m!169395 () Bool)

(assert (=> d!44181 m!169395))

(assert (=> b!140257 d!44181))

(declare-fun d!44183 () Bool)

(assert (=> d!44183 (= (get!1538 (getValueByKey!175 (toList!889 lt!73396) lt!73407)) (v!3283 (getValueByKey!175 (toList!889 lt!73396) lt!73407)))))

(assert (=> d!44001 d!44183))

(declare-fun b!141127 () Bool)

(declare-fun e!91997 () Option!181)

(assert (=> b!141127 (= e!91997 (getValueByKey!175 (t!6360 (toList!889 lt!73396)) lt!73407))))

(declare-fun b!141126 () Bool)

(declare-fun e!91996 () Option!181)

(assert (=> b!141126 (= e!91996 e!91997)))

(declare-fun c!26496 () Bool)

(assert (=> b!141126 (= c!26496 (and ((_ is Cons!1760) (toList!889 lt!73396)) (not (= (_1!1352 (h!2367 (toList!889 lt!73396))) lt!73407))))))

(declare-fun b!141128 () Bool)

(assert (=> b!141128 (= e!91997 None!179)))

(declare-fun b!141125 () Bool)

(assert (=> b!141125 (= e!91996 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73396)))))))

(declare-fun d!44185 () Bool)

(declare-fun c!26495 () Bool)

(assert (=> d!44185 (= c!26495 (and ((_ is Cons!1760) (toList!889 lt!73396)) (= (_1!1352 (h!2367 (toList!889 lt!73396))) lt!73407)))))

(assert (=> d!44185 (= (getValueByKey!175 (toList!889 lt!73396) lt!73407) e!91996)))

(assert (= (and d!44185 c!26495) b!141125))

(assert (= (and d!44185 (not c!26495)) b!141126))

(assert (= (and b!141126 c!26496) b!141127))

(assert (= (and b!141126 (not c!26496)) b!141128))

(declare-fun m!169397 () Bool)

(assert (=> b!141127 m!169397))

(assert (=> d!44001 d!44185))

(declare-fun d!44187 () Bool)

(declare-fun e!91999 () Bool)

(assert (=> d!44187 e!91999))

(declare-fun res!67434 () Bool)

(assert (=> d!44187 (=> res!67434 e!91999)))

(declare-fun lt!74153 () Bool)

(assert (=> d!44187 (= res!67434 (not lt!74153))))

(declare-fun lt!74156 () Bool)

(assert (=> d!44187 (= lt!74153 lt!74156)))

(declare-fun lt!74154 () Unit!4395)

(declare-fun e!91998 () Unit!4395)

(assert (=> d!44187 (= lt!74154 e!91998)))

(declare-fun c!26497 () Bool)

(assert (=> d!44187 (= c!26497 lt!74156)))

(assert (=> d!44187 (= lt!74156 (containsKey!179 (toList!889 lt!74107) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!44187 (= (contains!921 lt!74107 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74153)))

(declare-fun b!141129 () Bool)

(declare-fun lt!74155 () Unit!4395)

(assert (=> b!141129 (= e!91998 lt!74155)))

(assert (=> b!141129 (= lt!74155 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74107) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> b!141129 (isDefined!129 (getValueByKey!175 (toList!889 lt!74107) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141130 () Bool)

(declare-fun Unit!4461 () Unit!4395)

(assert (=> b!141130 (= e!91998 Unit!4461)))

(declare-fun b!141131 () Bool)

(assert (=> b!141131 (= e!91999 (isDefined!129 (getValueByKey!175 (toList!889 lt!74107) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!44187 c!26497) b!141129))

(assert (= (and d!44187 (not c!26497)) b!141130))

(assert (= (and d!44187 (not res!67434)) b!141131))

(declare-fun m!169399 () Bool)

(assert (=> d!44187 m!169399))

(declare-fun m!169401 () Bool)

(assert (=> b!141129 m!169401))

(assert (=> b!141129 m!169275))

(assert (=> b!141129 m!169275))

(declare-fun m!169403 () Bool)

(assert (=> b!141129 m!169403))

(assert (=> b!141131 m!169275))

(assert (=> b!141131 m!169275))

(assert (=> b!141131 m!169403))

(assert (=> d!44139 d!44187))

(declare-fun b!141134 () Bool)

(declare-fun e!92001 () Option!181)

(assert (=> b!141134 (= e!92001 (getValueByKey!175 (t!6360 lt!74108) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141133 () Bool)

(declare-fun e!92000 () Option!181)

(assert (=> b!141133 (= e!92000 e!92001)))

(declare-fun c!26499 () Bool)

(assert (=> b!141133 (= c!26499 (and ((_ is Cons!1760) lt!74108) (not (= (_1!1352 (h!2367 lt!74108)) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun b!141135 () Bool)

(assert (=> b!141135 (= e!92001 None!179)))

(declare-fun b!141132 () Bool)

(assert (=> b!141132 (= e!92000 (Some!180 (_2!1352 (h!2367 lt!74108))))))

(declare-fun d!44189 () Bool)

(declare-fun c!26498 () Bool)

(assert (=> d!44189 (= c!26498 (and ((_ is Cons!1760) lt!74108) (= (_1!1352 (h!2367 lt!74108)) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44189 (= (getValueByKey!175 lt!74108 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!92000)))

(assert (= (and d!44189 c!26498) b!141132))

(assert (= (and d!44189 (not c!26498)) b!141133))

(assert (= (and b!141133 c!26499) b!141134))

(assert (= (and b!141133 (not c!26499)) b!141135))

(declare-fun m!169405 () Bool)

(assert (=> b!141134 m!169405))

(assert (=> d!44139 d!44189))

(declare-fun d!44191 () Bool)

(assert (=> d!44191 (= (getValueByKey!175 lt!74108 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!74157 () Unit!4395)

(assert (=> d!44191 (= lt!74157 (choose!873 lt!74108 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun e!92002 () Bool)

(assert (=> d!44191 e!92002))

(declare-fun res!67435 () Bool)

(assert (=> d!44191 (=> (not res!67435) (not e!92002))))

(assert (=> d!44191 (= res!67435 (isStrictlySorted!320 lt!74108))))

(assert (=> d!44191 (= (lemmaContainsTupThenGetReturnValue!91 lt!74108 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74157)))

(declare-fun b!141136 () Bool)

(declare-fun res!67436 () Bool)

(assert (=> b!141136 (=> (not res!67436) (not e!92002))))

(assert (=> b!141136 (= res!67436 (containsKey!179 lt!74108 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141137 () Bool)

(assert (=> b!141137 (= e!92002 (contains!923 lt!74108 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!44191 res!67435) b!141136))

(assert (= (and b!141136 res!67436) b!141137))

(assert (=> d!44191 m!169269))

(declare-fun m!169407 () Bool)

(assert (=> d!44191 m!169407))

(declare-fun m!169409 () Bool)

(assert (=> d!44191 m!169409))

(declare-fun m!169411 () Bool)

(assert (=> b!141136 m!169411))

(declare-fun m!169413 () Bool)

(assert (=> b!141137 m!169413))

(assert (=> d!44139 d!44191))

(declare-fun d!44193 () Bool)

(declare-fun e!92003 () Bool)

(assert (=> d!44193 e!92003))

(declare-fun res!67438 () Bool)

(assert (=> d!44193 (=> (not res!67438) (not e!92003))))

(declare-fun lt!74158 () List!1764)

(assert (=> d!44193 (= res!67438 (isStrictlySorted!320 lt!74158))))

(declare-fun e!92005 () List!1764)

(assert (=> d!44193 (= lt!74158 e!92005)))

(declare-fun c!26500 () Bool)

(assert (=> d!44193 (= c!26500 (and ((_ is Cons!1760) (toList!889 lt!73259)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73259))) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44193 (isStrictlySorted!320 (toList!889 lt!73259))))

(assert (=> d!44193 (= (insertStrictlySorted!93 (toList!889 lt!73259) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74158)))

(declare-fun b!141138 () Bool)

(assert (=> b!141138 (= e!92003 (contains!923 lt!74158 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun call!15676 () List!1764)

(declare-fun e!92006 () List!1764)

(declare-fun bm!15673 () Bool)

(assert (=> bm!15673 (= call!15676 ($colon$colon!93 e!92006 (ite c!26500 (h!2367 (toList!889 lt!73259)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26503 () Bool)

(assert (=> bm!15673 (= c!26503 c!26500)))

(declare-fun b!141139 () Bool)

(assert (=> b!141139 (= e!92005 call!15676)))

(declare-fun b!141140 () Bool)

(assert (=> b!141140 (= e!92006 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73259)) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141141 () Bool)

(declare-fun e!92007 () List!1764)

(declare-fun call!15677 () List!1764)

(assert (=> b!141141 (= e!92007 call!15677)))

(declare-fun bm!15674 () Bool)

(assert (=> bm!15674 (= call!15677 call!15676)))

(declare-fun b!141142 () Bool)

(declare-fun e!92004 () List!1764)

(declare-fun call!15678 () List!1764)

(assert (=> b!141142 (= e!92004 call!15678)))

(declare-fun c!26502 () Bool)

(declare-fun b!141143 () Bool)

(assert (=> b!141143 (= c!26502 (and ((_ is Cons!1760) (toList!889 lt!73259)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73259))) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> b!141143 (= e!92007 e!92004)))

(declare-fun b!141144 () Bool)

(assert (=> b!141144 (= e!92005 e!92007)))

(declare-fun c!26501 () Bool)

(assert (=> b!141144 (= c!26501 (and ((_ is Cons!1760) (toList!889 lt!73259)) (= (_1!1352 (h!2367 (toList!889 lt!73259))) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141145 () Bool)

(assert (=> b!141145 (= e!92006 (ite c!26501 (t!6360 (toList!889 lt!73259)) (ite c!26502 (Cons!1760 (h!2367 (toList!889 lt!73259)) (t!6360 (toList!889 lt!73259))) Nil!1761)))))

(declare-fun bm!15675 () Bool)

(assert (=> bm!15675 (= call!15678 call!15677)))

(declare-fun b!141146 () Bool)

(declare-fun res!67437 () Bool)

(assert (=> b!141146 (=> (not res!67437) (not e!92003))))

(assert (=> b!141146 (= res!67437 (containsKey!179 lt!74158 (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141147 () Bool)

(assert (=> b!141147 (= e!92004 call!15678)))

(assert (= (and d!44193 c!26500) b!141139))

(assert (= (and d!44193 (not c!26500)) b!141144))

(assert (= (and b!141144 c!26501) b!141141))

(assert (= (and b!141144 (not c!26501)) b!141143))

(assert (= (and b!141143 c!26502) b!141147))

(assert (= (and b!141143 (not c!26502)) b!141142))

(assert (= (or b!141147 b!141142) bm!15675))

(assert (= (or b!141141 bm!15675) bm!15674))

(assert (= (or b!141139 bm!15674) bm!15673))

(assert (= (and bm!15673 c!26503) b!141140))

(assert (= (and bm!15673 (not c!26503)) b!141145))

(assert (= (and d!44193 res!67438) b!141146))

(assert (= (and b!141146 res!67437) b!141138))

(declare-fun m!169415 () Bool)

(assert (=> b!141138 m!169415))

(declare-fun m!169417 () Bool)

(assert (=> b!141146 m!169417))

(declare-fun m!169419 () Bool)

(assert (=> b!141140 m!169419))

(declare-fun m!169421 () Bool)

(assert (=> bm!15673 m!169421))

(declare-fun m!169423 () Bool)

(assert (=> d!44193 m!169423))

(declare-fun m!169425 () Bool)

(assert (=> d!44193 m!169425))

(assert (=> d!44139 d!44193))

(declare-fun d!44195 () Bool)

(declare-fun e!92008 () Bool)

(assert (=> d!44195 e!92008))

(declare-fun res!67440 () Bool)

(assert (=> d!44195 (=> (not res!67440) (not e!92008))))

(declare-fun lt!74161 () ListLongMap!1747)

(assert (=> d!44195 (= res!67440 (contains!921 lt!74161 (_1!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))))))

(declare-fun lt!74162 () List!1764)

(assert (=> d!44195 (= lt!74161 (ListLongMap!1748 lt!74162))))

(declare-fun lt!74159 () Unit!4395)

(declare-fun lt!74160 () Unit!4395)

(assert (=> d!44195 (= lt!74159 lt!74160)))

(assert (=> d!44195 (= (getValueByKey!175 lt!74162 (_1!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))) (Some!180 (_2!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))))))

(assert (=> d!44195 (= lt!74160 (lemmaContainsTupThenGetReturnValue!91 lt!74162 (_1!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))) (_2!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))))))

(assert (=> d!44195 (= lt!74162 (insertStrictlySorted!93 (toList!889 (ite c!26424 call!15648 (ite c!26427 call!15650 call!15647))) (_1!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))) (_2!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))))))

(assert (=> d!44195 (= (+!174 (ite c!26424 call!15648 (ite c!26427 call!15650 call!15647)) (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))) lt!74161)))

(declare-fun b!141148 () Bool)

(declare-fun res!67439 () Bool)

(assert (=> b!141148 (=> (not res!67439) (not e!92008))))

(assert (=> b!141148 (= res!67439 (= (getValueByKey!175 (toList!889 lt!74161) (_1!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))) (Some!180 (_2!1352 (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))))))))

(declare-fun b!141149 () Bool)

(assert (=> b!141149 (= e!92008 (contains!923 (toList!889 lt!74161) (ite (or c!26424 c!26427) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73223))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (= (and d!44195 res!67440) b!141148))

(assert (= (and b!141148 res!67439) b!141149))

(declare-fun m!169427 () Bool)

(assert (=> d!44195 m!169427))

(declare-fun m!169429 () Bool)

(assert (=> d!44195 m!169429))

(declare-fun m!169431 () Bool)

(assert (=> d!44195 m!169431))

(declare-fun m!169433 () Bool)

(assert (=> d!44195 m!169433))

(declare-fun m!169435 () Bool)

(assert (=> b!141148 m!169435))

(declare-fun m!169437 () Bool)

(assert (=> b!141149 m!169437))

(assert (=> bm!15646 d!44195))

(declare-fun d!44197 () Bool)

(assert (=> d!44197 (= (get!1538 (getValueByKey!175 (toList!889 lt!73255) lt!73266)) (v!3283 (getValueByKey!175 (toList!889 lt!73255) lt!73266)))))

(assert (=> d!44125 d!44197))

(declare-fun b!141152 () Bool)

(declare-fun e!92010 () Option!181)

(assert (=> b!141152 (= e!92010 (getValueByKey!175 (t!6360 (toList!889 lt!73255)) lt!73266))))

(declare-fun b!141151 () Bool)

(declare-fun e!92009 () Option!181)

(assert (=> b!141151 (= e!92009 e!92010)))

(declare-fun c!26505 () Bool)

(assert (=> b!141151 (= c!26505 (and ((_ is Cons!1760) (toList!889 lt!73255)) (not (= (_1!1352 (h!2367 (toList!889 lt!73255))) lt!73266))))))

(declare-fun b!141153 () Bool)

(assert (=> b!141153 (= e!92010 None!179)))

(declare-fun b!141150 () Bool)

(assert (=> b!141150 (= e!92009 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73255)))))))

(declare-fun d!44199 () Bool)

(declare-fun c!26504 () Bool)

(assert (=> d!44199 (= c!26504 (and ((_ is Cons!1760) (toList!889 lt!73255)) (= (_1!1352 (h!2367 (toList!889 lt!73255))) lt!73266)))))

(assert (=> d!44199 (= (getValueByKey!175 (toList!889 lt!73255) lt!73266) e!92009)))

(assert (= (and d!44199 c!26504) b!141150))

(assert (= (and d!44199 (not c!26504)) b!141151))

(assert (= (and b!141151 c!26505) b!141152))

(assert (= (and b!141151 (not c!26505)) b!141153))

(declare-fun m!169439 () Bool)

(assert (=> b!141152 m!169439))

(assert (=> d!44125 d!44199))

(declare-fun e!92012 () Option!181)

(declare-fun b!141156 () Bool)

(assert (=> b!141156 (= e!92012 (getValueByKey!175 (t!6360 (toList!889 lt!73915)) (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun b!141155 () Bool)

(declare-fun e!92011 () Option!181)

(assert (=> b!141155 (= e!92011 e!92012)))

(declare-fun c!26507 () Bool)

(assert (=> b!141155 (= c!26507 (and ((_ is Cons!1760) (toList!889 lt!73915)) (not (= (_1!1352 (h!2367 (toList!889 lt!73915))) (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))))

(declare-fun b!141157 () Bool)

(assert (=> b!141157 (= e!92012 None!179)))

(declare-fun b!141154 () Bool)

(assert (=> b!141154 (= e!92011 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73915)))))))

(declare-fun c!26506 () Bool)

(declare-fun d!44201 () Bool)

(assert (=> d!44201 (= c!26506 (and ((_ is Cons!1760) (toList!889 lt!73915)) (= (_1!1352 (h!2367 (toList!889 lt!73915))) (_1!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(assert (=> d!44201 (= (getValueByKey!175 (toList!889 lt!73915) (_1!1352 (tuple2!2685 lt!73444 lt!73442))) e!92011)))

(assert (= (and d!44201 c!26506) b!141154))

(assert (= (and d!44201 (not c!26506)) b!141155))

(assert (= (and b!141155 c!26507) b!141156))

(assert (= (and b!141155 (not c!26507)) b!141157))

(declare-fun m!169441 () Bool)

(assert (=> b!141156 m!169441))

(assert (=> b!140821 d!44201))

(declare-fun d!44203 () Bool)

(assert (=> d!44203 (= (get!1538 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3283 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43649 d!44203))

(declare-fun b!141160 () Bool)

(declare-fun e!92014 () Option!181)

(assert (=> b!141160 (= e!92014 (getValueByKey!175 (t!6360 (toList!889 lt!73250)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141159 () Bool)

(declare-fun e!92013 () Option!181)

(assert (=> b!141159 (= e!92013 e!92014)))

(declare-fun c!26509 () Bool)

(assert (=> b!141159 (= c!26509 (and ((_ is Cons!1760) (toList!889 lt!73250)) (not (= (_1!1352 (h!2367 (toList!889 lt!73250))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141161 () Bool)

(assert (=> b!141161 (= e!92014 None!179)))

(declare-fun b!141158 () Bool)

(assert (=> b!141158 (= e!92013 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73250)))))))

(declare-fun d!44205 () Bool)

(declare-fun c!26508 () Bool)

(assert (=> d!44205 (= c!26508 (and ((_ is Cons!1760) (toList!889 lt!73250)) (= (_1!1352 (h!2367 (toList!889 lt!73250))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44205 (= (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92013)))

(assert (= (and d!44205 c!26508) b!141158))

(assert (= (and d!44205 (not c!26508)) b!141159))

(assert (= (and b!141159 c!26509) b!141160))

(assert (= (and b!141159 (not c!26509)) b!141161))

(assert (=> b!141160 m!166967))

(declare-fun m!169443 () Bool)

(assert (=> b!141160 m!169443))

(assert (=> d!43649 d!44205))

(declare-fun d!44207 () Bool)

(declare-fun e!92016 () Bool)

(assert (=> d!44207 e!92016))

(declare-fun res!67441 () Bool)

(assert (=> d!44207 (=> res!67441 e!92016)))

(declare-fun lt!74163 () Bool)

(assert (=> d!44207 (= res!67441 (not lt!74163))))

(declare-fun lt!74166 () Bool)

(assert (=> d!44207 (= lt!74163 lt!74166)))

(declare-fun lt!74164 () Unit!4395)

(declare-fun e!92015 () Unit!4395)

(assert (=> d!44207 (= lt!74164 e!92015)))

(declare-fun c!26510 () Bool)

(assert (=> d!44207 (= c!26510 lt!74166)))

(assert (=> d!44207 (= lt!74166 (containsKey!179 (toList!889 lt!73586) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44207 (= (contains!921 lt!73586 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74163)))

(declare-fun b!141162 () Bool)

(declare-fun lt!74165 () Unit!4395)

(assert (=> b!141162 (= e!92015 lt!74165)))

(assert (=> b!141162 (= lt!74165 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73586) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141162 (isDefined!129 (getValueByKey!175 (toList!889 lt!73586) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141163 () Bool)

(declare-fun Unit!4462 () Unit!4395)

(assert (=> b!141163 (= e!92015 Unit!4462)))

(declare-fun b!141164 () Bool)

(assert (=> b!141164 (= e!92016 (isDefined!129 (getValueByKey!175 (toList!889 lt!73586) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44207 c!26510) b!141162))

(assert (= (and d!44207 (not c!26510)) b!141163))

(assert (= (and d!44207 (not res!67441)) b!141164))

(declare-fun m!169445 () Bool)

(assert (=> d!44207 m!169445))

(declare-fun m!169447 () Bool)

(assert (=> b!141162 m!169447))

(declare-fun m!169449 () Bool)

(assert (=> b!141162 m!169449))

(assert (=> b!141162 m!169449))

(declare-fun m!169451 () Bool)

(assert (=> b!141162 m!169451))

(assert (=> b!141164 m!169449))

(assert (=> b!141164 m!169449))

(assert (=> b!141164 m!169451))

(assert (=> d!43611 d!44207))

(assert (=> d!43611 d!43661))

(declare-fun d!44209 () Bool)

(assert (=> d!44209 (= (isEmpty!424 (toList!889 lt!73441)) ((_ is Nil!1761) (toList!889 lt!73441)))))

(assert (=> d!44113 d!44209))

(assert (=> d!44083 d!43855))

(assert (=> d!44083 d!43857))

(declare-fun d!44211 () Bool)

(assert (=> d!44211 (isDefined!129 (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!44211 true))

(declare-fun _$12!413 () Unit!4395)

(assert (=> d!44211 (= (choose!868 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) _$12!413)))

(declare-fun bs!5920 () Bool)

(assert (= bs!5920 d!44211))

(assert (=> bs!5920 m!166733))

(assert (=> bs!5920 m!167203))

(assert (=> bs!5920 m!167203))

(assert (=> bs!5920 m!167205))

(assert (=> d!44083 d!44211))

(declare-fun d!44213 () Bool)

(declare-fun res!67442 () Bool)

(declare-fun e!92017 () Bool)

(assert (=> d!44213 (=> res!67442 e!92017)))

(assert (=> d!44213 (= res!67442 (or ((_ is Nil!1761) (toList!889 call!15508)) ((_ is Nil!1761) (t!6360 (toList!889 call!15508)))))))

(assert (=> d!44213 (= (isStrictlySorted!320 (toList!889 call!15508)) e!92017)))

(declare-fun b!141165 () Bool)

(declare-fun e!92018 () Bool)

(assert (=> b!141165 (= e!92017 e!92018)))

(declare-fun res!67443 () Bool)

(assert (=> b!141165 (=> (not res!67443) (not e!92018))))

(assert (=> b!141165 (= res!67443 (bvslt (_1!1352 (h!2367 (toList!889 call!15508))) (_1!1352 (h!2367 (t!6360 (toList!889 call!15508))))))))

(declare-fun b!141166 () Bool)

(assert (=> b!141166 (= e!92018 (isStrictlySorted!320 (t!6360 (toList!889 call!15508))))))

(assert (= (and d!44213 (not res!67442)) b!141165))

(assert (= (and b!141165 res!67443) b!141166))

(declare-fun m!169453 () Bool)

(assert (=> b!141166 m!169453))

(assert (=> d!44083 d!44213))

(declare-fun d!44215 () Bool)

(assert (=> d!44215 (= (inRange!0 (ite c!26468 (index!3319 lt!74043) (index!3322 lt!74043)) (mask!7280 newMap!16)) (and (bvsge (ite c!26468 (index!3319 lt!74043) (index!3322 lt!74043)) #b00000000000000000000000000000000) (bvslt (ite c!26468 (index!3319 lt!74043) (index!3322 lt!74043)) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15664 d!44215))

(declare-fun d!44217 () Bool)

(assert (=> d!44217 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5921 () Bool)

(assert (= bs!5921 d!44217))

(assert (=> bs!5921 m!168877))

(declare-fun m!169455 () Bool)

(assert (=> bs!5921 m!169455))

(assert (=> b!140902 d!44217))

(declare-fun b!141169 () Bool)

(declare-fun e!92020 () Option!181)

(assert (=> b!141169 (= e!92020 (getValueByKey!175 (t!6360 (toList!889 lt!73391)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141168 () Bool)

(declare-fun e!92019 () Option!181)

(assert (=> b!141168 (= e!92019 e!92020)))

(declare-fun c!26512 () Bool)

(assert (=> b!141168 (= c!26512 (and ((_ is Cons!1760) (toList!889 lt!73391)) (not (= (_1!1352 (h!2367 (toList!889 lt!73391))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141170 () Bool)

(assert (=> b!141170 (= e!92020 None!179)))

(declare-fun b!141167 () Bool)

(assert (=> b!141167 (= e!92019 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73391)))))))

(declare-fun d!44219 () Bool)

(declare-fun c!26511 () Bool)

(assert (=> d!44219 (= c!26511 (and ((_ is Cons!1760) (toList!889 lt!73391)) (= (_1!1352 (h!2367 (toList!889 lt!73391))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44219 (= (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000) e!92019)))

(assert (= (and d!44219 c!26511) b!141167))

(assert (= (and d!44219 (not c!26511)) b!141168))

(assert (= (and b!141168 c!26512) b!141169))

(assert (= (and b!141168 (not c!26512)) b!141170))

(declare-fun m!169457 () Bool)

(assert (=> b!141169 m!169457))

(assert (=> b!140902 d!44219))

(declare-fun e!92022 () Option!181)

(declare-fun b!141173 () Bool)

(assert (=> b!141173 (= e!92022 (getValueByKey!175 (t!6360 (toList!889 lt!74126)) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141172 () Bool)

(declare-fun e!92021 () Option!181)

(assert (=> b!141172 (= e!92021 e!92022)))

(declare-fun c!26514 () Bool)

(assert (=> b!141172 (= c!26514 (and ((_ is Cons!1760) (toList!889 lt!74126)) (not (= (_1!1352 (h!2367 (toList!889 lt!74126))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun b!141174 () Bool)

(assert (=> b!141174 (= e!92022 None!179)))

(declare-fun b!141171 () Bool)

(assert (=> b!141171 (= e!92021 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74126)))))))

(declare-fun d!44221 () Bool)

(declare-fun c!26513 () Bool)

(assert (=> d!44221 (= c!26513 (and ((_ is Cons!1760) (toList!889 lt!74126)) (= (_1!1352 (h!2367 (toList!889 lt!74126))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44221 (= (getValueByKey!175 (toList!889 lt!74126) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92021)))

(assert (= (and d!44221 c!26513) b!141171))

(assert (= (and d!44221 (not c!26513)) b!141172))

(assert (= (and b!141172 c!26514) b!141173))

(assert (= (and b!141172 (not c!26514)) b!141174))

(declare-fun m!169459 () Bool)

(assert (=> b!141173 m!169459))

(assert (=> b!141098 d!44221))

(assert (=> d!44135 d!44119))

(declare-fun d!44223 () Bool)

(declare-fun e!92024 () Bool)

(assert (=> d!44223 e!92024))

(declare-fun res!67444 () Bool)

(assert (=> d!44223 (=> res!67444 e!92024)))

(declare-fun lt!74167 () Bool)

(assert (=> d!44223 (= res!67444 (not lt!74167))))

(declare-fun lt!74170 () Bool)

(assert (=> d!44223 (= lt!74167 lt!74170)))

(declare-fun lt!74168 () Unit!4395)

(declare-fun e!92023 () Unit!4395)

(assert (=> d!44223 (= lt!74168 e!92023)))

(declare-fun c!26515 () Bool)

(assert (=> d!44223 (= c!26515 lt!74170)))

(assert (=> d!44223 (= lt!74170 (containsKey!179 (toList!889 lt!73261) lt!73267))))

(assert (=> d!44223 (= (contains!921 lt!73261 lt!73267) lt!74167)))

(declare-fun b!141175 () Bool)

(declare-fun lt!74169 () Unit!4395)

(assert (=> b!141175 (= e!92023 lt!74169)))

(assert (=> b!141175 (= lt!74169 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73261) lt!73267))))

(assert (=> b!141175 (isDefined!129 (getValueByKey!175 (toList!889 lt!73261) lt!73267))))

(declare-fun b!141176 () Bool)

(declare-fun Unit!4463 () Unit!4395)

(assert (=> b!141176 (= e!92023 Unit!4463)))

(declare-fun b!141177 () Bool)

(assert (=> b!141177 (= e!92024 (isDefined!129 (getValueByKey!175 (toList!889 lt!73261) lt!73267)))))

(assert (= (and d!44223 c!26515) b!141175))

(assert (= (and d!44223 (not c!26515)) b!141176))

(assert (= (and d!44223 (not res!67444)) b!141177))

(declare-fun m!169461 () Bool)

(assert (=> d!44223 m!169461))

(declare-fun m!169463 () Bool)

(assert (=> b!141175 m!169463))

(assert (=> b!141175 m!169203))

(assert (=> b!141175 m!169203))

(declare-fun m!169465 () Bool)

(assert (=> b!141175 m!169465))

(assert (=> b!141177 m!169203))

(assert (=> b!141177 m!169203))

(assert (=> b!141177 m!169465))

(assert (=> d!44135 d!44223))

(assert (=> d!44135 d!44137))

(declare-fun d!44225 () Bool)

(assert (=> d!44225 (= (apply!120 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73267) (apply!120 lt!73261 lt!73267))))

(assert (=> d!44225 true))

(declare-fun _$34!1003 () Unit!4395)

(assert (=> d!44225 (= (choose!870 lt!73261 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73267) _$34!1003)))

(declare-fun bs!5922 () Bool)

(assert (= bs!5922 d!44225))

(assert (=> bs!5922 m!167001))

(assert (=> bs!5922 m!167001))

(assert (=> bs!5922 m!167003))

(assert (=> bs!5922 m!166999))

(assert (=> d!44135 d!44225))

(assert (=> d!44135 d!44129))

(declare-fun d!44227 () Bool)

(declare-fun res!67445 () Bool)

(declare-fun e!92025 () Bool)

(assert (=> d!44227 (=> res!67445 e!92025)))

(assert (=> d!44227 (= res!67445 (or ((_ is Nil!1761) lt!73617) ((_ is Nil!1761) (t!6360 lt!73617))))))

(assert (=> d!44227 (= (isStrictlySorted!320 lt!73617) e!92025)))

(declare-fun b!141178 () Bool)

(declare-fun e!92026 () Bool)

(assert (=> b!141178 (= e!92025 e!92026)))

(declare-fun res!67446 () Bool)

(assert (=> b!141178 (=> (not res!67446) (not e!92026))))

(assert (=> b!141178 (= res!67446 (bvslt (_1!1352 (h!2367 lt!73617)) (_1!1352 (h!2367 (t!6360 lt!73617)))))))

(declare-fun b!141179 () Bool)

(assert (=> b!141179 (= e!92026 (isStrictlySorted!320 (t!6360 lt!73617)))))

(assert (= (and d!44227 (not res!67445)) b!141178))

(assert (= (and b!141178 res!67446) b!141179))

(declare-fun m!169467 () Bool)

(assert (=> b!141179 m!169467))

(assert (=> d!43637 d!44227))

(declare-fun d!44229 () Bool)

(declare-fun res!67447 () Bool)

(declare-fun e!92027 () Bool)

(assert (=> d!44229 (=> res!67447 e!92027)))

(assert (=> d!44229 (= res!67447 (or ((_ is Nil!1761) (toList!889 lt!73146)) ((_ is Nil!1761) (t!6360 (toList!889 lt!73146)))))))

(assert (=> d!44229 (= (isStrictlySorted!320 (toList!889 lt!73146)) e!92027)))

(declare-fun b!141180 () Bool)

(declare-fun e!92028 () Bool)

(assert (=> b!141180 (= e!92027 e!92028)))

(declare-fun res!67448 () Bool)

(assert (=> b!141180 (=> (not res!67448) (not e!92028))))

(assert (=> b!141180 (= res!67448 (bvslt (_1!1352 (h!2367 (toList!889 lt!73146))) (_1!1352 (h!2367 (t!6360 (toList!889 lt!73146))))))))

(declare-fun b!141181 () Bool)

(assert (=> b!141181 (= e!92028 (isStrictlySorted!320 (t!6360 (toList!889 lt!73146))))))

(assert (= (and d!44229 (not res!67447)) b!141180))

(assert (= (and b!141180 res!67448) b!141181))

(declare-fun m!169469 () Bool)

(assert (=> b!141181 m!169469))

(assert (=> d!43637 d!44229))

(declare-fun d!44231 () Bool)

(declare-fun lt!74171 () Bool)

(assert (=> d!44231 (= lt!74171 (select (content!136 lt!73336) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)))))

(declare-fun e!92030 () Bool)

(assert (=> d!44231 (= lt!74171 e!92030)))

(declare-fun res!67450 () Bool)

(assert (=> d!44231 (=> (not res!67450) (not e!92030))))

(assert (=> d!44231 (= res!67450 ((_ is Cons!1759) lt!73336))))

(assert (=> d!44231 (= (contains!922 lt!73336 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)) lt!74171)))

(declare-fun b!141182 () Bool)

(declare-fun e!92029 () Bool)

(assert (=> b!141182 (= e!92030 e!92029)))

(declare-fun res!67449 () Bool)

(assert (=> b!141182 (=> res!67449 e!92029)))

(assert (=> b!141182 (= res!67449 (= (h!2366 lt!73336) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)))))

(declare-fun b!141183 () Bool)

(assert (=> b!141183 (= e!92029 (contains!922 (t!6359 lt!73336) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)))))

(assert (= (and d!44231 res!67450) b!141182))

(assert (= (and b!141182 (not res!67449)) b!141183))

(declare-fun m!169471 () Bool)

(assert (=> d!44231 m!169471))

(assert (=> d!44231 m!168551))

(declare-fun m!169473 () Bool)

(assert (=> d!44231 m!169473))

(assert (=> b!141183 m!168551))

(declare-fun m!169475 () Bool)

(assert (=> b!141183 m!169475))

(assert (=> b!140721 d!44231))

(declare-fun e!92032 () Option!181)

(declare-fun b!141186 () Bool)

(assert (=> b!141186 (= e!92032 (getValueByKey!175 (t!6360 (t!6360 (toList!889 call!15508))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!141185 () Bool)

(declare-fun e!92031 () Option!181)

(assert (=> b!141185 (= e!92031 e!92032)))

(declare-fun c!26517 () Bool)

(assert (=> b!141185 (= c!26517 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15508))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15508)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!141187 () Bool)

(assert (=> b!141187 (= e!92032 None!179)))

(declare-fun b!141184 () Bool)

(assert (=> b!141184 (= e!92031 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 call!15508))))))))

(declare-fun d!44233 () Bool)

(declare-fun c!26516 () Bool)

(assert (=> d!44233 (= c!26516 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15508))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15508)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44233 (= (getValueByKey!175 (t!6360 (toList!889 call!15508)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92031)))

(assert (= (and d!44233 c!26516) b!141184))

(assert (= (and d!44233 (not c!26516)) b!141185))

(assert (= (and b!141185 c!26517) b!141186))

(assert (= (and b!141185 (not c!26517)) b!141187))

(assert (=> b!141186 m!166733))

(declare-fun m!169477 () Bool)

(assert (=> b!141186 m!169477))

(assert (=> b!140630 d!44233))

(declare-fun b!141188 () Bool)

(declare-fun e!92034 () (_ BitVec 32))

(declare-fun call!15679 () (_ BitVec 32))

(assert (=> b!141188 (= e!92034 (bvadd #b00000000000000000000000000000001 call!15679))))

(declare-fun b!141189 () Bool)

(assert (=> b!141189 (= e!92034 call!15679)))

(declare-fun b!141190 () Bool)

(declare-fun e!92033 () (_ BitVec 32))

(assert (=> b!141190 (= e!92033 e!92034)))

(declare-fun c!26519 () Bool)

(assert (=> b!141190 (= c!26519 (validKeyInArray!0 (select (arr!2314 lt!73355) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001))))))

(declare-fun b!141191 () Bool)

(assert (=> b!141191 (= e!92033 #b00000000000000000000000000000000)))

(declare-fun d!44235 () Bool)

(declare-fun lt!74172 () (_ BitVec 32))

(assert (=> d!44235 (and (bvsge lt!74172 #b00000000000000000000000000000000) (bvsle lt!74172 (bvsub (size!2586 lt!73355) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001))))))

(assert (=> d!44235 (= lt!74172 e!92033)))

(declare-fun c!26518 () Bool)

(assert (=> d!44235 (= c!26518 (bvsge (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)))))

(assert (=> d!44235 (and (bvsle (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001) (size!2586 lt!73355)))))

(assert (=> d!44235 (= (arrayCountValidKeys!0 lt!73355 (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)) lt!74172)))

(declare-fun bm!15676 () Bool)

(assert (=> bm!15676 (= call!15679 (arrayCountValidKeys!0 lt!73355 (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)))))

(assert (= (and d!44235 c!26518) b!141191))

(assert (= (and d!44235 (not c!26518)) b!141190))

(assert (= (and b!141190 c!26519) b!141188))

(assert (= (and b!141190 (not c!26519)) b!141189))

(assert (= (or b!141188 b!141189) bm!15676))

(declare-fun m!169479 () Bool)

(assert (=> b!141190 m!169479))

(assert (=> b!141190 m!169479))

(declare-fun m!169481 () Bool)

(assert (=> b!141190 m!169481))

(declare-fun m!169483 () Bool)

(assert (=> bm!15676 m!169483))

(assert (=> bm!15626 d!44235))

(declare-fun d!44237 () Bool)

(declare-fun e!92036 () Bool)

(assert (=> d!44237 e!92036))

(declare-fun res!67451 () Bool)

(assert (=> d!44237 (=> res!67451 e!92036)))

(declare-fun lt!74173 () Bool)

(assert (=> d!44237 (= res!67451 (not lt!74173))))

(declare-fun lt!74176 () Bool)

(assert (=> d!44237 (= lt!74173 lt!74176)))

(declare-fun lt!74174 () Unit!4395)

(declare-fun e!92035 () Unit!4395)

(assert (=> d!44237 (= lt!74174 e!92035)))

(declare-fun c!26520 () Bool)

(assert (=> d!44237 (= c!26520 lt!74176)))

(assert (=> d!44237 (= lt!74176 (containsKey!179 (toList!889 lt!74093) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44237 (= (contains!921 lt!74093 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74173)))

(declare-fun b!141192 () Bool)

(declare-fun lt!74175 () Unit!4395)

(assert (=> b!141192 (= e!92035 lt!74175)))

(assert (=> b!141192 (= lt!74175 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74093) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> b!141192 (isDefined!129 (getValueByKey!175 (toList!889 lt!74093) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141193 () Bool)

(declare-fun Unit!4464 () Unit!4395)

(assert (=> b!141193 (= e!92035 Unit!4464)))

(declare-fun b!141194 () Bool)

(assert (=> b!141194 (= e!92036 (isDefined!129 (getValueByKey!175 (toList!889 lt!74093) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44237 c!26520) b!141192))

(assert (= (and d!44237 (not c!26520)) b!141193))

(assert (= (and d!44237 (not res!67451)) b!141194))

(declare-fun m!169485 () Bool)

(assert (=> d!44237 m!169485))

(declare-fun m!169487 () Bool)

(assert (=> b!141192 m!169487))

(assert (=> b!141192 m!169215))

(assert (=> b!141192 m!169215))

(declare-fun m!169489 () Bool)

(assert (=> b!141192 m!169489))

(assert (=> b!141194 m!169215))

(assert (=> b!141194 m!169215))

(assert (=> b!141194 m!169489))

(assert (=> d!44121 d!44237))

(declare-fun e!92038 () Option!181)

(declare-fun b!141197 () Bool)

(assert (=> b!141197 (= e!92038 (getValueByKey!175 (t!6360 lt!74094) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141196 () Bool)

(declare-fun e!92037 () Option!181)

(assert (=> b!141196 (= e!92037 e!92038)))

(declare-fun c!26522 () Bool)

(assert (=> b!141196 (= c!26522 (and ((_ is Cons!1760) lt!74094) (not (= (_1!1352 (h!2367 lt!74094)) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!141198 () Bool)

(assert (=> b!141198 (= e!92038 None!179)))

(declare-fun b!141195 () Bool)

(assert (=> b!141195 (= e!92037 (Some!180 (_2!1352 (h!2367 lt!74094))))))

(declare-fun d!44239 () Bool)

(declare-fun c!26521 () Bool)

(assert (=> d!44239 (= c!26521 (and ((_ is Cons!1760) lt!74094) (= (_1!1352 (h!2367 lt!74094)) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44239 (= (getValueByKey!175 lt!74094 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92037)))

(assert (= (and d!44239 c!26521) b!141195))

(assert (= (and d!44239 (not c!26521)) b!141196))

(assert (= (and b!141196 c!26522) b!141197))

(assert (= (and b!141196 (not c!26522)) b!141198))

(declare-fun m!169491 () Bool)

(assert (=> b!141197 m!169491))

(assert (=> d!44121 d!44239))

(declare-fun d!44241 () Bool)

(assert (=> d!44241 (= (getValueByKey!175 lt!74094 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!74177 () Unit!4395)

(assert (=> d!44241 (= lt!74177 (choose!873 lt!74094 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!92039 () Bool)

(assert (=> d!44241 e!92039))

(declare-fun res!67452 () Bool)

(assert (=> d!44241 (=> (not res!67452) (not e!92039))))

(assert (=> d!44241 (= res!67452 (isStrictlySorted!320 lt!74094))))

(assert (=> d!44241 (= (lemmaContainsTupThenGetReturnValue!91 lt!74094 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74177)))

(declare-fun b!141199 () Bool)

(declare-fun res!67453 () Bool)

(assert (=> b!141199 (=> (not res!67453) (not e!92039))))

(assert (=> b!141199 (= res!67453 (containsKey!179 lt!74094 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141200 () Bool)

(assert (=> b!141200 (= e!92039 (contains!923 lt!74094 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44241 res!67452) b!141199))

(assert (= (and b!141199 res!67453) b!141200))

(assert (=> d!44241 m!169209))

(declare-fun m!169493 () Bool)

(assert (=> d!44241 m!169493))

(declare-fun m!169495 () Bool)

(assert (=> d!44241 m!169495))

(declare-fun m!169497 () Bool)

(assert (=> b!141199 m!169497))

(declare-fun m!169499 () Bool)

(assert (=> b!141200 m!169499))

(assert (=> d!44121 d!44241))

(declare-fun d!44243 () Bool)

(declare-fun e!92040 () Bool)

(assert (=> d!44243 e!92040))

(declare-fun res!67455 () Bool)

(assert (=> d!44243 (=> (not res!67455) (not e!92040))))

(declare-fun lt!74178 () List!1764)

(assert (=> d!44243 (= res!67455 (isStrictlySorted!320 lt!74178))))

(declare-fun e!92042 () List!1764)

(assert (=> d!44243 (= lt!74178 e!92042)))

(declare-fun c!26523 () Bool)

(assert (=> d!44243 (= c!26523 (and ((_ is Cons!1760) (toList!889 lt!73264)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73264))) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44243 (isStrictlySorted!320 (toList!889 lt!73264))))

(assert (=> d!44243 (= (insertStrictlySorted!93 (toList!889 lt!73264) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74178)))

(declare-fun b!141201 () Bool)

(assert (=> b!141201 (= e!92040 (contains!923 lt!74178 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun call!15680 () List!1764)

(declare-fun e!92043 () List!1764)

(declare-fun bm!15677 () Bool)

(assert (=> bm!15677 (= call!15680 ($colon$colon!93 e!92043 (ite c!26523 (h!2367 (toList!889 lt!73264)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26526 () Bool)

(assert (=> bm!15677 (= c!26526 c!26523)))

(declare-fun b!141202 () Bool)

(assert (=> b!141202 (= e!92042 call!15680)))

(declare-fun b!141203 () Bool)

(assert (=> b!141203 (= e!92043 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73264)) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141204 () Bool)

(declare-fun e!92044 () List!1764)

(declare-fun call!15681 () List!1764)

(assert (=> b!141204 (= e!92044 call!15681)))

(declare-fun bm!15678 () Bool)

(assert (=> bm!15678 (= call!15681 call!15680)))

(declare-fun b!141205 () Bool)

(declare-fun e!92041 () List!1764)

(declare-fun call!15682 () List!1764)

(assert (=> b!141205 (= e!92041 call!15682)))

(declare-fun b!141206 () Bool)

(declare-fun c!26525 () Bool)

(assert (=> b!141206 (= c!26525 (and ((_ is Cons!1760) (toList!889 lt!73264)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73264))) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!141206 (= e!92044 e!92041)))

(declare-fun b!141207 () Bool)

(assert (=> b!141207 (= e!92042 e!92044)))

(declare-fun c!26524 () Bool)

(assert (=> b!141207 (= c!26524 (and ((_ is Cons!1760) (toList!889 lt!73264)) (= (_1!1352 (h!2367 (toList!889 lt!73264))) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141208 () Bool)

(assert (=> b!141208 (= e!92043 (ite c!26524 (t!6360 (toList!889 lt!73264)) (ite c!26525 (Cons!1760 (h!2367 (toList!889 lt!73264)) (t!6360 (toList!889 lt!73264))) Nil!1761)))))

(declare-fun bm!15679 () Bool)

(assert (=> bm!15679 (= call!15682 call!15681)))

(declare-fun b!141209 () Bool)

(declare-fun res!67454 () Bool)

(assert (=> b!141209 (=> (not res!67454) (not e!92040))))

(assert (=> b!141209 (= res!67454 (containsKey!179 lt!74178 (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141210 () Bool)

(assert (=> b!141210 (= e!92041 call!15682)))

(assert (= (and d!44243 c!26523) b!141202))

(assert (= (and d!44243 (not c!26523)) b!141207))

(assert (= (and b!141207 c!26524) b!141204))

(assert (= (and b!141207 (not c!26524)) b!141206))

(assert (= (and b!141206 c!26525) b!141210))

(assert (= (and b!141206 (not c!26525)) b!141205))

(assert (= (or b!141210 b!141205) bm!15679))

(assert (= (or b!141204 bm!15679) bm!15678))

(assert (= (or b!141202 bm!15678) bm!15677))

(assert (= (and bm!15677 c!26526) b!141203))

(assert (= (and bm!15677 (not c!26526)) b!141208))

(assert (= (and d!44243 res!67455) b!141209))

(assert (= (and b!141209 res!67454) b!141201))

(declare-fun m!169501 () Bool)

(assert (=> b!141201 m!169501))

(declare-fun m!169503 () Bool)

(assert (=> b!141209 m!169503))

(declare-fun m!169505 () Bool)

(assert (=> b!141203 m!169505))

(declare-fun m!169507 () Bool)

(assert (=> bm!15677 m!169507))

(declare-fun m!169509 () Bool)

(assert (=> d!44243 m!169509))

(declare-fun m!169511 () Bool)

(assert (=> d!44243 m!169511))

(assert (=> d!44121 d!44243))

(declare-fun d!44245 () Bool)

(assert (=> d!44245 (= (get!1538 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43989 d!44245))

(declare-fun b!141213 () Bool)

(declare-fun e!92046 () Option!181)

(assert (=> b!141213 (= e!92046 (getValueByKey!175 (t!6360 (toList!889 lt!73482)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141212 () Bool)

(declare-fun e!92045 () Option!181)

(assert (=> b!141212 (= e!92045 e!92046)))

(declare-fun c!26528 () Bool)

(assert (=> b!141212 (= c!26528 (and ((_ is Cons!1760) (toList!889 lt!73482)) (not (= (_1!1352 (h!2367 (toList!889 lt!73482))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141214 () Bool)

(assert (=> b!141214 (= e!92046 None!179)))

(declare-fun b!141211 () Bool)

(assert (=> b!141211 (= e!92045 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73482)))))))

(declare-fun d!44247 () Bool)

(declare-fun c!26527 () Bool)

(assert (=> d!44247 (= c!26527 (and ((_ is Cons!1760) (toList!889 lt!73482)) (= (_1!1352 (h!2367 (toList!889 lt!73482))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44247 (= (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000) e!92045)))

(assert (= (and d!44247 c!26527) b!141211))

(assert (= (and d!44247 (not c!26527)) b!141212))

(assert (= (and b!141212 c!26528) b!141213))

(assert (= (and b!141212 (not c!26528)) b!141214))

(declare-fun m!169513 () Bool)

(assert (=> b!141213 m!169513))

(assert (=> d!43989 d!44247))

(declare-fun d!44249 () Bool)

(assert (=> d!44249 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) lt!73397)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) lt!73397)))))

(assert (=> d!44015 d!44249))

(declare-fun e!92048 () Option!181)

(declare-fun b!141217 () Bool)

(assert (=> b!141217 (= e!92048 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))) lt!73397))))

(declare-fun b!141216 () Bool)

(declare-fun e!92047 () Option!181)

(assert (=> b!141216 (= e!92047 e!92048)))

(declare-fun c!26530 () Bool)

(assert (=> b!141216 (= c!26530 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))) lt!73397))))))

(declare-fun b!141218 () Bool)

(assert (=> b!141218 (= e!92048 None!179)))

(declare-fun b!141215 () Bool)

(assert (=> b!141215 (= e!92047 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))))

(declare-fun d!44251 () Bool)

(declare-fun c!26529 () Bool)

(assert (=> d!44251 (= c!26529 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))) lt!73397)))))

(assert (=> d!44251 (= (getValueByKey!175 (toList!889 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) lt!73397) e!92047)))

(assert (= (and d!44251 c!26529) b!141215))

(assert (= (and d!44251 (not c!26529)) b!141216))

(assert (= (and b!141216 c!26530) b!141217))

(assert (= (and b!141216 (not c!26530)) b!141218))

(declare-fun m!169515 () Bool)

(assert (=> b!141217 m!169515))

(assert (=> d!44015 d!44251))

(declare-fun lt!74179 () Bool)

(declare-fun d!44253 () Bool)

(assert (=> d!44253 (= lt!74179 (select (content!137 lt!73471) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun e!92049 () Bool)

(assert (=> d!44253 (= lt!74179 e!92049)))

(declare-fun res!67457 () Bool)

(assert (=> d!44253 (=> (not res!67457) (not e!92049))))

(assert (=> d!44253 (= res!67457 ((_ is Cons!1760) lt!73471))))

(assert (=> d!44253 (= (contains!923 lt!73471 (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!74179)))

(declare-fun b!141219 () Bool)

(declare-fun e!92050 () Bool)

(assert (=> b!141219 (= e!92049 e!92050)))

(declare-fun res!67456 () Bool)

(assert (=> b!141219 (=> res!67456 e!92050)))

(assert (=> b!141219 (= res!67456 (= (h!2367 lt!73471) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141220 () Bool)

(assert (=> b!141220 (= e!92050 (contains!923 (t!6360 lt!73471) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (= (and d!44253 res!67457) b!141219))

(assert (= (and b!141219 (not res!67456)) b!141220))

(declare-fun m!169517 () Bool)

(assert (=> d!44253 m!169517))

(declare-fun m!169519 () Bool)

(assert (=> d!44253 m!169519))

(declare-fun m!169521 () Bool)

(assert (=> b!141220 m!169521))

(assert (=> b!140518 d!44253))

(declare-fun d!44255 () Bool)

(declare-fun c!26533 () Bool)

(assert (=> d!44255 (= c!26533 ((_ is Nil!1761) (toList!889 lt!73550)))))

(declare-fun e!92053 () (InoxSet tuple2!2684))

(assert (=> d!44255 (= (content!137 (toList!889 lt!73550)) e!92053)))

(declare-fun b!141225 () Bool)

(assert (=> b!141225 (= e!92053 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!141226 () Bool)

(assert (=> b!141226 (= e!92053 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73550)) true) (content!137 (t!6360 (toList!889 lt!73550)))))))

(assert (= (and d!44255 c!26533) b!141225))

(assert (= (and d!44255 (not c!26533)) b!141226))

(declare-fun m!169523 () Bool)

(assert (=> b!141226 m!169523))

(declare-fun m!169525 () Bool)

(assert (=> b!141226 m!169525))

(assert (=> d!43781 d!44255))

(declare-fun b!141229 () Bool)

(declare-fun e!92055 () Option!181)

(assert (=> b!141229 (= e!92055 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73378))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141228 () Bool)

(declare-fun e!92054 () Option!181)

(assert (=> b!141228 (= e!92054 e!92055)))

(declare-fun c!26535 () Bool)

(assert (=> b!141228 (= c!26535 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73378))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73378)))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141230 () Bool)

(assert (=> b!141230 (= e!92055 None!179)))

(declare-fun b!141227 () Bool)

(assert (=> b!141227 (= e!92054 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73378))))))))

(declare-fun d!44257 () Bool)

(declare-fun c!26534 () Bool)

(assert (=> d!44257 (= c!26534 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73378))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73378)))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44257 (= (getValueByKey!175 (t!6360 (toList!889 lt!73378)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92054)))

(assert (= (and d!44257 c!26534) b!141227))

(assert (= (and d!44257 (not c!26534)) b!141228))

(assert (= (and b!141228 c!26535) b!141229))

(assert (= (and b!141228 (not c!26535)) b!141230))

(declare-fun m!169527 () Bool)

(assert (=> b!141229 m!169527))

(assert (=> b!140654 d!44257))

(declare-fun d!44259 () Bool)

(assert (=> d!44259 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun bs!5923 () Bool)

(assert (= bs!5923 d!44259))

(assert (=> bs!5923 m!167473))

(declare-fun m!169529 () Bool)

(assert (=> bs!5923 m!169529))

(assert (=> b!140929 d!44259))

(assert (=> b!140929 d!43981))

(declare-fun d!44261 () Bool)

(assert (=> d!44261 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74180 () Unit!4395)

(assert (=> d!44261 (= lt!74180 (choose!868 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92056 () Bool)

(assert (=> d!44261 e!92056))

(declare-fun res!67458 () Bool)

(assert (=> d!44261 (=> (not res!67458) (not e!92056))))

(assert (=> d!44261 (= res!67458 (isStrictlySorted!320 (toList!889 lt!73250)))))

(assert (=> d!44261 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74180)))

(declare-fun b!141231 () Bool)

(assert (=> b!141231 (= e!92056 (containsKey!179 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44261 res!67458) b!141231))

(assert (=> d!44261 m!167595))

(assert (=> d!44261 m!167595))

(assert (=> d!44261 m!169201))

(declare-fun m!169531 () Bool)

(assert (=> d!44261 m!169531))

(declare-fun m!169533 () Bool)

(assert (=> d!44261 m!169533))

(assert (=> b!141231 m!169197))

(assert (=> b!141072 d!44261))

(declare-fun d!44263 () Bool)

(assert (=> d!44263 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5924 () Bool)

(assert (= bs!5924 d!44263))

(assert (=> bs!5924 m!167595))

(declare-fun m!169535 () Bool)

(assert (=> bs!5924 m!169535))

(assert (=> b!141072 d!44263))

(declare-fun b!141234 () Bool)

(declare-fun e!92058 () Option!181)

(assert (=> b!141234 (= e!92058 (getValueByKey!175 (t!6360 (toList!889 lt!73250)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141233 () Bool)

(declare-fun e!92057 () Option!181)

(assert (=> b!141233 (= e!92057 e!92058)))

(declare-fun c!26537 () Bool)

(assert (=> b!141233 (= c!26537 (and ((_ is Cons!1760) (toList!889 lt!73250)) (not (= (_1!1352 (h!2367 (toList!889 lt!73250))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141235 () Bool)

(assert (=> b!141235 (= e!92058 None!179)))

(declare-fun b!141232 () Bool)

(assert (=> b!141232 (= e!92057 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73250)))))))

(declare-fun d!44265 () Bool)

(declare-fun c!26536 () Bool)

(assert (=> d!44265 (= c!26536 (and ((_ is Cons!1760) (toList!889 lt!73250)) (= (_1!1352 (h!2367 (toList!889 lt!73250))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44265 (= (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000) e!92057)))

(assert (= (and d!44265 c!26536) b!141232))

(assert (= (and d!44265 (not c!26536)) b!141233))

(assert (= (and b!141233 c!26537) b!141234))

(assert (= (and b!141233 (not c!26537)) b!141235))

(declare-fun m!169537 () Bool)

(assert (=> b!141234 m!169537))

(assert (=> b!141072 d!44265))

(declare-fun d!44267 () Bool)

(declare-fun c!26538 () Bool)

(assert (=> d!44267 (= c!26538 ((_ is Nil!1761) (toList!889 lt!73535)))))

(declare-fun e!92059 () (InoxSet tuple2!2684))

(assert (=> d!44267 (= (content!137 (toList!889 lt!73535)) e!92059)))

(declare-fun b!141236 () Bool)

(assert (=> b!141236 (= e!92059 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!141237 () Bool)

(assert (=> b!141237 (= e!92059 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73535)) true) (content!137 (t!6360 (toList!889 lt!73535)))))))

(assert (= (and d!44267 c!26538) b!141236))

(assert (= (and d!44267 (not c!26538)) b!141237))

(declare-fun m!169539 () Bool)

(assert (=> b!141237 m!169539))

(declare-fun m!169541 () Bool)

(assert (=> b!141237 m!169541))

(assert (=> d!43939 d!44267))

(declare-fun d!44269 () Bool)

(assert (=> d!44269 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))) (and (not (= (select (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140734 d!44269))

(declare-fun b!141240 () Bool)

(declare-fun e!92061 () Option!181)

(assert (=> b!141240 (= e!92061 (getValueByKey!175 (t!6360 (toList!889 lt!73730)) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141239 () Bool)

(declare-fun e!92060 () Option!181)

(assert (=> b!141239 (= e!92060 e!92061)))

(declare-fun c!26540 () Bool)

(assert (=> b!141239 (= c!26540 (and ((_ is Cons!1760) (toList!889 lt!73730)) (not (= (_1!1352 (h!2367 (toList!889 lt!73730))) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141241 () Bool)

(assert (=> b!141241 (= e!92061 None!179)))

(declare-fun b!141238 () Bool)

(assert (=> b!141238 (= e!92060 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73730)))))))

(declare-fun d!44271 () Bool)

(declare-fun c!26539 () Bool)

(assert (=> d!44271 (= c!26539 (and ((_ is Cons!1760) (toList!889 lt!73730)) (= (_1!1352 (h!2367 (toList!889 lt!73730))) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44271 (= (getValueByKey!175 (toList!889 lt!73730) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) e!92060)))

(assert (= (and d!44271 c!26539) b!141238))

(assert (= (and d!44271 (not c!26539)) b!141239))

(assert (= (and b!141239 c!26540) b!141240))

(assert (= (and b!141239 (not c!26540)) b!141241))

(declare-fun m!169543 () Bool)

(assert (=> b!141240 m!169543))

(assert (=> b!140574 d!44271))

(declare-fun d!44273 () Bool)

(assert (=> d!44273 (= (validMask!0 (mask!7280 (_2!1353 lt!73223))) (and (or (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000000000111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000000001111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000000011111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000000111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000001111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000011111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000000111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000001111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000011111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000000111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000001111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000011111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000000111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000001111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000011111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000000111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000001111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000011111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000000111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000001111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000011111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000000111111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000001111111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000011111111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00000111111111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00001111111111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00011111111111111111111111111111) (= (mask!7280 (_2!1353 lt!73223)) #b00111111111111111111111111111111)) (bvsle (mask!7280 (_2!1353 lt!73223)) #b00111111111111111111111111111111)))))

(assert (=> d!43973 d!44273))

(declare-fun b!141244 () Bool)

(declare-fun e!92063 () Option!181)

(assert (=> b!141244 (= e!92063 (getValueByKey!175 (t!6360 (t!6360 lt!73529)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141243 () Bool)

(declare-fun e!92062 () Option!181)

(assert (=> b!141243 (= e!92062 e!92063)))

(declare-fun c!26542 () Bool)

(assert (=> b!141243 (= c!26542 (and ((_ is Cons!1760) (t!6360 lt!73529)) (not (= (_1!1352 (h!2367 (t!6360 lt!73529))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!141245 () Bool)

(assert (=> b!141245 (= e!92063 None!179)))

(declare-fun b!141242 () Bool)

(assert (=> b!141242 (= e!92062 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73529)))))))

(declare-fun c!26541 () Bool)

(declare-fun d!44275 () Bool)

(assert (=> d!44275 (= c!26541 (and ((_ is Cons!1760) (t!6360 lt!73529)) (= (_1!1352 (h!2367 (t!6360 lt!73529))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44275 (= (getValueByKey!175 (t!6360 lt!73529) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92062)))

(assert (= (and d!44275 c!26541) b!141242))

(assert (= (and d!44275 (not c!26541)) b!141243))

(assert (= (and b!141243 c!26542) b!141244))

(assert (= (and b!141243 (not c!26542)) b!141245))

(declare-fun m!169545 () Bool)

(assert (=> b!141244 m!169545))

(assert (=> b!140496 d!44275))

(declare-fun d!44277 () Bool)

(declare-fun res!67459 () Bool)

(declare-fun e!92064 () Bool)

(assert (=> d!44277 (=> res!67459 e!92064)))

(assert (=> d!44277 (= res!67459 (and ((_ is Cons!1760) (toList!889 lt!73149)) (= (_1!1352 (h!2367 (toList!889 lt!73149))) lt!73141)))))

(assert (=> d!44277 (= (containsKey!179 (toList!889 lt!73149) lt!73141) e!92064)))

(declare-fun b!141246 () Bool)

(declare-fun e!92065 () Bool)

(assert (=> b!141246 (= e!92064 e!92065)))

(declare-fun res!67460 () Bool)

(assert (=> b!141246 (=> (not res!67460) (not e!92065))))

(assert (=> b!141246 (= res!67460 (and (or (not ((_ is Cons!1760) (toList!889 lt!73149))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73149))) lt!73141)) ((_ is Cons!1760) (toList!889 lt!73149)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73149))) lt!73141)))))

(declare-fun b!141247 () Bool)

(assert (=> b!141247 (= e!92065 (containsKey!179 (t!6360 (toList!889 lt!73149)) lt!73141))))

(assert (= (and d!44277 (not res!67459)) b!141246))

(assert (= (and b!141246 res!67460) b!141247))

(declare-fun m!169547 () Bool)

(assert (=> b!141247 m!169547))

(assert (=> d!44075 d!44277))

(assert (=> b!140735 d!43489))

(declare-fun d!44279 () Bool)

(declare-fun e!92067 () Bool)

(assert (=> d!44279 e!92067))

(declare-fun res!67461 () Bool)

(assert (=> d!44279 (=> res!67461 e!92067)))

(declare-fun lt!74181 () Bool)

(assert (=> d!44279 (= res!67461 (not lt!74181))))

(declare-fun lt!74184 () Bool)

(assert (=> d!44279 (= lt!74181 lt!74184)))

(declare-fun lt!74182 () Unit!4395)

(declare-fun e!92066 () Unit!4395)

(assert (=> d!44279 (= lt!74182 e!92066)))

(declare-fun c!26543 () Bool)

(assert (=> d!44279 (= c!26543 lt!74184)))

(assert (=> d!44279 (= lt!74184 (containsKey!179 (toList!889 lt!73405) lt!73397))))

(assert (=> d!44279 (= (contains!921 lt!73405 lt!73397) lt!74181)))

(declare-fun b!141248 () Bool)

(declare-fun lt!74183 () Unit!4395)

(assert (=> b!141248 (= e!92066 lt!74183)))

(assert (=> b!141248 (= lt!74183 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73405) lt!73397))))

(assert (=> b!141248 (isDefined!129 (getValueByKey!175 (toList!889 lt!73405) lt!73397))))

(declare-fun b!141249 () Bool)

(declare-fun Unit!4465 () Unit!4395)

(assert (=> b!141249 (= e!92066 Unit!4465)))

(declare-fun b!141250 () Bool)

(assert (=> b!141250 (= e!92067 (isDefined!129 (getValueByKey!175 (toList!889 lt!73405) lt!73397)))))

(assert (= (and d!44279 c!26543) b!141248))

(assert (= (and d!44279 (not c!26543)) b!141249))

(assert (= (and d!44279 (not res!67461)) b!141250))

(declare-fun m!169549 () Bool)

(assert (=> d!44279 m!169549))

(declare-fun m!169551 () Bool)

(assert (=> b!141248 m!169551))

(assert (=> b!141248 m!168981))

(assert (=> b!141248 m!168981))

(declare-fun m!169553 () Bool)

(assert (=> b!141248 m!169553))

(assert (=> b!141250 m!168981))

(assert (=> b!141250 m!168981))

(assert (=> b!141250 m!169553))

(assert (=> d!44025 d!44279))

(assert (=> d!44025 d!44015))

(declare-fun d!44281 () Bool)

(assert (=> d!44281 (= (apply!120 (+!174 lt!73405 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) lt!73397) (apply!120 lt!73405 lt!73397))))

(assert (=> d!44281 true))

(declare-fun _$34!1004 () Unit!4395)

(assert (=> d!44281 (= (choose!870 lt!73405 lt!73388 (minValue!2790 newMap!16) lt!73397) _$34!1004)))

(declare-fun bs!5925 () Bool)

(assert (= bs!5925 d!44281))

(assert (=> bs!5925 m!167167))

(assert (=> bs!5925 m!167167))

(assert (=> bs!5925 m!167169))

(assert (=> bs!5925 m!167193))

(assert (=> d!44025 d!44281))

(assert (=> d!44025 d!44027))

(assert (=> d!44025 d!44011))

(declare-fun d!44283 () Bool)

(assert (=> d!44283 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140925 d!44283))

(declare-fun b!141251 () Bool)

(declare-fun e!92070 () Bool)

(declare-fun e!92069 () Bool)

(assert (=> b!141251 (= e!92070 e!92069)))

(declare-fun lt!74186 () (_ BitVec 64))

(assert (=> b!141251 (= lt!74186 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!74187 () Unit!4395)

(assert (=> b!141251 (= lt!74187 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!74186 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!141251 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!74186 #b00000000000000000000000000000000)))

(declare-fun lt!74185 () Unit!4395)

(assert (=> b!141251 (= lt!74185 lt!74187)))

(declare-fun res!67462 () Bool)

(assert (=> b!141251 (= res!67462 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)) (Found!289 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!141251 (=> (not res!67462) (not e!92069))))

(declare-fun d!44285 () Bool)

(declare-fun res!67463 () Bool)

(declare-fun e!92068 () Bool)

(assert (=> d!44285 (=> res!67463 e!92068)))

(assert (=> d!44285 (= res!67463 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44285 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)) e!92068)))

(declare-fun b!141252 () Bool)

(declare-fun call!15683 () Bool)

(assert (=> b!141252 (= e!92070 call!15683)))

(declare-fun b!141253 () Bool)

(assert (=> b!141253 (= e!92068 e!92070)))

(declare-fun c!26544 () Bool)

(assert (=> b!141253 (= c!26544 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141254 () Bool)

(assert (=> b!141254 (= e!92069 call!15683)))

(declare-fun bm!15680 () Bool)

(assert (=> bm!15680 (= call!15683 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (= (and d!44285 (not res!67463)) b!141253))

(assert (= (and b!141253 c!26544) b!141251))

(assert (= (and b!141253 (not c!26544)) b!141252))

(assert (= (and b!141251 res!67462) b!141254))

(assert (= (or b!141254 b!141252) bm!15680))

(declare-fun m!169555 () Bool)

(assert (=> b!141251 m!169555))

(declare-fun m!169557 () Bool)

(assert (=> b!141251 m!169557))

(declare-fun m!169559 () Bool)

(assert (=> b!141251 m!169559))

(assert (=> b!141251 m!169555))

(declare-fun m!169561 () Bool)

(assert (=> b!141251 m!169561))

(assert (=> b!141253 m!169555))

(assert (=> b!141253 m!169555))

(declare-fun m!169563 () Bool)

(assert (=> b!141253 m!169563))

(declare-fun m!169565 () Bool)

(assert (=> bm!15680 m!169565))

(assert (=> bm!15587 d!44285))

(declare-fun d!44287 () Bool)

(declare-fun lt!74188 () Bool)

(assert (=> d!44287 (= lt!74188 (select (content!137 lt!73811) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92071 () Bool)

(assert (=> d!44287 (= lt!74188 e!92071)))

(declare-fun res!67465 () Bool)

(assert (=> d!44287 (=> (not res!67465) (not e!92071))))

(assert (=> d!44287 (= res!67465 ((_ is Cons!1760) lt!73811))))

(assert (=> d!44287 (= (contains!923 lt!73811 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74188)))

(declare-fun b!141255 () Bool)

(declare-fun e!92072 () Bool)

(assert (=> b!141255 (= e!92071 e!92072)))

(declare-fun res!67464 () Bool)

(assert (=> b!141255 (=> res!67464 e!92072)))

(assert (=> b!141255 (= res!67464 (= (h!2367 lt!73811) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141256 () Bool)

(assert (=> b!141256 (= e!92072 (contains!923 (t!6360 lt!73811) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44287 res!67465) b!141255))

(assert (= (and b!141255 (not res!67464)) b!141256))

(declare-fun m!169567 () Bool)

(assert (=> d!44287 m!169567))

(declare-fun m!169569 () Bool)

(assert (=> d!44287 m!169569))

(declare-fun m!169571 () Bool)

(assert (=> b!141256 m!169571))

(assert (=> b!140665 d!44287))

(declare-fun b!141259 () Bool)

(declare-fun e!92074 () Option!181)

(assert (=> b!141259 (= e!92074 (getValueByKey!175 (t!6360 (toList!889 lt!74052)) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141258 () Bool)

(declare-fun e!92073 () Option!181)

(assert (=> b!141258 (= e!92073 e!92074)))

(declare-fun c!26546 () Bool)

(assert (=> b!141258 (= c!26546 (and ((_ is Cons!1760) (toList!889 lt!74052)) (not (= (_1!1352 (h!2367 (toList!889 lt!74052))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141260 () Bool)

(assert (=> b!141260 (= e!92074 None!179)))

(declare-fun b!141257 () Bool)

(assert (=> b!141257 (= e!92073 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74052)))))))

(declare-fun c!26545 () Bool)

(declare-fun d!44289 () Bool)

(assert (=> d!44289 (= c!26545 (and ((_ is Cons!1760) (toList!889 lt!74052)) (= (_1!1352 (h!2367 (toList!889 lt!74052))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44289 (= (getValueByKey!175 (toList!889 lt!74052) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92073)))

(assert (= (and d!44289 c!26545) b!141257))

(assert (= (and d!44289 (not c!26545)) b!141258))

(assert (= (and b!141258 c!26546) b!141259))

(assert (= (and b!141258 (not c!26546)) b!141260))

(declare-fun m!169573 () Bool)

(assert (=> b!141259 m!169573))

(assert (=> b!141022 d!44289))

(assert (=> d!43737 d!43515))

(assert (=> d!43635 d!43633))

(declare-fun d!44291 () Bool)

(assert (=> d!44291 (= (getValueByKey!175 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!44291 true))

(declare-fun _$22!494 () Unit!4395)

(assert (=> d!44291 (= (choose!873 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) _$22!494)))

(declare-fun bs!5926 () Bool)

(assert (= bs!5926 d!44291))

(assert (=> bs!5926 m!167479))

(assert (=> d!43635 d!44291))

(declare-fun d!44293 () Bool)

(declare-fun res!67466 () Bool)

(declare-fun e!92075 () Bool)

(assert (=> d!44293 (=> res!67466 e!92075)))

(assert (=> d!44293 (= res!67466 (or ((_ is Nil!1761) lt!73551) ((_ is Nil!1761) (t!6360 lt!73551))))))

(assert (=> d!44293 (= (isStrictlySorted!320 lt!73551) e!92075)))

(declare-fun b!141261 () Bool)

(declare-fun e!92076 () Bool)

(assert (=> b!141261 (= e!92075 e!92076)))

(declare-fun res!67467 () Bool)

(assert (=> b!141261 (=> (not res!67467) (not e!92076))))

(assert (=> b!141261 (= res!67467 (bvslt (_1!1352 (h!2367 lt!73551)) (_1!1352 (h!2367 (t!6360 lt!73551)))))))

(declare-fun b!141262 () Bool)

(assert (=> b!141262 (= e!92076 (isStrictlySorted!320 (t!6360 lt!73551)))))

(assert (= (and d!44293 (not res!67466)) b!141261))

(assert (= (and b!141261 res!67467) b!141262))

(declare-fun m!169575 () Bool)

(assert (=> b!141262 m!169575))

(assert (=> d!43635 d!44293))

(assert (=> b!141091 d!44077))

(declare-fun d!44295 () Bool)

(assert (=> d!44295 (= (apply!120 lt!73863 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73863) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5927 () Bool)

(assert (= bs!5927 d!44295))

(declare-fun m!169577 () Bool)

(assert (=> bs!5927 m!169577))

(assert (=> bs!5927 m!169577))

(declare-fun m!169579 () Bool)

(assert (=> bs!5927 m!169579))

(assert (=> b!140756 d!44295))

(declare-fun d!44297 () Bool)

(declare-fun e!92077 () Bool)

(assert (=> d!44297 e!92077))

(declare-fun res!67469 () Bool)

(assert (=> d!44297 (=> (not res!67469) (not e!92077))))

(declare-fun lt!74191 () ListLongMap!1747)

(assert (=> d!44297 (= res!67469 (contains!921 lt!74191 (_1!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74192 () List!1764)

(assert (=> d!44297 (= lt!74191 (ListLongMap!1748 lt!74192))))

(declare-fun lt!74189 () Unit!4395)

(declare-fun lt!74190 () Unit!4395)

(assert (=> d!44297 (= lt!74189 lt!74190)))

(assert (=> d!44297 (= (getValueByKey!175 lt!74192 (_1!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44297 (= lt!74190 (lemmaContainsTupThenGetReturnValue!91 lt!74192 (_1!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44297 (= lt!74192 (insertStrictlySorted!93 (toList!889 (ite c!26389 call!15631 (ite c!26392 call!15633 call!15630))) (_1!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44297 (= (+!174 (ite c!26389 call!15631 (ite c!26392 call!15633 call!15630)) (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74191)))

(declare-fun b!141263 () Bool)

(declare-fun res!67468 () Bool)

(assert (=> b!141263 (=> (not res!67468) (not e!92077))))

(assert (=> b!141263 (= res!67468 (= (getValueByKey!175 (toList!889 lt!74191) (_1!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141264 () Bool)

(assert (=> b!141264 (= e!92077 (contains!923 (toList!889 lt!74191) (ite (or c!26389 c!26392) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44297 res!67469) b!141263))

(assert (= (and b!141263 res!67468) b!141264))

(declare-fun m!169581 () Bool)

(assert (=> d!44297 m!169581))

(declare-fun m!169583 () Bool)

(assert (=> d!44297 m!169583))

(declare-fun m!169585 () Bool)

(assert (=> d!44297 m!169585))

(declare-fun m!169587 () Bool)

(assert (=> d!44297 m!169587))

(declare-fun m!169589 () Bool)

(assert (=> b!141263 m!169589))

(declare-fun m!169591 () Bool)

(assert (=> b!141264 m!169591))

(assert (=> bm!15629 d!44297))

(declare-fun d!44299 () Bool)

(assert (=> d!44299 (= (get!1538 (getValueByKey!175 (toList!889 lt!73402) lt!73408)) (v!3283 (getValueByKey!175 (toList!889 lt!73402) lt!73408)))))

(assert (=> d!44021 d!44299))

(declare-fun b!141267 () Bool)

(declare-fun e!92079 () Option!181)

(assert (=> b!141267 (= e!92079 (getValueByKey!175 (t!6360 (toList!889 lt!73402)) lt!73408))))

(declare-fun b!141266 () Bool)

(declare-fun e!92078 () Option!181)

(assert (=> b!141266 (= e!92078 e!92079)))

(declare-fun c!26548 () Bool)

(assert (=> b!141266 (= c!26548 (and ((_ is Cons!1760) (toList!889 lt!73402)) (not (= (_1!1352 (h!2367 (toList!889 lt!73402))) lt!73408))))))

(declare-fun b!141268 () Bool)

(assert (=> b!141268 (= e!92079 None!179)))

(declare-fun b!141265 () Bool)

(assert (=> b!141265 (= e!92078 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73402)))))))

(declare-fun d!44301 () Bool)

(declare-fun c!26547 () Bool)

(assert (=> d!44301 (= c!26547 (and ((_ is Cons!1760) (toList!889 lt!73402)) (= (_1!1352 (h!2367 (toList!889 lt!73402))) lt!73408)))))

(assert (=> d!44301 (= (getValueByKey!175 (toList!889 lt!73402) lt!73408) e!92078)))

(assert (= (and d!44301 c!26547) b!141265))

(assert (= (and d!44301 (not c!26547)) b!141266))

(assert (= (and b!141266 c!26548) b!141267))

(assert (= (and b!141266 (not c!26548)) b!141268))

(declare-fun m!169593 () Bool)

(assert (=> b!141267 m!169593))

(assert (=> d!44021 d!44301))

(declare-fun d!44303 () Bool)

(assert (=> d!44303 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!5928 () Bool)

(assert (= bs!5928 d!44303))

(assert (=> bs!5928 m!167379))

(declare-fun m!169595 () Bool)

(assert (=> bs!5928 m!169595))

(assert (=> b!140357 d!44303))

(assert (=> b!140357 d!44107))

(declare-fun d!44305 () Bool)

(declare-fun res!67470 () Bool)

(declare-fun e!92080 () Bool)

(assert (=> d!44305 (=> res!67470 e!92080)))

(assert (=> d!44305 (= res!67470 (and ((_ is Cons!1760) (toList!889 (map!1438 (_2!1353 lt!73341)))) (= (_1!1352 (h!2367 (toList!889 (map!1438 (_2!1353 lt!73341))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44305 (= (containsKey!179 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92080)))

(declare-fun b!141269 () Bool)

(declare-fun e!92081 () Bool)

(assert (=> b!141269 (= e!92080 e!92081)))

(declare-fun res!67471 () Bool)

(assert (=> b!141269 (=> (not res!67471) (not e!92081))))

(assert (=> b!141269 (= res!67471 (and (or (not ((_ is Cons!1760) (toList!889 (map!1438 (_2!1353 lt!73341))))) (bvsle (_1!1352 (h!2367 (toList!889 (map!1438 (_2!1353 lt!73341))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (toList!889 (map!1438 (_2!1353 lt!73341)))) (bvslt (_1!1352 (h!2367 (toList!889 (map!1438 (_2!1353 lt!73341))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!141270 () Bool)

(assert (=> b!141270 (= e!92081 (containsKey!179 (t!6360 (toList!889 (map!1438 (_2!1353 lt!73341)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!44305 (not res!67470)) b!141269))

(assert (= (and b!141269 res!67471) b!141270))

(assert (=> b!141270 m!166733))

(declare-fun m!169597 () Bool)

(assert (=> b!141270 m!169597))

(assert (=> d!43713 d!44305))

(declare-fun d!44307 () Bool)

(assert (=> d!44307 (isDefined!129 (getValueByKey!175 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74193 () Unit!4395)

(assert (=> d!44307 (= lt!74193 (choose!868 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92082 () Bool)

(assert (=> d!44307 e!92082))

(declare-fun res!67472 () Bool)

(assert (=> d!44307 (=> (not res!67472) (not e!92082))))

(assert (=> d!44307 (= res!67472 (isStrictlySorted!320 (toList!889 lt!73528)))))

(assert (=> d!44307 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74193)))

(declare-fun b!141271 () Bool)

(assert (=> b!141271 (= e!92082 (containsKey!179 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44307 res!67472) b!141271))

(assert (=> d!44307 m!167423))

(assert (=> d!44307 m!167423))

(assert (=> d!44307 m!167985))

(declare-fun m!169599 () Bool)

(assert (=> d!44307 m!169599))

(declare-fun m!169601 () Bool)

(assert (=> d!44307 m!169601))

(assert (=> b!141271 m!167981))

(assert (=> b!140491 d!44307))

(declare-fun d!44309 () Bool)

(assert (=> d!44309 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!5929 () Bool)

(assert (= bs!5929 d!44309))

(assert (=> bs!5929 m!167423))

(declare-fun m!169603 () Bool)

(assert (=> bs!5929 m!169603))

(assert (=> b!140491 d!44309))

(assert (=> b!140491 d!43693))

(declare-fun b!141272 () Bool)

(declare-fun res!67474 () Bool)

(declare-fun e!92087 () Bool)

(assert (=> b!141272 (=> (not res!67474) (not e!92087))))

(declare-fun lt!74196 () ListLongMap!1747)

(assert (=> b!141272 (= res!67474 (not (contains!921 lt!74196 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141273 () Bool)

(assert (=> b!141273 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!141273 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_values!2923 newMap!16))))))

(declare-fun e!92083 () Bool)

(assert (=> b!141273 (= e!92083 (= (apply!120 lt!74196 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141274 () Bool)

(declare-fun e!92089 () ListLongMap!1747)

(declare-fun e!92086 () ListLongMap!1747)

(assert (=> b!141274 (= e!92089 e!92086)))

(declare-fun c!26551 () Bool)

(assert (=> b!141274 (= c!26551 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141275 () Bool)

(declare-fun e!92084 () Bool)

(assert (=> b!141275 (= e!92084 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141275 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!44311 () Bool)

(assert (=> d!44311 e!92087))

(declare-fun res!67476 () Bool)

(assert (=> d!44311 (=> (not res!67476) (not e!92087))))

(assert (=> d!44311 (= res!67476 (not (contains!921 lt!74196 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44311 (= lt!74196 e!92089)))

(declare-fun c!26552 () Bool)

(assert (=> d!44311 (= c!26552 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44311 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44311 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!74196)))

(declare-fun b!141276 () Bool)

(declare-fun e!92085 () Bool)

(declare-fun e!92088 () Bool)

(assert (=> b!141276 (= e!92085 e!92088)))

(declare-fun c!26549 () Bool)

(assert (=> b!141276 (= c!26549 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141277 () Bool)

(assert (=> b!141277 (= e!92088 (= lt!74196 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141278 () Bool)

(assert (=> b!141278 (= e!92085 e!92083)))

(assert (=> b!141278 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67475 () Bool)

(assert (=> b!141278 (= res!67475 (contains!921 lt!74196 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141278 (=> (not res!67475) (not e!92083))))

(declare-fun b!141279 () Bool)

(declare-fun call!15684 () ListLongMap!1747)

(assert (=> b!141279 (= e!92086 call!15684)))

(declare-fun bm!15681 () Bool)

(assert (=> bm!15681 (= call!15684 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141280 () Bool)

(assert (=> b!141280 (= e!92089 (ListLongMap!1748 Nil!1761))))

(declare-fun b!141281 () Bool)

(declare-fun lt!74194 () Unit!4395)

(declare-fun lt!74200 () Unit!4395)

(assert (=> b!141281 (= lt!74194 lt!74200)))

(declare-fun lt!74198 () (_ BitVec 64))

(declare-fun lt!74199 () (_ BitVec 64))

(declare-fun lt!74197 () V!3555)

(declare-fun lt!74195 () ListLongMap!1747)

(assert (=> b!141281 (not (contains!921 (+!174 lt!74195 (tuple2!2685 lt!74199 lt!74197)) lt!74198))))

(assert (=> b!141281 (= lt!74200 (addStillNotContains!66 lt!74195 lt!74199 lt!74197 lt!74198))))

(assert (=> b!141281 (= lt!74198 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141281 (= lt!74197 (get!1535 (select (arr!2315 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141281 (= lt!74199 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141281 (= lt!74195 call!15684)))

(assert (=> b!141281 (= e!92086 (+!174 call!15684 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141282 () Bool)

(assert (=> b!141282 (= e!92087 e!92085)))

(declare-fun c!26550 () Bool)

(assert (=> b!141282 (= c!26550 e!92084)))

(declare-fun res!67473 () Bool)

(assert (=> b!141282 (=> (not res!67473) (not e!92084))))

(assert (=> b!141282 (= res!67473 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141283 () Bool)

(assert (=> b!141283 (= e!92088 (isEmpty!423 lt!74196))))

(assert (= (and d!44311 c!26552) b!141280))

(assert (= (and d!44311 (not c!26552)) b!141274))

(assert (= (and b!141274 c!26551) b!141281))

(assert (= (and b!141274 (not c!26551)) b!141279))

(assert (= (or b!141281 b!141279) bm!15681))

(assert (= (and d!44311 res!67476) b!141272))

(assert (= (and b!141272 res!67474) b!141282))

(assert (= (and b!141282 res!67473) b!141275))

(assert (= (and b!141282 c!26550) b!141278))

(assert (= (and b!141282 (not c!26550)) b!141276))

(assert (= (and b!141278 res!67475) b!141273))

(assert (= (and b!141276 c!26549) b!141277))

(assert (= (and b!141276 (not c!26549)) b!141283))

(declare-fun b_lambda!6377 () Bool)

(assert (=> (not b_lambda!6377) (not b!141273)))

(assert (=> b!141273 t!6366))

(declare-fun b_and!8849 () Bool)

(assert (= b_and!8845 (and (=> t!6366 result!4203) b_and!8849)))

(assert (=> b!141273 t!6368))

(declare-fun b_and!8851 () Bool)

(assert (= b_and!8847 (and (=> t!6368 result!4205) b_and!8851)))

(declare-fun b_lambda!6379 () Bool)

(assert (=> (not b_lambda!6379) (not b!141281)))

(assert (=> b!141281 t!6366))

(declare-fun b_and!8853 () Bool)

(assert (= b_and!8849 (and (=> t!6366 result!4203) b_and!8853)))

(assert (=> b!141281 t!6368))

(declare-fun b_and!8855 () Bool)

(assert (= b_and!8851 (and (=> t!6368 result!4205) b_and!8855)))

(declare-fun m!169605 () Bool)

(assert (=> b!141277 m!169605))

(assert (=> b!141275 m!167699))

(assert (=> b!141275 m!167699))

(assert (=> b!141275 m!167707))

(declare-fun m!169607 () Bool)

(assert (=> b!141281 m!169607))

(declare-fun m!169609 () Bool)

(assert (=> b!141281 m!169609))

(assert (=> b!141281 m!167699))

(declare-fun m!169611 () Bool)

(assert (=> b!141281 m!169611))

(declare-fun m!169613 () Bool)

(assert (=> b!141281 m!169613))

(assert (=> b!141281 m!166971))

(declare-fun m!169615 () Bool)

(assert (=> b!141281 m!169615))

(assert (=> b!141281 m!169615))

(assert (=> b!141281 m!166971))

(declare-fun m!169617 () Bool)

(assert (=> b!141281 m!169617))

(assert (=> b!141281 m!169607))

(assert (=> b!141278 m!167699))

(assert (=> b!141278 m!167699))

(declare-fun m!169619 () Bool)

(assert (=> b!141278 m!169619))

(assert (=> b!141274 m!167699))

(assert (=> b!141274 m!167699))

(assert (=> b!141274 m!167707))

(assert (=> b!141273 m!167699))

(assert (=> b!141273 m!167699))

(declare-fun m!169621 () Bool)

(assert (=> b!141273 m!169621))

(assert (=> b!141273 m!166971))

(assert (=> b!141273 m!169615))

(assert (=> b!141273 m!169615))

(assert (=> b!141273 m!166971))

(assert (=> b!141273 m!169617))

(declare-fun m!169623 () Bool)

(assert (=> b!141283 m!169623))

(declare-fun m!169625 () Bool)

(assert (=> d!44311 m!169625))

(assert (=> d!44311 m!166961))

(declare-fun m!169627 () Bool)

(assert (=> b!141272 m!169627))

(assert (=> bm!15681 m!169605))

(assert (=> bm!15577 d!44311))

(declare-fun b!141286 () Bool)

(declare-fun e!92091 () Option!181)

(assert (=> b!141286 (= e!92091 (getValueByKey!175 (t!6360 (toList!889 lt!73931)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141285 () Bool)

(declare-fun e!92090 () Option!181)

(assert (=> b!141285 (= e!92090 e!92091)))

(declare-fun c!26554 () Bool)

(assert (=> b!141285 (= c!26554 (and ((_ is Cons!1760) (toList!889 lt!73931)) (not (= (_1!1352 (h!2367 (toList!889 lt!73931))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141287 () Bool)

(assert (=> b!141287 (= e!92091 None!179)))

(declare-fun b!141284 () Bool)

(assert (=> b!141284 (= e!92090 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73931)))))))

(declare-fun d!44313 () Bool)

(declare-fun c!26553 () Bool)

(assert (=> d!44313 (= c!26553 (and ((_ is Cons!1760) (toList!889 lt!73931)) (= (_1!1352 (h!2367 (toList!889 lt!73931))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44313 (= (getValueByKey!175 (toList!889 lt!73931) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!92090)))

(assert (= (and d!44313 c!26553) b!141284))

(assert (= (and d!44313 (not c!26553)) b!141285))

(assert (= (and b!141285 c!26554) b!141286))

(assert (= (and b!141285 (not c!26554)) b!141287))

(declare-fun m!169629 () Bool)

(assert (=> b!141286 m!169629))

(assert (=> b!140846 d!44313))

(declare-fun d!44315 () Bool)

(assert (=> d!44315 (= (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))))

(declare-fun bs!5930 () Bool)

(assert (= bs!5930 d!44315))

(assert (=> bs!5930 m!168571))

(declare-fun m!169631 () Bool)

(assert (=> bs!5930 m!169631))

(assert (=> b!140743 d!44315))

(declare-fun e!92093 () Option!181)

(declare-fun b!141290 () Bool)

(assert (=> b!141290 (= e!92093 (getValueByKey!175 (t!6360 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(declare-fun b!141289 () Bool)

(declare-fun e!92092 () Option!181)

(assert (=> b!141289 (= e!92092 e!92093)))

(declare-fun c!26556 () Bool)

(assert (=> b!141289 (= c!26556 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (not (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))))

(declare-fun b!141291 () Bool)

(assert (=> b!141291 (= e!92093 None!179)))

(declare-fun b!141288 () Bool)

(assert (=> b!141288 (= e!92092 (Some!180 (_2!1352 (h!2367 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))))

(declare-fun d!44317 () Bool)

(declare-fun c!26555 () Bool)

(assert (=> d!44317 (= c!26555 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))))

(assert (=> d!44317 (= (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))) e!92092)))

(assert (= (and d!44317 c!26555) b!141288))

(assert (= (and d!44317 (not c!26555)) b!141289))

(assert (= (and b!141289 c!26556) b!141290))

(assert (= (and b!141289 (not c!26556)) b!141291))

(assert (=> b!141290 m!167045))

(declare-fun m!169633 () Bool)

(assert (=> b!141290 m!169633))

(assert (=> b!140743 d!44317))

(declare-fun lt!74201 () Bool)

(declare-fun d!44319 () Bool)

(assert (=> d!44319 (= lt!74201 (select (content!137 (toList!889 lt!73915)) (tuple2!2685 lt!73444 lt!73442)))))

(declare-fun e!92094 () Bool)

(assert (=> d!44319 (= lt!74201 e!92094)))

(declare-fun res!67478 () Bool)

(assert (=> d!44319 (=> (not res!67478) (not e!92094))))

(assert (=> d!44319 (= res!67478 ((_ is Cons!1760) (toList!889 lt!73915)))))

(assert (=> d!44319 (= (contains!923 (toList!889 lt!73915) (tuple2!2685 lt!73444 lt!73442)) lt!74201)))

(declare-fun b!141292 () Bool)

(declare-fun e!92095 () Bool)

(assert (=> b!141292 (= e!92094 e!92095)))

(declare-fun res!67477 () Bool)

(assert (=> b!141292 (=> res!67477 e!92095)))

(assert (=> b!141292 (= res!67477 (= (h!2367 (toList!889 lt!73915)) (tuple2!2685 lt!73444 lt!73442)))))

(declare-fun b!141293 () Bool)

(assert (=> b!141293 (= e!92095 (contains!923 (t!6360 (toList!889 lt!73915)) (tuple2!2685 lt!73444 lt!73442)))))

(assert (= (and d!44319 res!67478) b!141292))

(assert (= (and b!141292 (not res!67477)) b!141293))

(declare-fun m!169635 () Bool)

(assert (=> d!44319 m!169635))

(declare-fun m!169637 () Bool)

(assert (=> d!44319 m!169637))

(declare-fun m!169639 () Bool)

(assert (=> b!141293 m!169639))

(assert (=> b!140822 d!44319))

(declare-fun e!92097 () Option!181)

(declare-fun b!141296 () Bool)

(assert (=> b!141296 (= e!92097 (getValueByKey!175 (t!6360 (toList!889 lt!74103)) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141295 () Bool)

(declare-fun e!92096 () Option!181)

(assert (=> b!141295 (= e!92096 e!92097)))

(declare-fun c!26558 () Bool)

(assert (=> b!141295 (= c!26558 (and ((_ is Cons!1760) (toList!889 lt!74103)) (not (= (_1!1352 (h!2367 (toList!889 lt!74103))) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!141297 () Bool)

(assert (=> b!141297 (= e!92097 None!179)))

(declare-fun b!141294 () Bool)

(assert (=> b!141294 (= e!92096 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74103)))))))

(declare-fun c!26557 () Bool)

(declare-fun d!44321 () Bool)

(assert (=> d!44321 (= c!26557 (and ((_ is Cons!1760) (toList!889 lt!74103)) (= (_1!1352 (h!2367 (toList!889 lt!74103))) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44321 (= (getValueByKey!175 (toList!889 lt!74103) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92096)))

(assert (= (and d!44321 c!26557) b!141294))

(assert (= (and d!44321 (not c!26557)) b!141295))

(assert (= (and b!141295 c!26558) b!141296))

(assert (= (and b!141295 (not c!26558)) b!141297))

(declare-fun m!169641 () Bool)

(assert (=> b!141296 m!169641))

(assert (=> b!141081 d!44321))

(declare-fun d!44323 () Bool)

(assert (=> d!44323 (= (get!1538 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3283 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43767 d!44323))

(declare-fun b!141300 () Bool)

(declare-fun e!92099 () Option!181)

(assert (=> b!141300 (= e!92099 (getValueByKey!175 (t!6360 (toList!889 lt!73450)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141299 () Bool)

(declare-fun e!92098 () Option!181)

(assert (=> b!141299 (= e!92098 e!92099)))

(declare-fun c!26560 () Bool)

(assert (=> b!141299 (= c!26560 (and ((_ is Cons!1760) (toList!889 lt!73450)) (not (= (_1!1352 (h!2367 (toList!889 lt!73450))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141301 () Bool)

(assert (=> b!141301 (= e!92099 None!179)))

(declare-fun b!141298 () Bool)

(assert (=> b!141298 (= e!92098 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73450)))))))

(declare-fun d!44325 () Bool)

(declare-fun c!26559 () Bool)

(assert (=> d!44325 (= c!26559 (and ((_ is Cons!1760) (toList!889 lt!73450)) (= (_1!1352 (h!2367 (toList!889 lt!73450))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44325 (= (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92098)))

(assert (= (and d!44325 c!26559) b!141298))

(assert (= (and d!44325 (not c!26559)) b!141299))

(assert (= (and b!141299 c!26560) b!141300))

(assert (= (and b!141299 (not c!26560)) b!141301))

(assert (=> b!141300 m!166967))

(declare-fun m!169643 () Bool)

(assert (=> b!141300 m!169643))

(assert (=> d!43767 d!44325))

(declare-fun d!44327 () Bool)

(assert (=> d!44327 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!74202 () Unit!4395)

(assert (=> d!44327 (= lt!74202 (choose!868 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!92100 () Bool)

(assert (=> d!44327 e!92100))

(declare-fun res!67479 () Bool)

(assert (=> d!44327 (=> (not res!67479) (not e!92100))))

(assert (=> d!44327 (= res!67479 (isStrictlySorted!320 (toList!889 lt!73441)))))

(assert (=> d!44327 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!74202)))

(declare-fun b!141302 () Bool)

(assert (=> b!141302 (= e!92100 (containsKey!179 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!44327 res!67479) b!141302))

(assert (=> d!44327 m!166821))

(assert (=> d!44327 m!168645))

(assert (=> d!44327 m!168645))

(assert (=> d!44327 m!168679))

(assert (=> d!44327 m!166821))

(declare-fun m!169645 () Bool)

(assert (=> d!44327 m!169645))

(declare-fun m!169647 () Bool)

(assert (=> d!44327 m!169647))

(assert (=> b!141302 m!166821))

(assert (=> b!141302 m!168675))

(assert (=> b!140810 d!44327))

(declare-fun d!44329 () Bool)

(assert (=> d!44329 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5931 () Bool)

(assert (= bs!5931 d!44329))

(assert (=> bs!5931 m!168645))

(declare-fun m!169649 () Bool)

(assert (=> bs!5931 m!169649))

(assert (=> b!140810 d!44329))

(declare-fun b!141305 () Bool)

(declare-fun e!92102 () Option!181)

(assert (=> b!141305 (= e!92102 (getValueByKey!175 (t!6360 (toList!889 lt!73441)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!141304 () Bool)

(declare-fun e!92101 () Option!181)

(assert (=> b!141304 (= e!92101 e!92102)))

(declare-fun c!26562 () Bool)

(assert (=> b!141304 (= c!26562 (and ((_ is Cons!1760) (toList!889 lt!73441)) (not (= (_1!1352 (h!2367 (toList!889 lt!73441))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!141306 () Bool)

(assert (=> b!141306 (= e!92102 None!179)))

(declare-fun b!141303 () Bool)

(assert (=> b!141303 (= e!92101 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73441)))))))

(declare-fun d!44331 () Bool)

(declare-fun c!26561 () Bool)

(assert (=> d!44331 (= c!26561 (and ((_ is Cons!1760) (toList!889 lt!73441)) (= (_1!1352 (h!2367 (toList!889 lt!73441))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44331 (= (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92101)))

(assert (= (and d!44331 c!26561) b!141303))

(assert (= (and d!44331 (not c!26561)) b!141304))

(assert (= (and b!141304 c!26562) b!141305))

(assert (= (and b!141304 (not c!26562)) b!141306))

(assert (=> b!141305 m!166821))

(declare-fun m!169651 () Bool)

(assert (=> b!141305 m!169651))

(assert (=> b!140810 d!44331))

(declare-fun d!44333 () Bool)

(declare-fun lt!74203 () Bool)

(assert (=> d!44333 (= lt!74203 (select (content!137 (toList!889 lt!73931)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun e!92103 () Bool)

(assert (=> d!44333 (= lt!74203 e!92103)))

(declare-fun res!67481 () Bool)

(assert (=> d!44333 (=> (not res!67481) (not e!92103))))

(assert (=> d!44333 (= res!67481 ((_ is Cons!1760) (toList!889 lt!73931)))))

(assert (=> d!44333 (= (contains!923 (toList!889 lt!73931) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74203)))

(declare-fun b!141307 () Bool)

(declare-fun e!92104 () Bool)

(assert (=> b!141307 (= e!92103 e!92104)))

(declare-fun res!67480 () Bool)

(assert (=> b!141307 (=> res!67480 e!92104)))

(assert (=> b!141307 (= res!67480 (= (h!2367 (toList!889 lt!73931)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!141308 () Bool)

(assert (=> b!141308 (= e!92104 (contains!923 (t!6360 (toList!889 lt!73931)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44333 res!67481) b!141307))

(assert (= (and b!141307 (not res!67480)) b!141308))

(declare-fun m!169653 () Bool)

(assert (=> d!44333 m!169653))

(declare-fun m!169655 () Bool)

(assert (=> d!44333 m!169655))

(declare-fun m!169657 () Bool)

(assert (=> b!141308 m!169657))

(assert (=> b!140847 d!44333))

(declare-fun lt!74204 () Bool)

(declare-fun d!44335 () Bool)

(assert (=> d!44335 (= lt!74204 (select (content!137 (toList!889 lt!74126)) (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92105 () Bool)

(assert (=> d!44335 (= lt!74204 e!92105)))

(declare-fun res!67483 () Bool)

(assert (=> d!44335 (=> (not res!67483) (not e!92105))))

(assert (=> d!44335 (= res!67483 ((_ is Cons!1760) (toList!889 lt!74126)))))

(assert (=> d!44335 (= (contains!923 (toList!889 lt!74126) (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74204)))

(declare-fun b!141309 () Bool)

(declare-fun e!92106 () Bool)

(assert (=> b!141309 (= e!92105 e!92106)))

(declare-fun res!67482 () Bool)

(assert (=> b!141309 (=> res!67482 e!92106)))

(assert (=> b!141309 (= res!67482 (= (h!2367 (toList!889 lt!74126)) (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141310 () Bool)

(assert (=> b!141310 (= e!92106 (contains!923 (t!6360 (toList!889 lt!74126)) (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44335 res!67483) b!141309))

(assert (= (and b!141309 (not res!67482)) b!141310))

(declare-fun m!169659 () Bool)

(assert (=> d!44335 m!169659))

(declare-fun m!169661 () Bool)

(assert (=> d!44335 m!169661))

(declare-fun m!169663 () Bool)

(assert (=> b!141310 m!169663))

(assert (=> b!141099 d!44335))

(assert (=> d!43983 d!43913))

(assert (=> d!43983 d!43525))

(declare-fun d!44337 () Bool)

(assert (=> d!44337 (contains!921 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))

(assert (=> d!44337 true))

(declare-fun _$17!59 () Unit!4395)

(assert (=> d!44337 (= (choose!876 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) _$17!59)))

(declare-fun bs!5932 () Bool)

(assert (= bs!5932 d!44337))

(assert (=> bs!5932 m!166829))

(assert (=> bs!5932 m!166829))

(assert (=> bs!5932 m!166733))

(assert (=> bs!5932 m!167049))

(assert (=> d!43983 d!44337))

(assert (=> d!43983 d!43661))

(declare-fun d!44339 () Bool)

(assert (=> d!44339 (= (get!1538 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3283 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!43763 d!44339))

(declare-fun b!141313 () Bool)

(declare-fun e!92108 () Option!181)

(assert (=> b!141313 (= e!92108 (getValueByKey!175 (t!6360 (toList!889 lt!73482)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141312 () Bool)

(declare-fun e!92107 () Option!181)

(assert (=> b!141312 (= e!92107 e!92108)))

(declare-fun c!26564 () Bool)

(assert (=> b!141312 (= c!26564 (and ((_ is Cons!1760) (toList!889 lt!73482)) (not (= (_1!1352 (h!2367 (toList!889 lt!73482))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141314 () Bool)

(assert (=> b!141314 (= e!92108 None!179)))

(declare-fun b!141311 () Bool)

(assert (=> b!141311 (= e!92107 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73482)))))))

(declare-fun d!44341 () Bool)

(declare-fun c!26563 () Bool)

(assert (=> d!44341 (= c!26563 (and ((_ is Cons!1760) (toList!889 lt!73482)) (= (_1!1352 (h!2367 (toList!889 lt!73482))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44341 (= (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92107)))

(assert (= (and d!44341 c!26563) b!141311))

(assert (= (and d!44341 (not c!26563)) b!141312))

(assert (= (and b!141312 c!26564) b!141313))

(assert (= (and b!141312 (not c!26564)) b!141314))

(assert (=> b!141313 m!166967))

(declare-fun m!169665 () Bool)

(assert (=> b!141313 m!169665))

(assert (=> d!43763 d!44341))

(declare-fun bm!15682 () Bool)

(declare-fun c!26565 () Bool)

(declare-fun call!15685 () Bool)

(assert (=> bm!15682 (= call!15685 (arrayNoDuplicates!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (bvadd lt!73334 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26565 (Cons!1759 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd lt!73334 #b00000000000000000000000000000001)) (ite c!26395 (Cons!1759 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334) lt!73336) lt!73336)) (ite c!26395 (Cons!1759 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334) lt!73336) lt!73336))))))

(declare-fun b!141316 () Bool)

(declare-fun e!92110 () Bool)

(declare-fun e!92111 () Bool)

(assert (=> b!141316 (= e!92110 e!92111)))

(assert (=> b!141316 (= c!26565 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd lt!73334 #b00000000000000000000000000000001))))))

(declare-fun b!141317 () Bool)

(assert (=> b!141317 (= e!92111 call!15685)))

(declare-fun d!44343 () Bool)

(declare-fun res!67486 () Bool)

(declare-fun e!92112 () Bool)

(assert (=> d!44343 (=> res!67486 e!92112)))

(assert (=> d!44343 (= res!67486 (bvsge (bvadd lt!73334 #b00000000000000000000000000000001) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!44343 (= (arrayNoDuplicates!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (bvadd lt!73334 #b00000000000000000000000000000001) (ite c!26395 (Cons!1759 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334) lt!73336) lt!73336)) e!92112)))

(declare-fun b!141315 () Bool)

(declare-fun e!92109 () Bool)

(assert (=> b!141315 (= e!92109 (contains!922 (ite c!26395 (Cons!1759 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334) lt!73336) lt!73336) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd lt!73334 #b00000000000000000000000000000001))))))

(declare-fun b!141318 () Bool)

(assert (=> b!141318 (= e!92112 e!92110)))

(declare-fun res!67484 () Bool)

(assert (=> b!141318 (=> (not res!67484) (not e!92110))))

(assert (=> b!141318 (= res!67484 (not e!92109))))

(declare-fun res!67485 () Bool)

(assert (=> b!141318 (=> (not res!67485) (not e!92109))))

(assert (=> b!141318 (= res!67485 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd lt!73334 #b00000000000000000000000000000001))))))

(declare-fun b!141319 () Bool)

(assert (=> b!141319 (= e!92111 call!15685)))

(assert (= (and d!44343 (not res!67486)) b!141318))

(assert (= (and b!141318 res!67485) b!141315))

(assert (= (and b!141318 res!67484) b!141316))

(assert (= (and b!141316 c!26565) b!141317))

(assert (= (and b!141316 (not c!26565)) b!141319))

(assert (= (or b!141317 b!141319) bm!15682))

(declare-fun m!169667 () Bool)

(assert (=> bm!15682 m!169667))

(declare-fun m!169669 () Bool)

(assert (=> bm!15682 m!169669))

(assert (=> b!141316 m!169667))

(assert (=> b!141316 m!169667))

(declare-fun m!169671 () Bool)

(assert (=> b!141316 m!169671))

(assert (=> b!141315 m!169667))

(assert (=> b!141315 m!169667))

(declare-fun m!169673 () Bool)

(assert (=> b!141315 m!169673))

(assert (=> b!141318 m!169667))

(assert (=> b!141318 m!169667))

(assert (=> b!141318 m!169671))

(assert (=> bm!15634 d!44343))

(declare-fun d!44345 () Bool)

(assert (=> d!44345 (= (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) (not (isEmpty!422 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(declare-fun bs!5933 () Bool)

(assert (= bs!5933 d!44345))

(assert (=> bs!5933 m!168319))

(declare-fun m!169675 () Bool)

(assert (=> bs!5933 m!169675))

(assert (=> b!140606 d!44345))

(declare-fun b!141322 () Bool)

(declare-fun e!92114 () Option!181)

(assert (=> b!141322 (= e!92114 (getValueByKey!175 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(declare-fun b!141321 () Bool)

(declare-fun e!92113 () Option!181)

(assert (=> b!141321 (= e!92113 e!92114)))

(declare-fun c!26567 () Bool)

(assert (=> b!141321 (= c!26567 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (not (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(declare-fun b!141323 () Bool)

(assert (=> b!141323 (= e!92114 None!179)))

(declare-fun b!141320 () Bool)

(assert (=> b!141320 (= e!92113 (Some!180 (_2!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))))

(declare-fun c!26566 () Bool)

(declare-fun d!44347 () Bool)

(assert (=> d!44347 (= c!26566 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (=> d!44347 (= (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))) e!92113)))

(assert (= (and d!44347 c!26566) b!141320))

(assert (= (and d!44347 (not c!26566)) b!141321))

(assert (= (and b!141321 c!26567) b!141322))

(assert (= (and b!141321 (not c!26567)) b!141323))

(assert (=> b!141322 m!166933))

(declare-fun m!169677 () Bool)

(assert (=> b!141322 m!169677))

(assert (=> b!140606 d!44347))

(declare-fun d!44349 () Bool)

(assert (=> d!44349 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5934 () Bool)

(assert (= bs!5934 d!44349))

(assert (=> bs!5934 m!168055))

(declare-fun m!169679 () Bool)

(assert (=> bs!5934 m!169679))

(assert (=> b!141097 d!44349))

(assert (=> b!141097 d!44325))

(assert (=> d!43955 d!43959))

(assert (=> d!43955 d!43957))

(declare-fun d!44351 () Bool)

(assert (=> d!44351 (not (contains!921 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)) lt!73443))))

(assert (=> d!44351 true))

(declare-fun _$36!336 () Unit!4395)

(assert (=> d!44351 (= (choose!875 lt!73440 lt!73444 lt!73442 lt!73443) _$36!336)))

(declare-fun bs!5935 () Bool)

(assert (= bs!5935 d!44351))

(assert (=> bs!5935 m!167227))

(assert (=> bs!5935 m!167227))

(assert (=> bs!5935 m!167229))

(assert (=> d!43955 d!44351))

(declare-fun d!44353 () Bool)

(declare-fun e!92116 () Bool)

(assert (=> d!44353 e!92116))

(declare-fun res!67487 () Bool)

(assert (=> d!44353 (=> res!67487 e!92116)))

(declare-fun lt!74205 () Bool)

(assert (=> d!44353 (= res!67487 (not lt!74205))))

(declare-fun lt!74208 () Bool)

(assert (=> d!44353 (= lt!74205 lt!74208)))

(declare-fun lt!74206 () Unit!4395)

(declare-fun e!92115 () Unit!4395)

(assert (=> d!44353 (= lt!74206 e!92115)))

(declare-fun c!26568 () Bool)

(assert (=> d!44353 (= c!26568 lt!74208)))

(assert (=> d!44353 (= lt!74208 (containsKey!179 (toList!889 lt!73440) lt!73443))))

(assert (=> d!44353 (= (contains!921 lt!73440 lt!73443) lt!74205)))

(declare-fun b!141325 () Bool)

(declare-fun lt!74207 () Unit!4395)

(assert (=> b!141325 (= e!92115 lt!74207)))

(assert (=> b!141325 (= lt!74207 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73440) lt!73443))))

(assert (=> b!141325 (isDefined!129 (getValueByKey!175 (toList!889 lt!73440) lt!73443))))

(declare-fun b!141326 () Bool)

(declare-fun Unit!4466 () Unit!4395)

(assert (=> b!141326 (= e!92115 Unit!4466)))

(declare-fun b!141327 () Bool)

(assert (=> b!141327 (= e!92116 (isDefined!129 (getValueByKey!175 (toList!889 lt!73440) lt!73443)))))

(assert (= (and d!44353 c!26568) b!141325))

(assert (= (and d!44353 (not c!26568)) b!141326))

(assert (= (and d!44353 (not res!67487)) b!141327))

(declare-fun m!169681 () Bool)

(assert (=> d!44353 m!169681))

(declare-fun m!169683 () Bool)

(assert (=> b!141325 m!169683))

(declare-fun m!169685 () Bool)

(assert (=> b!141325 m!169685))

(assert (=> b!141325 m!169685))

(declare-fun m!169687 () Bool)

(assert (=> b!141325 m!169687))

(assert (=> b!141327 m!169685))

(assert (=> b!141327 m!169685))

(assert (=> b!141327 m!169687))

(assert (=> d!43955 d!44353))

(declare-fun d!44355 () Bool)

(assert (=> d!44355 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) lt!73407)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) lt!73407)))))

(assert (=> d!44029 d!44355))

(declare-fun e!92118 () Option!181)

(declare-fun b!141330 () Bool)

(assert (=> b!141330 (= e!92118 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))) lt!73407))))

(declare-fun b!141329 () Bool)

(declare-fun e!92117 () Option!181)

(assert (=> b!141329 (= e!92117 e!92118)))

(declare-fun c!26570 () Bool)

(assert (=> b!141329 (= c!26570 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))) lt!73407))))))

(declare-fun b!141331 () Bool)

(assert (=> b!141331 (= e!92118 None!179)))

(declare-fun b!141328 () Bool)

(assert (=> b!141328 (= e!92117 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))))

(declare-fun d!44357 () Bool)

(declare-fun c!26569 () Bool)

(assert (=> d!44357 (= c!26569 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))) lt!73407)))))

(assert (=> d!44357 (= (getValueByKey!175 (toList!889 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) lt!73407) e!92117)))

(assert (= (and d!44357 c!26569) b!141328))

(assert (= (and d!44357 (not c!26569)) b!141329))

(assert (= (and b!141329 c!26570) b!141330))

(assert (= (and b!141329 (not c!26570)) b!141331))

(declare-fun m!169689 () Bool)

(assert (=> b!141330 m!169689))

(assert (=> d!44029 d!44357))

(declare-fun d!44359 () Bool)

(assert (=> d!44359 (= (apply!120 lt!73779 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73779) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5936 () Bool)

(assert (= bs!5936 d!44359))

(declare-fun m!169691 () Bool)

(assert (=> bs!5936 m!169691))

(assert (=> bs!5936 m!169691))

(declare-fun m!169693 () Bool)

(assert (=> bs!5936 m!169693))

(assert (=> b!140619 d!44359))

(declare-fun e!92120 () Option!181)

(declare-fun b!141334 () Bool)

(assert (=> b!141334 (= e!92120 (getValueByKey!175 (t!6360 (toList!889 lt!73751)) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141333 () Bool)

(declare-fun e!92119 () Option!181)

(assert (=> b!141333 (= e!92119 e!92120)))

(declare-fun c!26572 () Bool)

(assert (=> b!141333 (= c!26572 (and ((_ is Cons!1760) (toList!889 lt!73751)) (not (= (_1!1352 (h!2367 (toList!889 lt!73751))) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141335 () Bool)

(assert (=> b!141335 (= e!92120 None!179)))

(declare-fun b!141332 () Bool)

(assert (=> b!141332 (= e!92119 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73751)))))))

(declare-fun d!44361 () Bool)

(declare-fun c!26571 () Bool)

(assert (=> d!44361 (= c!26571 (and ((_ is Cons!1760) (toList!889 lt!73751)) (= (_1!1352 (h!2367 (toList!889 lt!73751))) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44361 (= (getValueByKey!175 (toList!889 lt!73751) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) e!92119)))

(assert (= (and d!44361 c!26571) b!141332))

(assert (= (and d!44361 (not c!26571)) b!141333))

(assert (= (and b!141333 c!26572) b!141334))

(assert (= (and b!141333 (not c!26572)) b!141335))

(declare-fun m!169695 () Bool)

(assert (=> b!141334 m!169695))

(assert (=> b!140586 d!44361))

(assert (=> d!43695 d!43697))

(declare-fun d!44363 () Bool)

(assert (=> d!44363 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000)))

(assert (=> d!44363 true))

(declare-fun _$60!369 () Unit!4395)

(assert (=> d!44363 (= (choose!13 (_keys!4699 newMap!16) lt!73517 #b00000000000000000000000000000000) _$60!369)))

(declare-fun bs!5937 () Bool)

(assert (= bs!5937 d!44363))

(assert (=> bs!5937 m!167389))

(assert (=> d!43695 d!44363))

(declare-fun d!44365 () Bool)

(assert (=> d!44365 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74209 () Unit!4395)

(assert (=> d!44365 (= lt!74209 (choose!868 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92121 () Bool)

(assert (=> d!44365 e!92121))

(declare-fun res!67488 () Bool)

(assert (=> d!44365 (=> (not res!67488) (not e!92121))))

(assert (=> d!44365 (= res!67488 (isStrictlySorted!320 (toList!889 lt!73391)))))

(assert (=> d!44365 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74209)))

(declare-fun b!141336 () Bool)

(assert (=> b!141336 (= e!92121 (containsKey!179 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44365 res!67488) b!141336))

(assert (=> d!44365 m!167657))

(assert (=> d!44365 m!167657))

(assert (=> d!44365 m!168829))

(declare-fun m!169697 () Bool)

(assert (=> d!44365 m!169697))

(declare-fun m!169699 () Bool)

(assert (=> d!44365 m!169699))

(assert (=> b!141336 m!168825))

(assert (=> b!140872 d!44365))

(declare-fun d!44367 () Bool)

(assert (=> d!44367 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5938 () Bool)

(assert (= bs!5938 d!44367))

(assert (=> bs!5938 m!167657))

(declare-fun m!169701 () Bool)

(assert (=> bs!5938 m!169701))

(assert (=> b!140872 d!44367))

(declare-fun b!141339 () Bool)

(declare-fun e!92123 () Option!181)

(assert (=> b!141339 (= e!92123 (getValueByKey!175 (t!6360 (toList!889 lt!73391)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141338 () Bool)

(declare-fun e!92122 () Option!181)

(assert (=> b!141338 (= e!92122 e!92123)))

(declare-fun c!26574 () Bool)

(assert (=> b!141338 (= c!26574 (and ((_ is Cons!1760) (toList!889 lt!73391)) (not (= (_1!1352 (h!2367 (toList!889 lt!73391))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141340 () Bool)

(assert (=> b!141340 (= e!92123 None!179)))

(declare-fun b!141337 () Bool)

(assert (=> b!141337 (= e!92122 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73391)))))))

(declare-fun d!44369 () Bool)

(declare-fun c!26573 () Bool)

(assert (=> d!44369 (= c!26573 (and ((_ is Cons!1760) (toList!889 lt!73391)) (= (_1!1352 (h!2367 (toList!889 lt!73391))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44369 (= (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000) e!92122)))

(assert (= (and d!44369 c!26573) b!141337))

(assert (= (and d!44369 (not c!26573)) b!141338))

(assert (= (and b!141338 c!26574) b!141339))

(assert (= (and b!141338 (not c!26574)) b!141340))

(declare-fun m!169703 () Bool)

(assert (=> b!141339 m!169703))

(assert (=> b!140872 d!44369))

(declare-fun d!44371 () Bool)

(declare-fun res!67489 () Bool)

(declare-fun e!92124 () Bool)

(assert (=> d!44371 (=> res!67489 e!92124)))

(assert (=> d!44371 (= res!67489 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))))) lt!73443)))))

(assert (=> d!44371 (= (containsKey!179 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443) e!92124)))

(declare-fun b!141341 () Bool)

(declare-fun e!92125 () Bool)

(assert (=> b!141341 (= e!92124 e!92125)))

(declare-fun res!67490 () Bool)

(assert (=> b!141341 (=> (not res!67490) (not e!92125))))

(assert (=> b!141341 (= res!67490 (and (or (not ((_ is Cons!1760) (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))))) (bvsle (_1!1352 (h!2367 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))))) lt!73443)) ((_ is Cons!1760) (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))) (bvslt (_1!1352 (h!2367 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))))) lt!73443)))))

(declare-fun b!141342 () Bool)

(assert (=> b!141342 (= e!92125 (containsKey!179 (t!6360 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))) lt!73443))))

(assert (= (and d!44371 (not res!67489)) b!141341))

(assert (= (and b!141341 res!67490) b!141342))

(declare-fun m!169705 () Bool)

(assert (=> b!141342 m!169705))

(assert (=> d!43959 d!44371))

(declare-fun bm!15683 () Bool)

(declare-fun call!15686 () Bool)

(declare-fun c!26575 () Bool)

(assert (=> bm!15683 (= call!15686 (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73341)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26575 (Cons!1759 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000) Nil!1760) Nil!1760)))))

(declare-fun b!141344 () Bool)

(declare-fun e!92127 () Bool)

(declare-fun e!92128 () Bool)

(assert (=> b!141344 (= e!92127 e!92128)))

(assert (=> b!141344 (= c!26575 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(declare-fun b!141345 () Bool)

(assert (=> b!141345 (= e!92128 call!15686)))

(declare-fun d!44373 () Bool)

(declare-fun res!67493 () Bool)

(declare-fun e!92129 () Bool)

(assert (=> d!44373 (=> res!67493 e!92129)))

(assert (=> d!44373 (= res!67493 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(assert (=> d!44373 (= (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73341)) #b00000000000000000000000000000000 Nil!1760) e!92129)))

(declare-fun b!141343 () Bool)

(declare-fun e!92126 () Bool)

(assert (=> b!141343 (= e!92126 (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(declare-fun b!141346 () Bool)

(assert (=> b!141346 (= e!92129 e!92127)))

(declare-fun res!67491 () Bool)

(assert (=> b!141346 (=> (not res!67491) (not e!92127))))

(assert (=> b!141346 (= res!67491 (not e!92126))))

(declare-fun res!67492 () Bool)

(assert (=> b!141346 (=> (not res!67492) (not e!92126))))

(assert (=> b!141346 (= res!67492 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(declare-fun b!141347 () Bool)

(assert (=> b!141347 (= e!92128 call!15686)))

(assert (= (and d!44373 (not res!67493)) b!141346))

(assert (= (and b!141346 res!67492) b!141343))

(assert (= (and b!141346 res!67491) b!141344))

(assert (= (and b!141344 c!26575) b!141345))

(assert (= (and b!141344 (not c!26575)) b!141347))

(assert (= (or b!141345 b!141347) bm!15683))

(declare-fun m!169707 () Bool)

(assert (=> bm!15683 m!169707))

(declare-fun m!169709 () Bool)

(assert (=> bm!15683 m!169709))

(assert (=> b!141344 m!169707))

(assert (=> b!141344 m!169707))

(declare-fun m!169711 () Bool)

(assert (=> b!141344 m!169711))

(assert (=> b!141343 m!169707))

(assert (=> b!141343 m!169707))

(declare-fun m!169713 () Bool)

(assert (=> b!141343 m!169713))

(assert (=> b!141346 m!169707))

(assert (=> b!141346 m!169707))

(assert (=> b!141346 m!169711))

(assert (=> b!141071 d!44373))

(declare-fun d!44375 () Bool)

(declare-fun e!92130 () Bool)

(assert (=> d!44375 e!92130))

(declare-fun res!67495 () Bool)

(assert (=> d!44375 (=> (not res!67495) (not e!92130))))

(declare-fun lt!74212 () ListLongMap!1747)

(assert (=> d!44375 (= res!67495 (contains!921 lt!74212 (_1!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74213 () List!1764)

(assert (=> d!44375 (= lt!74212 (ListLongMap!1748 lt!74213))))

(declare-fun lt!74210 () Unit!4395)

(declare-fun lt!74211 () Unit!4395)

(assert (=> d!44375 (= lt!74210 lt!74211)))

(assert (=> d!44375 (= (getValueByKey!175 lt!74213 (_1!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44375 (= lt!74211 (lemmaContainsTupThenGetReturnValue!91 lt!74213 (_1!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44375 (= lt!74213 (insertStrictlySorted!93 (toList!889 (ite c!26472 call!15669 (ite c!26475 call!15671 call!15668))) (_1!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44375 (= (+!174 (ite c!26472 call!15669 (ite c!26475 call!15671 call!15668)) (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74212)))

(declare-fun b!141348 () Bool)

(declare-fun res!67494 () Bool)

(assert (=> b!141348 (=> (not res!67494) (not e!92130))))

(assert (=> b!141348 (= res!67494 (= (getValueByKey!175 (toList!889 lt!74212) (_1!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141349 () Bool)

(assert (=> b!141349 (= e!92130 (contains!923 (toList!889 lt!74212) (ite (or c!26472 c!26475) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44375 res!67495) b!141348))

(assert (= (and b!141348 res!67494) b!141349))

(declare-fun m!169715 () Bool)

(assert (=> d!44375 m!169715))

(declare-fun m!169717 () Bool)

(assert (=> d!44375 m!169717))

(declare-fun m!169719 () Bool)

(assert (=> d!44375 m!169719))

(declare-fun m!169721 () Bool)

(assert (=> d!44375 m!169721))

(declare-fun m!169723 () Bool)

(assert (=> b!141348 m!169723))

(declare-fun m!169725 () Bool)

(assert (=> b!141349 m!169725))

(assert (=> bm!15667 d!44375))

(declare-fun d!44377 () Bool)

(assert (=> d!44377 (= (apply!120 lt!73924 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73924) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5939 () Bool)

(assert (= bs!5939 d!44377))

(assert (=> bs!5939 m!166967))

(declare-fun m!169727 () Bool)

(assert (=> bs!5939 m!169727))

(assert (=> bs!5939 m!169727))

(declare-fun m!169729 () Bool)

(assert (=> bs!5939 m!169729))

(assert (=> b!140835 d!44377))

(assert (=> b!140835 d!44093))

(declare-fun lt!74214 () Bool)

(declare-fun d!44379 () Bool)

(assert (=> d!44379 (= lt!74214 (select (content!137 (t!6360 (toList!889 lt!73508))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92131 () Bool)

(assert (=> d!44379 (= lt!74214 e!92131)))

(declare-fun res!67497 () Bool)

(assert (=> d!44379 (=> (not res!67497) (not e!92131))))

(assert (=> d!44379 (= res!67497 ((_ is Cons!1760) (t!6360 (toList!889 lt!73508))))))

(assert (=> d!44379 (= (contains!923 (t!6360 (toList!889 lt!73508)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74214)))

(declare-fun b!141350 () Bool)

(declare-fun e!92132 () Bool)

(assert (=> b!141350 (= e!92131 e!92132)))

(declare-fun res!67496 () Bool)

(assert (=> b!141350 (=> res!67496 e!92132)))

(assert (=> b!141350 (= res!67496 (= (h!2367 (t!6360 (toList!889 lt!73508))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141351 () Bool)

(assert (=> b!141351 (= e!92132 (contains!923 (t!6360 (t!6360 (toList!889 lt!73508))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44379 res!67497) b!141350))

(assert (= (and b!141350 (not res!67496)) b!141351))

(declare-fun m!169731 () Bool)

(assert (=> d!44379 m!169731))

(declare-fun m!169733 () Bool)

(assert (=> d!44379 m!169733))

(declare-fun m!169735 () Bool)

(assert (=> b!141351 m!169735))

(assert (=> b!140421 d!44379))

(declare-fun b!141352 () Bool)

(declare-fun e!92134 () (_ BitVec 32))

(declare-fun call!15687 () (_ BitVec 32))

(assert (=> b!141352 (= e!92134 (bvadd #b00000000000000000000000000000001 call!15687))))

(declare-fun b!141353 () Bool)

(assert (=> b!141353 (= e!92134 call!15687)))

(declare-fun b!141354 () Bool)

(declare-fun e!92133 () (_ BitVec 32))

(assert (=> b!141354 (= e!92133 e!92134)))

(declare-fun c!26577 () Bool)

(assert (=> b!141354 (= c!26577 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141355 () Bool)

(assert (=> b!141355 (= e!92133 #b00000000000000000000000000000000)))

(declare-fun d!44381 () Bool)

(declare-fun lt!74215 () (_ BitVec 32))

(assert (=> d!44381 (and (bvsge lt!74215 #b00000000000000000000000000000000) (bvsle lt!74215 (bvsub (size!2586 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!44381 (= lt!74215 e!92133)))

(declare-fun c!26576 () Bool)

(assert (=> d!44381 (= c!26576 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!44381 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 (_2!1353 lt!73223))) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!44381 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))) lt!74215)))

(declare-fun bm!15684 () Bool)

(assert (=> bm!15684 (= call!15687 (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (= (and d!44381 c!26576) b!141355))

(assert (= (and d!44381 (not c!26576)) b!141354))

(assert (= (and b!141354 c!26577) b!141352))

(assert (= (and b!141354 (not c!26577)) b!141353))

(assert (= (or b!141352 b!141353) bm!15684))

(declare-fun m!169737 () Bool)

(assert (=> b!141354 m!169737))

(assert (=> b!141354 m!169737))

(declare-fun m!169739 () Bool)

(assert (=> b!141354 m!169739))

(declare-fun m!169741 () Bool)

(assert (=> bm!15684 m!169741))

(assert (=> bm!15653 d!44381))

(assert (=> d!43945 d!43661))

(declare-fun d!44383 () Bool)

(assert (=> d!44383 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun bs!5940 () Bool)

(assert (= bs!5940 d!44383))

(assert (=> bs!5940 m!167485))

(declare-fun m!169743 () Bool)

(assert (=> bs!5940 m!169743))

(assert (=> b!140288 d!44383))

(assert (=> b!140288 d!43657))

(declare-fun d!44385 () Bool)

(assert (=> d!44385 (= (apply!120 lt!73863 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73863) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5941 () Bool)

(assert (= bs!5941 d!44385))

(declare-fun m!169745 () Bool)

(assert (=> bs!5941 m!169745))

(assert (=> bs!5941 m!169745))

(declare-fun m!169747 () Bool)

(assert (=> bs!5941 m!169747))

(assert (=> b!140754 d!44385))

(assert (=> b!140265 d!44311))

(declare-fun d!44387 () Bool)

(assert (=> d!44387 (= (get!1538 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43893 d!44387))

(declare-fun b!141358 () Bool)

(declare-fun e!92136 () Option!181)

(assert (=> b!141358 (= e!92136 (getValueByKey!175 (t!6360 (toList!889 lt!73450)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141357 () Bool)

(declare-fun e!92135 () Option!181)

(assert (=> b!141357 (= e!92135 e!92136)))

(declare-fun c!26579 () Bool)

(assert (=> b!141357 (= c!26579 (and ((_ is Cons!1760) (toList!889 lt!73450)) (not (= (_1!1352 (h!2367 (toList!889 lt!73450))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141359 () Bool)

(assert (=> b!141359 (= e!92136 None!179)))

(declare-fun b!141356 () Bool)

(assert (=> b!141356 (= e!92135 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73450)))))))

(declare-fun d!44389 () Bool)

(declare-fun c!26578 () Bool)

(assert (=> d!44389 (= c!26578 (and ((_ is Cons!1760) (toList!889 lt!73450)) (= (_1!1352 (h!2367 (toList!889 lt!73450))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44389 (= (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000) e!92135)))

(assert (= (and d!44389 c!26578) b!141356))

(assert (= (and d!44389 (not c!26578)) b!141357))

(assert (= (and b!141357 c!26579) b!141358))

(assert (= (and b!141357 (not c!26579)) b!141359))

(declare-fun m!169749 () Bool)

(assert (=> b!141358 m!169749))

(assert (=> d!43893 d!44389))

(declare-fun d!44391 () Bool)

(declare-fun res!67498 () Bool)

(declare-fun e!92137 () Bool)

(assert (=> d!44391 (=> res!67498 e!92137)))

(assert (=> d!44391 (= res!67498 (and ((_ is Cons!1760) lt!73536) (= (_1!1352 (h!2367 lt!73536)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44391 (= (containsKey!179 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92137)))

(declare-fun b!141360 () Bool)

(declare-fun e!92138 () Bool)

(assert (=> b!141360 (= e!92137 e!92138)))

(declare-fun res!67499 () Bool)

(assert (=> b!141360 (=> (not res!67499) (not e!92138))))

(assert (=> b!141360 (= res!67499 (and (or (not ((_ is Cons!1760) lt!73536)) (bvsle (_1!1352 (h!2367 lt!73536)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73536) (bvslt (_1!1352 (h!2367 lt!73536)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141361 () Bool)

(assert (=> b!141361 (= e!92138 (containsKey!179 (t!6360 lt!73536) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44391 (not res!67498)) b!141360))

(assert (= (and b!141360 res!67499) b!141361))

(declare-fun m!169751 () Bool)

(assert (=> b!141361 m!169751))

(assert (=> b!140552 d!44391))

(declare-fun d!44393 () Bool)

(assert (=> d!44393 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5942 () Bool)

(assert (= bs!5942 d!44393))

(assert (=> bs!5942 m!168997))

(declare-fun m!169753 () Bool)

(assert (=> bs!5942 m!169753))

(assert (=> b!140922 d!44393))

(declare-fun b!141364 () Bool)

(declare-fun e!92140 () Option!181)

(assert (=> b!141364 (= e!92140 (getValueByKey!175 (t!6360 (toList!889 lt!73441)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141363 () Bool)

(declare-fun e!92139 () Option!181)

(assert (=> b!141363 (= e!92139 e!92140)))

(declare-fun c!26581 () Bool)

(assert (=> b!141363 (= c!26581 (and ((_ is Cons!1760) (toList!889 lt!73441)) (not (= (_1!1352 (h!2367 (toList!889 lt!73441))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141365 () Bool)

(assert (=> b!141365 (= e!92140 None!179)))

(declare-fun b!141362 () Bool)

(assert (=> b!141362 (= e!92139 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73441)))))))

(declare-fun d!44395 () Bool)

(declare-fun c!26580 () Bool)

(assert (=> d!44395 (= c!26580 (and ((_ is Cons!1760) (toList!889 lt!73441)) (= (_1!1352 (h!2367 (toList!889 lt!73441))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44395 (= (getValueByKey!175 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000) e!92139)))

(assert (= (and d!44395 c!26580) b!141362))

(assert (= (and d!44395 (not c!26580)) b!141363))

(assert (= (and b!141363 c!26581) b!141364))

(assert (= (and b!141363 (not c!26581)) b!141365))

(declare-fun m!169755 () Bool)

(assert (=> b!141364 m!169755))

(assert (=> b!140922 d!44395))

(declare-fun d!44397 () Bool)

(assert (=> d!44397 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74216 () Unit!4395)

(assert (=> d!44397 (= lt!74216 (choose!868 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92141 () Bool)

(assert (=> d!44397 e!92141))

(declare-fun res!67500 () Bool)

(assert (=> d!44397 (=> (not res!67500) (not e!92141))))

(assert (=> d!44397 (= res!67500 (isStrictlySorted!320 (toList!889 lt!73482)))))

(assert (=> d!44397 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74216)))

(declare-fun b!141366 () Bool)

(assert (=> b!141366 (= e!92141 (containsKey!179 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44397 res!67500) b!141366))

(assert (=> d!44397 m!167643))

(assert (=> d!44397 m!167643))

(assert (=> d!44397 m!167645))

(declare-fun m!169757 () Bool)

(assert (=> d!44397 m!169757))

(declare-fun m!169759 () Bool)

(assert (=> d!44397 m!169759))

(assert (=> b!141366 m!167639))

(assert (=> b!140272 d!44397))

(declare-fun d!44399 () Bool)

(assert (=> d!44399 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5943 () Bool)

(assert (= bs!5943 d!44399))

(assert (=> bs!5943 m!167643))

(declare-fun m!169761 () Bool)

(assert (=> bs!5943 m!169761))

(assert (=> b!140272 d!44399))

(assert (=> b!140272 d!44247))

(assert (=> b!140919 d!43965))

(declare-fun b!141367 () Bool)

(declare-fun lt!74218 () SeekEntryResult!289)

(assert (=> b!141367 (and (bvsge (index!3321 lt!74218) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74218) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67501 () Bool)

(assert (=> b!141367 (= res!67501 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74218)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92145 () Bool)

(assert (=> b!141367 (=> res!67501 e!92145)))

(declare-fun b!141368 () Bool)

(assert (=> b!141368 (and (bvsge (index!3321 lt!74218) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74218) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67503 () Bool)

(assert (=> b!141368 (= res!67503 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74218)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> b!141368 (=> res!67503 e!92145)))

(declare-fun e!92146 () Bool)

(assert (=> b!141368 (= e!92146 e!92145)))

(declare-fun d!44401 () Bool)

(declare-fun e!92144 () Bool)

(assert (=> d!44401 e!92144))

(declare-fun c!26582 () Bool)

(assert (=> d!44401 (= c!26582 (and ((_ is Intermediate!289) lt!74218) (undefined!1101 lt!74218)))))

(declare-fun e!92143 () SeekEntryResult!289)

(assert (=> d!44401 (= lt!74218 e!92143)))

(declare-fun c!26583 () Bool)

(assert (=> d!44401 (= c!26583 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!74217 () (_ BitVec 64))

(assert (=> d!44401 (= lt!74217 (select (arr!2314 (_keys!4699 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16))))))

(assert (=> d!44401 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44401 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74218)))

(declare-fun b!141369 () Bool)

(declare-fun e!92142 () SeekEntryResult!289)

(assert (=> b!141369 (= e!92142 (Intermediate!289 false (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!141370 () Bool)

(assert (=> b!141370 (= e!92144 e!92146)))

(declare-fun res!67502 () Bool)

(assert (=> b!141370 (= res!67502 (and ((_ is Intermediate!289) lt!74218) (not (undefined!1101 lt!74218)) (bvslt (x!16146 lt!74218) #b01111111111111111111111111111110) (bvsge (x!16146 lt!74218) #b00000000000000000000000000000000) (bvsge (x!16146 lt!74218) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141370 (=> (not res!67502) (not e!92146))))

(declare-fun b!141371 () Bool)

(assert (=> b!141371 (= e!92144 (bvsge (x!16146 lt!74218) #b01111111111111111111111111111110))))

(declare-fun b!141372 () Bool)

(assert (=> b!141372 (and (bvsge (index!3321 lt!74218) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74218) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!141372 (= e!92145 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74218)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141373 () Bool)

(assert (=> b!141373 (= e!92142 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!141374 () Bool)

(assert (=> b!141374 (= e!92143 (Intermediate!289 true (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!141375 () Bool)

(assert (=> b!141375 (= e!92143 e!92142)))

(declare-fun c!26584 () Bool)

(assert (=> b!141375 (= c!26584 (or (= lt!74217 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (= (bvadd lt!74217 lt!74217) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44401 c!26583) b!141374))

(assert (= (and d!44401 (not c!26583)) b!141375))

(assert (= (and b!141375 c!26584) b!141369))

(assert (= (and b!141375 (not c!26584)) b!141373))

(assert (= (and d!44401 c!26582) b!141371))

(assert (= (and d!44401 (not c!26582)) b!141370))

(assert (= (and b!141370 res!67502) b!141368))

(assert (= (and b!141368 (not res!67503)) b!141367))

(assert (= (and b!141367 (not res!67501)) b!141372))

(declare-fun m!169763 () Bool)

(assert (=> b!141372 m!169763))

(assert (=> b!141373 m!169047))

(declare-fun m!169765 () Bool)

(assert (=> b!141373 m!169765))

(assert (=> b!141373 m!169765))

(assert (=> b!141373 m!166733))

(declare-fun m!169767 () Bool)

(assert (=> b!141373 m!169767))

(assert (=> b!141367 m!169763))

(assert (=> d!44401 m!169047))

(declare-fun m!169769 () Bool)

(assert (=> d!44401 m!169769))

(assert (=> d!44401 m!166961))

(assert (=> b!141368 m!169763))

(assert (=> b!140974 d!44401))

(declare-fun d!44403 () Bool)

(declare-fun lt!74221 () (_ BitVec 32))

(assert (=> d!44403 (and (bvsge lt!74221 #b00000000000000000000000000000000) (bvslt lt!74221 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!44403 (= lt!74221 (choose!52 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)))))

(assert (=> d!44403 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44403 (= (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) lt!74221)))

(declare-fun bs!5944 () Bool)

(assert (= bs!5944 d!44403))

(assert (=> bs!5944 m!167211))

(declare-fun m!169771 () Bool)

(assert (=> bs!5944 m!169771))

(assert (=> bs!5944 m!166961))

(assert (=> b!140974 d!44403))

(declare-fun e!92148 () Option!181)

(declare-fun b!141378 () Bool)

(assert (=> b!141378 (= e!92148 (getValueByKey!175 (t!6360 (t!6360 lt!73543)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141377 () Bool)

(declare-fun e!92147 () Option!181)

(assert (=> b!141377 (= e!92147 e!92148)))

(declare-fun c!26586 () Bool)

(assert (=> b!141377 (= c!26586 (and ((_ is Cons!1760) (t!6360 lt!73543)) (not (= (_1!1352 (h!2367 (t!6360 lt!73543))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141379 () Bool)

(assert (=> b!141379 (= e!92148 None!179)))

(declare-fun b!141376 () Bool)

(assert (=> b!141376 (= e!92147 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73543)))))))

(declare-fun d!44405 () Bool)

(declare-fun c!26585 () Bool)

(assert (=> d!44405 (= c!26585 (and ((_ is Cons!1760) (t!6360 lt!73543)) (= (_1!1352 (h!2367 (t!6360 lt!73543))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44405 (= (getValueByKey!175 (t!6360 lt!73543) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92147)))

(assert (= (and d!44405 c!26585) b!141376))

(assert (= (and d!44405 (not c!26585)) b!141377))

(assert (= (and b!141377 c!26586) b!141378))

(assert (= (and b!141377 (not c!26586)) b!141379))

(declare-fun m!169773 () Bool)

(assert (=> b!141378 m!169773))

(assert (=> b!140661 d!44405))

(declare-fun b!141382 () Bool)

(declare-fun e!92150 () Option!181)

(assert (=> b!141382 (= e!92150 (getValueByKey!175 (t!6360 (toList!889 lt!74000)) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141381 () Bool)

(declare-fun e!92149 () Option!181)

(assert (=> b!141381 (= e!92149 e!92150)))

(declare-fun c!26588 () Bool)

(assert (=> b!141381 (= c!26588 (and ((_ is Cons!1760) (toList!889 lt!74000)) (not (= (_1!1352 (h!2367 (toList!889 lt!74000))) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141383 () Bool)

(assert (=> b!141383 (= e!92150 None!179)))

(declare-fun b!141380 () Bool)

(assert (=> b!141380 (= e!92149 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74000)))))))

(declare-fun c!26587 () Bool)

(declare-fun d!44407 () Bool)

(assert (=> d!44407 (= c!26587 (and ((_ is Cons!1760) (toList!889 lt!74000)) (= (_1!1352 (h!2367 (toList!889 lt!74000))) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44407 (= (getValueByKey!175 (toList!889 lt!74000) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) e!92149)))

(assert (= (and d!44407 c!26587) b!141380))

(assert (= (and d!44407 (not c!26587)) b!141381))

(assert (= (and b!141381 c!26588) b!141382))

(assert (= (and b!141381 (not c!26588)) b!141383))

(declare-fun m!169775 () Bool)

(assert (=> b!141382 m!169775))

(assert (=> b!140912 d!44407))

(declare-fun d!44409 () Bool)

(assert (=> d!44409 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73140) lt!73151)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73140) lt!73151))))))

(declare-fun bs!5945 () Bool)

(assert (= bs!5945 d!44409))

(assert (=> bs!5945 m!167521))

(declare-fun m!169777 () Bool)

(assert (=> bs!5945 m!169777))

(assert (=> b!141049 d!44409))

(assert (=> b!141049 d!43719))

(assert (=> d!44081 d!43905))

(assert (=> d!44081 d!43525))

(assert (=> d!44081 d!43509))

(declare-fun d!44411 () Bool)

(assert (=> d!44411 (= (isEmpty!422 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!180) (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43843 d!44411))

(assert (=> b!140875 d!43895))

(declare-fun d!44413 () Bool)

(assert (=> d!44413 (= (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257)) (not (isEmpty!422 (getValueByKey!175 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257))))))

(declare-fun bs!5946 () Bool)

(assert (= bs!5946 d!44413))

(assert (=> bs!5946 m!169291))

(declare-fun m!169779 () Bool)

(assert (=> bs!5946 m!169779))

(assert (=> b!141087 d!44413))

(declare-fun b!141386 () Bool)

(declare-fun e!92152 () Option!181)

(assert (=> b!141386 (= e!92152 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) lt!73257))))

(declare-fun b!141385 () Bool)

(declare-fun e!92151 () Option!181)

(assert (=> b!141385 (= e!92151 e!92152)))

(declare-fun c!26590 () Bool)

(assert (=> b!141385 (= c!26590 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73257))))))

(declare-fun b!141387 () Bool)

(assert (=> b!141387 (= e!92152 None!179)))

(declare-fun b!141384 () Bool)

(assert (=> b!141384 (= e!92151 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))))

(declare-fun d!44415 () Bool)

(declare-fun c!26589 () Bool)

(assert (=> d!44415 (= c!26589 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73257)))))

(assert (=> d!44415 (= (getValueByKey!175 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257) e!92151)))

(assert (= (and d!44415 c!26589) b!141384))

(assert (= (and d!44415 (not c!26589)) b!141385))

(assert (= (and b!141385 c!26590) b!141386))

(assert (= (and b!141385 (not c!26590)) b!141387))

(declare-fun m!169781 () Bool)

(assert (=> b!141386 m!169781))

(assert (=> b!141087 d!44415))

(assert (=> d!43941 d!43569))

(assert (=> d!43941 d!43563))

(declare-fun b!141390 () Bool)

(declare-fun e!92154 () Option!181)

(assert (=> b!141390 (= e!92154 (getValueByKey!175 (t!6360 (t!6360 lt!73547)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141389 () Bool)

(declare-fun e!92153 () Option!181)

(assert (=> b!141389 (= e!92153 e!92154)))

(declare-fun c!26592 () Bool)

(assert (=> b!141389 (= c!26592 (and ((_ is Cons!1760) (t!6360 lt!73547)) (not (= (_1!1352 (h!2367 (t!6360 lt!73547))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141391 () Bool)

(assert (=> b!141391 (= e!92154 None!179)))

(declare-fun b!141388 () Bool)

(assert (=> b!141388 (= e!92153 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73547)))))))

(declare-fun c!26591 () Bool)

(declare-fun d!44417 () Bool)

(assert (=> d!44417 (= c!26591 (and ((_ is Cons!1760) (t!6360 lt!73547)) (= (_1!1352 (h!2367 (t!6360 lt!73547))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44417 (= (getValueByKey!175 (t!6360 lt!73547) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92153)))

(assert (= (and d!44417 c!26591) b!141388))

(assert (= (and d!44417 (not c!26591)) b!141389))

(assert (= (and b!141389 c!26592) b!141390))

(assert (= (and b!141389 (not c!26592)) b!141391))

(declare-fun m!169783 () Bool)

(assert (=> b!141390 m!169783))

(assert (=> b!140932 d!44417))

(declare-fun d!44419 () Bool)

(declare-fun res!67504 () Bool)

(declare-fun e!92155 () Bool)

(assert (=> d!44419 (=> res!67504 e!92155)))

(assert (=> d!44419 (= res!67504 (and ((_ is Cons!1760) lt!73379) (= (_1!1352 (h!2367 lt!73379)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44419 (= (containsKey!179 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92155)))

(declare-fun b!141392 () Bool)

(declare-fun e!92156 () Bool)

(assert (=> b!141392 (= e!92155 e!92156)))

(declare-fun res!67505 () Bool)

(assert (=> b!141392 (=> (not res!67505) (not e!92156))))

(assert (=> b!141392 (= res!67505 (and (or (not ((_ is Cons!1760) lt!73379)) (bvsle (_1!1352 (h!2367 lt!73379)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73379) (bvslt (_1!1352 (h!2367 lt!73379)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141393 () Bool)

(assert (=> b!141393 (= e!92156 (containsKey!179 (t!6360 lt!73379) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44419 (not res!67504)) b!141392))

(assert (= (and b!141392 res!67505) b!141393))

(declare-fun m!169785 () Bool)

(assert (=> b!141393 m!169785))

(assert (=> b!140470 d!44419))

(declare-fun d!44421 () Bool)

(declare-fun c!26593 () Bool)

(assert (=> d!44421 (= c!26593 ((_ is Nil!1761) (toList!889 lt!73470)))))

(declare-fun e!92157 () (InoxSet tuple2!2684))

(assert (=> d!44421 (= (content!137 (toList!889 lt!73470)) e!92157)))

(declare-fun b!141394 () Bool)

(assert (=> b!141394 (= e!92157 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!141395 () Bool)

(assert (=> b!141395 (= e!92157 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73470)) true) (content!137 (t!6360 (toList!889 lt!73470)))))))

(assert (= (and d!44421 c!26593) b!141394))

(assert (= (and d!44421 (not c!26593)) b!141395))

(declare-fun m!169787 () Bool)

(assert (=> b!141395 m!169787))

(declare-fun m!169789 () Bool)

(assert (=> b!141395 m!169789))

(assert (=> d!43963 d!44421))

(declare-fun d!44423 () Bool)

(assert (=> d!44423 (= (apply!120 lt!73779 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73779) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5947 () Bool)

(assert (= bs!5947 d!44423))

(declare-fun m!169791 () Bool)

(assert (=> bs!5947 m!169791))

(assert (=> bs!5947 m!169791))

(declare-fun m!169793 () Bool)

(assert (=> bs!5947 m!169793))

(assert (=> b!140617 d!44423))

(declare-fun e!92159 () Option!181)

(declare-fun b!141398 () Bool)

(assert (=> b!141398 (= e!92159 (getValueByKey!175 (t!6360 (toList!889 lt!73986)) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141397 () Bool)

(declare-fun e!92158 () Option!181)

(assert (=> b!141397 (= e!92158 e!92159)))

(declare-fun c!26595 () Bool)

(assert (=> b!141397 (= c!26595 (and ((_ is Cons!1760) (toList!889 lt!73986)) (not (= (_1!1352 (h!2367 (toList!889 lt!73986))) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141399 () Bool)

(assert (=> b!141399 (= e!92159 None!179)))

(declare-fun b!141396 () Bool)

(assert (=> b!141396 (= e!92158 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73986)))))))

(declare-fun d!44425 () Bool)

(declare-fun c!26594 () Bool)

(assert (=> d!44425 (= c!26594 (and ((_ is Cons!1760) (toList!889 lt!73986)) (= (_1!1352 (h!2367 (toList!889 lt!73986))) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44425 (= (getValueByKey!175 (toList!889 lt!73986) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) e!92158)))

(assert (= (and d!44425 c!26594) b!141396))

(assert (= (and d!44425 (not c!26594)) b!141397))

(assert (= (and b!141397 c!26595) b!141398))

(assert (= (and b!141397 (not c!26595)) b!141399))

(declare-fun m!169795 () Bool)

(assert (=> b!141398 m!169795))

(assert (=> b!140905 d!44425))

(declare-fun d!44427 () Bool)

(assert (=> d!44427 (isDefined!129 (getValueByKey!175 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!74222 () Unit!4395)

(assert (=> d!44427 (= lt!74222 (choose!868 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!92160 () Bool)

(assert (=> d!44427 e!92160))

(declare-fun res!67506 () Bool)

(assert (=> d!44427 (=> (not res!67506) (not e!92160))))

(assert (=> d!44427 (= res!67506 (isStrictlySorted!320 (toList!889 lt!73546)))))

(assert (=> d!44427 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74222)))

(declare-fun b!141400 () Bool)

(assert (=> b!141400 (= e!92160 (containsKey!179 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44427 res!67506) b!141400))

(assert (=> d!44427 m!167473))

(assert (=> d!44427 m!167473))

(assert (=> d!44427 m!169007))

(declare-fun m!169797 () Bool)

(assert (=> d!44427 m!169797))

(declare-fun m!169799 () Bool)

(assert (=> d!44427 m!169799))

(assert (=> b!141400 m!169003))

(assert (=> b!140927 d!44427))

(assert (=> b!140927 d!44259))

(assert (=> b!140927 d!43981))

(declare-fun d!44429 () Bool)

(assert (=> d!44429 (= (get!1537 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141046 d!44429))

(declare-fun b!141401 () Bool)

(declare-fun res!67508 () Bool)

(declare-fun e!92165 () Bool)

(assert (=> b!141401 (=> (not res!67508) (not e!92165))))

(declare-fun lt!74225 () ListLongMap!1747)

(assert (=> b!141401 (= res!67508 (not (contains!921 lt!74225 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141402 () Bool)

(assert (=> b!141402 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!141402 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219))))))

(declare-fun e!92161 () Bool)

(assert (=> b!141402 (= e!92161 (= (apply!120 lt!74225 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141403 () Bool)

(declare-fun e!92167 () ListLongMap!1747)

(declare-fun e!92164 () ListLongMap!1747)

(assert (=> b!141403 (= e!92167 e!92164)))

(declare-fun c!26598 () Bool)

(assert (=> b!141403 (= c!26598 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141404 () Bool)

(declare-fun e!92162 () Bool)

(assert (=> b!141404 (= e!92162 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141404 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!44431 () Bool)

(assert (=> d!44431 e!92165))

(declare-fun res!67510 () Bool)

(assert (=> d!44431 (=> (not res!67510) (not e!92165))))

(assert (=> d!44431 (= res!67510 (not (contains!921 lt!74225 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44431 (= lt!74225 e!92167)))

(declare-fun c!26599 () Bool)

(assert (=> d!44431 (= c!26599 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44431 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44431 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!74225)))

(declare-fun b!141405 () Bool)

(declare-fun e!92163 () Bool)

(declare-fun e!92166 () Bool)

(assert (=> b!141405 (= e!92163 e!92166)))

(declare-fun c!26596 () Bool)

(assert (=> b!141405 (= c!26596 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141406 () Bool)

(assert (=> b!141406 (= e!92166 (= lt!74225 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141407 () Bool)

(assert (=> b!141407 (= e!92163 e!92161)))

(assert (=> b!141407 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67509 () Bool)

(assert (=> b!141407 (= res!67509 (contains!921 lt!74225 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141407 (=> (not res!67509) (not e!92161))))

(declare-fun b!141408 () Bool)

(declare-fun call!15688 () ListLongMap!1747)

(assert (=> b!141408 (= e!92164 call!15688)))

(declare-fun bm!15685 () Bool)

(assert (=> bm!15685 (= call!15688 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141409 () Bool)

(assert (=> b!141409 (= e!92167 (ListLongMap!1748 Nil!1761))))

(declare-fun b!141410 () Bool)

(declare-fun lt!74223 () Unit!4395)

(declare-fun lt!74229 () Unit!4395)

(assert (=> b!141410 (= lt!74223 lt!74229)))

(declare-fun lt!74227 () (_ BitVec 64))

(declare-fun lt!74226 () V!3555)

(declare-fun lt!74228 () (_ BitVec 64))

(declare-fun lt!74224 () ListLongMap!1747)

(assert (=> b!141410 (not (contains!921 (+!174 lt!74224 (tuple2!2685 lt!74228 lt!74226)) lt!74227))))

(assert (=> b!141410 (= lt!74229 (addStillNotContains!66 lt!74224 lt!74228 lt!74226 lt!74227))))

(assert (=> b!141410 (= lt!74227 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141410 (= lt!74226 (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141410 (= lt!74228 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141410 (= lt!74224 call!15688)))

(assert (=> b!141410 (= e!92164 (+!174 call!15688 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141411 () Bool)

(assert (=> b!141411 (= e!92165 e!92163)))

(declare-fun c!26597 () Bool)

(assert (=> b!141411 (= c!26597 e!92162)))

(declare-fun res!67507 () Bool)

(assert (=> b!141411 (=> (not res!67507) (not e!92162))))

(assert (=> b!141411 (= res!67507 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141412 () Bool)

(assert (=> b!141412 (= e!92166 (isEmpty!423 lt!74225))))

(assert (= (and d!44431 c!26599) b!141409))

(assert (= (and d!44431 (not c!26599)) b!141403))

(assert (= (and b!141403 c!26598) b!141410))

(assert (= (and b!141403 (not c!26598)) b!141408))

(assert (= (or b!141410 b!141408) bm!15685))

(assert (= (and d!44431 res!67510) b!141401))

(assert (= (and b!141401 res!67508) b!141411))

(assert (= (and b!141411 res!67507) b!141404))

(assert (= (and b!141411 c!26597) b!141407))

(assert (= (and b!141411 (not c!26597)) b!141405))

(assert (= (and b!141407 res!67509) b!141402))

(assert (= (and b!141405 c!26596) b!141406))

(assert (= (and b!141405 (not c!26596)) b!141412))

(declare-fun b_lambda!6381 () Bool)

(assert (=> (not b_lambda!6381) (not b!141402)))

(assert (=> b!141402 t!6366))

(declare-fun b_and!8857 () Bool)

(assert (= b_and!8853 (and (=> t!6366 result!4203) b_and!8857)))

(assert (=> b!141402 t!6368))

(declare-fun b_and!8859 () Bool)

(assert (= b_and!8855 (and (=> t!6368 result!4205) b_and!8859)))

(declare-fun b_lambda!6383 () Bool)

(assert (=> (not b_lambda!6383) (not b!141410)))

(assert (=> b!141410 t!6366))

(declare-fun b_and!8861 () Bool)

(assert (= b_and!8857 (and (=> t!6366 result!4203) b_and!8861)))

(assert (=> b!141410 t!6368))

(declare-fun b_and!8863 () Bool)

(assert (= b_and!8859 (and (=> t!6368 result!4205) b_and!8863)))

(declare-fun m!169801 () Bool)

(assert (=> b!141406 m!169801))

(assert (=> b!141404 m!167699))

(assert (=> b!141404 m!167699))

(assert (=> b!141404 m!167707))

(declare-fun m!169803 () Bool)

(assert (=> b!141410 m!169803))

(declare-fun m!169805 () Bool)

(assert (=> b!141410 m!169805))

(assert (=> b!141410 m!167699))

(declare-fun m!169807 () Bool)

(assert (=> b!141410 m!169807))

(declare-fun m!169809 () Bool)

(assert (=> b!141410 m!169809))

(assert (=> b!141410 m!166971))

(declare-fun m!169811 () Bool)

(assert (=> b!141410 m!169811))

(assert (=> b!141410 m!169811))

(assert (=> b!141410 m!166971))

(declare-fun m!169813 () Bool)

(assert (=> b!141410 m!169813))

(assert (=> b!141410 m!169803))

(assert (=> b!141407 m!167699))

(assert (=> b!141407 m!167699))

(declare-fun m!169815 () Bool)

(assert (=> b!141407 m!169815))

(assert (=> b!141403 m!167699))

(assert (=> b!141403 m!167699))

(assert (=> b!141403 m!167707))

(assert (=> b!141402 m!167699))

(assert (=> b!141402 m!167699))

(declare-fun m!169817 () Bool)

(assert (=> b!141402 m!169817))

(assert (=> b!141402 m!166971))

(assert (=> b!141402 m!169811))

(assert (=> b!141402 m!169811))

(assert (=> b!141402 m!166971))

(assert (=> b!141402 m!169813))

(declare-fun m!169819 () Bool)

(assert (=> b!141412 m!169819))

(declare-fun m!169821 () Bool)

(assert (=> d!44431 m!169821))

(assert (=> d!44431 m!166961))

(declare-fun m!169823 () Bool)

(assert (=> b!141401 m!169823))

(assert (=> bm!15685 m!169801))

(assert (=> bm!15576 d!44431))

(declare-fun d!44433 () Bool)

(assert (=> d!44433 (= (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457)) (not (isEmpty!422 (getValueByKey!175 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457))))))

(declare-fun bs!5948 () Bool)

(assert (= bs!5948 d!44433))

(assert (=> bs!5948 m!168287))

(declare-fun m!169825 () Bool)

(assert (=> bs!5948 m!169825))

(assert (=> b!140593 d!44433))

(declare-fun e!92169 () Option!181)

(declare-fun b!141415 () Bool)

(assert (=> b!141415 (= e!92169 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))) lt!73457))))

(declare-fun b!141414 () Bool)

(declare-fun e!92168 () Option!181)

(assert (=> b!141414 (= e!92168 e!92169)))

(declare-fun c!26601 () Bool)

(assert (=> b!141414 (= c!26601 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))) lt!73457))))))

(declare-fun b!141416 () Bool)

(assert (=> b!141416 (= e!92169 None!179)))

(declare-fun b!141413 () Bool)

(assert (=> b!141413 (= e!92168 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))))

(declare-fun d!44435 () Bool)

(declare-fun c!26600 () Bool)

(assert (=> d!44435 (= c!26600 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))) lt!73457)))))

(assert (=> d!44435 (= (getValueByKey!175 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457) e!92168)))

(assert (= (and d!44435 c!26600) b!141413))

(assert (= (and d!44435 (not c!26600)) b!141414))

(assert (= (and b!141414 c!26601) b!141415))

(assert (= (and b!141414 (not c!26601)) b!141416))

(declare-fun m!169827 () Bool)

(assert (=> b!141415 m!169827))

(assert (=> b!140593 d!44435))

(assert (=> b!140683 d!43915))

(declare-fun d!44437 () Bool)

(declare-fun e!92170 () Bool)

(assert (=> d!44437 e!92170))

(declare-fun res!67512 () Bool)

(assert (=> d!44437 (=> (not res!67512) (not e!92170))))

(declare-fun lt!74232 () ListLongMap!1747)

(assert (=> d!44437 (= res!67512 (contains!921 lt!74232 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))))))

(declare-fun lt!74233 () List!1764)

(assert (=> d!44437 (= lt!74232 (ListLongMap!1748 lt!74233))))

(declare-fun lt!74230 () Unit!4395)

(declare-fun lt!74231 () Unit!4395)

(assert (=> d!44437 (= lt!74230 lt!74231)))

(assert (=> d!44437 (= (getValueByKey!175 lt!74233 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44437 (= lt!74231 (lemmaContainsTupThenGetReturnValue!91 lt!74233 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44437 (= lt!74233 (insertStrictlySorted!93 (toList!889 call!15651) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44437 (= (+!174 call!15651 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))) lt!74232)))

(declare-fun b!141417 () Bool)

(declare-fun res!67511 () Bool)

(assert (=> b!141417 (=> (not res!67511) (not e!92170))))

(assert (=> b!141417 (= res!67511 (= (getValueByKey!175 (toList!889 lt!74232) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))))))

(declare-fun b!141418 () Bool)

(assert (=> b!141418 (= e!92170 (contains!923 (toList!889 lt!74232) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73223)))))))

(assert (= (and d!44437 res!67512) b!141417))

(assert (= (and b!141417 res!67511) b!141418))

(declare-fun m!169829 () Bool)

(assert (=> d!44437 m!169829))

(declare-fun m!169831 () Bool)

(assert (=> d!44437 m!169831))

(declare-fun m!169833 () Bool)

(assert (=> d!44437 m!169833))

(declare-fun m!169835 () Bool)

(assert (=> d!44437 m!169835))

(declare-fun m!169837 () Bool)

(assert (=> b!141417 m!169837))

(declare-fun m!169839 () Bool)

(assert (=> b!141418 m!169839))

(assert (=> b!140868 d!44437))

(declare-fun b!141421 () Bool)

(declare-fun e!92172 () Option!181)

(assert (=> b!141421 (= e!92172 (getValueByKey!175 (t!6360 (toList!889 lt!74098)) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!141420 () Bool)

(declare-fun e!92171 () Option!181)

(assert (=> b!141420 (= e!92171 e!92172)))

(declare-fun c!26603 () Bool)

(assert (=> b!141420 (= c!26603 (and ((_ is Cons!1760) (toList!889 lt!74098)) (not (= (_1!1352 (h!2367 (toList!889 lt!74098))) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun b!141422 () Bool)

(assert (=> b!141422 (= e!92172 None!179)))

(declare-fun b!141419 () Bool)

(assert (=> b!141419 (= e!92171 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74098)))))))

(declare-fun d!44439 () Bool)

(declare-fun c!26602 () Bool)

(assert (=> d!44439 (= c!26602 (and ((_ is Cons!1760) (toList!889 lt!74098)) (= (_1!1352 (h!2367 (toList!889 lt!74098))) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44439 (= (getValueByKey!175 (toList!889 lt!74098) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!92171)))

(assert (= (and d!44439 c!26602) b!141419))

(assert (= (and d!44439 (not c!26602)) b!141420))

(assert (= (and b!141420 c!26603) b!141421))

(assert (= (and b!141420 (not c!26603)) b!141422))

(declare-fun m!169841 () Bool)

(assert (=> b!141421 m!169841))

(assert (=> b!141078 d!44439))

(declare-fun e!92174 () Option!181)

(declare-fun b!141425 () Bool)

(assert (=> b!141425 (= e!92174 (getValueByKey!175 (t!6360 (toList!889 lt!73741)) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141424 () Bool)

(declare-fun e!92173 () Option!181)

(assert (=> b!141424 (= e!92173 e!92174)))

(declare-fun c!26605 () Bool)

(assert (=> b!141424 (= c!26605 (and ((_ is Cons!1760) (toList!889 lt!73741)) (not (= (_1!1352 (h!2367 (toList!889 lt!73741))) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141426 () Bool)

(assert (=> b!141426 (= e!92174 None!179)))

(declare-fun b!141423 () Bool)

(assert (=> b!141423 (= e!92173 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73741)))))))

(declare-fun d!44441 () Bool)

(declare-fun c!26604 () Bool)

(assert (=> d!44441 (= c!26604 (and ((_ is Cons!1760) (toList!889 lt!73741)) (= (_1!1352 (h!2367 (toList!889 lt!73741))) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44441 (= (getValueByKey!175 (toList!889 lt!73741) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) e!92173)))

(assert (= (and d!44441 c!26604) b!141423))

(assert (= (and d!44441 (not c!26604)) b!141424))

(assert (= (and b!141424 c!26605) b!141425))

(assert (= (and b!141424 (not c!26605)) b!141426))

(declare-fun m!169843 () Bool)

(assert (=> b!141425 m!169843))

(assert (=> b!140580 d!44441))

(declare-fun d!44443 () Bool)

(assert (=> d!44443 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140331 d!44443))

(declare-fun d!44445 () Bool)

(declare-fun e!92175 () Bool)

(assert (=> d!44445 e!92175))

(declare-fun res!67514 () Bool)

(assert (=> d!44445 (=> (not res!67514) (not e!92175))))

(declare-fun lt!74236 () ListLongMap!1747)

(assert (=> d!44445 (= res!67514 (contains!921 lt!74236 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74237 () List!1764)

(assert (=> d!44445 (= lt!74236 (ListLongMap!1748 lt!74237))))

(declare-fun lt!74234 () Unit!4395)

(declare-fun lt!74235 () Unit!4395)

(assert (=> d!44445 (= lt!74234 lt!74235)))

(assert (=> d!44445 (= (getValueByKey!175 lt!74237 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44445 (= lt!74235 (lemmaContainsTupThenGetReturnValue!91 lt!74237 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44445 (= lt!74237 (insertStrictlySorted!93 (toList!889 call!15634) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44445 (= (+!174 call!15634 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74236)))

(declare-fun b!141427 () Bool)

(declare-fun res!67513 () Bool)

(assert (=> b!141427 (=> (not res!67513) (not e!92175))))

(assert (=> b!141427 (= res!67513 (= (getValueByKey!175 (toList!889 lt!74236) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141428 () Bool)

(assert (=> b!141428 (= e!92175 (contains!923 (toList!889 lt!74236) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44445 res!67514) b!141427))

(assert (= (and b!141427 res!67513) b!141428))

(declare-fun m!169845 () Bool)

(assert (=> d!44445 m!169845))

(declare-fun m!169847 () Bool)

(assert (=> d!44445 m!169847))

(declare-fun m!169849 () Bool)

(assert (=> d!44445 m!169849))

(declare-fun m!169851 () Bool)

(assert (=> d!44445 m!169851))

(declare-fun m!169853 () Bool)

(assert (=> b!141427 m!169853))

(declare-fun m!169855 () Bool)

(assert (=> b!141428 m!169855))

(assert (=> b!140711 d!44445))

(declare-fun d!44447 () Bool)

(declare-fun e!92177 () Bool)

(assert (=> d!44447 e!92177))

(declare-fun res!67515 () Bool)

(assert (=> d!44447 (=> res!67515 e!92177)))

(declare-fun lt!74238 () Bool)

(assert (=> d!44447 (= res!67515 (not lt!74238))))

(declare-fun lt!74241 () Bool)

(assert (=> d!44447 (= lt!74238 lt!74241)))

(declare-fun lt!74239 () Unit!4395)

(declare-fun e!92176 () Unit!4395)

(assert (=> d!44447 (= lt!74239 e!92176)))

(declare-fun c!26606 () Bool)

(assert (=> d!44447 (= c!26606 lt!74241)))

(assert (=> d!44447 (= lt!74241 (containsKey!179 (toList!889 lt!73593) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44447 (= (contains!921 lt!73593 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74238)))

(declare-fun b!141429 () Bool)

(declare-fun lt!74240 () Unit!4395)

(assert (=> b!141429 (= e!92176 lt!74240)))

(assert (=> b!141429 (= lt!74240 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73593) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141429 (isDefined!129 (getValueByKey!175 (toList!889 lt!73593) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141430 () Bool)

(declare-fun Unit!4467 () Unit!4395)

(assert (=> b!141430 (= e!92176 Unit!4467)))

(declare-fun b!141431 () Bool)

(assert (=> b!141431 (= e!92177 (isDefined!129 (getValueByKey!175 (toList!889 lt!73593) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44447 c!26606) b!141429))

(assert (= (and d!44447 (not c!26606)) b!141430))

(assert (= (and d!44447 (not res!67515)) b!141431))

(assert (=> d!44447 m!166967))

(declare-fun m!169857 () Bool)

(assert (=> d!44447 m!169857))

(assert (=> b!141429 m!166967))

(declare-fun m!169859 () Bool)

(assert (=> b!141429 m!169859))

(assert (=> b!141429 m!166967))

(declare-fun m!169861 () Bool)

(assert (=> b!141429 m!169861))

(assert (=> b!141429 m!169861))

(declare-fun m!169863 () Bool)

(assert (=> b!141429 m!169863))

(assert (=> b!141431 m!166967))

(assert (=> b!141431 m!169861))

(assert (=> b!141431 m!169861))

(assert (=> b!141431 m!169863))

(assert (=> b!140266 d!44447))

(declare-fun lt!74242 () Bool)

(declare-fun d!44449 () Bool)

(assert (=> d!44449 (= lt!74242 (select (content!137 (toList!889 lt!74098)) (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun e!92178 () Bool)

(assert (=> d!44449 (= lt!74242 e!92178)))

(declare-fun res!67517 () Bool)

(assert (=> d!44449 (=> (not res!67517) (not e!92178))))

(assert (=> d!44449 (= res!67517 ((_ is Cons!1760) (toList!889 lt!74098)))))

(assert (=> d!44449 (= (contains!923 (toList!889 lt!74098) (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!74242)))

(declare-fun b!141432 () Bool)

(declare-fun e!92179 () Bool)

(assert (=> b!141432 (= e!92178 e!92179)))

(declare-fun res!67516 () Bool)

(assert (=> b!141432 (=> res!67516 e!92179)))

(assert (=> b!141432 (= res!67516 (= (h!2367 (toList!889 lt!74098)) (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun b!141433 () Bool)

(assert (=> b!141433 (= e!92179 (contains!923 (t!6360 (toList!889 lt!74098)) (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!44449 res!67517) b!141432))

(assert (= (and b!141432 (not res!67516)) b!141433))

(declare-fun m!169865 () Bool)

(assert (=> d!44449 m!169865))

(declare-fun m!169867 () Bool)

(assert (=> d!44449 m!169867))

(declare-fun m!169869 () Bool)

(assert (=> b!141433 m!169869))

(assert (=> b!141079 d!44449))

(declare-fun d!44451 () Bool)

(assert (=> d!44451 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5949 () Bool)

(assert (= bs!5949 d!44451))

(assert (=> bs!5949 m!167897))

(declare-fun m!169871 () Bool)

(assert (=> bs!5949 m!169871))

(assert (=> b!140436 d!44451))

(declare-fun b!141436 () Bool)

(declare-fun e!92181 () Option!181)

(assert (=> b!141436 (= e!92181 (getValueByKey!175 (t!6360 (toList!889 lt!73441)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141435 () Bool)

(declare-fun e!92180 () Option!181)

(assert (=> b!141435 (= e!92180 e!92181)))

(declare-fun c!26608 () Bool)

(assert (=> b!141435 (= c!26608 (and ((_ is Cons!1760) (toList!889 lt!73441)) (not (= (_1!1352 (h!2367 (toList!889 lt!73441))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141437 () Bool)

(assert (=> b!141437 (= e!92181 None!179)))

(declare-fun b!141434 () Bool)

(assert (=> b!141434 (= e!92180 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73441)))))))

(declare-fun d!44453 () Bool)

(declare-fun c!26607 () Bool)

(assert (=> d!44453 (= c!26607 (and ((_ is Cons!1760) (toList!889 lt!73441)) (= (_1!1352 (h!2367 (toList!889 lt!73441))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44453 (= (getValueByKey!175 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000) e!92180)))

(assert (= (and d!44453 c!26607) b!141434))

(assert (= (and d!44453 (not c!26607)) b!141435))

(assert (= (and b!141435 c!26608) b!141436))

(assert (= (and b!141435 (not c!26608)) b!141437))

(declare-fun m!169873 () Bool)

(assert (=> b!141436 m!169873))

(assert (=> b!140436 d!44453))

(assert (=> b!140836 d!43605))

(assert (=> d!43833 d!43839))

(assert (=> d!43833 d!43813))

(declare-fun d!44455 () Bool)

(assert (=> d!44455 (contains!921 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) lt!73457)))

(assert (=> d!44455 true))

(declare-fun _$35!390 () Unit!4395)

(assert (=> d!44455 (= (choose!871 lt!73459 lt!73452 (zeroValue!2790 newMap!16) lt!73457) _$35!390)))

(declare-fun bs!5950 () Bool)

(assert (= bs!5950 d!44455))

(assert (=> bs!5950 m!167269))

(assert (=> bs!5950 m!167269))

(assert (=> bs!5950 m!167271))

(assert (=> d!43833 d!44455))

(declare-fun d!44457 () Bool)

(declare-fun e!92183 () Bool)

(assert (=> d!44457 e!92183))

(declare-fun res!67518 () Bool)

(assert (=> d!44457 (=> res!67518 e!92183)))

(declare-fun lt!74243 () Bool)

(assert (=> d!44457 (= res!67518 (not lt!74243))))

(declare-fun lt!74246 () Bool)

(assert (=> d!44457 (= lt!74243 lt!74246)))

(declare-fun lt!74244 () Unit!4395)

(declare-fun e!92182 () Unit!4395)

(assert (=> d!44457 (= lt!74244 e!92182)))

(declare-fun c!26609 () Bool)

(assert (=> d!44457 (= c!26609 lt!74246)))

(assert (=> d!44457 (= lt!74246 (containsKey!179 (toList!889 lt!73459) lt!73457))))

(assert (=> d!44457 (= (contains!921 lt!73459 lt!73457) lt!74243)))

(declare-fun b!141438 () Bool)

(declare-fun lt!74245 () Unit!4395)

(assert (=> b!141438 (= e!92182 lt!74245)))

(assert (=> b!141438 (= lt!74245 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73459) lt!73457))))

(assert (=> b!141438 (isDefined!129 (getValueByKey!175 (toList!889 lt!73459) lt!73457))))

(declare-fun b!141439 () Bool)

(declare-fun Unit!4468 () Unit!4395)

(assert (=> b!141439 (= e!92182 Unit!4468)))

(declare-fun b!141440 () Bool)

(assert (=> b!141440 (= e!92183 (isDefined!129 (getValueByKey!175 (toList!889 lt!73459) lt!73457)))))

(assert (= (and d!44457 c!26609) b!141438))

(assert (= (and d!44457 (not c!26609)) b!141439))

(assert (= (and d!44457 (not res!67518)) b!141440))

(declare-fun m!169875 () Bool)

(assert (=> d!44457 m!169875))

(declare-fun m!169877 () Bool)

(assert (=> b!141438 m!169877))

(declare-fun m!169879 () Bool)

(assert (=> b!141438 m!169879))

(assert (=> b!141438 m!169879))

(declare-fun m!169881 () Bool)

(assert (=> b!141438 m!169881))

(assert (=> b!141440 m!169879))

(assert (=> b!141440 m!169879))

(assert (=> b!141440 m!169881))

(assert (=> d!43833 d!44457))

(declare-fun d!44459 () Bool)

(declare-fun res!67519 () Bool)

(declare-fun e!92184 () Bool)

(assert (=> d!44459 (=> res!67519 e!92184)))

(assert (=> d!44459 (= res!67519 (and ((_ is Cons!1760) (toList!889 lt!73250)) (= (_1!1352 (h!2367 (toList!889 lt!73250))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44459 (= (containsKey!179 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92184)))

(declare-fun b!141441 () Bool)

(declare-fun e!92185 () Bool)

(assert (=> b!141441 (= e!92184 e!92185)))

(declare-fun res!67520 () Bool)

(assert (=> b!141441 (=> (not res!67520) (not e!92185))))

(assert (=> b!141441 (= res!67520 (and (or (not ((_ is Cons!1760) (toList!889 lt!73250))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73250))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1760) (toList!889 lt!73250)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73250))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!141442 () Bool)

(assert (=> b!141442 (= e!92185 (containsKey!179 (t!6360 (toList!889 lt!73250)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44459 (not res!67519)) b!141441))

(assert (= (and b!141441 res!67520) b!141442))

(assert (=> b!141442 m!166967))

(declare-fun m!169883 () Bool)

(assert (=> b!141442 m!169883))

(assert (=> d!43971 d!44459))

(declare-fun d!44461 () Bool)

(assert (=> d!44461 (isDefined!129 (getValueByKey!175 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74247 () Unit!4395)

(assert (=> d!44461 (= lt!74247 (choose!868 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92186 () Bool)

(assert (=> d!44461 e!92186))

(declare-fun res!67521 () Bool)

(assert (=> d!44461 (=> (not res!67521) (not e!92186))))

(assert (=> d!44461 (= res!67521 (isStrictlySorted!320 (toList!889 lt!73508)))))

(assert (=> d!44461 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74247)))

(declare-fun b!141443 () Bool)

(assert (=> b!141443 (= e!92186 (containsKey!179 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44461 res!67521) b!141443))

(assert (=> d!44461 m!167379))

(assert (=> d!44461 m!167379))

(assert (=> d!44461 m!167747))

(declare-fun m!169885 () Bool)

(assert (=> d!44461 m!169885))

(declare-fun m!169887 () Bool)

(assert (=> d!44461 m!169887))

(assert (=> b!141443 m!167743))

(assert (=> b!140355 d!44461))

(assert (=> b!140355 d!44303))

(assert (=> b!140355 d!44107))

(declare-fun b!141444 () Bool)

(declare-fun res!67523 () Bool)

(declare-fun e!92191 () Bool)

(assert (=> b!141444 (=> (not res!67523) (not e!92191))))

(declare-fun lt!74250 () ListLongMap!1747)

(assert (=> b!141444 (= res!67523 (not (contains!921 lt!74250 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141445 () Bool)

(assert (=> b!141445 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!141445 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (_values!2923 newMap!16))))))

(declare-fun e!92187 () Bool)

(assert (=> b!141445 (= e!92187 (= (apply!120 lt!74250 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141446 () Bool)

(declare-fun e!92193 () ListLongMap!1747)

(declare-fun e!92190 () ListLongMap!1747)

(assert (=> b!141446 (= e!92193 e!92190)))

(declare-fun c!26612 () Bool)

(assert (=> b!141446 (= c!26612 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141447 () Bool)

(declare-fun e!92188 () Bool)

(assert (=> b!141447 (= e!92188 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141447 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!44463 () Bool)

(assert (=> d!44463 e!92191))

(declare-fun res!67525 () Bool)

(assert (=> d!44463 (=> (not res!67525) (not e!92191))))

(assert (=> d!44463 (= res!67525 (not (contains!921 lt!74250 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44463 (= lt!74250 e!92193)))

(declare-fun c!26613 () Bool)

(assert (=> d!44463 (= c!26613 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44463 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44463 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!74250)))

(declare-fun b!141448 () Bool)

(declare-fun e!92189 () Bool)

(declare-fun e!92192 () Bool)

(assert (=> b!141448 (= e!92189 e!92192)))

(declare-fun c!26610 () Bool)

(assert (=> b!141448 (= c!26610 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141449 () Bool)

(assert (=> b!141449 (= e!92192 (= lt!74250 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141450 () Bool)

(assert (=> b!141450 (= e!92189 e!92187)))

(assert (=> b!141450 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67524 () Bool)

(assert (=> b!141450 (= res!67524 (contains!921 lt!74250 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141450 (=> (not res!67524) (not e!92187))))

(declare-fun b!141451 () Bool)

(declare-fun call!15689 () ListLongMap!1747)

(assert (=> b!141451 (= e!92190 call!15689)))

(declare-fun bm!15686 () Bool)

(assert (=> bm!15686 (= call!15689 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (ite c!26153 (ite c!26151 lt!73240 lt!73222) (extraKeys!2695 newMap!16)) (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141452 () Bool)

(assert (=> b!141452 (= e!92193 (ListLongMap!1748 Nil!1761))))

(declare-fun b!141453 () Bool)

(declare-fun lt!74248 () Unit!4395)

(declare-fun lt!74254 () Unit!4395)

(assert (=> b!141453 (= lt!74248 lt!74254)))

(declare-fun lt!74253 () (_ BitVec 64))

(declare-fun lt!74251 () V!3555)

(declare-fun lt!74252 () (_ BitVec 64))

(declare-fun lt!74249 () ListLongMap!1747)

(assert (=> b!141453 (not (contains!921 (+!174 lt!74249 (tuple2!2685 lt!74253 lt!74251)) lt!74252))))

(assert (=> b!141453 (= lt!74254 (addStillNotContains!66 lt!74249 lt!74253 lt!74251 lt!74252))))

(assert (=> b!141453 (= lt!74252 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141453 (= lt!74251 (get!1535 (select (arr!2315 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141453 (= lt!74253 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141453 (= lt!74249 call!15689)))

(assert (=> b!141453 (= e!92190 (+!174 call!15689 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141454 () Bool)

(assert (=> b!141454 (= e!92191 e!92189)))

(declare-fun c!26611 () Bool)

(assert (=> b!141454 (= c!26611 e!92188)))

(declare-fun res!67522 () Bool)

(assert (=> b!141454 (=> (not res!67522) (not e!92188))))

(assert (=> b!141454 (= res!67522 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141455 () Bool)

(assert (=> b!141455 (= e!92192 (isEmpty!423 lt!74250))))

(assert (= (and d!44463 c!26613) b!141452))

(assert (= (and d!44463 (not c!26613)) b!141446))

(assert (= (and b!141446 c!26612) b!141453))

(assert (= (and b!141446 (not c!26612)) b!141451))

(assert (= (or b!141453 b!141451) bm!15686))

(assert (= (and d!44463 res!67525) b!141444))

(assert (= (and b!141444 res!67523) b!141454))

(assert (= (and b!141454 res!67522) b!141447))

(assert (= (and b!141454 c!26611) b!141450))

(assert (= (and b!141454 (not c!26611)) b!141448))

(assert (= (and b!141450 res!67524) b!141445))

(assert (= (and b!141448 c!26610) b!141449))

(assert (= (and b!141448 (not c!26610)) b!141455))

(declare-fun b_lambda!6385 () Bool)

(assert (=> (not b_lambda!6385) (not b!141445)))

(assert (=> b!141445 t!6366))

(declare-fun b_and!8865 () Bool)

(assert (= b_and!8861 (and (=> t!6366 result!4203) b_and!8865)))

(assert (=> b!141445 t!6368))

(declare-fun b_and!8867 () Bool)

(assert (= b_and!8863 (and (=> t!6368 result!4205) b_and!8867)))

(declare-fun b_lambda!6387 () Bool)

(assert (=> (not b_lambda!6387) (not b!141453)))

(assert (=> b!141453 t!6366))

(declare-fun b_and!8869 () Bool)

(assert (= b_and!8865 (and (=> t!6366 result!4203) b_and!8869)))

(assert (=> b!141453 t!6368))

(declare-fun b_and!8871 () Bool)

(assert (= b_and!8867 (and (=> t!6368 result!4205) b_and!8871)))

(declare-fun m!169889 () Bool)

(assert (=> b!141449 m!169889))

(assert (=> b!141447 m!167699))

(assert (=> b!141447 m!167699))

(assert (=> b!141447 m!167707))

(declare-fun m!169891 () Bool)

(assert (=> b!141453 m!169891))

(declare-fun m!169893 () Bool)

(assert (=> b!141453 m!169893))

(assert (=> b!141453 m!167699))

(declare-fun m!169895 () Bool)

(assert (=> b!141453 m!169895))

(declare-fun m!169897 () Bool)

(assert (=> b!141453 m!169897))

(assert (=> b!141453 m!166971))

(assert (=> b!141453 m!169615))

(assert (=> b!141453 m!169615))

(assert (=> b!141453 m!166971))

(assert (=> b!141453 m!169617))

(assert (=> b!141453 m!169891))

(assert (=> b!141450 m!167699))

(assert (=> b!141450 m!167699))

(declare-fun m!169899 () Bool)

(assert (=> b!141450 m!169899))

(assert (=> b!141446 m!167699))

(assert (=> b!141446 m!167699))

(assert (=> b!141446 m!167707))

(assert (=> b!141445 m!167699))

(assert (=> b!141445 m!167699))

(declare-fun m!169901 () Bool)

(assert (=> b!141445 m!169901))

(assert (=> b!141445 m!166971))

(assert (=> b!141445 m!169615))

(assert (=> b!141445 m!169615))

(assert (=> b!141445 m!166971))

(assert (=> b!141445 m!169617))

(declare-fun m!169903 () Bool)

(assert (=> b!141455 m!169903))

(declare-fun m!169905 () Bool)

(assert (=> d!44463 m!169905))

(assert (=> d!44463 m!166961))

(declare-fun m!169907 () Bool)

(assert (=> b!141444 m!169907))

(assert (=> bm!15686 m!169889))

(assert (=> b!140893 d!44463))

(declare-fun d!44465 () Bool)

(declare-fun c!26614 () Bool)

(assert (=> d!44465 (= c!26614 ((_ is Nil!1761) (toList!889 lt!73546)))))

(declare-fun e!92194 () (InoxSet tuple2!2684))

(assert (=> d!44465 (= (content!137 (toList!889 lt!73546)) e!92194)))

(declare-fun b!141456 () Bool)

(assert (=> b!141456 (= e!92194 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!141457 () Bool)

(assert (=> b!141457 (= e!92194 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73546)) true) (content!137 (t!6360 (toList!889 lt!73546)))))))

(assert (= (and d!44465 c!26614) b!141456))

(assert (= (and d!44465 (not c!26614)) b!141457))

(declare-fun m!169909 () Bool)

(assert (=> b!141457 m!169909))

(declare-fun m!169911 () Bool)

(assert (=> b!141457 m!169911))

(assert (=> d!44071 d!44465))

(assert (=> d!43807 d!43795))

(assert (=> d!43807 d!43797))

(declare-fun d!44467 () Bool)

(assert (=> d!44467 (contains!921 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) lt!73489)))

(assert (=> d!44467 true))

(declare-fun _$35!391 () Unit!4395)

(assert (=> d!44467 (= (choose!871 lt!73491 lt!73484 (zeroValue!2790 newMap!16) lt!73489) _$35!391)))

(declare-fun bs!5951 () Bool)

(assert (= bs!5951 d!44467))

(assert (=> bs!5951 m!167341))

(assert (=> bs!5951 m!167341))

(assert (=> bs!5951 m!167343))

(assert (=> d!43807 d!44467))

(declare-fun d!44469 () Bool)

(declare-fun e!92196 () Bool)

(assert (=> d!44469 e!92196))

(declare-fun res!67526 () Bool)

(assert (=> d!44469 (=> res!67526 e!92196)))

(declare-fun lt!74255 () Bool)

(assert (=> d!44469 (= res!67526 (not lt!74255))))

(declare-fun lt!74258 () Bool)

(assert (=> d!44469 (= lt!74255 lt!74258)))

(declare-fun lt!74256 () Unit!4395)

(declare-fun e!92195 () Unit!4395)

(assert (=> d!44469 (= lt!74256 e!92195)))

(declare-fun c!26615 () Bool)

(assert (=> d!44469 (= c!26615 lt!74258)))

(assert (=> d!44469 (= lt!74258 (containsKey!179 (toList!889 lt!73491) lt!73489))))

(assert (=> d!44469 (= (contains!921 lt!73491 lt!73489) lt!74255)))

(declare-fun b!141458 () Bool)

(declare-fun lt!74257 () Unit!4395)

(assert (=> b!141458 (= e!92195 lt!74257)))

(assert (=> b!141458 (= lt!74257 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73491) lt!73489))))

(assert (=> b!141458 (isDefined!129 (getValueByKey!175 (toList!889 lt!73491) lt!73489))))

(declare-fun b!141459 () Bool)

(declare-fun Unit!4469 () Unit!4395)

(assert (=> b!141459 (= e!92195 Unit!4469)))

(declare-fun b!141460 () Bool)

(assert (=> b!141460 (= e!92196 (isDefined!129 (getValueByKey!175 (toList!889 lt!73491) lt!73489)))))

(assert (= (and d!44469 c!26615) b!141458))

(assert (= (and d!44469 (not c!26615)) b!141459))

(assert (= (and d!44469 (not res!67526)) b!141460))

(declare-fun m!169913 () Bool)

(assert (=> d!44469 m!169913))

(declare-fun m!169915 () Bool)

(assert (=> b!141458 m!169915))

(declare-fun m!169917 () Bool)

(assert (=> b!141458 m!169917))

(assert (=> b!141458 m!169917))

(declare-fun m!169919 () Bool)

(assert (=> b!141458 m!169919))

(assert (=> b!141460 m!169917))

(assert (=> b!141460 m!169917))

(assert (=> b!141460 m!169919))

(assert (=> d!43807 d!44469))

(declare-fun d!44471 () Bool)

(declare-fun res!67527 () Bool)

(declare-fun e!92197 () Bool)

(assert (=> d!44471 (=> res!67527 e!92197)))

(assert (=> d!44471 (= res!67527 (and ((_ is Cons!1760) (toList!889 lt!73482)) (= (_1!1352 (h!2367 (toList!889 lt!73482))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44471 (= (containsKey!179 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000) e!92197)))

(declare-fun b!141461 () Bool)

(declare-fun e!92198 () Bool)

(assert (=> b!141461 (= e!92197 e!92198)))

(declare-fun res!67528 () Bool)

(assert (=> b!141461 (=> (not res!67528) (not e!92198))))

(assert (=> b!141461 (= res!67528 (and (or (not ((_ is Cons!1760) (toList!889 lt!73482))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73482))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73482)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73482))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141462 () Bool)

(assert (=> b!141462 (= e!92198 (containsKey!179 (t!6360 (toList!889 lt!73482)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44471 (not res!67527)) b!141461))

(assert (= (and b!141461 res!67528) b!141462))

(declare-fun m!169921 () Bool)

(assert (=> b!141462 m!169921))

(assert (=> d!43847 d!44471))

(declare-fun d!44473 () Bool)

(declare-fun res!67529 () Bool)

(declare-fun e!92199 () Bool)

(assert (=> d!44473 (=> res!67529 e!92199)))

(assert (=> d!44473 (= res!67529 (and ((_ is Cons!1760) lt!73701) (= (_1!1352 (h!2367 lt!73701)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44473 (= (containsKey!179 lt!73701 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92199)))

(declare-fun b!141463 () Bool)

(declare-fun e!92200 () Bool)

(assert (=> b!141463 (= e!92199 e!92200)))

(declare-fun res!67530 () Bool)

(assert (=> b!141463 (=> (not res!67530) (not e!92200))))

(assert (=> b!141463 (= res!67530 (and (or (not ((_ is Cons!1760) lt!73701)) (bvsle (_1!1352 (h!2367 lt!73701)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1760) lt!73701) (bvslt (_1!1352 (h!2367 lt!73701)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141464 () Bool)

(assert (=> b!141464 (= e!92200 (containsKey!179 (t!6360 lt!73701) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44473 (not res!67529)) b!141463))

(assert (= (and b!141463 res!67530) b!141464))

(declare-fun m!169923 () Bool)

(assert (=> b!141464 m!169923))

(assert (=> b!140508 d!44473))

(declare-fun lt!74259 () Bool)

(declare-fun d!44475 () Bool)

(assert (=> d!44475 (= lt!74259 (select (content!137 lt!73536) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92201 () Bool)

(assert (=> d!44475 (= lt!74259 e!92201)))

(declare-fun res!67532 () Bool)

(assert (=> d!44475 (=> (not res!67532) (not e!92201))))

(assert (=> d!44475 (= res!67532 ((_ is Cons!1760) lt!73536))))

(assert (=> d!44475 (= (contains!923 lt!73536 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74259)))

(declare-fun b!141465 () Bool)

(declare-fun e!92202 () Bool)

(assert (=> b!141465 (= e!92201 e!92202)))

(declare-fun res!67531 () Bool)

(assert (=> b!141465 (=> res!67531 e!92202)))

(assert (=> b!141465 (= res!67531 (= (h!2367 lt!73536) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141466 () Bool)

(assert (=> b!141466 (= e!92202 (contains!923 (t!6360 lt!73536) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44475 res!67532) b!141465))

(assert (= (and b!141465 (not res!67531)) b!141466))

(declare-fun m!169925 () Bool)

(assert (=> d!44475 m!169925))

(declare-fun m!169927 () Bool)

(assert (=> d!44475 m!169927))

(declare-fun m!169929 () Bool)

(assert (=> b!141466 m!169929))

(assert (=> b!140553 d!44475))

(declare-fun d!44477 () Bool)

(assert (=> d!44477 (= (arrayCountValidKeys!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4699 newMap!16) #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!44477 true))

(declare-fun _$84!15 () Unit!4395)

(assert (=> d!44477 (= (choose!1 (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) _$84!15)))

(declare-fun bs!5952 () Bool)

(assert (= bs!5952 d!44477))

(assert (=> bs!5952 m!167023))

(assert (=> bs!5952 m!167029))

(assert (=> bs!5952 m!166805))

(assert (=> d!43917 d!44477))

(declare-fun d!44479 () Bool)

(assert (=> d!44479 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(declare-fun lt!74260 () Unit!4395)

(assert (=> d!44479 (= lt!74260 (choose!868 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(declare-fun e!92203 () Bool)

(assert (=> d!44479 e!92203))

(declare-fun res!67533 () Bool)

(assert (=> d!44479 (=> (not res!67533) (not e!92203))))

(assert (=> d!44479 (= res!67533 (isStrictlySorted!320 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))

(assert (=> d!44479 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))) lt!74260)))

(declare-fun b!141467 () Bool)

(assert (=> b!141467 (= e!92203 (containsKey!179 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (= (and d!44479 res!67533) b!141467))

(assert (=> d!44479 m!167045))

(assert (=> d!44479 m!168571))

(assert (=> d!44479 m!168571))

(assert (=> d!44479 m!168573))

(assert (=> d!44479 m!167045))

(declare-fun m!169931 () Bool)

(assert (=> d!44479 m!169931))

(declare-fun m!169933 () Bool)

(assert (=> d!44479 m!169933))

(assert (=> b!141467 m!167045))

(assert (=> b!141467 m!168567))

(assert (=> b!140741 d!44479))

(assert (=> b!140741 d!44315))

(assert (=> b!140741 d!44317))

(declare-fun d!44481 () Bool)

(assert (=> d!44481 (= (get!1538 (getValueByKey!175 (toList!889 lt!73496) lt!73488)) (v!3283 (getValueByKey!175 (toList!889 lt!73496) lt!73488)))))

(assert (=> d!43783 d!44481))

(declare-fun b!141470 () Bool)

(declare-fun e!92205 () Option!181)

(assert (=> b!141470 (= e!92205 (getValueByKey!175 (t!6360 (toList!889 lt!73496)) lt!73488))))

(declare-fun b!141469 () Bool)

(declare-fun e!92204 () Option!181)

(assert (=> b!141469 (= e!92204 e!92205)))

(declare-fun c!26617 () Bool)

(assert (=> b!141469 (= c!26617 (and ((_ is Cons!1760) (toList!889 lt!73496)) (not (= (_1!1352 (h!2367 (toList!889 lt!73496))) lt!73488))))))

(declare-fun b!141471 () Bool)

(assert (=> b!141471 (= e!92205 None!179)))

(declare-fun b!141468 () Bool)

(assert (=> b!141468 (= e!92204 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73496)))))))

(declare-fun d!44483 () Bool)

(declare-fun c!26616 () Bool)

(assert (=> d!44483 (= c!26616 (and ((_ is Cons!1760) (toList!889 lt!73496)) (= (_1!1352 (h!2367 (toList!889 lt!73496))) lt!73488)))))

(assert (=> d!44483 (= (getValueByKey!175 (toList!889 lt!73496) lt!73488) e!92204)))

(assert (= (and d!44483 c!26616) b!141468))

(assert (= (and d!44483 (not c!26616)) b!141469))

(assert (= (and b!141469 c!26617) b!141470))

(assert (= (and b!141469 (not c!26617)) b!141471))

(declare-fun m!169935 () Bool)

(assert (=> b!141470 m!169935))

(assert (=> d!43783 d!44483))

(assert (=> bm!15663 d!43591))

(declare-fun d!44485 () Bool)

(assert (=> d!44485 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74261 () Unit!4395)

(assert (=> d!44485 (= lt!74261 (choose!868 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92206 () Bool)

(assert (=> d!44485 e!92206))

(declare-fun res!67534 () Bool)

(assert (=> d!44485 (=> (not res!67534) (not e!92206))))

(assert (=> d!44485 (= res!67534 (isStrictlySorted!320 (toList!889 lt!73391)))))

(assert (=> d!44485 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74261)))

(declare-fun b!141472 () Bool)

(assert (=> b!141472 (= e!92206 (containsKey!179 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44485 res!67534) b!141472))

(assert (=> d!44485 m!168877))

(assert (=> d!44485 m!168877))

(assert (=> d!44485 m!168879))

(declare-fun m!169937 () Bool)

(assert (=> d!44485 m!169937))

(assert (=> d!44485 m!169699))

(assert (=> b!141472 m!168873))

(assert (=> b!140900 d!44485))

(assert (=> b!140900 d!44217))

(assert (=> b!140900 d!44219))

(declare-fun d!44487 () Bool)

(assert (=> d!44487 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5953 () Bool)

(assert (= bs!5953 d!44487))

(assert (=> bs!5953 m!167977))

(declare-fun m!169939 () Bool)

(assert (=> bs!5953 m!169939))

(assert (=> b!140490 d!44487))

(declare-fun b!141475 () Bool)

(declare-fun e!92208 () Option!181)

(assert (=> b!141475 (= e!92208 (getValueByKey!175 (t!6360 (toList!889 lt!73391)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141474 () Bool)

(declare-fun e!92207 () Option!181)

(assert (=> b!141474 (= e!92207 e!92208)))

(declare-fun c!26619 () Bool)

(assert (=> b!141474 (= c!26619 (and ((_ is Cons!1760) (toList!889 lt!73391)) (not (= (_1!1352 (h!2367 (toList!889 lt!73391))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!141476 () Bool)

(assert (=> b!141476 (= e!92208 None!179)))

(declare-fun b!141473 () Bool)

(assert (=> b!141473 (= e!92207 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73391)))))))

(declare-fun d!44489 () Bool)

(declare-fun c!26618 () Bool)

(assert (=> d!44489 (= c!26618 (and ((_ is Cons!1760) (toList!889 lt!73391)) (= (_1!1352 (h!2367 (toList!889 lt!73391))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44489 (= (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92207)))

(assert (= (and d!44489 c!26618) b!141473))

(assert (= (and d!44489 (not c!26618)) b!141474))

(assert (= (and b!141474 c!26619) b!141475))

(assert (= (and b!141474 (not c!26619)) b!141476))

(assert (=> b!141475 m!166967))

(declare-fun m!169941 () Bool)

(assert (=> b!141475 m!169941))

(assert (=> b!140490 d!44489))

(declare-fun d!44491 () Bool)

(declare-fun res!67535 () Bool)

(declare-fun e!92209 () Bool)

(assert (=> d!44491 (=> res!67535 e!92209)))

(assert (=> d!44491 (= res!67535 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44491 (= (containsKey!179 (t!6360 (toList!889 lt!73135)) #b0000000000000000000000000000000000000000000000000000000000000000) e!92209)))

(declare-fun b!141477 () Bool)

(declare-fun e!92210 () Bool)

(assert (=> b!141477 (= e!92209 e!92210)))

(declare-fun res!67536 () Bool)

(assert (=> b!141477 (=> (not res!67536) (not e!92210))))

(assert (=> b!141477 (= res!67536 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 lt!73135)))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141478 () Bool)

(assert (=> b!141478 (= e!92210 (containsKey!179 (t!6360 (t!6360 (toList!889 lt!73135))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44491 (not res!67535)) b!141477))

(assert (= (and b!141477 res!67536) b!141478))

(declare-fun m!169943 () Bool)

(assert (=> b!141478 m!169943))

(assert (=> b!140887 d!44491))

(declare-fun d!44493 () Bool)

(declare-fun lt!74262 () Bool)

(assert (=> d!44493 (= lt!74262 (select (content!137 (toList!889 lt!74000)) (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))

(declare-fun e!92211 () Bool)

(assert (=> d!44493 (= lt!74262 e!92211)))

(declare-fun res!67538 () Bool)

(assert (=> d!44493 (=> (not res!67538) (not e!92211))))

(assert (=> d!44493 (= res!67538 ((_ is Cons!1760) (toList!889 lt!74000)))))

(assert (=> d!44493 (= (contains!923 (toList!889 lt!74000) (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) lt!74262)))

(declare-fun b!141479 () Bool)

(declare-fun e!92212 () Bool)

(assert (=> b!141479 (= e!92211 e!92212)))

(declare-fun res!67537 () Bool)

(assert (=> b!141479 (=> res!67537 e!92212)))

(assert (=> b!141479 (= res!67537 (= (h!2367 (toList!889 lt!74000)) (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))

(declare-fun b!141480 () Bool)

(assert (=> b!141480 (= e!92212 (contains!923 (t!6360 (toList!889 lt!74000)) (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44493 res!67538) b!141479))

(assert (= (and b!141479 (not res!67537)) b!141480))

(declare-fun m!169945 () Bool)

(assert (=> d!44493 m!169945))

(declare-fun m!169947 () Bool)

(assert (=> d!44493 m!169947))

(declare-fun m!169949 () Bool)

(assert (=> b!141480 m!169949))

(assert (=> b!140913 d!44493))

(declare-fun b!141481 () Bool)

(declare-fun e!92214 () (_ BitVec 32))

(declare-fun call!15690 () (_ BitVec 32))

(assert (=> b!141481 (= e!92214 (bvadd #b00000000000000000000000000000001 call!15690))))

(declare-fun b!141482 () Bool)

(assert (=> b!141482 (= e!92214 call!15690)))

(declare-fun b!141483 () Bool)

(declare-fun e!92213 () (_ BitVec 32))

(assert (=> b!141483 (= e!92213 e!92214)))

(declare-fun c!26621 () Bool)

(assert (=> b!141483 (= c!26621 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141484 () Bool)

(assert (=> b!141484 (= e!92213 #b00000000000000000000000000000000)))

(declare-fun d!44495 () Bool)

(declare-fun lt!74263 () (_ BitVec 32))

(assert (=> d!44495 (and (bvsge lt!74263 #b00000000000000000000000000000000) (bvsle lt!74263 (bvsub (size!2586 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> d!44495 (= lt!74263 e!92213)))

(declare-fun c!26620 () Bool)

(assert (=> d!44495 (= c!26620 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44495 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 newMap!16)) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44495 (= (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))) lt!74263)))

(declare-fun bm!15687 () Bool)

(assert (=> bm!15687 (= call!15690 (arrayCountValidKeys!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (= (and d!44495 c!26620) b!141484))

(assert (= (and d!44495 (not c!26620)) b!141483))

(assert (= (and b!141483 c!26621) b!141481))

(assert (= (and b!141483 (not c!26621)) b!141482))

(assert (= (or b!141481 b!141482) bm!15687))

(assert (=> b!141483 m!169555))

(assert (=> b!141483 m!169555))

(assert (=> b!141483 m!169563))

(declare-fun m!169951 () Bool)

(assert (=> bm!15687 m!169951))

(assert (=> bm!15658 d!44495))

(declare-fun e!92216 () Option!181)

(declare-fun b!141487 () Bool)

(assert (=> b!141487 (= e!92216 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73135))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!141486 () Bool)

(declare-fun e!92215 () Option!181)

(assert (=> b!141486 (= e!92215 e!92216)))

(declare-fun c!26623 () Bool)

(assert (=> b!141486 (= c!26623 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!141488 () Bool)

(assert (=> b!141488 (= e!92216 None!179)))

(declare-fun b!141485 () Bool)

(assert (=> b!141485 (= e!92215 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73135))))))))

(declare-fun c!26622 () Bool)

(declare-fun d!44497 () Bool)

(assert (=> d!44497 (= c!26622 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!44497 (= (getValueByKey!175 (t!6360 (toList!889 lt!73135)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92215)))

(assert (= (and d!44497 c!26622) b!141485))

(assert (= (and d!44497 (not c!26622)) b!141486))

(assert (= (and b!141486 c!26623) b!141487))

(assert (= (and b!141486 (not c!26623)) b!141488))

(assert (=> b!141487 m!166821))

(declare-fun m!169953 () Bool)

(assert (=> b!141487 m!169953))

(assert (=> b!140459 d!44497))

(declare-fun d!44499 () Bool)

(declare-fun e!92218 () Bool)

(assert (=> d!44499 e!92218))

(declare-fun res!67539 () Bool)

(assert (=> d!44499 (=> res!67539 e!92218)))

(declare-fun lt!74264 () Bool)

(assert (=> d!44499 (= res!67539 (not lt!74264))))

(declare-fun lt!74267 () Bool)

(assert (=> d!44499 (= lt!74264 lt!74267)))

(declare-fun lt!74265 () Unit!4395)

(declare-fun e!92217 () Unit!4395)

(assert (=> d!44499 (= lt!74265 e!92217)))

(declare-fun c!26624 () Bool)

(assert (=> d!44499 (= c!26624 lt!74267)))

(assert (=> d!44499 (= lt!74267 (containsKey!179 (toList!889 lt!73747) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(assert (=> d!44499 (= (contains!921 lt!73747 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) lt!74264)))

(declare-fun b!141489 () Bool)

(declare-fun lt!74266 () Unit!4395)

(assert (=> b!141489 (= e!92217 lt!74266)))

(assert (=> b!141489 (= lt!74266 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73747) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(assert (=> b!141489 (isDefined!129 (getValueByKey!175 (toList!889 lt!73747) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun b!141490 () Bool)

(declare-fun Unit!4470 () Unit!4395)

(assert (=> b!141490 (= e!92217 Unit!4470)))

(declare-fun b!141491 () Bool)

(assert (=> b!141491 (= e!92218 (isDefined!129 (getValueByKey!175 (toList!889 lt!73747) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(assert (= (and d!44499 c!26624) b!141489))

(assert (= (and d!44499 (not c!26624)) b!141490))

(assert (= (and d!44499 (not res!67539)) b!141491))

(declare-fun m!169955 () Bool)

(assert (=> d!44499 m!169955))

(declare-fun m!169957 () Bool)

(assert (=> b!141489 m!169957))

(assert (=> b!141489 m!168227))

(assert (=> b!141489 m!168227))

(declare-fun m!169959 () Bool)

(assert (=> b!141489 m!169959))

(assert (=> b!141491 m!168227))

(assert (=> b!141491 m!168227))

(assert (=> b!141491 m!169959))

(assert (=> d!43819 d!44499))

(declare-fun e!92220 () Option!181)

(declare-fun b!141494 () Bool)

(assert (=> b!141494 (= e!92220 (getValueByKey!175 (t!6360 lt!73748) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun b!141493 () Bool)

(declare-fun e!92219 () Option!181)

(assert (=> b!141493 (= e!92219 e!92220)))

(declare-fun c!26626 () Bool)

(assert (=> b!141493 (= c!26626 (and ((_ is Cons!1760) lt!73748) (not (= (_1!1352 (h!2367 lt!73748)) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))))

(declare-fun b!141495 () Bool)

(assert (=> b!141495 (= e!92220 None!179)))

(declare-fun b!141492 () Bool)

(assert (=> b!141492 (= e!92219 (Some!180 (_2!1352 (h!2367 lt!73748))))))

(declare-fun d!44501 () Bool)

(declare-fun c!26625 () Bool)

(assert (=> d!44501 (= c!26625 (and ((_ is Cons!1760) lt!73748) (= (_1!1352 (h!2367 lt!73748)) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(assert (=> d!44501 (= (getValueByKey!175 lt!73748 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) e!92219)))

(assert (= (and d!44501 c!26625) b!141492))

(assert (= (and d!44501 (not c!26625)) b!141493))

(assert (= (and b!141493 c!26626) b!141494))

(assert (= (and b!141493 (not c!26626)) b!141495))

(declare-fun m!169961 () Bool)

(assert (=> b!141494 m!169961))

(assert (=> d!43819 d!44501))

(declare-fun d!44503 () Bool)

(assert (=> d!44503 (= (getValueByKey!175 lt!73748 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun lt!74268 () Unit!4395)

(assert (=> d!44503 (= lt!74268 (choose!873 lt!73748 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun e!92221 () Bool)

(assert (=> d!44503 e!92221))

(declare-fun res!67540 () Bool)

(assert (=> d!44503 (=> (not res!67540) (not e!92221))))

(assert (=> d!44503 (= res!67540 (isStrictlySorted!320 lt!73748))))

(assert (=> d!44503 (= (lemmaContainsTupThenGetReturnValue!91 lt!73748 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) lt!74268)))

(declare-fun b!141496 () Bool)

(declare-fun res!67541 () Bool)

(assert (=> b!141496 (=> (not res!67541) (not e!92221))))

(assert (=> b!141496 (= res!67541 (containsKey!179 lt!73748 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun b!141497 () Bool)

(assert (=> b!141497 (= e!92221 (contains!923 lt!73748 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(assert (= (and d!44503 res!67540) b!141496))

(assert (= (and b!141496 res!67541) b!141497))

(assert (=> d!44503 m!168221))

(declare-fun m!169963 () Bool)

(assert (=> d!44503 m!169963))

(declare-fun m!169965 () Bool)

(assert (=> d!44503 m!169965))

(declare-fun m!169967 () Bool)

(assert (=> b!141496 m!169967))

(declare-fun m!169969 () Bool)

(assert (=> b!141497 m!169969))

(assert (=> d!43819 d!44503))

(declare-fun d!44505 () Bool)

(declare-fun e!92222 () Bool)

(assert (=> d!44505 e!92222))

(declare-fun res!67543 () Bool)

(assert (=> d!44505 (=> (not res!67543) (not e!92222))))

(declare-fun lt!74269 () List!1764)

(assert (=> d!44505 (= res!67543 (isStrictlySorted!320 lt!74269))))

(declare-fun e!92224 () List!1764)

(assert (=> d!44505 (= lt!74269 e!92224)))

(declare-fun c!26627 () Bool)

(assert (=> d!44505 (= c!26627 (and ((_ is Cons!1760) (toList!889 lt!73461)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73461))) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(assert (=> d!44505 (isStrictlySorted!320 (toList!889 lt!73461))))

(assert (=> d!44505 (= (insertStrictlySorted!93 (toList!889 lt!73461) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) lt!74269)))

(declare-fun b!141498 () Bool)

(assert (=> b!141498 (= e!92222 (contains!923 lt!74269 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(declare-fun call!15691 () List!1764)

(declare-fun bm!15688 () Bool)

(declare-fun e!92225 () List!1764)

(assert (=> bm!15688 (= call!15691 ($colon$colon!93 e!92225 (ite c!26627 (h!2367 (toList!889 lt!73461)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))))

(declare-fun c!26630 () Bool)

(assert (=> bm!15688 (= c!26630 c!26627)))

(declare-fun b!141499 () Bool)

(assert (=> b!141499 (= e!92224 call!15691)))

(declare-fun b!141500 () Bool)

(assert (=> b!141500 (= e!92225 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73461)) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun b!141501 () Bool)

(declare-fun e!92226 () List!1764)

(declare-fun call!15692 () List!1764)

(assert (=> b!141501 (= e!92226 call!15692)))

(declare-fun bm!15689 () Bool)

(assert (=> bm!15689 (= call!15692 call!15691)))

(declare-fun b!141502 () Bool)

(declare-fun e!92223 () List!1764)

(declare-fun call!15693 () List!1764)

(assert (=> b!141502 (= e!92223 call!15693)))

(declare-fun c!26629 () Bool)

(declare-fun b!141503 () Bool)

(assert (=> b!141503 (= c!26629 (and ((_ is Cons!1760) (toList!889 lt!73461)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73461))) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(assert (=> b!141503 (= e!92226 e!92223)))

(declare-fun b!141504 () Bool)

(assert (=> b!141504 (= e!92224 e!92226)))

(declare-fun c!26628 () Bool)

(assert (=> b!141504 (= c!26628 (and ((_ is Cons!1760) (toList!889 lt!73461)) (= (_1!1352 (h!2367 (toList!889 lt!73461))) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(declare-fun b!141505 () Bool)

(assert (=> b!141505 (= e!92225 (ite c!26628 (t!6360 (toList!889 lt!73461)) (ite c!26629 (Cons!1760 (h!2367 (toList!889 lt!73461)) (t!6360 (toList!889 lt!73461))) Nil!1761)))))

(declare-fun bm!15690 () Bool)

(assert (=> bm!15690 (= call!15693 call!15692)))

(declare-fun b!141506 () Bool)

(declare-fun res!67542 () Bool)

(assert (=> b!141506 (=> (not res!67542) (not e!92222))))

(assert (=> b!141506 (= res!67542 (containsKey!179 lt!74269 (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun b!141507 () Bool)

(assert (=> b!141507 (= e!92223 call!15693)))

(assert (= (and d!44505 c!26627) b!141499))

(assert (= (and d!44505 (not c!26627)) b!141504))

(assert (= (and b!141504 c!26628) b!141501))

(assert (= (and b!141504 (not c!26628)) b!141503))

(assert (= (and b!141503 c!26629) b!141507))

(assert (= (and b!141503 (not c!26629)) b!141502))

(assert (= (or b!141507 b!141502) bm!15690))

(assert (= (or b!141501 bm!15690) bm!15689))

(assert (= (or b!141499 bm!15689) bm!15688))

(assert (= (and bm!15688 c!26630) b!141500))

(assert (= (and bm!15688 (not c!26630)) b!141505))

(assert (= (and d!44505 res!67543) b!141506))

(assert (= (and b!141506 res!67542) b!141498))

(declare-fun m!169971 () Bool)

(assert (=> b!141498 m!169971))

(declare-fun m!169973 () Bool)

(assert (=> b!141506 m!169973))

(declare-fun m!169975 () Bool)

(assert (=> b!141500 m!169975))

(declare-fun m!169977 () Bool)

(assert (=> bm!15688 m!169977))

(declare-fun m!169979 () Bool)

(assert (=> d!44505 m!169979))

(declare-fun m!169981 () Bool)

(assert (=> d!44505 m!169981))

(assert (=> d!43819 d!44505))

(declare-fun d!44507 () Bool)

(assert (=> d!44507 (= (isEmpty!422 (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not ((_ is Some!180) (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(assert (=> d!43645 d!44507))

(declare-fun d!44509 () Bool)

(assert (=> d!44509 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun bs!5954 () Bool)

(assert (= bs!5954 d!44509))

(assert (=> bs!5954 m!167457))

(declare-fun m!169983 () Bool)

(assert (=> bs!5954 m!169983))

(assert (=> b!140658 d!44509))

(assert (=> b!140658 d!43931))

(assert (=> b!140274 d!44399))

(assert (=> b!140274 d!44247))

(declare-fun d!44511 () Bool)

(declare-fun lt!74270 () Bool)

(assert (=> d!44511 (= lt!74270 (select (content!137 lt!73379) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92227 () Bool)

(assert (=> d!44511 (= lt!74270 e!92227)))

(declare-fun res!67545 () Bool)

(assert (=> d!44511 (=> (not res!67545) (not e!92227))))

(assert (=> d!44511 (= res!67545 ((_ is Cons!1760) lt!73379))))

(assert (=> d!44511 (= (contains!923 lt!73379 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74270)))

(declare-fun b!141508 () Bool)

(declare-fun e!92228 () Bool)

(assert (=> b!141508 (= e!92227 e!92228)))

(declare-fun res!67544 () Bool)

(assert (=> b!141508 (=> res!67544 e!92228)))

(assert (=> b!141508 (= res!67544 (= (h!2367 lt!73379) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141509 () Bool)

(assert (=> b!141509 (= e!92228 (contains!923 (t!6360 lt!73379) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44511 res!67545) b!141508))

(assert (= (and b!141508 (not res!67544)) b!141509))

(declare-fun m!169985 () Bool)

(assert (=> d!44511 m!169985))

(declare-fun m!169987 () Bool)

(assert (=> d!44511 m!169987))

(declare-fun m!169989 () Bool)

(assert (=> b!141509 m!169989))

(assert (=> b!140471 d!44511))

(declare-fun d!44513 () Bool)

(declare-fun res!67546 () Bool)

(declare-fun e!92229 () Bool)

(assert (=> d!44513 (=> res!67546 e!92229)))

(assert (=> d!44513 (= res!67546 (and ((_ is Cons!1760) lt!73471) (= (_1!1352 (h!2367 lt!73471)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!44513 (= (containsKey!179 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!92229)))

(declare-fun b!141510 () Bool)

(declare-fun e!92230 () Bool)

(assert (=> b!141510 (= e!92229 e!92230)))

(declare-fun res!67547 () Bool)

(assert (=> b!141510 (=> (not res!67547) (not e!92230))))

(assert (=> b!141510 (= res!67547 (and (or (not ((_ is Cons!1760) lt!73471)) (bvsle (_1!1352 (h!2367 lt!73471)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) ((_ is Cons!1760) lt!73471) (bvslt (_1!1352 (h!2367 lt!73471)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141511 () Bool)

(assert (=> b!141511 (= e!92230 (containsKey!179 (t!6360 lt!73471) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44513 (not res!67546)) b!141510))

(assert (= (and b!141510 res!67547) b!141511))

(declare-fun m!169991 () Bool)

(assert (=> b!141511 m!169991))

(assert (=> b!140517 d!44513))

(declare-fun d!44515 () Bool)

(declare-fun e!92232 () Bool)

(assert (=> d!44515 e!92232))

(declare-fun res!67548 () Bool)

(assert (=> d!44515 (=> res!67548 e!92232)))

(declare-fun lt!74271 () Bool)

(assert (=> d!44515 (= res!67548 (not lt!74271))))

(declare-fun lt!74274 () Bool)

(assert (=> d!44515 (= lt!74271 lt!74274)))

(declare-fun lt!74272 () Unit!4395)

(declare-fun e!92231 () Unit!4395)

(assert (=> d!44515 (= lt!74272 e!92231)))

(declare-fun c!26631 () Bool)

(assert (=> d!44515 (= c!26631 lt!74274)))

(assert (=> d!44515 (= lt!74274 (containsKey!179 (toList!889 lt!73755) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(assert (=> d!44515 (= (contains!921 lt!73755 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) lt!74271)))

(declare-fun b!141512 () Bool)

(declare-fun lt!74273 () Unit!4395)

(assert (=> b!141512 (= e!92231 lt!74273)))

(assert (=> b!141512 (= lt!74273 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73755) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(assert (=> b!141512 (isDefined!129 (getValueByKey!175 (toList!889 lt!73755) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun b!141513 () Bool)

(declare-fun Unit!4471 () Unit!4395)

(assert (=> b!141513 (= e!92231 Unit!4471)))

(declare-fun b!141514 () Bool)

(assert (=> b!141514 (= e!92232 (isDefined!129 (getValueByKey!175 (toList!889 lt!73755) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(assert (= (and d!44515 c!26631) b!141512))

(assert (= (and d!44515 (not c!26631)) b!141513))

(assert (= (and d!44515 (not res!67548)) b!141514))

(declare-fun m!169993 () Bool)

(assert (=> d!44515 m!169993))

(declare-fun m!169995 () Bool)

(assert (=> b!141512 m!169995))

(assert (=> b!141512 m!168263))

(assert (=> b!141512 m!168263))

(declare-fun m!169997 () Bool)

(assert (=> b!141512 m!169997))

(assert (=> b!141514 m!168263))

(assert (=> b!141514 m!168263))

(assert (=> b!141514 m!169997))

(assert (=> d!43829 d!44515))

(declare-fun e!92234 () Option!181)

(declare-fun b!141517 () Bool)

(assert (=> b!141517 (= e!92234 (getValueByKey!175 (t!6360 lt!73756) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun b!141516 () Bool)

(declare-fun e!92233 () Option!181)

(assert (=> b!141516 (= e!92233 e!92234)))

(declare-fun c!26633 () Bool)

(assert (=> b!141516 (= c!26633 (and ((_ is Cons!1760) lt!73756) (not (= (_1!1352 (h!2367 lt!73756)) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))))

(declare-fun b!141518 () Bool)

(assert (=> b!141518 (= e!92234 None!179)))

(declare-fun b!141515 () Bool)

(assert (=> b!141515 (= e!92233 (Some!180 (_2!1352 (h!2367 lt!73756))))))

(declare-fun c!26632 () Bool)

(declare-fun d!44517 () Bool)

(assert (=> d!44517 (= c!26632 (and ((_ is Cons!1760) lt!73756) (= (_1!1352 (h!2367 lt!73756)) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(assert (=> d!44517 (= (getValueByKey!175 lt!73756 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) e!92233)))

(assert (= (and d!44517 c!26632) b!141515))

(assert (= (and d!44517 (not c!26632)) b!141516))

(assert (= (and b!141516 c!26633) b!141517))

(assert (= (and b!141516 (not c!26633)) b!141518))

(declare-fun m!169999 () Bool)

(assert (=> b!141517 m!169999))

(assert (=> d!43829 d!44517))

(declare-fun d!44519 () Bool)

(assert (=> d!44519 (= (getValueByKey!175 lt!73756 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun lt!74275 () Unit!4395)

(assert (=> d!44519 (= lt!74275 (choose!873 lt!73756 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun e!92235 () Bool)

(assert (=> d!44519 e!92235))

(declare-fun res!67549 () Bool)

(assert (=> d!44519 (=> (not res!67549) (not e!92235))))

(assert (=> d!44519 (= res!67549 (isStrictlySorted!320 lt!73756))))

(assert (=> d!44519 (= (lemmaContainsTupThenGetReturnValue!91 lt!73756 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) lt!74275)))

(declare-fun b!141519 () Bool)

(declare-fun res!67550 () Bool)

(assert (=> b!141519 (=> (not res!67550) (not e!92235))))

(assert (=> b!141519 (= res!67550 (containsKey!179 lt!73756 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun b!141520 () Bool)

(assert (=> b!141520 (= e!92235 (contains!923 lt!73756 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(assert (= (and d!44519 res!67549) b!141519))

(assert (= (and b!141519 res!67550) b!141520))

(assert (=> d!44519 m!168257))

(declare-fun m!170001 () Bool)

(assert (=> d!44519 m!170001))

(declare-fun m!170003 () Bool)

(assert (=> d!44519 m!170003))

(declare-fun m!170005 () Bool)

(assert (=> b!141519 m!170005))

(declare-fun m!170007 () Bool)

(assert (=> b!141520 m!170007))

(assert (=> d!43829 d!44519))

(declare-fun d!44521 () Bool)

(declare-fun e!92236 () Bool)

(assert (=> d!44521 e!92236))

(declare-fun res!67552 () Bool)

(assert (=> d!44521 (=> (not res!67552) (not e!92236))))

(declare-fun lt!74276 () List!1764)

(assert (=> d!44521 (= res!67552 (isStrictlySorted!320 lt!74276))))

(declare-fun e!92238 () List!1764)

(assert (=> d!44521 (= lt!74276 e!92238)))

(declare-fun c!26634 () Bool)

(assert (=> d!44521 (= c!26634 (and ((_ is Cons!1760) (toList!889 lt!73464)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73464))) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(assert (=> d!44521 (isStrictlySorted!320 (toList!889 lt!73464))))

(assert (=> d!44521 (= (insertStrictlySorted!93 (toList!889 lt!73464) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) lt!74276)))

(declare-fun b!141521 () Bool)

(assert (=> b!141521 (= e!92236 (contains!923 lt!74276 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(declare-fun e!92239 () List!1764)

(declare-fun call!15694 () List!1764)

(declare-fun bm!15691 () Bool)

(assert (=> bm!15691 (= call!15694 ($colon$colon!93 e!92239 (ite c!26634 (h!2367 (toList!889 lt!73464)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))))

(declare-fun c!26637 () Bool)

(assert (=> bm!15691 (= c!26637 c!26634)))

(declare-fun b!141522 () Bool)

(assert (=> b!141522 (= e!92238 call!15694)))

(declare-fun b!141523 () Bool)

(assert (=> b!141523 (= e!92239 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73464)) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun b!141524 () Bool)

(declare-fun e!92240 () List!1764)

(declare-fun call!15695 () List!1764)

(assert (=> b!141524 (= e!92240 call!15695)))

(declare-fun bm!15692 () Bool)

(assert (=> bm!15692 (= call!15695 call!15694)))

(declare-fun b!141525 () Bool)

(declare-fun e!92237 () List!1764)

(declare-fun call!15696 () List!1764)

(assert (=> b!141525 (= e!92237 call!15696)))

(declare-fun c!26636 () Bool)

(declare-fun b!141526 () Bool)

(assert (=> b!141526 (= c!26636 (and ((_ is Cons!1760) (toList!889 lt!73464)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73464))) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(assert (=> b!141526 (= e!92240 e!92237)))

(declare-fun b!141527 () Bool)

(assert (=> b!141527 (= e!92238 e!92240)))

(declare-fun c!26635 () Bool)

(assert (=> b!141527 (= c!26635 (and ((_ is Cons!1760) (toList!889 lt!73464)) (= (_1!1352 (h!2367 (toList!889 lt!73464))) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(declare-fun b!141528 () Bool)

(assert (=> b!141528 (= e!92239 (ite c!26635 (t!6360 (toList!889 lt!73464)) (ite c!26636 (Cons!1760 (h!2367 (toList!889 lt!73464)) (t!6360 (toList!889 lt!73464))) Nil!1761)))))

(declare-fun bm!15693 () Bool)

(assert (=> bm!15693 (= call!15696 call!15695)))

(declare-fun b!141529 () Bool)

(declare-fun res!67551 () Bool)

(assert (=> b!141529 (=> (not res!67551) (not e!92236))))

(assert (=> b!141529 (= res!67551 (containsKey!179 lt!74276 (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun b!141530 () Bool)

(assert (=> b!141530 (= e!92237 call!15696)))

(assert (= (and d!44521 c!26634) b!141522))

(assert (= (and d!44521 (not c!26634)) b!141527))

(assert (= (and b!141527 c!26635) b!141524))

(assert (= (and b!141527 (not c!26635)) b!141526))

(assert (= (and b!141526 c!26636) b!141530))

(assert (= (and b!141526 (not c!26636)) b!141525))

(assert (= (or b!141530 b!141525) bm!15693))

(assert (= (or b!141524 bm!15693) bm!15692))

(assert (= (or b!141522 bm!15692) bm!15691))

(assert (= (and bm!15691 c!26637) b!141523))

(assert (= (and bm!15691 (not c!26637)) b!141528))

(assert (= (and d!44521 res!67552) b!141529))

(assert (= (and b!141529 res!67551) b!141521))

(declare-fun m!170009 () Bool)

(assert (=> b!141521 m!170009))

(declare-fun m!170011 () Bool)

(assert (=> b!141529 m!170011))

(declare-fun m!170013 () Bool)

(assert (=> b!141523 m!170013))

(declare-fun m!170015 () Bool)

(assert (=> bm!15691 m!170015))

(declare-fun m!170017 () Bool)

(assert (=> d!44521 m!170017))

(declare-fun m!170019 () Bool)

(assert (=> d!44521 m!170019))

(assert (=> d!43829 d!44521))

(declare-fun b!141531 () Bool)

(declare-fun e!92241 () SeekEntryResult!289)

(assert (=> b!141531 (= e!92241 (MissingVacant!289 (index!3321 lt!73424)))))

(declare-fun b!141532 () Bool)

(declare-fun e!92242 () SeekEntryResult!289)

(assert (=> b!141532 (= e!92242 (Found!289 (nextIndex!0 (index!3321 lt!73424) (x!16146 lt!73424) (mask!7280 newMap!16))))))

(declare-fun b!141533 () Bool)

(declare-fun c!26640 () Bool)

(declare-fun lt!74277 () (_ BitVec 64))

(assert (=> b!141533 (= c!26640 (= lt!74277 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141533 (= e!92242 e!92241)))

(declare-fun b!141534 () Bool)

(declare-fun e!92243 () SeekEntryResult!289)

(assert (=> b!141534 (= e!92243 Undefined!289)))

(declare-fun lt!74278 () SeekEntryResult!289)

(declare-fun d!44523 () Bool)

(assert (=> d!44523 (and (or ((_ is Undefined!289) lt!74278) (not ((_ is Found!289) lt!74278)) (and (bvsge (index!3320 lt!74278) #b00000000000000000000000000000000) (bvslt (index!3320 lt!74278) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!74278) ((_ is Found!289) lt!74278) (not ((_ is MissingVacant!289) lt!74278)) (not (= (index!3322 lt!74278) (index!3321 lt!73424))) (and (bvsge (index!3322 lt!74278) #b00000000000000000000000000000000) (bvslt (index!3322 lt!74278) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!74278) (ite ((_ is Found!289) lt!74278) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!74278)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (and ((_ is MissingVacant!289) lt!74278) (= (index!3322 lt!74278) (index!3321 lt!73424)) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!74278)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!44523 (= lt!74278 e!92243)))

(declare-fun c!26639 () Bool)

(assert (=> d!44523 (= c!26639 (bvsge (bvadd (x!16146 lt!73424) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!44523 (= lt!74277 (select (arr!2314 (_keys!4699 newMap!16)) (nextIndex!0 (index!3321 lt!73424) (x!16146 lt!73424) (mask!7280 newMap!16))))))

(assert (=> d!44523 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44523 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!16146 lt!73424) #b00000000000000000000000000000001) (nextIndex!0 (index!3321 lt!73424) (x!16146 lt!73424) (mask!7280 newMap!16)) (index!3321 lt!73424) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74278)))

(declare-fun b!141535 () Bool)

(assert (=> b!141535 (= e!92243 e!92242)))

(declare-fun c!26638 () Bool)

(assert (=> b!141535 (= c!26638 (= lt!74277 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!141536 () Bool)

(assert (=> b!141536 (= e!92241 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16146 lt!73424) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3321 lt!73424) (x!16146 lt!73424) (mask!7280 newMap!16)) (bvadd (x!16146 lt!73424) #b00000000000000000000000000000001) (mask!7280 newMap!16)) (index!3321 lt!73424) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (= (and d!44523 c!26639) b!141534))

(assert (= (and d!44523 (not c!26639)) b!141535))

(assert (= (and b!141535 c!26638) b!141532))

(assert (= (and b!141535 (not c!26638)) b!141533))

(assert (= (and b!141533 c!26640) b!141531))

(assert (= (and b!141533 (not c!26640)) b!141536))

(declare-fun m!170021 () Bool)

(assert (=> d!44523 m!170021))

(declare-fun m!170023 () Bool)

(assert (=> d!44523 m!170023))

(assert (=> d!44523 m!168671))

(declare-fun m!170025 () Bool)

(assert (=> d!44523 m!170025))

(assert (=> d!44523 m!166961))

(assert (=> b!141536 m!168671))

(declare-fun m!170027 () Bool)

(assert (=> b!141536 m!170027))

(assert (=> b!141536 m!170027))

(assert (=> b!141536 m!166733))

(declare-fun m!170029 () Bool)

(assert (=> b!141536 m!170029))

(assert (=> b!140809 d!44523))

(declare-fun d!44525 () Bool)

(declare-fun lt!74279 () (_ BitVec 32))

(assert (=> d!44525 (and (bvsge lt!74279 #b00000000000000000000000000000000) (bvslt lt!74279 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!44525 (= lt!74279 (choose!52 (index!3321 lt!73424) (x!16146 lt!73424) (mask!7280 newMap!16)))))

(assert (=> d!44525 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44525 (= (nextIndex!0 (index!3321 lt!73424) (x!16146 lt!73424) (mask!7280 newMap!16)) lt!74279)))

(declare-fun bs!5955 () Bool)

(assert (= bs!5955 d!44525))

(declare-fun m!170031 () Bool)

(assert (=> bs!5955 m!170031))

(assert (=> bs!5955 m!166961))

(assert (=> b!140809 d!44525))

(declare-fun b!141537 () Bool)

(declare-fun e!92246 () Bool)

(declare-fun e!92245 () Bool)

(assert (=> b!141537 (= e!92246 e!92245)))

(declare-fun lt!74281 () (_ BitVec 64))

(assert (=> b!141537 (= lt!74281 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74282 () Unit!4395)

(assert (=> b!141537 (= lt!74282 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1353 lt!73223)) lt!74281 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141537 (arrayContainsKey!0 (_keys!4699 (_2!1353 lt!73223)) lt!74281 #b00000000000000000000000000000000)))

(declare-fun lt!74280 () Unit!4395)

(assert (=> b!141537 (= lt!74280 lt!74282)))

(declare-fun res!67553 () Bool)

(assert (=> b!141537 (= res!67553 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))) (Found!289 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141537 (=> (not res!67553) (not e!92245))))

(declare-fun d!44527 () Bool)

(declare-fun res!67554 () Bool)

(declare-fun e!92244 () Bool)

(assert (=> d!44527 (=> res!67554 e!92244)))

(assert (=> d!44527 (= res!67554 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!44527 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))) e!92244)))

(declare-fun b!141538 () Bool)

(declare-fun call!15697 () Bool)

(assert (=> b!141538 (= e!92246 call!15697)))

(declare-fun b!141539 () Bool)

(assert (=> b!141539 (= e!92244 e!92246)))

(declare-fun c!26641 () Bool)

(assert (=> b!141539 (= c!26641 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141540 () Bool)

(assert (=> b!141540 (= e!92245 call!15697)))

(declare-fun bm!15694 () Bool)

(assert (=> bm!15694 (= call!15697 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))))))

(assert (= (and d!44527 (not res!67554)) b!141539))

(assert (= (and b!141539 c!26641) b!141537))

(assert (= (and b!141539 (not c!26641)) b!141538))

(assert (= (and b!141537 res!67553) b!141540))

(assert (= (or b!141540 b!141538) bm!15694))

(assert (=> b!141537 m!169737))

(declare-fun m!170033 () Bool)

(assert (=> b!141537 m!170033))

(declare-fun m!170035 () Bool)

(assert (=> b!141537 m!170035))

(assert (=> b!141537 m!169737))

(declare-fun m!170037 () Bool)

(assert (=> b!141537 m!170037))

(assert (=> b!141539 m!169737))

(assert (=> b!141539 m!169737))

(assert (=> b!141539 m!169739))

(declare-fun m!170039 () Bool)

(assert (=> bm!15694 m!170039))

(assert (=> bm!15657 d!44527))

(declare-fun d!44529 () Bool)

(assert (=> d!44529 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74283 () Unit!4395)

(assert (=> d!44529 (= lt!74283 (choose!868 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92247 () Bool)

(assert (=> d!44529 e!92247))

(declare-fun res!67555 () Bool)

(assert (=> d!44529 (=> (not res!67555) (not e!92247))))

(assert (=> d!44529 (= res!67555 (isStrictlySorted!320 (toList!889 lt!73450)))))

(assert (=> d!44529 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74283)))

(declare-fun b!141541 () Bool)

(assert (=> b!141541 (= e!92247 (containsKey!179 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44529 res!67555) b!141541))

(assert (=> d!44529 m!166967))

(assert (=> d!44529 m!168055))

(assert (=> d!44529 m!168055))

(assert (=> d!44529 m!169315))

(assert (=> d!44529 m!166967))

(declare-fun m!170041 () Bool)

(assert (=> d!44529 m!170041))

(declare-fun m!170043 () Bool)

(assert (=> d!44529 m!170043))

(assert (=> b!141541 m!166967))

(assert (=> b!141541 m!169311))

(assert (=> b!141095 d!44529))

(assert (=> b!141095 d!44349))

(assert (=> b!141095 d!44325))

(assert (=> b!140532 d!44443))

(declare-fun d!44531 () Bool)

(declare-fun e!92249 () Bool)

(assert (=> d!44531 e!92249))

(declare-fun res!67556 () Bool)

(assert (=> d!44531 (=> res!67556 e!92249)))

(declare-fun lt!74284 () Bool)

(assert (=> d!44531 (= res!67556 (not lt!74284))))

(declare-fun lt!74287 () Bool)

(assert (=> d!44531 (= lt!74284 lt!74287)))

(declare-fun lt!74285 () Unit!4395)

(declare-fun e!92248 () Unit!4395)

(assert (=> d!44531 (= lt!74285 e!92248)))

(declare-fun c!26642 () Bool)

(assert (=> d!44531 (= c!26642 lt!74287)))

(assert (=> d!44531 (= lt!74287 (containsKey!179 (toList!889 lt!73734) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(assert (=> d!44531 (= (contains!921 lt!73734 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) lt!74284)))

(declare-fun b!141542 () Bool)

(declare-fun lt!74286 () Unit!4395)

(assert (=> b!141542 (= e!92248 lt!74286)))

(assert (=> b!141542 (= lt!74286 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73734) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(assert (=> b!141542 (isDefined!129 (getValueByKey!175 (toList!889 lt!73734) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun b!141543 () Bool)

(declare-fun Unit!4472 () Unit!4395)

(assert (=> b!141543 (= e!92248 Unit!4472)))

(declare-fun b!141544 () Bool)

(assert (=> b!141544 (= e!92249 (isDefined!129 (getValueByKey!175 (toList!889 lt!73734) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(assert (= (and d!44531 c!26642) b!141542))

(assert (= (and d!44531 (not c!26642)) b!141543))

(assert (= (and d!44531 (not res!67556)) b!141544))

(declare-fun m!170045 () Bool)

(assert (=> d!44531 m!170045))

(declare-fun m!170047 () Bool)

(assert (=> b!141542 m!170047))

(assert (=> b!141542 m!168179))

(assert (=> b!141542 m!168179))

(declare-fun m!170049 () Bool)

(assert (=> b!141542 m!170049))

(assert (=> b!141544 m!168179))

(assert (=> b!141544 m!168179))

(assert (=> b!141544 m!170049))

(assert (=> d!43803 d!44531))

(declare-fun b!141547 () Bool)

(declare-fun e!92251 () Option!181)

(assert (=> b!141547 (= e!92251 (getValueByKey!175 (t!6360 lt!73735) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun b!141546 () Bool)

(declare-fun e!92250 () Option!181)

(assert (=> b!141546 (= e!92250 e!92251)))

(declare-fun c!26644 () Bool)

(assert (=> b!141546 (= c!26644 (and ((_ is Cons!1760) lt!73735) (not (= (_1!1352 (h!2367 lt!73735)) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))))

(declare-fun b!141548 () Bool)

(assert (=> b!141548 (= e!92251 None!179)))

(declare-fun b!141545 () Bool)

(assert (=> b!141545 (= e!92250 (Some!180 (_2!1352 (h!2367 lt!73735))))))

(declare-fun d!44533 () Bool)

(declare-fun c!26643 () Bool)

(assert (=> d!44533 (= c!26643 (and ((_ is Cons!1760) lt!73735) (= (_1!1352 (h!2367 lt!73735)) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(assert (=> d!44533 (= (getValueByKey!175 lt!73735 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) e!92250)))

(assert (= (and d!44533 c!26643) b!141545))

(assert (= (and d!44533 (not c!26643)) b!141546))

(assert (= (and b!141546 c!26644) b!141547))

(assert (= (and b!141546 (not c!26644)) b!141548))

(declare-fun m!170051 () Bool)

(assert (=> b!141547 m!170051))

(assert (=> d!43803 d!44533))

(declare-fun d!44535 () Bool)

(assert (=> d!44535 (= (getValueByKey!175 lt!73735 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun lt!74288 () Unit!4395)

(assert (=> d!44535 (= lt!74288 (choose!873 lt!73735 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun e!92252 () Bool)

(assert (=> d!44535 e!92252))

(declare-fun res!67557 () Bool)

(assert (=> d!44535 (=> (not res!67557) (not e!92252))))

(assert (=> d!44535 (= res!67557 (isStrictlySorted!320 lt!73735))))

(assert (=> d!44535 (= (lemmaContainsTupThenGetReturnValue!91 lt!73735 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) lt!74288)))

(declare-fun b!141549 () Bool)

(declare-fun res!67558 () Bool)

(assert (=> b!141549 (=> (not res!67558) (not e!92252))))

(assert (=> b!141549 (= res!67558 (containsKey!179 lt!73735 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun b!141550 () Bool)

(assert (=> b!141550 (= e!92252 (contains!923 lt!73735 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(assert (= (and d!44535 res!67557) b!141549))

(assert (= (and b!141549 res!67558) b!141550))

(assert (=> d!44535 m!168173))

(declare-fun m!170053 () Bool)

(assert (=> d!44535 m!170053))

(declare-fun m!170055 () Bool)

(assert (=> d!44535 m!170055))

(declare-fun m!170057 () Bool)

(assert (=> b!141549 m!170057))

(declare-fun m!170059 () Bool)

(assert (=> b!141550 m!170059))

(assert (=> d!43803 d!44535))

(declare-fun d!44537 () Bool)

(declare-fun e!92253 () Bool)

(assert (=> d!44537 e!92253))

(declare-fun res!67560 () Bool)

(assert (=> d!44537 (=> (not res!67560) (not e!92253))))

(declare-fun lt!74289 () List!1764)

(assert (=> d!44537 (= res!67560 (isStrictlySorted!320 lt!74289))))

(declare-fun e!92255 () List!1764)

(assert (=> d!44537 (= lt!74289 e!92255)))

(declare-fun c!26645 () Bool)

(assert (=> d!44537 (= c!26645 (and ((_ is Cons!1760) (toList!889 lt!73493)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73493))) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(assert (=> d!44537 (isStrictlySorted!320 (toList!889 lt!73493))))

(assert (=> d!44537 (= (insertStrictlySorted!93 (toList!889 lt!73493) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) lt!74289)))

(declare-fun b!141551 () Bool)

(assert (=> b!141551 (= e!92253 (contains!923 lt!74289 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(declare-fun e!92256 () List!1764)

(declare-fun call!15698 () List!1764)

(declare-fun bm!15695 () Bool)

(assert (=> bm!15695 (= call!15698 ($colon$colon!93 e!92256 (ite c!26645 (h!2367 (toList!889 lt!73493)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))))

(declare-fun c!26648 () Bool)

(assert (=> bm!15695 (= c!26648 c!26645)))

(declare-fun b!141552 () Bool)

(assert (=> b!141552 (= e!92255 call!15698)))

(declare-fun b!141553 () Bool)

(assert (=> b!141553 (= e!92256 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73493)) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun b!141554 () Bool)

(declare-fun e!92257 () List!1764)

(declare-fun call!15699 () List!1764)

(assert (=> b!141554 (= e!92257 call!15699)))

(declare-fun bm!15696 () Bool)

(assert (=> bm!15696 (= call!15699 call!15698)))

(declare-fun b!141555 () Bool)

(declare-fun e!92254 () List!1764)

(declare-fun call!15700 () List!1764)

(assert (=> b!141555 (= e!92254 call!15700)))

(declare-fun c!26647 () Bool)

(declare-fun b!141556 () Bool)

(assert (=> b!141556 (= c!26647 (and ((_ is Cons!1760) (toList!889 lt!73493)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73493))) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(assert (=> b!141556 (= e!92257 e!92254)))

(declare-fun b!141557 () Bool)

(assert (=> b!141557 (= e!92255 e!92257)))

(declare-fun c!26646 () Bool)

(assert (=> b!141557 (= c!26646 (and ((_ is Cons!1760) (toList!889 lt!73493)) (= (_1!1352 (h!2367 (toList!889 lt!73493))) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(declare-fun b!141558 () Bool)

(assert (=> b!141558 (= e!92256 (ite c!26646 (t!6360 (toList!889 lt!73493)) (ite c!26647 (Cons!1760 (h!2367 (toList!889 lt!73493)) (t!6360 (toList!889 lt!73493))) Nil!1761)))))

(declare-fun bm!15697 () Bool)

(assert (=> bm!15697 (= call!15700 call!15699)))

(declare-fun b!141559 () Bool)

(declare-fun res!67559 () Bool)

(assert (=> b!141559 (=> (not res!67559) (not e!92253))))

(assert (=> b!141559 (= res!67559 (containsKey!179 lt!74289 (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun b!141560 () Bool)

(assert (=> b!141560 (= e!92254 call!15700)))

(assert (= (and d!44537 c!26645) b!141552))

(assert (= (and d!44537 (not c!26645)) b!141557))

(assert (= (and b!141557 c!26646) b!141554))

(assert (= (and b!141557 (not c!26646)) b!141556))

(assert (= (and b!141556 c!26647) b!141560))

(assert (= (and b!141556 (not c!26647)) b!141555))

(assert (= (or b!141560 b!141555) bm!15697))

(assert (= (or b!141554 bm!15697) bm!15696))

(assert (= (or b!141552 bm!15696) bm!15695))

(assert (= (and bm!15695 c!26648) b!141553))

(assert (= (and bm!15695 (not c!26648)) b!141558))

(assert (= (and d!44537 res!67560) b!141559))

(assert (= (and b!141559 res!67559) b!141551))

(declare-fun m!170061 () Bool)

(assert (=> b!141551 m!170061))

(declare-fun m!170063 () Bool)

(assert (=> b!141559 m!170063))

(declare-fun m!170065 () Bool)

(assert (=> b!141553 m!170065))

(declare-fun m!170067 () Bool)

(assert (=> bm!15695 m!170067))

(declare-fun m!170069 () Bool)

(assert (=> d!44537 m!170069))

(declare-fun m!170071 () Bool)

(assert (=> d!44537 m!170071))

(assert (=> d!43803 d!44537))

(declare-fun b!141561 () Bool)

(declare-fun e!92260 () Bool)

(declare-fun e!92259 () Bool)

(assert (=> b!141561 (= e!92260 e!92259)))

(declare-fun lt!74291 () (_ BitVec 64))

(assert (=> b!141561 (= lt!74291 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74292 () Unit!4395)

(assert (=> b!141561 (= lt!74292 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!74291 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141561 (arrayContainsKey!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!74291 #b00000000000000000000000000000000)))

(declare-fun lt!74290 () Unit!4395)

(assert (=> b!141561 (= lt!74290 lt!74292)))

(declare-fun res!67561 () Bool)

(assert (=> b!141561 (= res!67561 (= (seekEntryOrOpen!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) (Found!289 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141561 (=> (not res!67561) (not e!92259))))

(declare-fun d!44539 () Bool)

(declare-fun res!67562 () Bool)

(declare-fun e!92258 () Bool)

(assert (=> d!44539 (=> res!67562 e!92258)))

(assert (=> d!44539 (= res!67562 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!44539 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) e!92258)))

(declare-fun b!141562 () Bool)

(declare-fun call!15701 () Bool)

(assert (=> b!141562 (= e!92260 call!15701)))

(declare-fun b!141563 () Bool)

(assert (=> b!141563 (= e!92258 e!92260)))

(declare-fun c!26649 () Bool)

(assert (=> b!141563 (= c!26649 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141564 () Bool)

(assert (=> b!141564 (= e!92259 call!15701)))

(declare-fun bm!15698 () Bool)

(assert (=> bm!15698 (= call!15701 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(assert (= (and d!44539 (not res!67562)) b!141563))

(assert (= (and b!141563 c!26649) b!141561))

(assert (= (and b!141563 (not c!26649)) b!141562))

(assert (= (and b!141561 res!67561) b!141564))

(assert (= (or b!141564 b!141562) bm!15698))

(declare-fun m!170073 () Bool)

(assert (=> b!141561 m!170073))

(declare-fun m!170075 () Bool)

(assert (=> b!141561 m!170075))

(declare-fun m!170077 () Bool)

(assert (=> b!141561 m!170077))

(assert (=> b!141561 m!170073))

(declare-fun m!170079 () Bool)

(assert (=> b!141561 m!170079))

(assert (=> b!141563 m!170073))

(assert (=> b!141563 m!170073))

(declare-fun m!170081 () Bool)

(assert (=> b!141563 m!170081))

(declare-fun m!170083 () Bool)

(assert (=> bm!15698 m!170083))

(assert (=> bm!15642 d!44539))

(declare-fun d!44541 () Bool)

(assert (=> d!44541 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(declare-fun lt!74293 () Unit!4395)

(assert (=> d!44541 (= lt!74293 (choose!868 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(declare-fun e!92261 () Bool)

(assert (=> d!44541 e!92261))

(declare-fun res!67563 () Bool)

(assert (=> d!44541 (=> (not res!67563) (not e!92261))))

(assert (=> d!44541 (= res!67563 (isStrictlySorted!320 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))

(assert (=> d!44541 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))) lt!74293)))

(declare-fun b!141565 () Bool)

(assert (=> b!141565 (= e!92261 (containsKey!179 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(assert (= (and d!44541 res!67563) b!141565))

(assert (=> d!44541 m!166933))

(assert (=> d!44541 m!168319))

(assert (=> d!44541 m!168319))

(assert (=> d!44541 m!168321))

(assert (=> d!44541 m!166933))

(declare-fun m!170085 () Bool)

(assert (=> d!44541 m!170085))

(declare-fun m!170087 () Bool)

(assert (=> d!44541 m!170087))

(assert (=> b!141565 m!166933))

(assert (=> b!141565 m!168315))

(assert (=> b!140604 d!44541))

(assert (=> b!140604 d!44345))

(assert (=> b!140604 d!44347))

(declare-fun e!92263 () Option!181)

(declare-fun b!141568 () Bool)

(assert (=> b!141568 (= e!92263 (getValueByKey!175 (t!6360 (t!6360 lt!73509)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141567 () Bool)

(declare-fun e!92262 () Option!181)

(assert (=> b!141567 (= e!92262 e!92263)))

(declare-fun c!26651 () Bool)

(assert (=> b!141567 (= c!26651 (and ((_ is Cons!1760) (t!6360 lt!73509)) (not (= (_1!1352 (h!2367 (t!6360 lt!73509))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141569 () Bool)

(assert (=> b!141569 (= e!92263 None!179)))

(declare-fun b!141566 () Bool)

(assert (=> b!141566 (= e!92262 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73509)))))))

(declare-fun d!44543 () Bool)

(declare-fun c!26650 () Bool)

(assert (=> d!44543 (= c!26650 (and ((_ is Cons!1760) (t!6360 lt!73509)) (= (_1!1352 (h!2367 (t!6360 lt!73509))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44543 (= (getValueByKey!175 (t!6360 lt!73509) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92262)))

(assert (= (and d!44543 c!26650) b!141566))

(assert (= (and d!44543 (not c!26650)) b!141567))

(assert (= (and b!141567 c!26651) b!141568))

(assert (= (and b!141567 (not c!26651)) b!141569))

(declare-fun m!170089 () Bool)

(assert (=> b!141568 m!170089))

(assert (=> b!140360 d!44543))

(assert (=> d!44087 d!43661))

(declare-fun d!44545 () Bool)

(declare-fun lt!74294 () Bool)

(assert (=> d!44545 (= lt!74294 (select (content!137 (toList!889 lt!73741)) (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))

(declare-fun e!92264 () Bool)

(assert (=> d!44545 (= lt!74294 e!92264)))

(declare-fun res!67565 () Bool)

(assert (=> d!44545 (=> (not res!67565) (not e!92264))))

(assert (=> d!44545 (= res!67565 ((_ is Cons!1760) (toList!889 lt!73741)))))

(assert (=> d!44545 (= (contains!923 (toList!889 lt!73741) (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) lt!74294)))

(declare-fun b!141570 () Bool)

(declare-fun e!92265 () Bool)

(assert (=> b!141570 (= e!92264 e!92265)))

(declare-fun res!67564 () Bool)

(assert (=> b!141570 (=> res!67564 e!92265)))

(assert (=> b!141570 (= res!67564 (= (h!2367 (toList!889 lt!73741)) (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))

(declare-fun b!141571 () Bool)

(assert (=> b!141571 (= e!92265 (contains!923 (t!6360 (toList!889 lt!73741)) (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44545 res!67565) b!141570))

(assert (= (and b!141570 (not res!67564)) b!141571))

(declare-fun m!170091 () Bool)

(assert (=> d!44545 m!170091))

(declare-fun m!170093 () Bool)

(assert (=> d!44545 m!170093))

(declare-fun m!170095 () Bool)

(assert (=> b!141571 m!170095))

(assert (=> b!140581 d!44545))

(declare-fun d!44547 () Bool)

(assert (=> d!44547 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5956 () Bool)

(assert (= bs!5956 d!44547))

(assert (=> bs!5956 m!168047))

(declare-fun m!170097 () Bool)

(assert (=> bs!5956 m!170097))

(assert (=> b!141094 d!44547))

(assert (=> b!141094 d!44341))

(declare-fun d!44549 () Bool)

(declare-fun lt!74295 () Bool)

(assert (=> d!44549 (= lt!74295 (select (content!137 (toList!889 lt!73986)) (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))

(declare-fun e!92266 () Bool)

(assert (=> d!44549 (= lt!74295 e!92266)))

(declare-fun res!67567 () Bool)

(assert (=> d!44549 (=> (not res!67567) (not e!92266))))

(assert (=> d!44549 (= res!67567 ((_ is Cons!1760) (toList!889 lt!73986)))))

(assert (=> d!44549 (= (contains!923 (toList!889 lt!73986) (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) lt!74295)))

(declare-fun b!141572 () Bool)

(declare-fun e!92267 () Bool)

(assert (=> b!141572 (= e!92266 e!92267)))

(declare-fun res!67566 () Bool)

(assert (=> b!141572 (=> res!67566 e!92267)))

(assert (=> b!141572 (= res!67566 (= (h!2367 (toList!889 lt!73986)) (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))

(declare-fun b!141573 () Bool)

(assert (=> b!141573 (= e!92267 (contains!923 (t!6360 (toList!889 lt!73986)) (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44549 res!67567) b!141572))

(assert (= (and b!141572 (not res!67566)) b!141573))

(declare-fun m!170099 () Bool)

(assert (=> d!44549 m!170099))

(declare-fun m!170101 () Bool)

(assert (=> d!44549 m!170101))

(declare-fun m!170103 () Bool)

(assert (=> b!141573 m!170103))

(assert (=> b!140906 d!44549))

(declare-fun d!44551 () Bool)

(declare-fun e!92269 () Bool)

(assert (=> d!44551 e!92269))

(declare-fun res!67568 () Bool)

(assert (=> d!44551 (=> res!67568 e!92269)))

(declare-fun lt!74296 () Bool)

(assert (=> d!44551 (= res!67568 (not lt!74296))))

(declare-fun lt!74299 () Bool)

(assert (=> d!44551 (= lt!74296 lt!74299)))

(declare-fun lt!74297 () Unit!4395)

(declare-fun e!92268 () Unit!4395)

(assert (=> d!44551 (= lt!74297 e!92268)))

(declare-fun c!26652 () Bool)

(assert (=> d!44551 (= c!26652 lt!74299)))

(assert (=> d!44551 (= lt!74299 (containsKey!179 (toList!889 lt!73941) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44551 (= (contains!921 lt!73941 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74296)))

(declare-fun b!141574 () Bool)

(declare-fun lt!74298 () Unit!4395)

(assert (=> b!141574 (= e!92268 lt!74298)))

(assert (=> b!141574 (= lt!74298 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73941) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141574 (isDefined!129 (getValueByKey!175 (toList!889 lt!73941) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141575 () Bool)

(declare-fun Unit!4473 () Unit!4395)

(assert (=> b!141575 (= e!92268 Unit!4473)))

(declare-fun b!141576 () Bool)

(assert (=> b!141576 (= e!92269 (isDefined!129 (getValueByKey!175 (toList!889 lt!73941) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44551 c!26652) b!141574))

(assert (= (and d!44551 (not c!26652)) b!141575))

(assert (= (and d!44551 (not res!67568)) b!141576))

(declare-fun m!170105 () Bool)

(assert (=> d!44551 m!170105))

(declare-fun m!170107 () Bool)

(assert (=> b!141574 m!170107))

(declare-fun m!170109 () Bool)

(assert (=> b!141574 m!170109))

(assert (=> b!141574 m!170109))

(declare-fun m!170111 () Bool)

(assert (=> b!141574 m!170111))

(assert (=> b!141576 m!170109))

(assert (=> b!141576 m!170109))

(assert (=> b!141576 m!170111))

(assert (=> bm!15650 d!44551))

(declare-fun d!44553 () Bool)

(declare-fun res!67569 () Bool)

(declare-fun e!92270 () Bool)

(assert (=> d!44553 (=> res!67569 e!92270)))

(assert (=> d!44553 (= res!67569 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15504))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15504)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44553 (= (containsKey!179 (t!6360 (toList!889 call!15504)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92270)))

(declare-fun b!141577 () Bool)

(declare-fun e!92271 () Bool)

(assert (=> b!141577 (= e!92270 e!92271)))

(declare-fun res!67570 () Bool)

(assert (=> b!141577 (=> (not res!67570) (not e!92271))))

(assert (=> b!141577 (= res!67570 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 call!15504)))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 call!15504)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (t!6360 (toList!889 call!15504))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 call!15504)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!141578 () Bool)

(assert (=> b!141578 (= e!92271 (containsKey!179 (t!6360 (t!6360 (toList!889 call!15504))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!44553 (not res!67569)) b!141577))

(assert (= (and b!141577 res!67570) b!141578))

(assert (=> b!141578 m!166733))

(declare-fun m!170113 () Bool)

(assert (=> b!141578 m!170113))

(assert (=> b!141058 d!44553))

(declare-fun d!44555 () Bool)

(assert (=> d!44555 (isDefined!129 (getValueByKey!175 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!74300 () Unit!4395)

(assert (=> d!44555 (= lt!74300 (choose!868 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!92272 () Bool)

(assert (=> d!44555 e!92272))

(declare-fun res!67571 () Bool)

(assert (=> d!44555 (=> (not res!67571) (not e!92272))))

(assert (=> d!44555 (= res!67571 (isStrictlySorted!320 (toList!889 lt!73550)))))

(assert (=> d!44555 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74300)))

(declare-fun b!141579 () Bool)

(assert (=> b!141579 (= e!92272 (containsKey!179 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44555 res!67571) b!141579))

(assert (=> d!44555 m!167485))

(assert (=> d!44555 m!167485))

(assert (=> d!44555 m!167675))

(declare-fun m!170115 () Bool)

(assert (=> d!44555 m!170115))

(declare-fun m!170117 () Bool)

(assert (=> d!44555 m!170117))

(assert (=> b!141579 m!167671))

(assert (=> b!140286 d!44555))

(assert (=> b!140286 d!44383))

(assert (=> b!140286 d!43657))

(declare-fun d!44557 () Bool)

(declare-fun e!92273 () Bool)

(assert (=> d!44557 e!92273))

(declare-fun res!67573 () Bool)

(assert (=> d!44557 (=> (not res!67573) (not e!92273))))

(declare-fun lt!74301 () List!1764)

(assert (=> d!44557 (= res!67573 (isStrictlySorted!320 lt!74301))))

(declare-fun e!92275 () List!1764)

(assert (=> d!44557 (= lt!74301 e!92275)))

(declare-fun c!26653 () Bool)

(assert (=> d!44557 (= c!26653 (and ((_ is Cons!1760) (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!44557 (isStrictlySorted!320 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))))))

(assert (=> d!44557 (= (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74301)))

(declare-fun b!141580 () Bool)

(assert (=> b!141580 (= e!92273 (contains!923 lt!74301 (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun e!92276 () List!1764)

(declare-fun bm!15699 () Bool)

(declare-fun call!15702 () List!1764)

(assert (=> bm!15699 (= call!15702 ($colon$colon!93 e!92276 (ite c!26653 (h!2367 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun c!26656 () Bool)

(assert (=> bm!15699 (= c!26656 c!26653)))

(declare-fun b!141581 () Bool)

(assert (=> b!141581 (= e!92275 call!15702)))

(declare-fun b!141582 () Bool)

(assert (=> b!141582 (= e!92276 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141583 () Bool)

(declare-fun e!92277 () List!1764)

(declare-fun call!15703 () List!1764)

(assert (=> b!141583 (= e!92277 call!15703)))

(declare-fun bm!15700 () Bool)

(assert (=> bm!15700 (= call!15703 call!15702)))

(declare-fun b!141584 () Bool)

(declare-fun e!92274 () List!1764)

(declare-fun call!15704 () List!1764)

(assert (=> b!141584 (= e!92274 call!15704)))

(declare-fun c!26655 () Bool)

(declare-fun b!141585 () Bool)

(assert (=> b!141585 (= c!26655 (and ((_ is Cons!1760) (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> b!141585 (= e!92277 e!92274)))

(declare-fun b!141586 () Bool)

(assert (=> b!141586 (= e!92275 e!92277)))

(declare-fun c!26654 () Bool)

(assert (=> b!141586 (= c!26654 (and ((_ is Cons!1760) (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (= (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141587 () Bool)

(assert (=> b!141587 (= e!92276 (ite c!26654 (t!6360 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (ite c!26655 (Cons!1760 (h!2367 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (t!6360 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))))) Nil!1761)))))

(declare-fun bm!15701 () Bool)

(assert (=> bm!15701 (= call!15704 call!15703)))

(declare-fun b!141588 () Bool)

(declare-fun res!67572 () Bool)

(assert (=> b!141588 (=> (not res!67572) (not e!92273))))

(assert (=> b!141588 (= res!67572 (containsKey!179 lt!74301 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141589 () Bool)

(assert (=> b!141589 (= e!92274 call!15704)))

(assert (= (and d!44557 c!26653) b!141581))

(assert (= (and d!44557 (not c!26653)) b!141586))

(assert (= (and b!141586 c!26654) b!141583))

(assert (= (and b!141586 (not c!26654)) b!141585))

(assert (= (and b!141585 c!26655) b!141589))

(assert (= (and b!141585 (not c!26655)) b!141584))

(assert (= (or b!141589 b!141584) bm!15701))

(assert (= (or b!141583 bm!15701) bm!15700))

(assert (= (or b!141581 bm!15700) bm!15699))

(assert (= (and bm!15699 c!26656) b!141582))

(assert (= (and bm!15699 (not c!26656)) b!141587))

(assert (= (and d!44557 res!67573) b!141588))

(assert (= (and b!141588 res!67572) b!141580))

(declare-fun m!170119 () Bool)

(assert (=> b!141580 m!170119))

(declare-fun m!170121 () Bool)

(assert (=> b!141588 m!170121))

(declare-fun m!170123 () Bool)

(assert (=> b!141582 m!170123))

(declare-fun m!170125 () Bool)

(assert (=> bm!15699 m!170125))

(declare-fun m!170127 () Bool)

(assert (=> d!44557 m!170127))

(declare-fun m!170129 () Bool)

(assert (=> d!44557 m!170129))

(assert (=> b!140521 d!44557))

(declare-fun d!44559 () Bool)

(declare-fun lt!74302 () Bool)

(assert (=> d!44559 (= lt!74302 (select (content!137 (toList!889 lt!73726)) (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))

(declare-fun e!92278 () Bool)

(assert (=> d!44559 (= lt!74302 e!92278)))

(declare-fun res!67575 () Bool)

(assert (=> d!44559 (=> (not res!67575) (not e!92278))))

(assert (=> d!44559 (= res!67575 ((_ is Cons!1760) (toList!889 lt!73726)))))

(assert (=> d!44559 (= (contains!923 (toList!889 lt!73726) (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) lt!74302)))

(declare-fun b!141590 () Bool)

(declare-fun e!92279 () Bool)

(assert (=> b!141590 (= e!92278 e!92279)))

(declare-fun res!67574 () Bool)

(assert (=> b!141590 (=> res!67574 e!92279)))

(assert (=> b!141590 (= res!67574 (= (h!2367 (toList!889 lt!73726)) (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))

(declare-fun b!141591 () Bool)

(assert (=> b!141591 (= e!92279 (contains!923 (t!6360 (toList!889 lt!73726)) (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))

(assert (= (and d!44559 res!67575) b!141590))

(assert (= (and b!141590 (not res!67574)) b!141591))

(declare-fun m!170131 () Bool)

(assert (=> d!44559 m!170131))

(declare-fun m!170133 () Bool)

(assert (=> d!44559 m!170133))

(declare-fun m!170135 () Bool)

(assert (=> b!141591 m!170135))

(assert (=> b!140573 d!44559))

(declare-fun e!92281 () Option!181)

(declare-fun b!141594 () Bool)

(assert (=> b!141594 (= e!92281 (getValueByKey!175 (t!6360 (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73151))))

(declare-fun b!141593 () Bool)

(declare-fun e!92280 () Option!181)

(assert (=> b!141593 (= e!92280 e!92281)))

(declare-fun c!26658 () Bool)

(assert (=> b!141593 (= c!26658 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73151))))))

(declare-fun b!141595 () Bool)

(assert (=> b!141595 (= e!92281 None!179)))

(declare-fun b!141592 () Bool)

(assert (=> b!141592 (= e!92280 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))))

(declare-fun c!26657 () Bool)

(declare-fun d!44561 () Bool)

(assert (=> d!44561 (= c!26657 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73151)))))

(assert (=> d!44561 (= (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73140 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73151) e!92280)))

(assert (= (and d!44561 c!26657) b!141592))

(assert (= (and d!44561 (not c!26657)) b!141593))

(assert (= (and b!141593 c!26658) b!141594))

(assert (= (and b!141593 (not c!26658)) b!141595))

(declare-fun m!170137 () Bool)

(assert (=> b!141594 m!170137))

(assert (=> b!140636 d!44561))

(assert (=> b!140890 d!43605))

(declare-fun e!92283 () Option!181)

(declare-fun b!141598 () Bool)

(assert (=> b!141598 (= e!92283 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73535))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141597 () Bool)

(declare-fun e!92282 () Option!181)

(assert (=> b!141597 (= e!92282 e!92283)))

(declare-fun c!26660 () Bool)

(assert (=> b!141597 (= c!26660 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73535))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73535)))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141599 () Bool)

(assert (=> b!141599 (= e!92283 None!179)))

(declare-fun b!141596 () Bool)

(assert (=> b!141596 (= e!92282 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73535))))))))

(declare-fun d!44563 () Bool)

(declare-fun c!26659 () Bool)

(assert (=> d!44563 (= c!26659 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73535))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73535)))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44563 (= (getValueByKey!175 (t!6360 (toList!889 lt!73535)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92282)))

(assert (= (and d!44563 c!26659) b!141596))

(assert (= (and d!44563 (not c!26659)) b!141597))

(assert (= (and b!141597 c!26660) b!141598))

(assert (= (and b!141597 (not c!26660)) b!141599))

(declare-fun m!170139 () Bool)

(assert (=> b!141598 m!170139))

(assert (=> b!140448 d!44563))

(declare-fun d!44565 () Bool)

(assert (=> d!44565 (arrayNoDuplicates!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73334 lt!73336)))

(assert (=> d!44565 true))

(declare-fun _$65!65 () Unit!4395)

(assert (=> d!44565 (= (choose!41 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) lt!73334 lt!73336) _$65!65)))

(declare-fun bs!5957 () Bool)

(assert (= bs!5957 d!44565))

(assert (=> bs!5957 m!167023))

(assert (=> bs!5957 m!167035))

(assert (=> d!43897 d!44565))

(assert (=> b!140263 d!43605))

(declare-fun d!44567 () Bool)

(declare-fun lt!74303 () Bool)

(assert (=> d!44567 (= lt!74303 (select (content!137 (t!6360 (toList!889 lt!73528))) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92284 () Bool)

(assert (=> d!44567 (= lt!74303 e!92284)))

(declare-fun res!67577 () Bool)

(assert (=> d!44567 (=> (not res!67577) (not e!92284))))

(assert (=> d!44567 (= res!67577 ((_ is Cons!1760) (t!6360 (toList!889 lt!73528))))))

(assert (=> d!44567 (= (contains!923 (t!6360 (toList!889 lt!73528)) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74303)))

(declare-fun b!141600 () Bool)

(declare-fun e!92285 () Bool)

(assert (=> b!141600 (= e!92284 e!92285)))

(declare-fun res!67576 () Bool)

(assert (=> b!141600 (=> res!67576 e!92285)))

(assert (=> b!141600 (= res!67576 (= (h!2367 (t!6360 (toList!889 lt!73528))) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141601 () Bool)

(assert (=> b!141601 (= e!92285 (contains!923 (t!6360 (t!6360 (toList!889 lt!73528))) (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44567 res!67577) b!141600))

(assert (= (and b!141600 (not res!67576)) b!141601))

(declare-fun m!170141 () Bool)

(assert (=> d!44567 m!170141))

(declare-fun m!170143 () Bool)

(assert (=> d!44567 m!170143))

(declare-fun m!170145 () Bool)

(assert (=> b!141601 m!170145))

(assert (=> b!140633 d!44567))

(declare-fun d!44569 () Bool)

(declare-fun e!92287 () Bool)

(assert (=> d!44569 e!92287))

(declare-fun res!67578 () Bool)

(assert (=> d!44569 (=> res!67578 e!92287)))

(declare-fun lt!74304 () Bool)

(assert (=> d!44569 (= res!67578 (not lt!74304))))

(declare-fun lt!74307 () Bool)

(assert (=> d!44569 (= lt!74304 lt!74307)))

(declare-fun lt!74305 () Unit!4395)

(declare-fun e!92286 () Unit!4395)

(assert (=> d!44569 (= lt!74305 e!92286)))

(declare-fun c!26661 () Bool)

(assert (=> d!44569 (= c!26661 lt!74307)))

(assert (=> d!44569 (= lt!74307 (containsKey!179 (toList!889 lt!73820) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44569 (= (contains!921 lt!73820 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74304)))

(declare-fun b!141602 () Bool)

(declare-fun lt!74306 () Unit!4395)

(assert (=> b!141602 (= e!92286 lt!74306)))

(assert (=> b!141602 (= lt!74306 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73820) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!141602 (isDefined!129 (getValueByKey!175 (toList!889 lt!73820) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141603 () Bool)

(declare-fun Unit!4474 () Unit!4395)

(assert (=> b!141603 (= e!92286 Unit!4474)))

(declare-fun b!141604 () Bool)

(assert (=> b!141604 (= e!92287 (isDefined!129 (getValueByKey!175 (toList!889 lt!73820) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44569 c!26661) b!141602))

(assert (= (and d!44569 (not c!26661)) b!141603))

(assert (= (and d!44569 (not res!67578)) b!141604))

(declare-fun m!170147 () Bool)

(assert (=> d!44569 m!170147))

(declare-fun m!170149 () Bool)

(assert (=> b!141602 m!170149))

(assert (=> b!141602 m!168477))

(assert (=> b!141602 m!168477))

(declare-fun m!170151 () Bool)

(assert (=> b!141602 m!170151))

(assert (=> b!141604 m!168477))

(assert (=> b!141604 m!168477))

(assert (=> b!141604 m!170151))

(assert (=> d!43905 d!44569))

(declare-fun e!92289 () Option!181)

(declare-fun b!141607 () Bool)

(assert (=> b!141607 (= e!92289 (getValueByKey!175 (t!6360 lt!73821) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141606 () Bool)

(declare-fun e!92288 () Option!181)

(assert (=> b!141606 (= e!92288 e!92289)))

(declare-fun c!26663 () Bool)

(assert (=> b!141606 (= c!26663 (and ((_ is Cons!1760) lt!73821) (not (= (_1!1352 (h!2367 lt!73821)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141608 () Bool)

(assert (=> b!141608 (= e!92289 None!179)))

(declare-fun b!141605 () Bool)

(assert (=> b!141605 (= e!92288 (Some!180 (_2!1352 (h!2367 lt!73821))))))

(declare-fun c!26662 () Bool)

(declare-fun d!44571 () Bool)

(assert (=> d!44571 (= c!26662 (and ((_ is Cons!1760) lt!73821) (= (_1!1352 (h!2367 lt!73821)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44571 (= (getValueByKey!175 lt!73821 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92288)))

(assert (= (and d!44571 c!26662) b!141605))

(assert (= (and d!44571 (not c!26662)) b!141606))

(assert (= (and b!141606 c!26663) b!141607))

(assert (= (and b!141606 (not c!26663)) b!141608))

(declare-fun m!170153 () Bool)

(assert (=> b!141607 m!170153))

(assert (=> d!43905 d!44571))

(declare-fun d!44573 () Bool)

(assert (=> d!44573 (= (getValueByKey!175 lt!73821 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74308 () Unit!4395)

(assert (=> d!44573 (= lt!74308 (choose!873 lt!73821 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92290 () Bool)

(assert (=> d!44573 e!92290))

(declare-fun res!67579 () Bool)

(assert (=> d!44573 (=> (not res!67579) (not e!92290))))

(assert (=> d!44573 (= res!67579 (isStrictlySorted!320 lt!73821))))

(assert (=> d!44573 (= (lemmaContainsTupThenGetReturnValue!91 lt!73821 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74308)))

(declare-fun b!141609 () Bool)

(declare-fun res!67580 () Bool)

(assert (=> b!141609 (=> (not res!67580) (not e!92290))))

(assert (=> b!141609 (= res!67580 (containsKey!179 lt!73821 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141610 () Bool)

(assert (=> b!141610 (= e!92290 (contains!923 lt!73821 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44573 res!67579) b!141609))

(assert (= (and b!141609 res!67580) b!141610))

(assert (=> d!44573 m!168471))

(declare-fun m!170155 () Bool)

(assert (=> d!44573 m!170155))

(declare-fun m!170157 () Bool)

(assert (=> d!44573 m!170157))

(declare-fun m!170159 () Bool)

(assert (=> b!141609 m!170159))

(declare-fun m!170161 () Bool)

(assert (=> b!141610 m!170161))

(assert (=> d!43905 d!44573))

(declare-fun d!44575 () Bool)

(declare-fun e!92291 () Bool)

(assert (=> d!44575 e!92291))

(declare-fun res!67582 () Bool)

(assert (=> d!44575 (=> (not res!67582) (not e!92291))))

(declare-fun lt!74309 () List!1764)

(assert (=> d!44575 (= res!67582 (isStrictlySorted!320 lt!74309))))

(declare-fun e!92293 () List!1764)

(assert (=> d!44575 (= lt!74309 e!92293)))

(declare-fun c!26664 () Bool)

(assert (=> d!44575 (= c!26664 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44575 (isStrictlySorted!320 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (=> d!44575 (= (insertStrictlySorted!93 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74309)))

(declare-fun b!141611 () Bool)

(assert (=> b!141611 (= e!92291 (contains!923 lt!74309 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92294 () List!1764)

(declare-fun call!15705 () List!1764)

(declare-fun bm!15702 () Bool)

(assert (=> bm!15702 (= call!15705 ($colon$colon!93 e!92294 (ite c!26664 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26667 () Bool)

(assert (=> bm!15702 (= c!26667 c!26664)))

(declare-fun b!141612 () Bool)

(assert (=> b!141612 (= e!92293 call!15705)))

(declare-fun b!141613 () Bool)

(assert (=> b!141613 (= e!92294 (insertStrictlySorted!93 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141614 () Bool)

(declare-fun e!92295 () List!1764)

(declare-fun call!15706 () List!1764)

(assert (=> b!141614 (= e!92295 call!15706)))

(declare-fun bm!15703 () Bool)

(assert (=> bm!15703 (= call!15706 call!15705)))

(declare-fun b!141615 () Bool)

(declare-fun e!92292 () List!1764)

(declare-fun call!15707 () List!1764)

(assert (=> b!141615 (= e!92292 call!15707)))

(declare-fun c!26666 () Bool)

(declare-fun b!141616 () Bool)

(assert (=> b!141616 (= c!26666 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvsgt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!141616 (= e!92295 e!92292)))

(declare-fun b!141617 () Bool)

(assert (=> b!141617 (= e!92293 e!92295)))

(declare-fun c!26665 () Bool)

(assert (=> b!141617 (= c!26665 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141618 () Bool)

(assert (=> b!141618 (= e!92294 (ite c!26665 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (ite c!26666 (Cons!1760 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) Nil!1761)))))

(declare-fun bm!15704 () Bool)

(assert (=> bm!15704 (= call!15707 call!15706)))

(declare-fun b!141619 () Bool)

(declare-fun res!67581 () Bool)

(assert (=> b!141619 (=> (not res!67581) (not e!92291))))

(assert (=> b!141619 (= res!67581 (containsKey!179 lt!74309 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141620 () Bool)

(assert (=> b!141620 (= e!92292 call!15707)))

(assert (= (and d!44575 c!26664) b!141612))

(assert (= (and d!44575 (not c!26664)) b!141617))

(assert (= (and b!141617 c!26665) b!141614))

(assert (= (and b!141617 (not c!26665)) b!141616))

(assert (= (and b!141616 c!26666) b!141620))

(assert (= (and b!141616 (not c!26666)) b!141615))

(assert (= (or b!141620 b!141615) bm!15704))

(assert (= (or b!141614 bm!15704) bm!15703))

(assert (= (or b!141612 bm!15703) bm!15702))

(assert (= (and bm!15702 c!26667) b!141613))

(assert (= (and bm!15702 (not c!26667)) b!141618))

(assert (= (and d!44575 res!67582) b!141619))

(assert (= (and b!141619 res!67581) b!141611))

(declare-fun m!170163 () Bool)

(assert (=> b!141611 m!170163))

(declare-fun m!170165 () Bool)

(assert (=> b!141619 m!170165))

(declare-fun m!170167 () Bool)

(assert (=> b!141613 m!170167))

(declare-fun m!170169 () Bool)

(assert (=> bm!15702 m!170169))

(declare-fun m!170171 () Bool)

(assert (=> d!44575 m!170171))

(declare-fun m!170173 () Bool)

(assert (=> d!44575 m!170173))

(assert (=> d!43905 d!44575))

(declare-fun d!44577 () Bool)

(declare-fun res!67583 () Bool)

(declare-fun e!92296 () Bool)

(assert (=> d!44577 (=> res!67583 e!92296)))

(assert (=> d!44577 (= res!67583 (= (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!44577 (= (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92296)))

(declare-fun b!141621 () Bool)

(declare-fun e!92297 () Bool)

(assert (=> b!141621 (= e!92296 e!92297)))

(declare-fun res!67584 () Bool)

(assert (=> b!141621 (=> (not res!67584) (not e!92297))))

(assert (=> b!141621 (= res!67584 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141622 () Bool)

(assert (=> b!141622 (= e!92297 (arrayContainsKey!0 (_keys!4699 newMap!16) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!44577 (not res!67583)) b!141621))

(assert (= (and b!141621 res!67584) b!141622))

(assert (=> d!44577 m!169555))

(assert (=> b!141622 m!166733))

(declare-fun m!170175 () Bool)

(assert (=> b!141622 m!170175))

(assert (=> b!141068 d!44577))

(declare-fun b!141625 () Bool)

(declare-fun e!92299 () Option!181)

(assert (=> b!141625 (= e!92299 (getValueByKey!175 (t!6360 (toList!889 lt!73681)) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141624 () Bool)

(declare-fun e!92298 () Option!181)

(assert (=> b!141624 (= e!92298 e!92299)))

(declare-fun c!26669 () Bool)

(assert (=> b!141624 (= c!26669 (and ((_ is Cons!1760) (toList!889 lt!73681)) (not (= (_1!1352 (h!2367 (toList!889 lt!73681))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun b!141626 () Bool)

(assert (=> b!141626 (= e!92299 None!179)))

(declare-fun b!141623 () Bool)

(assert (=> b!141623 (= e!92298 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73681)))))))

(declare-fun d!44579 () Bool)

(declare-fun c!26668 () Bool)

(assert (=> d!44579 (= c!26668 (and ((_ is Cons!1760) (toList!889 lt!73681)) (= (_1!1352 (h!2367 (toList!889 lt!73681))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> d!44579 (= (getValueByKey!175 (toList!889 lt!73681) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) e!92298)))

(assert (= (and d!44579 c!26668) b!141623))

(assert (= (and d!44579 (not c!26668)) b!141624))

(assert (= (and b!141624 c!26669) b!141625))

(assert (= (and b!141624 (not c!26669)) b!141626))

(declare-fun m!170177 () Bool)

(assert (=> b!141625 m!170177))

(assert (=> b!140461 d!44579))

(declare-fun d!44581 () Bool)

(assert (=> d!44581 (= (apply!120 lt!73831 lt!73842) (get!1538 (getValueByKey!175 (toList!889 lt!73831) lt!73842)))))

(declare-fun bs!5958 () Bool)

(assert (= bs!5958 d!44581))

(declare-fun m!170179 () Bool)

(assert (=> bs!5958 m!170179))

(assert (=> bs!5958 m!170179))

(declare-fun m!170181 () Bool)

(assert (=> bs!5958 m!170181))

(assert (=> b!140695 d!44581))

(declare-fun d!44583 () Bool)

(assert (=> d!44583 (contains!921 (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))) lt!73833)))

(declare-fun lt!74310 () Unit!4395)

(assert (=> d!44583 (= lt!74310 (choose!871 lt!73835 lt!73828 (zeroValue!2790 newMap!16) lt!73833))))

(assert (=> d!44583 (contains!921 lt!73835 lt!73833)))

(assert (=> d!44583 (= (addStillContains!96 lt!73835 lt!73828 (zeroValue!2790 newMap!16) lt!73833) lt!74310)))

(declare-fun bs!5959 () Bool)

(assert (= bs!5959 d!44583))

(assert (=> bs!5959 m!168509))

(assert (=> bs!5959 m!168509))

(assert (=> bs!5959 m!168511))

(declare-fun m!170183 () Bool)

(assert (=> bs!5959 m!170183))

(declare-fun m!170185 () Bool)

(assert (=> bs!5959 m!170185))

(assert (=> b!140695 d!44583))

(declare-fun d!44585 () Bool)

(declare-fun e!92300 () Bool)

(assert (=> d!44585 e!92300))

(declare-fun res!67586 () Bool)

(assert (=> d!44585 (=> (not res!67586) (not e!92300))))

(declare-fun lt!74313 () ListLongMap!1747)

(assert (=> d!44585 (= res!67586 (contains!921 lt!74313 (_1!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74314 () List!1764)

(assert (=> d!44585 (= lt!74313 (ListLongMap!1748 lt!74314))))

(declare-fun lt!74311 () Unit!4395)

(declare-fun lt!74312 () Unit!4395)

(assert (=> d!44585 (= lt!74311 lt!74312)))

(assert (=> d!44585 (= (getValueByKey!175 lt!74314 (_1!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44585 (= lt!74312 (lemmaContainsTupThenGetReturnValue!91 lt!74314 (_1!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44585 (= lt!74314 (insertStrictlySorted!93 (toList!889 lt!73835) (_1!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44585 (= (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))) lt!74313)))

(declare-fun b!141627 () Bool)

(declare-fun res!67585 () Bool)

(assert (=> b!141627 (=> (not res!67585) (not e!92300))))

(assert (=> b!141627 (= res!67585 (= (getValueByKey!175 (toList!889 lt!74313) (_1!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141628 () Bool)

(assert (=> b!141628 (= e!92300 (contains!923 (toList!889 lt!74313) (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44585 res!67586) b!141627))

(assert (= (and b!141627 res!67585) b!141628))

(declare-fun m!170187 () Bool)

(assert (=> d!44585 m!170187))

(declare-fun m!170189 () Bool)

(assert (=> d!44585 m!170189))

(declare-fun m!170191 () Bool)

(assert (=> d!44585 m!170191))

(declare-fun m!170193 () Bool)

(assert (=> d!44585 m!170193))

(declare-fun m!170195 () Bool)

(assert (=> b!141627 m!170195))

(declare-fun m!170197 () Bool)

(assert (=> b!141628 m!170197))

(assert (=> b!140695 d!44585))

(declare-fun d!44587 () Bool)

(assert (=> d!44587 (= (apply!120 lt!73837 lt!73843) (get!1538 (getValueByKey!175 (toList!889 lt!73837) lt!73843)))))

(declare-fun bs!5960 () Bool)

(assert (= bs!5960 d!44587))

(declare-fun m!170199 () Bool)

(assert (=> bs!5960 m!170199))

(assert (=> bs!5960 m!170199))

(declare-fun m!170201 () Bool)

(assert (=> bs!5960 m!170201))

(assert (=> b!140695 d!44587))

(declare-fun d!44589 () Bool)

(declare-fun e!92301 () Bool)

(assert (=> d!44589 e!92301))

(declare-fun res!67588 () Bool)

(assert (=> d!44589 (=> (not res!67588) (not e!92301))))

(declare-fun lt!74317 () ListLongMap!1747)

(assert (=> d!44589 (= res!67588 (contains!921 lt!74317 (_1!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16)))))))

(declare-fun lt!74318 () List!1764)

(assert (=> d!44589 (= lt!74317 (ListLongMap!1748 lt!74318))))

(declare-fun lt!74315 () Unit!4395)

(declare-fun lt!74316 () Unit!4395)

(assert (=> d!44589 (= lt!74315 lt!74316)))

(assert (=> d!44589 (= (getValueByKey!175 lt!74318 (_1!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16)))))))

(assert (=> d!44589 (= lt!74316 (lemmaContainsTupThenGetReturnValue!91 lt!74318 (_1!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16)))))))

(assert (=> d!44589 (= lt!74318 (insertStrictlySorted!93 (toList!889 lt!73840) (_1!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16)))))))

(assert (=> d!44589 (= (+!174 lt!73840 (tuple2!2685 lt!73823 (minValue!2790 newMap!16))) lt!74317)))

(declare-fun b!141629 () Bool)

(declare-fun res!67587 () Bool)

(assert (=> b!141629 (=> (not res!67587) (not e!92301))))

(assert (=> b!141629 (= res!67587 (= (getValueByKey!175 (toList!889 lt!74317) (_1!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73823 (minValue!2790 newMap!16))))))))

(declare-fun b!141630 () Bool)

(assert (=> b!141630 (= e!92301 (contains!923 (toList!889 lt!74317) (tuple2!2685 lt!73823 (minValue!2790 newMap!16))))))

(assert (= (and d!44589 res!67588) b!141629))

(assert (= (and b!141629 res!67587) b!141630))

(declare-fun m!170203 () Bool)

(assert (=> d!44589 m!170203))

(declare-fun m!170205 () Bool)

(assert (=> d!44589 m!170205))

(declare-fun m!170207 () Bool)

(assert (=> d!44589 m!170207))

(declare-fun m!170209 () Bool)

(assert (=> d!44589 m!170209))

(declare-fun m!170211 () Bool)

(assert (=> b!141629 m!170211))

(declare-fun m!170213 () Bool)

(assert (=> b!141630 m!170213))

(assert (=> b!140695 d!44589))

(declare-fun d!44591 () Bool)

(declare-fun e!92302 () Bool)

(assert (=> d!44591 e!92302))

(declare-fun res!67590 () Bool)

(assert (=> d!44591 (=> (not res!67590) (not e!92302))))

(declare-fun lt!74321 () ListLongMap!1747)

(assert (=> d!44591 (= res!67590 (contains!921 lt!74321 (_1!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74322 () List!1764)

(assert (=> d!44591 (= lt!74321 (ListLongMap!1748 lt!74322))))

(declare-fun lt!74319 () Unit!4395)

(declare-fun lt!74320 () Unit!4395)

(assert (=> d!44591 (= lt!74319 lt!74320)))

(assert (=> d!44591 (= (getValueByKey!175 lt!74322 (_1!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44591 (= lt!74320 (lemmaContainsTupThenGetReturnValue!91 lt!74322 (_1!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44591 (= lt!74322 (insertStrictlySorted!93 (toList!889 lt!73831) (_1!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44591 (= (+!174 lt!73831 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))) lt!74321)))

(declare-fun b!141631 () Bool)

(declare-fun res!67589 () Bool)

(assert (=> b!141631 (=> (not res!67589) (not e!92302))))

(assert (=> b!141631 (= res!67589 (= (getValueByKey!175 (toList!889 lt!74321) (_1!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141632 () Bool)

(assert (=> b!141632 (= e!92302 (contains!923 (toList!889 lt!74321) (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))))))

(assert (= (and d!44591 res!67590) b!141631))

(assert (= (and b!141631 res!67589) b!141632))

(declare-fun m!170215 () Bool)

(assert (=> d!44591 m!170215))

(declare-fun m!170217 () Bool)

(assert (=> d!44591 m!170217))

(declare-fun m!170219 () Bool)

(assert (=> d!44591 m!170219))

(declare-fun m!170221 () Bool)

(assert (=> d!44591 m!170221))

(declare-fun m!170223 () Bool)

(assert (=> b!141631 m!170223))

(declare-fun m!170225 () Bool)

(assert (=> b!141632 m!170225))

(assert (=> b!140695 d!44591))

(declare-fun d!44593 () Bool)

(assert (=> d!44593 (= (apply!120 (+!174 lt!73831 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))) lt!73842) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73831 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16)))) lt!73842)))))

(declare-fun bs!5961 () Bool)

(assert (= bs!5961 d!44593))

(declare-fun m!170227 () Bool)

(assert (=> bs!5961 m!170227))

(assert (=> bs!5961 m!170227))

(declare-fun m!170229 () Bool)

(assert (=> bs!5961 m!170229))

(assert (=> b!140695 d!44593))

(declare-fun d!44595 () Bool)

(declare-fun e!92304 () Bool)

(assert (=> d!44595 e!92304))

(declare-fun res!67591 () Bool)

(assert (=> d!44595 (=> res!67591 e!92304)))

(declare-fun lt!74323 () Bool)

(assert (=> d!44595 (= res!67591 (not lt!74323))))

(declare-fun lt!74326 () Bool)

(assert (=> d!44595 (= lt!74323 lt!74326)))

(declare-fun lt!74324 () Unit!4395)

(declare-fun e!92303 () Unit!4395)

(assert (=> d!44595 (= lt!74324 e!92303)))

(declare-fun c!26670 () Bool)

(assert (=> d!44595 (= c!26670 lt!74326)))

(assert (=> d!44595 (= lt!74326 (containsKey!179 (toList!889 (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))) lt!73833))))

(assert (=> d!44595 (= (contains!921 (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16))) lt!73833) lt!74323)))

(declare-fun b!141633 () Bool)

(declare-fun lt!74325 () Unit!4395)

(assert (=> b!141633 (= e!92303 lt!74325)))

(assert (=> b!141633 (= lt!74325 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))) lt!73833))))

(assert (=> b!141633 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))) lt!73833))))

(declare-fun b!141634 () Bool)

(declare-fun Unit!4475 () Unit!4395)

(assert (=> b!141634 (= e!92303 Unit!4475)))

(declare-fun b!141635 () Bool)

(assert (=> b!141635 (= e!92304 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73835 (tuple2!2685 lt!73828 (zeroValue!2790 newMap!16)))) lt!73833)))))

(assert (= (and d!44595 c!26670) b!141633))

(assert (= (and d!44595 (not c!26670)) b!141634))

(assert (= (and d!44595 (not res!67591)) b!141635))

(declare-fun m!170231 () Bool)

(assert (=> d!44595 m!170231))

(declare-fun m!170233 () Bool)

(assert (=> b!141633 m!170233))

(declare-fun m!170235 () Bool)

(assert (=> b!141633 m!170235))

(assert (=> b!141633 m!170235))

(declare-fun m!170237 () Bool)

(assert (=> b!141633 m!170237))

(assert (=> b!141635 m!170235))

(assert (=> b!141635 m!170235))

(assert (=> b!141635 m!170237))

(assert (=> b!140695 d!44595))

(declare-fun d!44597 () Bool)

(assert (=> d!44597 (= (apply!120 (+!174 lt!73837 (tuple2!2685 lt!73841 (minValue!2790 newMap!16))) lt!73843) (apply!120 lt!73837 lt!73843))))

(declare-fun lt!74327 () Unit!4395)

(assert (=> d!44597 (= lt!74327 (choose!870 lt!73837 lt!73841 (minValue!2790 newMap!16) lt!73843))))

(declare-fun e!92305 () Bool)

(assert (=> d!44597 e!92305))

(declare-fun res!67592 () Bool)

(assert (=> d!44597 (=> (not res!67592) (not e!92305))))

(assert (=> d!44597 (= res!67592 (contains!921 lt!73837 lt!73843))))

(assert (=> d!44597 (= (addApplyDifferent!96 lt!73837 lt!73841 (minValue!2790 newMap!16) lt!73843) lt!74327)))

(declare-fun b!141636 () Bool)

(assert (=> b!141636 (= e!92305 (not (= lt!73843 lt!73841)))))

(assert (= (and d!44597 res!67592) b!141636))

(declare-fun m!170239 () Bool)

(assert (=> d!44597 m!170239))

(assert (=> d!44597 m!168517))

(assert (=> d!44597 m!168519))

(assert (=> d!44597 m!168517))

(assert (=> d!44597 m!168515))

(declare-fun m!170241 () Bool)

(assert (=> d!44597 m!170241))

(assert (=> b!140695 d!44597))

(declare-fun d!44599 () Bool)

(assert (=> d!44599 (= (apply!120 (+!174 lt!73840 (tuple2!2685 lt!73823 (minValue!2790 newMap!16))) lt!73832) (apply!120 lt!73840 lt!73832))))

(declare-fun lt!74328 () Unit!4395)

(assert (=> d!44599 (= lt!74328 (choose!870 lt!73840 lt!73823 (minValue!2790 newMap!16) lt!73832))))

(declare-fun e!92306 () Bool)

(assert (=> d!44599 e!92306))

(declare-fun res!67593 () Bool)

(assert (=> d!44599 (=> (not res!67593) (not e!92306))))

(assert (=> d!44599 (= res!67593 (contains!921 lt!73840 lt!73832))))

(assert (=> d!44599 (= (addApplyDifferent!96 lt!73840 lt!73823 (minValue!2790 newMap!16) lt!73832) lt!74328)))

(declare-fun b!141637 () Bool)

(assert (=> b!141637 (= e!92306 (not (= lt!73832 lt!73823)))))

(assert (= (and d!44599 res!67593) b!141637))

(declare-fun m!170243 () Bool)

(assert (=> d!44599 m!170243))

(assert (=> d!44599 m!168503))

(assert (=> d!44599 m!168505))

(assert (=> d!44599 m!168503))

(assert (=> d!44599 m!168529))

(declare-fun m!170245 () Bool)

(assert (=> d!44599 m!170245))

(assert (=> b!140695 d!44599))

(declare-fun d!44601 () Bool)

(assert (=> d!44601 (= (apply!120 (+!174 lt!73831 (tuple2!2685 lt!73836 (zeroValue!2790 newMap!16))) lt!73842) (apply!120 lt!73831 lt!73842))))

(declare-fun lt!74329 () Unit!4395)

(assert (=> d!44601 (= lt!74329 (choose!870 lt!73831 lt!73836 (zeroValue!2790 newMap!16) lt!73842))))

(declare-fun e!92307 () Bool)

(assert (=> d!44601 e!92307))

(declare-fun res!67594 () Bool)

(assert (=> d!44601 (=> (not res!67594) (not e!92307))))

(assert (=> d!44601 (= res!67594 (contains!921 lt!73831 lt!73842))))

(assert (=> d!44601 (= (addApplyDifferent!96 lt!73831 lt!73836 (zeroValue!2790 newMap!16) lt!73842) lt!74329)))

(declare-fun b!141638 () Bool)

(assert (=> b!141638 (= e!92307 (not (= lt!73842 lt!73836)))))

(assert (= (and d!44601 res!67594) b!141638))

(declare-fun m!170247 () Bool)

(assert (=> d!44601 m!170247))

(assert (=> d!44601 m!168521))

(assert (=> d!44601 m!168523))

(assert (=> d!44601 m!168521))

(assert (=> d!44601 m!168531))

(declare-fun m!170249 () Bool)

(assert (=> d!44601 m!170249))

(assert (=> b!140695 d!44601))

(declare-fun d!44603 () Bool)

(assert (=> d!44603 (= (apply!120 (+!174 lt!73837 (tuple2!2685 lt!73841 (minValue!2790 newMap!16))) lt!73843) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73837 (tuple2!2685 lt!73841 (minValue!2790 newMap!16)))) lt!73843)))))

(declare-fun bs!5962 () Bool)

(assert (= bs!5962 d!44603))

(declare-fun m!170251 () Bool)

(assert (=> bs!5962 m!170251))

(assert (=> bs!5962 m!170251))

(declare-fun m!170253 () Bool)

(assert (=> bs!5962 m!170253))

(assert (=> b!140695 d!44603))

(declare-fun b!141639 () Bool)

(declare-fun res!67596 () Bool)

(declare-fun e!92312 () Bool)

(assert (=> b!141639 (=> (not res!67596) (not e!92312))))

(declare-fun lt!74332 () ListLongMap!1747)

(assert (=> b!141639 (= res!67596 (not (contains!921 lt!74332 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141640 () Bool)

(assert (=> b!141640 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> b!141640 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))))))))

(declare-fun e!92308 () Bool)

(assert (=> b!141640 (= e!92308 (= (apply!120 lt!74332 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141641 () Bool)

(declare-fun e!92314 () ListLongMap!1747)

(declare-fun e!92311 () ListLongMap!1747)

(assert (=> b!141641 (= e!92314 e!92311)))

(declare-fun c!26673 () Bool)

(assert (=> b!141641 (= c!26673 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141642 () Bool)

(declare-fun e!92309 () Bool)

(assert (=> b!141642 (= e!92309 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141642 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!44605 () Bool)

(assert (=> d!44605 e!92312))

(declare-fun res!67598 () Bool)

(assert (=> d!44605 (=> (not res!67598) (not e!92312))))

(assert (=> d!44605 (= res!67598 (not (contains!921 lt!74332 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44605 (= lt!74332 e!92314)))

(declare-fun c!26674 () Bool)

(assert (=> d!44605 (= c!26674 (bvsge #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!44605 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44605 (= (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74332)))

(declare-fun b!141643 () Bool)

(declare-fun e!92310 () Bool)

(declare-fun e!92313 () Bool)

(assert (=> b!141643 (= e!92310 e!92313)))

(declare-fun c!26671 () Bool)

(assert (=> b!141643 (= c!26671 (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun b!141644 () Bool)

(assert (=> b!141644 (= e!92313 (= lt!74332 (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!141645 () Bool)

(assert (=> b!141645 (= e!92310 e!92308)))

(assert (=> b!141645 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun res!67597 () Bool)

(assert (=> b!141645 (= res!67597 (contains!921 lt!74332 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141645 (=> (not res!67597) (not e!92308))))

(declare-fun b!141646 () Bool)

(declare-fun call!15708 () ListLongMap!1747)

(assert (=> b!141646 (= e!92311 call!15708)))

(declare-fun bm!15705 () Bool)

(assert (=> bm!15705 (= call!15708 (getCurrentListMapNoExtraKeys!141 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!141647 () Bool)

(assert (=> b!141647 (= e!92314 (ListLongMap!1748 Nil!1761))))

(declare-fun b!141648 () Bool)

(declare-fun lt!74330 () Unit!4395)

(declare-fun lt!74336 () Unit!4395)

(assert (=> b!141648 (= lt!74330 lt!74336)))

(declare-fun lt!74335 () (_ BitVec 64))

(declare-fun lt!74334 () (_ BitVec 64))

(declare-fun lt!74333 () V!3555)

(declare-fun lt!74331 () ListLongMap!1747)

(assert (=> b!141648 (not (contains!921 (+!174 lt!74331 (tuple2!2685 lt!74335 lt!74333)) lt!74334))))

(assert (=> b!141648 (= lt!74336 (addStillNotContains!66 lt!74331 lt!74335 lt!74333 lt!74334))))

(assert (=> b!141648 (= lt!74334 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141648 (= lt!74333 (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141648 (= lt!74335 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!141648 (= lt!74331 call!15708)))

(assert (=> b!141648 (= e!92311 (+!174 call!15708 (tuple2!2685 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141649 () Bool)

(assert (=> b!141649 (= e!92312 e!92310)))

(declare-fun c!26672 () Bool)

(assert (=> b!141649 (= c!26672 e!92309)))

(declare-fun res!67595 () Bool)

(assert (=> b!141649 (=> (not res!67595) (not e!92309))))

(assert (=> b!141649 (= res!67595 (bvslt #b00000000000000000000000000000000 (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun b!141650 () Bool)

(assert (=> b!141650 (= e!92313 (isEmpty!423 lt!74332))))

(assert (= (and d!44605 c!26674) b!141647))

(assert (= (and d!44605 (not c!26674)) b!141641))

(assert (= (and b!141641 c!26673) b!141648))

(assert (= (and b!141641 (not c!26673)) b!141646))

(assert (= (or b!141648 b!141646) bm!15705))

(assert (= (and d!44605 res!67598) b!141639))

(assert (= (and b!141639 res!67596) b!141649))

(assert (= (and b!141649 res!67595) b!141642))

(assert (= (and b!141649 c!26672) b!141645))

(assert (= (and b!141649 (not c!26672)) b!141643))

(assert (= (and b!141645 res!67597) b!141640))

(assert (= (and b!141643 c!26671) b!141644))

(assert (= (and b!141643 (not c!26671)) b!141650))

(declare-fun b_lambda!6389 () Bool)

(assert (=> (not b_lambda!6389) (not b!141640)))

(assert (=> b!141640 t!6366))

(declare-fun b_and!8873 () Bool)

(assert (= b_and!8869 (and (=> t!6366 result!4203) b_and!8873)))

(assert (=> b!141640 t!6368))

(declare-fun b_and!8875 () Bool)

(assert (= b_and!8871 (and (=> t!6368 result!4205) b_and!8875)))

(declare-fun b_lambda!6391 () Bool)

(assert (=> (not b_lambda!6391) (not b!141648)))

(assert (=> b!141648 t!6366))

(declare-fun b_and!8877 () Bool)

(assert (= b_and!8873 (and (=> t!6366 result!4203) b_and!8877)))

(assert (=> b!141648 t!6368))

(declare-fun b_and!8879 () Bool)

(assert (= b_and!8875 (and (=> t!6368 result!4205) b_and!8879)))

(declare-fun m!170255 () Bool)

(assert (=> b!141644 m!170255))

(assert (=> b!141642 m!168455))

(assert (=> b!141642 m!168455))

(assert (=> b!141642 m!168457))

(declare-fun m!170257 () Bool)

(assert (=> b!141648 m!170257))

(declare-fun m!170259 () Bool)

(assert (=> b!141648 m!170259))

(assert (=> b!141648 m!168455))

(declare-fun m!170261 () Bool)

(assert (=> b!141648 m!170261))

(declare-fun m!170263 () Bool)

(assert (=> b!141648 m!170263))

(assert (=> b!141648 m!166971))

(assert (=> b!141648 m!168491))

(assert (=> b!141648 m!168491))

(assert (=> b!141648 m!166971))

(assert (=> b!141648 m!168493))

(assert (=> b!141648 m!170257))

(assert (=> b!141645 m!168455))

(assert (=> b!141645 m!168455))

(declare-fun m!170265 () Bool)

(assert (=> b!141645 m!170265))

(assert (=> b!141641 m!168455))

(assert (=> b!141641 m!168455))

(assert (=> b!141641 m!168457))

(assert (=> b!141640 m!168455))

(assert (=> b!141640 m!168455))

(declare-fun m!170267 () Bool)

(assert (=> b!141640 m!170267))

(assert (=> b!141640 m!166971))

(assert (=> b!141640 m!168491))

(assert (=> b!141640 m!168491))

(assert (=> b!141640 m!166971))

(assert (=> b!141640 m!168493))

(declare-fun m!170269 () Bool)

(assert (=> b!141650 m!170269))

(declare-fun m!170271 () Bool)

(assert (=> d!44605 m!170271))

(assert (=> d!44605 m!166961))

(declare-fun m!170273 () Bool)

(assert (=> b!141639 m!170273))

(assert (=> bm!15705 m!170255))

(assert (=> b!140695 d!44605))

(declare-fun d!44607 () Bool)

(assert (=> d!44607 (= (apply!120 (+!174 lt!73840 (tuple2!2685 lt!73823 (minValue!2790 newMap!16))) lt!73832) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73840 (tuple2!2685 lt!73823 (minValue!2790 newMap!16)))) lt!73832)))))

(declare-fun bs!5963 () Bool)

(assert (= bs!5963 d!44607))

(declare-fun m!170275 () Bool)

(assert (=> bs!5963 m!170275))

(assert (=> bs!5963 m!170275))

(declare-fun m!170277 () Bool)

(assert (=> bs!5963 m!170277))

(assert (=> b!140695 d!44607))

(declare-fun d!44609 () Bool)

(declare-fun e!92315 () Bool)

(assert (=> d!44609 e!92315))

(declare-fun res!67600 () Bool)

(assert (=> d!44609 (=> (not res!67600) (not e!92315))))

(declare-fun lt!74339 () ListLongMap!1747)

(assert (=> d!44609 (= res!67600 (contains!921 lt!74339 (_1!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16)))))))

(declare-fun lt!74340 () List!1764)

(assert (=> d!44609 (= lt!74339 (ListLongMap!1748 lt!74340))))

(declare-fun lt!74337 () Unit!4395)

(declare-fun lt!74338 () Unit!4395)

(assert (=> d!44609 (= lt!74337 lt!74338)))

(assert (=> d!44609 (= (getValueByKey!175 lt!74340 (_1!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16)))))))

(assert (=> d!44609 (= lt!74338 (lemmaContainsTupThenGetReturnValue!91 lt!74340 (_1!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16)))))))

(assert (=> d!44609 (= lt!74340 (insertStrictlySorted!93 (toList!889 lt!73837) (_1!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16)))))))

(assert (=> d!44609 (= (+!174 lt!73837 (tuple2!2685 lt!73841 (minValue!2790 newMap!16))) lt!74339)))

(declare-fun b!141651 () Bool)

(declare-fun res!67599 () Bool)

(assert (=> b!141651 (=> (not res!67599) (not e!92315))))

(assert (=> b!141651 (= res!67599 (= (getValueByKey!175 (toList!889 lt!74339) (_1!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73841 (minValue!2790 newMap!16))))))))

(declare-fun b!141652 () Bool)

(assert (=> b!141652 (= e!92315 (contains!923 (toList!889 lt!74339) (tuple2!2685 lt!73841 (minValue!2790 newMap!16))))))

(assert (= (and d!44609 res!67600) b!141651))

(assert (= (and b!141651 res!67599) b!141652))

(declare-fun m!170279 () Bool)

(assert (=> d!44609 m!170279))

(declare-fun m!170281 () Bool)

(assert (=> d!44609 m!170281))

(declare-fun m!170283 () Bool)

(assert (=> d!44609 m!170283))

(declare-fun m!170285 () Bool)

(assert (=> d!44609 m!170285))

(declare-fun m!170287 () Bool)

(assert (=> b!141651 m!170287))

(declare-fun m!170289 () Bool)

(assert (=> b!141652 m!170289))

(assert (=> b!140695 d!44609))

(declare-fun d!44611 () Bool)

(assert (=> d!44611 (= (apply!120 lt!73840 lt!73832) (get!1538 (getValueByKey!175 (toList!889 lt!73840) lt!73832)))))

(declare-fun bs!5964 () Bool)

(assert (= bs!5964 d!44611))

(declare-fun m!170291 () Bool)

(assert (=> bs!5964 m!170291))

(assert (=> bs!5964 m!170291))

(declare-fun m!170293 () Bool)

(assert (=> bs!5964 m!170293))

(assert (=> b!140695 d!44611))

(declare-fun d!44613 () Bool)

(assert (=> d!44613 (= (get!1538 (getValueByKey!175 (toList!889 lt!73487) lt!73498)) (v!3283 (getValueByKey!175 (toList!889 lt!73487) lt!73498)))))

(assert (=> d!43787 d!44613))

(declare-fun b!141655 () Bool)

(declare-fun e!92317 () Option!181)

(assert (=> b!141655 (= e!92317 (getValueByKey!175 (t!6360 (toList!889 lt!73487)) lt!73498))))

(declare-fun b!141654 () Bool)

(declare-fun e!92316 () Option!181)

(assert (=> b!141654 (= e!92316 e!92317)))

(declare-fun c!26676 () Bool)

(assert (=> b!141654 (= c!26676 (and ((_ is Cons!1760) (toList!889 lt!73487)) (not (= (_1!1352 (h!2367 (toList!889 lt!73487))) lt!73498))))))

(declare-fun b!141656 () Bool)

(assert (=> b!141656 (= e!92317 None!179)))

(declare-fun b!141653 () Bool)

(assert (=> b!141653 (= e!92316 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73487)))))))

(declare-fun d!44615 () Bool)

(declare-fun c!26675 () Bool)

(assert (=> d!44615 (= c!26675 (and ((_ is Cons!1760) (toList!889 lt!73487)) (= (_1!1352 (h!2367 (toList!889 lt!73487))) lt!73498)))))

(assert (=> d!44615 (= (getValueByKey!175 (toList!889 lt!73487) lt!73498) e!92316)))

(assert (= (and d!44615 c!26675) b!141653))

(assert (= (and d!44615 (not c!26675)) b!141654))

(assert (= (and b!141654 c!26676) b!141655))

(assert (= (and b!141654 (not c!26676)) b!141656))

(declare-fun m!170295 () Bool)

(assert (=> b!141655 m!170295))

(assert (=> d!43787 d!44615))

(declare-fun d!44617 () Bool)

(assert (=> d!44617 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74341 () Unit!4395)

(assert (=> d!44617 (= lt!74341 (choose!868 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92318 () Bool)

(assert (=> d!44617 e!92318))

(declare-fun res!67601 () Bool)

(assert (=> d!44617 (=> (not res!67601) (not e!92318))))

(assert (=> d!44617 (= res!67601 (isStrictlySorted!320 (toList!889 lt!73441)))))

(assert (=> d!44617 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74341)))

(declare-fun b!141657 () Bool)

(assert (=> b!141657 (= e!92318 (containsKey!179 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44617 res!67601) b!141657))

(assert (=> d!44617 m!168997))

(assert (=> d!44617 m!168997))

(assert (=> d!44617 m!168999))

(declare-fun m!170297 () Bool)

(assert (=> d!44617 m!170297))

(assert (=> d!44617 m!169647))

(assert (=> b!141657 m!168993))

(assert (=> b!140920 d!44617))

(assert (=> b!140920 d!44393))

(assert (=> b!140920 d!44395))

(declare-fun d!44619 () Bool)

(assert (=> d!44619 (= (get!1537 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140535 d!44619))

(declare-fun lt!74342 () Bool)

(declare-fun d!44621 () Bool)

(assert (=> d!44621 (= lt!74342 (select (content!137 (toList!889 lt!73990)) (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))

(declare-fun e!92319 () Bool)

(assert (=> d!44621 (= lt!74342 e!92319)))

(declare-fun res!67603 () Bool)

(assert (=> d!44621 (=> (not res!67603) (not e!92319))))

(assert (=> d!44621 (= res!67603 ((_ is Cons!1760) (toList!889 lt!73990)))))

(assert (=> d!44621 (= (contains!923 (toList!889 lt!73990) (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) lt!74342)))

(declare-fun b!141658 () Bool)

(declare-fun e!92320 () Bool)

(assert (=> b!141658 (= e!92319 e!92320)))

(declare-fun res!67602 () Bool)

(assert (=> b!141658 (=> res!67602 e!92320)))

(assert (=> b!141658 (= res!67602 (= (h!2367 (toList!889 lt!73990)) (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))

(declare-fun b!141659 () Bool)

(assert (=> b!141659 (= e!92320 (contains!923 (t!6360 (toList!889 lt!73990)) (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))

(assert (= (and d!44621 res!67603) b!141658))

(assert (= (and b!141658 (not res!67602)) b!141659))

(declare-fun m!170299 () Bool)

(assert (=> d!44621 m!170299))

(declare-fun m!170301 () Bool)

(assert (=> d!44621 m!170301))

(declare-fun m!170303 () Bool)

(assert (=> b!141659 m!170303))

(assert (=> b!140908 d!44621))

(declare-fun d!44623 () Bool)

(assert (=> d!44623 (isDefined!129 (getValueByKey!175 (toList!889 lt!73146) lt!73152))))

(declare-fun lt!74343 () Unit!4395)

(assert (=> d!44623 (= lt!74343 (choose!868 (toList!889 lt!73146) lt!73152))))

(declare-fun e!92321 () Bool)

(assert (=> d!44623 e!92321))

(declare-fun res!67604 () Bool)

(assert (=> d!44623 (=> (not res!67604) (not e!92321))))

(assert (=> d!44623 (= res!67604 (isStrictlySorted!320 (toList!889 lt!73146)))))

(assert (=> d!44623 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73146) lt!73152) lt!74343)))

(declare-fun b!141660 () Bool)

(assert (=> b!141660 (= e!92321 (containsKey!179 (toList!889 lt!73146) lt!73152))))

(assert (= (and d!44623 res!67604) b!141660))

(assert (=> d!44623 m!167525))

(assert (=> d!44623 m!167525))

(assert (=> d!44623 m!167593))

(declare-fun m!170305 () Bool)

(assert (=> d!44623 m!170305))

(assert (=> d!44623 m!167697))

(assert (=> b!141660 m!167589))

(assert (=> b!140245 d!44623))

(declare-fun d!44625 () Bool)

(assert (=> d!44625 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73146) lt!73152)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73146) lt!73152))))))

(declare-fun bs!5965 () Bool)

(assert (= bs!5965 d!44625))

(assert (=> bs!5965 m!167525))

(declare-fun m!170307 () Bool)

(assert (=> bs!5965 m!170307))

(assert (=> b!140245 d!44625))

(assert (=> b!140245 d!44059))

(assert (=> d!43659 d!43851))

(assert (=> d!43659 d!43853))

(declare-fun lt!74344 () Bool)

(declare-fun d!44627 () Bool)

(assert (=> d!44627 (= lt!74344 (select (content!136 (t!6359 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!92323 () Bool)

(assert (=> d!44627 (= lt!74344 e!92323)))

(declare-fun res!67606 () Bool)

(assert (=> d!44627 (=> (not res!67606) (not e!92323))))

(assert (=> d!44627 (= res!67606 ((_ is Cons!1759) (t!6359 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))))))

(assert (=> d!44627 (= (contains!922 (t!6359 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!74344)))

(declare-fun b!141661 () Bool)

(declare-fun e!92322 () Bool)

(assert (=> b!141661 (= e!92323 e!92322)))

(declare-fun res!67605 () Bool)

(assert (=> b!141661 (=> res!67605 e!92322)))

(assert (=> b!141661 (= res!67605 (= (h!2366 (t!6359 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!141662 () Bool)

(assert (=> b!141662 (= e!92322 (contains!922 (t!6359 (t!6359 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!44627 res!67606) b!141661))

(assert (= (and b!141661 (not res!67605)) b!141662))

(declare-fun m!170309 () Bool)

(assert (=> d!44627 m!170309))

(assert (=> d!44627 m!167399))

(declare-fun m!170311 () Bool)

(assert (=> d!44627 m!170311))

(assert (=> b!141662 m!167399))

(declare-fun m!170313 () Bool)

(assert (=> b!141662 m!170313))

(assert (=> b!140285 d!44627))

(declare-fun d!44629 () Bool)

(declare-fun e!92325 () Bool)

(assert (=> d!44629 e!92325))

(declare-fun res!67607 () Bool)

(assert (=> d!44629 (=> res!67607 e!92325)))

(declare-fun lt!74345 () Bool)

(assert (=> d!44629 (= res!67607 (not lt!74345))))

(declare-fun lt!74348 () Bool)

(assert (=> d!44629 (= lt!74345 lt!74348)))

(declare-fun lt!74346 () Unit!4395)

(declare-fun e!92324 () Unit!4395)

(assert (=> d!44629 (= lt!74346 e!92324)))

(declare-fun c!26677 () Bool)

(assert (=> d!44629 (= c!26677 lt!74348)))

(assert (=> d!44629 (= lt!74348 (containsKey!179 (toList!889 lt!73574) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44629 (= (contains!921 lt!73574 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74345)))

(declare-fun b!141663 () Bool)

(declare-fun lt!74347 () Unit!4395)

(assert (=> b!141663 (= e!92324 lt!74347)))

(assert (=> b!141663 (= lt!74347 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73574) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> b!141663 (isDefined!129 (getValueByKey!175 (toList!889 lt!73574) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141664 () Bool)

(declare-fun Unit!4476 () Unit!4395)

(assert (=> b!141664 (= e!92324 Unit!4476)))

(declare-fun b!141665 () Bool)

(assert (=> b!141665 (= e!92325 (isDefined!129 (getValueByKey!175 (toList!889 lt!73574) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44629 c!26677) b!141663))

(assert (= (and d!44629 (not c!26677)) b!141664))

(assert (= (and d!44629 (not res!67607)) b!141665))

(declare-fun m!170315 () Bool)

(assert (=> d!44629 m!170315))

(declare-fun m!170317 () Bool)

(assert (=> b!141663 m!170317))

(assert (=> b!141663 m!167573))

(assert (=> b!141663 m!167573))

(declare-fun m!170319 () Bool)

(assert (=> b!141663 m!170319))

(assert (=> b!141665 m!167573))

(assert (=> b!141665 m!167573))

(assert (=> b!141665 m!170319))

(assert (=> d!43597 d!44629))

(declare-fun b!141668 () Bool)

(declare-fun e!92327 () Option!181)

(assert (=> b!141668 (= e!92327 (getValueByKey!175 (t!6360 lt!73575) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141667 () Bool)

(declare-fun e!92326 () Option!181)

(assert (=> b!141667 (= e!92326 e!92327)))

(declare-fun c!26679 () Bool)

(assert (=> b!141667 (= c!26679 (and ((_ is Cons!1760) lt!73575) (not (= (_1!1352 (h!2367 lt!73575)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141669 () Bool)

(assert (=> b!141669 (= e!92327 None!179)))

(declare-fun b!141666 () Bool)

(assert (=> b!141666 (= e!92326 (Some!180 (_2!1352 (h!2367 lt!73575))))))

(declare-fun d!44631 () Bool)

(declare-fun c!26678 () Bool)

(assert (=> d!44631 (= c!26678 (and ((_ is Cons!1760) lt!73575) (= (_1!1352 (h!2367 lt!73575)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44631 (= (getValueByKey!175 lt!73575 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!92326)))

(assert (= (and d!44631 c!26678) b!141666))

(assert (= (and d!44631 (not c!26678)) b!141667))

(assert (= (and b!141667 c!26679) b!141668))

(assert (= (and b!141667 (not c!26679)) b!141669))

(declare-fun m!170321 () Bool)

(assert (=> b!141668 m!170321))

(assert (=> d!43597 d!44631))

(declare-fun d!44633 () Bool)

(assert (=> d!44633 (= (getValueByKey!175 lt!73575 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74349 () Unit!4395)

(assert (=> d!44633 (= lt!74349 (choose!873 lt!73575 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92328 () Bool)

(assert (=> d!44633 e!92328))

(declare-fun res!67608 () Bool)

(assert (=> d!44633 (=> (not res!67608) (not e!92328))))

(assert (=> d!44633 (= res!67608 (isStrictlySorted!320 lt!73575))))

(assert (=> d!44633 (= (lemmaContainsTupThenGetReturnValue!91 lt!73575 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74349)))

(declare-fun b!141670 () Bool)

(declare-fun res!67609 () Bool)

(assert (=> b!141670 (=> (not res!67609) (not e!92328))))

(assert (=> b!141670 (= res!67609 (containsKey!179 lt!73575 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141671 () Bool)

(assert (=> b!141671 (= e!92328 (contains!923 lt!73575 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!44633 res!67608) b!141670))

(assert (= (and b!141670 res!67609) b!141671))

(assert (=> d!44633 m!167567))

(declare-fun m!170323 () Bool)

(assert (=> d!44633 m!170323))

(declare-fun m!170325 () Bool)

(assert (=> d!44633 m!170325))

(declare-fun m!170327 () Bool)

(assert (=> b!141670 m!170327))

(declare-fun m!170329 () Bool)

(assert (=> b!141671 m!170329))

(assert (=> d!43597 d!44633))

(declare-fun d!44635 () Bool)

(declare-fun e!92329 () Bool)

(assert (=> d!44635 e!92329))

(declare-fun res!67611 () Bool)

(assert (=> d!44635 (=> (not res!67611) (not e!92329))))

(declare-fun lt!74350 () List!1764)

(assert (=> d!44635 (= res!67611 (isStrictlySorted!320 lt!74350))))

(declare-fun e!92331 () List!1764)

(assert (=> d!44635 (= lt!74350 e!92331)))

(declare-fun c!26680 () Bool)

(assert (=> d!44635 (= c!26680 (and ((_ is Cons!1760) (toList!889 call!15572)) (bvslt (_1!1352 (h!2367 (toList!889 call!15572))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44635 (isStrictlySorted!320 (toList!889 call!15572))))

(assert (=> d!44635 (= (insertStrictlySorted!93 (toList!889 call!15572) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74350)))

(declare-fun b!141672 () Bool)

(assert (=> b!141672 (= e!92329 (contains!923 lt!74350 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun call!15709 () List!1764)

(declare-fun bm!15706 () Bool)

(declare-fun e!92332 () List!1764)

(assert (=> bm!15706 (= call!15709 ($colon$colon!93 e!92332 (ite c!26680 (h!2367 (toList!889 call!15572)) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun c!26683 () Bool)

(assert (=> bm!15706 (= c!26683 c!26680)))

(declare-fun b!141673 () Bool)

(assert (=> b!141673 (= e!92331 call!15709)))

(declare-fun b!141674 () Bool)

(assert (=> b!141674 (= e!92332 (insertStrictlySorted!93 (t!6360 (toList!889 call!15572)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141675 () Bool)

(declare-fun e!92333 () List!1764)

(declare-fun call!15710 () List!1764)

(assert (=> b!141675 (= e!92333 call!15710)))

(declare-fun bm!15707 () Bool)

(assert (=> bm!15707 (= call!15710 call!15709)))

(declare-fun b!141676 () Bool)

(declare-fun e!92330 () List!1764)

(declare-fun call!15711 () List!1764)

(assert (=> b!141676 (= e!92330 call!15711)))

(declare-fun b!141677 () Bool)

(declare-fun c!26682 () Bool)

(assert (=> b!141677 (= c!26682 (and ((_ is Cons!1760) (toList!889 call!15572)) (bvsgt (_1!1352 (h!2367 (toList!889 call!15572))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!141677 (= e!92333 e!92330)))

(declare-fun b!141678 () Bool)

(assert (=> b!141678 (= e!92331 e!92333)))

(declare-fun c!26681 () Bool)

(assert (=> b!141678 (= c!26681 (and ((_ is Cons!1760) (toList!889 call!15572)) (= (_1!1352 (h!2367 (toList!889 call!15572))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141679 () Bool)

(assert (=> b!141679 (= e!92332 (ite c!26681 (t!6360 (toList!889 call!15572)) (ite c!26682 (Cons!1760 (h!2367 (toList!889 call!15572)) (t!6360 (toList!889 call!15572))) Nil!1761)))))

(declare-fun bm!15708 () Bool)

(assert (=> bm!15708 (= call!15711 call!15710)))

(declare-fun b!141680 () Bool)

(declare-fun res!67610 () Bool)

(assert (=> b!141680 (=> (not res!67610) (not e!92329))))

(assert (=> b!141680 (= res!67610 (containsKey!179 lt!74350 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!141681 () Bool)

(assert (=> b!141681 (= e!92330 call!15711)))

(assert (= (and d!44635 c!26680) b!141673))

(assert (= (and d!44635 (not c!26680)) b!141678))

(assert (= (and b!141678 c!26681) b!141675))

(assert (= (and b!141678 (not c!26681)) b!141677))

(assert (= (and b!141677 c!26682) b!141681))

(assert (= (and b!141677 (not c!26682)) b!141676))

(assert (= (or b!141681 b!141676) bm!15708))

(assert (= (or b!141675 bm!15708) bm!15707))

(assert (= (or b!141673 bm!15707) bm!15706))

(assert (= (and bm!15706 c!26683) b!141674))

(assert (= (and bm!15706 (not c!26683)) b!141679))

(assert (= (and d!44635 res!67611) b!141680))

(assert (= (and b!141680 res!67610) b!141672))

(declare-fun m!170331 () Bool)

(assert (=> b!141672 m!170331))

(declare-fun m!170333 () Bool)

(assert (=> b!141680 m!170333))

(declare-fun m!170335 () Bool)

(assert (=> b!141674 m!170335))

(declare-fun m!170337 () Bool)

(assert (=> bm!15706 m!170337))

(declare-fun m!170339 () Bool)

(assert (=> d!44635 m!170339))

(declare-fun m!170341 () Bool)

(assert (=> d!44635 m!170341))

(assert (=> d!43597 d!44635))

(assert (=> d!43815 d!43829))

(declare-fun d!44637 () Bool)

(declare-fun e!92335 () Bool)

(assert (=> d!44637 e!92335))

(declare-fun res!67612 () Bool)

(assert (=> d!44637 (=> res!67612 e!92335)))

(declare-fun lt!74351 () Bool)

(assert (=> d!44637 (= res!67612 (not lt!74351))))

(declare-fun lt!74354 () Bool)

(assert (=> d!44637 (= lt!74351 lt!74354)))

(declare-fun lt!74352 () Unit!4395)

(declare-fun e!92334 () Unit!4395)

(assert (=> d!44637 (= lt!74352 e!92334)))

(declare-fun c!26684 () Bool)

(assert (=> d!44637 (= c!26684 lt!74354)))

(assert (=> d!44637 (= lt!74354 (containsKey!179 (toList!889 lt!73464) lt!73456))))

(assert (=> d!44637 (= (contains!921 lt!73464 lt!73456) lt!74351)))

(declare-fun b!141682 () Bool)

(declare-fun lt!74353 () Unit!4395)

(assert (=> b!141682 (= e!92334 lt!74353)))

(assert (=> b!141682 (= lt!74353 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73464) lt!73456))))

(assert (=> b!141682 (isDefined!129 (getValueByKey!175 (toList!889 lt!73464) lt!73456))))

(declare-fun b!141683 () Bool)

(declare-fun Unit!4477 () Unit!4395)

(assert (=> b!141683 (= e!92334 Unit!4477)))

(declare-fun b!141684 () Bool)

(assert (=> b!141684 (= e!92335 (isDefined!129 (getValueByKey!175 (toList!889 lt!73464) lt!73456)))))

(assert (= (and d!44637 c!26684) b!141682))

(assert (= (and d!44637 (not c!26684)) b!141683))

(assert (= (and d!44637 (not res!67612)) b!141684))

(declare-fun m!170343 () Bool)

(assert (=> d!44637 m!170343))

(declare-fun m!170345 () Bool)

(assert (=> b!141682 m!170345))

(assert (=> b!141682 m!168291))

(assert (=> b!141682 m!168291))

(declare-fun m!170347 () Bool)

(assert (=> b!141682 m!170347))

(assert (=> b!141684 m!168291))

(assert (=> b!141684 m!168291))

(assert (=> b!141684 m!170347))

(assert (=> d!43815 d!44637))

(assert (=> d!43815 d!43823))

(declare-fun d!44639 () Bool)

(assert (=> d!44639 (= (apply!120 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) lt!73456) (apply!120 lt!73464 lt!73456))))

(assert (=> d!44639 true))

(declare-fun _$34!1005 () Unit!4395)

(assert (=> d!44639 (= (choose!870 lt!73464 lt!73447 (minValue!2790 newMap!16) lt!73456) _$34!1005)))

(declare-fun bs!5966 () Bool)

(assert (= bs!5966 d!44639))

(assert (=> bs!5966 m!167263))

(assert (=> bs!5966 m!167263))

(assert (=> bs!5966 m!167265))

(assert (=> bs!5966 m!167289))

(assert (=> d!43815 d!44639))

(assert (=> d!43815 d!43841))

(declare-fun d!44641 () Bool)

(assert (=> d!44641 (= (isEmpty!422 (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))) (not ((_ is Some!180) (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))))

(assert (=> d!43685 d!44641))

(assert (=> d!44143 d!44145))

(assert (=> d!44143 d!44139))

(declare-fun d!44643 () Bool)

(assert (=> d!44643 (contains!921 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73257)))

(assert (=> d!44643 true))

(declare-fun _$35!392 () Unit!4395)

(assert (=> d!44643 (= (choose!871 lt!73259 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73257) _$35!392)))

(declare-fun bs!5967 () Bool)

(assert (= bs!5967 d!44643))

(assert (=> bs!5967 m!166993))

(assert (=> bs!5967 m!166993))

(assert (=> bs!5967 m!166995))

(assert (=> d!44143 d!44643))

(declare-fun d!44645 () Bool)

(declare-fun e!92337 () Bool)

(assert (=> d!44645 e!92337))

(declare-fun res!67613 () Bool)

(assert (=> d!44645 (=> res!67613 e!92337)))

(declare-fun lt!74355 () Bool)

(assert (=> d!44645 (= res!67613 (not lt!74355))))

(declare-fun lt!74358 () Bool)

(assert (=> d!44645 (= lt!74355 lt!74358)))

(declare-fun lt!74356 () Unit!4395)

(declare-fun e!92336 () Unit!4395)

(assert (=> d!44645 (= lt!74356 e!92336)))

(declare-fun c!26685 () Bool)

(assert (=> d!44645 (= c!26685 lt!74358)))

(assert (=> d!44645 (= lt!74358 (containsKey!179 (toList!889 lt!73259) lt!73257))))

(assert (=> d!44645 (= (contains!921 lt!73259 lt!73257) lt!74355)))

(declare-fun b!141685 () Bool)

(declare-fun lt!74357 () Unit!4395)

(assert (=> b!141685 (= e!92336 lt!74357)))

(assert (=> b!141685 (= lt!74357 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73259) lt!73257))))

(assert (=> b!141685 (isDefined!129 (getValueByKey!175 (toList!889 lt!73259) lt!73257))))

(declare-fun b!141686 () Bool)

(declare-fun Unit!4478 () Unit!4395)

(assert (=> b!141686 (= e!92336 Unit!4478)))

(declare-fun b!141687 () Bool)

(assert (=> b!141687 (= e!92337 (isDefined!129 (getValueByKey!175 (toList!889 lt!73259) lt!73257)))))

(assert (= (and d!44645 c!26685) b!141685))

(assert (= (and d!44645 (not c!26685)) b!141686))

(assert (= (and d!44645 (not res!67613)) b!141687))

(declare-fun m!170349 () Bool)

(assert (=> d!44645 m!170349))

(declare-fun m!170351 () Bool)

(assert (=> b!141685 m!170351))

(declare-fun m!170353 () Bool)

(assert (=> b!141685 m!170353))

(assert (=> b!141685 m!170353))

(declare-fun m!170355 () Bool)

(assert (=> b!141685 m!170355))

(assert (=> b!141687 m!170353))

(assert (=> b!141687 m!170353))

(assert (=> b!141687 m!170355))

(assert (=> d!44143 d!44645))

(declare-fun d!44647 () Bool)

(assert (=> d!44647 (= (isEmpty!422 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!180) (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!43761 d!44647))

(declare-fun d!44649 () Bool)

(assert (=> d!44649 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) lt!73408)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) lt!73408)))))

(assert (=> d!44005 d!44649))

(declare-fun b!141690 () Bool)

(declare-fun e!92339 () Option!181)

(assert (=> b!141690 (= e!92339 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))) lt!73408))))

(declare-fun b!141689 () Bool)

(declare-fun e!92338 () Option!181)

(assert (=> b!141689 (= e!92338 e!92339)))

(declare-fun c!26687 () Bool)

(assert (=> b!141689 (= c!26687 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))) lt!73408))))))

(declare-fun b!141691 () Bool)

(assert (=> b!141691 (= e!92339 None!179)))

(declare-fun b!141688 () Bool)

(assert (=> b!141688 (= e!92338 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))))

(declare-fun d!44651 () Bool)

(declare-fun c!26686 () Bool)

(assert (=> d!44651 (= c!26686 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))) lt!73408)))))

(assert (=> d!44651 (= (getValueByKey!175 (toList!889 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) lt!73408) e!92338)))

(assert (= (and d!44651 c!26686) b!141688))

(assert (= (and d!44651 (not c!26686)) b!141689))

(assert (= (and b!141689 c!26687) b!141690))

(assert (= (and b!141689 (not c!26687)) b!141691))

(declare-fun m!170357 () Bool)

(assert (=> b!141690 m!170357))

(assert (=> d!44005 d!44651))

(declare-fun b!141694 () Bool)

(declare-fun e!92341 () Option!181)

(assert (=> b!141694 (= e!92341 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73528))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141693 () Bool)

(declare-fun e!92340 () Option!181)

(assert (=> b!141693 (= e!92340 e!92341)))

(declare-fun c!26689 () Bool)

(assert (=> b!141693 (= c!26689 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73528))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73528)))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!141695 () Bool)

(assert (=> b!141695 (= e!92341 None!179)))

(declare-fun b!141692 () Bool)

(assert (=> b!141692 (= e!92340 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73528))))))))

(declare-fun c!26688 () Bool)

(declare-fun d!44653 () Bool)

(assert (=> d!44653 (= c!26688 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73528))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73528)))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44653 (= (getValueByKey!175 (t!6360 (toList!889 lt!73528)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92340)))

(assert (= (and d!44653 c!26688) b!141692))

(assert (= (and d!44653 (not c!26688)) b!141693))

(assert (= (and b!141693 c!26689) b!141694))

(assert (= (and b!141693 (not c!26689)) b!141695))

(declare-fun m!170359 () Bool)

(assert (=> b!141694 m!170359))

(assert (=> b!140424 d!44653))

(declare-fun d!44655 () Bool)

(assert (=> d!44655 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73267)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73267)))))

(assert (=> d!44129 d!44655))

(declare-fun b!141698 () Bool)

(declare-fun e!92343 () Option!181)

(assert (=> b!141698 (= e!92343 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!73267))))

(declare-fun b!141697 () Bool)

(declare-fun e!92342 () Option!181)

(assert (=> b!141697 (= e!92342 e!92343)))

(declare-fun c!26691 () Bool)

(assert (=> b!141697 (= c!26691 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73267))))))

(declare-fun b!141699 () Bool)

(assert (=> b!141699 (= e!92343 None!179)))

(declare-fun b!141696 () Bool)

(assert (=> b!141696 (= e!92342 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun c!26690 () Bool)

(declare-fun d!44657 () Bool)

(assert (=> d!44657 (= c!26690 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73267)))))

(assert (=> d!44657 (= (getValueByKey!175 (toList!889 (+!174 lt!73261 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73267) e!92342)))

(assert (= (and d!44657 c!26690) b!141696))

(assert (= (and d!44657 (not c!26690)) b!141697))

(assert (= (and b!141697 c!26691) b!141698))

(assert (= (and b!141697 (not c!26691)) b!141699))

(declare-fun m!170361 () Bool)

(assert (=> b!141698 m!170361))

(assert (=> d!44129 d!44657))

(declare-fun call!15712 () Bool)

(declare-fun c!26692 () Bool)

(declare-fun bm!15709 () Bool)

(assert (=> bm!15709 (= call!15712 (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26692 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26342 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760))) (ite c!26342 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)))))))

(declare-fun b!141701 () Bool)

(declare-fun e!92345 () Bool)

(declare-fun e!92346 () Bool)

(assert (=> b!141701 (= e!92345 e!92346)))

(assert (=> b!141701 (= c!26692 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141702 () Bool)

(assert (=> b!141702 (= e!92346 call!15712)))

(declare-fun d!44659 () Bool)

(declare-fun res!67616 () Bool)

(declare-fun e!92347 () Bool)

(assert (=> d!44659 (=> res!67616 e!92347)))

(assert (=> d!44659 (= res!67616 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!44659 (= (arrayNoDuplicates!0 (_keys!4699 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26342 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760))) e!92347)))

(declare-fun b!141700 () Bool)

(declare-fun e!92344 () Bool)

(assert (=> b!141700 (= e!92344 (contains!922 (ite c!26342 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141703 () Bool)

(assert (=> b!141703 (= e!92347 e!92345)))

(declare-fun res!67614 () Bool)

(assert (=> b!141703 (=> (not res!67614) (not e!92345))))

(assert (=> b!141703 (= res!67614 (not e!92344))))

(declare-fun res!67615 () Bool)

(assert (=> b!141703 (=> (not res!67615) (not e!92344))))

(assert (=> b!141703 (= res!67615 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141704 () Bool)

(assert (=> b!141704 (= e!92346 call!15712)))

(assert (= (and d!44659 (not res!67616)) b!141703))

(assert (= (and b!141703 res!67615) b!141700))

(assert (= (and b!141703 res!67614) b!141701))

(assert (= (and b!141701 c!26692) b!141702))

(assert (= (and b!141701 (not c!26692)) b!141704))

(assert (= (or b!141702 b!141704) bm!15709))

(assert (=> bm!15709 m!169555))

(declare-fun m!170363 () Bool)

(assert (=> bm!15709 m!170363))

(assert (=> b!141701 m!169555))

(assert (=> b!141701 m!169555))

(assert (=> b!141701 m!169563))

(assert (=> b!141700 m!169555))

(assert (=> b!141700 m!169555))

(declare-fun m!170365 () Bool)

(assert (=> b!141700 m!170365))

(assert (=> b!141703 m!169555))

(assert (=> b!141703 m!169555))

(assert (=> b!141703 m!169563))

(assert (=> bm!15610 d!44659))

(declare-fun d!44661 () Bool)

(assert (=> d!44661 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457))))

(declare-fun lt!74359 () Unit!4395)

(assert (=> d!44661 (= lt!74359 (choose!868 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457))))

(declare-fun e!92348 () Bool)

(assert (=> d!44661 e!92348))

(declare-fun res!67617 () Bool)

(assert (=> d!44661 (=> (not res!67617) (not e!92348))))

(assert (=> d!44661 (= res!67617 (isStrictlySorted!320 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457) lt!74359)))

(declare-fun b!141705 () Bool)

(assert (=> b!141705 (= e!92348 (containsKey!179 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457))))

(assert (= (and d!44661 res!67617) b!141705))

(assert (=> d!44661 m!168287))

(assert (=> d!44661 m!168287))

(assert (=> d!44661 m!168289))

(declare-fun m!170367 () Bool)

(assert (=> d!44661 m!170367))

(declare-fun m!170369 () Bool)

(assert (=> d!44661 m!170369))

(assert (=> b!141705 m!168283))

(assert (=> b!140591 d!44661))

(assert (=> b!140591 d!44433))

(assert (=> b!140591 d!44435))

(declare-fun d!44663 () Bool)

(declare-fun e!92349 () Bool)

(assert (=> d!44663 e!92349))

(declare-fun res!67619 () Bool)

(assert (=> d!44663 (=> (not res!67619) (not e!92349))))

(declare-fun lt!74362 () ListLongMap!1747)

(assert (=> d!44663 (= res!67619 (contains!921 lt!74362 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74363 () List!1764)

(assert (=> d!44663 (= lt!74362 (ListLongMap!1748 lt!74363))))

(declare-fun lt!74360 () Unit!4395)

(declare-fun lt!74361 () Unit!4395)

(assert (=> d!44663 (= lt!74360 lt!74361)))

(assert (=> d!44663 (= (getValueByKey!175 lt!74363 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44663 (= lt!74361 (lemmaContainsTupThenGetReturnValue!91 lt!74363 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44663 (= lt!74363 (insertStrictlySorted!93 (toList!889 call!15672) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44663 (= (+!174 call!15672 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74362)))

(declare-fun b!141706 () Bool)

(declare-fun res!67618 () Bool)

(assert (=> b!141706 (=> (not res!67618) (not e!92349))))

(assert (=> b!141706 (= res!67618 (= (getValueByKey!175 (toList!889 lt!74362) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141707 () Bool)

(assert (=> b!141707 (= e!92349 (contains!923 (toList!889 lt!74362) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44663 res!67619) b!141706))

(assert (= (and b!141706 res!67618) b!141707))

(declare-fun m!170371 () Bool)

(assert (=> d!44663 m!170371))

(declare-fun m!170373 () Bool)

(assert (=> d!44663 m!170373))

(declare-fun m!170375 () Bool)

(assert (=> d!44663 m!170375))

(declare-fun m!170377 () Bool)

(assert (=> d!44663 m!170377))

(declare-fun m!170379 () Bool)

(assert (=> b!141706 m!170379))

(declare-fun m!170381 () Bool)

(assert (=> b!141707 m!170381))

(assert (=> b!141041 d!44663))

(declare-fun d!44665 () Bool)

(declare-fun e!92351 () Bool)

(assert (=> d!44665 e!92351))

(declare-fun res!67620 () Bool)

(assert (=> d!44665 (=> res!67620 e!92351)))

(declare-fun lt!74364 () Bool)

(assert (=> d!44665 (= res!67620 (not lt!74364))))

(declare-fun lt!74367 () Bool)

(assert (=> d!44665 (= lt!74364 lt!74367)))

(declare-fun lt!74365 () Unit!4395)

(declare-fun e!92350 () Unit!4395)

(assert (=> d!44665 (= lt!74365 e!92350)))

(declare-fun c!26693 () Bool)

(assert (=> d!44665 (= c!26693 lt!74367)))

(assert (=> d!44665 (= lt!74367 (containsKey!179 (toList!889 lt!73586) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!44665 (= (contains!921 lt!73586 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74364)))

(declare-fun b!141708 () Bool)

(declare-fun lt!74366 () Unit!4395)

(assert (=> b!141708 (= e!92350 lt!74366)))

(assert (=> b!141708 (= lt!74366 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73586) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!141708 (isDefined!129 (getValueByKey!175 (toList!889 lt!73586) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!141709 () Bool)

(declare-fun Unit!4479 () Unit!4395)

(assert (=> b!141709 (= e!92350 Unit!4479)))

(declare-fun b!141710 () Bool)

(assert (=> b!141710 (= e!92351 (isDefined!129 (getValueByKey!175 (toList!889 lt!73586) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!44665 c!26693) b!141708))

(assert (= (and d!44665 (not c!26693)) b!141709))

(assert (= (and d!44665 (not res!67620)) b!141710))

(assert (=> d!44665 m!166967))

(declare-fun m!170383 () Bool)

(assert (=> d!44665 m!170383))

(assert (=> b!141708 m!166967))

(declare-fun m!170385 () Bool)

(assert (=> b!141708 m!170385))

(assert (=> b!141708 m!166967))

(declare-fun m!170387 () Bool)

(assert (=> b!141708 m!170387))

(assert (=> b!141708 m!170387))

(declare-fun m!170389 () Bool)

(assert (=> b!141708 m!170389))

(assert (=> b!141710 m!166967))

(assert (=> b!141710 m!170387))

(assert (=> b!141710 m!170387))

(assert (=> b!141710 m!170389))

(assert (=> b!140254 d!44665))

(assert (=> b!140397 d!43605))

(declare-fun d!44667 () Bool)

(declare-fun e!92353 () Bool)

(assert (=> d!44667 e!92353))

(declare-fun res!67621 () Bool)

(assert (=> d!44667 (=> res!67621 e!92353)))

(declare-fun lt!74368 () Bool)

(assert (=> d!44667 (= res!67621 (not lt!74368))))

(declare-fun lt!74371 () Bool)

(assert (=> d!44667 (= lt!74368 lt!74371)))

(declare-fun lt!74369 () Unit!4395)

(declare-fun e!92352 () Unit!4395)

(assert (=> d!44667 (= lt!74369 e!92352)))

(declare-fun c!26694 () Bool)

(assert (=> d!44667 (= c!26694 lt!74371)))

(assert (=> d!44667 (= lt!74371 (containsKey!179 (toList!889 lt!73800) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44667 (= (contains!921 lt!73800 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74368)))

(declare-fun b!141711 () Bool)

(declare-fun lt!74370 () Unit!4395)

(assert (=> b!141711 (= e!92352 lt!74370)))

(assert (=> b!141711 (= lt!74370 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73800) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!141711 (isDefined!129 (getValueByKey!175 (toList!889 lt!73800) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141712 () Bool)

(declare-fun Unit!4480 () Unit!4395)

(assert (=> b!141712 (= e!92352 Unit!4480)))

(declare-fun b!141713 () Bool)

(assert (=> b!141713 (= e!92353 (isDefined!129 (getValueByKey!175 (toList!889 lt!73800) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!44667 c!26694) b!141711))

(assert (= (and d!44667 (not c!26694)) b!141712))

(assert (= (and d!44667 (not res!67621)) b!141713))

(declare-fun m!170391 () Bool)

(assert (=> d!44667 m!170391))

(declare-fun m!170393 () Bool)

(assert (=> b!141711 m!170393))

(assert (=> b!141711 m!168397))

(assert (=> b!141711 m!168397))

(declare-fun m!170395 () Bool)

(assert (=> b!141711 m!170395))

(assert (=> b!141713 m!168397))

(assert (=> b!141713 m!168397))

(assert (=> b!141713 m!170395))

(assert (=> d!43867 d!44667))

(declare-fun e!92355 () Option!181)

(declare-fun b!141716 () Bool)

(assert (=> b!141716 (= e!92355 (getValueByKey!175 (t!6360 lt!73801) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141715 () Bool)

(declare-fun e!92354 () Option!181)

(assert (=> b!141715 (= e!92354 e!92355)))

(declare-fun c!26696 () Bool)

(assert (=> b!141715 (= c!26696 (and ((_ is Cons!1760) lt!73801) (not (= (_1!1352 (h!2367 lt!73801)) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun b!141717 () Bool)

(assert (=> b!141717 (= e!92355 None!179)))

(declare-fun b!141714 () Bool)

(assert (=> b!141714 (= e!92354 (Some!180 (_2!1352 (h!2367 lt!73801))))))

(declare-fun d!44669 () Bool)

(declare-fun c!26695 () Bool)

(assert (=> d!44669 (= c!26695 (and ((_ is Cons!1760) lt!73801) (= (_1!1352 (h!2367 lt!73801)) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44669 (= (getValueByKey!175 lt!73801 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92354)))

(assert (= (and d!44669 c!26695) b!141714))

(assert (= (and d!44669 (not c!26695)) b!141715))

(assert (= (and b!141715 c!26696) b!141716))

(assert (= (and b!141715 (not c!26696)) b!141717))

(declare-fun m!170397 () Bool)

(assert (=> b!141716 m!170397))

(assert (=> d!43867 d!44669))

(declare-fun d!44671 () Bool)

(assert (=> d!44671 (= (getValueByKey!175 lt!73801 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74372 () Unit!4395)

(assert (=> d!44671 (= lt!74372 (choose!873 lt!73801 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun e!92356 () Bool)

(assert (=> d!44671 e!92356))

(declare-fun res!67622 () Bool)

(assert (=> d!44671 (=> (not res!67622) (not e!92356))))

(assert (=> d!44671 (= res!67622 (isStrictlySorted!320 lt!73801))))

(assert (=> d!44671 (= (lemmaContainsTupThenGetReturnValue!91 lt!73801 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74372)))

(declare-fun b!141718 () Bool)

(declare-fun res!67623 () Bool)

(assert (=> b!141718 (=> (not res!67623) (not e!92356))))

(assert (=> b!141718 (= res!67623 (containsKey!179 lt!73801 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141719 () Bool)

(assert (=> b!141719 (= e!92356 (contains!923 lt!73801 (tuple2!2685 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!44671 res!67622) b!141718))

(assert (= (and b!141718 res!67623) b!141719))

(assert (=> d!44671 m!168391))

(declare-fun m!170399 () Bool)

(assert (=> d!44671 m!170399))

(declare-fun m!170401 () Bool)

(assert (=> d!44671 m!170401))

(declare-fun m!170403 () Bool)

(assert (=> b!141718 m!170403))

(declare-fun m!170405 () Bool)

(assert (=> b!141719 m!170405))

(assert (=> d!43867 d!44671))

(declare-fun d!44673 () Bool)

(declare-fun e!92357 () Bool)

(assert (=> d!44673 e!92357))

(declare-fun res!67625 () Bool)

(assert (=> d!44673 (=> (not res!67625) (not e!92357))))

(declare-fun lt!74373 () List!1764)

(assert (=> d!44673 (= res!67625 (isStrictlySorted!320 lt!74373))))

(declare-fun e!92359 () List!1764)

(assert (=> d!44673 (= lt!74373 e!92359)))

(declare-fun c!26697 () Bool)

(assert (=> d!44673 (= c!26697 (and ((_ is Cons!1760) (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)))) (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568))))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44673 (isStrictlySorted!320 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568))))))

(assert (=> d!44673 (= (insertStrictlySorted!93 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74373)))

(declare-fun b!141720 () Bool)

(assert (=> b!141720 (= e!92357 (contains!923 lt!74373 (tuple2!2685 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun e!92360 () List!1764)

(declare-fun call!15713 () List!1764)

(declare-fun bm!15710 () Bool)

(assert (=> bm!15710 (= call!15713 ($colon$colon!93 e!92360 (ite c!26697 (h!2367 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)))) (tuple2!2685 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26700 () Bool)

(assert (=> bm!15710 (= c!26700 c!26697)))

(declare-fun b!141721 () Bool)

(assert (=> b!141721 (= e!92359 call!15713)))

(declare-fun b!141722 () Bool)

(assert (=> b!141722 (= e!92360 (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141723 () Bool)

(declare-fun e!92361 () List!1764)

(declare-fun call!15714 () List!1764)

(assert (=> b!141723 (= e!92361 call!15714)))

(declare-fun bm!15711 () Bool)

(assert (=> bm!15711 (= call!15714 call!15713)))

(declare-fun b!141724 () Bool)

(declare-fun e!92358 () List!1764)

(declare-fun call!15715 () List!1764)

(assert (=> b!141724 (= e!92358 call!15715)))

(declare-fun c!26699 () Bool)

(declare-fun b!141725 () Bool)

(assert (=> b!141725 (= c!26699 (and ((_ is Cons!1760) (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)))) (bvsgt (_1!1352 (h!2367 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568))))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> b!141725 (= e!92361 e!92358)))

(declare-fun b!141726 () Bool)

(assert (=> b!141726 (= e!92359 e!92361)))

(declare-fun c!26698 () Bool)

(assert (=> b!141726 (= c!26698 (and ((_ is Cons!1760) (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)))) (= (_1!1352 (h!2367 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568))))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141727 () Bool)

(assert (=> b!141727 (= e!92360 (ite c!26698 (t!6360 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)))) (ite c!26699 (Cons!1760 (h!2367 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568)))) (t!6360 (toList!889 (ite c!26235 call!15569 (ite c!26238 call!15571 call!15568))))) Nil!1761)))))

(declare-fun bm!15712 () Bool)

(assert (=> bm!15712 (= call!15715 call!15714)))

(declare-fun b!141728 () Bool)

(declare-fun res!67624 () Bool)

(assert (=> b!141728 (=> (not res!67624) (not e!92357))))

(assert (=> b!141728 (= res!67624 (containsKey!179 lt!74373 (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141729 () Bool)

(assert (=> b!141729 (= e!92358 call!15715)))

(assert (= (and d!44673 c!26697) b!141721))

(assert (= (and d!44673 (not c!26697)) b!141726))

(assert (= (and b!141726 c!26698) b!141723))

(assert (= (and b!141726 (not c!26698)) b!141725))

(assert (= (and b!141725 c!26699) b!141729))

(assert (= (and b!141725 (not c!26699)) b!141724))

(assert (= (or b!141729 b!141724) bm!15712))

(assert (= (or b!141723 bm!15712) bm!15711))

(assert (= (or b!141721 bm!15711) bm!15710))

(assert (= (and bm!15710 c!26700) b!141722))

(assert (= (and bm!15710 (not c!26700)) b!141727))

(assert (= (and d!44673 res!67625) b!141728))

(assert (= (and b!141728 res!67624) b!141720))

(declare-fun m!170407 () Bool)

(assert (=> b!141720 m!170407))

(declare-fun m!170409 () Bool)

(assert (=> b!141728 m!170409))

(declare-fun m!170411 () Bool)

(assert (=> b!141722 m!170411))

(declare-fun m!170413 () Bool)

(assert (=> bm!15710 m!170413))

(declare-fun m!170415 () Bool)

(assert (=> d!44673 m!170415))

(declare-fun m!170417 () Bool)

(assert (=> d!44673 m!170417))

(assert (=> d!43867 d!44673))

(declare-fun d!44675 () Bool)

(assert (=> d!44675 (= (validKeyInArray!0 (select (arr!2314 lt!73355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))) (and (not (= (select (arr!2314 lt!73355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 lt!73355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140769 d!44675))

(assert (=> b!140866 d!44283))

(declare-fun d!44677 () Bool)

(declare-fun res!67626 () Bool)

(declare-fun e!92362 () Bool)

(assert (=> d!44677 (=> res!67626 e!92362)))

(assert (=> d!44677 (= res!67626 (and ((_ is Cons!1760) (toList!889 lt!73378)) (= (_1!1352 (h!2367 (toList!889 lt!73378))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44677 (= (containsKey!179 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92362)))

(declare-fun b!141730 () Bool)

(declare-fun e!92363 () Bool)

(assert (=> b!141730 (= e!92362 e!92363)))

(declare-fun res!67627 () Bool)

(assert (=> b!141730 (=> (not res!67627) (not e!92363))))

(assert (=> b!141730 (= res!67627 (and (or (not ((_ is Cons!1760) (toList!889 lt!73378))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73378))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) (toList!889 lt!73378)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73378))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141731 () Bool)

(assert (=> b!141731 (= e!92363 (containsKey!179 (t!6360 (toList!889 lt!73378)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44677 (not res!67626)) b!141730))

(assert (= (and b!141730 res!67627) b!141731))

(declare-fun m!170419 () Bool)

(assert (=> b!141731 m!170419))

(assert (=> d!43729 d!44677))

(declare-fun d!44679 () Bool)

(assert (=> d!44679 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) lt!73456)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) lt!73456)))))

(assert (=> d!43823 d!44679))

(declare-fun b!141734 () Bool)

(declare-fun e!92365 () Option!181)

(assert (=> b!141734 (= e!92365 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))) lt!73456))))

(declare-fun b!141733 () Bool)

(declare-fun e!92364 () Option!181)

(assert (=> b!141733 (= e!92364 e!92365)))

(declare-fun c!26702 () Bool)

(assert (=> b!141733 (= c!26702 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))) lt!73456))))))

(declare-fun b!141735 () Bool)

(assert (=> b!141735 (= e!92365 None!179)))

(declare-fun b!141732 () Bool)

(assert (=> b!141732 (= e!92364 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))))

(declare-fun d!44681 () Bool)

(declare-fun c!26701 () Bool)

(assert (=> d!44681 (= c!26701 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))) lt!73456)))))

(assert (=> d!44681 (= (getValueByKey!175 (toList!889 (+!174 lt!73464 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) lt!73456) e!92364)))

(assert (= (and d!44681 c!26701) b!141732))

(assert (= (and d!44681 (not c!26701)) b!141733))

(assert (= (and b!141733 c!26702) b!141734))

(assert (= (and b!141733 (not c!26702)) b!141735))

(declare-fun m!170421 () Bool)

(assert (=> b!141734 m!170421))

(assert (=> d!43823 d!44681))

(declare-fun lt!74374 () Bool)

(declare-fun d!44683 () Bool)

(assert (=> d!44683 (= lt!74374 (select (content!137 (toList!889 lt!73637)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92366 () Bool)

(assert (=> d!44683 (= lt!74374 e!92366)))

(declare-fun res!67629 () Bool)

(assert (=> d!44683 (=> (not res!67629) (not e!92366))))

(assert (=> d!44683 (= res!67629 ((_ is Cons!1760) (toList!889 lt!73637)))))

(assert (=> d!44683 (= (contains!923 (toList!889 lt!73637) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74374)))

(declare-fun b!141736 () Bool)

(declare-fun e!92367 () Bool)

(assert (=> b!141736 (= e!92366 e!92367)))

(declare-fun res!67628 () Bool)

(assert (=> b!141736 (=> res!67628 e!92367)))

(assert (=> b!141736 (= res!67628 (= (h!2367 (toList!889 lt!73637)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141737 () Bool)

(assert (=> b!141737 (= e!92367 (contains!923 (t!6360 (toList!889 lt!73637)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44683 res!67629) b!141736))

(assert (= (and b!141736 (not res!67628)) b!141737))

(declare-fun m!170423 () Bool)

(assert (=> d!44683 m!170423))

(declare-fun m!170425 () Bool)

(assert (=> d!44683 m!170425))

(declare-fun m!170427 () Bool)

(assert (=> b!141737 m!170427))

(assert (=> b!140387 d!44683))

(declare-fun d!44685 () Bool)

(declare-fun res!67630 () Bool)

(declare-fun e!92368 () Bool)

(assert (=> d!44685 (=> res!67630 e!92368)))

(assert (=> d!44685 (= res!67630 (and ((_ is Cons!1760) lt!74019) (= (_1!1352 (h!2367 lt!74019)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44685 (= (containsKey!179 lt!74019 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92368)))

(declare-fun b!141738 () Bool)

(declare-fun e!92369 () Bool)

(assert (=> b!141738 (= e!92368 e!92369)))

(declare-fun res!67631 () Bool)

(assert (=> b!141738 (=> (not res!67631) (not e!92369))))

(assert (=> b!141738 (= res!67631 (and (or (not ((_ is Cons!1760) lt!74019)) (bvsle (_1!1352 (h!2367 lt!74019)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!74019) (bvslt (_1!1352 (h!2367 lt!74019)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141739 () Bool)

(assert (=> b!141739 (= e!92369 (containsKey!179 (t!6360 lt!74019) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44685 (not res!67630)) b!141738))

(assert (= (and b!141738 res!67631) b!141739))

(declare-fun m!170429 () Bool)

(assert (=> b!141739 m!170429))

(assert (=> b!140944 d!44685))

(declare-fun b!141742 () Bool)

(declare-fun e!92371 () Option!181)

(assert (=> b!141742 (= e!92371 (getValueByKey!175 (t!6360 (t!6360 lt!73551)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141741 () Bool)

(declare-fun e!92370 () Option!181)

(assert (=> b!141741 (= e!92370 e!92371)))

(declare-fun c!26704 () Bool)

(assert (=> b!141741 (= c!26704 (and ((_ is Cons!1760) (t!6360 lt!73551)) (not (= (_1!1352 (h!2367 (t!6360 lt!73551))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141743 () Bool)

(assert (=> b!141743 (= e!92371 None!179)))

(declare-fun b!141740 () Bool)

(assert (=> b!141740 (= e!92370 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73551)))))))

(declare-fun c!26703 () Bool)

(declare-fun d!44687 () Bool)

(assert (=> d!44687 (= c!26703 (and ((_ is Cons!1760) (t!6360 lt!73551)) (= (_1!1352 (h!2367 (t!6360 lt!73551))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44687 (= (getValueByKey!175 (t!6360 lt!73551) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92370)))

(assert (= (and d!44687 c!26703) b!141740))

(assert (= (and d!44687 (not c!26703)) b!141741))

(assert (= (and b!141741 c!26704) b!141742))

(assert (= (and b!141741 (not c!26704)) b!141743))

(declare-fun m!170431 () Bool)

(assert (=> b!141742 m!170431))

(assert (=> b!140291 d!44687))

(declare-fun d!44689 () Bool)

(assert (=> d!44689 (= (apply!120 lt!73826 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73826) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!5968 () Bool)

(assert (= bs!5968 d!44689))

(assert (=> bs!5968 m!168455))

(declare-fun m!170433 () Bool)

(assert (=> bs!5968 m!170433))

(assert (=> bs!5968 m!170433))

(declare-fun m!170435 () Bool)

(assert (=> bs!5968 m!170435))

(assert (=> b!140708 d!44689))

(declare-fun c!26705 () Bool)

(declare-fun d!44691 () Bool)

(assert (=> d!44691 (= c!26705 ((_ is ValueCellFull!1122) (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!92372 () V!3555)

(assert (=> d!44691 (= (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92372)))

(declare-fun b!141744 () Bool)

(assert (=> b!141744 (= e!92372 (get!1536 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141745 () Bool)

(assert (=> b!141745 (= e!92372 (get!1537 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44691 c!26705) b!141744))

(assert (= (and d!44691 (not c!26705)) b!141745))

(assert (=> b!141744 m!168491))

(assert (=> b!141744 m!166971))

(declare-fun m!170437 () Bool)

(assert (=> b!141744 m!170437))

(assert (=> b!141745 m!168491))

(assert (=> b!141745 m!166971))

(declare-fun m!170439 () Bool)

(assert (=> b!141745 m!170439))

(assert (=> b!140708 d!44691))

(declare-fun b!141746 () Bool)

(declare-fun e!92374 () (_ BitVec 32))

(declare-fun call!15716 () (_ BitVec 32))

(assert (=> b!141746 (= e!92374 (bvadd #b00000000000000000000000000000001 call!15716))))

(declare-fun b!141747 () Bool)

(assert (=> b!141747 (= e!92374 call!15716)))

(declare-fun b!141748 () Bool)

(declare-fun e!92373 () (_ BitVec 32))

(assert (=> b!141748 (= e!92373 e!92374)))

(declare-fun c!26707 () Bool)

(assert (=> b!141748 (= c!26707 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(declare-fun b!141749 () Bool)

(assert (=> b!141749 (= e!92373 #b00000000000000000000000000000000)))

(declare-fun d!44693 () Bool)

(declare-fun lt!74375 () (_ BitVec 32))

(assert (=> d!44693 (and (bvsge lt!74375 #b00000000000000000000000000000000) (bvsle lt!74375 (bvsub (size!2586 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(assert (=> d!44693 (= lt!74375 e!92373)))

(declare-fun c!26706 () Bool)

(assert (=> d!44693 (= c!26706 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(assert (=> d!44693 (and (bvsle #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 (_2!1353 lt!73341))) (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(assert (=> d!44693 (= (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))) lt!74375)))

(declare-fun bm!15713 () Bool)

(assert (=> bm!15713 (= call!15716 (arrayCountValidKeys!0 (_keys!4699 (_2!1353 lt!73341)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(assert (= (and d!44693 c!26706) b!141749))

(assert (= (and d!44693 (not c!26706)) b!141748))

(assert (= (and b!141748 c!26707) b!141746))

(assert (= (and b!141748 (not c!26707)) b!141747))

(assert (= (or b!141746 b!141747) bm!15713))

(assert (=> b!141748 m!169707))

(assert (=> b!141748 m!169707))

(assert (=> b!141748 m!169711))

(declare-fun m!170441 () Bool)

(assert (=> bm!15713 m!170441))

(assert (=> b!141069 d!44693))

(assert (=> d!44151 d!43761))

(assert (=> d!44151 d!43723))

(declare-fun d!44695 () Bool)

(assert (=> d!44695 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!44695 true))

(declare-fun _$12!414 () Unit!4395)

(assert (=> d!44695 (= (choose!868 (toList!889 lt!73135) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!414)))

(declare-fun bs!5969 () Bool)

(assert (= bs!5969 d!44695))

(assert (=> bs!5969 m!166821))

(assert (=> bs!5969 m!167087))

(assert (=> bs!5969 m!167087))

(assert (=> bs!5969 m!167113))

(assert (=> d!44151 d!44695))

(declare-fun d!44697 () Bool)

(declare-fun res!67632 () Bool)

(declare-fun e!92375 () Bool)

(assert (=> d!44697 (=> res!67632 e!92375)))

(assert (=> d!44697 (= res!67632 (or ((_ is Nil!1761) (toList!889 lt!73135)) ((_ is Nil!1761) (t!6360 (toList!889 lt!73135)))))))

(assert (=> d!44697 (= (isStrictlySorted!320 (toList!889 lt!73135)) e!92375)))

(declare-fun b!141750 () Bool)

(declare-fun e!92376 () Bool)

(assert (=> b!141750 (= e!92375 e!92376)))

(declare-fun res!67633 () Bool)

(assert (=> b!141750 (=> (not res!67633) (not e!92376))))

(assert (=> b!141750 (= res!67633 (bvslt (_1!1352 (h!2367 (toList!889 lt!73135))) (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135))))))))

(declare-fun b!141751 () Bool)

(assert (=> b!141751 (= e!92376 (isStrictlySorted!320 (t!6360 (toList!889 lt!73135))))))

(assert (= (and d!44697 (not res!67632)) b!141750))

(assert (= (and b!141750 res!67633) b!141751))

(declare-fun m!170443 () Bool)

(assert (=> b!141751 m!170443))

(assert (=> d!44151 d!44697))

(declare-fun d!44699 () Bool)

(assert (=> d!44699 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73619 #b00000000000000000000000000000000)))

(declare-fun lt!74376 () Unit!4395)

(assert (=> d!44699 (= lt!74376 (choose!13 (_keys!4699 newMap!16) lt!73619 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!44699 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!44699 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 newMap!16) lt!73619 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!74376)))

(declare-fun bs!5970 () Bool)

(assert (= bs!5970 d!44699))

(assert (=> bs!5970 m!167703))

(declare-fun m!170445 () Bool)

(assert (=> bs!5970 m!170445))

(assert (=> b!140329 d!44699))

(declare-fun d!44701 () Bool)

(declare-fun res!67634 () Bool)

(declare-fun e!92377 () Bool)

(assert (=> d!44701 (=> res!67634 e!92377)))

(assert (=> d!44701 (= res!67634 (= (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) lt!73619))))

(assert (=> d!44701 (= (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73619 #b00000000000000000000000000000000) e!92377)))

(declare-fun b!141752 () Bool)

(declare-fun e!92378 () Bool)

(assert (=> b!141752 (= e!92377 e!92378)))

(declare-fun res!67635 () Bool)

(assert (=> b!141752 (=> (not res!67635) (not e!92378))))

(assert (=> b!141752 (= res!67635 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!141753 () Bool)

(assert (=> b!141753 (= e!92378 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73619 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44701 (not res!67634)) b!141752))

(assert (= (and b!141752 res!67635) b!141753))

(assert (=> d!44701 m!166967))

(declare-fun m!170447 () Bool)

(assert (=> b!141753 m!170447))

(assert (=> b!140329 d!44701))

(declare-fun b!141754 () Bool)

(declare-fun e!92379 () SeekEntryResult!289)

(declare-fun e!92381 () SeekEntryResult!289)

(assert (=> b!141754 (= e!92379 e!92381)))

(declare-fun lt!74378 () (_ BitVec 64))

(declare-fun lt!74379 () SeekEntryResult!289)

(assert (=> b!141754 (= lt!74378 (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74379)))))

(declare-fun c!26709 () Bool)

(assert (=> b!141754 (= c!26709 (= lt!74378 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141755 () Bool)

(declare-fun c!26710 () Bool)

(assert (=> b!141755 (= c!26710 (= lt!74378 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92380 () SeekEntryResult!289)

(assert (=> b!141755 (= e!92381 e!92380)))

(declare-fun b!141756 () Bool)

(assert (=> b!141756 (= e!92380 (seekKeyOrZeroReturnVacant!0 (x!16146 lt!74379) (index!3321 lt!74379) (index!3321 lt!74379) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!141757 () Bool)

(assert (=> b!141757 (= e!92380 (MissingZero!289 (index!3321 lt!74379)))))

(declare-fun d!44703 () Bool)

(declare-fun lt!74377 () SeekEntryResult!289)

(assert (=> d!44703 (and (or ((_ is Undefined!289) lt!74377) (not ((_ is Found!289) lt!74377)) (and (bvsge (index!3320 lt!74377) #b00000000000000000000000000000000) (bvslt (index!3320 lt!74377) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!74377) ((_ is Found!289) lt!74377) (not ((_ is MissingZero!289) lt!74377)) (and (bvsge (index!3319 lt!74377) #b00000000000000000000000000000000) (bvslt (index!3319 lt!74377) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!74377) ((_ is Found!289) lt!74377) ((_ is MissingZero!289) lt!74377) (not ((_ is MissingVacant!289) lt!74377)) (and (bvsge (index!3322 lt!74377) #b00000000000000000000000000000000) (bvslt (index!3322 lt!74377) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!74377) (ite ((_ is Found!289) lt!74377) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!74377)) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!289) lt!74377) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3319 lt!74377)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!289) lt!74377) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!74377)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44703 (= lt!74377 e!92379)))

(declare-fun c!26708 () Bool)

(assert (=> d!44703 (= c!26708 (and ((_ is Intermediate!289) lt!74379) (undefined!1101 lt!74379)))))

(assert (=> d!44703 (= lt!74379 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (=> d!44703 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44703 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74377)))

(declare-fun b!141758 () Bool)

(assert (=> b!141758 (= e!92381 (Found!289 (index!3321 lt!74379)))))

(declare-fun b!141759 () Bool)

(assert (=> b!141759 (= e!92379 Undefined!289)))

(assert (= (and d!44703 c!26708) b!141759))

(assert (= (and d!44703 (not c!26708)) b!141754))

(assert (= (and b!141754 c!26709) b!141758))

(assert (= (and b!141754 (not c!26709)) b!141755))

(assert (= (and b!141755 c!26710) b!141757))

(assert (= (and b!141755 (not c!26710)) b!141756))

(declare-fun m!170449 () Bool)

(assert (=> b!141754 m!170449))

(assert (=> b!141756 m!167699))

(declare-fun m!170451 () Bool)

(assert (=> b!141756 m!170451))

(assert (=> d!44703 m!167699))

(declare-fun m!170453 () Bool)

(assert (=> d!44703 m!170453))

(declare-fun m!170455 () Bool)

(assert (=> d!44703 m!170455))

(assert (=> d!44703 m!166961))

(assert (=> d!44703 m!170453))

(assert (=> d!44703 m!167699))

(declare-fun m!170457 () Bool)

(assert (=> d!44703 m!170457))

(declare-fun m!170459 () Bool)

(assert (=> d!44703 m!170459))

(declare-fun m!170461 () Bool)

(assert (=> d!44703 m!170461))

(assert (=> b!140329 d!44703))

(declare-fun d!44705 () Bool)

(declare-fun res!67636 () Bool)

(declare-fun e!92382 () Bool)

(assert (=> d!44705 (=> res!67636 e!92382)))

(assert (=> d!44705 (= res!67636 (and ((_ is Cons!1760) (toList!889 lt!73470)) (= (_1!1352 (h!2367 (toList!889 lt!73470))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!44705 (= (containsKey!179 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!92382)))

(declare-fun b!141760 () Bool)

(declare-fun e!92383 () Bool)

(assert (=> b!141760 (= e!92382 e!92383)))

(declare-fun res!67637 () Bool)

(assert (=> b!141760 (=> (not res!67637) (not e!92383))))

(assert (=> b!141760 (= res!67637 (and (or (not ((_ is Cons!1760) (toList!889 lt!73470))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73470))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) ((_ is Cons!1760) (toList!889 lt!73470)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73470))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141761 () Bool)

(assert (=> b!141761 (= e!92383 (containsKey!179 (t!6360 (toList!889 lt!73470)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44705 (not res!67636)) b!141760))

(assert (= (and b!141760 res!67637) b!141761))

(declare-fun m!170463 () Bool)

(assert (=> b!141761 m!170463))

(assert (=> d!43749 d!44705))

(assert (=> b!140891 d!43605))

(declare-fun d!44707 () Bool)

(declare-fun res!67638 () Bool)

(declare-fun e!92384 () Bool)

(assert (=> d!44707 (=> res!67638 e!92384)))

(assert (=> d!44707 (= res!67638 (and ((_ is Cons!1760) lt!73627) (= (_1!1352 (h!2367 lt!73627)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44707 (= (containsKey!179 lt!73627 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92384)))

(declare-fun b!141762 () Bool)

(declare-fun e!92385 () Bool)

(assert (=> b!141762 (= e!92384 e!92385)))

(declare-fun res!67639 () Bool)

(assert (=> b!141762 (=> (not res!67639) (not e!92385))))

(assert (=> b!141762 (= res!67639 (and (or (not ((_ is Cons!1760) lt!73627)) (bvsle (_1!1352 (h!2367 lt!73627)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1760) lt!73627) (bvslt (_1!1352 (h!2367 lt!73627)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141763 () Bool)

(assert (=> b!141763 (= e!92385 (containsKey!179 (t!6360 lt!73627) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!44707 (not res!67638)) b!141762))

(assert (= (and b!141762 res!67639) b!141763))

(declare-fun m!170465 () Bool)

(assert (=> b!141763 m!170465))

(assert (=> b!140372 d!44707))

(declare-fun lt!74380 () Bool)

(declare-fun d!44709 () Bool)

(assert (=> d!44709 (= lt!74380 (select (content!137 (toList!889 lt!73681)) (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!92386 () Bool)

(assert (=> d!44709 (= lt!74380 e!92386)))

(declare-fun res!67641 () Bool)

(assert (=> d!44709 (=> (not res!67641) (not e!92386))))

(assert (=> d!44709 (= res!67641 ((_ is Cons!1760) (toList!889 lt!73681)))))

(assert (=> d!44709 (= (contains!923 (toList!889 lt!73681) (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74380)))

(declare-fun b!141764 () Bool)

(declare-fun e!92387 () Bool)

(assert (=> b!141764 (= e!92386 e!92387)))

(declare-fun res!67640 () Bool)

(assert (=> b!141764 (=> res!67640 e!92387)))

(assert (=> b!141764 (= res!67640 (= (h!2367 (toList!889 lt!73681)) (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141765 () Bool)

(assert (=> b!141765 (= e!92387 (contains!923 (t!6360 (toList!889 lt!73681)) (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (= (and d!44709 res!67641) b!141764))

(assert (= (and b!141764 (not res!67640)) b!141765))

(declare-fun m!170467 () Bool)

(assert (=> d!44709 m!170467))

(declare-fun m!170469 () Bool)

(assert (=> d!44709 m!170469))

(declare-fun m!170471 () Bool)

(assert (=> b!141765 m!170471))

(assert (=> b!140462 d!44709))

(declare-fun d!44711 () Bool)

(assert (=> d!44711 (= (validKeyInArray!0 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)) (and (not (= (select (arr!2314 lt!73346) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 lt!73346) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140753 d!44711))

(declare-fun e!92389 () Option!181)

(declare-fun b!141768 () Bool)

(assert (=> b!141768 (= e!92389 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73546))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141767 () Bool)

(declare-fun e!92388 () Option!181)

(assert (=> b!141767 (= e!92388 e!92389)))

(declare-fun c!26712 () Bool)

(assert (=> b!141767 (= c!26712 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73546))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73546)))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!141769 () Bool)

(assert (=> b!141769 (= e!92389 None!179)))

(declare-fun b!141766 () Bool)

(assert (=> b!141766 (= e!92388 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73546))))))))

(declare-fun c!26711 () Bool)

(declare-fun d!44713 () Bool)

(assert (=> d!44713 (= c!26711 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73546))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73546)))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44713 (= (getValueByKey!175 (t!6360 (toList!889 lt!73546)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92388)))

(assert (= (and d!44713 c!26711) b!141766))

(assert (= (and d!44713 (not c!26711)) b!141767))

(assert (= (and b!141767 c!26712) b!141768))

(assert (= (and b!141767 (not c!26712)) b!141769))

(declare-fun m!170473 () Bool)

(assert (=> b!141768 m!170473))

(assert (=> b!140878 d!44713))

(declare-fun d!44715 () Bool)

(assert (=> d!44715 (isDefined!129 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74381 () Unit!4395)

(assert (=> d!44715 (= lt!74381 (choose!868 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92390 () Bool)

(assert (=> d!44715 e!92390))

(declare-fun res!67642 () Bool)

(assert (=> d!44715 (=> (not res!67642) (not e!92390))))

(assert (=> d!44715 (= res!67642 (isStrictlySorted!320 (toList!889 lt!73391)))))

(assert (=> d!44715 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74381)))

(declare-fun b!141770 () Bool)

(assert (=> b!141770 (= e!92390 (containsKey!179 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44715 res!67642) b!141770))

(assert (=> d!44715 m!166967))

(assert (=> d!44715 m!167977))

(assert (=> d!44715 m!167977))

(assert (=> d!44715 m!167979))

(assert (=> d!44715 m!166967))

(declare-fun m!170475 () Bool)

(assert (=> d!44715 m!170475))

(assert (=> d!44715 m!169699))

(assert (=> b!141770 m!166967))

(assert (=> b!141770 m!167973))

(assert (=> b!140488 d!44715))

(assert (=> b!140488 d!44487))

(assert (=> b!140488 d!44489))

(declare-fun d!44717 () Bool)

(declare-fun res!67643 () Bool)

(declare-fun e!92391 () Bool)

(assert (=> d!44717 (=> res!67643 e!92391)))

(assert (=> d!44717 (= res!67643 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))) lt!73398)))))

(assert (=> d!44717 (= (containsKey!179 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398) e!92391)))

(declare-fun b!141771 () Bool)

(declare-fun e!92392 () Bool)

(assert (=> b!141771 (= e!92391 e!92392)))

(declare-fun res!67644 () Bool)

(assert (=> b!141771 (=> (not res!67644) (not e!92392))))

(assert (=> b!141771 (= res!67644 (and (or (not ((_ is Cons!1760) (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))) (bvsle (_1!1352 (h!2367 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))) lt!73398)) ((_ is Cons!1760) (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))) (bvslt (_1!1352 (h!2367 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))) lt!73398)))))

(declare-fun b!141772 () Bool)

(assert (=> b!141772 (= e!92392 (containsKey!179 (t!6360 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))) lt!73398))))

(assert (= (and d!44717 (not res!67643)) b!141771))

(assert (= (and b!141771 res!67644) b!141772))

(declare-fun m!170477 () Bool)

(assert (=> b!141772 m!170477))

(assert (=> d!44019 d!44717))

(declare-fun d!44719 () Bool)

(assert (=> d!44719 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257))))

(declare-fun lt!74382 () Unit!4395)

(assert (=> d!44719 (= lt!74382 (choose!868 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257))))

(declare-fun e!92393 () Bool)

(assert (=> d!44719 e!92393))

(declare-fun res!67645 () Bool)

(assert (=> d!44719 (=> (not res!67645) (not e!92393))))

(assert (=> d!44719 (= res!67645 (isStrictlySorted!320 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!44719 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257) lt!74382)))

(declare-fun b!141773 () Bool)

(assert (=> b!141773 (= e!92393 (containsKey!179 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257))))

(assert (= (and d!44719 res!67645) b!141773))

(assert (=> d!44719 m!169291))

(assert (=> d!44719 m!169291))

(assert (=> d!44719 m!169293))

(declare-fun m!170479 () Bool)

(assert (=> d!44719 m!170479))

(declare-fun m!170481 () Bool)

(assert (=> d!44719 m!170481))

(assert (=> b!141773 m!169287))

(assert (=> b!141085 d!44719))

(assert (=> b!141085 d!44413))

(assert (=> b!141085 d!44415))

(declare-fun b!141774 () Bool)

(declare-fun e!92396 () Bool)

(declare-fun e!92395 () Bool)

(assert (=> b!141774 (= e!92396 e!92395)))

(declare-fun lt!74384 () (_ BitVec 64))

(assert (=> b!141774 (= lt!74384 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!74385 () Unit!4395)

(assert (=> b!141774 (= lt!74385 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74384 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!141774 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74384 #b00000000000000000000000000000000)))

(declare-fun lt!74383 () Unit!4395)

(assert (=> b!141774 (= lt!74383 lt!74385)))

(declare-fun res!67646 () Bool)

(assert (=> b!141774 (= res!67646 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))) (Found!289 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!141774 (=> (not res!67646) (not e!92395))))

(declare-fun d!44721 () Bool)

(declare-fun res!67647 () Bool)

(declare-fun e!92394 () Bool)

(assert (=> d!44721 (=> res!67647 e!92394)))

(assert (=> d!44721 (= res!67647 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!44721 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))) e!92394)))

(declare-fun b!141775 () Bool)

(declare-fun call!15717 () Bool)

(assert (=> b!141775 (= e!92396 call!15717)))

(declare-fun b!141776 () Bool)

(assert (=> b!141776 (= e!92394 e!92396)))

(declare-fun c!26713 () Bool)

(assert (=> b!141776 (= c!26713 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!141777 () Bool)

(assert (=> b!141777 (= e!92395 call!15717)))

(declare-fun bm!15714 () Bool)

(assert (=> bm!15714 (= call!15717 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))))))

(assert (= (and d!44721 (not res!67647)) b!141776))

(assert (= (and b!141776 c!26713) b!141774))

(assert (= (and b!141776 (not c!26713)) b!141775))

(assert (= (and b!141774 res!67646) b!141777))

(assert (= (or b!141777 b!141775) bm!15714))

(declare-fun m!170483 () Bool)

(assert (=> b!141774 m!170483))

(declare-fun m!170485 () Bool)

(assert (=> b!141774 m!170485))

(declare-fun m!170487 () Bool)

(assert (=> b!141774 m!170487))

(assert (=> b!141774 m!170483))

(declare-fun m!170489 () Bool)

(assert (=> b!141774 m!170489))

(assert (=> b!141776 m!170483))

(assert (=> b!141776 m!170483))

(declare-fun m!170491 () Bool)

(assert (=> b!141776 m!170491))

(declare-fun m!170493 () Bool)

(assert (=> bm!15714 m!170493))

(assert (=> bm!15672 d!44721))

(declare-fun d!44723 () Bool)

(declare-fun e!92397 () Bool)

(assert (=> d!44723 e!92397))

(declare-fun res!67649 () Bool)

(assert (=> d!44723 (=> (not res!67649) (not e!92397))))

(declare-fun lt!74386 () List!1764)

(assert (=> d!44723 (= res!67649 (isStrictlySorted!320 lt!74386))))

(declare-fun e!92399 () List!1764)

(assert (=> d!44723 (= lt!74386 e!92399)))

(declare-fun c!26714 () Bool)

(assert (=> d!44723 (= c!26714 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73146))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73146)))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44723 (isStrictlySorted!320 (t!6360 (toList!889 lt!73146)))))

(assert (=> d!44723 (= (insertStrictlySorted!93 (t!6360 (toList!889 lt!73146)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74386)))

(declare-fun b!141778 () Bool)

(assert (=> b!141778 (= e!92397 (contains!923 lt!74386 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun call!15718 () List!1764)

(declare-fun e!92400 () List!1764)

(declare-fun bm!15715 () Bool)

(assert (=> bm!15715 (= call!15718 ($colon$colon!93 e!92400 (ite c!26714 (h!2367 (t!6360 (toList!889 lt!73146))) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26717 () Bool)

(assert (=> bm!15715 (= c!26717 c!26714)))

(declare-fun b!141779 () Bool)

(assert (=> b!141779 (= e!92399 call!15718)))

(declare-fun b!141780 () Bool)

(assert (=> b!141780 (= e!92400 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 lt!73146))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141781 () Bool)

(declare-fun e!92401 () List!1764)

(declare-fun call!15719 () List!1764)

(assert (=> b!141781 (= e!92401 call!15719)))

(declare-fun bm!15716 () Bool)

(assert (=> bm!15716 (= call!15719 call!15718)))

(declare-fun b!141782 () Bool)

(declare-fun e!92398 () List!1764)

(declare-fun call!15720 () List!1764)

(assert (=> b!141782 (= e!92398 call!15720)))

(declare-fun c!26716 () Bool)

(declare-fun b!141783 () Bool)

(assert (=> b!141783 (= c!26716 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73146))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73146)))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!141783 (= e!92401 e!92398)))

(declare-fun b!141784 () Bool)

(assert (=> b!141784 (= e!92399 e!92401)))

(declare-fun c!26715 () Bool)

(assert (=> b!141784 (= c!26715 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73146))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73146)))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141785 () Bool)

(assert (=> b!141785 (= e!92400 (ite c!26715 (t!6360 (t!6360 (toList!889 lt!73146))) (ite c!26716 (Cons!1760 (h!2367 (t!6360 (toList!889 lt!73146))) (t!6360 (t!6360 (toList!889 lt!73146)))) Nil!1761)))))

(declare-fun bm!15717 () Bool)

(assert (=> bm!15717 (= call!15720 call!15719)))

(declare-fun b!141786 () Bool)

(declare-fun res!67648 () Bool)

(assert (=> b!141786 (=> (not res!67648) (not e!92397))))

(assert (=> b!141786 (= res!67648 (containsKey!179 lt!74386 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141787 () Bool)

(assert (=> b!141787 (= e!92398 call!15720)))

(assert (= (and d!44723 c!26714) b!141779))

(assert (= (and d!44723 (not c!26714)) b!141784))

(assert (= (and b!141784 c!26715) b!141781))

(assert (= (and b!141784 (not c!26715)) b!141783))

(assert (= (and b!141783 c!26716) b!141787))

(assert (= (and b!141783 (not c!26716)) b!141782))

(assert (= (or b!141787 b!141782) bm!15717))

(assert (= (or b!141781 bm!15717) bm!15716))

(assert (= (or b!141779 bm!15716) bm!15715))

(assert (= (and bm!15715 c!26717) b!141780))

(assert (= (and bm!15715 (not c!26717)) b!141785))

(assert (= (and d!44723 res!67649) b!141786))

(assert (= (and b!141786 res!67648) b!141778))

(declare-fun m!170495 () Bool)

(assert (=> b!141778 m!170495))

(declare-fun m!170497 () Bool)

(assert (=> b!141786 m!170497))

(declare-fun m!170499 () Bool)

(assert (=> b!141780 m!170499))

(declare-fun m!170501 () Bool)

(assert (=> bm!15715 m!170501))

(declare-fun m!170503 () Bool)

(assert (=> d!44723 m!170503))

(assert (=> d!44723 m!169469))

(assert (=> b!140321 d!44723))

(declare-fun d!44725 () Bool)

(assert (=> d!44725 (isDefined!129 (getValueByKey!175 (toList!889 lt!73140) lt!73151))))

(declare-fun lt!74387 () Unit!4395)

(assert (=> d!44725 (= lt!74387 (choose!868 (toList!889 lt!73140) lt!73151))))

(declare-fun e!92402 () Bool)

(assert (=> d!44725 e!92402))

(declare-fun res!67650 () Bool)

(assert (=> d!44725 (=> (not res!67650) (not e!92402))))

(assert (=> d!44725 (= res!67650 (isStrictlySorted!320 (toList!889 lt!73140)))))

(assert (=> d!44725 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73140) lt!73151) lt!74387)))

(declare-fun b!141788 () Bool)

(assert (=> b!141788 (= e!92402 (containsKey!179 (toList!889 lt!73140) lt!73151))))

(assert (= (and d!44725 res!67650) b!141788))

(assert (=> d!44725 m!167521))

(assert (=> d!44725 m!167521))

(assert (=> d!44725 m!169163))

(declare-fun m!170505 () Bool)

(assert (=> d!44725 m!170505))

(assert (=> d!44725 m!168095))

(assert (=> b!141788 m!169159))

(assert (=> b!141047 d!44725))

(assert (=> b!141047 d!44409))

(assert (=> b!141047 d!43719))

(assert (=> b!140616 d!43605))

(declare-fun d!44727 () Bool)

(declare-fun e!92404 () Bool)

(assert (=> d!44727 e!92404))

(declare-fun res!67651 () Bool)

(assert (=> d!44727 (=> res!67651 e!92404)))

(declare-fun lt!74388 () Bool)

(assert (=> d!44727 (= res!67651 (not lt!74388))))

(declare-fun lt!74391 () Bool)

(assert (=> d!44727 (= lt!74388 lt!74391)))

(declare-fun lt!74389 () Unit!4395)

(declare-fun e!92403 () Unit!4395)

(assert (=> d!44727 (= lt!74389 e!92403)))

(declare-fun c!26718 () Bool)

(assert (=> d!44727 (= c!26718 lt!74391)))

(assert (=> d!44727 (= lt!74391 (containsKey!179 (toList!889 lt!73722) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(assert (=> d!44727 (= (contains!921 lt!73722 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!74388)))

(declare-fun b!141789 () Bool)

(declare-fun lt!74390 () Unit!4395)

(assert (=> b!141789 (= e!92403 lt!74390)))

(assert (=> b!141789 (= lt!74390 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73722) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(assert (=> b!141789 (isDefined!129 (getValueByKey!175 (toList!889 lt!73722) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141790 () Bool)

(declare-fun Unit!4481 () Unit!4395)

(assert (=> b!141790 (= e!92403 Unit!4481)))

(declare-fun b!141791 () Bool)

(assert (=> b!141791 (= e!92404 (isDefined!129 (getValueByKey!175 (toList!889 lt!73722) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44727 c!26718) b!141789))

(assert (= (and d!44727 (not c!26718)) b!141790))

(assert (= (and d!44727 (not res!67651)) b!141791))

(declare-fun m!170507 () Bool)

(assert (=> d!44727 m!170507))

(declare-fun m!170509 () Bool)

(assert (=> b!141789 m!170509))

(assert (=> b!141789 m!168143))

(assert (=> b!141789 m!168143))

(declare-fun m!170511 () Bool)

(assert (=> b!141789 m!170511))

(assert (=> b!141791 m!168143))

(assert (=> b!141791 m!168143))

(assert (=> b!141791 m!170511))

(assert (=> d!43797 d!44727))

(declare-fun b!141794 () Bool)

(declare-fun e!92406 () Option!181)

(assert (=> b!141794 (= e!92406 (getValueByKey!175 (t!6360 lt!73723) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141793 () Bool)

(declare-fun e!92405 () Option!181)

(assert (=> b!141793 (= e!92405 e!92406)))

(declare-fun c!26720 () Bool)

(assert (=> b!141793 (= c!26720 (and ((_ is Cons!1760) lt!73723) (not (= (_1!1352 (h!2367 lt!73723)) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!141795 () Bool)

(assert (=> b!141795 (= e!92406 None!179)))

(declare-fun b!141792 () Bool)

(assert (=> b!141792 (= e!92405 (Some!180 (_2!1352 (h!2367 lt!73723))))))

(declare-fun c!26719 () Bool)

(declare-fun d!44729 () Bool)

(assert (=> d!44729 (= c!26719 (and ((_ is Cons!1760) lt!73723) (= (_1!1352 (h!2367 lt!73723)) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44729 (= (getValueByKey!175 lt!73723 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) e!92405)))

(assert (= (and d!44729 c!26719) b!141792))

(assert (= (and d!44729 (not c!26719)) b!141793))

(assert (= (and b!141793 c!26720) b!141794))

(assert (= (and b!141793 (not c!26720)) b!141795))

(declare-fun m!170513 () Bool)

(assert (=> b!141794 m!170513))

(assert (=> d!43797 d!44729))

(declare-fun d!44731 () Bool)

(assert (=> d!44731 (= (getValueByKey!175 lt!73723 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74392 () Unit!4395)

(assert (=> d!44731 (= lt!74392 (choose!873 lt!73723 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92407 () Bool)

(assert (=> d!44731 e!92407))

(declare-fun res!67652 () Bool)

(assert (=> d!44731 (=> (not res!67652) (not e!92407))))

(assert (=> d!44731 (= res!67652 (isStrictlySorted!320 lt!73723))))

(assert (=> d!44731 (= (lemmaContainsTupThenGetReturnValue!91 lt!73723 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!74392)))

(declare-fun b!141796 () Bool)

(declare-fun res!67653 () Bool)

(assert (=> b!141796 (=> (not res!67653) (not e!92407))))

(assert (=> b!141796 (= res!67653 (containsKey!179 lt!73723 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141797 () Bool)

(assert (=> b!141797 (= e!92407 (contains!923 lt!73723 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!44731 res!67652) b!141796))

(assert (= (and b!141796 res!67653) b!141797))

(assert (=> d!44731 m!168137))

(declare-fun m!170515 () Bool)

(assert (=> d!44731 m!170515))

(declare-fun m!170517 () Bool)

(assert (=> d!44731 m!170517))

(declare-fun m!170519 () Bool)

(assert (=> b!141796 m!170519))

(declare-fun m!170521 () Bool)

(assert (=> b!141797 m!170521))

(assert (=> d!43797 d!44731))

(declare-fun d!44733 () Bool)

(declare-fun e!92408 () Bool)

(assert (=> d!44733 e!92408))

(declare-fun res!67655 () Bool)

(assert (=> d!44733 (=> (not res!67655) (not e!92408))))

(declare-fun lt!74393 () List!1764)

(assert (=> d!44733 (= res!67655 (isStrictlySorted!320 lt!74393))))

(declare-fun e!92410 () List!1764)

(assert (=> d!44733 (= lt!74393 e!92410)))

(declare-fun c!26721 () Bool)

(assert (=> d!44733 (= c!26721 (and ((_ is Cons!1760) (toList!889 lt!73491)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73491))) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(assert (=> d!44733 (isStrictlySorted!320 (toList!889 lt!73491))))

(assert (=> d!44733 (= (insertStrictlySorted!93 (toList!889 lt!73491) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!74393)))

(declare-fun b!141798 () Bool)

(assert (=> b!141798 (= e!92408 (contains!923 lt!74393 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(declare-fun bm!15718 () Bool)

(declare-fun call!15721 () List!1764)

(declare-fun e!92411 () List!1764)

(assert (=> bm!15718 (= call!15721 ($colon$colon!93 e!92411 (ite c!26721 (h!2367 (toList!889 lt!73491)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26724 () Bool)

(assert (=> bm!15718 (= c!26724 c!26721)))

(declare-fun b!141799 () Bool)

(assert (=> b!141799 (= e!92410 call!15721)))

(declare-fun b!141800 () Bool)

(assert (=> b!141800 (= e!92411 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73491)) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141801 () Bool)

(declare-fun e!92412 () List!1764)

(declare-fun call!15722 () List!1764)

(assert (=> b!141801 (= e!92412 call!15722)))

(declare-fun bm!15719 () Bool)

(assert (=> bm!15719 (= call!15722 call!15721)))

(declare-fun b!141802 () Bool)

(declare-fun e!92409 () List!1764)

(declare-fun call!15723 () List!1764)

(assert (=> b!141802 (= e!92409 call!15723)))

(declare-fun b!141803 () Bool)

(declare-fun c!26723 () Bool)

(assert (=> b!141803 (= c!26723 (and ((_ is Cons!1760) (toList!889 lt!73491)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73491))) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(assert (=> b!141803 (= e!92412 e!92409)))

(declare-fun b!141804 () Bool)

(assert (=> b!141804 (= e!92410 e!92412)))

(declare-fun c!26722 () Bool)

(assert (=> b!141804 (= c!26722 (and ((_ is Cons!1760) (toList!889 lt!73491)) (= (_1!1352 (h!2367 (toList!889 lt!73491))) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(declare-fun b!141805 () Bool)

(assert (=> b!141805 (= e!92411 (ite c!26722 (t!6360 (toList!889 lt!73491)) (ite c!26723 (Cons!1760 (h!2367 (toList!889 lt!73491)) (t!6360 (toList!889 lt!73491))) Nil!1761)))))

(declare-fun bm!15720 () Bool)

(assert (=> bm!15720 (= call!15723 call!15722)))

(declare-fun b!141806 () Bool)

(declare-fun res!67654 () Bool)

(assert (=> b!141806 (=> (not res!67654) (not e!92408))))

(assert (=> b!141806 (= res!67654 (containsKey!179 lt!74393 (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun b!141807 () Bool)

(assert (=> b!141807 (= e!92409 call!15723)))

(assert (= (and d!44733 c!26721) b!141799))

(assert (= (and d!44733 (not c!26721)) b!141804))

(assert (= (and b!141804 c!26722) b!141801))

(assert (= (and b!141804 (not c!26722)) b!141803))

(assert (= (and b!141803 c!26723) b!141807))

(assert (= (and b!141803 (not c!26723)) b!141802))

(assert (= (or b!141807 b!141802) bm!15720))

(assert (= (or b!141801 bm!15720) bm!15719))

(assert (= (or b!141799 bm!15719) bm!15718))

(assert (= (and bm!15718 c!26724) b!141800))

(assert (= (and bm!15718 (not c!26724)) b!141805))

(assert (= (and d!44733 res!67655) b!141806))

(assert (= (and b!141806 res!67654) b!141798))

(declare-fun m!170523 () Bool)

(assert (=> b!141798 m!170523))

(declare-fun m!170525 () Bool)

(assert (=> b!141806 m!170525))

(declare-fun m!170527 () Bool)

(assert (=> b!141800 m!170527))

(declare-fun m!170529 () Bool)

(assert (=> bm!15718 m!170529))

(declare-fun m!170531 () Bool)

(assert (=> d!44733 m!170531))

(declare-fun m!170533 () Bool)

(assert (=> d!44733 m!170533))

(assert (=> d!43797 d!44733))

(declare-fun d!44735 () Bool)

(assert (=> d!44735 (isDefined!129 (getValueByKey!175 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!74394 () Unit!4395)

(assert (=> d!44735 (= lt!74394 (choose!868 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!92413 () Bool)

(assert (=> d!44735 e!92413))

(declare-fun res!67656 () Bool)

(assert (=> d!44735 (=> (not res!67656) (not e!92413))))

(assert (=> d!44735 (= res!67656 (isStrictlySorted!320 (toList!889 lt!73542)))))

(assert (=> d!44735 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74394)))

(declare-fun b!141808 () Bool)

(assert (=> b!141808 (= e!92413 (containsKey!179 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44735 res!67656) b!141808))

(assert (=> d!44735 m!167457))

(assert (=> d!44735 m!167457))

(assert (=> d!44735 m!168421))

(declare-fun m!170535 () Bool)

(assert (=> d!44735 m!170535))

(declare-fun m!170537 () Bool)

(assert (=> d!44735 m!170537))

(assert (=> b!141808 m!168417))

(assert (=> b!140656 d!44735))

(assert (=> b!140656 d!44509))

(assert (=> b!140656 d!43931))

(declare-fun d!44737 () Bool)

(assert (=> d!44737 (= (inRange!0 (index!3320 lt!73691) (mask!7280 newMap!16)) (and (bvsge (index!3320 lt!73691) #b00000000000000000000000000000000) (bvslt (index!3320 lt!73691) (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!140486 d!44737))

(assert (=> b!140984 d!44283))

(declare-fun d!44739 () Bool)

(assert (=> d!44739 (= (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun bs!5971 () Bool)

(assert (= bs!5971 d!44739))

(assert (=> bs!5971 m!168547))

(declare-fun m!170539 () Bool)

(assert (=> bs!5971 m!170539))

(assert (=> b!140720 d!44739))

(declare-fun b!141811 () Bool)

(declare-fun e!92415 () Option!181)

(assert (=> b!141811 (= e!92415 (getValueByKey!175 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!141810 () Bool)

(declare-fun e!92414 () Option!181)

(assert (=> b!141810 (= e!92414 e!92415)))

(declare-fun c!26726 () Bool)

(assert (=> b!141810 (= c!26726 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (not (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!141812 () Bool)

(assert (=> b!141812 (= e!92415 None!179)))

(declare-fun b!141809 () Bool)

(assert (=> b!141809 (= e!92414 (Some!180 (_2!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))))

(declare-fun c!26725 () Bool)

(declare-fun d!44741 () Bool)

(assert (=> d!44741 (= c!26725 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44741 (= (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92414)))

(assert (= (and d!44741 c!26725) b!141809))

(assert (= (and d!44741 (not c!26725)) b!141810))

(assert (= (and b!141810 c!26726) b!141811))

(assert (= (and b!141810 (not c!26726)) b!141812))

(assert (=> b!141811 m!166733))

(declare-fun m!170541 () Bool)

(assert (=> b!141811 m!170541))

(assert (=> b!140720 d!44741))

(assert (=> b!140247 d!44625))

(assert (=> b!140247 d!44059))

(declare-fun d!44743 () Bool)

(assert (=> d!44743 (= (get!1536 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141045 d!44743))

(declare-fun d!44745 () Bool)

(assert (=> d!44745 (= (isEmpty!423 lt!73630) (isEmpty!424 (toList!889 lt!73630)))))

(declare-fun bs!5972 () Bool)

(assert (= bs!5972 d!44745))

(declare-fun m!170543 () Bool)

(assert (=> bs!5972 m!170543))

(assert (=> b!140385 d!44745))

(declare-fun d!44747 () Bool)

(assert (=> d!44747 (= (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140773 d!44747))

(assert (=> b!140981 d!43993))

(declare-fun d!44749 () Bool)

(assert (=> d!44749 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74395 () Unit!4395)

(assert (=> d!44749 (= lt!74395 (choose!868 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92416 () Bool)

(assert (=> d!44749 e!92416))

(declare-fun res!67657 () Bool)

(assert (=> d!44749 (=> (not res!67657) (not e!92416))))

(assert (=> d!44749 (= res!67657 (isStrictlySorted!320 (toList!889 lt!73482)))))

(assert (=> d!44749 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74395)))

(declare-fun b!141813 () Bool)

(assert (=> b!141813 (= e!92416 (containsKey!179 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!44749 res!67657) b!141813))

(assert (=> d!44749 m!166967))

(assert (=> d!44749 m!168047))

(assert (=> d!44749 m!168047))

(assert (=> d!44749 m!169309))

(assert (=> d!44749 m!166967))

(declare-fun m!170545 () Bool)

(assert (=> d!44749 m!170545))

(assert (=> d!44749 m!169759))

(assert (=> b!141813 m!166967))

(assert (=> b!141813 m!169305))

(assert (=> b!141092 d!44749))

(assert (=> b!141092 d!44547))

(assert (=> b!141092 d!44341))

(declare-fun d!44751 () Bool)

(assert (=> d!44751 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5973 () Bool)

(assert (= bs!5973 d!44751))

(assert (=> bs!5973 m!168311))

(declare-fun m!170547 () Bool)

(assert (=> bs!5973 m!170547))

(assert (=> b!140603 d!44751))

(assert (=> b!140603 d!44389))

(declare-fun d!44753 () Bool)

(declare-fun e!92418 () Bool)

(assert (=> d!44753 e!92418))

(declare-fun res!67658 () Bool)

(assert (=> d!44753 (=> res!67658 e!92418)))

(declare-fun lt!74396 () Bool)

(assert (=> d!44753 (= res!67658 (not lt!74396))))

(declare-fun lt!74399 () Bool)

(assert (=> d!44753 (= lt!74396 lt!74399)))

(declare-fun lt!74397 () Unit!4395)

(declare-fun e!92417 () Unit!4395)

(assert (=> d!44753 (= lt!74397 e!92417)))

(declare-fun c!26727 () Bool)

(assert (=> d!44753 (= c!26727 lt!74399)))

(assert (=> d!44753 (= lt!74399 (containsKey!179 (toList!889 lt!74058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44753 (= (contains!921 lt!74058 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74396)))

(declare-fun b!141814 () Bool)

(declare-fun lt!74398 () Unit!4395)

(assert (=> b!141814 (= e!92417 lt!74398)))

(assert (=> b!141814 (= lt!74398 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141814 (isDefined!129 (getValueByKey!175 (toList!889 lt!74058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141815 () Bool)

(declare-fun Unit!4482 () Unit!4395)

(assert (=> b!141815 (= e!92417 Unit!4482)))

(declare-fun b!141816 () Bool)

(assert (=> b!141816 (= e!92418 (isDefined!129 (getValueByKey!175 (toList!889 lt!74058) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44753 c!26727) b!141814))

(assert (= (and d!44753 (not c!26727)) b!141815))

(assert (= (and d!44753 (not res!67658)) b!141816))

(declare-fun m!170549 () Bool)

(assert (=> d!44753 m!170549))

(declare-fun m!170551 () Bool)

(assert (=> b!141814 m!170551))

(declare-fun m!170553 () Bool)

(assert (=> b!141814 m!170553))

(assert (=> b!141814 m!170553))

(declare-fun m!170555 () Bool)

(assert (=> b!141814 m!170555))

(assert (=> b!141816 m!170553))

(assert (=> b!141816 m!170553))

(assert (=> b!141816 m!170555))

(assert (=> bm!15671 d!44753))

(assert (=> b!140530 d!44443))

(declare-fun d!44755 () Bool)

(declare-fun e!92420 () Bool)

(assert (=> d!44755 e!92420))

(declare-fun res!67659 () Bool)

(assert (=> d!44755 (=> res!67659 e!92420)))

(declare-fun lt!74400 () Bool)

(assert (=> d!44755 (= res!67659 (not lt!74400))))

(declare-fun lt!74403 () Bool)

(assert (=> d!44755 (= lt!74400 lt!74403)))

(declare-fun lt!74401 () Unit!4395)

(declare-fun e!92419 () Unit!4395)

(assert (=> d!44755 (= lt!74401 e!92419)))

(declare-fun c!26728 () Bool)

(assert (=> d!44755 (= c!26728 lt!74403)))

(assert (=> d!44755 (= lt!74403 (containsKey!179 (toList!889 lt!73924) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44755 (= (contains!921 lt!73924 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74400)))

(declare-fun b!141817 () Bool)

(declare-fun lt!74402 () Unit!4395)

(assert (=> b!141817 (= e!92419 lt!74402)))

(assert (=> b!141817 (= lt!74402 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73924) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141817 (isDefined!129 (getValueByKey!175 (toList!889 lt!73924) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141818 () Bool)

(declare-fun Unit!4483 () Unit!4395)

(assert (=> b!141818 (= e!92419 Unit!4483)))

(declare-fun b!141819 () Bool)

(assert (=> b!141819 (= e!92420 (isDefined!129 (getValueByKey!175 (toList!889 lt!73924) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44755 c!26728) b!141817))

(assert (= (and d!44755 (not c!26728)) b!141818))

(assert (= (and d!44755 (not res!67659)) b!141819))

(declare-fun m!170557 () Bool)

(assert (=> d!44755 m!170557))

(declare-fun m!170559 () Bool)

(assert (=> b!141817 m!170559))

(declare-fun m!170561 () Bool)

(assert (=> b!141817 m!170561))

(assert (=> b!141817 m!170561))

(declare-fun m!170563 () Bool)

(assert (=> b!141817 m!170563))

(assert (=> b!141819 m!170561))

(assert (=> b!141819 m!170561))

(assert (=> b!141819 m!170563))

(assert (=> b!140834 d!44755))

(assert (=> d!44073 d!43561))

(assert (=> d!44073 d!43559))

(assert (=> d!44073 d!43577))

(declare-fun d!44757 () Bool)

(assert (=> d!44757 (= (get!1538 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43623 d!44757))

(assert (=> d!43623 d!44369))

(assert (=> b!140709 d!44747))

(declare-fun d!44759 () Bool)

(assert (=> d!44759 (isDefined!129 (getValueByKey!175 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74404 () Unit!4395)

(assert (=> d!44759 (= lt!74404 (choose!868 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92421 () Bool)

(assert (=> d!44759 e!92421))

(declare-fun res!67660 () Bool)

(assert (=> d!44759 (=> (not res!67660) (not e!92421))))

(assert (=> d!44759 (= res!67660 (isStrictlySorted!320 (toList!889 lt!73441)))))

(assert (=> d!44759 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74404)))

(declare-fun b!141820 () Bool)

(assert (=> b!141820 (= e!92421 (containsKey!179 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44759 res!67660) b!141820))

(assert (=> d!44759 m!167897))

(assert (=> d!44759 m!167897))

(assert (=> d!44759 m!167899))

(declare-fun m!170565 () Bool)

(assert (=> d!44759 m!170565))

(assert (=> d!44759 m!169647))

(assert (=> b!141820 m!167893))

(assert (=> b!140434 d!44759))

(assert (=> b!140434 d!44451))

(assert (=> b!140434 d!44453))

(declare-fun b!141821 () Bool)

(declare-fun e!92424 () Bool)

(declare-fun e!92423 () Bool)

(assert (=> b!141821 (= e!92424 e!92423)))

(declare-fun lt!74406 () (_ BitVec 64))

(assert (=> b!141821 (= lt!74406 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000))))

(declare-fun lt!74407 () Unit!4395)

(assert (=> b!141821 (= lt!74407 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1353 lt!73341)) lt!74406 #b00000000000000000000000000000000))))

(assert (=> b!141821 (arrayContainsKey!0 (_keys!4699 (_2!1353 lt!73341)) lt!74406 #b00000000000000000000000000000000)))

(declare-fun lt!74405 () Unit!4395)

(assert (=> b!141821 (= lt!74405 lt!74407)))

(declare-fun res!67661 () Bool)

(assert (=> b!141821 (= res!67661 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000) (_keys!4699 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341))) (Found!289 #b00000000000000000000000000000000)))))

(assert (=> b!141821 (=> (not res!67661) (not e!92423))))

(declare-fun d!44761 () Bool)

(declare-fun res!67662 () Bool)

(declare-fun e!92422 () Bool)

(assert (=> d!44761 (=> res!67662 e!92422)))

(assert (=> d!44761 (= res!67662 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(assert (=> d!44761 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4699 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341))) e!92422)))

(declare-fun b!141822 () Bool)

(declare-fun call!15724 () Bool)

(assert (=> b!141822 (= e!92424 call!15724)))

(declare-fun b!141823 () Bool)

(assert (=> b!141823 (= e!92422 e!92424)))

(declare-fun c!26729 () Bool)

(assert (=> b!141823 (= c!26729 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(declare-fun b!141824 () Bool)

(assert (=> b!141824 (= e!92423 call!15724)))

(declare-fun bm!15721 () Bool)

(assert (=> bm!15721 (= call!15724 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4699 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341))))))

(assert (= (and d!44761 (not res!67662)) b!141823))

(assert (= (and b!141823 c!26729) b!141821))

(assert (= (and b!141823 (not c!26729)) b!141822))

(assert (= (and b!141821 res!67661) b!141824))

(assert (= (or b!141824 b!141822) bm!15721))

(assert (=> b!141821 m!169707))

(declare-fun m!170567 () Bool)

(assert (=> b!141821 m!170567))

(declare-fun m!170569 () Bool)

(assert (=> b!141821 m!170569))

(assert (=> b!141821 m!169707))

(declare-fun m!170571 () Bool)

(assert (=> b!141821 m!170571))

(assert (=> b!141823 m!169707))

(assert (=> b!141823 m!169707))

(assert (=> b!141823 m!169711))

(declare-fun m!170573 () Bool)

(assert (=> bm!15721 m!170573))

(assert (=> b!141070 d!44761))

(declare-fun d!44763 () Bool)

(assert (=> d!44763 (= (apply!120 lt!73643 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73643) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5974 () Bool)

(assert (= bs!5974 d!44763))

(declare-fun m!170575 () Bool)

(assert (=> bs!5974 m!170575))

(assert (=> bs!5974 m!170575))

(declare-fun m!170577 () Bool)

(assert (=> bs!5974 m!170577))

(assert (=> b!140398 d!44763))

(declare-fun d!44765 () Bool)

(assert (=> d!44765 (= (get!1538 (getValueByKey!175 (toList!889 lt!73461) lt!73467)) (v!3283 (getValueByKey!175 (toList!889 lt!73461) lt!73467)))))

(assert (=> d!43837 d!44765))

(declare-fun b!141827 () Bool)

(declare-fun e!92426 () Option!181)

(assert (=> b!141827 (= e!92426 (getValueByKey!175 (t!6360 (toList!889 lt!73461)) lt!73467))))

(declare-fun b!141826 () Bool)

(declare-fun e!92425 () Option!181)

(assert (=> b!141826 (= e!92425 e!92426)))

(declare-fun c!26731 () Bool)

(assert (=> b!141826 (= c!26731 (and ((_ is Cons!1760) (toList!889 lt!73461)) (not (= (_1!1352 (h!2367 (toList!889 lt!73461))) lt!73467))))))

(declare-fun b!141828 () Bool)

(assert (=> b!141828 (= e!92426 None!179)))

(declare-fun b!141825 () Bool)

(assert (=> b!141825 (= e!92425 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73461)))))))

(declare-fun d!44767 () Bool)

(declare-fun c!26730 () Bool)

(assert (=> d!44767 (= c!26730 (and ((_ is Cons!1760) (toList!889 lt!73461)) (= (_1!1352 (h!2367 (toList!889 lt!73461))) lt!73467)))))

(assert (=> d!44767 (= (getValueByKey!175 (toList!889 lt!73461) lt!73467) e!92425)))

(assert (= (and d!44767 c!26730) b!141825))

(assert (= (and d!44767 (not c!26730)) b!141826))

(assert (= (and b!141826 c!26731) b!141827))

(assert (= (and b!141826 (not c!26731)) b!141828))

(declare-fun m!170579 () Bool)

(assert (=> b!141827 m!170579))

(assert (=> d!43837 d!44767))

(assert (=> b!140777 d!43927))

(declare-fun d!44769 () Bool)

(declare-fun res!67663 () Bool)

(declare-fun e!92427 () Bool)

(assert (=> d!44769 (=> res!67663 e!92427)))

(assert (=> d!44769 (= res!67663 (and ((_ is Cons!1760) (toList!889 lt!73250)) (= (_1!1352 (h!2367 (toList!889 lt!73250))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44769 (= (containsKey!179 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000) e!92427)))

(declare-fun b!141829 () Bool)

(declare-fun e!92428 () Bool)

(assert (=> b!141829 (= e!92427 e!92428)))

(declare-fun res!67664 () Bool)

(assert (=> b!141829 (=> (not res!67664) (not e!92428))))

(assert (=> b!141829 (= res!67664 (and (or (not ((_ is Cons!1760) (toList!889 lt!73250))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73250))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73250)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73250))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141830 () Bool)

(assert (=> b!141830 (= e!92428 (containsKey!179 (t!6360 (toList!889 lt!73250)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44769 (not res!67663)) b!141829))

(assert (= (and b!141829 res!67664) b!141830))

(declare-fun m!170581 () Bool)

(assert (=> b!141830 m!170581))

(assert (=> d!44099 d!44769))

(declare-fun d!44771 () Bool)

(assert (=> d!44771 (= ($colon$colon!93 e!91625 (ite c!26338 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))) (Cons!1760 (ite c!26338 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) e!91625))))

(assert (=> bm!15607 d!44771))

(declare-fun d!44773 () Bool)

(declare-fun e!92430 () Bool)

(assert (=> d!44773 e!92430))

(declare-fun res!67665 () Bool)

(assert (=> d!44773 (=> res!67665 e!92430)))

(declare-fun lt!74408 () Bool)

(assert (=> d!44773 (= res!67665 (not lt!74408))))

(declare-fun lt!74411 () Bool)

(assert (=> d!44773 (= lt!74408 lt!74411)))

(declare-fun lt!74409 () Unit!4395)

(declare-fun e!92429 () Unit!4395)

(assert (=> d!44773 (= lt!74409 e!92429)))

(declare-fun c!26732 () Bool)

(assert (=> d!44773 (= c!26732 lt!74411)))

(assert (=> d!44773 (= lt!74411 (containsKey!179 (toList!889 lt!73982) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44773 (= (contains!921 lt!73982 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74408)))

(declare-fun b!141831 () Bool)

(declare-fun lt!74410 () Unit!4395)

(assert (=> b!141831 (= e!92429 lt!74410)))

(assert (=> b!141831 (= lt!74410 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73982) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> b!141831 (isDefined!129 (getValueByKey!175 (toList!889 lt!73982) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141832 () Bool)

(declare-fun Unit!4484 () Unit!4395)

(assert (=> b!141832 (= e!92429 Unit!4484)))

(declare-fun b!141833 () Bool)

(assert (=> b!141833 (= e!92430 (isDefined!129 (getValueByKey!175 (toList!889 lt!73982) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44773 c!26732) b!141831))

(assert (= (and d!44773 (not c!26732)) b!141832))

(assert (= (and d!44773 (not res!67665)) b!141833))

(declare-fun m!170583 () Bool)

(assert (=> d!44773 m!170583))

(declare-fun m!170585 () Bool)

(assert (=> b!141831 m!170585))

(assert (=> b!141831 m!168889))

(assert (=> b!141831 m!168889))

(declare-fun m!170587 () Bool)

(assert (=> b!141831 m!170587))

(assert (=> b!141833 m!168889))

(assert (=> b!141833 m!168889))

(assert (=> b!141833 m!170587))

(assert (=> d!43999 d!44773))

(declare-fun e!92432 () Option!181)

(declare-fun b!141836 () Bool)

(assert (=> b!141836 (= e!92432 (getValueByKey!175 (t!6360 lt!73983) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141835 () Bool)

(declare-fun e!92431 () Option!181)

(assert (=> b!141835 (= e!92431 e!92432)))

(declare-fun c!26734 () Bool)

(assert (=> b!141835 (= c!26734 (and ((_ is Cons!1760) lt!73983) (not (= (_1!1352 (h!2367 lt!73983)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!141837 () Bool)

(assert (=> b!141837 (= e!92432 None!179)))

(declare-fun b!141834 () Bool)

(assert (=> b!141834 (= e!92431 (Some!180 (_2!1352 (h!2367 lt!73983))))))

(declare-fun c!26733 () Bool)

(declare-fun d!44775 () Bool)

(assert (=> d!44775 (= c!26733 (and ((_ is Cons!1760) lt!73983) (= (_1!1352 (h!2367 lt!73983)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44775 (= (getValueByKey!175 lt!73983 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92431)))

(assert (= (and d!44775 c!26733) b!141834))

(assert (= (and d!44775 (not c!26733)) b!141835))

(assert (= (and b!141835 c!26734) b!141836))

(assert (= (and b!141835 (not c!26734)) b!141837))

(declare-fun m!170589 () Bool)

(assert (=> b!141836 m!170589))

(assert (=> d!43999 d!44775))

(declare-fun d!44777 () Bool)

(assert (=> d!44777 (= (getValueByKey!175 lt!73983 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!74412 () Unit!4395)

(assert (=> d!44777 (= lt!74412 (choose!873 lt!73983 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!92433 () Bool)

(assert (=> d!44777 e!92433))

(declare-fun res!67666 () Bool)

(assert (=> d!44777 (=> (not res!67666) (not e!92433))))

(assert (=> d!44777 (= res!67666 (isStrictlySorted!320 lt!73983))))

(assert (=> d!44777 (= (lemmaContainsTupThenGetReturnValue!91 lt!73983 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74412)))

(declare-fun b!141838 () Bool)

(declare-fun res!67667 () Bool)

(assert (=> b!141838 (=> (not res!67667) (not e!92433))))

(assert (=> b!141838 (= res!67667 (containsKey!179 lt!73983 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141839 () Bool)

(assert (=> b!141839 (= e!92433 (contains!923 lt!73983 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44777 res!67666) b!141838))

(assert (= (and b!141838 res!67667) b!141839))

(assert (=> d!44777 m!168883))

(declare-fun m!170591 () Bool)

(assert (=> d!44777 m!170591))

(declare-fun m!170593 () Bool)

(assert (=> d!44777 m!170593))

(declare-fun m!170595 () Bool)

(assert (=> b!141838 m!170595))

(declare-fun m!170597 () Bool)

(assert (=> b!141839 m!170597))

(assert (=> d!43999 d!44777))

(declare-fun d!44779 () Bool)

(declare-fun e!92434 () Bool)

(assert (=> d!44779 e!92434))

(declare-fun res!67669 () Bool)

(assert (=> d!44779 (=> (not res!67669) (not e!92434))))

(declare-fun lt!74413 () List!1764)

(assert (=> d!44779 (= res!67669 (isStrictlySorted!320 lt!74413))))

(declare-fun e!92436 () List!1764)

(assert (=> d!44779 (= lt!74413 e!92436)))

(declare-fun c!26735 () Bool)

(assert (=> d!44779 (= c!26735 (and ((_ is Cons!1760) (toList!889 call!15526)) (bvslt (_1!1352 (h!2367 (toList!889 call!15526))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44779 (isStrictlySorted!320 (toList!889 call!15526))))

(assert (=> d!44779 (= (insertStrictlySorted!93 (toList!889 call!15526) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74413)))

(declare-fun b!141840 () Bool)

(assert (=> b!141840 (= e!92434 (contains!923 lt!74413 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun bm!15722 () Bool)

(declare-fun call!15725 () List!1764)

(declare-fun e!92437 () List!1764)

(assert (=> bm!15722 (= call!15725 ($colon$colon!93 e!92437 (ite c!26735 (h!2367 (toList!889 call!15526)) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26738 () Bool)

(assert (=> bm!15722 (= c!26738 c!26735)))

(declare-fun b!141841 () Bool)

(assert (=> b!141841 (= e!92436 call!15725)))

(declare-fun b!141842 () Bool)

(assert (=> b!141842 (= e!92437 (insertStrictlySorted!93 (t!6360 (toList!889 call!15526)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141843 () Bool)

(declare-fun e!92438 () List!1764)

(declare-fun call!15726 () List!1764)

(assert (=> b!141843 (= e!92438 call!15726)))

(declare-fun bm!15723 () Bool)

(assert (=> bm!15723 (= call!15726 call!15725)))

(declare-fun b!141844 () Bool)

(declare-fun e!92435 () List!1764)

(declare-fun call!15727 () List!1764)

(assert (=> b!141844 (= e!92435 call!15727)))

(declare-fun c!26737 () Bool)

(declare-fun b!141845 () Bool)

(assert (=> b!141845 (= c!26737 (and ((_ is Cons!1760) (toList!889 call!15526)) (bvsgt (_1!1352 (h!2367 (toList!889 call!15526))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!141845 (= e!92438 e!92435)))

(declare-fun b!141846 () Bool)

(assert (=> b!141846 (= e!92436 e!92438)))

(declare-fun c!26736 () Bool)

(assert (=> b!141846 (= c!26736 (and ((_ is Cons!1760) (toList!889 call!15526)) (= (_1!1352 (h!2367 (toList!889 call!15526))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141847 () Bool)

(assert (=> b!141847 (= e!92437 (ite c!26736 (t!6360 (toList!889 call!15526)) (ite c!26737 (Cons!1760 (h!2367 (toList!889 call!15526)) (t!6360 (toList!889 call!15526))) Nil!1761)))))

(declare-fun bm!15724 () Bool)

(assert (=> bm!15724 (= call!15727 call!15726)))

(declare-fun b!141848 () Bool)

(declare-fun res!67668 () Bool)

(assert (=> b!141848 (=> (not res!67668) (not e!92434))))

(assert (=> b!141848 (= res!67668 (containsKey!179 lt!74413 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141849 () Bool)

(assert (=> b!141849 (= e!92435 call!15727)))

(assert (= (and d!44779 c!26735) b!141841))

(assert (= (and d!44779 (not c!26735)) b!141846))

(assert (= (and b!141846 c!26736) b!141843))

(assert (= (and b!141846 (not c!26736)) b!141845))

(assert (= (and b!141845 c!26737) b!141849))

(assert (= (and b!141845 (not c!26737)) b!141844))

(assert (= (or b!141849 b!141844) bm!15724))

(assert (= (or b!141843 bm!15724) bm!15723))

(assert (= (or b!141841 bm!15723) bm!15722))

(assert (= (and bm!15722 c!26738) b!141842))

(assert (= (and bm!15722 (not c!26738)) b!141847))

(assert (= (and d!44779 res!67669) b!141848))

(assert (= (and b!141848 res!67668) b!141840))

(declare-fun m!170599 () Bool)

(assert (=> b!141840 m!170599))

(declare-fun m!170601 () Bool)

(assert (=> b!141848 m!170601))

(declare-fun m!170603 () Bool)

(assert (=> b!141842 m!170603))

(declare-fun m!170605 () Bool)

(assert (=> bm!15722 m!170605))

(declare-fun m!170607 () Bool)

(assert (=> d!44779 m!170607))

(declare-fun m!170609 () Bool)

(assert (=> d!44779 m!170609))

(assert (=> d!43999 d!44779))

(declare-fun d!44781 () Bool)

(declare-fun res!67670 () Bool)

(declare-fun e!92439 () Bool)

(assert (=> d!44781 (=> res!67670 e!92439)))

(assert (=> d!44781 (= res!67670 (or ((_ is Nil!1761) lt!73707) ((_ is Nil!1761) (t!6360 lt!73707))))))

(assert (=> d!44781 (= (isStrictlySorted!320 lt!73707) e!92439)))

(declare-fun b!141850 () Bool)

(declare-fun e!92440 () Bool)

(assert (=> b!141850 (= e!92439 e!92440)))

(declare-fun res!67671 () Bool)

(assert (=> b!141850 (=> (not res!67671) (not e!92440))))

(assert (=> b!141850 (= res!67671 (bvslt (_1!1352 (h!2367 lt!73707)) (_1!1352 (h!2367 (t!6360 lt!73707)))))))

(declare-fun b!141851 () Bool)

(assert (=> b!141851 (= e!92440 (isStrictlySorted!320 (t!6360 lt!73707)))))

(assert (= (and d!44781 (not res!67670)) b!141850))

(assert (= (and b!141850 res!67671) b!141851))

(declare-fun m!170611 () Bool)

(assert (=> b!141851 m!170611))

(assert (=> d!43755 d!44781))

(declare-fun d!44783 () Bool)

(declare-fun res!67672 () Bool)

(declare-fun e!92441 () Bool)

(assert (=> d!44783 (=> res!67672 e!92441)))

(assert (=> d!44783 (= res!67672 (or ((_ is Nil!1761) (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) ((_ is Nil!1761) (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))))))))

(assert (=> d!44783 (= (isStrictlySorted!320 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443)))) e!92441)))

(declare-fun b!141852 () Bool)

(declare-fun e!92442 () Bool)

(assert (=> b!141852 (= e!92441 e!92442)))

(declare-fun res!67673 () Bool)

(assert (=> b!141852 (=> (not res!67673) (not e!92442))))

(assert (=> b!141852 (= res!67673 (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))) (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))))))))

(declare-fun b!141853 () Bool)

(assert (=> b!141853 (= e!92442 (isStrictlySorted!320 (t!6360 (toList!889 (ite c!26110 call!15444 (ite c!26113 call!15446 call!15443))))))))

(assert (= (and d!44783 (not res!67672)) b!141852))

(assert (= (and b!141852 res!67673) b!141853))

(assert (=> b!141853 m!170129))

(assert (=> d!43755 d!44783))

(declare-fun d!44785 () Bool)

(declare-fun res!67674 () Bool)

(declare-fun e!92443 () Bool)

(assert (=> d!44785 (=> res!67674 e!92443)))

(assert (=> d!44785 (= res!67674 (and ((_ is Cons!1760) (toList!889 lt!73144)) (= (_1!1352 (h!2367 (toList!889 lt!73144))) lt!73142)))))

(assert (=> d!44785 (= (containsKey!179 (toList!889 lt!73144) lt!73142) e!92443)))

(declare-fun b!141854 () Bool)

(declare-fun e!92444 () Bool)

(assert (=> b!141854 (= e!92443 e!92444)))

(declare-fun res!67675 () Bool)

(assert (=> b!141854 (=> (not res!67675) (not e!92444))))

(assert (=> b!141854 (= res!67675 (and (or (not ((_ is Cons!1760) (toList!889 lt!73144))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73144))) lt!73142)) ((_ is Cons!1760) (toList!889 lt!73144)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73144))) lt!73142)))))

(declare-fun b!141855 () Bool)

(assert (=> b!141855 (= e!92444 (containsKey!179 (t!6360 (toList!889 lt!73144)) lt!73142))))

(assert (= (and d!44785 (not res!67674)) b!141854))

(assert (= (and b!141854 res!67675) b!141855))

(declare-fun m!170613 () Bool)

(assert (=> b!141855 m!170613))

(assert (=> d!43943 d!44785))

(assert (=> b!140338 d!44105))

(declare-fun d!44787 () Bool)

(declare-fun e!92446 () Bool)

(assert (=> d!44787 e!92446))

(declare-fun res!67676 () Bool)

(assert (=> d!44787 (=> res!67676 e!92446)))

(declare-fun lt!74414 () Bool)

(assert (=> d!44787 (= res!67676 (not lt!74414))))

(declare-fun lt!74417 () Bool)

(assert (=> d!44787 (= lt!74414 lt!74417)))

(declare-fun lt!74415 () Unit!4395)

(declare-fun e!92445 () Unit!4395)

(assert (=> d!44787 (= lt!74415 e!92445)))

(declare-fun c!26739 () Bool)

(assert (=> d!44787 (= c!26739 lt!74417)))

(assert (=> d!44787 (= lt!74417 (containsKey!179 (toList!889 lt!74103) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> d!44787 (= (contains!921 lt!74103 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74414)))

(declare-fun b!141856 () Bool)

(declare-fun lt!74416 () Unit!4395)

(assert (=> b!141856 (= e!92445 lt!74416)))

(assert (=> b!141856 (= lt!74416 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74103) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(assert (=> b!141856 (isDefined!129 (getValueByKey!175 (toList!889 lt!74103) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141857 () Bool)

(declare-fun Unit!4485 () Unit!4395)

(assert (=> b!141857 (= e!92445 Unit!4485)))

(declare-fun b!141858 () Bool)

(assert (=> b!141858 (= e!92446 (isDefined!129 (getValueByKey!175 (toList!889 lt!74103) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44787 c!26739) b!141856))

(assert (= (and d!44787 (not c!26739)) b!141857))

(assert (= (and d!44787 (not res!67676)) b!141858))

(declare-fun m!170615 () Bool)

(assert (=> d!44787 m!170615))

(declare-fun m!170617 () Bool)

(assert (=> b!141856 m!170617))

(assert (=> b!141856 m!169263))

(assert (=> b!141856 m!169263))

(declare-fun m!170619 () Bool)

(assert (=> b!141856 m!170619))

(assert (=> b!141858 m!169263))

(assert (=> b!141858 m!169263))

(assert (=> b!141858 m!170619))

(assert (=> d!44137 d!44787))

(declare-fun b!141861 () Bool)

(declare-fun e!92448 () Option!181)

(assert (=> b!141861 (= e!92448 (getValueByKey!175 (t!6360 lt!74104) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141860 () Bool)

(declare-fun e!92447 () Option!181)

(assert (=> b!141860 (= e!92447 e!92448)))

(declare-fun c!26741 () Bool)

(assert (=> b!141860 (= c!26741 (and ((_ is Cons!1760) lt!74104) (not (= (_1!1352 (h!2367 lt!74104)) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!141862 () Bool)

(assert (=> b!141862 (= e!92448 None!179)))

(declare-fun b!141859 () Bool)

(assert (=> b!141859 (= e!92447 (Some!180 (_2!1352 (h!2367 lt!74104))))))

(declare-fun d!44789 () Bool)

(declare-fun c!26740 () Bool)

(assert (=> d!44789 (= c!26740 (and ((_ is Cons!1760) lt!74104) (= (_1!1352 (h!2367 lt!74104)) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44789 (= (getValueByKey!175 lt!74104 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92447)))

(assert (= (and d!44789 c!26740) b!141859))

(assert (= (and d!44789 (not c!26740)) b!141860))

(assert (= (and b!141860 c!26741) b!141861))

(assert (= (and b!141860 (not c!26741)) b!141862))

(declare-fun m!170621 () Bool)

(assert (=> b!141861 m!170621))

(assert (=> d!44137 d!44789))

(declare-fun d!44791 () Bool)

(assert (=> d!44791 (= (getValueByKey!175 lt!74104 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun lt!74418 () Unit!4395)

(assert (=> d!44791 (= lt!74418 (choose!873 lt!74104 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun e!92449 () Bool)

(assert (=> d!44791 e!92449))

(declare-fun res!67677 () Bool)

(assert (=> d!44791 (=> (not res!67677) (not e!92449))))

(assert (=> d!44791 (= res!67677 (isStrictlySorted!320 lt!74104))))

(assert (=> d!44791 (= (lemmaContainsTupThenGetReturnValue!91 lt!74104 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74418)))

(declare-fun b!141863 () Bool)

(declare-fun res!67678 () Bool)

(assert (=> b!141863 (=> (not res!67678) (not e!92449))))

(assert (=> b!141863 (= res!67678 (containsKey!179 lt!74104 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141864 () Bool)

(assert (=> b!141864 (= e!92449 (contains!923 lt!74104 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (= (and d!44791 res!67677) b!141863))

(assert (= (and b!141863 res!67678) b!141864))

(assert (=> d!44791 m!169257))

(declare-fun m!170623 () Bool)

(assert (=> d!44791 m!170623))

(declare-fun m!170625 () Bool)

(assert (=> d!44791 m!170625))

(declare-fun m!170627 () Bool)

(assert (=> b!141863 m!170627))

(declare-fun m!170629 () Bool)

(assert (=> b!141864 m!170629))

(assert (=> d!44137 d!44791))

(declare-fun d!44793 () Bool)

(declare-fun e!92450 () Bool)

(assert (=> d!44793 e!92450))

(declare-fun res!67680 () Bool)

(assert (=> d!44793 (=> (not res!67680) (not e!92450))))

(declare-fun lt!74419 () List!1764)

(assert (=> d!44793 (= res!67680 (isStrictlySorted!320 lt!74419))))

(declare-fun e!92452 () List!1764)

(assert (=> d!44793 (= lt!74419 e!92452)))

(declare-fun c!26742 () Bool)

(assert (=> d!44793 (= c!26742 (and ((_ is Cons!1760) (toList!889 lt!73261)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73261))) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44793 (isStrictlySorted!320 (toList!889 lt!73261))))

(assert (=> d!44793 (= (insertStrictlySorted!93 (toList!889 lt!73261) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!74419)))

(declare-fun b!141865 () Bool)

(assert (=> b!141865 (= e!92450 (contains!923 lt!74419 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun bm!15725 () Bool)

(declare-fun e!92453 () List!1764)

(declare-fun call!15728 () List!1764)

(assert (=> bm!15725 (= call!15728 ($colon$colon!93 e!92453 (ite c!26742 (h!2367 (toList!889 lt!73261)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun c!26745 () Bool)

(assert (=> bm!15725 (= c!26745 c!26742)))

(declare-fun b!141866 () Bool)

(assert (=> b!141866 (= e!92452 call!15728)))

(declare-fun b!141867 () Bool)

(assert (=> b!141867 (= e!92453 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73261)) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141868 () Bool)

(declare-fun e!92454 () List!1764)

(declare-fun call!15729 () List!1764)

(assert (=> b!141868 (= e!92454 call!15729)))

(declare-fun bm!15726 () Bool)

(assert (=> bm!15726 (= call!15729 call!15728)))

(declare-fun b!141869 () Bool)

(declare-fun e!92451 () List!1764)

(declare-fun call!15730 () List!1764)

(assert (=> b!141869 (= e!92451 call!15730)))

(declare-fun b!141870 () Bool)

(declare-fun c!26744 () Bool)

(assert (=> b!141870 (= c!26744 (and ((_ is Cons!1760) (toList!889 lt!73261)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73261))) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!141870 (= e!92454 e!92451)))

(declare-fun b!141871 () Bool)

(assert (=> b!141871 (= e!92452 e!92454)))

(declare-fun c!26743 () Bool)

(assert (=> b!141871 (= c!26743 (and ((_ is Cons!1760) (toList!889 lt!73261)) (= (_1!1352 (h!2367 (toList!889 lt!73261))) (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!141872 () Bool)

(assert (=> b!141872 (= e!92453 (ite c!26743 (t!6360 (toList!889 lt!73261)) (ite c!26744 (Cons!1760 (h!2367 (toList!889 lt!73261)) (t!6360 (toList!889 lt!73261))) Nil!1761)))))

(declare-fun bm!15727 () Bool)

(assert (=> bm!15727 (= call!15730 call!15729)))

(declare-fun b!141873 () Bool)

(declare-fun res!67679 () Bool)

(assert (=> b!141873 (=> (not res!67679) (not e!92450))))

(assert (=> b!141873 (= res!67679 (containsKey!179 lt!74419 (_1!1352 (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!141874 () Bool)

(assert (=> b!141874 (= e!92451 call!15730)))

(assert (= (and d!44793 c!26742) b!141866))

(assert (= (and d!44793 (not c!26742)) b!141871))

(assert (= (and b!141871 c!26743) b!141868))

(assert (= (and b!141871 (not c!26743)) b!141870))

(assert (= (and b!141870 c!26744) b!141874))

(assert (= (and b!141870 (not c!26744)) b!141869))

(assert (= (or b!141874 b!141869) bm!15727))

(assert (= (or b!141868 bm!15727) bm!15726))

(assert (= (or b!141866 bm!15726) bm!15725))

(assert (= (and bm!15725 c!26745) b!141867))

(assert (= (and bm!15725 (not c!26745)) b!141872))

(assert (= (and d!44793 res!67680) b!141873))

(assert (= (and b!141873 res!67679) b!141865))

(declare-fun m!170631 () Bool)

(assert (=> b!141865 m!170631))

(declare-fun m!170633 () Bool)

(assert (=> b!141873 m!170633))

(declare-fun m!170635 () Bool)

(assert (=> b!141867 m!170635))

(declare-fun m!170637 () Bool)

(assert (=> bm!15725 m!170637))

(declare-fun m!170639 () Bool)

(assert (=> d!44793 m!170639))

(declare-fun m!170641 () Bool)

(assert (=> d!44793 m!170641))

(assert (=> d!44137 d!44793))

(assert (=> d!44051 d!43661))

(declare-fun b!141877 () Bool)

(declare-fun e!92456 () Option!181)

(assert (=> b!141877 (= e!92456 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73135))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141876 () Bool)

(declare-fun e!92455 () Option!181)

(assert (=> b!141876 (= e!92455 e!92456)))

(declare-fun c!26747 () Bool)

(assert (=> b!141876 (= c!26747 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141878 () Bool)

(assert (=> b!141878 (= e!92456 None!179)))

(declare-fun b!141875 () Bool)

(assert (=> b!141875 (= e!92455 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73135))))))))

(declare-fun d!44795 () Bool)

(declare-fun c!26746 () Bool)

(assert (=> d!44795 (= c!26746 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44795 (= (getValueByKey!175 (t!6360 (toList!889 lt!73135)) #b0000000000000000000000000000000000000000000000000000000000000000) e!92455)))

(assert (= (and d!44795 c!26746) b!141875))

(assert (= (and d!44795 (not c!26746)) b!141876))

(assert (= (and b!141876 c!26747) b!141877))

(assert (= (and b!141876 (not c!26747)) b!141878))

(declare-fun m!170643 () Bool)

(assert (=> b!141877 m!170643))

(assert (=> b!140596 d!44795))

(declare-fun lt!74420 () Bool)

(declare-fun d!44797 () Bool)

(assert (=> d!44797 (= lt!74420 (select (content!137 lt!73617) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92457 () Bool)

(assert (=> d!44797 (= lt!74420 e!92457)))

(declare-fun res!67682 () Bool)

(assert (=> d!44797 (=> (not res!67682) (not e!92457))))

(assert (=> d!44797 (= res!67682 ((_ is Cons!1760) lt!73617))))

(assert (=> d!44797 (= (contains!923 lt!73617 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74420)))

(declare-fun b!141879 () Bool)

(declare-fun e!92458 () Bool)

(assert (=> b!141879 (= e!92457 e!92458)))

(declare-fun res!67681 () Bool)

(assert (=> b!141879 (=> res!67681 e!92458)))

(assert (=> b!141879 (= res!67681 (= (h!2367 lt!73617) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141880 () Bool)

(assert (=> b!141880 (= e!92458 (contains!923 (t!6360 lt!73617) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!44797 res!67682) b!141879))

(assert (= (and b!141879 (not res!67681)) b!141880))

(declare-fun m!170645 () Bool)

(assert (=> d!44797 m!170645))

(declare-fun m!170647 () Bool)

(assert (=> d!44797 m!170647))

(declare-fun m!170649 () Bool)

(assert (=> b!141880 m!170649))

(assert (=> b!140319 d!44797))

(assert (=> d!44033 d!43703))

(assert (=> d!44033 d!43705))

(declare-fun d!44799 () Bool)

(assert (=> d!44799 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44799 true))

(declare-fun _$12!415 () Unit!4395)

(assert (=> d!44799 (= (choose!868 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!415)))

(declare-fun bs!5975 () Bool)

(assert (= bs!5975 d!44799))

(assert (=> bs!5975 m!167017))

(assert (=> bs!5975 m!167017))

(assert (=> bs!5975 m!167533))

(assert (=> d!44033 d!44799))

(assert (=> d!44033 d!44697))

(declare-fun d!44801 () Bool)

(assert (=> d!44801 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73266)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73266)))))

(assert (=> d!44133 d!44801))

(declare-fun e!92460 () Option!181)

(declare-fun b!141883 () Bool)

(assert (=> b!141883 (= e!92460 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) lt!73266))))

(declare-fun b!141882 () Bool)

(declare-fun e!92459 () Option!181)

(assert (=> b!141882 (= e!92459 e!92460)))

(declare-fun c!26749 () Bool)

(assert (=> b!141882 (= c!26749 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73266))))))

(declare-fun b!141884 () Bool)

(assert (=> b!141884 (= e!92460 None!179)))

(declare-fun b!141881 () Bool)

(assert (=> b!141881 (= e!92459 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))))

(declare-fun d!44803 () Bool)

(declare-fun c!26748 () Bool)

(assert (=> d!44803 (= c!26748 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73266)))))

(assert (=> d!44803 (= (getValueByKey!175 (toList!889 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73266) e!92459)))

(assert (= (and d!44803 c!26748) b!141881))

(assert (= (and d!44803 (not c!26748)) b!141882))

(assert (= (and b!141882 c!26749) b!141883))

(assert (= (and b!141882 (not c!26749)) b!141884))

(declare-fun m!170651 () Bool)

(assert (=> b!141883 m!170651))

(assert (=> d!44133 d!44803))

(declare-fun b!141887 () Bool)

(declare-fun e!92462 () Option!181)

(assert (=> b!141887 (= e!92462 (getValueByKey!175 (t!6360 (toList!889 lt!73804)) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!141886 () Bool)

(declare-fun e!92461 () Option!181)

(assert (=> b!141886 (= e!92461 e!92462)))

(declare-fun c!26751 () Bool)

(assert (=> b!141886 (= c!26751 (and ((_ is Cons!1760) (toList!889 lt!73804)) (not (= (_1!1352 (h!2367 (toList!889 lt!73804))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun b!141888 () Bool)

(assert (=> b!141888 (= e!92462 None!179)))

(declare-fun b!141885 () Bool)

(assert (=> b!141885 (= e!92461 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73804)))))))

(declare-fun d!44805 () Bool)

(declare-fun c!26750 () Bool)

(assert (=> d!44805 (= c!26750 (and ((_ is Cons!1760) (toList!889 lt!73804)) (= (_1!1352 (h!2367 (toList!889 lt!73804))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!44805 (= (getValueByKey!175 (toList!889 lt!73804) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92461)))

(assert (= (and d!44805 c!26750) b!141885))

(assert (= (and d!44805 (not c!26750)) b!141886))

(assert (= (and b!141886 c!26751) b!141887))

(assert (= (and b!141886 (not c!26751)) b!141888))

(declare-fun m!170653 () Bool)

(assert (=> b!141887 m!170653))

(assert (=> b!140644 d!44805))

(declare-fun d!44807 () Bool)

(assert (=> d!44807 (= (get!1538 (getValueByKey!175 (toList!889 lt!73261) lt!73267)) (v!3283 (getValueByKey!175 (toList!889 lt!73261) lt!73267)))))

(assert (=> d!44119 d!44807))

(declare-fun b!141891 () Bool)

(declare-fun e!92464 () Option!181)

(assert (=> b!141891 (= e!92464 (getValueByKey!175 (t!6360 (toList!889 lt!73261)) lt!73267))))

(declare-fun b!141890 () Bool)

(declare-fun e!92463 () Option!181)

(assert (=> b!141890 (= e!92463 e!92464)))

(declare-fun c!26753 () Bool)

(assert (=> b!141890 (= c!26753 (and ((_ is Cons!1760) (toList!889 lt!73261)) (not (= (_1!1352 (h!2367 (toList!889 lt!73261))) lt!73267))))))

(declare-fun b!141892 () Bool)

(assert (=> b!141892 (= e!92464 None!179)))

(declare-fun b!141889 () Bool)

(assert (=> b!141889 (= e!92463 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73261)))))))

(declare-fun d!44809 () Bool)

(declare-fun c!26752 () Bool)

(assert (=> d!44809 (= c!26752 (and ((_ is Cons!1760) (toList!889 lt!73261)) (= (_1!1352 (h!2367 (toList!889 lt!73261))) lt!73267)))))

(assert (=> d!44809 (= (getValueByKey!175 (toList!889 lt!73261) lt!73267) e!92463)))

(assert (= (and d!44809 c!26752) b!141889))

(assert (= (and d!44809 (not c!26752)) b!141890))

(assert (= (and b!141890 c!26753) b!141891))

(assert (= (and b!141890 (not c!26753)) b!141892))

(declare-fun m!170655 () Bool)

(assert (=> b!141891 m!170655))

(assert (=> d!44119 d!44809))

(declare-fun b!141893 () Bool)

(declare-fun res!67684 () Bool)

(declare-fun e!92469 () Bool)

(assert (=> b!141893 (=> (not res!67684) (not e!92469))))

(declare-fun lt!74423 () ListLongMap!1747)

(assert (=> b!141893 (= res!67684 (not (contains!921 lt!74423 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141894 () Bool)

(assert (=> b!141894 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> b!141894 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2587 (_values!2923 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!92465 () Bool)

(assert (=> b!141894 (= e!92465 (= (apply!120 lt!74423 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141895 () Bool)

(declare-fun e!92471 () ListLongMap!1747)

(declare-fun e!92468 () ListLongMap!1747)

(assert (=> b!141895 (= e!92471 e!92468)))

(declare-fun c!26756 () Bool)

(assert (=> b!141895 (= c!26756 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!141896 () Bool)

(declare-fun e!92466 () Bool)

(assert (=> b!141896 (= e!92466 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!141896 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!44811 () Bool)

(assert (=> d!44811 e!92469))

(declare-fun res!67686 () Bool)

(assert (=> d!44811 (=> (not res!67686) (not e!92469))))

(assert (=> d!44811 (= res!67686 (not (contains!921 lt!74423 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44811 (= lt!74423 e!92471)))

(declare-fun c!26757 () Bool)

(assert (=> d!44811 (= c!26757 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!44811 (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992))))))

(assert (=> d!44811 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))) lt!74423)))

(declare-fun b!141897 () Bool)

(declare-fun e!92467 () Bool)

(declare-fun e!92470 () Bool)

(assert (=> b!141897 (= e!92467 e!92470)))

(declare-fun c!26754 () Bool)

(assert (=> b!141897 (= c!26754 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!141898 () Bool)

(assert (=> b!141898 (= e!92470 (= lt!74423 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!141899 () Bool)

(assert (=> b!141899 (= e!92467 e!92465)))

(assert (=> b!141899 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun res!67685 () Bool)

(assert (=> b!141899 (= res!67685 (contains!921 lt!74423 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!141899 (=> (not res!67685) (not e!92465))))

(declare-fun b!141900 () Bool)

(declare-fun call!15731 () ListLongMap!1747)

(assert (=> b!141900 (= e!92468 call!15731)))

(declare-fun bm!15728 () Bool)

(assert (=> bm!15728 (= call!15731 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (_values!2923 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992))) (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) (zeroValue!2790 (v!3280 (underlying!481 thiss!992))) (minValue!2790 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!141901 () Bool)

(assert (=> b!141901 (= e!92471 (ListLongMap!1748 Nil!1761))))

(declare-fun b!141902 () Bool)

(declare-fun lt!74421 () Unit!4395)

(declare-fun lt!74427 () Unit!4395)

(assert (=> b!141902 (= lt!74421 lt!74427)))

(declare-fun lt!74426 () (_ BitVec 64))

(declare-fun lt!74425 () (_ BitVec 64))

(declare-fun lt!74422 () ListLongMap!1747)

(declare-fun lt!74424 () V!3555)

(assert (=> b!141902 (not (contains!921 (+!174 lt!74422 (tuple2!2685 lt!74426 lt!74424)) lt!74425))))

(assert (=> b!141902 (= lt!74427 (addStillNotContains!66 lt!74422 lt!74426 lt!74424 lt!74425))))

(assert (=> b!141902 (= lt!74425 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141902 (= lt!74424 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141902 (= lt!74426 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!141902 (= lt!74422 call!15731)))

(assert (=> b!141902 (= e!92468 (+!174 call!15731 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141903 () Bool)

(assert (=> b!141903 (= e!92469 e!92467)))

(declare-fun c!26755 () Bool)

(assert (=> b!141903 (= c!26755 e!92466)))

(declare-fun res!67683 () Bool)

(assert (=> b!141903 (=> (not res!67683) (not e!92466))))

(assert (=> b!141903 (= res!67683 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!141904 () Bool)

(assert (=> b!141904 (= e!92470 (isEmpty!423 lt!74423))))

(assert (= (and d!44811 c!26757) b!141901))

(assert (= (and d!44811 (not c!26757)) b!141895))

(assert (= (and b!141895 c!26756) b!141902))

(assert (= (and b!141895 (not c!26756)) b!141900))

(assert (= (or b!141902 b!141900) bm!15728))

(assert (= (and d!44811 res!67686) b!141893))

(assert (= (and b!141893 res!67684) b!141903))

(assert (= (and b!141903 res!67683) b!141896))

(assert (= (and b!141903 c!26755) b!141899))

(assert (= (and b!141903 (not c!26755)) b!141897))

(assert (= (and b!141899 res!67685) b!141894))

(assert (= (and b!141897 c!26754) b!141898))

(assert (= (and b!141897 (not c!26754)) b!141904))

(declare-fun b_lambda!6393 () Bool)

(assert (=> (not b_lambda!6393) (not b!141894)))

(assert (=> b!141894 t!6356))

(declare-fun b_and!8881 () Bool)

(assert (= b_and!8877 (and (=> t!6356 result!4189) b_and!8881)))

(assert (=> b!141894 t!6358))

(declare-fun b_and!8883 () Bool)

(assert (= b_and!8879 (and (=> t!6358 result!4193) b_and!8883)))

(declare-fun b_lambda!6395 () Bool)

(assert (=> (not b_lambda!6395) (not b!141902)))

(assert (=> b!141902 t!6356))

(declare-fun b_and!8885 () Bool)

(assert (= b_and!8881 (and (=> t!6356 result!4189) b_and!8885)))

(assert (=> b!141902 t!6358))

(declare-fun b_and!8887 () Bool)

(assert (= b_and!8883 (and (=> t!6358 result!4193) b_and!8887)))

(declare-fun m!170657 () Bool)

(assert (=> b!141898 m!170657))

(assert (=> b!141896 m!169299))

(assert (=> b!141896 m!169299))

(declare-fun m!170659 () Bool)

(assert (=> b!141896 m!170659))

(declare-fun m!170661 () Bool)

(assert (=> b!141902 m!170661))

(declare-fun m!170663 () Bool)

(assert (=> b!141902 m!170663))

(assert (=> b!141902 m!169299))

(declare-fun m!170665 () Bool)

(assert (=> b!141902 m!170665))

(declare-fun m!170667 () Bool)

(assert (=> b!141902 m!170667))

(assert (=> b!141902 m!166729))

(declare-fun m!170669 () Bool)

(assert (=> b!141902 m!170669))

(assert (=> b!141902 m!170669))

(assert (=> b!141902 m!166729))

(declare-fun m!170671 () Bool)

(assert (=> b!141902 m!170671))

(assert (=> b!141902 m!170661))

(assert (=> b!141899 m!169299))

(assert (=> b!141899 m!169299))

(declare-fun m!170673 () Bool)

(assert (=> b!141899 m!170673))

(assert (=> b!141895 m!169299))

(assert (=> b!141895 m!169299))

(assert (=> b!141895 m!170659))

(assert (=> b!141894 m!169299))

(assert (=> b!141894 m!169299))

(declare-fun m!170675 () Bool)

(assert (=> b!141894 m!170675))

(assert (=> b!141894 m!166729))

(assert (=> b!141894 m!170669))

(assert (=> b!141894 m!170669))

(assert (=> b!141894 m!166729))

(assert (=> b!141894 m!170671))

(declare-fun m!170677 () Bool)

(assert (=> b!141904 m!170677))

(declare-fun m!170679 () Bool)

(assert (=> d!44811 m!170679))

(assert (=> d!44811 m!166827))

(declare-fun m!170681 () Bool)

(assert (=> b!141893 m!170681))

(assert (=> bm!15728 m!170657))

(assert (=> bm!15592 d!44811))

(assert (=> b!140334 d!44283))

(declare-fun d!44813 () Bool)

(declare-fun e!92472 () Bool)

(assert (=> d!44813 e!92472))

(declare-fun res!67688 () Bool)

(assert (=> d!44813 (=> (not res!67688) (not e!92472))))

(declare-fun lt!74430 () ListLongMap!1747)

(assert (=> d!44813 (= res!67688 (contains!921 lt!74430 (_1!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74431 () List!1764)

(assert (=> d!44813 (= lt!74430 (ListLongMap!1748 lt!74431))))

(declare-fun lt!74428 () Unit!4395)

(declare-fun lt!74429 () Unit!4395)

(assert (=> d!44813 (= lt!74428 lt!74429)))

(assert (=> d!44813 (= (getValueByKey!175 lt!74431 (_1!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44813 (= lt!74429 (lemmaContainsTupThenGetReturnValue!91 lt!74431 (_1!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44813 (= lt!74431 (insertStrictlySorted!93 (toList!889 (ite c!26362 call!15619 (ite c!26365 call!15621 call!15618))) (_1!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!44813 (= (+!174 (ite c!26362 call!15619 (ite c!26365 call!15621 call!15618)) (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74430)))

(declare-fun b!141905 () Bool)

(declare-fun res!67687 () Bool)

(assert (=> b!141905 (=> (not res!67687) (not e!92472))))

(assert (=> b!141905 (= res!67687 (= (getValueByKey!175 (toList!889 lt!74430) (_1!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!141906 () Bool)

(assert (=> b!141906 (= e!92472 (contains!923 (toList!889 lt!74430) (ite (or c!26362 c!26365) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44813 res!67688) b!141905))

(assert (= (and b!141905 res!67687) b!141906))

(declare-fun m!170683 () Bool)

(assert (=> d!44813 m!170683))

(declare-fun m!170685 () Bool)

(assert (=> d!44813 m!170685))

(declare-fun m!170687 () Bool)

(assert (=> d!44813 m!170687))

(declare-fun m!170689 () Bool)

(assert (=> d!44813 m!170689))

(declare-fun m!170691 () Bool)

(assert (=> b!141905 m!170691))

(declare-fun m!170693 () Bool)

(assert (=> b!141906 m!170693))

(assert (=> bm!15617 d!44813))

(assert (=> d!43733 d!43731))

(declare-fun d!44815 () Bool)

(assert (=> d!44815 (= (getValueByKey!175 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!44815 true))

(declare-fun _$22!495 () Unit!4395)

(assert (=> d!44815 (= (choose!873 lt!73379 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) _$22!495)))

(declare-fun bs!5976 () Bool)

(assert (= bs!5976 d!44815))

(assert (=> bs!5976 m!167121))

(assert (=> d!43733 d!44815))

(declare-fun d!44817 () Bool)

(declare-fun res!67689 () Bool)

(declare-fun e!92473 () Bool)

(assert (=> d!44817 (=> res!67689 e!92473)))

(assert (=> d!44817 (= res!67689 (or ((_ is Nil!1761) lt!73379) ((_ is Nil!1761) (t!6360 lt!73379))))))

(assert (=> d!44817 (= (isStrictlySorted!320 lt!73379) e!92473)))

(declare-fun b!141907 () Bool)

(declare-fun e!92474 () Bool)

(assert (=> b!141907 (= e!92473 e!92474)))

(declare-fun res!67690 () Bool)

(assert (=> b!141907 (=> (not res!67690) (not e!92474))))

(assert (=> b!141907 (= res!67690 (bvslt (_1!1352 (h!2367 lt!73379)) (_1!1352 (h!2367 (t!6360 lt!73379)))))))

(declare-fun b!141908 () Bool)

(assert (=> b!141908 (= e!92474 (isStrictlySorted!320 (t!6360 lt!73379)))))

(assert (= (and d!44817 (not res!67689)) b!141907))

(assert (= (and b!141907 res!67690) b!141908))

(declare-fun m!170695 () Bool)

(assert (=> b!141908 m!170695))

(assert (=> d!43733 d!44817))

(declare-fun e!92476 () Option!181)

(declare-fun b!141911 () Bool)

(assert (=> b!141911 (= e!92476 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73508))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141910 () Bool)

(declare-fun e!92475 () Option!181)

(assert (=> b!141910 (= e!92475 e!92476)))

(declare-fun c!26759 () Bool)

(assert (=> b!141910 (= c!26759 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73508))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73508)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141912 () Bool)

(assert (=> b!141912 (= e!92476 None!179)))

(declare-fun b!141909 () Bool)

(assert (=> b!141909 (= e!92475 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73508))))))))

(declare-fun d!44819 () Bool)

(declare-fun c!26758 () Bool)

(assert (=> d!44819 (= c!26758 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73508))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73508)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44819 (= (getValueByKey!175 (t!6360 (toList!889 lt!73508)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92475)))

(assert (= (and d!44819 c!26758) b!141909))

(assert (= (and d!44819 (not c!26758)) b!141910))

(assert (= (and b!141910 c!26759) b!141911))

(assert (= (and b!141910 (not c!26759)) b!141912))

(declare-fun m!170697 () Bool)

(assert (=> b!141911 m!170697))

(assert (=> b!141061 d!44819))

(declare-fun d!44821 () Bool)

(assert (=> d!44821 (= (size!2590 (v!3280 (underlying!481 thiss!992))) (bvadd (_size!625 (v!3280 (underlying!481 thiss!992))) (bvsdiv (bvadd (extraKeys!2695 (v!3280 (underlying!481 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140828 d!44821))

(declare-fun d!44823 () Bool)

(declare-fun e!92478 () Bool)

(assert (=> d!44823 e!92478))

(declare-fun res!67691 () Bool)

(assert (=> d!44823 (=> res!67691 e!92478)))

(declare-fun lt!74432 () Bool)

(assert (=> d!44823 (= res!67691 (not lt!74432))))

(declare-fun lt!74435 () Bool)

(assert (=> d!44823 (= lt!74432 lt!74435)))

(declare-fun lt!74433 () Unit!4395)

(declare-fun e!92477 () Unit!4395)

(assert (=> d!44823 (= lt!74433 e!92477)))

(declare-fun c!26760 () Bool)

(assert (=> d!44823 (= c!26760 lt!74435)))

(assert (=> d!44823 (= lt!74435 (containsKey!179 (toList!889 lt!74022) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44823 (= (contains!921 lt!74022 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74432)))

(declare-fun b!141913 () Bool)

(declare-fun lt!74434 () Unit!4395)

(assert (=> b!141913 (= e!92477 lt!74434)))

(assert (=> b!141913 (= lt!74434 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74022) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!141913 (isDefined!129 (getValueByKey!175 (toList!889 lt!74022) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141914 () Bool)

(declare-fun Unit!4486 () Unit!4395)

(assert (=> b!141914 (= e!92477 Unit!4486)))

(declare-fun b!141915 () Bool)

(assert (=> b!141915 (= e!92478 (isDefined!129 (getValueByKey!175 (toList!889 lt!74022) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44823 c!26760) b!141913))

(assert (= (and d!44823 (not c!26760)) b!141914))

(assert (= (and d!44823 (not res!67691)) b!141915))

(declare-fun m!170699 () Bool)

(assert (=> d!44823 m!170699))

(declare-fun m!170701 () Bool)

(assert (=> b!141913 m!170701))

(assert (=> b!141913 m!169039))

(assert (=> b!141913 m!169039))

(declare-fun m!170703 () Bool)

(assert (=> b!141913 m!170703))

(assert (=> b!141915 m!169039))

(assert (=> b!141915 m!169039))

(assert (=> b!141915 m!170703))

(assert (=> d!44047 d!44823))

(declare-fun e!92480 () Option!181)

(declare-fun b!141918 () Bool)

(assert (=> b!141918 (= e!92480 (getValueByKey!175 (t!6360 lt!74023) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141917 () Bool)

(declare-fun e!92479 () Option!181)

(assert (=> b!141917 (= e!92479 e!92480)))

(declare-fun c!26762 () Bool)

(assert (=> b!141917 (= c!26762 (and ((_ is Cons!1760) lt!74023) (not (= (_1!1352 (h!2367 lt!74023)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141919 () Bool)

(assert (=> b!141919 (= e!92480 None!179)))

(declare-fun b!141916 () Bool)

(assert (=> b!141916 (= e!92479 (Some!180 (_2!1352 (h!2367 lt!74023))))))

(declare-fun d!44825 () Bool)

(declare-fun c!26761 () Bool)

(assert (=> d!44825 (= c!26761 (and ((_ is Cons!1760) lt!74023) (= (_1!1352 (h!2367 lt!74023)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44825 (= (getValueByKey!175 lt!74023 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92479)))

(assert (= (and d!44825 c!26761) b!141916))

(assert (= (and d!44825 (not c!26761)) b!141917))

(assert (= (and b!141917 c!26762) b!141918))

(assert (= (and b!141917 (not c!26762)) b!141919))

(declare-fun m!170705 () Bool)

(assert (=> b!141918 m!170705))

(assert (=> d!44047 d!44825))

(declare-fun d!44827 () Bool)

(assert (=> d!44827 (= (getValueByKey!175 lt!74023 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74436 () Unit!4395)

(assert (=> d!44827 (= lt!74436 (choose!873 lt!74023 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92481 () Bool)

(assert (=> d!44827 e!92481))

(declare-fun res!67692 () Bool)

(assert (=> d!44827 (=> (not res!67692) (not e!92481))))

(assert (=> d!44827 (= res!67692 (isStrictlySorted!320 lt!74023))))

(assert (=> d!44827 (= (lemmaContainsTupThenGetReturnValue!91 lt!74023 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74436)))

(declare-fun b!141920 () Bool)

(declare-fun res!67693 () Bool)

(assert (=> b!141920 (=> (not res!67693) (not e!92481))))

(assert (=> b!141920 (= res!67693 (containsKey!179 lt!74023 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141921 () Bool)

(assert (=> b!141921 (= e!92481 (contains!923 lt!74023 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44827 res!67692) b!141920))

(assert (= (and b!141920 res!67693) b!141921))

(assert (=> d!44827 m!169033))

(declare-fun m!170707 () Bool)

(assert (=> d!44827 m!170707))

(declare-fun m!170709 () Bool)

(assert (=> d!44827 m!170709))

(declare-fun m!170711 () Bool)

(assert (=> b!141920 m!170711))

(declare-fun m!170713 () Bool)

(assert (=> b!141921 m!170713))

(assert (=> d!44047 d!44827))

(declare-fun d!44829 () Bool)

(declare-fun e!92482 () Bool)

(assert (=> d!44829 e!92482))

(declare-fun res!67695 () Bool)

(assert (=> d!44829 (=> (not res!67695) (not e!92482))))

(declare-fun lt!74437 () List!1764)

(assert (=> d!44829 (= res!67695 (isStrictlySorted!320 lt!74437))))

(declare-fun e!92484 () List!1764)

(assert (=> d!44829 (= lt!74437 e!92484)))

(declare-fun c!26763 () Bool)

(assert (=> d!44829 (= c!26763 (and ((_ is Cons!1760) (toList!889 (map!1438 newMap!16))) (bvslt (_1!1352 (h!2367 (toList!889 (map!1438 newMap!16)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44829 (isStrictlySorted!320 (toList!889 (map!1438 newMap!16)))))

(assert (=> d!44829 (= (insertStrictlySorted!93 (toList!889 (map!1438 newMap!16)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74437)))

(declare-fun b!141922 () Bool)

(assert (=> b!141922 (= e!92482 (contains!923 lt!74437 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92485 () List!1764)

(declare-fun call!15732 () List!1764)

(declare-fun bm!15729 () Bool)

(assert (=> bm!15729 (= call!15732 ($colon$colon!93 e!92485 (ite c!26763 (h!2367 (toList!889 (map!1438 newMap!16))) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26766 () Bool)

(assert (=> bm!15729 (= c!26766 c!26763)))

(declare-fun b!141923 () Bool)

(assert (=> b!141923 (= e!92484 call!15732)))

(declare-fun b!141924 () Bool)

(assert (=> b!141924 (= e!92485 (insertStrictlySorted!93 (t!6360 (toList!889 (map!1438 newMap!16))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141925 () Bool)

(declare-fun e!92486 () List!1764)

(declare-fun call!15733 () List!1764)

(assert (=> b!141925 (= e!92486 call!15733)))

(declare-fun bm!15730 () Bool)

(assert (=> bm!15730 (= call!15733 call!15732)))

(declare-fun b!141926 () Bool)

(declare-fun e!92483 () List!1764)

(declare-fun call!15734 () List!1764)

(assert (=> b!141926 (= e!92483 call!15734)))

(declare-fun c!26765 () Bool)

(declare-fun b!141927 () Bool)

(assert (=> b!141927 (= c!26765 (and ((_ is Cons!1760) (toList!889 (map!1438 newMap!16))) (bvsgt (_1!1352 (h!2367 (toList!889 (map!1438 newMap!16)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!141927 (= e!92486 e!92483)))

(declare-fun b!141928 () Bool)

(assert (=> b!141928 (= e!92484 e!92486)))

(declare-fun c!26764 () Bool)

(assert (=> b!141928 (= c!26764 (and ((_ is Cons!1760) (toList!889 (map!1438 newMap!16))) (= (_1!1352 (h!2367 (toList!889 (map!1438 newMap!16)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!141929 () Bool)

(assert (=> b!141929 (= e!92485 (ite c!26764 (t!6360 (toList!889 (map!1438 newMap!16))) (ite c!26765 (Cons!1760 (h!2367 (toList!889 (map!1438 newMap!16))) (t!6360 (toList!889 (map!1438 newMap!16)))) Nil!1761)))))

(declare-fun bm!15731 () Bool)

(assert (=> bm!15731 (= call!15734 call!15733)))

(declare-fun b!141930 () Bool)

(declare-fun res!67694 () Bool)

(assert (=> b!141930 (=> (not res!67694) (not e!92482))))

(assert (=> b!141930 (= res!67694 (containsKey!179 lt!74437 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!141931 () Bool)

(assert (=> b!141931 (= e!92483 call!15734)))

(assert (= (and d!44829 c!26763) b!141923))

(assert (= (and d!44829 (not c!26763)) b!141928))

(assert (= (and b!141928 c!26764) b!141925))

(assert (= (and b!141928 (not c!26764)) b!141927))

(assert (= (and b!141927 c!26765) b!141931))

(assert (= (and b!141927 (not c!26765)) b!141926))

(assert (= (or b!141931 b!141926) bm!15731))

(assert (= (or b!141925 bm!15731) bm!15730))

(assert (= (or b!141923 bm!15730) bm!15729))

(assert (= (and bm!15729 c!26766) b!141924))

(assert (= (and bm!15729 (not c!26766)) b!141929))

(assert (= (and d!44829 res!67695) b!141930))

(assert (= (and b!141930 res!67694) b!141922))

(declare-fun m!170715 () Bool)

(assert (=> b!141922 m!170715))

(declare-fun m!170717 () Bool)

(assert (=> b!141930 m!170717))

(declare-fun m!170719 () Bool)

(assert (=> b!141924 m!170719))

(declare-fun m!170721 () Bool)

(assert (=> bm!15729 m!170721))

(declare-fun m!170723 () Bool)

(assert (=> d!44829 m!170723))

(declare-fun m!170725 () Bool)

(assert (=> d!44829 m!170725))

(assert (=> d!44047 d!44829))

(declare-fun d!44831 () Bool)

(declare-fun res!67696 () Bool)

(declare-fun e!92487 () Bool)

(assert (=> d!44831 (=> res!67696 e!92487)))

(assert (=> d!44831 (= res!67696 (and ((_ is Cons!1760) lt!73529) (= (_1!1352 (h!2367 lt!73529)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!44831 (= (containsKey!179 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92487)))

(declare-fun b!141932 () Bool)

(declare-fun e!92488 () Bool)

(assert (=> b!141932 (= e!92487 e!92488)))

(declare-fun res!67697 () Bool)

(assert (=> b!141932 (=> (not res!67697) (not e!92488))))

(assert (=> b!141932 (= res!67697 (and (or (not ((_ is Cons!1760) lt!73529)) (bvsle (_1!1352 (h!2367 lt!73529)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1760) lt!73529) (bvslt (_1!1352 (h!2367 lt!73529)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!141933 () Bool)

(assert (=> b!141933 (= e!92488 (containsKey!179 (t!6360 lt!73529) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44831 (not res!67696)) b!141932))

(assert (= (and b!141932 res!67697) b!141933))

(declare-fun m!170727 () Bool)

(assert (=> b!141933 m!170727))

(assert (=> b!140498 d!44831))

(declare-fun d!44833 () Bool)

(assert (=> d!44833 (= (+!174 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!555 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))

(assert (=> d!44833 true))

(declare-fun _$3!49 () Unit!4395)

(assert (=> d!44833 (= (choose!874 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2940 newMap!16)) _$3!49)))

(declare-fun bs!5977 () Bool)

(assert (= bs!5977 d!44833))

(assert (=> bs!5977 m!167025))

(assert (=> bs!5977 m!166829))

(assert (=> bs!5977 m!167021))

(assert (=> bs!5977 m!167023))

(assert (=> bs!5977 m!166829))

(assert (=> bs!5977 m!167043))

(assert (=> d!43919 d!44833))

(assert (=> d!43919 d!43661))

(declare-fun d!44835 () Bool)

(assert (=> d!44835 (= (get!1538 (getValueByKey!175 (toList!889 lt!73405) lt!73397)) (v!3283 (getValueByKey!175 (toList!889 lt!73405) lt!73397)))))

(assert (=> d!44027 d!44835))

(declare-fun b!141936 () Bool)

(declare-fun e!92490 () Option!181)

(assert (=> b!141936 (= e!92490 (getValueByKey!175 (t!6360 (toList!889 lt!73405)) lt!73397))))

(declare-fun b!141935 () Bool)

(declare-fun e!92489 () Option!181)

(assert (=> b!141935 (= e!92489 e!92490)))

(declare-fun c!26768 () Bool)

(assert (=> b!141935 (= c!26768 (and ((_ is Cons!1760) (toList!889 lt!73405)) (not (= (_1!1352 (h!2367 (toList!889 lt!73405))) lt!73397))))))

(declare-fun b!141937 () Bool)

(assert (=> b!141937 (= e!92490 None!179)))

(declare-fun b!141934 () Bool)

(assert (=> b!141934 (= e!92489 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73405)))))))

(declare-fun d!44837 () Bool)

(declare-fun c!26767 () Bool)

(assert (=> d!44837 (= c!26767 (and ((_ is Cons!1760) (toList!889 lt!73405)) (= (_1!1352 (h!2367 (toList!889 lt!73405))) lt!73397)))))

(assert (=> d!44837 (= (getValueByKey!175 (toList!889 lt!73405) lt!73397) e!92489)))

(assert (= (and d!44837 c!26767) b!141934))

(assert (= (and d!44837 (not c!26767)) b!141935))

(assert (= (and b!141935 c!26768) b!141936))

(assert (= (and b!141935 (not c!26768)) b!141937))

(declare-fun m!170729 () Bool)

(assert (=> b!141936 m!170729))

(assert (=> d!44027 d!44837))

(declare-fun d!44839 () Bool)

(declare-fun e!92492 () Bool)

(assert (=> d!44839 e!92492))

(declare-fun res!67698 () Bool)

(assert (=> d!44839 (=> res!67698 e!92492)))

(declare-fun lt!74438 () Bool)

(assert (=> d!44839 (= res!67698 (not lt!74438))))

(declare-fun lt!74441 () Bool)

(assert (=> d!44839 (= lt!74438 lt!74441)))

(declare-fun lt!74439 () Unit!4395)

(declare-fun e!92491 () Unit!4395)

(assert (=> d!44839 (= lt!74439 e!92491)))

(declare-fun c!26769 () Bool)

(assert (=> d!44839 (= c!26769 lt!74441)))

(assert (=> d!44839 (= lt!74441 (containsKey!179 (toList!889 lt!73941) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44839 (= (contains!921 lt!73941 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74438)))

(declare-fun b!141938 () Bool)

(declare-fun lt!74440 () Unit!4395)

(assert (=> b!141938 (= e!92491 lt!74440)))

(assert (=> b!141938 (= lt!74440 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73941) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141938 (isDefined!129 (getValueByKey!175 (toList!889 lt!73941) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141939 () Bool)

(declare-fun Unit!4487 () Unit!4395)

(assert (=> b!141939 (= e!92491 Unit!4487)))

(declare-fun b!141940 () Bool)

(assert (=> b!141940 (= e!92492 (isDefined!129 (getValueByKey!175 (toList!889 lt!73941) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44839 c!26769) b!141938))

(assert (= (and d!44839 (not c!26769)) b!141939))

(assert (= (and d!44839 (not res!67698)) b!141940))

(declare-fun m!170731 () Bool)

(assert (=> d!44839 m!170731))

(declare-fun m!170733 () Bool)

(assert (=> b!141938 m!170733))

(declare-fun m!170735 () Bool)

(assert (=> b!141938 m!170735))

(assert (=> b!141938 m!170735))

(declare-fun m!170737 () Bool)

(assert (=> b!141938 m!170737))

(assert (=> b!141940 m!170735))

(assert (=> b!141940 m!170735))

(assert (=> b!141940 m!170737))

(assert (=> bm!15649 d!44839))

(declare-fun d!44841 () Bool)

(declare-fun e!92493 () Bool)

(assert (=> d!44841 e!92493))

(declare-fun res!67700 () Bool)

(assert (=> d!44841 (=> (not res!67700) (not e!92493))))

(declare-fun lt!74442 () List!1764)

(assert (=> d!44841 (= res!67700 (isStrictlySorted!320 lt!74442))))

(declare-fun e!92495 () List!1764)

(assert (=> d!44841 (= lt!74442 e!92495)))

(declare-fun c!26770 () Bool)

(assert (=> d!44841 (= c!26770 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73140))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73140)))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44841 (isStrictlySorted!320 (t!6360 (toList!889 lt!73140)))))

(assert (=> d!44841 (= (insertStrictlySorted!93 (t!6360 (toList!889 lt!73140)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74442)))

(declare-fun b!141941 () Bool)

(assert (=> b!141941 (= e!92493 (contains!923 lt!74442 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun bm!15732 () Bool)

(declare-fun call!15735 () List!1764)

(declare-fun e!92496 () List!1764)

(assert (=> bm!15732 (= call!15735 ($colon$colon!93 e!92496 (ite c!26770 (h!2367 (t!6360 (toList!889 lt!73140))) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26773 () Bool)

(assert (=> bm!15732 (= c!26773 c!26770)))

(declare-fun b!141942 () Bool)

(assert (=> b!141942 (= e!92495 call!15735)))

(declare-fun b!141943 () Bool)

(assert (=> b!141943 (= e!92496 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 lt!73140))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141944 () Bool)

(declare-fun e!92497 () List!1764)

(declare-fun call!15736 () List!1764)

(assert (=> b!141944 (= e!92497 call!15736)))

(declare-fun bm!15733 () Bool)

(assert (=> bm!15733 (= call!15736 call!15735)))

(declare-fun b!141945 () Bool)

(declare-fun e!92494 () List!1764)

(declare-fun call!15737 () List!1764)

(assert (=> b!141945 (= e!92494 call!15737)))

(declare-fun c!26772 () Bool)

(declare-fun b!141946 () Bool)

(assert (=> b!141946 (= c!26772 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73140))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73140)))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!141946 (= e!92497 e!92494)))

(declare-fun b!141947 () Bool)

(assert (=> b!141947 (= e!92495 e!92497)))

(declare-fun c!26771 () Bool)

(assert (=> b!141947 (= c!26771 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73140))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73140)))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141948 () Bool)

(assert (=> b!141948 (= e!92496 (ite c!26771 (t!6360 (t!6360 (toList!889 lt!73140))) (ite c!26772 (Cons!1760 (h!2367 (t!6360 (toList!889 lt!73140))) (t!6360 (t!6360 (toList!889 lt!73140)))) Nil!1761)))))

(declare-fun bm!15734 () Bool)

(assert (=> bm!15734 (= call!15737 call!15736)))

(declare-fun b!141949 () Bool)

(declare-fun res!67699 () Bool)

(assert (=> b!141949 (=> (not res!67699) (not e!92493))))

(assert (=> b!141949 (= res!67699 (containsKey!179 lt!74442 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141950 () Bool)

(assert (=> b!141950 (= e!92494 call!15737)))

(assert (= (and d!44841 c!26770) b!141942))

(assert (= (and d!44841 (not c!26770)) b!141947))

(assert (= (and b!141947 c!26771) b!141944))

(assert (= (and b!141947 (not c!26771)) b!141946))

(assert (= (and b!141946 c!26772) b!141950))

(assert (= (and b!141946 (not c!26772)) b!141945))

(assert (= (or b!141950 b!141945) bm!15734))

(assert (= (or b!141944 bm!15734) bm!15733))

(assert (= (or b!141942 bm!15733) bm!15732))

(assert (= (and bm!15732 c!26773) b!141943))

(assert (= (and bm!15732 (not c!26773)) b!141948))

(assert (= (and d!44841 res!67700) b!141949))

(assert (= (and b!141949 res!67699) b!141941))

(declare-fun m!170739 () Bool)

(assert (=> b!141941 m!170739))

(declare-fun m!170741 () Bool)

(assert (=> b!141949 m!170741))

(declare-fun m!170743 () Bool)

(assert (=> b!141943 m!170743))

(declare-fun m!170745 () Bool)

(assert (=> bm!15732 m!170745))

(declare-fun m!170747 () Bool)

(assert (=> d!44841 m!170747))

(declare-fun m!170749 () Bool)

(assert (=> d!44841 m!170749))

(assert (=> b!140556 d!44841))

(assert (=> b!141039 d!43605))

(declare-fun d!44843 () Bool)

(declare-fun e!92499 () Bool)

(assert (=> d!44843 e!92499))

(declare-fun res!67701 () Bool)

(assert (=> d!44843 (=> res!67701 e!92499)))

(declare-fun lt!74443 () Bool)

(assert (=> d!44843 (= res!67701 (not lt!74443))))

(declare-fun lt!74446 () Bool)

(assert (=> d!44843 (= lt!74443 lt!74446)))

(declare-fun lt!74444 () Unit!4395)

(declare-fun e!92498 () Unit!4395)

(assert (=> d!44843 (= lt!74444 e!92498)))

(declare-fun c!26774 () Bool)

(assert (=> d!44843 (= c!26774 lt!74446)))

(assert (=> d!44843 (= lt!74446 (containsKey!179 (toList!889 lt!73826) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!44843 (= (contains!921 lt!73826 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) lt!74443)))

(declare-fun b!141951 () Bool)

(declare-fun lt!74445 () Unit!4395)

(assert (=> b!141951 (= e!92498 lt!74445)))

(assert (=> b!141951 (= lt!74445 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73826) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!141951 (isDefined!129 (getValueByKey!175 (toList!889 lt!73826) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!141952 () Bool)

(declare-fun Unit!4488 () Unit!4395)

(assert (=> b!141952 (= e!92498 Unit!4488)))

(declare-fun b!141953 () Bool)

(assert (=> b!141953 (= e!92499 (isDefined!129 (getValueByKey!175 (toList!889 lt!73826) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!44843 c!26774) b!141951))

(assert (= (and d!44843 (not c!26774)) b!141952))

(assert (= (and d!44843 (not res!67701)) b!141953))

(assert (=> d!44843 m!168455))

(declare-fun m!170751 () Bool)

(assert (=> d!44843 m!170751))

(assert (=> b!141951 m!168455))

(declare-fun m!170753 () Bool)

(assert (=> b!141951 m!170753))

(assert (=> b!141951 m!168455))

(assert (=> b!141951 m!170433))

(assert (=> b!141951 m!170433))

(declare-fun m!170755 () Bool)

(assert (=> b!141951 m!170755))

(assert (=> b!141953 m!168455))

(assert (=> b!141953 m!170433))

(assert (=> b!141953 m!170433))

(assert (=> b!141953 m!170755))

(assert (=> b!140707 d!44843))

(declare-fun d!44845 () Bool)

(assert (=> d!44845 (= (apply!120 lt!73593 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73593) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5978 () Bool)

(assert (= bs!5978 d!44845))

(assert (=> bs!5978 m!166967))

(assert (=> bs!5978 m!169861))

(assert (=> bs!5978 m!169861))

(declare-fun m!170757 () Bool)

(assert (=> bs!5978 m!170757))

(assert (=> b!140261 d!44845))

(assert (=> b!140261 d!43651))

(declare-fun d!44847 () Bool)

(assert (=> d!44847 (= (get!1537 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!140344 d!44847))

(assert (=> d!43923 d!43661))

(declare-fun d!44849 () Bool)

(declare-fun lt!74447 () Bool)

(assert (=> d!44849 (= lt!74447 (select (content!137 (t!6360 (toList!889 lt!73378))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!92500 () Bool)

(assert (=> d!44849 (= lt!74447 e!92500)))

(declare-fun res!67703 () Bool)

(assert (=> d!44849 (=> (not res!67703) (not e!92500))))

(assert (=> d!44849 (= res!67703 ((_ is Cons!1760) (t!6360 (toList!889 lt!73378))))))

(assert (=> d!44849 (= (contains!923 (t!6360 (toList!889 lt!73378)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!74447)))

(declare-fun b!141954 () Bool)

(declare-fun e!92501 () Bool)

(assert (=> b!141954 (= e!92500 e!92501)))

(declare-fun res!67702 () Bool)

(assert (=> b!141954 (=> res!67702 e!92501)))

(assert (=> b!141954 (= res!67702 (= (h!2367 (t!6360 (toList!889 lt!73378))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!141955 () Bool)

(assert (=> b!141955 (= e!92501 (contains!923 (t!6360 (t!6360 (toList!889 lt!73378))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!44849 res!67703) b!141954))

(assert (= (and b!141954 (not res!67702)) b!141955))

(declare-fun m!170759 () Bool)

(assert (=> d!44849 m!170759))

(declare-fun m!170761 () Bool)

(assert (=> d!44849 m!170761))

(declare-fun m!170763 () Bool)

(assert (=> b!141955 m!170763))

(assert (=> b!140881 d!44849))

(declare-fun b!141958 () Bool)

(declare-fun e!92503 () Option!181)

(assert (=> b!141958 (= e!92503 (getValueByKey!175 (t!6360 (toList!889 lt!73995)) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun b!141957 () Bool)

(declare-fun e!92502 () Option!181)

(assert (=> b!141957 (= e!92502 e!92503)))

(declare-fun c!26776 () Bool)

(assert (=> b!141957 (= c!26776 (and ((_ is Cons!1760) (toList!889 lt!73995)) (not (= (_1!1352 (h!2367 (toList!889 lt!73995))) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))))

(declare-fun b!141959 () Bool)

(assert (=> b!141959 (= e!92503 None!179)))

(declare-fun b!141956 () Bool)

(assert (=> b!141956 (= e!92502 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73995)))))))

(declare-fun c!26775 () Bool)

(declare-fun d!44851 () Bool)

(assert (=> d!44851 (= c!26775 (and ((_ is Cons!1760) (toList!889 lt!73995)) (= (_1!1352 (h!2367 (toList!889 lt!73995))) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(assert (=> d!44851 (= (getValueByKey!175 (toList!889 lt!73995) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) e!92502)))

(assert (= (and d!44851 c!26775) b!141956))

(assert (= (and d!44851 (not c!26775)) b!141957))

(assert (= (and b!141957 c!26776) b!141958))

(assert (= (and b!141957 (not c!26776)) b!141959))

(declare-fun m!170765 () Bool)

(assert (=> b!141958 m!170765))

(assert (=> b!140910 d!44851))

(declare-fun b!141960 () Bool)

(declare-fun res!67705 () Bool)

(declare-fun e!92508 () Bool)

(assert (=> b!141960 (=> (not res!67705) (not e!92508))))

(declare-fun lt!74450 () ListLongMap!1747)

(assert (=> b!141960 (= res!67705 (not (contains!921 lt!74450 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!141961 () Bool)

(assert (=> b!141961 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> b!141961 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 (_2!1353 lt!73223)))))))

(declare-fun e!92504 () Bool)

(assert (=> b!141961 (= e!92504 (= (apply!120 lt!74450 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73223)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!141962 () Bool)

(declare-fun e!92510 () ListLongMap!1747)

(declare-fun e!92507 () ListLongMap!1747)

(assert (=> b!141962 (= e!92510 e!92507)))

(declare-fun c!26779 () Bool)

(assert (=> b!141962 (= c!26779 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!141963 () Bool)

(declare-fun e!92505 () Bool)

(assert (=> b!141963 (= e!92505 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(assert (=> b!141963 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!44853 () Bool)

(assert (=> d!44853 e!92508))

(declare-fun res!67707 () Bool)

(assert (=> d!44853 (=> (not res!67707) (not e!92508))))

(assert (=> d!44853 (= res!67707 (not (contains!921 lt!74450 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44853 (= lt!74450 e!92510)))

(declare-fun c!26780 () Bool)

(assert (=> d!44853 (= c!26780 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!44853 (validMask!0 (mask!7280 (_2!1353 lt!73223)))))

(assert (=> d!44853 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73223))) lt!74450)))

(declare-fun b!141964 () Bool)

(declare-fun e!92506 () Bool)

(declare-fun e!92509 () Bool)

(assert (=> b!141964 (= e!92506 e!92509)))

(declare-fun c!26777 () Bool)

(assert (=> b!141964 (= c!26777 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(declare-fun b!141965 () Bool)

(assert (=> b!141965 (= e!92509 (= lt!74450 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 (_2!1353 lt!73223)))))))

(declare-fun b!141966 () Bool)

(assert (=> b!141966 (= e!92506 e!92504)))

(assert (=> b!141966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(declare-fun res!67706 () Bool)

(assert (=> b!141966 (= res!67706 (contains!921 lt!74450 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(assert (=> b!141966 (=> (not res!67706) (not e!92504))))

(declare-fun b!141967 () Bool)

(declare-fun call!15738 () ListLongMap!1747)

(assert (=> b!141967 (= e!92507 call!15738)))

(declare-fun bm!15735 () Bool)

(assert (=> bm!15735 (= call!15738 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73223)) (_values!2923 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223)) (extraKeys!2695 (_2!1353 lt!73223)) (zeroValue!2790 (_2!1353 lt!73223)) (minValue!2790 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 (_2!1353 lt!73223))))))

(declare-fun b!141968 () Bool)

(assert (=> b!141968 (= e!92510 (ListLongMap!1748 Nil!1761))))

(declare-fun b!141969 () Bool)

(declare-fun lt!74448 () Unit!4395)

(declare-fun lt!74454 () Unit!4395)

(assert (=> b!141969 (= lt!74448 lt!74454)))

(declare-fun lt!74451 () V!3555)

(declare-fun lt!74453 () (_ BitVec 64))

(declare-fun lt!74452 () (_ BitVec 64))

(declare-fun lt!74449 () ListLongMap!1747)

(assert (=> b!141969 (not (contains!921 (+!174 lt!74449 (tuple2!2685 lt!74453 lt!74451)) lt!74452))))

(assert (=> b!141969 (= lt!74454 (addStillNotContains!66 lt!74449 lt!74453 lt!74451 lt!74452))))

(assert (=> b!141969 (= lt!74452 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!141969 (= lt!74451 (get!1535 (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73223)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!141969 (= lt!74453 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))

(assert (=> b!141969 (= lt!74449 call!15738)))

(assert (=> b!141969 (= e!92507 (+!174 call!15738 (tuple2!2685 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73223)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!141970 () Bool)

(assert (=> b!141970 (= e!92508 e!92506)))

(declare-fun c!26778 () Bool)

(assert (=> b!141970 (= c!26778 e!92505)))

(declare-fun res!67704 () Bool)

(assert (=> b!141970 (=> (not res!67704) (not e!92505))))

(assert (=> b!141970 (= res!67704 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(declare-fun b!141971 () Bool)

(assert (=> b!141971 (= e!92509 (isEmpty!423 lt!74450))))

(assert (= (and d!44853 c!26780) b!141968))

(assert (= (and d!44853 (not c!26780)) b!141962))

(assert (= (and b!141962 c!26779) b!141969))

(assert (= (and b!141962 (not c!26779)) b!141967))

(assert (= (or b!141969 b!141967) bm!15735))

(assert (= (and d!44853 res!67707) b!141960))

(assert (= (and b!141960 res!67705) b!141970))

(assert (= (and b!141970 res!67704) b!141963))

(assert (= (and b!141970 c!26778) b!141966))

(assert (= (and b!141970 (not c!26778)) b!141964))

(assert (= (and b!141966 res!67706) b!141961))

(assert (= (and b!141964 c!26777) b!141965))

(assert (= (and b!141964 (not c!26777)) b!141971))

(declare-fun b_lambda!6397 () Bool)

(assert (=> (not b_lambda!6397) (not b!141961)))

(assert (=> b!141961 t!6370))

(declare-fun b_and!8889 () Bool)

(assert (= b_and!8885 (and (=> t!6370 result!4207) b_and!8889)))

(assert (=> b!141961 t!6372))

(declare-fun b_and!8891 () Bool)

(assert (= b_and!8887 (and (=> t!6372 result!4209) b_and!8891)))

(declare-fun b_lambda!6399 () Bool)

(assert (=> (not b_lambda!6399) (not b!141969)))

(assert (=> b!141969 t!6370))

(declare-fun b_and!8893 () Bool)

(assert (= b_and!8889 (and (=> t!6370 result!4207) b_and!8893)))

(assert (=> b!141969 t!6372))

(declare-fun b_and!8895 () Bool)

(assert (= b_and!8891 (and (=> t!6372 result!4209) b_and!8895)))

(declare-fun m!170767 () Bool)

(assert (=> b!141965 m!170767))

(assert (=> b!141963 m!167711))

(assert (=> b!141963 m!167711))

(assert (=> b!141963 m!167715))

(declare-fun m!170769 () Bool)

(assert (=> b!141969 m!170769))

(declare-fun m!170771 () Bool)

(assert (=> b!141969 m!170771))

(assert (=> b!141969 m!167711))

(declare-fun m!170773 () Bool)

(assert (=> b!141969 m!170773))

(declare-fun m!170775 () Bool)

(assert (=> b!141969 m!170775))

(assert (=> b!141969 m!168781))

(assert (=> b!141969 m!168783))

(assert (=> b!141969 m!168783))

(assert (=> b!141969 m!168781))

(assert (=> b!141969 m!168785))

(assert (=> b!141969 m!170769))

(assert (=> b!141966 m!167711))

(assert (=> b!141966 m!167711))

(declare-fun m!170777 () Bool)

(assert (=> b!141966 m!170777))

(assert (=> b!141962 m!167711))

(assert (=> b!141962 m!167711))

(assert (=> b!141962 m!167715))

(assert (=> b!141961 m!167711))

(assert (=> b!141961 m!167711))

(declare-fun m!170779 () Bool)

(assert (=> b!141961 m!170779))

(assert (=> b!141961 m!168781))

(assert (=> b!141961 m!168783))

(assert (=> b!141961 m!168783))

(assert (=> b!141961 m!168781))

(assert (=> b!141961 m!168785))

(declare-fun m!170781 () Bool)

(assert (=> b!141971 m!170781))

(declare-fun m!170783 () Bool)

(assert (=> d!44853 m!170783))

(assert (=> d!44853 m!168649))

(declare-fun m!170785 () Bool)

(assert (=> b!141960 m!170785))

(assert (=> bm!15735 m!170767))

(assert (=> bm!15645 d!44853))

(declare-fun d!44855 () Bool)

(declare-fun lt!74455 () Bool)

(assert (=> d!44855 (= lt!74455 (select (content!137 (toList!889 lt!73578)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun e!92511 () Bool)

(assert (=> d!44855 (= lt!74455 e!92511)))

(declare-fun res!67709 () Bool)

(assert (=> d!44855 (=> (not res!67709) (not e!92511))))

(assert (=> d!44855 (= res!67709 ((_ is Cons!1760) (toList!889 lt!73578)))))

(assert (=> d!44855 (= (contains!923 (toList!889 lt!73578) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74455)))

(declare-fun b!141972 () Bool)

(declare-fun e!92512 () Bool)

(assert (=> b!141972 (= e!92511 e!92512)))

(declare-fun res!67708 () Bool)

(assert (=> b!141972 (=> res!67708 e!92512)))

(assert (=> b!141972 (= res!67708 (= (h!2367 (toList!889 lt!73578)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!141973 () Bool)

(assert (=> b!141973 (= e!92512 (contains!923 (t!6360 (toList!889 lt!73578)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44855 res!67709) b!141972))

(assert (= (and b!141972 (not res!67708)) b!141973))

(declare-fun m!170787 () Bool)

(assert (=> d!44855 m!170787))

(declare-fun m!170789 () Bool)

(assert (=> d!44855 m!170789))

(declare-fun m!170791 () Bool)

(assert (=> b!141973 m!170791))

(assert (=> b!140243 d!44855))

(declare-fun d!44857 () Bool)

(declare-fun e!92514 () Bool)

(assert (=> d!44857 e!92514))

(declare-fun res!67710 () Bool)

(assert (=> d!44857 (=> res!67710 e!92514)))

(declare-fun lt!74456 () Bool)

(assert (=> d!44857 (= res!67710 (not lt!74456))))

(declare-fun lt!74459 () Bool)

(assert (=> d!44857 (= lt!74456 lt!74459)))

(declare-fun lt!74457 () Unit!4395)

(declare-fun e!92513 () Unit!4395)

(assert (=> d!44857 (= lt!74457 e!92513)))

(declare-fun c!26781 () Bool)

(assert (=> d!44857 (= c!26781 lt!74459)))

(assert (=> d!44857 (= lt!74459 (containsKey!179 (toList!889 lt!73971) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44857 (= (contains!921 lt!73971 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74456)))

(declare-fun b!141974 () Bool)

(declare-fun lt!74458 () Unit!4395)

(assert (=> b!141974 (= e!92513 lt!74458)))

(assert (=> b!141974 (= lt!74458 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73971) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!141974 (isDefined!129 (getValueByKey!175 (toList!889 lt!73971) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!141975 () Bool)

(declare-fun Unit!4489 () Unit!4395)

(assert (=> b!141975 (= e!92513 Unit!4489)))

(declare-fun b!141976 () Bool)

(assert (=> b!141976 (= e!92514 (isDefined!129 (getValueByKey!175 (toList!889 lt!73971) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44857 c!26781) b!141974))

(assert (= (and d!44857 (not c!26781)) b!141975))

(assert (= (and d!44857 (not res!67710)) b!141976))

(declare-fun m!170793 () Bool)

(assert (=> d!44857 m!170793))

(declare-fun m!170795 () Bool)

(assert (=> b!141974 m!170795))

(declare-fun m!170797 () Bool)

(assert (=> b!141974 m!170797))

(assert (=> b!141974 m!170797))

(declare-fun m!170799 () Bool)

(assert (=> b!141974 m!170799))

(assert (=> b!141976 m!170797))

(assert (=> b!141976 m!170797))

(assert (=> b!141976 m!170799))

(assert (=> b!140888 d!44857))

(assert (=> bm!15628 d!44605))

(declare-fun e!92516 () Option!181)

(declare-fun b!141979 () Bool)

(assert (=> b!141979 (= e!92516 (getValueByKey!175 (t!6360 (t!6360 (toList!889 call!15504))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!141978 () Bool)

(declare-fun e!92515 () Option!181)

(assert (=> b!141978 (= e!92515 e!92516)))

(declare-fun c!26783 () Bool)

(assert (=> b!141978 (= c!26783 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15504))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15504)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!141980 () Bool)

(assert (=> b!141980 (= e!92516 None!179)))

(declare-fun b!141977 () Bool)

(assert (=> b!141977 (= e!92515 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 call!15504))))))))

(declare-fun c!26782 () Bool)

(declare-fun d!44859 () Bool)

(assert (=> d!44859 (= c!26782 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15504))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15504)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44859 (= (getValueByKey!175 (t!6360 (toList!889 call!15504)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92515)))

(assert (= (and d!44859 c!26782) b!141977))

(assert (= (and d!44859 (not c!26782)) b!141978))

(assert (= (and b!141978 c!26783) b!141979))

(assert (= (and b!141978 (not c!26783)) b!141980))

(assert (=> b!141979 m!166733))

(declare-fun m!170801 () Bool)

(assert (=> b!141979 m!170801))

(assert (=> b!140341 d!44859))

(declare-fun d!44861 () Bool)

(declare-fun e!92517 () Bool)

(assert (=> d!44861 e!92517))

(declare-fun res!67712 () Bool)

(assert (=> d!44861 (=> (not res!67712) (not e!92517))))

(declare-fun lt!74460 () List!1764)

(assert (=> d!44861 (= res!67712 (isStrictlySorted!320 lt!74460))))

(declare-fun e!92519 () List!1764)

(assert (=> d!44861 (= lt!74460 e!92519)))

(declare-fun c!26784 () Bool)

(assert (=> d!44861 (= c!26784 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15447))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 call!15447)))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44861 (isStrictlySorted!320 (t!6360 (toList!889 call!15447)))))

(assert (=> d!44861 (= (insertStrictlySorted!93 (t!6360 (toList!889 call!15447)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74460)))

(declare-fun b!141981 () Bool)

(assert (=> b!141981 (= e!92517 (contains!923 lt!74460 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun bm!15736 () Bool)

(declare-fun e!92520 () List!1764)

(declare-fun call!15739 () List!1764)

(assert (=> bm!15736 (= call!15739 ($colon$colon!93 e!92520 (ite c!26784 (h!2367 (t!6360 (toList!889 call!15447))) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26787 () Bool)

(assert (=> bm!15736 (= c!26787 c!26784)))

(declare-fun b!141982 () Bool)

(assert (=> b!141982 (= e!92519 call!15739)))

(declare-fun b!141983 () Bool)

(assert (=> b!141983 (= e!92520 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 call!15447))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141984 () Bool)

(declare-fun e!92521 () List!1764)

(declare-fun call!15740 () List!1764)

(assert (=> b!141984 (= e!92521 call!15740)))

(declare-fun bm!15737 () Bool)

(assert (=> bm!15737 (= call!15740 call!15739)))

(declare-fun b!141985 () Bool)

(declare-fun e!92518 () List!1764)

(declare-fun call!15741 () List!1764)

(assert (=> b!141985 (= e!92518 call!15741)))

(declare-fun b!141986 () Bool)

(declare-fun c!26786 () Bool)

(assert (=> b!141986 (= c!26786 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15447))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 call!15447)))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!141986 (= e!92521 e!92518)))

(declare-fun b!141987 () Bool)

(assert (=> b!141987 (= e!92519 e!92521)))

(declare-fun c!26785 () Bool)

(assert (=> b!141987 (= c!26785 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15447))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15447)))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!141988 () Bool)

(assert (=> b!141988 (= e!92520 (ite c!26785 (t!6360 (t!6360 (toList!889 call!15447))) (ite c!26786 (Cons!1760 (h!2367 (t!6360 (toList!889 call!15447))) (t!6360 (t!6360 (toList!889 call!15447)))) Nil!1761)))))

(declare-fun bm!15738 () Bool)

(assert (=> bm!15738 (= call!15741 call!15740)))

(declare-fun b!141989 () Bool)

(declare-fun res!67711 () Bool)

(assert (=> b!141989 (=> (not res!67711) (not e!92517))))

(assert (=> b!141989 (= res!67711 (containsKey!179 lt!74460 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!141990 () Bool)

(assert (=> b!141990 (= e!92518 call!15741)))

(assert (= (and d!44861 c!26784) b!141982))

(assert (= (and d!44861 (not c!26784)) b!141987))

(assert (= (and b!141987 c!26785) b!141984))

(assert (= (and b!141987 (not c!26785)) b!141986))

(assert (= (and b!141986 c!26786) b!141990))

(assert (= (and b!141986 (not c!26786)) b!141985))

(assert (= (or b!141990 b!141985) bm!15738))

(assert (= (or b!141984 bm!15738) bm!15737))

(assert (= (or b!141982 bm!15737) bm!15736))

(assert (= (and bm!15736 c!26787) b!141983))

(assert (= (and bm!15736 (not c!26787)) b!141988))

(assert (= (and d!44861 res!67712) b!141989))

(assert (= (and b!141989 res!67711) b!141981))

(declare-fun m!170803 () Bool)

(assert (=> b!141981 m!170803))

(declare-fun m!170805 () Bool)

(assert (=> b!141989 m!170805))

(declare-fun m!170807 () Bool)

(assert (=> b!141983 m!170807))

(declare-fun m!170809 () Bool)

(assert (=> bm!15736 m!170809))

(declare-fun m!170811 () Bool)

(assert (=> d!44861 m!170811))

(declare-fun m!170813 () Bool)

(assert (=> d!44861 m!170813))

(assert (=> b!140474 d!44861))

(declare-fun b!141993 () Bool)

(declare-fun e!92523 () Option!181)

(assert (=> b!141993 (= e!92523 (getValueByKey!175 (t!6360 (toList!889 lt!73726)) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun b!141992 () Bool)

(declare-fun e!92522 () Option!181)

(assert (=> b!141992 (= e!92522 e!92523)))

(declare-fun c!26789 () Bool)

(assert (=> b!141992 (= c!26789 (and ((_ is Cons!1760) (toList!889 lt!73726)) (not (= (_1!1352 (h!2367 (toList!889 lt!73726))) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))))

(declare-fun b!141994 () Bool)

(assert (=> b!141994 (= e!92523 None!179)))

(declare-fun b!141991 () Bool)

(assert (=> b!141991 (= e!92522 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73726)))))))

(declare-fun d!44863 () Bool)

(declare-fun c!26788 () Bool)

(assert (=> d!44863 (= c!26788 (and ((_ is Cons!1760) (toList!889 lt!73726)) (= (_1!1352 (h!2367 (toList!889 lt!73726))) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(assert (=> d!44863 (= (getValueByKey!175 (toList!889 lt!73726) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) e!92522)))

(assert (= (and d!44863 c!26788) b!141991))

(assert (= (and d!44863 (not c!26788)) b!141992))

(assert (= (and b!141992 c!26789) b!141993))

(assert (= (and b!141992 (not c!26789)) b!141994))

(declare-fun m!170815 () Bool)

(assert (=> b!141993 m!170815))

(assert (=> b!140572 d!44863))

(declare-fun d!44865 () Bool)

(assert (=> d!44865 (= (get!1536 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2315 (ite (or c!26153 c!26142) (_values!2923 newMap!16) lt!73219)) #b00000000000000000000000000000000)))))

(assert (=> b!140534 d!44865))

(declare-fun b!141997 () Bool)

(declare-fun e!92525 () Option!181)

(assert (=> b!141997 (= e!92525 (getValueByKey!175 (t!6360 (toList!889 lt!73990)) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun b!141996 () Bool)

(declare-fun e!92524 () Option!181)

(assert (=> b!141996 (= e!92524 e!92525)))

(declare-fun c!26791 () Bool)

(assert (=> b!141996 (= c!26791 (and ((_ is Cons!1760) (toList!889 lt!73990)) (not (= (_1!1352 (h!2367 (toList!889 lt!73990))) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))))

(declare-fun b!141998 () Bool)

(assert (=> b!141998 (= e!92525 None!179)))

(declare-fun b!141995 () Bool)

(assert (=> b!141995 (= e!92524 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73990)))))))

(declare-fun d!44867 () Bool)

(declare-fun c!26790 () Bool)

(assert (=> d!44867 (= c!26790 (and ((_ is Cons!1760) (toList!889 lt!73990)) (= (_1!1352 (h!2367 (toList!889 lt!73990))) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(assert (=> d!44867 (= (getValueByKey!175 (toList!889 lt!73990) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) e!92524)))

(assert (= (and d!44867 c!26790) b!141995))

(assert (= (and d!44867 (not c!26790)) b!141996))

(assert (= (and b!141996 c!26791) b!141997))

(assert (= (and b!141996 (not c!26791)) b!141998))

(declare-fun m!170817 () Bool)

(assert (=> b!141997 m!170817))

(assert (=> b!140907 d!44867))

(declare-fun d!44869 () Bool)

(assert (=> d!44869 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140444 d!44869))

(declare-fun d!44871 () Bool)

(declare-fun lt!74461 () Bool)

(assert (=> d!44871 (= lt!74461 (select (content!137 (toList!889 lt!73804)) (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92526 () Bool)

(assert (=> d!44871 (= lt!74461 e!92526)))

(declare-fun res!67714 () Bool)

(assert (=> d!44871 (=> (not res!67714) (not e!92526))))

(assert (=> d!44871 (= res!67714 ((_ is Cons!1760) (toList!889 lt!73804)))))

(assert (=> d!44871 (= (contains!923 (toList!889 lt!73804) (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74461)))

(declare-fun b!141999 () Bool)

(declare-fun e!92527 () Bool)

(assert (=> b!141999 (= e!92526 e!92527)))

(declare-fun res!67713 () Bool)

(assert (=> b!141999 (=> res!67713 e!92527)))

(assert (=> b!141999 (= res!67713 (= (h!2367 (toList!889 lt!73804)) (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142000 () Bool)

(assert (=> b!142000 (= e!92527 (contains!923 (t!6360 (toList!889 lt!73804)) (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!44871 res!67714) b!141999))

(assert (= (and b!141999 (not res!67713)) b!142000))

(declare-fun m!170819 () Bool)

(assert (=> d!44871 m!170819))

(declare-fun m!170821 () Bool)

(assert (=> d!44871 m!170821))

(declare-fun m!170823 () Bool)

(assert (=> b!142000 m!170823))

(assert (=> b!140645 d!44871))

(assert (=> b!141065 d!44869))

(declare-fun d!44873 () Bool)

(assert (=> d!44873 (= ($colon$colon!93 e!91507 (ite c!26272 (h!2367 (toList!889 lt!73146)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (Cons!1760 (ite c!26272 (h!2367 (toList!889 lt!73146)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!91507))))

(assert (=> bm!15584 d!44873))

(assert (=> d!43853 d!43661))

(declare-fun d!44875 () Bool)

(assert (not d!44875))

(assert (=> b!140283 d!44875))

(assert (=> d!43753 d!43751))

(declare-fun d!44877 () Bool)

(assert (=> d!44877 (= (getValueByKey!175 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (Some!180 (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44877 true))

(declare-fun _$22!496 () Unit!4395)

(assert (=> d!44877 (= (choose!873 lt!73471 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) _$22!496)))

(declare-fun bs!5979 () Bool)

(assert (= bs!5979 d!44877))

(assert (=> bs!5979 m!167295))

(assert (=> d!43753 d!44877))

(declare-fun d!44879 () Bool)

(declare-fun res!67715 () Bool)

(declare-fun e!92528 () Bool)

(assert (=> d!44879 (=> res!67715 e!92528)))

(assert (=> d!44879 (= res!67715 (or ((_ is Nil!1761) lt!73471) ((_ is Nil!1761) (t!6360 lt!73471))))))

(assert (=> d!44879 (= (isStrictlySorted!320 lt!73471) e!92528)))

(declare-fun b!142001 () Bool)

(declare-fun e!92529 () Bool)

(assert (=> b!142001 (= e!92528 e!92529)))

(declare-fun res!67716 () Bool)

(assert (=> b!142001 (=> (not res!67716) (not e!92529))))

(assert (=> b!142001 (= res!67716 (bvslt (_1!1352 (h!2367 lt!73471)) (_1!1352 (h!2367 (t!6360 lt!73471)))))))

(declare-fun b!142002 () Bool)

(assert (=> b!142002 (= e!92529 (isStrictlySorted!320 (t!6360 lt!73471)))))

(assert (= (and d!44879 (not res!67715)) b!142001))

(assert (= (and b!142001 res!67716) b!142002))

(declare-fun m!170825 () Bool)

(assert (=> b!142002 m!170825))

(assert (=> d!43753 d!44879))

(assert (=> d!43977 d!43653))

(assert (=> d!43977 d!43655))

(declare-fun d!44881 () Bool)

(assert (=> d!44881 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142))))

(assert (=> d!44881 true))

(declare-fun _$12!416 () Unit!4395)

(assert (=> d!44881 (= (choose!868 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!73142) _$12!416)))

(declare-fun bs!5980 () Bool)

(assert (= bs!5980 d!44881))

(assert (=> bs!5980 m!167497))

(assert (=> bs!5980 m!167497))

(assert (=> bs!5980 m!167499))

(assert (=> d!43977 d!44881))

(declare-fun d!44883 () Bool)

(declare-fun res!67717 () Bool)

(declare-fun e!92530 () Bool)

(assert (=> d!44883 (=> res!67717 e!92530)))

(assert (=> d!44883 (= res!67717 (or ((_ is Nil!1761) (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Nil!1761) (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(assert (=> d!44883 (= (isStrictlySorted!320 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!92530)))

(declare-fun b!142003 () Bool)

(declare-fun e!92531 () Bool)

(assert (=> b!142003 (= e!92530 e!92531)))

(declare-fun res!67718 () Bool)

(assert (=> b!142003 (=> (not res!67718) (not e!92531))))

(assert (=> b!142003 (= res!67718 (bvslt (_1!1352 (h!2367 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))))

(declare-fun b!142004 () Bool)

(assert (=> b!142004 (= e!92531 (isStrictlySorted!320 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (= (and d!44883 (not res!67717)) b!142003))

(assert (= (and b!142003 res!67718) b!142004))

(declare-fun m!170827 () Bool)

(assert (=> b!142004 m!170827))

(assert (=> d!43977 d!44883))

(declare-fun d!44885 () Bool)

(declare-fun res!67719 () Bool)

(declare-fun e!92532 () Bool)

(assert (=> d!44885 (=> res!67719 e!92532)))

(assert (=> d!44885 (= res!67719 (and ((_ is Cons!1760) (toList!889 lt!73535)) (= (_1!1352 (h!2367 (toList!889 lt!73535))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44885 (= (containsKey!179 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92532)))

(declare-fun b!142005 () Bool)

(declare-fun e!92533 () Bool)

(assert (=> b!142005 (= e!92532 e!92533)))

(declare-fun res!67720 () Bool)

(assert (=> b!142005 (=> (not res!67720) (not e!92533))))

(assert (=> b!142005 (= res!67720 (and (or (not ((_ is Cons!1760) (toList!889 lt!73535))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73535))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) (toList!889 lt!73535)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73535))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142006 () Bool)

(assert (=> b!142006 (= e!92533 (containsKey!179 (t!6360 (toList!889 lt!73535)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44885 (not res!67719)) b!142005))

(assert (= (and b!142005 res!67720) b!142006))

(declare-fun m!170829 () Bool)

(assert (=> b!142006 m!170829))

(assert (=> d!43773 d!44885))

(declare-fun d!44887 () Bool)

(assert (=> d!44887 (arrayContainsKey!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73885 #b00000000000000000000000000000000)))

(declare-fun lt!74462 () Unit!4395)

(assert (=> d!44887 (= lt!74462 (choose!13 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73885 #b00000000000000000000000000000000))))

(assert (=> d!44887 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44887 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73885 #b00000000000000000000000000000000) lt!74462)))

(declare-fun bs!5981 () Bool)

(assert (= bs!5981 d!44887))

(assert (=> bs!5981 m!168635))

(declare-fun m!170831 () Bool)

(assert (=> bs!5981 m!170831))

(assert (=> b!140771 d!44887))

(declare-fun d!44889 () Bool)

(declare-fun res!67721 () Bool)

(declare-fun e!92534 () Bool)

(assert (=> d!44889 (=> res!67721 e!92534)))

(assert (=> d!44889 (= res!67721 (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) lt!73885))))

(assert (=> d!44889 (= (arrayContainsKey!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73885 #b00000000000000000000000000000000) e!92534)))

(declare-fun b!142007 () Bool)

(declare-fun e!92535 () Bool)

(assert (=> b!142007 (= e!92534 e!92535)))

(declare-fun res!67722 () Bool)

(assert (=> b!142007 (=> (not res!67722) (not e!92535))))

(assert (=> b!142007 (= res!67722 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(declare-fun b!142008 () Bool)

(assert (=> b!142008 (= e!92535 (arrayContainsKey!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) lt!73885 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44889 (not res!67721)) b!142007))

(assert (= (and b!142007 res!67722) b!142008))

(assert (=> d!44889 m!168455))

(declare-fun m!170833 () Bool)

(assert (=> b!142008 m!170833))

(assert (=> b!140771 d!44889))

(declare-fun b!142009 () Bool)

(declare-fun e!92536 () SeekEntryResult!289)

(declare-fun e!92538 () SeekEntryResult!289)

(assert (=> b!142009 (= e!92536 e!92538)))

(declare-fun lt!74465 () SeekEntryResult!289)

(declare-fun lt!74464 () (_ BitVec 64))

(assert (=> b!142009 (= lt!74464 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (index!3321 lt!74465)))))

(declare-fun c!26793 () Bool)

(assert (=> b!142009 (= c!26793 (= lt!74464 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!142010 () Bool)

(declare-fun c!26794 () Bool)

(assert (=> b!142010 (= c!26794 (= lt!74464 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92537 () SeekEntryResult!289)

(assert (=> b!142010 (= e!92538 e!92537)))

(declare-fun b!142011 () Bool)

(assert (=> b!142011 (= e!92537 (seekKeyOrZeroReturnVacant!0 (x!16146 lt!74465) (index!3321 lt!74465) (index!3321 lt!74465) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(declare-fun b!142012 () Bool)

(assert (=> b!142012 (= e!92537 (MissingZero!289 (index!3321 lt!74465)))))

(declare-fun d!44891 () Bool)

(declare-fun lt!74463 () SeekEntryResult!289)

(assert (=> d!44891 (and (or ((_ is Undefined!289) lt!74463) (not ((_ is Found!289) lt!74463)) (and (bvsge (index!3320 lt!74463) #b00000000000000000000000000000000) (bvslt (index!3320 lt!74463) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))) (or ((_ is Undefined!289) lt!74463) ((_ is Found!289) lt!74463) (not ((_ is MissingZero!289) lt!74463)) (and (bvsge (index!3319 lt!74463) #b00000000000000000000000000000000) (bvslt (index!3319 lt!74463) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))) (or ((_ is Undefined!289) lt!74463) ((_ is Found!289) lt!74463) ((_ is MissingZero!289) lt!74463) (not ((_ is MissingVacant!289) lt!74463)) (and (bvsge (index!3322 lt!74463) #b00000000000000000000000000000000) (bvslt (index!3322 lt!74463) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))) (or ((_ is Undefined!289) lt!74463) (ite ((_ is Found!289) lt!74463) (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (index!3320 lt!74463)) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!289) lt!74463) (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (index!3319 lt!74463)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!289) lt!74463) (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (index!3322 lt!74463)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44891 (= lt!74463 e!92536)))

(declare-fun c!26792 () Bool)

(assert (=> d!44891 (= c!26792 (and ((_ is Intermediate!289) lt!74465) (undefined!1101 lt!74465)))))

(assert (=> d!44891 (= lt!74465 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)))))

(assert (=> d!44891 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!44891 (= (seekEntryOrOpen!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) #b00000000000000000000000000000000) (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16)) lt!74463)))

(declare-fun b!142013 () Bool)

(assert (=> b!142013 (= e!92538 (Found!289 (index!3321 lt!74465)))))

(declare-fun b!142014 () Bool)

(assert (=> b!142014 (= e!92536 Undefined!289)))

(assert (= (and d!44891 c!26792) b!142014))

(assert (= (and d!44891 (not c!26792)) b!142009))

(assert (= (and b!142009 c!26793) b!142013))

(assert (= (and b!142009 (not c!26793)) b!142010))

(assert (= (and b!142010 c!26794) b!142012))

(assert (= (and b!142010 (not c!26794)) b!142011))

(declare-fun m!170835 () Bool)

(assert (=> b!142009 m!170835))

(assert (=> b!142011 m!168455))

(declare-fun m!170837 () Bool)

(assert (=> b!142011 m!170837))

(assert (=> d!44891 m!168455))

(declare-fun m!170839 () Bool)

(assert (=> d!44891 m!170839))

(declare-fun m!170841 () Bool)

(assert (=> d!44891 m!170841))

(assert (=> d!44891 m!166961))

(assert (=> d!44891 m!170839))

(assert (=> d!44891 m!168455))

(declare-fun m!170843 () Bool)

(assert (=> d!44891 m!170843))

(declare-fun m!170845 () Bool)

(assert (=> d!44891 m!170845))

(declare-fun m!170847 () Bool)

(assert (=> d!44891 m!170847))

(assert (=> b!140771 d!44891))

(declare-fun d!44893 () Bool)

(assert (=> d!44893 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun lt!74466 () Unit!4395)

(assert (=> d!44893 (= lt!74466 (choose!868 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!92539 () Bool)

(assert (=> d!44893 e!92539))

(declare-fun res!67723 () Bool)

(assert (=> d!44893 (=> (not res!67723) (not e!92539))))

(assert (=> d!44893 (= res!67723 (isStrictlySorted!320 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))))))

(assert (=> d!44893 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!74466)))

(declare-fun b!142015 () Bool)

(assert (=> b!142015 (= e!92539 (containsKey!179 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!44893 res!67723) b!142015))

(assert (=> d!44893 m!166733))

(assert (=> d!44893 m!168547))

(assert (=> d!44893 m!168547))

(assert (=> d!44893 m!168549))

(assert (=> d!44893 m!166733))

(declare-fun m!170849 () Bool)

(assert (=> d!44893 m!170849))

(assert (=> d!44893 m!170173))

(assert (=> b!142015 m!166733))

(assert (=> b!142015 m!168543))

(assert (=> b!140718 d!44893))

(assert (=> b!140718 d!44739))

(assert (=> b!140718 d!44741))

(declare-fun d!44895 () Bool)

(assert (=> d!44895 (arrayContainsKey!0 (_keys!4699 (_2!1353 lt!73223)) lt!74038 #b00000000000000000000000000000000)))

(declare-fun lt!74467 () Unit!4395)

(assert (=> d!44895 (= lt!74467 (choose!13 (_keys!4699 (_2!1353 lt!73223)) lt!74038 #b00000000000000000000000000000000))))

(assert (=> d!44895 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!44895 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (_2!1353 lt!73223)) lt!74038 #b00000000000000000000000000000000) lt!74467)))

(declare-fun bs!5982 () Bool)

(assert (= bs!5982 d!44895))

(assert (=> bs!5982 m!169061))

(declare-fun m!170851 () Bool)

(assert (=> bs!5982 m!170851))

(assert (=> b!140982 d!44895))

(declare-fun d!44897 () Bool)

(declare-fun res!67724 () Bool)

(declare-fun e!92540 () Bool)

(assert (=> d!44897 (=> res!67724 e!92540)))

(assert (=> d!44897 (= res!67724 (= (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) lt!74038))))

(assert (=> d!44897 (= (arrayContainsKey!0 (_keys!4699 (_2!1353 lt!73223)) lt!74038 #b00000000000000000000000000000000) e!92540)))

(declare-fun b!142016 () Bool)

(declare-fun e!92541 () Bool)

(assert (=> b!142016 (= e!92540 e!92541)))

(declare-fun res!67725 () Bool)

(assert (=> b!142016 (=> (not res!67725) (not e!92541))))

(assert (=> b!142016 (= res!67725 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(declare-fun b!142017 () Bool)

(assert (=> b!142017 (= e!92541 (arrayContainsKey!0 (_keys!4699 (_2!1353 lt!73223)) lt!74038 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!44897 (not res!67724)) b!142016))

(assert (= (and b!142016 res!67725) b!142017))

(assert (=> d!44897 m!167711))

(declare-fun m!170853 () Bool)

(assert (=> b!142017 m!170853))

(assert (=> b!140982 d!44897))

(declare-fun b!142018 () Bool)

(declare-fun e!92542 () SeekEntryResult!289)

(declare-fun e!92544 () SeekEntryResult!289)

(assert (=> b!142018 (= e!92542 e!92544)))

(declare-fun lt!74469 () (_ BitVec 64))

(declare-fun lt!74470 () SeekEntryResult!289)

(assert (=> b!142018 (= lt!74469 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (index!3321 lt!74470)))))

(declare-fun c!26796 () Bool)

(assert (=> b!142018 (= c!26796 (= lt!74469 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!142019 () Bool)

(declare-fun c!26797 () Bool)

(assert (=> b!142019 (= c!26797 (= lt!74469 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92543 () SeekEntryResult!289)

(assert (=> b!142019 (= e!92544 e!92543)))

(declare-fun b!142020 () Bool)

(assert (=> b!142020 (= e!92543 (seekKeyOrZeroReturnVacant!0 (x!16146 lt!74470) (index!3321 lt!74470) (index!3321 lt!74470) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))))))

(declare-fun b!142021 () Bool)

(assert (=> b!142021 (= e!92543 (MissingZero!289 (index!3321 lt!74470)))))

(declare-fun d!44899 () Bool)

(declare-fun lt!74468 () SeekEntryResult!289)

(assert (=> d!44899 (and (or ((_ is Undefined!289) lt!74468) (not ((_ is Found!289) lt!74468)) (and (bvsge (index!3320 lt!74468) #b00000000000000000000000000000000) (bvslt (index!3320 lt!74468) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))) (or ((_ is Undefined!289) lt!74468) ((_ is Found!289) lt!74468) (not ((_ is MissingZero!289) lt!74468)) (and (bvsge (index!3319 lt!74468) #b00000000000000000000000000000000) (bvslt (index!3319 lt!74468) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))) (or ((_ is Undefined!289) lt!74468) ((_ is Found!289) lt!74468) ((_ is MissingZero!289) lt!74468) (not ((_ is MissingVacant!289) lt!74468)) (and (bvsge (index!3322 lt!74468) #b00000000000000000000000000000000) (bvslt (index!3322 lt!74468) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))) (or ((_ is Undefined!289) lt!74468) (ite ((_ is Found!289) lt!74468) (= (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (index!3320 lt!74468)) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!289) lt!74468) (= (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (index!3319 lt!74468)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!289) lt!74468) (= (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (index!3322 lt!74468)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44899 (= lt!74468 e!92542)))

(declare-fun c!26795 () Bool)

(assert (=> d!44899 (= c!26795 (and ((_ is Intermediate!289) lt!74470) (undefined!1101 lt!74470)))))

(assert (=> d!44899 (= lt!74470 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (mask!7280 (_2!1353 lt!73223))) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))))))

(assert (=> d!44899 (validMask!0 (mask!7280 (_2!1353 lt!73223)))))

(assert (=> d!44899 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (_keys!4699 (_2!1353 lt!73223)) (mask!7280 (_2!1353 lt!73223))) lt!74468)))

(declare-fun b!142022 () Bool)

(assert (=> b!142022 (= e!92544 (Found!289 (index!3321 lt!74470)))))

(declare-fun b!142023 () Bool)

(assert (=> b!142023 (= e!92542 Undefined!289)))

(assert (= (and d!44899 c!26795) b!142023))

(assert (= (and d!44899 (not c!26795)) b!142018))

(assert (= (and b!142018 c!26796) b!142022))

(assert (= (and b!142018 (not c!26796)) b!142019))

(assert (= (and b!142019 c!26797) b!142021))

(assert (= (and b!142019 (not c!26797)) b!142020))

(declare-fun m!170855 () Bool)

(assert (=> b!142018 m!170855))

(assert (=> b!142020 m!167711))

(declare-fun m!170857 () Bool)

(assert (=> b!142020 m!170857))

(assert (=> d!44899 m!167711))

(declare-fun m!170859 () Bool)

(assert (=> d!44899 m!170859))

(declare-fun m!170861 () Bool)

(assert (=> d!44899 m!170861))

(assert (=> d!44899 m!168649))

(assert (=> d!44899 m!170859))

(assert (=> d!44899 m!167711))

(declare-fun m!170863 () Bool)

(assert (=> d!44899 m!170863))

(declare-fun m!170865 () Bool)

(assert (=> d!44899 m!170865))

(declare-fun m!170867 () Bool)

(assert (=> d!44899 m!170867))

(assert (=> b!140982 d!44899))

(declare-fun d!44901 () Bool)

(declare-fun lt!74471 () Bool)

(assert (=> d!44901 (= lt!74471 (select (content!137 lt!73529) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!92545 () Bool)

(assert (=> d!44901 (= lt!74471 e!92545)))

(declare-fun res!67727 () Bool)

(assert (=> d!44901 (=> (not res!67727) (not e!92545))))

(assert (=> d!44901 (= res!67727 ((_ is Cons!1760) lt!73529))))

(assert (=> d!44901 (= (contains!923 lt!73529 (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74471)))

(declare-fun b!142024 () Bool)

(declare-fun e!92546 () Bool)

(assert (=> b!142024 (= e!92545 e!92546)))

(declare-fun res!67726 () Bool)

(assert (=> b!142024 (=> res!67726 e!92546)))

(assert (=> b!142024 (= res!67726 (= (h!2367 lt!73529) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142025 () Bool)

(assert (=> b!142025 (= e!92546 (contains!923 (t!6360 lt!73529) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!44901 res!67727) b!142024))

(assert (= (and b!142024 (not res!67726)) b!142025))

(declare-fun m!170869 () Bool)

(assert (=> d!44901 m!170869))

(declare-fun m!170871 () Bool)

(assert (=> d!44901 m!170871))

(declare-fun m!170873 () Bool)

(assert (=> b!142025 m!170873))

(assert (=> b!140499 d!44901))

(assert (=> b!140686 d!44747))

(assert (=> b!140884 d!44869))

(declare-fun d!44903 () Bool)

(assert (=> d!44903 (not (contains!921 (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631)) lt!73632))))

(declare-fun lt!74472 () Unit!4395)

(assert (=> d!44903 (= lt!74472 (choose!875 lt!73629 lt!73633 lt!73631 lt!73632))))

(declare-fun e!92547 () Bool)

(assert (=> d!44903 e!92547))

(declare-fun res!67728 () Bool)

(assert (=> d!44903 (=> (not res!67728) (not e!92547))))

(assert (=> d!44903 (= res!67728 (not (contains!921 lt!73629 lt!73632)))))

(assert (=> d!44903 (= (addStillNotContains!66 lt!73629 lt!73633 lt!73631 lt!73632) lt!74472)))

(declare-fun b!142026 () Bool)

(assert (=> b!142026 (= e!92547 (not (= lt!73633 lt!73632)))))

(assert (= (and d!44903 res!67728) b!142026))

(assert (=> d!44903 m!167775))

(assert (=> d!44903 m!167775))

(assert (=> d!44903 m!167777))

(declare-fun m!170875 () Bool)

(assert (=> d!44903 m!170875))

(declare-fun m!170877 () Bool)

(assert (=> d!44903 m!170877))

(assert (=> b!140383 d!44903))

(declare-fun d!44905 () Bool)

(declare-fun c!26798 () Bool)

(assert (=> d!44905 (= c!26798 ((_ is ValueCellFull!1122) (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!92548 () V!3555)

(assert (=> d!44905 (= (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92548)))

(declare-fun b!142027 () Bool)

(assert (=> b!142027 (= e!92548 (get!1536 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142028 () Bool)

(assert (=> b!142028 (= e!92548 (get!1537 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44905 c!26798) b!142027))

(assert (= (and d!44905 (not c!26798)) b!142028))

(assert (=> b!142027 m!167783))

(assert (=> b!142027 m!166729))

(declare-fun m!170879 () Bool)

(assert (=> b!142027 m!170879))

(assert (=> b!142028 m!167783))

(assert (=> b!142028 m!166729))

(declare-fun m!170881 () Bool)

(assert (=> b!142028 m!170881))

(assert (=> b!140383 d!44905))

(declare-fun d!44907 () Bool)

(declare-fun e!92549 () Bool)

(assert (=> d!44907 e!92549))

(declare-fun res!67730 () Bool)

(assert (=> d!44907 (=> (not res!67730) (not e!92549))))

(declare-fun lt!74475 () ListLongMap!1747)

(assert (=> d!44907 (= res!67730 (contains!921 lt!74475 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74476 () List!1764)

(assert (=> d!44907 (= lt!74475 (ListLongMap!1748 lt!74476))))

(declare-fun lt!74473 () Unit!4395)

(declare-fun lt!74474 () Unit!4395)

(assert (=> d!44907 (= lt!74473 lt!74474)))

(assert (=> d!44907 (= (getValueByKey!175 lt!74476 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44907 (= lt!74474 (lemmaContainsTupThenGetReturnValue!91 lt!74476 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44907 (= lt!74476 (insertStrictlySorted!93 (toList!889 call!15595) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44907 (= (+!174 call!15595 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74475)))

(declare-fun b!142029 () Bool)

(declare-fun res!67729 () Bool)

(assert (=> b!142029 (=> (not res!67729) (not e!92549))))

(assert (=> b!142029 (= res!67729 (= (getValueByKey!175 (toList!889 lt!74475) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142030 () Bool)

(assert (=> b!142030 (= e!92549 (contains!923 (toList!889 lt!74475) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!44907 res!67730) b!142029))

(assert (= (and b!142029 res!67729) b!142030))

(declare-fun m!170883 () Bool)

(assert (=> d!44907 m!170883))

(declare-fun m!170885 () Bool)

(assert (=> d!44907 m!170885))

(declare-fun m!170887 () Bool)

(assert (=> d!44907 m!170887))

(declare-fun m!170889 () Bool)

(assert (=> d!44907 m!170889))

(declare-fun m!170891 () Bool)

(assert (=> b!142029 m!170891))

(declare-fun m!170893 () Bool)

(assert (=> b!142030 m!170893))

(assert (=> b!140383 d!44907))

(declare-fun d!44909 () Bool)

(declare-fun e!92550 () Bool)

(assert (=> d!44909 e!92550))

(declare-fun res!67732 () Bool)

(assert (=> d!44909 (=> (not res!67732) (not e!92550))))

(declare-fun lt!74479 () ListLongMap!1747)

(assert (=> d!44909 (= res!67732 (contains!921 lt!74479 (_1!1352 (tuple2!2685 lt!73633 lt!73631))))))

(declare-fun lt!74480 () List!1764)

(assert (=> d!44909 (= lt!74479 (ListLongMap!1748 lt!74480))))

(declare-fun lt!74477 () Unit!4395)

(declare-fun lt!74478 () Unit!4395)

(assert (=> d!44909 (= lt!74477 lt!74478)))

(assert (=> d!44909 (= (getValueByKey!175 lt!74480 (_1!1352 (tuple2!2685 lt!73633 lt!73631))) (Some!180 (_2!1352 (tuple2!2685 lt!73633 lt!73631))))))

(assert (=> d!44909 (= lt!74478 (lemmaContainsTupThenGetReturnValue!91 lt!74480 (_1!1352 (tuple2!2685 lt!73633 lt!73631)) (_2!1352 (tuple2!2685 lt!73633 lt!73631))))))

(assert (=> d!44909 (= lt!74480 (insertStrictlySorted!93 (toList!889 lt!73629) (_1!1352 (tuple2!2685 lt!73633 lt!73631)) (_2!1352 (tuple2!2685 lt!73633 lt!73631))))))

(assert (=> d!44909 (= (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631)) lt!74479)))

(declare-fun b!142031 () Bool)

(declare-fun res!67731 () Bool)

(assert (=> b!142031 (=> (not res!67731) (not e!92550))))

(assert (=> b!142031 (= res!67731 (= (getValueByKey!175 (toList!889 lt!74479) (_1!1352 (tuple2!2685 lt!73633 lt!73631))) (Some!180 (_2!1352 (tuple2!2685 lt!73633 lt!73631)))))))

(declare-fun b!142032 () Bool)

(assert (=> b!142032 (= e!92550 (contains!923 (toList!889 lt!74479) (tuple2!2685 lt!73633 lt!73631)))))

(assert (= (and d!44909 res!67732) b!142031))

(assert (= (and b!142031 res!67731) b!142032))

(declare-fun m!170895 () Bool)

(assert (=> d!44909 m!170895))

(declare-fun m!170897 () Bool)

(assert (=> d!44909 m!170897))

(declare-fun m!170899 () Bool)

(assert (=> d!44909 m!170899))

(declare-fun m!170901 () Bool)

(assert (=> d!44909 m!170901))

(declare-fun m!170903 () Bool)

(assert (=> b!142031 m!170903))

(declare-fun m!170905 () Bool)

(assert (=> b!142032 m!170905))

(assert (=> b!140383 d!44909))

(declare-fun d!44911 () Bool)

(declare-fun e!92552 () Bool)

(assert (=> d!44911 e!92552))

(declare-fun res!67733 () Bool)

(assert (=> d!44911 (=> res!67733 e!92552)))

(declare-fun lt!74481 () Bool)

(assert (=> d!44911 (= res!67733 (not lt!74481))))

(declare-fun lt!74484 () Bool)

(assert (=> d!44911 (= lt!74481 lt!74484)))

(declare-fun lt!74482 () Unit!4395)

(declare-fun e!92551 () Unit!4395)

(assert (=> d!44911 (= lt!74482 e!92551)))

(declare-fun c!26799 () Bool)

(assert (=> d!44911 (= c!26799 lt!74484)))

(assert (=> d!44911 (= lt!74484 (containsKey!179 (toList!889 (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631))) lt!73632))))

(assert (=> d!44911 (= (contains!921 (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631)) lt!73632) lt!74481)))

(declare-fun b!142033 () Bool)

(declare-fun lt!74483 () Unit!4395)

(assert (=> b!142033 (= e!92551 lt!74483)))

(assert (=> b!142033 (= lt!74483 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631))) lt!73632))))

(assert (=> b!142033 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631))) lt!73632))))

(declare-fun b!142034 () Bool)

(declare-fun Unit!4490 () Unit!4395)

(assert (=> b!142034 (= e!92551 Unit!4490)))

(declare-fun b!142035 () Bool)

(assert (=> b!142035 (= e!92552 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73629 (tuple2!2685 lt!73633 lt!73631))) lt!73632)))))

(assert (= (and d!44911 c!26799) b!142033))

(assert (= (and d!44911 (not c!26799)) b!142034))

(assert (= (and d!44911 (not res!67733)) b!142035))

(declare-fun m!170907 () Bool)

(assert (=> d!44911 m!170907))

(declare-fun m!170909 () Bool)

(assert (=> b!142033 m!170909))

(declare-fun m!170911 () Bool)

(assert (=> b!142033 m!170911))

(assert (=> b!142033 m!170911))

(declare-fun m!170913 () Bool)

(assert (=> b!142033 m!170913))

(assert (=> b!142035 m!170911))

(assert (=> b!142035 m!170911))

(assert (=> b!142035 m!170913))

(assert (=> b!140383 d!44911))

(declare-fun d!44913 () Bool)

(assert (=> d!44913 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73149) lt!73141)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73149) lt!73141))))))

(declare-fun bs!5983 () Bool)

(assert (= bs!5983 d!44913))

(assert (=> bs!5983 m!167513))

(declare-fun m!170915 () Bool)

(assert (=> bs!5983 m!170915))

(assert (=> b!141018 d!44913))

(assert (=> b!141018 d!43621))

(assert (=> b!140336 d!44283))

(declare-fun d!44915 () Bool)

(assert (=> d!44915 (= (apply!120 lt!73941 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73941) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))))

(declare-fun bs!5984 () Bool)

(assert (= bs!5984 d!44915))

(assert (=> bs!5984 m!167711))

(declare-fun m!170917 () Bool)

(assert (=> bs!5984 m!170917))

(assert (=> bs!5984 m!170917))

(declare-fun m!170919 () Bool)

(assert (=> bs!5984 m!170919))

(assert (=> b!140865 d!44915))

(declare-fun d!44917 () Bool)

(declare-fun c!26800 () Bool)

(assert (=> d!44917 (= c!26800 ((_ is ValueCellFull!1122) (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun e!92553 () V!3555)

(assert (=> d!44917 (= (get!1535 (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73223)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92553)))

(declare-fun b!142036 () Bool)

(assert (=> b!142036 (= e!92553 (get!1536 (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73223)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142037 () Bool)

(assert (=> b!142037 (= e!92553 (get!1537 (select (arr!2315 (_values!2923 (_2!1353 lt!73223))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73223)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44917 c!26800) b!142036))

(assert (= (and d!44917 (not c!26800)) b!142037))

(assert (=> b!142036 m!168783))

(assert (=> b!142036 m!168781))

(declare-fun m!170921 () Bool)

(assert (=> b!142036 m!170921))

(assert (=> b!142037 m!168783))

(assert (=> b!142037 m!168781))

(declare-fun m!170923 () Bool)

(assert (=> b!142037 m!170923))

(assert (=> b!140865 d!44917))

(declare-fun d!44919 () Bool)

(declare-fun lt!74485 () Bool)

(assert (=> d!44919 (= lt!74485 (select (content!136 (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!92555 () Bool)

(assert (=> d!44919 (= lt!74485 e!92555)))

(declare-fun res!67735 () Bool)

(assert (=> d!44919 (=> (not res!67735) (not e!92555))))

(assert (=> d!44919 (= res!67735 ((_ is Cons!1759) (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)))))

(assert (=> d!44919 (= (contains!922 (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!74485)))

(declare-fun b!142038 () Bool)

(declare-fun e!92554 () Bool)

(assert (=> b!142038 (= e!92555 e!92554)))

(declare-fun res!67734 () Bool)

(assert (=> b!142038 (=> res!67734 e!92554)))

(assert (=> b!142038 (= res!67734 (= (h!2366 (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142039 () Bool)

(assert (=> b!142039 (= e!92554 (contains!922 (t!6359 (ite c!26176 (Cons!1759 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!44919 res!67735) b!142038))

(assert (= (and b!142038 (not res!67734)) b!142039))

(declare-fun m!170925 () Bool)

(assert (=> d!44919 m!170925))

(assert (=> d!44919 m!167699))

(declare-fun m!170927 () Bool)

(assert (=> d!44919 m!170927))

(assert (=> b!142039 m!167699))

(declare-fun m!170929 () Bool)

(assert (=> b!142039 m!170929))

(assert (=> b!140529 d!44919))

(declare-fun e!92557 () Option!181)

(declare-fun b!142042 () Bool)

(assert (=> b!142042 (= e!92557 (getValueByKey!175 (t!6360 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73142))))

(declare-fun b!142041 () Bool)

(declare-fun e!92556 () Option!181)

(assert (=> b!142041 (= e!92556 e!92557)))

(declare-fun c!26802 () Bool)

(assert (=> b!142041 (= c!26802 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73142))))))

(declare-fun b!142043 () Bool)

(assert (=> b!142043 (= e!92557 None!179)))

(declare-fun b!142040 () Bool)

(assert (=> b!142040 (= e!92556 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))))

(declare-fun d!44921 () Bool)

(declare-fun c!26801 () Bool)

(assert (=> d!44921 (= c!26801 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73142)))))

(assert (=> d!44921 (= (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73142) e!92556)))

(assert (= (and d!44921 c!26801) b!142040))

(assert (= (and d!44921 (not c!26801)) b!142041))

(assert (= (and b!142041 c!26802) b!142042))

(assert (= (and b!142041 (not c!26802)) b!142043))

(declare-fun m!170931 () Bool)

(assert (=> b!142042 m!170931))

(assert (=> b!140347 d!44921))

(declare-fun d!44923 () Bool)

(declare-fun res!67736 () Bool)

(declare-fun e!92558 () Bool)

(assert (=> d!44923 (=> res!67736 e!92558)))

(assert (=> d!44923 (= res!67736 (and ((_ is Cons!1760) lt!73811) (= (_1!1352 (h!2367 lt!73811)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44923 (= (containsKey!179 lt!73811 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92558)))

(declare-fun b!142044 () Bool)

(declare-fun e!92559 () Bool)

(assert (=> b!142044 (= e!92558 e!92559)))

(declare-fun res!67737 () Bool)

(assert (=> b!142044 (=> (not res!67737) (not e!92559))))

(assert (=> b!142044 (= res!67737 (and (or (not ((_ is Cons!1760) lt!73811)) (bvsle (_1!1352 (h!2367 lt!73811)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73811) (bvslt (_1!1352 (h!2367 lt!73811)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142045 () Bool)

(assert (=> b!142045 (= e!92559 (containsKey!179 (t!6360 lt!73811) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44923 (not res!67736)) b!142044))

(assert (= (and b!142044 res!67737) b!142045))

(declare-fun m!170933 () Bool)

(assert (=> b!142045 m!170933))

(assert (=> b!140673 d!44923))

(declare-fun d!44925 () Bool)

(declare-fun e!92561 () Bool)

(assert (=> d!44925 e!92561))

(declare-fun res!67738 () Bool)

(assert (=> d!44925 (=> res!67738 e!92561)))

(declare-fun lt!74486 () Bool)

(assert (=> d!44925 (= res!67738 (not lt!74486))))

(declare-fun lt!74489 () Bool)

(assert (=> d!44925 (= lt!74486 lt!74489)))

(declare-fun lt!74487 () Unit!4395)

(declare-fun e!92560 () Unit!4395)

(assert (=> d!44925 (= lt!74487 e!92560)))

(declare-fun c!26803 () Bool)

(assert (=> d!44925 (= c!26803 lt!74489)))

(assert (=> d!44925 (= lt!74489 (containsKey!179 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 lt!73346) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (=> d!44925 (= (contains!921 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 lt!73346) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))) lt!74486)))

(declare-fun b!142046 () Bool)

(declare-fun lt!74488 () Unit!4395)

(assert (=> b!142046 (= e!92560 lt!74488)))

(assert (=> b!142046 (= lt!74488 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 lt!73346) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (=> b!142046 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 lt!73346) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(declare-fun b!142047 () Bool)

(declare-fun Unit!4491 () Unit!4395)

(assert (=> b!142047 (= e!92560 Unit!4491)))

(declare-fun b!142048 () Bool)

(assert (=> b!142048 (= e!92561 (isDefined!129 (getValueByKey!175 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 lt!73346) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))))

(assert (= (and d!44925 c!26803) b!142046))

(assert (= (and d!44925 (not c!26803)) b!142047))

(assert (= (and d!44925 (not res!67738)) b!142048))

(assert (=> d!44925 m!168539))

(declare-fun m!170935 () Bool)

(assert (=> d!44925 m!170935))

(assert (=> b!142046 m!168539))

(declare-fun m!170937 () Bool)

(assert (=> b!142046 m!170937))

(assert (=> b!142046 m!168539))

(declare-fun m!170939 () Bool)

(assert (=> b!142046 m!170939))

(assert (=> b!142046 m!170939))

(declare-fun m!170941 () Bool)

(assert (=> b!142046 m!170941))

(assert (=> b!142048 m!168539))

(assert (=> b!142048 m!170939))

(assert (=> b!142048 m!170939))

(assert (=> b!142048 m!170941))

(assert (=> b!140717 d!44925))

(assert (=> b!140717 d!43923))

(declare-fun d!44927 () Bool)

(declare-fun lt!74490 () Bool)

(assert (=> d!44927 (= lt!74490 (select (content!137 (toList!889 lt!73995)) (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))

(declare-fun e!92562 () Bool)

(assert (=> d!44927 (= lt!74490 e!92562)))

(declare-fun res!67740 () Bool)

(assert (=> d!44927 (=> (not res!67740) (not e!92562))))

(assert (=> d!44927 (= res!67740 ((_ is Cons!1760) (toList!889 lt!73995)))))

(assert (=> d!44927 (= (contains!923 (toList!889 lt!73995) (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) lt!74490)))

(declare-fun b!142049 () Bool)

(declare-fun e!92563 () Bool)

(assert (=> b!142049 (= e!92562 e!92563)))

(declare-fun res!67739 () Bool)

(assert (=> b!142049 (=> res!67739 e!92563)))

(assert (=> b!142049 (= res!67739 (= (h!2367 (toList!889 lt!73995)) (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))

(declare-fun b!142050 () Bool)

(assert (=> b!142050 (= e!92563 (contains!923 (t!6360 (toList!889 lt!73995)) (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))

(assert (= (and d!44927 res!67740) b!142049))

(assert (= (and b!142049 (not res!67739)) b!142050))

(declare-fun m!170943 () Bool)

(assert (=> d!44927 m!170943))

(declare-fun m!170945 () Bool)

(assert (=> d!44927 m!170945))

(declare-fun m!170947 () Bool)

(assert (=> b!142050 m!170947))

(assert (=> b!140911 d!44927))

(assert (=> b!140262 d!43605))

(declare-fun d!44929 () Bool)

(assert (=> d!44929 (= (isDefined!129 (getValueByKey!175 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not (isEmpty!422 (getValueByKey!175 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun bs!5985 () Bool)

(assert (= bs!5985 d!44929))

(assert (=> bs!5985 m!167919))

(declare-fun m!170949 () Bool)

(assert (=> bs!5985 m!170949))

(assert (=> b!140452 d!44929))

(declare-fun b!142053 () Bool)

(declare-fun e!92565 () Option!181)

(assert (=> b!142053 (= e!92565 (getValueByKey!175 (t!6360 (toList!889 (map!1438 (_2!1353 lt!73341)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!142052 () Bool)

(declare-fun e!92564 () Option!181)

(assert (=> b!142052 (= e!92564 e!92565)))

(declare-fun c!26805 () Bool)

(assert (=> b!142052 (= c!26805 (and ((_ is Cons!1760) (toList!889 (map!1438 (_2!1353 lt!73341)))) (not (= (_1!1352 (h!2367 (toList!889 (map!1438 (_2!1353 lt!73341))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!142054 () Bool)

(assert (=> b!142054 (= e!92565 None!179)))

(declare-fun b!142051 () Bool)

(assert (=> b!142051 (= e!92564 (Some!180 (_2!1352 (h!2367 (toList!889 (map!1438 (_2!1353 lt!73341)))))))))

(declare-fun d!44931 () Bool)

(declare-fun c!26804 () Bool)

(assert (=> d!44931 (= c!26804 (and ((_ is Cons!1760) (toList!889 (map!1438 (_2!1353 lt!73341)))) (= (_1!1352 (h!2367 (toList!889 (map!1438 (_2!1353 lt!73341))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!44931 (= (getValueByKey!175 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92564)))

(assert (= (and d!44931 c!26804) b!142051))

(assert (= (and d!44931 (not c!26804)) b!142052))

(assert (= (and b!142052 c!26805) b!142053))

(assert (= (and b!142052 (not c!26805)) b!142054))

(assert (=> b!142053 m!166733))

(declare-fun m!170951 () Bool)

(assert (=> b!142053 m!170951))

(assert (=> b!140452 d!44931))

(declare-fun d!44933 () Bool)

(assert (=> d!44933 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74491 () Unit!4395)

(assert (=> d!44933 (= lt!74491 (choose!868 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92566 () Bool)

(assert (=> d!44933 e!92566))

(declare-fun res!67741 () Bool)

(assert (=> d!44933 (=> (not res!67741) (not e!92566))))

(assert (=> d!44933 (= res!67741 (isStrictlySorted!320 (toList!889 lt!73450)))))

(assert (=> d!44933 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74491)))

(declare-fun b!142055 () Bool)

(assert (=> b!142055 (= e!92566 (containsKey!179 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!44933 res!67741) b!142055))

(assert (=> d!44933 m!168311))

(assert (=> d!44933 m!168311))

(assert (=> d!44933 m!168313))

(declare-fun m!170953 () Bool)

(assert (=> d!44933 m!170953))

(assert (=> d!44933 m!170043))

(assert (=> b!142055 m!168307))

(assert (=> b!140601 d!44933))

(assert (=> b!140601 d!44751))

(assert (=> b!140601 d!44389))

(declare-fun d!44935 () Bool)

(declare-fun e!92568 () Bool)

(assert (=> d!44935 e!92568))

(declare-fun res!67742 () Bool)

(assert (=> d!44935 (=> res!67742 e!92568)))

(declare-fun lt!74492 () Bool)

(assert (=> d!44935 (= res!67742 (not lt!74492))))

(declare-fun lt!74495 () Bool)

(assert (=> d!44935 (= lt!74492 lt!74495)))

(declare-fun lt!74493 () Unit!4395)

(declare-fun e!92567 () Unit!4395)

(assert (=> d!44935 (= lt!74493 e!92567)))

(declare-fun c!26806 () Bool)

(assert (=> d!44935 (= c!26806 lt!74495)))

(assert (=> d!44935 (= lt!74495 (containsKey!179 (toList!889 lt!73908) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!44935 (= (contains!921 lt!73908 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74492)))

(declare-fun b!142056 () Bool)

(declare-fun lt!74494 () Unit!4395)

(assert (=> b!142056 (= e!92567 lt!74494)))

(assert (=> b!142056 (= lt!74494 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73908) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142056 (isDefined!129 (getValueByKey!175 (toList!889 lt!73908) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142057 () Bool)

(declare-fun Unit!4492 () Unit!4395)

(assert (=> b!142057 (= e!92567 Unit!4492)))

(declare-fun b!142058 () Bool)

(assert (=> b!142058 (= e!92568 (isDefined!129 (getValueByKey!175 (toList!889 lt!73908) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44935 c!26806) b!142056))

(assert (= (and d!44935 (not c!26806)) b!142057))

(assert (= (and d!44935 (not res!67742)) b!142058))

(declare-fun m!170955 () Bool)

(assert (=> d!44935 m!170955))

(declare-fun m!170957 () Bool)

(assert (=> b!142056 m!170957))

(assert (=> b!142056 m!168695))

(assert (=> b!142056 m!168695))

(declare-fun m!170959 () Bool)

(assert (=> b!142056 m!170959))

(assert (=> b!142058 m!168695))

(assert (=> b!142058 m!168695))

(assert (=> b!142058 m!170959))

(assert (=> d!43953 d!44935))

(declare-fun e!92570 () Option!181)

(declare-fun b!142061 () Bool)

(assert (=> b!142061 (= e!92570 (getValueByKey!175 (t!6360 lt!73909) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142060 () Bool)

(declare-fun e!92569 () Option!181)

(assert (=> b!142060 (= e!92569 e!92570)))

(declare-fun c!26808 () Bool)

(assert (=> b!142060 (= c!26808 (and ((_ is Cons!1760) lt!73909) (not (= (_1!1352 (h!2367 lt!73909)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142062 () Bool)

(assert (=> b!142062 (= e!92570 None!179)))

(declare-fun b!142059 () Bool)

(assert (=> b!142059 (= e!92569 (Some!180 (_2!1352 (h!2367 lt!73909))))))

(declare-fun c!26807 () Bool)

(declare-fun d!44937 () Bool)

(assert (=> d!44937 (= c!26807 (and ((_ is Cons!1760) lt!73909) (= (_1!1352 (h!2367 lt!73909)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44937 (= (getValueByKey!175 lt!73909 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92569)))

(assert (= (and d!44937 c!26807) b!142059))

(assert (= (and d!44937 (not c!26807)) b!142060))

(assert (= (and b!142060 c!26808) b!142061))

(assert (= (and b!142060 (not c!26808)) b!142062))

(declare-fun m!170961 () Bool)

(assert (=> b!142061 m!170961))

(assert (=> d!43953 d!44937))

(declare-fun d!44939 () Bool)

(assert (=> d!44939 (= (getValueByKey!175 lt!73909 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74496 () Unit!4395)

(assert (=> d!44939 (= lt!74496 (choose!873 lt!73909 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92571 () Bool)

(assert (=> d!44939 e!92571))

(declare-fun res!67743 () Bool)

(assert (=> d!44939 (=> (not res!67743) (not e!92571))))

(assert (=> d!44939 (= res!67743 (isStrictlySorted!320 lt!73909))))

(assert (=> d!44939 (= (lemmaContainsTupThenGetReturnValue!91 lt!73909 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74496)))

(declare-fun b!142063 () Bool)

(declare-fun res!67744 () Bool)

(assert (=> b!142063 (=> (not res!67744) (not e!92571))))

(assert (=> b!142063 (= res!67744 (containsKey!179 lt!73909 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142064 () Bool)

(assert (=> b!142064 (= e!92571 (contains!923 lt!73909 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!44939 res!67743) b!142063))

(assert (= (and b!142063 res!67744) b!142064))

(assert (=> d!44939 m!168689))

(declare-fun m!170963 () Bool)

(assert (=> d!44939 m!170963))

(declare-fun m!170965 () Bool)

(assert (=> d!44939 m!170965))

(declare-fun m!170967 () Bool)

(assert (=> b!142063 m!170967))

(declare-fun m!170969 () Bool)

(assert (=> b!142064 m!170969))

(assert (=> d!43953 d!44939))

(declare-fun d!44941 () Bool)

(declare-fun e!92572 () Bool)

(assert (=> d!44941 e!92572))

(declare-fun res!67746 () Bool)

(assert (=> d!44941 (=> (not res!67746) (not e!92572))))

(declare-fun lt!74497 () List!1764)

(assert (=> d!44941 (= res!67746 (isStrictlySorted!320 lt!74497))))

(declare-fun e!92574 () List!1764)

(assert (=> d!44941 (= lt!74497 e!92574)))

(declare-fun c!26809 () Bool)

(assert (=> d!44941 (= c!26809 (and ((_ is Cons!1760) (toList!889 call!15554)) (bvslt (_1!1352 (h!2367 (toList!889 call!15554))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44941 (isStrictlySorted!320 (toList!889 call!15554))))

(assert (=> d!44941 (= (insertStrictlySorted!93 (toList!889 call!15554) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74497)))

(declare-fun b!142065 () Bool)

(assert (=> b!142065 (= e!92572 (contains!923 lt!74497 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun call!15742 () List!1764)

(declare-fun e!92575 () List!1764)

(declare-fun bm!15739 () Bool)

(assert (=> bm!15739 (= call!15742 ($colon$colon!93 e!92575 (ite c!26809 (h!2367 (toList!889 call!15554)) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26812 () Bool)

(assert (=> bm!15739 (= c!26812 c!26809)))

(declare-fun b!142066 () Bool)

(assert (=> b!142066 (= e!92574 call!15742)))

(declare-fun b!142067 () Bool)

(assert (=> b!142067 (= e!92575 (insertStrictlySorted!93 (t!6360 (toList!889 call!15554)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142068 () Bool)

(declare-fun e!92576 () List!1764)

(declare-fun call!15743 () List!1764)

(assert (=> b!142068 (= e!92576 call!15743)))

(declare-fun bm!15740 () Bool)

(assert (=> bm!15740 (= call!15743 call!15742)))

(declare-fun b!142069 () Bool)

(declare-fun e!92573 () List!1764)

(declare-fun call!15744 () List!1764)

(assert (=> b!142069 (= e!92573 call!15744)))

(declare-fun c!26811 () Bool)

(declare-fun b!142070 () Bool)

(assert (=> b!142070 (= c!26811 (and ((_ is Cons!1760) (toList!889 call!15554)) (bvsgt (_1!1352 (h!2367 (toList!889 call!15554))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!142070 (= e!92576 e!92573)))

(declare-fun b!142071 () Bool)

(assert (=> b!142071 (= e!92574 e!92576)))

(declare-fun c!26810 () Bool)

(assert (=> b!142071 (= c!26810 (and ((_ is Cons!1760) (toList!889 call!15554)) (= (_1!1352 (h!2367 (toList!889 call!15554))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142072 () Bool)

(assert (=> b!142072 (= e!92575 (ite c!26810 (t!6360 (toList!889 call!15554)) (ite c!26811 (Cons!1760 (h!2367 (toList!889 call!15554)) (t!6360 (toList!889 call!15554))) Nil!1761)))))

(declare-fun bm!15741 () Bool)

(assert (=> bm!15741 (= call!15744 call!15743)))

(declare-fun b!142073 () Bool)

(declare-fun res!67745 () Bool)

(assert (=> b!142073 (=> (not res!67745) (not e!92572))))

(assert (=> b!142073 (= res!67745 (containsKey!179 lt!74497 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142074 () Bool)

(assert (=> b!142074 (= e!92573 call!15744)))

(assert (= (and d!44941 c!26809) b!142066))

(assert (= (and d!44941 (not c!26809)) b!142071))

(assert (= (and b!142071 c!26810) b!142068))

(assert (= (and b!142071 (not c!26810)) b!142070))

(assert (= (and b!142070 c!26811) b!142074))

(assert (= (and b!142070 (not c!26811)) b!142069))

(assert (= (or b!142074 b!142069) bm!15741))

(assert (= (or b!142068 bm!15741) bm!15740))

(assert (= (or b!142066 bm!15740) bm!15739))

(assert (= (and bm!15739 c!26812) b!142067))

(assert (= (and bm!15739 (not c!26812)) b!142072))

(assert (= (and d!44941 res!67746) b!142073))

(assert (= (and b!142073 res!67745) b!142065))

(declare-fun m!170971 () Bool)

(assert (=> b!142065 m!170971))

(declare-fun m!170973 () Bool)

(assert (=> b!142073 m!170973))

(declare-fun m!170975 () Bool)

(assert (=> b!142067 m!170975))

(declare-fun m!170977 () Bool)

(assert (=> bm!15739 m!170977))

(declare-fun m!170979 () Bool)

(assert (=> d!44941 m!170979))

(declare-fun m!170981 () Bool)

(assert (=> d!44941 m!170981))

(assert (=> d!43953 d!44941))

(declare-fun d!44943 () Bool)

(declare-fun e!92577 () Bool)

(assert (=> d!44943 e!92577))

(declare-fun res!67748 () Bool)

(assert (=> d!44943 (=> (not res!67748) (not e!92577))))

(declare-fun lt!74500 () ListLongMap!1747)

(assert (=> d!44943 (= res!67748 (contains!921 lt!74500 (_1!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223))))))))

(declare-fun lt!74501 () List!1764)

(assert (=> d!44943 (= lt!74500 (ListLongMap!1748 lt!74501))))

(declare-fun lt!74498 () Unit!4395)

(declare-fun lt!74499 () Unit!4395)

(assert (=> d!44943 (= lt!74498 lt!74499)))

(assert (=> d!44943 (= (getValueByKey!175 lt!74501 (_1!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44943 (= lt!74499 (lemmaContainsTupThenGetReturnValue!91 lt!74501 (_1!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44943 (= lt!74501 (insertStrictlySorted!93 (toList!889 lt!73955) (_1!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44943 (= (+!174 lt!73955 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))) lt!74500)))

(declare-fun b!142075 () Bool)

(declare-fun res!67747 () Bool)

(assert (=> b!142075 (=> (not res!67747) (not e!92577))))

(assert (=> b!142075 (= res!67747 (= (getValueByKey!175 (toList!889 lt!74500) (_1!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))))))))

(declare-fun b!142076 () Bool)

(assert (=> b!142076 (= e!92577 (contains!923 (toList!889 lt!74500) (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))))))

(assert (= (and d!44943 res!67748) b!142075))

(assert (= (and b!142075 res!67747) b!142076))

(declare-fun m!170983 () Bool)

(assert (=> d!44943 m!170983))

(declare-fun m!170985 () Bool)

(assert (=> d!44943 m!170985))

(declare-fun m!170987 () Bool)

(assert (=> d!44943 m!170987))

(declare-fun m!170989 () Bool)

(assert (=> d!44943 m!170989))

(declare-fun m!170991 () Bool)

(assert (=> b!142075 m!170991))

(declare-fun m!170993 () Bool)

(assert (=> b!142076 m!170993))

(assert (=> b!140852 d!44943))

(declare-fun d!44945 () Bool)

(assert (=> d!44945 (contains!921 (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))) lt!73948)))

(declare-fun lt!74502 () Unit!4395)

(assert (=> d!44945 (= lt!74502 (choose!871 lt!73950 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)) lt!73948))))

(assert (=> d!44945 (contains!921 lt!73950 lt!73948)))

(assert (=> d!44945 (= (addStillContains!96 lt!73950 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)) lt!73948) lt!74502)))

(declare-fun bs!5986 () Bool)

(assert (= bs!5986 d!44945))

(assert (=> bs!5986 m!168801))

(assert (=> bs!5986 m!168801))

(assert (=> bs!5986 m!168803))

(declare-fun m!170995 () Bool)

(assert (=> bs!5986 m!170995))

(declare-fun m!170997 () Bool)

(assert (=> bs!5986 m!170997))

(assert (=> b!140852 d!44945))

(declare-fun d!44947 () Bool)

(declare-fun e!92578 () Bool)

(assert (=> d!44947 e!92578))

(declare-fun res!67750 () Bool)

(assert (=> d!44947 (=> (not res!67750) (not e!92578))))

(declare-fun lt!74505 () ListLongMap!1747)

(assert (=> d!44947 (= res!67750 (contains!921 lt!74505 (_1!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))))))

(declare-fun lt!74506 () List!1764)

(assert (=> d!44947 (= lt!74505 (ListLongMap!1748 lt!74506))))

(declare-fun lt!74503 () Unit!4395)

(declare-fun lt!74504 () Unit!4395)

(assert (=> d!44947 (= lt!74503 lt!74504)))

(assert (=> d!44947 (= (getValueByKey!175 lt!74506 (_1!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44947 (= lt!74504 (lemmaContainsTupThenGetReturnValue!91 lt!74506 (_1!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44947 (= lt!74506 (insertStrictlySorted!93 (toList!889 lt!73950) (_1!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44947 (= (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))) lt!74505)))

(declare-fun b!142077 () Bool)

(declare-fun res!67749 () Bool)

(assert (=> b!142077 (=> (not res!67749) (not e!92578))))

(assert (=> b!142077 (= res!67749 (= (getValueByKey!175 (toList!889 lt!74505) (_1!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))))))))

(declare-fun b!142078 () Bool)

(assert (=> b!142078 (= e!92578 (contains!923 (toList!889 lt!74505) (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))))))

(assert (= (and d!44947 res!67750) b!142077))

(assert (= (and b!142077 res!67749) b!142078))

(declare-fun m!170999 () Bool)

(assert (=> d!44947 m!170999))

(declare-fun m!171001 () Bool)

(assert (=> d!44947 m!171001))

(declare-fun m!171003 () Bool)

(assert (=> d!44947 m!171003))

(declare-fun m!171005 () Bool)

(assert (=> d!44947 m!171005))

(declare-fun m!171007 () Bool)

(assert (=> b!142077 m!171007))

(declare-fun m!171009 () Bool)

(assert (=> b!142078 m!171009))

(assert (=> b!140852 d!44947))

(declare-fun d!44949 () Bool)

(assert (=> d!44949 (= (apply!120 (+!174 lt!73946 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))) lt!73957) (apply!120 lt!73946 lt!73957))))

(declare-fun lt!74507 () Unit!4395)

(assert (=> d!44949 (= lt!74507 (choose!870 lt!73946 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)) lt!73957))))

(declare-fun e!92579 () Bool)

(assert (=> d!44949 e!92579))

(declare-fun res!67751 () Bool)

(assert (=> d!44949 (=> (not res!67751) (not e!92579))))

(assert (=> d!44949 (= res!67751 (contains!921 lt!73946 lt!73957))))

(assert (=> d!44949 (= (addApplyDifferent!96 lt!73946 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)) lt!73957) lt!74507)))

(declare-fun b!142079 () Bool)

(assert (=> b!142079 (= e!92579 (not (= lt!73957 lt!73951)))))

(assert (= (and d!44949 res!67751) b!142079))

(declare-fun m!171011 () Bool)

(assert (=> d!44949 m!171011))

(assert (=> d!44949 m!168813))

(assert (=> d!44949 m!168815))

(assert (=> d!44949 m!168813))

(assert (=> d!44949 m!168823))

(declare-fun m!171013 () Bool)

(assert (=> d!44949 m!171013))

(assert (=> b!140852 d!44949))

(declare-fun d!44951 () Bool)

(assert (=> d!44951 (= (apply!120 lt!73946 lt!73957) (get!1538 (getValueByKey!175 (toList!889 lt!73946) lt!73957)))))

(declare-fun bs!5987 () Bool)

(assert (= bs!5987 d!44951))

(declare-fun m!171015 () Bool)

(assert (=> bs!5987 m!171015))

(assert (=> bs!5987 m!171015))

(declare-fun m!171017 () Bool)

(assert (=> bs!5987 m!171017))

(assert (=> b!140852 d!44951))

(declare-fun d!44953 () Bool)

(assert (=> d!44953 (= (apply!120 (+!174 lt!73952 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))) lt!73958) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73952 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223))))) lt!73958)))))

(declare-fun bs!5988 () Bool)

(assert (= bs!5988 d!44953))

(declare-fun m!171019 () Bool)

(assert (=> bs!5988 m!171019))

(assert (=> bs!5988 m!171019))

(declare-fun m!171021 () Bool)

(assert (=> bs!5988 m!171021))

(assert (=> b!140852 d!44953))

(declare-fun d!44955 () Bool)

(assert (=> d!44955 (= (apply!120 (+!174 lt!73955 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))) lt!73947) (apply!120 lt!73955 lt!73947))))

(declare-fun lt!74508 () Unit!4395)

(assert (=> d!44955 (= lt!74508 (choose!870 lt!73955 lt!73938 (minValue!2790 (_2!1353 lt!73223)) lt!73947))))

(declare-fun e!92580 () Bool)

(assert (=> d!44955 e!92580))

(declare-fun res!67752 () Bool)

(assert (=> d!44955 (=> (not res!67752) (not e!92580))))

(assert (=> d!44955 (= res!67752 (contains!921 lt!73955 lt!73947))))

(assert (=> d!44955 (= (addApplyDifferent!96 lt!73955 lt!73938 (minValue!2790 (_2!1353 lt!73223)) lt!73947) lt!74508)))

(declare-fun b!142080 () Bool)

(assert (=> b!142080 (= e!92580 (not (= lt!73947 lt!73938)))))

(assert (= (and d!44955 res!67752) b!142080))

(declare-fun m!171023 () Bool)

(assert (=> d!44955 m!171023))

(assert (=> d!44955 m!168795))

(assert (=> d!44955 m!168797))

(assert (=> d!44955 m!168795))

(assert (=> d!44955 m!168821))

(declare-fun m!171025 () Bool)

(assert (=> d!44955 m!171025))

(assert (=> b!140852 d!44955))

(declare-fun d!44957 () Bool)

(assert (=> d!44957 (= (apply!120 (+!174 lt!73946 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))) lt!73957) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73946 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223))))) lt!73957)))))

(declare-fun bs!5989 () Bool)

(assert (= bs!5989 d!44957))

(declare-fun m!171027 () Bool)

(assert (=> bs!5989 m!171027))

(assert (=> bs!5989 m!171027))

(declare-fun m!171029 () Bool)

(assert (=> bs!5989 m!171029))

(assert (=> b!140852 d!44957))

(declare-fun d!44959 () Bool)

(declare-fun e!92582 () Bool)

(assert (=> d!44959 e!92582))

(declare-fun res!67753 () Bool)

(assert (=> d!44959 (=> res!67753 e!92582)))

(declare-fun lt!74509 () Bool)

(assert (=> d!44959 (= res!67753 (not lt!74509))))

(declare-fun lt!74512 () Bool)

(assert (=> d!44959 (= lt!74509 lt!74512)))

(declare-fun lt!74510 () Unit!4395)

(declare-fun e!92581 () Unit!4395)

(assert (=> d!44959 (= lt!74510 e!92581)))

(declare-fun c!26813 () Bool)

(assert (=> d!44959 (= c!26813 lt!74512)))

(assert (=> d!44959 (= lt!74512 (containsKey!179 (toList!889 (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))) lt!73948))))

(assert (=> d!44959 (= (contains!921 (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223)))) lt!73948) lt!74509)))

(declare-fun b!142081 () Bool)

(declare-fun lt!74511 () Unit!4395)

(assert (=> b!142081 (= e!92581 lt!74511)))

(assert (=> b!142081 (= lt!74511 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))) lt!73948))))

(assert (=> b!142081 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))) lt!73948))))

(declare-fun b!142082 () Bool)

(declare-fun Unit!4493 () Unit!4395)

(assert (=> b!142082 (= e!92581 Unit!4493)))

(declare-fun b!142083 () Bool)

(assert (=> b!142083 (= e!92582 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73950 (tuple2!2685 lt!73943 (zeroValue!2790 (_2!1353 lt!73223))))) lt!73948)))))

(assert (= (and d!44959 c!26813) b!142081))

(assert (= (and d!44959 (not c!26813)) b!142082))

(assert (= (and d!44959 (not res!67753)) b!142083))

(declare-fun m!171031 () Bool)

(assert (=> d!44959 m!171031))

(declare-fun m!171033 () Bool)

(assert (=> b!142081 m!171033))

(declare-fun m!171035 () Bool)

(assert (=> b!142081 m!171035))

(assert (=> b!142081 m!171035))

(declare-fun m!171037 () Bool)

(assert (=> b!142081 m!171037))

(assert (=> b!142083 m!171035))

(assert (=> b!142083 m!171035))

(assert (=> b!142083 m!171037))

(assert (=> b!140852 d!44959))

(declare-fun d!44961 () Bool)

(assert (=> d!44961 (= (apply!120 lt!73955 lt!73947) (get!1538 (getValueByKey!175 (toList!889 lt!73955) lt!73947)))))

(declare-fun bs!5990 () Bool)

(assert (= bs!5990 d!44961))

(declare-fun m!171039 () Bool)

(assert (=> bs!5990 m!171039))

(assert (=> bs!5990 m!171039))

(declare-fun m!171041 () Bool)

(assert (=> bs!5990 m!171041))

(assert (=> b!140852 d!44961))

(declare-fun d!44963 () Bool)

(declare-fun e!92583 () Bool)

(assert (=> d!44963 e!92583))

(declare-fun res!67755 () Bool)

(assert (=> d!44963 (=> (not res!67755) (not e!92583))))

(declare-fun lt!74515 () ListLongMap!1747)

(assert (=> d!44963 (= res!67755 (contains!921 lt!74515 (_1!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223))))))))

(declare-fun lt!74516 () List!1764)

(assert (=> d!44963 (= lt!74515 (ListLongMap!1748 lt!74516))))

(declare-fun lt!74513 () Unit!4395)

(declare-fun lt!74514 () Unit!4395)

(assert (=> d!44963 (= lt!74513 lt!74514)))

(assert (=> d!44963 (= (getValueByKey!175 lt!74516 (_1!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44963 (= lt!74514 (lemmaContainsTupThenGetReturnValue!91 lt!74516 (_1!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44963 (= lt!74516 (insertStrictlySorted!93 (toList!889 lt!73952) (_1!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44963 (= (+!174 lt!73952 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))) lt!74515)))

(declare-fun b!142084 () Bool)

(declare-fun res!67754 () Bool)

(assert (=> b!142084 (=> (not res!67754) (not e!92583))))

(assert (=> b!142084 (= res!67754 (= (getValueByKey!175 (toList!889 lt!74515) (_1!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))))))))

(declare-fun b!142085 () Bool)

(assert (=> b!142085 (= e!92583 (contains!923 (toList!889 lt!74515) (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))))))

(assert (= (and d!44963 res!67755) b!142084))

(assert (= (and b!142084 res!67754) b!142085))

(declare-fun m!171043 () Bool)

(assert (=> d!44963 m!171043))

(declare-fun m!171045 () Bool)

(assert (=> d!44963 m!171045))

(declare-fun m!171047 () Bool)

(assert (=> d!44963 m!171047))

(declare-fun m!171049 () Bool)

(assert (=> d!44963 m!171049))

(declare-fun m!171051 () Bool)

(assert (=> b!142084 m!171051))

(declare-fun m!171053 () Bool)

(assert (=> b!142085 m!171053))

(assert (=> b!140852 d!44963))

(declare-fun d!44965 () Bool)

(assert (=> d!44965 (= (apply!120 lt!73952 lt!73958) (get!1538 (getValueByKey!175 (toList!889 lt!73952) lt!73958)))))

(declare-fun bs!5991 () Bool)

(assert (= bs!5991 d!44965))

(declare-fun m!171055 () Bool)

(assert (=> bs!5991 m!171055))

(assert (=> bs!5991 m!171055))

(declare-fun m!171057 () Bool)

(assert (=> bs!5991 m!171057))

(assert (=> b!140852 d!44965))

(declare-fun d!44967 () Bool)

(assert (=> d!44967 (= (apply!120 (+!174 lt!73952 (tuple2!2685 lt!73956 (minValue!2790 (_2!1353 lt!73223)))) lt!73958) (apply!120 lt!73952 lt!73958))))

(declare-fun lt!74517 () Unit!4395)

(assert (=> d!44967 (= lt!74517 (choose!870 lt!73952 lt!73956 (minValue!2790 (_2!1353 lt!73223)) lt!73958))))

(declare-fun e!92584 () Bool)

(assert (=> d!44967 e!92584))

(declare-fun res!67756 () Bool)

(assert (=> d!44967 (=> (not res!67756) (not e!92584))))

(assert (=> d!44967 (= res!67756 (contains!921 lt!73952 lt!73958))))

(assert (=> d!44967 (= (addApplyDifferent!96 lt!73952 lt!73956 (minValue!2790 (_2!1353 lt!73223)) lt!73958) lt!74517)))

(declare-fun b!142086 () Bool)

(assert (=> b!142086 (= e!92584 (not (= lt!73958 lt!73956)))))

(assert (= (and d!44967 res!67756) b!142086))

(declare-fun m!171059 () Bool)

(assert (=> d!44967 m!171059))

(assert (=> d!44967 m!168809))

(assert (=> d!44967 m!168811))

(assert (=> d!44967 m!168809))

(assert (=> d!44967 m!168807))

(declare-fun m!171061 () Bool)

(assert (=> d!44967 m!171061))

(assert (=> b!140852 d!44967))

(declare-fun d!44969 () Bool)

(assert (=> d!44969 (= (apply!120 (+!174 lt!73955 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223)))) lt!73947) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73955 (tuple2!2685 lt!73938 (minValue!2790 (_2!1353 lt!73223))))) lt!73947)))))

(declare-fun bs!5992 () Bool)

(assert (= bs!5992 d!44969))

(declare-fun m!171063 () Bool)

(assert (=> bs!5992 m!171063))

(assert (=> bs!5992 m!171063))

(declare-fun m!171065 () Bool)

(assert (=> bs!5992 m!171065))

(assert (=> b!140852 d!44969))

(declare-fun d!44971 () Bool)

(declare-fun e!92585 () Bool)

(assert (=> d!44971 e!92585))

(declare-fun res!67758 () Bool)

(assert (=> d!44971 (=> (not res!67758) (not e!92585))))

(declare-fun lt!74520 () ListLongMap!1747)

(assert (=> d!44971 (= res!67758 (contains!921 lt!74520 (_1!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223))))))))

(declare-fun lt!74521 () List!1764)

(assert (=> d!44971 (= lt!74520 (ListLongMap!1748 lt!74521))))

(declare-fun lt!74518 () Unit!4395)

(declare-fun lt!74519 () Unit!4395)

(assert (=> d!44971 (= lt!74518 lt!74519)))

(assert (=> d!44971 (= (getValueByKey!175 lt!74521 (_1!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44971 (= lt!74519 (lemmaContainsTupThenGetReturnValue!91 lt!74521 (_1!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44971 (= lt!74521 (insertStrictlySorted!93 (toList!889 lt!73946) (_1!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))) (_2!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223))))))))

(assert (=> d!44971 (= (+!174 lt!73946 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))) lt!74520)))

(declare-fun b!142087 () Bool)

(declare-fun res!67757 () Bool)

(assert (=> b!142087 (=> (not res!67757) (not e!92585))))

(assert (=> b!142087 (= res!67757 (= (getValueByKey!175 (toList!889 lt!74520) (_1!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223))))) (Some!180 (_2!1352 (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))))))))

(declare-fun b!142088 () Bool)

(assert (=> b!142088 (= e!92585 (contains!923 (toList!889 lt!74520) (tuple2!2685 lt!73951 (zeroValue!2790 (_2!1353 lt!73223)))))))

(assert (= (and d!44971 res!67758) b!142087))

(assert (= (and b!142087 res!67757) b!142088))

(declare-fun m!171067 () Bool)

(assert (=> d!44971 m!171067))

(declare-fun m!171069 () Bool)

(assert (=> d!44971 m!171069))

(declare-fun m!171071 () Bool)

(assert (=> d!44971 m!171071))

(declare-fun m!171073 () Bool)

(assert (=> d!44971 m!171073))

(declare-fun m!171075 () Bool)

(assert (=> b!142087 m!171075))

(declare-fun m!171077 () Bool)

(assert (=> b!142088 m!171077))

(assert (=> b!140852 d!44971))

(assert (=> b!140852 d!44853))

(declare-fun d!44973 () Bool)

(assert (=> d!44973 (= (apply!120 lt!73971 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73971) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5993 () Bool)

(assert (= bs!5993 d!44973))

(assert (=> bs!5993 m!166967))

(assert (=> bs!5993 m!169355))

(assert (=> bs!5993 m!169355))

(declare-fun m!171079 () Bool)

(assert (=> bs!5993 m!171079))

(assert (=> b!140889 d!44973))

(assert (=> b!140889 d!43651))

(declare-fun d!44975 () Bool)

(declare-fun c!26814 () Bool)

(assert (=> d!44975 (= c!26814 ((_ is Nil!1761) (toList!889 lt!73542)))))

(declare-fun e!92586 () (InoxSet tuple2!2684))

(assert (=> d!44975 (= (content!137 (toList!889 lt!73542)) e!92586)))

(declare-fun b!142089 () Bool)

(assert (=> b!142089 (= e!92586 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!142090 () Bool)

(assert (=> b!142090 (= e!92586 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73542)) true) (content!137 (t!6360 (toList!889 lt!73542)))))))

(assert (= (and d!44975 c!26814) b!142089))

(assert (= (and d!44975 (not c!26814)) b!142090))

(declare-fun m!171081 () Bool)

(assert (=> b!142090 m!171081))

(declare-fun m!171083 () Bool)

(assert (=> b!142090 m!171083))

(assert (=> d!43949 d!44975))

(declare-fun d!44977 () Bool)

(declare-fun e!92588 () Bool)

(assert (=> d!44977 e!92588))

(declare-fun res!67759 () Bool)

(assert (=> d!44977 (=> res!67759 e!92588)))

(declare-fun lt!74522 () Bool)

(assert (=> d!44977 (= res!67759 (not lt!74522))))

(declare-fun lt!74525 () Bool)

(assert (=> d!44977 (= lt!74522 lt!74525)))

(declare-fun lt!74523 () Unit!4395)

(declare-fun e!92587 () Unit!4395)

(assert (=> d!44977 (= lt!74523 e!92587)))

(declare-fun c!26815 () Bool)

(assert (=> d!44977 (= c!26815 lt!74525)))

(assert (=> d!44977 (= lt!74525 (containsKey!179 (toList!889 lt!73630) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44977 (= (contains!921 lt!73630 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74522)))

(declare-fun b!142091 () Bool)

(declare-fun lt!74524 () Unit!4395)

(assert (=> b!142091 (= e!92587 lt!74524)))

(assert (=> b!142091 (= lt!74524 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73630) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142091 (isDefined!129 (getValueByKey!175 (toList!889 lt!73630) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142092 () Bool)

(declare-fun Unit!4494 () Unit!4395)

(assert (=> b!142092 (= e!92587 Unit!4494)))

(declare-fun b!142093 () Bool)

(assert (=> b!142093 (= e!92588 (isDefined!129 (getValueByKey!175 (toList!889 lt!73630) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44977 c!26815) b!142091))

(assert (= (and d!44977 (not c!26815)) b!142092))

(assert (= (and d!44977 (not res!67759)) b!142093))

(declare-fun m!171085 () Bool)

(assert (=> d!44977 m!171085))

(declare-fun m!171087 () Bool)

(assert (=> b!142091 m!171087))

(declare-fun m!171089 () Bool)

(assert (=> b!142091 m!171089))

(assert (=> b!142091 m!171089))

(declare-fun m!171091 () Bool)

(assert (=> b!142091 m!171091))

(assert (=> b!142093 m!171089))

(assert (=> b!142093 m!171089))

(assert (=> b!142093 m!171091))

(assert (=> d!43673 d!44977))

(assert (=> d!43673 d!43499))

(assert (=> b!140253 d!44431))

(declare-fun d!44979 () Bool)

(declare-fun e!92590 () Bool)

(assert (=> d!44979 e!92590))

(declare-fun res!67760 () Bool)

(assert (=> d!44979 (=> res!67760 e!92590)))

(declare-fun lt!74526 () Bool)

(assert (=> d!44979 (= res!67760 (not lt!74526))))

(declare-fun lt!74529 () Bool)

(assert (=> d!44979 (= lt!74526 lt!74529)))

(declare-fun lt!74527 () Unit!4395)

(declare-fun e!92589 () Unit!4395)

(assert (=> d!44979 (= lt!74527 e!92589)))

(declare-fun c!26816 () Bool)

(assert (=> d!44979 (= c!26816 lt!74529)))

(assert (=> d!44979 (= lt!74529 (containsKey!179 (toList!889 lt!73826) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!44979 (= (contains!921 lt!73826 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74526)))

(declare-fun b!142094 () Bool)

(declare-fun lt!74528 () Unit!4395)

(assert (=> b!142094 (= e!92589 lt!74528)))

(assert (=> b!142094 (= lt!74528 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73826) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142094 (isDefined!129 (getValueByKey!175 (toList!889 lt!73826) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142095 () Bool)

(declare-fun Unit!4495 () Unit!4395)

(assert (=> b!142095 (= e!92589 Unit!4495)))

(declare-fun b!142096 () Bool)

(assert (=> b!142096 (= e!92590 (isDefined!129 (getValueByKey!175 (toList!889 lt!73826) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!44979 c!26816) b!142094))

(assert (= (and d!44979 (not c!26816)) b!142095))

(assert (= (and d!44979 (not res!67760)) b!142096))

(declare-fun m!171093 () Bool)

(assert (=> d!44979 m!171093))

(declare-fun m!171095 () Bool)

(assert (=> b!142094 m!171095))

(declare-fun m!171097 () Bool)

(assert (=> b!142094 m!171097))

(assert (=> b!142094 m!171097))

(declare-fun m!171099 () Bool)

(assert (=> b!142094 m!171099))

(assert (=> b!142096 m!171097))

(assert (=> b!142096 m!171097))

(assert (=> b!142096 m!171099))

(assert (=> bm!15632 d!44979))

(declare-fun e!92592 () Option!181)

(declare-fun b!142099 () Bool)

(assert (=> b!142099 (= e!92592 (getValueByKey!175 (t!6360 (toList!889 lt!73637)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142098 () Bool)

(declare-fun e!92591 () Option!181)

(assert (=> b!142098 (= e!92591 e!92592)))

(declare-fun c!26818 () Bool)

(assert (=> b!142098 (= c!26818 (and ((_ is Cons!1760) (toList!889 lt!73637)) (not (= (_1!1352 (h!2367 (toList!889 lt!73637))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142100 () Bool)

(assert (=> b!142100 (= e!92592 None!179)))

(declare-fun b!142097 () Bool)

(assert (=> b!142097 (= e!92591 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73637)))))))

(declare-fun c!26817 () Bool)

(declare-fun d!44981 () Bool)

(assert (=> d!44981 (= c!26817 (and ((_ is Cons!1760) (toList!889 lt!73637)) (= (_1!1352 (h!2367 (toList!889 lt!73637))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!44981 (= (getValueByKey!175 (toList!889 lt!73637) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92591)))

(assert (= (and d!44981 c!26817) b!142097))

(assert (= (and d!44981 (not c!26817)) b!142098))

(assert (= (and b!142098 c!26818) b!142099))

(assert (= (and b!142098 (not c!26818)) b!142100))

(declare-fun m!171101 () Bool)

(assert (=> b!142099 m!171101))

(assert (=> b!140386 d!44981))

(declare-fun lt!74530 () Bool)

(declare-fun d!44983 () Bool)

(assert (=> d!44983 (= lt!74530 (select (content!137 (toList!889 lt!73755)) (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))

(declare-fun e!92593 () Bool)

(assert (=> d!44983 (= lt!74530 e!92593)))

(declare-fun res!67762 () Bool)

(assert (=> d!44983 (=> (not res!67762) (not e!92593))))

(assert (=> d!44983 (= res!67762 ((_ is Cons!1760) (toList!889 lt!73755)))))

(assert (=> d!44983 (= (contains!923 (toList!889 lt!73755) (tuple2!2685 lt!73447 (minValue!2790 newMap!16))) lt!74530)))

(declare-fun b!142101 () Bool)

(declare-fun e!92594 () Bool)

(assert (=> b!142101 (= e!92593 e!92594)))

(declare-fun res!67761 () Bool)

(assert (=> b!142101 (=> res!67761 e!92594)))

(assert (=> b!142101 (= res!67761 (= (h!2367 (toList!889 lt!73755)) (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))

(declare-fun b!142102 () Bool)

(assert (=> b!142102 (= e!92594 (contains!923 (t!6360 (toList!889 lt!73755)) (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))

(assert (= (and d!44983 res!67762) b!142101))

(assert (= (and b!142101 (not res!67761)) b!142102))

(declare-fun m!171103 () Bool)

(assert (=> d!44983 m!171103))

(declare-fun m!171105 () Bool)

(assert (=> d!44983 m!171105))

(declare-fun m!171107 () Bool)

(assert (=> b!142102 m!171107))

(assert (=> b!140589 d!44983))

(declare-fun d!44985 () Bool)

(declare-fun e!92595 () Bool)

(assert (=> d!44985 e!92595))

(declare-fun res!67764 () Bool)

(assert (=> d!44985 (=> (not res!67764) (not e!92595))))

(declare-fun lt!74533 () ListLongMap!1747)

(assert (=> d!44985 (= res!67764 (contains!921 lt!74533 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74534 () List!1764)

(assert (=> d!44985 (= lt!74533 (ListLongMap!1748 lt!74534))))

(declare-fun lt!74531 () Unit!4395)

(declare-fun lt!74532 () Unit!4395)

(assert (=> d!44985 (= lt!74531 lt!74532)))

(assert (=> d!44985 (= (getValueByKey!175 lt!74534 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44985 (= lt!74532 (lemmaContainsTupThenGetReturnValue!91 lt!74534 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44985 (= lt!74534 (insertStrictlySorted!93 (toList!889 call!15622) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!44985 (= (+!174 call!15622 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74533)))

(declare-fun b!142103 () Bool)

(declare-fun res!67763 () Bool)

(assert (=> b!142103 (=> (not res!67763) (not e!92595))))

(assert (=> b!142103 (= res!67763 (= (getValueByKey!175 (toList!889 lt!74533) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142104 () Bool)

(assert (=> b!142104 (= e!92595 (contains!923 (toList!889 lt!74533) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!44985 res!67764) b!142103))

(assert (= (and b!142103 res!67763) b!142104))

(declare-fun m!171109 () Bool)

(assert (=> d!44985 m!171109))

(declare-fun m!171111 () Bool)

(assert (=> d!44985 m!171111))

(declare-fun m!171113 () Bool)

(assert (=> d!44985 m!171113))

(declare-fun m!171115 () Bool)

(assert (=> d!44985 m!171115))

(declare-fun m!171117 () Bool)

(assert (=> b!142103 m!171117))

(declare-fun m!171119 () Bool)

(assert (=> b!142104 m!171119))

(assert (=> b!140624 d!44985))

(declare-fun d!44987 () Bool)

(declare-fun res!67765 () Bool)

(declare-fun e!92596 () Bool)

(assert (=> d!44987 (=> res!67765 e!92596)))

(assert (=> d!44987 (= res!67765 (and ((_ is Cons!1760) lt!73547) (= (_1!1352 (h!2367 lt!73547)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!44987 (= (containsKey!179 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92596)))

(declare-fun b!142105 () Bool)

(declare-fun e!92597 () Bool)

(assert (=> b!142105 (= e!92596 e!92597)))

(declare-fun res!67766 () Bool)

(assert (=> b!142105 (=> (not res!67766) (not e!92597))))

(assert (=> b!142105 (= res!67766 (and (or (not ((_ is Cons!1760) lt!73547)) (bvsle (_1!1352 (h!2367 lt!73547)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73547) (bvslt (_1!1352 (h!2367 lt!73547)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142106 () Bool)

(assert (=> b!142106 (= e!92597 (containsKey!179 (t!6360 lt!73547) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!44987 (not res!67765)) b!142105))

(assert (= (and b!142105 res!67766) b!142106))

(declare-fun m!171121 () Bool)

(assert (=> b!142106 m!171121))

(assert (=> b!140934 d!44987))

(declare-fun c!26819 () Bool)

(declare-fun call!15745 () Bool)

(declare-fun bm!15742 () Bool)

(assert (=> bm!15742 (= call!15745 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26819 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26312 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (ite c!26312 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) Nil!1760) Nil!1760))))))

(declare-fun b!142108 () Bool)

(declare-fun e!92599 () Bool)

(declare-fun e!92600 () Bool)

(assert (=> b!142108 (= e!92599 e!92600)))

(assert (=> b!142108 (= c!26819 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142109 () Bool)

(assert (=> b!142109 (= e!92600 call!15745)))

(declare-fun d!44989 () Bool)

(declare-fun res!67769 () Bool)

(declare-fun e!92601 () Bool)

(assert (=> d!44989 (=> res!67769 e!92601)))

(assert (=> d!44989 (= res!67769 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!44989 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26312 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) e!92601)))

(declare-fun b!142107 () Bool)

(declare-fun e!92598 () Bool)

(assert (=> b!142107 (= e!92598 (contains!922 (ite c!26312 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) Nil!1760) Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142110 () Bool)

(assert (=> b!142110 (= e!92601 e!92599)))

(declare-fun res!67767 () Bool)

(assert (=> b!142110 (=> (not res!67767) (not e!92599))))

(assert (=> b!142110 (= res!67767 (not e!92598))))

(declare-fun res!67768 () Bool)

(assert (=> b!142110 (=> (not res!67768) (not e!92598))))

(assert (=> b!142110 (= res!67768 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142111 () Bool)

(assert (=> b!142111 (= e!92600 call!15745)))

(assert (= (and d!44989 (not res!67769)) b!142110))

(assert (= (and b!142110 res!67768) b!142107))

(assert (= (and b!142110 res!67767) b!142108))

(assert (= (and b!142108 c!26819) b!142109))

(assert (= (and b!142108 (not c!26819)) b!142111))

(assert (= (or b!142109 b!142111) bm!15742))

(assert (=> bm!15742 m!170483))

(declare-fun m!171123 () Bool)

(assert (=> bm!15742 m!171123))

(assert (=> b!142108 m!170483))

(assert (=> b!142108 m!170483))

(assert (=> b!142108 m!170491))

(assert (=> b!142107 m!170483))

(assert (=> b!142107 m!170483))

(declare-fun m!171125 () Bool)

(assert (=> b!142107 m!171125))

(assert (=> b!142110 m!170483))

(assert (=> b!142110 m!170483))

(assert (=> b!142110 m!170491))

(assert (=> bm!15600 d!44989))

(declare-fun e!92603 () Option!181)

(declare-fun b!142114 () Bool)

(assert (=> b!142114 (= e!92603 (getValueByKey!175 (t!6360 (toList!889 lt!74093)) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142113 () Bool)

(declare-fun e!92602 () Option!181)

(assert (=> b!142113 (= e!92602 e!92603)))

(declare-fun c!26821 () Bool)

(assert (=> b!142113 (= c!26821 (and ((_ is Cons!1760) (toList!889 lt!74093)) (not (= (_1!1352 (h!2367 (toList!889 lt!74093))) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!142115 () Bool)

(assert (=> b!142115 (= e!92603 None!179)))

(declare-fun b!142112 () Bool)

(assert (=> b!142112 (= e!92602 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74093)))))))

(declare-fun c!26820 () Bool)

(declare-fun d!44991 () Bool)

(assert (=> d!44991 (= c!26820 (and ((_ is Cons!1760) (toList!889 lt!74093)) (= (_1!1352 (h!2367 (toList!889 lt!74093))) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!44991 (= (getValueByKey!175 (toList!889 lt!74093) (_1!1352 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!92602)))

(assert (= (and d!44991 c!26820) b!142112))

(assert (= (and d!44991 (not c!26820)) b!142113))

(assert (= (and b!142113 c!26821) b!142114))

(assert (= (and b!142113 (not c!26821)) b!142115))

(declare-fun m!171127 () Bool)

(assert (=> b!142114 m!171127))

(assert (=> b!141075 d!44991))

(declare-fun lt!74535 () Bool)

(declare-fun d!44993 () Bool)

(assert (=> d!44993 (= lt!74535 (select (content!137 (toList!889 lt!73734)) (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))

(declare-fun e!92604 () Bool)

(assert (=> d!44993 (= lt!74535 e!92604)))

(declare-fun res!67771 () Bool)

(assert (=> d!44993 (=> (not res!67771) (not e!92604))))

(assert (=> d!44993 (= res!67771 ((_ is Cons!1760) (toList!889 lt!73734)))))

(assert (=> d!44993 (= (contains!923 (toList!889 lt!73734) (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) lt!74535)))

(declare-fun b!142116 () Bool)

(declare-fun e!92605 () Bool)

(assert (=> b!142116 (= e!92604 e!92605)))

(declare-fun res!67770 () Bool)

(assert (=> b!142116 (=> res!67770 e!92605)))

(assert (=> b!142116 (= res!67770 (= (h!2367 (toList!889 lt!73734)) (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))

(declare-fun b!142117 () Bool)

(assert (=> b!142117 (= e!92605 (contains!923 (t!6360 (toList!889 lt!73734)) (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))

(assert (= (and d!44993 res!67771) b!142116))

(assert (= (and b!142116 (not res!67770)) b!142117))

(declare-fun m!171129 () Bool)

(assert (=> d!44993 m!171129))

(declare-fun m!171131 () Bool)

(assert (=> d!44993 m!171131))

(declare-fun m!171133 () Bool)

(assert (=> b!142117 m!171133))

(assert (=> b!140577 d!44993))

(declare-fun d!44995 () Bool)

(assert (=> d!44995 (= (get!1538 (getValueByKey!175 (toList!889 lt!73464) lt!73456)) (v!3283 (getValueByKey!175 (toList!889 lt!73464) lt!73456)))))

(assert (=> d!43841 d!44995))

(declare-fun b!142120 () Bool)

(declare-fun e!92607 () Option!181)

(assert (=> b!142120 (= e!92607 (getValueByKey!175 (t!6360 (toList!889 lt!73464)) lt!73456))))

(declare-fun b!142119 () Bool)

(declare-fun e!92606 () Option!181)

(assert (=> b!142119 (= e!92606 e!92607)))

(declare-fun c!26823 () Bool)

(assert (=> b!142119 (= c!26823 (and ((_ is Cons!1760) (toList!889 lt!73464)) (not (= (_1!1352 (h!2367 (toList!889 lt!73464))) lt!73456))))))

(declare-fun b!142121 () Bool)

(assert (=> b!142121 (= e!92607 None!179)))

(declare-fun b!142118 () Bool)

(assert (=> b!142118 (= e!92606 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73464)))))))

(declare-fun d!44997 () Bool)

(declare-fun c!26822 () Bool)

(assert (=> d!44997 (= c!26822 (and ((_ is Cons!1760) (toList!889 lt!73464)) (= (_1!1352 (h!2367 (toList!889 lt!73464))) lt!73456)))))

(assert (=> d!44997 (= (getValueByKey!175 (toList!889 lt!73464) lt!73456) e!92606)))

(assert (= (and d!44997 c!26822) b!142118))

(assert (= (and d!44997 (not c!26822)) b!142119))

(assert (= (and b!142119 c!26823) b!142120))

(assert (= (and b!142119 (not c!26823)) b!142121))

(declare-fun m!171135 () Bool)

(assert (=> b!142120 m!171135))

(assert (=> d!43841 d!44997))

(declare-fun e!92609 () Option!181)

(declare-fun b!142124 () Bool)

(assert (=> b!142124 (= e!92609 (getValueByKey!175 (t!6360 (t!6360 (toList!889 call!15514))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(declare-fun b!142123 () Bool)

(declare-fun e!92608 () Option!181)

(assert (=> b!142123 (= e!92608 e!92609)))

(declare-fun c!26825 () Bool)

(assert (=> b!142123 (= c!26825 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15514))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15514)))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))))

(declare-fun b!142125 () Bool)

(assert (=> b!142125 (= e!92609 None!179)))

(declare-fun b!142122 () Bool)

(assert (=> b!142122 (= e!92608 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 call!15514))))))))

(declare-fun c!26824 () Bool)

(declare-fun d!44999 () Bool)

(assert (=> d!44999 (= c!26824 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15514))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15514)))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(assert (=> d!44999 (= (getValueByKey!175 (t!6360 (toList!889 call!15514)) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) e!92608)))

(assert (= (and d!44999 c!26824) b!142122))

(assert (= (and d!44999 (not c!26824)) b!142123))

(assert (= (and b!142123 c!26825) b!142124))

(assert (= (and b!142123 (not c!26825)) b!142125))

(declare-fun m!171137 () Bool)

(assert (=> b!142124 m!171137))

(assert (=> b!140412 d!44999))

(declare-fun d!45001 () Bool)

(declare-fun e!92611 () Bool)

(assert (=> d!45001 e!92611))

(declare-fun res!67772 () Bool)

(assert (=> d!45001 (=> res!67772 e!92611)))

(declare-fun lt!74536 () Bool)

(assert (=> d!45001 (= res!67772 (not lt!74536))))

(declare-fun lt!74539 () Bool)

(assert (=> d!45001 (= lt!74536 lt!74539)))

(declare-fun lt!74537 () Unit!4395)

(declare-fun e!92610 () Unit!4395)

(assert (=> d!45001 (= lt!74537 e!92610)))

(declare-fun c!26826 () Bool)

(assert (=> d!45001 (= c!26826 lt!74539)))

(assert (=> d!45001 (= lt!74539 (containsKey!179 (toList!889 lt!73630) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!45001 (= (contains!921 lt!73630 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!74536)))

(declare-fun b!142126 () Bool)

(declare-fun lt!74538 () Unit!4395)

(assert (=> b!142126 (= e!92610 lt!74538)))

(assert (=> b!142126 (= lt!74538 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73630) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!142126 (isDefined!129 (getValueByKey!175 (toList!889 lt!73630) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!142127 () Bool)

(declare-fun Unit!4496 () Unit!4395)

(assert (=> b!142127 (= e!92610 Unit!4496)))

(declare-fun b!142128 () Bool)

(assert (=> b!142128 (= e!92611 (isDefined!129 (getValueByKey!175 (toList!889 lt!73630) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!45001 c!26826) b!142126))

(assert (= (and d!45001 (not c!26826)) b!142127))

(assert (= (and d!45001 (not res!67772)) b!142128))

(assert (=> d!45001 m!167115))

(declare-fun m!171139 () Bool)

(assert (=> d!45001 m!171139))

(assert (=> b!142126 m!167115))

(declare-fun m!171141 () Bool)

(assert (=> b!142126 m!171141))

(assert (=> b!142126 m!167115))

(declare-fun m!171143 () Bool)

(assert (=> b!142126 m!171143))

(assert (=> b!142126 m!171143))

(declare-fun m!171145 () Bool)

(assert (=> b!142126 m!171145))

(assert (=> b!142128 m!167115))

(assert (=> b!142128 m!171143))

(assert (=> b!142128 m!171143))

(assert (=> b!142128 m!171145))

(assert (=> b!140380 d!45001))

(declare-fun d!45003 () Bool)

(declare-fun lt!74540 () Bool)

(assert (=> d!45003 (= lt!74540 (select (content!136 Nil!1760) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun e!92613 () Bool)

(assert (=> d!45003 (= lt!74540 e!92613)))

(declare-fun res!67774 () Bool)

(assert (=> d!45003 (=> (not res!67774) (not e!92613))))

(assert (=> d!45003 (= res!67774 ((_ is Cons!1759) Nil!1760))))

(assert (=> d!45003 (= (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)) lt!74540)))

(declare-fun b!142129 () Bool)

(declare-fun e!92612 () Bool)

(assert (=> b!142129 (= e!92613 e!92612)))

(declare-fun res!67773 () Bool)

(assert (=> b!142129 (=> res!67773 e!92612)))

(assert (=> b!142129 (= res!67773 (= (h!2366 Nil!1760) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!142130 () Bool)

(assert (=> b!142130 (= e!92612 (contains!922 (t!6359 Nil!1760) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(assert (= (and d!45003 res!67774) b!142129))

(assert (= (and b!142129 (not res!67773)) b!142130))

(assert (=> d!45003 m!167095))

(assert (=> d!45003 m!167711))

(declare-fun m!171147 () Bool)

(assert (=> d!45003 m!171147))

(assert (=> b!142130 m!167711))

(declare-fun m!171149 () Bool)

(assert (=> b!142130 m!171149))

(assert (=> b!140333 d!45003))

(declare-fun d!45005 () Bool)

(declare-fun e!92615 () Bool)

(assert (=> d!45005 e!92615))

(declare-fun res!67775 () Bool)

(assert (=> d!45005 (=> res!67775 e!92615)))

(declare-fun lt!74541 () Bool)

(assert (=> d!45005 (= res!67775 (not lt!74541))))

(declare-fun lt!74544 () Bool)

(assert (=> d!45005 (= lt!74541 lt!74544)))

(declare-fun lt!74542 () Unit!4395)

(declare-fun e!92614 () Unit!4395)

(assert (=> d!45005 (= lt!74542 e!92614)))

(declare-fun c!26827 () Bool)

(assert (=> d!45005 (= c!26827 lt!74544)))

(assert (=> d!45005 (= lt!74544 (containsKey!179 (toList!889 lt!73643) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45005 (= (contains!921 lt!73643 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74541)))

(declare-fun b!142131 () Bool)

(declare-fun lt!74543 () Unit!4395)

(assert (=> b!142131 (= e!92614 lt!74543)))

(assert (=> b!142131 (= lt!74543 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73643) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142131 (isDefined!129 (getValueByKey!175 (toList!889 lt!73643) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142132 () Bool)

(declare-fun Unit!4497 () Unit!4395)

(assert (=> b!142132 (= e!92614 Unit!4497)))

(declare-fun b!142133 () Bool)

(assert (=> b!142133 (= e!92615 (isDefined!129 (getValueByKey!175 (toList!889 lt!73643) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45005 c!26827) b!142131))

(assert (= (and d!45005 (not c!26827)) b!142132))

(assert (= (and d!45005 (not res!67775)) b!142133))

(declare-fun m!171151 () Bool)

(assert (=> d!45005 m!171151))

(declare-fun m!171153 () Bool)

(assert (=> b!142131 m!171153))

(assert (=> b!142131 m!169347))

(assert (=> b!142131 m!169347))

(declare-fun m!171155 () Bool)

(assert (=> b!142131 m!171155))

(assert (=> b!142133 m!169347))

(assert (=> b!142133 m!169347))

(assert (=> b!142133 m!171155))

(assert (=> bm!15599 d!45005))

(declare-fun d!45007 () Bool)

(declare-fun e!92617 () Bool)

(assert (=> d!45007 e!92617))

(declare-fun res!67776 () Bool)

(assert (=> d!45007 (=> res!67776 e!92617)))

(declare-fun lt!74545 () Bool)

(assert (=> d!45007 (= res!67776 (not lt!74545))))

(declare-fun lt!74548 () Bool)

(assert (=> d!45007 (= lt!74545 lt!74548)))

(declare-fun lt!74546 () Unit!4395)

(declare-fun e!92616 () Unit!4395)

(assert (=> d!45007 (= lt!74546 e!92616)))

(declare-fun c!26828 () Bool)

(assert (=> d!45007 (= c!26828 lt!74548)))

(assert (=> d!45007 (= lt!74548 (containsKey!179 (toList!889 lt!74058) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45007 (= (contains!921 lt!74058 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74545)))

(declare-fun b!142134 () Bool)

(declare-fun lt!74547 () Unit!4395)

(assert (=> b!142134 (= e!92616 lt!74547)))

(assert (=> b!142134 (= lt!74547 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74058) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142134 (isDefined!129 (getValueByKey!175 (toList!889 lt!74058) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142135 () Bool)

(declare-fun Unit!4498 () Unit!4395)

(assert (=> b!142135 (= e!92616 Unit!4498)))

(declare-fun b!142136 () Bool)

(assert (=> b!142136 (= e!92617 (isDefined!129 (getValueByKey!175 (toList!889 lt!74058) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45007 c!26828) b!142134))

(assert (= (and d!45007 (not c!26828)) b!142135))

(assert (= (and d!45007 (not res!67776)) b!142136))

(assert (=> d!45007 m!166967))

(declare-fun m!171157 () Bool)

(assert (=> d!45007 m!171157))

(assert (=> b!142134 m!166967))

(declare-fun m!171159 () Bool)

(assert (=> b!142134 m!171159))

(assert (=> b!142134 m!166967))

(declare-fun m!171161 () Bool)

(assert (=> b!142134 m!171161))

(assert (=> b!142134 m!171161))

(declare-fun m!171163 () Bool)

(assert (=> b!142134 m!171163))

(assert (=> b!142136 m!166967))

(assert (=> b!142136 m!171161))

(assert (=> b!142136 m!171161))

(assert (=> b!142136 m!171163))

(assert (=> b!141037 d!45007))

(declare-fun d!45009 () Bool)

(assert (=> d!45009 (= ($colon$colon!93 e!91646 (ite c!26350 (h!2367 (toList!889 lt!73140)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (Cons!1760 (ite c!26350 (h!2367 (toList!889 lt!73140)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!91646))))

(assert (=> bm!15612 d!45009))

(declare-fun d!45011 () Bool)

(assert (=> d!45011 (= (size!2590 (_2!1353 lt!73223)) (bvadd (_size!625 (_2!1353 lt!73223)) (bvsdiv (bvadd (extraKeys!2695 (_2!1353 lt!73223)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!140783 d!45011))

(declare-fun d!45013 () Bool)

(assert (=> d!45013 (= (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443)) (not (isEmpty!422 (getValueByKey!175 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443))))))

(declare-fun bs!5994 () Bool)

(assert (= bs!5994 d!45013))

(assert (=> bs!5994 m!168719))

(declare-fun m!171165 () Bool)

(assert (=> bs!5994 m!171165))

(assert (=> b!140825 d!45013))

(declare-fun e!92619 () Option!181)

(declare-fun b!142139 () Bool)

(assert (=> b!142139 (= e!92619 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))) lt!73443))))

(declare-fun b!142138 () Bool)

(declare-fun e!92618 () Option!181)

(assert (=> b!142138 (= e!92618 e!92619)))

(declare-fun c!26830 () Bool)

(assert (=> b!142138 (= c!26830 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))))) lt!73443))))))

(declare-fun b!142140 () Bool)

(assert (=> b!142140 (= e!92619 None!179)))

(declare-fun b!142137 () Bool)

(assert (=> b!142137 (= e!92618 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))))))))

(declare-fun c!26829 () Bool)

(declare-fun d!45015 () Bool)

(assert (=> d!45015 (= c!26829 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))))) lt!73443)))))

(assert (=> d!45015 (= (getValueByKey!175 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443) e!92618)))

(assert (= (and d!45015 c!26829) b!142137))

(assert (= (and d!45015 (not c!26829)) b!142138))

(assert (= (and b!142138 c!26830) b!142139))

(assert (= (and b!142138 (not c!26830)) b!142140))

(declare-fun m!171167 () Bool)

(assert (=> b!142139 m!171167))

(assert (=> b!140825 d!45015))

(declare-fun d!45017 () Bool)

(declare-fun e!92621 () Bool)

(assert (=> d!45017 e!92621))

(declare-fun res!67777 () Bool)

(assert (=> d!45017 (=> res!67777 e!92621)))

(declare-fun lt!74549 () Bool)

(assert (=> d!45017 (= res!67777 (not lt!74549))))

(declare-fun lt!74552 () Bool)

(assert (=> d!45017 (= lt!74549 lt!74552)))

(declare-fun lt!74550 () Unit!4395)

(declare-fun e!92620 () Unit!4395)

(assert (=> d!45017 (= lt!74550 e!92620)))

(declare-fun c!26831 () Bool)

(assert (=> d!45017 (= c!26831 lt!74552)))

(assert (=> d!45017 (= lt!74552 (containsKey!179 (toList!889 lt!74058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45017 (= (contains!921 lt!74058 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74549)))

(declare-fun b!142141 () Bool)

(declare-fun lt!74551 () Unit!4395)

(assert (=> b!142141 (= e!92620 lt!74551)))

(assert (=> b!142141 (= lt!74551 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142141 (isDefined!129 (getValueByKey!175 (toList!889 lt!74058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142142 () Bool)

(declare-fun Unit!4499 () Unit!4395)

(assert (=> b!142142 (= e!92620 Unit!4499)))

(declare-fun b!142143 () Bool)

(assert (=> b!142143 (= e!92621 (isDefined!129 (getValueByKey!175 (toList!889 lt!74058) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45017 c!26831) b!142141))

(assert (= (and d!45017 (not c!26831)) b!142142))

(assert (= (and d!45017 (not res!67777)) b!142143))

(declare-fun m!171169 () Bool)

(assert (=> d!45017 m!171169))

(declare-fun m!171171 () Bool)

(assert (=> b!142141 m!171171))

(declare-fun m!171173 () Bool)

(assert (=> b!142141 m!171173))

(assert (=> b!142141 m!171173))

(declare-fun m!171175 () Bool)

(assert (=> b!142141 m!171175))

(assert (=> b!142143 m!171173))

(assert (=> b!142143 m!171173))

(assert (=> b!142143 m!171175))

(assert (=> bm!15670 d!45017))

(assert (=> b!140250 d!43605))

(declare-fun d!45019 () Bool)

(assert (=> d!45019 (= (isEmpty!423 lt!73924) (isEmpty!424 (toList!889 lt!73924)))))

(declare-fun bs!5995 () Bool)

(assert (= bs!5995 d!45019))

(declare-fun m!171177 () Bool)

(assert (=> bs!5995 m!171177))

(assert (=> b!140845 d!45019))

(declare-fun d!45021 () Bool)

(declare-fun res!67778 () Bool)

(declare-fun e!92622 () Bool)

(assert (=> d!45021 (=> res!67778 e!92622)))

(assert (=> d!45021 (= res!67778 (and ((_ is Cons!1760) (toList!889 lt!73391)) (= (_1!1352 (h!2367 (toList!889 lt!73391))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45021 (= (containsKey!179 (toList!889 lt!73391) #b0000000000000000000000000000000000000000000000000000000000000000) e!92622)))

(declare-fun b!142144 () Bool)

(declare-fun e!92623 () Bool)

(assert (=> b!142144 (= e!92622 e!92623)))

(declare-fun res!67779 () Bool)

(assert (=> b!142144 (=> (not res!67779) (not e!92623))))

(assert (=> b!142144 (= res!67779 (and (or (not ((_ is Cons!1760) (toList!889 lt!73391))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73391))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73391)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73391))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142145 () Bool)

(assert (=> b!142145 (= e!92623 (containsKey!179 (t!6360 (toList!889 lt!73391)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45021 (not res!67778)) b!142144))

(assert (= (and b!142144 res!67779) b!142145))

(declare-fun m!171179 () Bool)

(assert (=> b!142145 m!171179))

(assert (=> d!43975 d!45021))

(declare-fun d!45023 () Bool)

(declare-fun e!92625 () Bool)

(assert (=> d!45023 e!92625))

(declare-fun res!67780 () Bool)

(assert (=> d!45023 (=> res!67780 e!92625)))

(declare-fun lt!74553 () Bool)

(assert (=> d!45023 (= res!67780 (not lt!74553))))

(declare-fun lt!74556 () Bool)

(assert (=> d!45023 (= lt!74553 lt!74556)))

(declare-fun lt!74554 () Unit!4395)

(declare-fun e!92624 () Unit!4395)

(assert (=> d!45023 (= lt!74554 e!92624)))

(declare-fun c!26832 () Bool)

(assert (=> d!45023 (= c!26832 lt!74556)))

(assert (=> d!45023 (= lt!74556 (containsKey!179 (toList!889 lt!73863) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45023 (= (contains!921 lt!73863 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74553)))

(declare-fun b!142146 () Bool)

(declare-fun lt!74555 () Unit!4395)

(assert (=> b!142146 (= e!92624 lt!74555)))

(assert (=> b!142146 (= lt!74555 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73863) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142146 (isDefined!129 (getValueByKey!175 (toList!889 lt!73863) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142147 () Bool)

(declare-fun Unit!4500 () Unit!4395)

(assert (=> b!142147 (= e!92624 Unit!4500)))

(declare-fun b!142148 () Bool)

(assert (=> b!142148 (= e!92625 (isDefined!129 (getValueByKey!175 (toList!889 lt!73863) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45023 c!26832) b!142146))

(assert (= (and d!45023 (not c!26832)) b!142147))

(assert (= (and d!45023 (not res!67780)) b!142148))

(declare-fun m!171181 () Bool)

(assert (=> d!45023 m!171181))

(declare-fun m!171183 () Bool)

(assert (=> b!142146 m!171183))

(assert (=> b!142146 m!169577))

(assert (=> b!142146 m!169577))

(declare-fun m!171185 () Bool)

(assert (=> b!142146 m!171185))

(assert (=> b!142148 m!169577))

(assert (=> b!142148 m!169577))

(assert (=> b!142148 m!171185))

(assert (=> bm!15641 d!45023))

(declare-fun d!45025 () Bool)

(assert (=> d!45025 (= (apply!120 lt!73826 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73826) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5996 () Bool)

(assert (= bs!5996 d!45025))

(assert (=> bs!5996 m!169343))

(assert (=> bs!5996 m!169343))

(declare-fun m!171187 () Bool)

(assert (=> bs!5996 m!171187))

(assert (=> b!140706 d!45025))

(declare-fun lt!74557 () Bool)

(declare-fun d!45027 () Bool)

(assert (=> d!45027 (= lt!74557 (select (content!137 (toList!889 lt!74107)) (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun e!92626 () Bool)

(assert (=> d!45027 (= lt!74557 e!92626)))

(declare-fun res!67782 () Bool)

(assert (=> d!45027 (=> (not res!67782) (not e!92626))))

(assert (=> d!45027 (= res!67782 ((_ is Cons!1760) (toList!889 lt!74107)))))

(assert (=> d!45027 (= (contains!923 (toList!889 lt!74107) (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!74557)))

(declare-fun b!142149 () Bool)

(declare-fun e!92627 () Bool)

(assert (=> b!142149 (= e!92626 e!92627)))

(declare-fun res!67781 () Bool)

(assert (=> b!142149 (=> res!67781 e!92627)))

(assert (=> b!142149 (= res!67781 (= (h!2367 (toList!889 lt!74107)) (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(declare-fun b!142150 () Bool)

(assert (=> b!142150 (= e!92627 (contains!923 (t!6360 (toList!889 lt!74107)) (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))

(assert (= (and d!45027 res!67782) b!142149))

(assert (= (and b!142149 (not res!67781)) b!142150))

(declare-fun m!171189 () Bool)

(assert (=> d!45027 m!171189))

(declare-fun m!171191 () Bool)

(assert (=> d!45027 m!171191))

(declare-fun m!171193 () Bool)

(assert (=> b!142150 m!171193))

(assert (=> b!141084 d!45027))

(declare-fun b!142153 () Bool)

(declare-fun e!92629 () Option!181)

(assert (=> b!142153 (= e!92629 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73149))) lt!73141))))

(declare-fun b!142152 () Bool)

(declare-fun e!92628 () Option!181)

(assert (=> b!142152 (= e!92628 e!92629)))

(declare-fun c!26834 () Bool)

(assert (=> b!142152 (= c!26834 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73149))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73149)))) lt!73141))))))

(declare-fun b!142154 () Bool)

(assert (=> b!142154 (= e!92629 None!179)))

(declare-fun b!142151 () Bool)

(assert (=> b!142151 (= e!92628 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73149))))))))

(declare-fun d!45029 () Bool)

(declare-fun c!26833 () Bool)

(assert (=> d!45029 (= c!26833 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73149))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73149)))) lt!73141)))))

(assert (=> d!45029 (= (getValueByKey!175 (t!6360 (toList!889 lt!73149)) lt!73141) e!92628)))

(assert (= (and d!45029 c!26833) b!142151))

(assert (= (and d!45029 (not c!26833)) b!142152))

(assert (= (and b!142152 c!26834) b!142153))

(assert (= (and b!142152 (not c!26834)) b!142154))

(declare-fun m!171195 () Bool)

(assert (=> b!142153 m!171195))

(assert (=> b!140280 d!45029))

(declare-fun d!45031 () Bool)

(declare-fun e!92630 () Bool)

(assert (=> d!45031 e!92630))

(declare-fun res!67784 () Bool)

(assert (=> d!45031 (=> (not res!67784) (not e!92630))))

(declare-fun lt!74560 () ListLongMap!1747)

(assert (=> d!45031 (= res!67784 (contains!921 lt!74560 (_1!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!74561 () List!1764)

(assert (=> d!45031 (= lt!74560 (ListLongMap!1748 lt!74561))))

(declare-fun lt!74558 () Unit!4395)

(declare-fun lt!74559 () Unit!4395)

(assert (=> d!45031 (= lt!74558 lt!74559)))

(assert (=> d!45031 (= (getValueByKey!175 lt!74561 (_1!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!180 (_2!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45031 (= lt!74559 (lemmaContainsTupThenGetReturnValue!91 lt!74561 (_1!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45031 (= lt!74561 (insertStrictlySorted!93 (toList!889 (ite c!26297 call!15597 (ite c!26300 call!15599 call!15596))) (_1!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45031 (= (+!174 (ite c!26297 call!15597 (ite c!26300 call!15599 call!15596)) (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74560)))

(declare-fun b!142155 () Bool)

(declare-fun res!67783 () Bool)

(assert (=> b!142155 (=> (not res!67783) (not e!92630))))

(assert (=> b!142155 (= res!67783 (= (getValueByKey!175 (toList!889 lt!74560) (_1!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!180 (_2!1352 (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142156 () Bool)

(assert (=> b!142156 (= e!92630 (contains!923 (toList!889 lt!74560) (ite (or c!26297 c!26300) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45031 res!67784) b!142155))

(assert (= (and b!142155 res!67783) b!142156))

(declare-fun m!171197 () Bool)

(assert (=> d!45031 m!171197))

(declare-fun m!171199 () Bool)

(assert (=> d!45031 m!171199))

(declare-fun m!171201 () Bool)

(assert (=> d!45031 m!171201))

(declare-fun m!171203 () Bool)

(assert (=> d!45031 m!171203))

(declare-fun m!171205 () Bool)

(assert (=> b!142155 m!171205))

(declare-fun m!171207 () Bool)

(assert (=> b!142156 m!171207))

(assert (=> bm!15595 d!45031))

(declare-fun b!142157 () Bool)

(declare-fun res!67786 () Bool)

(declare-fun e!92635 () Bool)

(assert (=> b!142157 (=> (not res!67786) (not e!92635))))

(declare-fun lt!74564 () ListLongMap!1747)

(assert (=> b!142157 (= res!67786 (not (contains!921 lt!74564 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142158 () Bool)

(assert (=> b!142158 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!142158 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(declare-fun e!92631 () Bool)

(assert (=> b!142158 (= e!92631 (= (apply!120 lt!74564 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142159 () Bool)

(declare-fun e!92637 () ListLongMap!1747)

(declare-fun e!92634 () ListLongMap!1747)

(assert (=> b!142159 (= e!92637 e!92634)))

(declare-fun c!26837 () Bool)

(assert (=> b!142159 (= c!26837 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142160 () Bool)

(declare-fun e!92632 () Bool)

(assert (=> b!142160 (= e!92632 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142160 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!45033 () Bool)

(assert (=> d!45033 e!92635))

(declare-fun res!67788 () Bool)

(assert (=> d!45033 (=> (not res!67788) (not e!92635))))

(assert (=> d!45033 (= res!67788 (not (contains!921 lt!74564 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45033 (= lt!74564 e!92637)))

(declare-fun c!26838 () Bool)

(assert (=> d!45033 (= c!26838 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!45033 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45033 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74564)))

(declare-fun b!142161 () Bool)

(declare-fun e!92633 () Bool)

(declare-fun e!92636 () Bool)

(assert (=> b!142161 (= e!92633 e!92636)))

(declare-fun c!26835 () Bool)

(assert (=> b!142161 (= c!26835 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142162 () Bool)

(assert (=> b!142162 (= e!92636 (= lt!74564 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!142163 () Bool)

(assert (=> b!142163 (= e!92633 e!92631)))

(assert (=> b!142163 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67787 () Bool)

(assert (=> b!142163 (= res!67787 (contains!921 lt!74564 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142163 (=> (not res!67787) (not e!92631))))

(declare-fun b!142164 () Bool)

(declare-fun call!15746 () ListLongMap!1747)

(assert (=> b!142164 (= e!92634 call!15746)))

(declare-fun bm!15743 () Bool)

(assert (=> bm!15743 (= call!15746 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73240 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!142165 () Bool)

(assert (=> b!142165 (= e!92637 (ListLongMap!1748 Nil!1761))))

(declare-fun b!142166 () Bool)

(declare-fun lt!74562 () Unit!4395)

(declare-fun lt!74568 () Unit!4395)

(assert (=> b!142166 (= lt!74562 lt!74568)))

(declare-fun lt!74566 () (_ BitVec 64))

(declare-fun lt!74565 () V!3555)

(declare-fun lt!74567 () (_ BitVec 64))

(declare-fun lt!74563 () ListLongMap!1747)

(assert (=> b!142166 (not (contains!921 (+!174 lt!74563 (tuple2!2685 lt!74567 lt!74565)) lt!74566))))

(assert (=> b!142166 (= lt!74568 (addStillNotContains!66 lt!74563 lt!74567 lt!74565 lt!74566))))

(assert (=> b!142166 (= lt!74566 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142166 (= lt!74565 (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142166 (= lt!74567 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!142166 (= lt!74563 call!15746)))

(assert (=> b!142166 (= e!92634 (+!174 call!15746 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142167 () Bool)

(assert (=> b!142167 (= e!92635 e!92633)))

(declare-fun c!26836 () Bool)

(assert (=> b!142167 (= c!26836 e!92632)))

(declare-fun res!67785 () Bool)

(assert (=> b!142167 (=> (not res!67785) (not e!92632))))

(assert (=> b!142167 (= res!67785 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142168 () Bool)

(assert (=> b!142168 (= e!92636 (isEmpty!423 lt!74564))))

(assert (= (and d!45033 c!26838) b!142165))

(assert (= (and d!45033 (not c!26838)) b!142159))

(assert (= (and b!142159 c!26837) b!142166))

(assert (= (and b!142159 (not c!26837)) b!142164))

(assert (= (or b!142166 b!142164) bm!15743))

(assert (= (and d!45033 res!67788) b!142157))

(assert (= (and b!142157 res!67786) b!142167))

(assert (= (and b!142167 res!67785) b!142160))

(assert (= (and b!142167 c!26836) b!142163))

(assert (= (and b!142167 (not c!26836)) b!142161))

(assert (= (and b!142163 res!67787) b!142158))

(assert (= (and b!142161 c!26835) b!142162))

(assert (= (and b!142161 (not c!26835)) b!142168))

(declare-fun b_lambda!6401 () Bool)

(assert (=> (not b_lambda!6401) (not b!142158)))

(assert (=> b!142158 t!6366))

(declare-fun b_and!8897 () Bool)

(assert (= b_and!8893 (and (=> t!6366 result!4203) b_and!8897)))

(assert (=> b!142158 t!6368))

(declare-fun b_and!8899 () Bool)

(assert (= b_and!8895 (and (=> t!6368 result!4205) b_and!8899)))

(declare-fun b_lambda!6403 () Bool)

(assert (=> (not b_lambda!6403) (not b!142166)))

(assert (=> b!142166 t!6366))

(declare-fun b_and!8901 () Bool)

(assert (= b_and!8897 (and (=> t!6366 result!4203) b_and!8901)))

(assert (=> b!142166 t!6368))

(declare-fun b_and!8903 () Bool)

(assert (= b_and!8899 (and (=> t!6368 result!4205) b_and!8903)))

(assert (=> b!142162 m!166731))

(declare-fun m!171209 () Bool)

(assert (=> b!142162 m!171209))

(assert (=> b!142160 m!166967))

(assert (=> b!142160 m!166967))

(assert (=> b!142160 m!166981))

(declare-fun m!171211 () Bool)

(assert (=> b!142166 m!171211))

(declare-fun m!171213 () Bool)

(assert (=> b!142166 m!171213))

(assert (=> b!142166 m!166967))

(declare-fun m!171215 () Bool)

(assert (=> b!142166 m!171215))

(declare-fun m!171217 () Bool)

(assert (=> b!142166 m!171217))

(assert (=> b!142166 m!166971))

(assert (=> b!142166 m!166973))

(assert (=> b!142166 m!166973))

(assert (=> b!142166 m!166971))

(assert (=> b!142166 m!166975))

(assert (=> b!142166 m!171211))

(assert (=> b!142163 m!166967))

(assert (=> b!142163 m!166967))

(declare-fun m!171219 () Bool)

(assert (=> b!142163 m!171219))

(assert (=> b!142159 m!166967))

(assert (=> b!142159 m!166967))

(assert (=> b!142159 m!166981))

(assert (=> b!142158 m!166967))

(assert (=> b!142158 m!166967))

(declare-fun m!171221 () Bool)

(assert (=> b!142158 m!171221))

(assert (=> b!142158 m!166971))

(assert (=> b!142158 m!166973))

(assert (=> b!142158 m!166973))

(assert (=> b!142158 m!166971))

(assert (=> b!142158 m!166975))

(declare-fun m!171223 () Bool)

(assert (=> b!142168 m!171223))

(declare-fun m!171225 () Bool)

(assert (=> d!45033 m!171225))

(assert (=> d!45033 m!166961))

(declare-fun m!171227 () Bool)

(assert (=> b!142157 m!171227))

(assert (=> bm!15743 m!166731))

(assert (=> bm!15743 m!171209))

(assert (=> bm!15666 d!45033))

(declare-fun d!45035 () Bool)

(declare-fun res!67789 () Bool)

(declare-fun e!92638 () Bool)

(assert (=> d!45035 (=> res!67789 e!92638)))

(assert (=> d!45035 (= res!67789 (and ((_ is Cons!1760) (toList!889 lt!73528)) (= (_1!1352 (h!2367 (toList!889 lt!73528))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45035 (= (containsKey!179 (toList!889 lt!73528) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!92638)))

(declare-fun b!142169 () Bool)

(declare-fun e!92639 () Bool)

(assert (=> b!142169 (= e!92638 e!92639)))

(declare-fun res!67790 () Bool)

(assert (=> b!142169 (=> (not res!67790) (not e!92639))))

(assert (=> b!142169 (= res!67790 (and (or (not ((_ is Cons!1760) (toList!889 lt!73528))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73528))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1760) (toList!889 lt!73528)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73528))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142170 () Bool)

(assert (=> b!142170 (= e!92639 (containsKey!179 (t!6360 (toList!889 lt!73528)) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45035 (not res!67789)) b!142169))

(assert (= (and b!142169 res!67790) b!142170))

(declare-fun m!171229 () Bool)

(assert (=> b!142170 m!171229))

(assert (=> d!43741 d!45035))

(assert (=> d!43925 d!43903))

(declare-fun d!45037 () Bool)

(assert (=> d!45037 (= (arrayCountValidKeys!0 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (bvadd (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!45037 true))

(declare-fun _$85!15 () Unit!4395)

(assert (=> d!45037 (= (choose!2 lt!73355 (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) _$85!15)))

(declare-fun bs!5997 () Bool)

(assert (= bs!5997 d!45037))

(assert (=> bs!5997 m!167039))

(assert (=> d!43925 d!45037))

(declare-fun d!45039 () Bool)

(declare-fun res!67791 () Bool)

(declare-fun e!92640 () Bool)

(assert (=> d!45039 (=> res!67791 e!92640)))

(assert (=> d!45039 (= res!67791 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73142)))))

(assert (=> d!45039 (= (containsKey!179 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73142) e!92640)))

(declare-fun b!142171 () Bool)

(declare-fun e!92641 () Bool)

(assert (=> b!142171 (= e!92640 e!92641)))

(declare-fun res!67792 () Bool)

(assert (=> b!142171 (=> (not res!67792) (not e!92641))))

(assert (=> b!142171 (= res!67792 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73142)) ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73142)))))

(declare-fun b!142172 () Bool)

(assert (=> b!142172 (= e!92641 (containsKey!179 (t!6360 (t!6360 (toList!889 (+!174 lt!73144 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73142))))

(assert (= (and d!45039 (not res!67791)) b!142171))

(assert (= (and b!142171 res!67792) b!142172))

(declare-fun m!171231 () Bool)

(assert (=> b!142172 m!171231))

(assert (=> b!140680 d!45039))

(declare-fun d!45041 () Bool)

(declare-fun res!67793 () Bool)

(declare-fun e!92642 () Bool)

(assert (=> d!45041 (=> res!67793 e!92642)))

(assert (=> d!45041 (= res!67793 (or ((_ is Nil!1761) lt!73713) ((_ is Nil!1761) (t!6360 lt!73713))))))

(assert (=> d!45041 (= (isStrictlySorted!320 lt!73713) e!92642)))

(declare-fun b!142173 () Bool)

(declare-fun e!92643 () Bool)

(assert (=> b!142173 (= e!92642 e!92643)))

(declare-fun res!67794 () Bool)

(assert (=> b!142173 (=> (not res!67794) (not e!92643))))

(assert (=> b!142173 (= res!67794 (bvslt (_1!1352 (h!2367 lt!73713)) (_1!1352 (h!2367 (t!6360 lt!73713)))))))

(declare-fun b!142174 () Bool)

(assert (=> b!142174 (= e!92643 (isStrictlySorted!320 (t!6360 lt!73713)))))

(assert (= (and d!45041 (not res!67793)) b!142173))

(assert (= (and b!142173 res!67794) b!142174))

(declare-fun m!171233 () Bool)

(assert (=> b!142174 m!171233))

(assert (=> d!43779 d!45041))

(declare-fun d!45043 () Bool)

(declare-fun res!67795 () Bool)

(declare-fun e!92644 () Bool)

(assert (=> d!45043 (=> res!67795 e!92644)))

(assert (=> d!45043 (= res!67795 (or ((_ is Nil!1761) (toList!889 lt!73140)) ((_ is Nil!1761) (t!6360 (toList!889 lt!73140)))))))

(assert (=> d!45043 (= (isStrictlySorted!320 (toList!889 lt!73140)) e!92644)))

(declare-fun b!142175 () Bool)

(declare-fun e!92645 () Bool)

(assert (=> b!142175 (= e!92644 e!92645)))

(declare-fun res!67796 () Bool)

(assert (=> b!142175 (=> (not res!67796) (not e!92645))))

(assert (=> b!142175 (= res!67796 (bvslt (_1!1352 (h!2367 (toList!889 lt!73140))) (_1!1352 (h!2367 (t!6360 (toList!889 lt!73140))))))))

(declare-fun b!142176 () Bool)

(assert (=> b!142176 (= e!92645 (isStrictlySorted!320 (t!6360 (toList!889 lt!73140))))))

(assert (= (and d!45043 (not res!67795)) b!142175))

(assert (= (and b!142175 res!67796) b!142176))

(assert (=> b!142176 m!170749))

(assert (=> d!43779 d!45043))

(assert (=> d!43871 d!43517))

(assert (=> d!43871 d!43519))

(declare-fun lt!74569 () Bool)

(declare-fun d!45045 () Bool)

(assert (=> d!45045 (= lt!74569 (select (content!137 (toList!889 lt!73747)) (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))

(declare-fun e!92646 () Bool)

(assert (=> d!45045 (= lt!74569 e!92646)))

(declare-fun res!67798 () Bool)

(assert (=> d!45045 (=> (not res!67798) (not e!92646))))

(assert (=> d!45045 (= res!67798 ((_ is Cons!1760) (toList!889 lt!73747)))))

(assert (=> d!45045 (= (contains!923 (toList!889 lt!73747) (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) lt!74569)))

(declare-fun b!142177 () Bool)

(declare-fun e!92647 () Bool)

(assert (=> b!142177 (= e!92646 e!92647)))

(declare-fun res!67797 () Bool)

(assert (=> b!142177 (=> res!67797 e!92647)))

(assert (=> b!142177 (= res!67797 (= (h!2367 (toList!889 lt!73747)) (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))

(declare-fun b!142178 () Bool)

(assert (=> b!142178 (= e!92647 (contains!923 (t!6360 (toList!889 lt!73747)) (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))

(assert (= (and d!45045 res!67798) b!142177))

(assert (= (and b!142177 (not res!67797)) b!142178))

(declare-fun m!171235 () Bool)

(assert (=> d!45045 m!171235))

(declare-fun m!171237 () Bool)

(assert (=> d!45045 m!171237))

(declare-fun m!171239 () Bool)

(assert (=> b!142178 m!171239))

(assert (=> b!140585 d!45045))

(declare-fun d!45047 () Bool)

(declare-fun e!92649 () Bool)

(assert (=> d!45047 e!92649))

(declare-fun res!67799 () Bool)

(assert (=> d!45047 (=> res!67799 e!92649)))

(declare-fun lt!74570 () Bool)

(assert (=> d!45047 (= res!67799 (not lt!74570))))

(declare-fun lt!74573 () Bool)

(assert (=> d!45047 (= lt!74570 lt!74573)))

(declare-fun lt!74571 () Unit!4395)

(declare-fun e!92648 () Unit!4395)

(assert (=> d!45047 (= lt!74571 e!92648)))

(declare-fun c!26839 () Bool)

(assert (=> d!45047 (= c!26839 lt!74573)))

(assert (=> d!45047 (= lt!74573 (containsKey!179 (toList!889 lt!73915) (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(assert (=> d!45047 (= (contains!921 lt!73915 (_1!1352 (tuple2!2685 lt!73444 lt!73442))) lt!74570)))

(declare-fun b!142179 () Bool)

(declare-fun lt!74572 () Unit!4395)

(assert (=> b!142179 (= e!92648 lt!74572)))

(assert (=> b!142179 (= lt!74572 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73915) (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(assert (=> b!142179 (isDefined!129 (getValueByKey!175 (toList!889 lt!73915) (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun b!142180 () Bool)

(declare-fun Unit!4501 () Unit!4395)

(assert (=> b!142180 (= e!92648 Unit!4501)))

(declare-fun b!142181 () Bool)

(assert (=> b!142181 (= e!92649 (isDefined!129 (getValueByKey!175 (toList!889 lt!73915) (_1!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(assert (= (and d!45047 c!26839) b!142179))

(assert (= (and d!45047 (not c!26839)) b!142180))

(assert (= (and d!45047 (not res!67799)) b!142181))

(declare-fun m!171241 () Bool)

(assert (=> d!45047 m!171241))

(declare-fun m!171243 () Bool)

(assert (=> b!142179 m!171243))

(assert (=> b!142179 m!168711))

(assert (=> b!142179 m!168711))

(declare-fun m!171245 () Bool)

(assert (=> b!142179 m!171245))

(assert (=> b!142181 m!168711))

(assert (=> b!142181 m!168711))

(assert (=> b!142181 m!171245))

(assert (=> d!43957 d!45047))

(declare-fun e!92651 () Option!181)

(declare-fun b!142184 () Bool)

(assert (=> b!142184 (= e!92651 (getValueByKey!175 (t!6360 lt!73916) (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun b!142183 () Bool)

(declare-fun e!92650 () Option!181)

(assert (=> b!142183 (= e!92650 e!92651)))

(declare-fun c!26841 () Bool)

(assert (=> b!142183 (= c!26841 (and ((_ is Cons!1760) lt!73916) (not (= (_1!1352 (h!2367 lt!73916)) (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))))

(declare-fun b!142185 () Bool)

(assert (=> b!142185 (= e!92651 None!179)))

(declare-fun b!142182 () Bool)

(assert (=> b!142182 (= e!92650 (Some!180 (_2!1352 (h!2367 lt!73916))))))

(declare-fun d!45049 () Bool)

(declare-fun c!26840 () Bool)

(assert (=> d!45049 (= c!26840 (and ((_ is Cons!1760) lt!73916) (= (_1!1352 (h!2367 lt!73916)) (_1!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(assert (=> d!45049 (= (getValueByKey!175 lt!73916 (_1!1352 (tuple2!2685 lt!73444 lt!73442))) e!92650)))

(assert (= (and d!45049 c!26840) b!142182))

(assert (= (and d!45049 (not c!26840)) b!142183))

(assert (= (and b!142183 c!26841) b!142184))

(assert (= (and b!142183 (not c!26841)) b!142185))

(declare-fun m!171247 () Bool)

(assert (=> b!142184 m!171247))

(assert (=> d!43957 d!45049))

(declare-fun d!45051 () Bool)

(assert (=> d!45051 (= (getValueByKey!175 lt!73916 (_1!1352 (tuple2!2685 lt!73444 lt!73442))) (Some!180 (_2!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun lt!74574 () Unit!4395)

(assert (=> d!45051 (= lt!74574 (choose!873 lt!73916 (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun e!92652 () Bool)

(assert (=> d!45051 e!92652))

(declare-fun res!67800 () Bool)

(assert (=> d!45051 (=> (not res!67800) (not e!92652))))

(assert (=> d!45051 (= res!67800 (isStrictlySorted!320 lt!73916))))

(assert (=> d!45051 (= (lemmaContainsTupThenGetReturnValue!91 lt!73916 (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442))) lt!74574)))

(declare-fun b!142186 () Bool)

(declare-fun res!67801 () Bool)

(assert (=> b!142186 (=> (not res!67801) (not e!92652))))

(assert (=> b!142186 (= res!67801 (containsKey!179 lt!73916 (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun b!142187 () Bool)

(assert (=> b!142187 (= e!92652 (contains!923 lt!73916 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(assert (= (and d!45051 res!67800) b!142186))

(assert (= (and b!142186 res!67801) b!142187))

(assert (=> d!45051 m!168705))

(declare-fun m!171249 () Bool)

(assert (=> d!45051 m!171249))

(declare-fun m!171251 () Bool)

(assert (=> d!45051 m!171251))

(declare-fun m!171253 () Bool)

(assert (=> b!142186 m!171253))

(declare-fun m!171255 () Bool)

(assert (=> b!142187 m!171255))

(assert (=> d!43957 d!45051))

(declare-fun d!45053 () Bool)

(declare-fun e!92653 () Bool)

(assert (=> d!45053 e!92653))

(declare-fun res!67803 () Bool)

(assert (=> d!45053 (=> (not res!67803) (not e!92653))))

(declare-fun lt!74575 () List!1764)

(assert (=> d!45053 (= res!67803 (isStrictlySorted!320 lt!74575))))

(declare-fun e!92655 () List!1764)

(assert (=> d!45053 (= lt!74575 e!92655)))

(declare-fun c!26842 () Bool)

(assert (=> d!45053 (= c!26842 (and ((_ is Cons!1760) (toList!889 lt!73440)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73440))) (_1!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(assert (=> d!45053 (isStrictlySorted!320 (toList!889 lt!73440))))

(assert (=> d!45053 (= (insertStrictlySorted!93 (toList!889 lt!73440) (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442))) lt!74575)))

(declare-fun b!142188 () Bool)

(assert (=> b!142188 (= e!92653 (contains!923 lt!74575 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(declare-fun call!15747 () List!1764)

(declare-fun e!92656 () List!1764)

(declare-fun bm!15744 () Bool)

(assert (=> bm!15744 (= call!15747 ($colon$colon!93 e!92656 (ite c!26842 (h!2367 (toList!889 lt!73440)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442))))))))

(declare-fun c!26845 () Bool)

(assert (=> bm!15744 (= c!26845 c!26842)))

(declare-fun b!142189 () Bool)

(assert (=> b!142189 (= e!92655 call!15747)))

(declare-fun b!142190 () Bool)

(assert (=> b!142190 (= e!92656 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73440)) (_1!1352 (tuple2!2685 lt!73444 lt!73442)) (_2!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun b!142191 () Bool)

(declare-fun e!92657 () List!1764)

(declare-fun call!15748 () List!1764)

(assert (=> b!142191 (= e!92657 call!15748)))

(declare-fun bm!15745 () Bool)

(assert (=> bm!15745 (= call!15748 call!15747)))

(declare-fun b!142192 () Bool)

(declare-fun e!92654 () List!1764)

(declare-fun call!15749 () List!1764)

(assert (=> b!142192 (= e!92654 call!15749)))

(declare-fun b!142193 () Bool)

(declare-fun c!26844 () Bool)

(assert (=> b!142193 (= c!26844 (and ((_ is Cons!1760) (toList!889 lt!73440)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73440))) (_1!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(assert (=> b!142193 (= e!92657 e!92654)))

(declare-fun b!142194 () Bool)

(assert (=> b!142194 (= e!92655 e!92657)))

(declare-fun c!26843 () Bool)

(assert (=> b!142194 (= c!26843 (and ((_ is Cons!1760) (toList!889 lt!73440)) (= (_1!1352 (h!2367 (toList!889 lt!73440))) (_1!1352 (tuple2!2685 lt!73444 lt!73442)))))))

(declare-fun b!142195 () Bool)

(assert (=> b!142195 (= e!92656 (ite c!26843 (t!6360 (toList!889 lt!73440)) (ite c!26844 (Cons!1760 (h!2367 (toList!889 lt!73440)) (t!6360 (toList!889 lt!73440))) Nil!1761)))))

(declare-fun bm!15746 () Bool)

(assert (=> bm!15746 (= call!15749 call!15748)))

(declare-fun b!142196 () Bool)

(declare-fun res!67802 () Bool)

(assert (=> b!142196 (=> (not res!67802) (not e!92653))))

(assert (=> b!142196 (= res!67802 (containsKey!179 lt!74575 (_1!1352 (tuple2!2685 lt!73444 lt!73442))))))

(declare-fun b!142197 () Bool)

(assert (=> b!142197 (= e!92654 call!15749)))

(assert (= (and d!45053 c!26842) b!142189))

(assert (= (and d!45053 (not c!26842)) b!142194))

(assert (= (and b!142194 c!26843) b!142191))

(assert (= (and b!142194 (not c!26843)) b!142193))

(assert (= (and b!142193 c!26844) b!142197))

(assert (= (and b!142193 (not c!26844)) b!142192))

(assert (= (or b!142197 b!142192) bm!15746))

(assert (= (or b!142191 bm!15746) bm!15745))

(assert (= (or b!142189 bm!15745) bm!15744))

(assert (= (and bm!15744 c!26845) b!142190))

(assert (= (and bm!15744 (not c!26845)) b!142195))

(assert (= (and d!45053 res!67803) b!142196))

(assert (= (and b!142196 res!67802) b!142188))

(declare-fun m!171257 () Bool)

(assert (=> b!142188 m!171257))

(declare-fun m!171259 () Bool)

(assert (=> b!142196 m!171259))

(declare-fun m!171261 () Bool)

(assert (=> b!142190 m!171261))

(declare-fun m!171263 () Bool)

(assert (=> bm!15744 m!171263))

(declare-fun m!171265 () Bool)

(assert (=> d!45053 m!171265))

(declare-fun m!171267 () Bool)

(assert (=> d!45053 m!171267))

(assert (=> d!43957 d!45053))

(declare-fun d!45055 () Bool)

(declare-fun lt!74576 () Bool)

(assert (=> d!45055 (= lt!74576 (select (content!137 lt!73688) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92658 () Bool)

(assert (=> d!45055 (= lt!74576 e!92658)))

(declare-fun res!67805 () Bool)

(assert (=> d!45055 (=> (not res!67805) (not e!92658))))

(assert (=> d!45055 (= res!67805 ((_ is Cons!1760) lt!73688))))

(assert (=> d!45055 (= (contains!923 lt!73688 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74576)))

(declare-fun b!142198 () Bool)

(declare-fun e!92659 () Bool)

(assert (=> b!142198 (= e!92658 e!92659)))

(declare-fun res!67804 () Bool)

(assert (=> b!142198 (=> res!67804 e!92659)))

(assert (=> b!142198 (= res!67804 (= (h!2367 lt!73688) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142199 () Bool)

(assert (=> b!142199 (= e!92659 (contains!923 (t!6360 lt!73688) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45055 res!67805) b!142198))

(assert (= (and b!142198 (not res!67804)) b!142199))

(declare-fun m!171269 () Bool)

(assert (=> d!45055 m!171269))

(declare-fun m!171271 () Bool)

(assert (=> d!45055 m!171271))

(declare-fun m!171273 () Bool)

(assert (=> b!142199 m!171273))

(assert (=> b!140472 d!45055))

(declare-fun d!45057 () Bool)

(assert (=> d!45057 (= (apply!120 (+!174 lt!73255 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) lt!73266) (apply!120 lt!73255 lt!73266))))

(assert (=> d!45057 true))

(declare-fun _$34!1006 () Unit!4395)

(assert (=> d!45057 (= (choose!870 lt!73255 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)) lt!73266) _$34!1006)))

(declare-fun bs!5998 () Bool)

(assert (= bs!5998 d!45057))

(assert (=> bs!5998 m!167005))

(assert (=> bs!5998 m!167005))

(assert (=> bs!5998 m!167007))

(assert (=> bs!5998 m!167015))

(assert (=> d!44147 d!45057))

(assert (=> d!44147 d!44133))

(declare-fun d!45059 () Bool)

(declare-fun e!92661 () Bool)

(assert (=> d!45059 e!92661))

(declare-fun res!67806 () Bool)

(assert (=> d!45059 (=> res!67806 e!92661)))

(declare-fun lt!74577 () Bool)

(assert (=> d!45059 (= res!67806 (not lt!74577))))

(declare-fun lt!74580 () Bool)

(assert (=> d!45059 (= lt!74577 lt!74580)))

(declare-fun lt!74578 () Unit!4395)

(declare-fun e!92660 () Unit!4395)

(assert (=> d!45059 (= lt!74578 e!92660)))

(declare-fun c!26846 () Bool)

(assert (=> d!45059 (= c!26846 lt!74580)))

(assert (=> d!45059 (= lt!74580 (containsKey!179 (toList!889 lt!73255) lt!73266))))

(assert (=> d!45059 (= (contains!921 lt!73255 lt!73266) lt!74577)))

(declare-fun b!142200 () Bool)

(declare-fun lt!74579 () Unit!4395)

(assert (=> b!142200 (= e!92660 lt!74579)))

(assert (=> b!142200 (= lt!74579 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73255) lt!73266))))

(assert (=> b!142200 (isDefined!129 (getValueByKey!175 (toList!889 lt!73255) lt!73266))))

(declare-fun b!142201 () Bool)

(declare-fun Unit!4502 () Unit!4395)

(assert (=> b!142201 (= e!92660 Unit!4502)))

(declare-fun b!142202 () Bool)

(assert (=> b!142202 (= e!92661 (isDefined!129 (getValueByKey!175 (toList!889 lt!73255) lt!73266)))))

(assert (= (and d!45059 c!26846) b!142200))

(assert (= (and d!45059 (not c!26846)) b!142201))

(assert (= (and d!45059 (not res!67806)) b!142202))

(declare-fun m!171275 () Bool)

(assert (=> d!45059 m!171275))

(declare-fun m!171277 () Bool)

(assert (=> b!142200 m!171277))

(assert (=> b!142200 m!169223))

(assert (=> b!142200 m!169223))

(declare-fun m!171279 () Bool)

(assert (=> b!142200 m!171279))

(assert (=> b!142202 m!169223))

(assert (=> b!142202 m!169223))

(assert (=> b!142202 m!171279))

(assert (=> d!44147 d!45059))

(assert (=> d!44147 d!44125))

(assert (=> d!44147 d!44127))

(declare-fun lt!74581 () Bool)

(declare-fun d!45061 () Bool)

(assert (=> d!45061 (= lt!74581 (select (content!137 lt!73543) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92662 () Bool)

(assert (=> d!45061 (= lt!74581 e!92662)))

(declare-fun res!67808 () Bool)

(assert (=> d!45061 (=> (not res!67808) (not e!92662))))

(assert (=> d!45061 (= res!67808 ((_ is Cons!1760) lt!73543))))

(assert (=> d!45061 (= (contains!923 lt!73543 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74581)))

(declare-fun b!142203 () Bool)

(declare-fun e!92663 () Bool)

(assert (=> b!142203 (= e!92662 e!92663)))

(declare-fun res!67807 () Bool)

(assert (=> b!142203 (=> res!67807 e!92663)))

(assert (=> b!142203 (= res!67807 (= (h!2367 lt!73543) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142204 () Bool)

(assert (=> b!142204 (= e!92663 (contains!923 (t!6360 lt!73543) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45061 res!67808) b!142203))

(assert (= (and b!142203 (not res!67807)) b!142204))

(declare-fun m!171281 () Bool)

(assert (=> d!45061 m!171281))

(declare-fun m!171283 () Bool)

(assert (=> d!45061 m!171283))

(declare-fun m!171285 () Bool)

(assert (=> b!142204 m!171285))

(assert (=> b!140664 d!45061))

(assert (=> b!140442 d!44869))

(declare-fun d!45063 () Bool)

(assert (=> d!45063 (= (get!1538 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43891 d!45063))

(declare-fun b!142207 () Bool)

(declare-fun e!92665 () Option!181)

(assert (=> b!142207 (= e!92665 (getValueByKey!175 (t!6360 (toList!889 lt!73482)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142206 () Bool)

(declare-fun e!92664 () Option!181)

(assert (=> b!142206 (= e!92664 e!92665)))

(declare-fun c!26848 () Bool)

(assert (=> b!142206 (= c!26848 (and ((_ is Cons!1760) (toList!889 lt!73482)) (not (= (_1!1352 (h!2367 (toList!889 lt!73482))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142208 () Bool)

(assert (=> b!142208 (= e!92665 None!179)))

(declare-fun b!142205 () Bool)

(assert (=> b!142205 (= e!92664 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73482)))))))

(declare-fun d!45065 () Bool)

(declare-fun c!26847 () Bool)

(assert (=> d!45065 (= c!26847 (and ((_ is Cons!1760) (toList!889 lt!73482)) (= (_1!1352 (h!2367 (toList!889 lt!73482))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45065 (= (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000) e!92664)))

(assert (= (and d!45065 c!26847) b!142205))

(assert (= (and d!45065 (not c!26847)) b!142206))

(assert (= (and b!142206 c!26848) b!142207))

(assert (= (and b!142206 (not c!26848)) b!142208))

(declare-fun m!171287 () Bool)

(assert (=> b!142207 m!171287))

(assert (=> d!43891 d!45065))

(declare-fun d!45067 () Bool)

(declare-fun res!67809 () Bool)

(declare-fun e!92666 () Bool)

(assert (=> d!45067 (=> res!67809 e!92666)))

(assert (=> d!45067 (= res!67809 (and ((_ is Cons!1760) (toList!889 lt!73441)) (= (_1!1352 (h!2367 (toList!889 lt!73441))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45067 (= (containsKey!179 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92666)))

(declare-fun b!142209 () Bool)

(declare-fun e!92667 () Bool)

(assert (=> b!142209 (= e!92666 e!92667)))

(declare-fun res!67810 () Bool)

(assert (=> b!142209 (=> (not res!67810) (not e!92667))))

(assert (=> b!142209 (= res!67810 (and (or (not ((_ is Cons!1760) (toList!889 lt!73441))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73441))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1760) (toList!889 lt!73441)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73441))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!142210 () Bool)

(assert (=> b!142210 (= e!92667 (containsKey!179 (t!6360 (toList!889 lt!73441)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45067 (not res!67809)) b!142209))

(assert (= (and b!142209 res!67810) b!142210))

(assert (=> b!142210 m!166821))

(declare-fun m!171289 () Bool)

(assert (=> b!142210 m!171289))

(assert (=> d!43947 d!45067))

(declare-fun d!45069 () Bool)

(declare-fun e!92669 () Bool)

(assert (=> d!45069 e!92669))

(declare-fun res!67811 () Bool)

(assert (=> d!45069 (=> res!67811 e!92669)))

(declare-fun lt!74582 () Bool)

(assert (=> d!45069 (= res!67811 (not lt!74582))))

(declare-fun lt!74585 () Bool)

(assert (=> d!45069 (= lt!74582 lt!74585)))

(declare-fun lt!74583 () Unit!4395)

(declare-fun e!92668 () Unit!4395)

(assert (=> d!45069 (= lt!74583 e!92668)))

(declare-fun c!26849 () Bool)

(assert (=> d!45069 (= c!26849 lt!74585)))

(assert (=> d!45069 (= lt!74585 (containsKey!179 (toList!889 lt!73931) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45069 (= (contains!921 lt!73931 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74582)))

(declare-fun b!142211 () Bool)

(declare-fun lt!74584 () Unit!4395)

(assert (=> b!142211 (= e!92668 lt!74584)))

(assert (=> b!142211 (= lt!74584 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73931) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> b!142211 (isDefined!129 (getValueByKey!175 (toList!889 lt!73931) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142212 () Bool)

(declare-fun Unit!4503 () Unit!4395)

(assert (=> b!142212 (= e!92668 Unit!4503)))

(declare-fun b!142213 () Bool)

(assert (=> b!142213 (= e!92669 (isDefined!129 (getValueByKey!175 (toList!889 lt!73931) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45069 c!26849) b!142211))

(assert (= (and d!45069 (not c!26849)) b!142212))

(assert (= (and d!45069 (not res!67811)) b!142213))

(declare-fun m!171291 () Bool)

(assert (=> d!45069 m!171291))

(declare-fun m!171293 () Bool)

(assert (=> b!142211 m!171293))

(assert (=> b!142211 m!168761))

(assert (=> b!142211 m!168761))

(declare-fun m!171295 () Bool)

(assert (=> b!142211 m!171295))

(assert (=> b!142213 m!168761))

(assert (=> b!142213 m!168761))

(assert (=> b!142213 m!171295))

(assert (=> d!43969 d!45069))

(declare-fun b!142216 () Bool)

(declare-fun e!92671 () Option!181)

(assert (=> b!142216 (= e!92671 (getValueByKey!175 (t!6360 lt!73932) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142215 () Bool)

(declare-fun e!92670 () Option!181)

(assert (=> b!142215 (= e!92670 e!92671)))

(declare-fun c!26851 () Bool)

(assert (=> b!142215 (= c!26851 (and ((_ is Cons!1760) lt!73932) (not (= (_1!1352 (h!2367 lt!73932)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142217 () Bool)

(assert (=> b!142217 (= e!92671 None!179)))

(declare-fun b!142214 () Bool)

(assert (=> b!142214 (= e!92670 (Some!180 (_2!1352 (h!2367 lt!73932))))))

(declare-fun d!45071 () Bool)

(declare-fun c!26850 () Bool)

(assert (=> d!45071 (= c!26850 (and ((_ is Cons!1760) lt!73932) (= (_1!1352 (h!2367 lt!73932)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45071 (= (getValueByKey!175 lt!73932 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!92670)))

(assert (= (and d!45071 c!26850) b!142214))

(assert (= (and d!45071 (not c!26850)) b!142215))

(assert (= (and b!142215 c!26851) b!142216))

(assert (= (and b!142215 (not c!26851)) b!142217))

(declare-fun m!171297 () Bool)

(assert (=> b!142216 m!171297))

(assert (=> d!43969 d!45071))

(declare-fun d!45073 () Bool)

(assert (=> d!45073 (= (getValueByKey!175 lt!73932 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74586 () Unit!4395)

(assert (=> d!45073 (= lt!74586 (choose!873 lt!73932 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!92672 () Bool)

(assert (=> d!45073 e!92672))

(declare-fun res!67812 () Bool)

(assert (=> d!45073 (=> (not res!67812) (not e!92672))))

(assert (=> d!45073 (= res!67812 (isStrictlySorted!320 lt!73932))))

(assert (=> d!45073 (= (lemmaContainsTupThenGetReturnValue!91 lt!73932 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74586)))

(declare-fun b!142218 () Bool)

(declare-fun res!67813 () Bool)

(assert (=> b!142218 (=> (not res!67813) (not e!92672))))

(assert (=> b!142218 (= res!67813 (containsKey!179 lt!73932 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142219 () Bool)

(assert (=> b!142219 (= e!92672 (contains!923 lt!73932 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45073 res!67812) b!142218))

(assert (= (and b!142218 res!67813) b!142219))

(assert (=> d!45073 m!168755))

(declare-fun m!171299 () Bool)

(assert (=> d!45073 m!171299))

(declare-fun m!171301 () Bool)

(assert (=> d!45073 m!171301))

(declare-fun m!171303 () Bool)

(assert (=> b!142218 m!171303))

(declare-fun m!171305 () Bool)

(assert (=> b!142219 m!171305))

(assert (=> d!43969 d!45073))

(declare-fun d!45075 () Bool)

(declare-fun e!92673 () Bool)

(assert (=> d!45075 e!92673))

(declare-fun res!67815 () Bool)

(assert (=> d!45075 (=> (not res!67815) (not e!92673))))

(declare-fun lt!74587 () List!1764)

(assert (=> d!45075 (= res!67815 (isStrictlySorted!320 lt!74587))))

(declare-fun e!92675 () List!1764)

(assert (=> d!45075 (= lt!74587 e!92675)))

(declare-fun c!26852 () Bool)

(assert (=> d!45075 (= c!26852 (and ((_ is Cons!1760) (toList!889 call!15549)) (bvslt (_1!1352 (h!2367 (toList!889 call!15549))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45075 (isStrictlySorted!320 (toList!889 call!15549))))

(assert (=> d!45075 (= (insertStrictlySorted!93 (toList!889 call!15549) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74587)))

(declare-fun b!142220 () Bool)

(assert (=> b!142220 (= e!92673 (contains!923 lt!74587 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun e!92676 () List!1764)

(declare-fun bm!15747 () Bool)

(declare-fun call!15750 () List!1764)

(assert (=> bm!15747 (= call!15750 ($colon$colon!93 e!92676 (ite c!26852 (h!2367 (toList!889 call!15549)) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun c!26855 () Bool)

(assert (=> bm!15747 (= c!26855 c!26852)))

(declare-fun b!142221 () Bool)

(assert (=> b!142221 (= e!92675 call!15750)))

(declare-fun b!142222 () Bool)

(assert (=> b!142222 (= e!92676 (insertStrictlySorted!93 (t!6360 (toList!889 call!15549)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142223 () Bool)

(declare-fun e!92677 () List!1764)

(declare-fun call!15751 () List!1764)

(assert (=> b!142223 (= e!92677 call!15751)))

(declare-fun bm!15748 () Bool)

(assert (=> bm!15748 (= call!15751 call!15750)))

(declare-fun b!142224 () Bool)

(declare-fun e!92674 () List!1764)

(declare-fun call!15752 () List!1764)

(assert (=> b!142224 (= e!92674 call!15752)))

(declare-fun b!142225 () Bool)

(declare-fun c!26854 () Bool)

(assert (=> b!142225 (= c!26854 (and ((_ is Cons!1760) (toList!889 call!15549)) (bvsgt (_1!1352 (h!2367 (toList!889 call!15549))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!142225 (= e!92677 e!92674)))

(declare-fun b!142226 () Bool)

(assert (=> b!142226 (= e!92675 e!92677)))

(declare-fun c!26853 () Bool)

(assert (=> b!142226 (= c!26853 (and ((_ is Cons!1760) (toList!889 call!15549)) (= (_1!1352 (h!2367 (toList!889 call!15549))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142227 () Bool)

(assert (=> b!142227 (= e!92676 (ite c!26853 (t!6360 (toList!889 call!15549)) (ite c!26854 (Cons!1760 (h!2367 (toList!889 call!15549)) (t!6360 (toList!889 call!15549))) Nil!1761)))))

(declare-fun bm!15749 () Bool)

(assert (=> bm!15749 (= call!15752 call!15751)))

(declare-fun b!142228 () Bool)

(declare-fun res!67814 () Bool)

(assert (=> b!142228 (=> (not res!67814) (not e!92673))))

(assert (=> b!142228 (= res!67814 (containsKey!179 lt!74587 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142229 () Bool)

(assert (=> b!142229 (= e!92674 call!15752)))

(assert (= (and d!45075 c!26852) b!142221))

(assert (= (and d!45075 (not c!26852)) b!142226))

(assert (= (and b!142226 c!26853) b!142223))

(assert (= (and b!142226 (not c!26853)) b!142225))

(assert (= (and b!142225 c!26854) b!142229))

(assert (= (and b!142225 (not c!26854)) b!142224))

(assert (= (or b!142229 b!142224) bm!15749))

(assert (= (or b!142223 bm!15749) bm!15748))

(assert (= (or b!142221 bm!15748) bm!15747))

(assert (= (and bm!15747 c!26855) b!142222))

(assert (= (and bm!15747 (not c!26855)) b!142227))

(assert (= (and d!45075 res!67815) b!142228))

(assert (= (and b!142228 res!67814) b!142220))

(declare-fun m!171307 () Bool)

(assert (=> b!142220 m!171307))

(declare-fun m!171309 () Bool)

(assert (=> b!142228 m!171309))

(declare-fun m!171311 () Bool)

(assert (=> b!142222 m!171311))

(declare-fun m!171313 () Bool)

(assert (=> bm!15747 m!171313))

(declare-fun m!171315 () Bool)

(assert (=> d!45075 m!171315))

(declare-fun m!171317 () Bool)

(assert (=> d!45075 m!171317))

(assert (=> d!43969 d!45075))

(assert (=> d!43777 d!43775))

(declare-fun d!45077 () Bool)

(assert (=> d!45077 (= (getValueByKey!175 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!45077 true))

(declare-fun _$22!497 () Unit!4395)

(assert (=> d!45077 (= (choose!873 lt!73536 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) _$22!497)))

(declare-fun bs!5999 () Bool)

(assert (= bs!5999 d!45077))

(assert (=> bs!5999 m!167435))

(assert (=> d!43777 d!45077))

(declare-fun d!45079 () Bool)

(declare-fun res!67816 () Bool)

(declare-fun e!92678 () Bool)

(assert (=> d!45079 (=> res!67816 e!92678)))

(assert (=> d!45079 (= res!67816 (or ((_ is Nil!1761) lt!73536) ((_ is Nil!1761) (t!6360 lt!73536))))))

(assert (=> d!45079 (= (isStrictlySorted!320 lt!73536) e!92678)))

(declare-fun b!142230 () Bool)

(declare-fun e!92679 () Bool)

(assert (=> b!142230 (= e!92678 e!92679)))

(declare-fun res!67817 () Bool)

(assert (=> b!142230 (=> (not res!67817) (not e!92679))))

(assert (=> b!142230 (= res!67817 (bvslt (_1!1352 (h!2367 lt!73536)) (_1!1352 (h!2367 (t!6360 lt!73536)))))))

(declare-fun b!142231 () Bool)

(assert (=> b!142231 (= e!92679 (isStrictlySorted!320 (t!6360 lt!73536)))))

(assert (= (and d!45079 (not res!67816)) b!142230))

(assert (= (and b!142230 res!67817) b!142231))

(declare-fun m!171319 () Bool)

(assert (=> b!142231 m!171319))

(assert (=> d!43777 d!45079))

(declare-fun d!45081 () Bool)

(declare-fun res!67818 () Bool)

(declare-fun e!92680 () Bool)

(assert (=> d!45081 (=> res!67818 e!92680)))

(assert (=> d!45081 (= res!67818 (and ((_ is Cons!1760) (toList!889 lt!73450)) (= (_1!1352 (h!2367 (toList!889 lt!73450))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45081 (= (containsKey!179 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000) e!92680)))

(declare-fun b!142232 () Bool)

(declare-fun e!92681 () Bool)

(assert (=> b!142232 (= e!92680 e!92681)))

(declare-fun res!67819 () Bool)

(assert (=> b!142232 (=> (not res!67819) (not e!92681))))

(assert (=> b!142232 (= res!67819 (and (or (not ((_ is Cons!1760) (toList!889 lt!73450))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73450))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73450)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73450))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142233 () Bool)

(assert (=> b!142233 (= e!92681 (containsKey!179 (t!6360 (toList!889 lt!73450)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45081 (not res!67818)) b!142232))

(assert (= (and b!142232 res!67819) b!142233))

(declare-fun m!171321 () Bool)

(assert (=> b!142233 m!171321))

(assert (=> d!43617 d!45081))

(declare-fun d!45083 () Bool)

(declare-fun e!92683 () Bool)

(assert (=> d!45083 e!92683))

(declare-fun res!67820 () Bool)

(assert (=> d!45083 (=> res!67820 e!92683)))

(declare-fun lt!74588 () Bool)

(assert (=> d!45083 (= res!67820 (not lt!74588))))

(declare-fun lt!74591 () Bool)

(assert (=> d!45083 (= lt!74588 lt!74591)))

(declare-fun lt!74589 () Unit!4395)

(declare-fun e!92682 () Unit!4395)

(assert (=> d!45083 (= lt!74589 e!92682)))

(declare-fun c!26856 () Bool)

(assert (=> d!45083 (= c!26856 lt!74591)))

(assert (=> d!45083 (= lt!74591 (containsKey!179 (toList!889 lt!74126) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45083 (= (contains!921 lt!74126 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74588)))

(declare-fun b!142234 () Bool)

(declare-fun lt!74590 () Unit!4395)

(assert (=> b!142234 (= e!92682 lt!74590)))

(assert (=> b!142234 (= lt!74590 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74126) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!142234 (isDefined!129 (getValueByKey!175 (toList!889 lt!74126) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142235 () Bool)

(declare-fun Unit!4504 () Unit!4395)

(assert (=> b!142235 (= e!92682 Unit!4504)))

(declare-fun b!142236 () Bool)

(assert (=> b!142236 (= e!92683 (isDefined!129 (getValueByKey!175 (toList!889 lt!74126) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!45083 c!26856) b!142234))

(assert (= (and d!45083 (not c!26856)) b!142235))

(assert (= (and d!45083 (not res!67820)) b!142236))

(declare-fun m!171323 () Bool)

(assert (=> d!45083 m!171323))

(declare-fun m!171325 () Bool)

(assert (=> b!142234 m!171325))

(assert (=> b!142234 m!169325))

(assert (=> b!142234 m!169325))

(declare-fun m!171327 () Bool)

(assert (=> b!142234 m!171327))

(assert (=> b!142236 m!169325))

(assert (=> b!142236 m!169325))

(assert (=> b!142236 m!171327))

(assert (=> d!44157 d!45083))

(declare-fun e!92685 () Option!181)

(declare-fun b!142239 () Bool)

(assert (=> b!142239 (= e!92685 (getValueByKey!175 (t!6360 lt!74127) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142238 () Bool)

(declare-fun e!92684 () Option!181)

(assert (=> b!142238 (= e!92684 e!92685)))

(declare-fun c!26858 () Bool)

(assert (=> b!142238 (= c!26858 (and ((_ is Cons!1760) lt!74127) (not (= (_1!1352 (h!2367 lt!74127)) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun b!142240 () Bool)

(assert (=> b!142240 (= e!92685 None!179)))

(declare-fun b!142237 () Bool)

(assert (=> b!142237 (= e!92684 (Some!180 (_2!1352 (h!2367 lt!74127))))))

(declare-fun d!45085 () Bool)

(declare-fun c!26857 () Bool)

(assert (=> d!45085 (= c!26857 (and ((_ is Cons!1760) lt!74127) (= (_1!1352 (h!2367 lt!74127)) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!45085 (= (getValueByKey!175 lt!74127 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92684)))

(assert (= (and d!45085 c!26857) b!142237))

(assert (= (and d!45085 (not c!26857)) b!142238))

(assert (= (and b!142238 c!26858) b!142239))

(assert (= (and b!142238 (not c!26858)) b!142240))

(declare-fun m!171329 () Bool)

(assert (=> b!142239 m!171329))

(assert (=> d!44157 d!45085))

(declare-fun d!45087 () Bool)

(assert (=> d!45087 (= (getValueByKey!175 lt!74127 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74592 () Unit!4395)

(assert (=> d!45087 (= lt!74592 (choose!873 lt!74127 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun e!92686 () Bool)

(assert (=> d!45087 e!92686))

(declare-fun res!67821 () Bool)

(assert (=> d!45087 (=> (not res!67821) (not e!92686))))

(assert (=> d!45087 (= res!67821 (isStrictlySorted!320 lt!74127))))

(assert (=> d!45087 (= (lemmaContainsTupThenGetReturnValue!91 lt!74127 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74592)))

(declare-fun b!142241 () Bool)

(declare-fun res!67822 () Bool)

(assert (=> b!142241 (=> (not res!67822) (not e!92686))))

(assert (=> b!142241 (= res!67822 (containsKey!179 lt!74127 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142242 () Bool)

(assert (=> b!142242 (= e!92686 (contains!923 lt!74127 (tuple2!2685 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!45087 res!67821) b!142241))

(assert (= (and b!142241 res!67822) b!142242))

(assert (=> d!45087 m!169319))

(declare-fun m!171331 () Bool)

(assert (=> d!45087 m!171331))

(declare-fun m!171333 () Bool)

(assert (=> d!45087 m!171333))

(declare-fun m!171335 () Bool)

(assert (=> b!142241 m!171335))

(declare-fun m!171337 () Bool)

(assert (=> b!142242 m!171337))

(assert (=> d!44157 d!45087))

(declare-fun d!45089 () Bool)

(declare-fun e!92687 () Bool)

(assert (=> d!45089 e!92687))

(declare-fun res!67824 () Bool)

(assert (=> d!45089 (=> (not res!67824) (not e!92687))))

(declare-fun lt!74593 () List!1764)

(assert (=> d!45089 (= res!67824 (isStrictlySorted!320 lt!74593))))

(declare-fun e!92689 () List!1764)

(assert (=> d!45089 (= lt!74593 e!92689)))

(declare-fun c!26859 () Bool)

(assert (=> d!45089 (= c!26859 (and ((_ is Cons!1760) (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)))) (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545))))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!45089 (isStrictlySorted!320 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545))))))

(assert (=> d!45089 (= (insertStrictlySorted!93 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74593)))

(declare-fun b!142243 () Bool)

(assert (=> b!142243 (= e!92687 (contains!923 lt!74593 (tuple2!2685 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun e!92690 () List!1764)

(declare-fun call!15753 () List!1764)

(declare-fun bm!15750 () Bool)

(assert (=> bm!15750 (= call!15753 ($colon$colon!93 e!92690 (ite c!26859 (h!2367 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)))) (tuple2!2685 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!26862 () Bool)

(assert (=> bm!15750 (= c!26862 c!26859)))

(declare-fun b!142244 () Bool)

(assert (=> b!142244 (= e!92689 call!15753)))

(declare-fun b!142245 () Bool)

(assert (=> b!142245 (= e!92690 (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142246 () Bool)

(declare-fun e!92691 () List!1764)

(declare-fun call!15754 () List!1764)

(assert (=> b!142246 (= e!92691 call!15754)))

(declare-fun bm!15751 () Bool)

(assert (=> bm!15751 (= call!15754 call!15753)))

(declare-fun b!142247 () Bool)

(declare-fun e!92688 () List!1764)

(declare-fun call!15755 () List!1764)

(assert (=> b!142247 (= e!92688 call!15755)))

(declare-fun b!142248 () Bool)

(declare-fun c!26861 () Bool)

(assert (=> b!142248 (= c!26861 (and ((_ is Cons!1760) (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)))) (bvsgt (_1!1352 (h!2367 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545))))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> b!142248 (= e!92691 e!92688)))

(declare-fun b!142249 () Bool)

(assert (=> b!142249 (= e!92689 e!92691)))

(declare-fun c!26860 () Bool)

(assert (=> b!142249 (= c!26860 (and ((_ is Cons!1760) (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)))) (= (_1!1352 (h!2367 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545))))) (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142250 () Bool)

(assert (=> b!142250 (= e!92690 (ite c!26860 (t!6360 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)))) (ite c!26861 (Cons!1760 (h!2367 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545)))) (t!6360 (toList!889 (ite c!26186 call!15546 (ite c!26189 call!15548 call!15545))))) Nil!1761)))))

(declare-fun bm!15752 () Bool)

(assert (=> bm!15752 (= call!15755 call!15754)))

(declare-fun b!142251 () Bool)

(declare-fun res!67823 () Bool)

(assert (=> b!142251 (=> (not res!67823) (not e!92687))))

(assert (=> b!142251 (= res!67823 (containsKey!179 lt!74593 (_1!1352 (ite (or c!26186 c!26189) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142252 () Bool)

(assert (=> b!142252 (= e!92688 call!15755)))

(assert (= (and d!45089 c!26859) b!142244))

(assert (= (and d!45089 (not c!26859)) b!142249))

(assert (= (and b!142249 c!26860) b!142246))

(assert (= (and b!142249 (not c!26860)) b!142248))

(assert (= (and b!142248 c!26861) b!142252))

(assert (= (and b!142248 (not c!26861)) b!142247))

(assert (= (or b!142252 b!142247) bm!15752))

(assert (= (or b!142246 bm!15752) bm!15751))

(assert (= (or b!142244 bm!15751) bm!15750))

(assert (= (and bm!15750 c!26862) b!142245))

(assert (= (and bm!15750 (not c!26862)) b!142250))

(assert (= (and d!45089 res!67824) b!142251))

(assert (= (and b!142251 res!67823) b!142243))

(declare-fun m!171339 () Bool)

(assert (=> b!142243 m!171339))

(declare-fun m!171341 () Bool)

(assert (=> b!142251 m!171341))

(declare-fun m!171343 () Bool)

(assert (=> b!142245 m!171343))

(declare-fun m!171345 () Bool)

(assert (=> bm!15750 m!171345))

(declare-fun m!171347 () Bool)

(assert (=> d!45089 m!171347))

(declare-fun m!171349 () Bool)

(assert (=> d!45089 m!171349))

(assert (=> d!44157 d!45089))

(declare-fun lt!74594 () Bool)

(declare-fun d!45091 () Bool)

(assert (=> d!45091 (= lt!74594 (select (content!137 (toList!889 lt!74093)) (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun e!92692 () Bool)

(assert (=> d!45091 (= lt!74594 e!92692)))

(declare-fun res!67826 () Bool)

(assert (=> d!45091 (=> (not res!67826) (not e!92692))))

(assert (=> d!45091 (= res!67826 ((_ is Cons!1760) (toList!889 lt!74093)))))

(assert (=> d!45091 (= (contains!923 (toList!889 lt!74093) (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74594)))

(declare-fun b!142253 () Bool)

(declare-fun e!92693 () Bool)

(assert (=> b!142253 (= e!92692 e!92693)))

(declare-fun res!67825 () Bool)

(assert (=> b!142253 (=> res!67825 e!92693)))

(assert (=> b!142253 (= res!67825 (= (h!2367 (toList!889 lt!74093)) (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun b!142254 () Bool)

(assert (=> b!142254 (= e!92693 (contains!923 (t!6360 (toList!889 lt!74093)) (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!45091 res!67826) b!142253))

(assert (= (and b!142253 (not res!67825)) b!142254))

(declare-fun m!171351 () Bool)

(assert (=> d!45091 m!171351))

(declare-fun m!171353 () Bool)

(assert (=> d!45091 m!171353))

(declare-fun m!171355 () Bool)

(assert (=> b!142254 m!171355))

(assert (=> b!141076 d!45091))

(declare-fun d!45093 () Bool)

(assert (=> d!45093 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (mask!7280 newMap!16))))

(assert (=> d!45093 true))

(declare-fun _$56!15 () Unit!4395)

(assert (=> d!45093 (= (choose!102 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (_keys!4699 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (mask!7280 newMap!16)) _$56!15)))

(declare-fun bs!6000 () Bool)

(assert (= bs!6000 d!45093))

(assert (=> bs!6000 m!167023))

(assert (=> bs!6000 m!167031))

(assert (=> d!43929 d!45093))

(assert (=> d!43929 d!43661))

(declare-fun d!45095 () Bool)

(declare-fun e!92695 () Bool)

(assert (=> d!45095 e!92695))

(declare-fun res!67827 () Bool)

(assert (=> d!45095 (=> res!67827 e!92695)))

(declare-fun lt!74595 () Bool)

(assert (=> d!45095 (= res!67827 (not lt!74595))))

(declare-fun lt!74598 () Bool)

(assert (=> d!45095 (= lt!74595 lt!74598)))

(declare-fun lt!74596 () Unit!4395)

(declare-fun e!92694 () Unit!4395)

(assert (=> d!45095 (= lt!74596 e!92694)))

(declare-fun c!26863 () Bool)

(assert (=> d!45095 (= c!26863 lt!74598)))

(assert (=> d!45095 (= lt!74598 (containsKey!179 (toList!889 lt!73779) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45095 (= (contains!921 lt!73779 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74595)))

(declare-fun b!142255 () Bool)

(declare-fun lt!74597 () Unit!4395)

(assert (=> b!142255 (= e!92694 lt!74597)))

(assert (=> b!142255 (= lt!74597 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73779) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142255 (isDefined!129 (getValueByKey!175 (toList!889 lt!73779) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142256 () Bool)

(declare-fun Unit!4505 () Unit!4395)

(assert (=> b!142256 (= e!92694 Unit!4505)))

(declare-fun b!142257 () Bool)

(assert (=> b!142257 (= e!92695 (isDefined!129 (getValueByKey!175 (toList!889 lt!73779) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45095 c!26863) b!142255))

(assert (= (and d!45095 (not c!26863)) b!142256))

(assert (= (and d!45095 (not res!67827)) b!142257))

(declare-fun m!171357 () Bool)

(assert (=> d!45095 m!171357))

(declare-fun m!171359 () Bool)

(assert (=> b!142255 m!171359))

(assert (=> b!142255 m!169691))

(assert (=> b!142255 m!169691))

(declare-fun m!171361 () Bool)

(assert (=> b!142255 m!171361))

(assert (=> b!142257 m!169691))

(assert (=> b!142257 m!169691))

(assert (=> b!142257 m!171361))

(assert (=> bm!15621 d!45095))

(declare-fun d!45097 () Bool)

(declare-fun res!67828 () Bool)

(declare-fun e!92696 () Bool)

(assert (=> d!45097 (=> res!67828 e!92696)))

(assert (=> d!45097 (= res!67828 (or ((_ is Nil!1761) lt!73688) ((_ is Nil!1761) (t!6360 lt!73688))))))

(assert (=> d!45097 (= (isStrictlySorted!320 lt!73688) e!92696)))

(declare-fun b!142258 () Bool)

(declare-fun e!92697 () Bool)

(assert (=> b!142258 (= e!92696 e!92697)))

(declare-fun res!67829 () Bool)

(assert (=> b!142258 (=> (not res!67829) (not e!92697))))

(assert (=> b!142258 (= res!67829 (bvslt (_1!1352 (h!2367 lt!73688)) (_1!1352 (h!2367 (t!6360 lt!73688)))))))

(declare-fun b!142259 () Bool)

(assert (=> b!142259 (= e!92697 (isStrictlySorted!320 (t!6360 lt!73688)))))

(assert (= (and d!45097 (not res!67828)) b!142258))

(assert (= (and b!142258 res!67829) b!142259))

(declare-fun m!171363 () Bool)

(assert (=> b!142259 m!171363))

(assert (=> d!43735 d!45097))

(declare-fun d!45099 () Bool)

(declare-fun res!67830 () Bool)

(declare-fun e!92698 () Bool)

(assert (=> d!45099 (=> res!67830 e!92698)))

(assert (=> d!45099 (= res!67830 (or ((_ is Nil!1761) (toList!889 call!15447)) ((_ is Nil!1761) (t!6360 (toList!889 call!15447)))))))

(assert (=> d!45099 (= (isStrictlySorted!320 (toList!889 call!15447)) e!92698)))

(declare-fun b!142260 () Bool)

(declare-fun e!92699 () Bool)

(assert (=> b!142260 (= e!92698 e!92699)))

(declare-fun res!67831 () Bool)

(assert (=> b!142260 (=> (not res!67831) (not e!92699))))

(assert (=> b!142260 (= res!67831 (bvslt (_1!1352 (h!2367 (toList!889 call!15447))) (_1!1352 (h!2367 (t!6360 (toList!889 call!15447))))))))

(declare-fun b!142261 () Bool)

(assert (=> b!142261 (= e!92699 (isStrictlySorted!320 (t!6360 (toList!889 call!15447))))))

(assert (= (and d!45099 (not res!67830)) b!142260))

(assert (= (and b!142260 res!67831) b!142261))

(assert (=> b!142261 m!170813))

(assert (=> d!43735 d!45099))

(declare-fun d!45101 () Bool)

(declare-fun lt!74599 () Bool)

(assert (=> d!45101 (= lt!74599 (select (content!137 lt!73547) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92700 () Bool)

(assert (=> d!45101 (= lt!74599 e!92700)))

(declare-fun res!67833 () Bool)

(assert (=> d!45101 (=> (not res!67833) (not e!92700))))

(assert (=> d!45101 (= res!67833 ((_ is Cons!1760) lt!73547))))

(assert (=> d!45101 (= (contains!923 lt!73547 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74599)))

(declare-fun b!142262 () Bool)

(declare-fun e!92701 () Bool)

(assert (=> b!142262 (= e!92700 e!92701)))

(declare-fun res!67832 () Bool)

(assert (=> b!142262 (=> res!67832 e!92701)))

(assert (=> b!142262 (= res!67832 (= (h!2367 lt!73547) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142263 () Bool)

(assert (=> b!142263 (= e!92701 (contains!923 (t!6360 lt!73547) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45101 res!67833) b!142262))

(assert (= (and b!142262 (not res!67832)) b!142263))

(declare-fun m!171365 () Bool)

(assert (=> d!45101 m!171365))

(declare-fun m!171367 () Bool)

(assert (=> d!45101 m!171367))

(declare-fun m!171369 () Bool)

(assert (=> b!142263 m!171369))

(assert (=> b!140935 d!45101))

(declare-fun d!45103 () Bool)

(assert (=> d!45103 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74085 #b00000000000000000000000000000000)))

(declare-fun lt!74600 () Unit!4395)

(assert (=> d!45103 (= lt!74600 (choose!13 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74085 #b00000000000000000000000000000000))))

(assert (=> d!45103 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!45103 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74085 #b00000000000000000000000000000000) lt!74600)))

(declare-fun bs!6001 () Bool)

(assert (= bs!6001 d!45103))

(assert (=> bs!6001 m!169179))

(declare-fun m!171371 () Bool)

(assert (=> bs!6001 m!171371))

(assert (=> b!141063 d!45103))

(declare-fun d!45105 () Bool)

(declare-fun res!67834 () Bool)

(declare-fun e!92702 () Bool)

(assert (=> d!45105 (=> res!67834 e!92702)))

(assert (=> d!45105 (= res!67834 (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) lt!74085))))

(assert (=> d!45105 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74085 #b00000000000000000000000000000000) e!92702)))

(declare-fun b!142264 () Bool)

(declare-fun e!92703 () Bool)

(assert (=> b!142264 (= e!92702 e!92703)))

(declare-fun res!67835 () Bool)

(assert (=> b!142264 (=> (not res!67835) (not e!92703))))

(assert (=> b!142264 (= res!67835 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!142265 () Bool)

(assert (=> b!142265 (= e!92703 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) lt!74085 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!45105 (not res!67834)) b!142264))

(assert (= (and b!142264 res!67835) b!142265))

(assert (=> d!45105 m!167905))

(declare-fun m!171373 () Bool)

(assert (=> b!142265 m!171373))

(assert (=> b!141063 d!45105))

(declare-fun b!142266 () Bool)

(declare-fun e!92704 () SeekEntryResult!289)

(declare-fun e!92706 () SeekEntryResult!289)

(assert (=> b!142266 (= e!92704 e!92706)))

(declare-fun lt!74602 () (_ BitVec 64))

(declare-fun lt!74603 () SeekEntryResult!289)

(assert (=> b!142266 (= lt!74602 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (index!3321 lt!74603)))))

(declare-fun c!26865 () Bool)

(assert (=> b!142266 (= c!26865 (= lt!74602 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!142267 () Bool)

(declare-fun c!26866 () Bool)

(assert (=> b!142267 (= c!26866 (= lt!74602 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92705 () SeekEntryResult!289)

(assert (=> b!142267 (= e!92706 e!92705)))

(declare-fun b!142268 () Bool)

(assert (=> b!142268 (= e!92705 (seekKeyOrZeroReturnVacant!0 (x!16146 lt!74603) (index!3321 lt!74603) (index!3321 lt!74603) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))))))

(declare-fun b!142269 () Bool)

(assert (=> b!142269 (= e!92705 (MissingZero!289 (index!3321 lt!74603)))))

(declare-fun d!45107 () Bool)

(declare-fun lt!74601 () SeekEntryResult!289)

(assert (=> d!45107 (and (or ((_ is Undefined!289) lt!74601) (not ((_ is Found!289) lt!74601)) (and (bvsge (index!3320 lt!74601) #b00000000000000000000000000000000) (bvslt (index!3320 lt!74601) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))) (or ((_ is Undefined!289) lt!74601) ((_ is Found!289) lt!74601) (not ((_ is MissingZero!289) lt!74601)) (and (bvsge (index!3319 lt!74601) #b00000000000000000000000000000000) (bvslt (index!3319 lt!74601) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))) (or ((_ is Undefined!289) lt!74601) ((_ is Found!289) lt!74601) ((_ is MissingZero!289) lt!74601) (not ((_ is MissingVacant!289) lt!74601)) (and (bvsge (index!3322 lt!74601) #b00000000000000000000000000000000) (bvslt (index!3322 lt!74601) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))) (or ((_ is Undefined!289) lt!74601) (ite ((_ is Found!289) lt!74601) (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (index!3320 lt!74601)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!289) lt!74601) (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (index!3319 lt!74601)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!289) lt!74601) (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (index!3322 lt!74601)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45107 (= lt!74601 e!92704)))

(declare-fun c!26864 () Bool)

(assert (=> d!45107 (= c!26864 (and ((_ is Intermediate!289) lt!74603) (undefined!1101 lt!74603)))))

(assert (=> d!45107 (= lt!74603 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) (mask!7280 (v!3280 (underlying!481 thiss!992)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))))))

(assert (=> d!45107 (validMask!0 (mask!7280 (v!3280 (underlying!481 thiss!992))))))

(assert (=> d!45107 (= (seekEntryOrOpen!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000) (_keys!4699 (v!3280 (underlying!481 thiss!992))) (mask!7280 (v!3280 (underlying!481 thiss!992)))) lt!74601)))

(declare-fun b!142270 () Bool)

(assert (=> b!142270 (= e!92706 (Found!289 (index!3321 lt!74603)))))

(declare-fun b!142271 () Bool)

(assert (=> b!142271 (= e!92704 Undefined!289)))

(assert (= (and d!45107 c!26864) b!142271))

(assert (= (and d!45107 (not c!26864)) b!142266))

(assert (= (and b!142266 c!26865) b!142270))

(assert (= (and b!142266 (not c!26865)) b!142267))

(assert (= (and b!142267 c!26866) b!142269))

(assert (= (and b!142267 (not c!26866)) b!142268))

(declare-fun m!171375 () Bool)

(assert (=> b!142266 m!171375))

(assert (=> b!142268 m!167905))

(declare-fun m!171377 () Bool)

(assert (=> b!142268 m!171377))

(assert (=> d!45107 m!167905))

(declare-fun m!171379 () Bool)

(assert (=> d!45107 m!171379))

(declare-fun m!171381 () Bool)

(assert (=> d!45107 m!171381))

(assert (=> d!45107 m!166827))

(assert (=> d!45107 m!171379))

(assert (=> d!45107 m!167905))

(declare-fun m!171383 () Bool)

(assert (=> d!45107 m!171383))

(declare-fun m!171385 () Bool)

(assert (=> d!45107 m!171385))

(declare-fun m!171387 () Bool)

(assert (=> d!45107 m!171387))

(assert (=> b!141063 d!45107))

(declare-fun d!45109 () Bool)

(declare-fun res!67836 () Bool)

(declare-fun e!92707 () Bool)

(assert (=> d!45109 (=> res!67836 e!92707)))

(assert (=> d!45109 (= res!67836 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!45109 (= (containsKey!179 (t!6360 (toList!889 lt!73135)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!92707)))

(declare-fun b!142272 () Bool)

(declare-fun e!92708 () Bool)

(assert (=> b!142272 (= e!92707 e!92708)))

(declare-fun res!67837 () Bool)

(assert (=> b!142272 (=> (not res!67837) (not e!92708))))

(assert (=> b!142272 (= res!67837 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 lt!73135)))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!142273 () Bool)

(assert (=> b!142273 (= e!92708 (containsKey!179 (t!6360 (t!6360 (toList!889 lt!73135))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!45109 (not res!67836)) b!142272))

(assert (= (and b!142272 res!67837) b!142273))

(assert (=> b!142273 m!166821))

(declare-fun m!171389 () Bool)

(assert (=> b!142273 m!171389))

(assert (=> b!141020 d!45109))

(declare-fun d!45111 () Bool)

(assert (=> d!45111 (= (isEmpty!422 (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!180) (getValueByKey!175 (toList!889 lt!73135) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!43703 d!45111))

(declare-fun b!142274 () Bool)

(declare-fun e!92710 () (_ BitVec 32))

(declare-fun call!15756 () (_ BitVec 32))

(assert (=> b!142274 (= e!92710 (bvadd #b00000000000000000000000000000001 call!15756))))

(declare-fun b!142275 () Bool)

(assert (=> b!142275 (= e!92710 call!15756)))

(declare-fun b!142276 () Bool)

(declare-fun e!92709 () (_ BitVec 32))

(assert (=> b!142276 (= e!92709 e!92710)))

(declare-fun c!26868 () Bool)

(assert (=> b!142276 (= c!26868 (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142277 () Bool)

(assert (=> b!142277 (= e!92709 #b00000000000000000000000000000000)))

(declare-fun d!45113 () Bool)

(declare-fun lt!74604 () (_ BitVec 32))

(assert (=> d!45113 (and (bvsge lt!74604 #b00000000000000000000000000000000) (bvsle lt!74604 (bvsub (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!45113 (= lt!74604 e!92709)))

(declare-fun c!26867 () Bool)

(assert (=> d!45113 (= c!26867 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!45113 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 newMap!16)) (size!2586 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))))))))

(assert (=> d!45113 (= (arrayCountValidKeys!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))) lt!74604)))

(declare-fun bm!15753 () Bool)

(assert (=> bm!15753 (= call!15756 (arrayCountValidKeys!0 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (= (and d!45113 c!26867) b!142277))

(assert (= (and d!45113 (not c!26867)) b!142276))

(assert (= (and b!142276 c!26868) b!142274))

(assert (= (and b!142276 (not c!26868)) b!142275))

(assert (= (or b!142274 b!142275) bm!15753))

(assert (=> b!142276 m!170073))

(assert (=> b!142276 m!170073))

(assert (=> b!142276 m!170081))

(declare-fun m!171391 () Bool)

(assert (=> bm!15753 m!171391))

(assert (=> bm!15625 d!45113))

(declare-fun d!45115 () Bool)

(declare-fun res!67838 () Bool)

(declare-fun e!92711 () Bool)

(assert (=> d!45115 (=> res!67838 e!92711)))

(assert (=> d!45115 (= res!67838 (and ((_ is Cons!1760) lt!73509) (= (_1!1352 (h!2367 lt!73509)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45115 (= (containsKey!179 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92711)))

(declare-fun b!142278 () Bool)

(declare-fun e!92712 () Bool)

(assert (=> b!142278 (= e!92711 e!92712)))

(declare-fun res!67839 () Bool)

(assert (=> b!142278 (=> (not res!67839) (not e!92712))))

(assert (=> b!142278 (= res!67839 (and (or (not ((_ is Cons!1760) lt!73509)) (bvsle (_1!1352 (h!2367 lt!73509)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1760) lt!73509) (bvslt (_1!1352 (h!2367 lt!73509)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142279 () Bool)

(assert (=> b!142279 (= e!92712 (containsKey!179 (t!6360 lt!73509) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45115 (not res!67838)) b!142278))

(assert (= (and b!142278 res!67839) b!142279))

(declare-fun m!171393 () Bool)

(assert (=> b!142279 m!171393))

(assert (=> b!140362 d!45115))

(declare-fun b!142280 () Bool)

(declare-fun e!92714 () (_ BitVec 32))

(declare-fun call!15757 () (_ BitVec 32))

(assert (=> b!142280 (= e!92714 (bvadd #b00000000000000000000000000000001 call!15757))))

(declare-fun b!142281 () Bool)

(assert (=> b!142281 (= e!92714 call!15757)))

(declare-fun b!142282 () Bool)

(declare-fun e!92713 () (_ BitVec 32))

(assert (=> b!142282 (= e!92713 e!92714)))

(declare-fun c!26870 () Bool)

(assert (=> b!142282 (= c!26870 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142283 () Bool)

(assert (=> b!142283 (= e!92713 #b00000000000000000000000000000000)))

(declare-fun d!45117 () Bool)

(declare-fun lt!74605 () (_ BitVec 32))

(assert (=> d!45117 (and (bvsge lt!74605 #b00000000000000000000000000000000) (bvsle lt!74605 (bvsub (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!45117 (= lt!74605 e!92713)))

(declare-fun c!26869 () Bool)

(assert (=> d!45117 (= c!26869 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!45117 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!45117 (= (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))) lt!74605)))

(declare-fun bm!15754 () Bool)

(assert (=> bm!15754 (= call!15757 (arrayCountValidKeys!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!45117 c!26869) b!142283))

(assert (= (and d!45117 (not c!26869)) b!142282))

(assert (= (and b!142282 c!26870) b!142280))

(assert (= (and b!142282 (not c!26870)) b!142281))

(assert (= (or b!142280 b!142281) bm!15754))

(assert (=> b!142282 m!170483))

(assert (=> b!142282 m!170483))

(assert (=> b!142282 m!170491))

(declare-fun m!171395 () Bool)

(assert (=> bm!15754 m!171395))

(assert (=> bm!15651 d!45117))

(assert (=> d!44013 d!44019))

(assert (=> d!44013 d!44017))

(declare-fun d!45119 () Bool)

(assert (=> d!45119 (contains!921 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) lt!73398)))

(assert (=> d!45119 true))

(declare-fun _$35!393 () Unit!4395)

(assert (=> d!45119 (= (choose!871 lt!73400 lt!73393 (zeroValue!2790 newMap!16) lt!73398) _$35!393)))

(declare-fun bs!6002 () Bool)

(assert (= bs!6002 d!45119))

(assert (=> bs!6002 m!167173))

(assert (=> bs!6002 m!167173))

(assert (=> bs!6002 m!167175))

(assert (=> d!44013 d!45119))

(declare-fun d!45121 () Bool)

(declare-fun e!92716 () Bool)

(assert (=> d!45121 e!92716))

(declare-fun res!67840 () Bool)

(assert (=> d!45121 (=> res!67840 e!92716)))

(declare-fun lt!74606 () Bool)

(assert (=> d!45121 (= res!67840 (not lt!74606))))

(declare-fun lt!74609 () Bool)

(assert (=> d!45121 (= lt!74606 lt!74609)))

(declare-fun lt!74607 () Unit!4395)

(declare-fun e!92715 () Unit!4395)

(assert (=> d!45121 (= lt!74607 e!92715)))

(declare-fun c!26871 () Bool)

(assert (=> d!45121 (= c!26871 lt!74609)))

(assert (=> d!45121 (= lt!74609 (containsKey!179 (toList!889 lt!73400) lt!73398))))

(assert (=> d!45121 (= (contains!921 lt!73400 lt!73398) lt!74606)))

(declare-fun b!142284 () Bool)

(declare-fun lt!74608 () Unit!4395)

(assert (=> b!142284 (= e!92715 lt!74608)))

(assert (=> b!142284 (= lt!74608 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73400) lt!73398))))

(assert (=> b!142284 (isDefined!129 (getValueByKey!175 (toList!889 lt!73400) lt!73398))))

(declare-fun b!142285 () Bool)

(declare-fun Unit!4506 () Unit!4395)

(assert (=> b!142285 (= e!92715 Unit!4506)))

(declare-fun b!142286 () Bool)

(assert (=> b!142286 (= e!92716 (isDefined!129 (getValueByKey!175 (toList!889 lt!73400) lt!73398)))))

(assert (= (and d!45121 c!26871) b!142284))

(assert (= (and d!45121 (not c!26871)) b!142285))

(assert (= (and d!45121 (not res!67840)) b!142286))

(declare-fun m!171397 () Bool)

(assert (=> d!45121 m!171397))

(declare-fun m!171399 () Bool)

(assert (=> b!142284 m!171399))

(declare-fun m!171401 () Bool)

(assert (=> b!142284 m!171401))

(assert (=> b!142284 m!171401))

(declare-fun m!171403 () Bool)

(assert (=> b!142284 m!171403))

(assert (=> b!142286 m!171401))

(assert (=> b!142286 m!171401))

(assert (=> b!142286 m!171403))

(assert (=> d!44013 d!45121))

(assert (=> b!140827 d!44821))

(declare-fun c!26872 () Bool)

(declare-fun bm!15755 () Bool)

(declare-fun call!15758 () Bool)

(assert (=> bm!15755 (= call!15758 (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26872 (Cons!1759 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!26277 (Cons!1759 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) (ite c!26277 (Cons!1759 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) Nil!1760) Nil!1760))))))

(declare-fun b!142288 () Bool)

(declare-fun e!92718 () Bool)

(declare-fun e!92719 () Bool)

(assert (=> b!142288 (= e!92718 e!92719)))

(assert (=> b!142288 (= c!26872 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142289 () Bool)

(assert (=> b!142289 (= e!92719 call!15758)))

(declare-fun d!45123 () Bool)

(declare-fun res!67843 () Bool)

(declare-fun e!92720 () Bool)

(assert (=> d!45123 (=> res!67843 e!92720)))

(assert (=> d!45123 (= res!67843 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (_2!1353 lt!73223)))))))

(assert (=> d!45123 (= (arrayNoDuplicates!0 (_keys!4699 (_2!1353 lt!73223)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!26277 (Cons!1759 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) Nil!1760) Nil!1760)) e!92720)))

(declare-fun b!142287 () Bool)

(declare-fun e!92717 () Bool)

(assert (=> b!142287 (= e!92717 (contains!922 (ite c!26277 (Cons!1759 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000) Nil!1760) Nil!1760) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142290 () Bool)

(assert (=> b!142290 (= e!92720 e!92718)))

(declare-fun res!67841 () Bool)

(assert (=> b!142290 (=> (not res!67841) (not e!92718))))

(assert (=> b!142290 (= res!67841 (not e!92717))))

(declare-fun res!67842 () Bool)

(assert (=> b!142290 (=> (not res!67842) (not e!92717))))

(assert (=> b!142290 (= res!67842 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142291 () Bool)

(assert (=> b!142291 (= e!92719 call!15758)))

(assert (= (and d!45123 (not res!67843)) b!142290))

(assert (= (and b!142290 res!67842) b!142287))

(assert (= (and b!142290 res!67841) b!142288))

(assert (= (and b!142288 c!26872) b!142289))

(assert (= (and b!142288 (not c!26872)) b!142291))

(assert (= (or b!142289 b!142291) bm!15755))

(assert (=> bm!15755 m!169737))

(declare-fun m!171405 () Bool)

(assert (=> bm!15755 m!171405))

(assert (=> b!142288 m!169737))

(assert (=> b!142288 m!169737))

(assert (=> b!142288 m!169739))

(assert (=> b!142287 m!169737))

(assert (=> b!142287 m!169737))

(declare-fun m!171407 () Bool)

(assert (=> b!142287 m!171407))

(assert (=> b!142290 m!169737))

(assert (=> b!142290 m!169737))

(assert (=> b!142290 m!169739))

(assert (=> bm!15588 d!45123))

(declare-fun d!45125 () Bool)

(declare-fun e!92722 () Bool)

(assert (=> d!45125 e!92722))

(declare-fun res!67844 () Bool)

(assert (=> d!45125 (=> res!67844 e!92722)))

(declare-fun lt!74610 () Bool)

(assert (=> d!45125 (= res!67844 (not lt!74610))))

(declare-fun lt!74613 () Bool)

(assert (=> d!45125 (= lt!74610 lt!74613)))

(declare-fun lt!74611 () Unit!4395)

(declare-fun e!92721 () Unit!4395)

(assert (=> d!45125 (= lt!74611 e!92721)))

(declare-fun c!26873 () Bool)

(assert (=> d!45125 (= c!26873 lt!74613)))

(assert (=> d!45125 (= lt!74613 (containsKey!179 (toList!889 lt!73751) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45125 (= (contains!921 lt!73751 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) lt!74610)))

(declare-fun b!142292 () Bool)

(declare-fun lt!74612 () Unit!4395)

(assert (=> b!142292 (= e!92721 lt!74612)))

(assert (=> b!142292 (= lt!74612 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73751) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142292 (isDefined!129 (getValueByKey!175 (toList!889 lt!73751) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142293 () Bool)

(declare-fun Unit!4507 () Unit!4395)

(assert (=> b!142293 (= e!92721 Unit!4507)))

(declare-fun b!142294 () Bool)

(assert (=> b!142294 (= e!92722 (isDefined!129 (getValueByKey!175 (toList!889 lt!73751) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45125 c!26873) b!142292))

(assert (= (and d!45125 (not c!26873)) b!142293))

(assert (= (and d!45125 (not res!67844)) b!142294))

(declare-fun m!171409 () Bool)

(assert (=> d!45125 m!171409))

(declare-fun m!171411 () Bool)

(assert (=> b!142292 m!171411))

(assert (=> b!142292 m!168251))

(assert (=> b!142292 m!168251))

(declare-fun m!171413 () Bool)

(assert (=> b!142292 m!171413))

(assert (=> b!142294 m!168251))

(assert (=> b!142294 m!168251))

(assert (=> b!142294 m!171413))

(assert (=> d!43827 d!45125))

(declare-fun e!92724 () Option!181)

(declare-fun b!142297 () Bool)

(assert (=> b!142297 (= e!92724 (getValueByKey!175 (t!6360 lt!73752) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142296 () Bool)

(declare-fun e!92723 () Option!181)

(assert (=> b!142296 (= e!92723 e!92724)))

(declare-fun c!26875 () Bool)

(assert (=> b!142296 (= c!26875 (and ((_ is Cons!1760) lt!73752) (not (= (_1!1352 (h!2367 lt!73752)) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!142298 () Bool)

(assert (=> b!142298 (= e!92724 None!179)))

(declare-fun b!142295 () Bool)

(assert (=> b!142295 (= e!92723 (Some!180 (_2!1352 (h!2367 lt!73752))))))

(declare-fun c!26874 () Bool)

(declare-fun d!45127 () Bool)

(assert (=> d!45127 (= c!26874 (and ((_ is Cons!1760) lt!73752) (= (_1!1352 (h!2367 lt!73752)) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45127 (= (getValueByKey!175 lt!73752 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) e!92723)))

(assert (= (and d!45127 c!26874) b!142295))

(assert (= (and d!45127 (not c!26874)) b!142296))

(assert (= (and b!142296 c!26875) b!142297))

(assert (= (and b!142296 (not c!26875)) b!142298))

(declare-fun m!171415 () Bool)

(assert (=> b!142297 m!171415))

(assert (=> d!43827 d!45127))

(declare-fun d!45129 () Bool)

(assert (=> d!45129 (= (getValueByKey!175 lt!73752 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74614 () Unit!4395)

(assert (=> d!45129 (= lt!74614 (choose!873 lt!73752 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92725 () Bool)

(assert (=> d!45129 e!92725))

(declare-fun res!67845 () Bool)

(assert (=> d!45129 (=> (not res!67845) (not e!92725))))

(assert (=> d!45129 (= res!67845 (isStrictlySorted!320 lt!73752))))

(assert (=> d!45129 (= (lemmaContainsTupThenGetReturnValue!91 lt!73752 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) lt!74614)))

(declare-fun b!142299 () Bool)

(declare-fun res!67846 () Bool)

(assert (=> b!142299 (=> (not res!67846) (not e!92725))))

(assert (=> b!142299 (= res!67846 (containsKey!179 lt!73752 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142300 () Bool)

(assert (=> b!142300 (= e!92725 (contains!923 lt!73752 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45129 res!67845) b!142299))

(assert (= (and b!142299 res!67846) b!142300))

(assert (=> d!45129 m!168245))

(declare-fun m!171417 () Bool)

(assert (=> d!45129 m!171417))

(declare-fun m!171419 () Bool)

(assert (=> d!45129 m!171419))

(declare-fun m!171421 () Bool)

(assert (=> b!142299 m!171421))

(declare-fun m!171423 () Bool)

(assert (=> b!142300 m!171423))

(assert (=> d!43827 d!45129))

(declare-fun d!45131 () Bool)

(declare-fun e!92726 () Bool)

(assert (=> d!45131 e!92726))

(declare-fun res!67848 () Bool)

(assert (=> d!45131 (=> (not res!67848) (not e!92726))))

(declare-fun lt!74615 () List!1764)

(assert (=> d!45131 (= res!67848 (isStrictlySorted!320 lt!74615))))

(declare-fun e!92728 () List!1764)

(assert (=> d!45131 (= lt!74615 e!92728)))

(declare-fun c!26876 () Bool)

(assert (=> d!45131 (= c!26876 (and ((_ is Cons!1760) (toList!889 lt!73455)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73455))) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45131 (isStrictlySorted!320 (toList!889 lt!73455))))

(assert (=> d!45131 (= (insertStrictlySorted!93 (toList!889 lt!73455) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) lt!74615)))

(declare-fun b!142301 () Bool)

(assert (=> b!142301 (= e!92726 (contains!923 lt!74615 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(declare-fun call!15759 () List!1764)

(declare-fun bm!15756 () Bool)

(declare-fun e!92729 () List!1764)

(assert (=> bm!15756 (= call!15759 ($colon$colon!93 e!92729 (ite c!26876 (h!2367 (toList!889 lt!73455)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26879 () Bool)

(assert (=> bm!15756 (= c!26879 c!26876)))

(declare-fun b!142302 () Bool)

(assert (=> b!142302 (= e!92728 call!15759)))

(declare-fun b!142303 () Bool)

(assert (=> b!142303 (= e!92729 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73455)) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142304 () Bool)

(declare-fun e!92730 () List!1764)

(declare-fun call!15760 () List!1764)

(assert (=> b!142304 (= e!92730 call!15760)))

(declare-fun bm!15757 () Bool)

(assert (=> bm!15757 (= call!15760 call!15759)))

(declare-fun b!142305 () Bool)

(declare-fun e!92727 () List!1764)

(declare-fun call!15761 () List!1764)

(assert (=> b!142305 (= e!92727 call!15761)))

(declare-fun b!142306 () Bool)

(declare-fun c!26878 () Bool)

(assert (=> b!142306 (= c!26878 (and ((_ is Cons!1760) (toList!889 lt!73455)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73455))) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142306 (= e!92730 e!92727)))

(declare-fun b!142307 () Bool)

(assert (=> b!142307 (= e!92728 e!92730)))

(declare-fun c!26877 () Bool)

(assert (=> b!142307 (= c!26877 (and ((_ is Cons!1760) (toList!889 lt!73455)) (= (_1!1352 (h!2367 (toList!889 lt!73455))) (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142308 () Bool)

(assert (=> b!142308 (= e!92729 (ite c!26877 (t!6360 (toList!889 lt!73455)) (ite c!26878 (Cons!1760 (h!2367 (toList!889 lt!73455)) (t!6360 (toList!889 lt!73455))) Nil!1761)))))

(declare-fun bm!15758 () Bool)

(assert (=> bm!15758 (= call!15761 call!15760)))

(declare-fun b!142309 () Bool)

(declare-fun res!67847 () Bool)

(assert (=> b!142309 (=> (not res!67847) (not e!92726))))

(assert (=> b!142309 (= res!67847 (containsKey!179 lt!74615 (_1!1352 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142310 () Bool)

(assert (=> b!142310 (= e!92727 call!15761)))

(assert (= (and d!45131 c!26876) b!142302))

(assert (= (and d!45131 (not c!26876)) b!142307))

(assert (= (and b!142307 c!26877) b!142304))

(assert (= (and b!142307 (not c!26877)) b!142306))

(assert (= (and b!142306 c!26878) b!142310))

(assert (= (and b!142306 (not c!26878)) b!142305))

(assert (= (or b!142310 b!142305) bm!15758))

(assert (= (or b!142304 bm!15758) bm!15757))

(assert (= (or b!142302 bm!15757) bm!15756))

(assert (= (and bm!15756 c!26879) b!142303))

(assert (= (and bm!15756 (not c!26879)) b!142308))

(assert (= (and d!45131 res!67848) b!142309))

(assert (= (and b!142309 res!67847) b!142301))

(declare-fun m!171425 () Bool)

(assert (=> b!142301 m!171425))

(declare-fun m!171427 () Bool)

(assert (=> b!142309 m!171427))

(declare-fun m!171429 () Bool)

(assert (=> b!142303 m!171429))

(declare-fun m!171431 () Bool)

(assert (=> bm!15756 m!171431))

(declare-fun m!171433 () Bool)

(assert (=> d!45131 m!171433))

(declare-fun m!171435 () Bool)

(assert (=> d!45131 m!171435))

(assert (=> d!43827 d!45131))

(assert (=> d!43677 d!43661))

(assert (=> b!140784 d!45011))

(declare-fun d!45133 () Bool)

(declare-fun res!67849 () Bool)

(declare-fun e!92731 () Bool)

(assert (=> d!45133 (=> res!67849 e!92731)))

(assert (=> d!45133 (= res!67849 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))) lt!73489)))))

(assert (=> d!45133 (= (containsKey!179 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489) e!92731)))

(declare-fun b!142311 () Bool)

(declare-fun e!92732 () Bool)

(assert (=> b!142311 (= e!92731 e!92732)))

(declare-fun res!67850 () Bool)

(assert (=> b!142311 (=> (not res!67850) (not e!92732))))

(assert (=> b!142311 (= res!67850 (and (or (not ((_ is Cons!1760) (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))) (bvsle (_1!1352 (h!2367 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))) lt!73489)) ((_ is Cons!1760) (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))) (bvslt (_1!1352 (h!2367 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))) lt!73489)))))

(declare-fun b!142312 () Bool)

(assert (=> b!142312 (= e!92732 (containsKey!179 (t!6360 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))) lt!73489))))

(assert (= (and d!45133 (not res!67849)) b!142311))

(assert (= (and b!142311 res!67850) b!142312))

(declare-fun m!171437 () Bool)

(assert (=> b!142312 m!171437))

(assert (=> d!43795 d!45133))

(declare-fun d!45135 () Bool)

(assert (=> d!45135 (isDefined!129 (getValueByKey!175 (toList!889 lt!73149) lt!73141))))

(declare-fun lt!74616 () Unit!4395)

(assert (=> d!45135 (= lt!74616 (choose!868 (toList!889 lt!73149) lt!73141))))

(declare-fun e!92733 () Bool)

(assert (=> d!45135 e!92733))

(declare-fun res!67851 () Bool)

(assert (=> d!45135 (=> (not res!67851) (not e!92733))))

(assert (=> d!45135 (= res!67851 (isStrictlySorted!320 (toList!889 lt!73149)))))

(assert (=> d!45135 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73149) lt!73141) lt!74616)))

(declare-fun b!142313 () Bool)

(assert (=> b!142313 (= e!92733 (containsKey!179 (toList!889 lt!73149) lt!73141))))

(assert (= (and d!45135 res!67851) b!142313))

(assert (=> d!45135 m!167513))

(assert (=> d!45135 m!167513))

(assert (=> d!45135 m!169085))

(declare-fun m!171439 () Bool)

(assert (=> d!45135 m!171439))

(assert (=> d!45135 m!168443))

(assert (=> b!142313 m!169081))

(assert (=> b!141016 d!45135))

(assert (=> b!141016 d!44913))

(assert (=> b!141016 d!43621))

(declare-fun d!45137 () Bool)

(assert (=> d!45137 (= (apply!120 lt!74058 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!74058) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6003 () Bool)

(assert (= bs!6003 d!45137))

(assert (=> bs!6003 m!166967))

(assert (=> bs!6003 m!171161))

(assert (=> bs!6003 m!171161))

(declare-fun m!171441 () Bool)

(assert (=> bs!6003 m!171441))

(assert (=> b!141038 d!45137))

(assert (=> b!141038 d!43651))

(assert (=> b!140251 d!43605))

(declare-fun lt!74617 () Bool)

(declare-fun d!45139 () Bool)

(assert (=> d!45139 (= lt!74617 (select (content!137 lt!73509) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!92734 () Bool)

(assert (=> d!45139 (= lt!74617 e!92734)))

(declare-fun res!67853 () Bool)

(assert (=> d!45139 (=> (not res!67853) (not e!92734))))

(assert (=> d!45139 (= res!67853 ((_ is Cons!1760) lt!73509))))

(assert (=> d!45139 (= (contains!923 lt!73509 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74617)))

(declare-fun b!142314 () Bool)

(declare-fun e!92735 () Bool)

(assert (=> b!142314 (= e!92734 e!92735)))

(declare-fun res!67852 () Bool)

(assert (=> b!142314 (=> res!67852 e!92735)))

(assert (=> b!142314 (= res!67852 (= (h!2367 lt!73509) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142315 () Bool)

(assert (=> b!142315 (= e!92735 (contains!923 (t!6360 lt!73509) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45139 res!67853) b!142314))

(assert (= (and b!142314 (not res!67852)) b!142315))

(declare-fun m!171443 () Bool)

(assert (=> d!45139 m!171443))

(declare-fun m!171445 () Bool)

(assert (=> d!45139 m!171445))

(declare-fun m!171447 () Bool)

(assert (=> b!142315 m!171447))

(assert (=> b!140363 d!45139))

(declare-fun d!45141 () Bool)

(declare-fun e!92737 () Bool)

(assert (=> d!45141 e!92737))

(declare-fun res!67854 () Bool)

(assert (=> d!45141 (=> res!67854 e!92737)))

(declare-fun lt!74618 () Bool)

(assert (=> d!45141 (= res!67854 (not lt!74618))))

(declare-fun lt!74621 () Bool)

(assert (=> d!45141 (= lt!74618 lt!74621)))

(declare-fun lt!74619 () Unit!4395)

(declare-fun e!92736 () Unit!4395)

(assert (=> d!45141 (= lt!74619 e!92736)))

(declare-fun c!26880 () Bool)

(assert (=> d!45141 (= c!26880 lt!74621)))

(assert (=> d!45141 (= lt!74621 (containsKey!179 (toList!889 lt!73730) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45141 (= (contains!921 lt!73730 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) lt!74618)))

(declare-fun b!142316 () Bool)

(declare-fun lt!74620 () Unit!4395)

(assert (=> b!142316 (= e!92736 lt!74620)))

(assert (=> b!142316 (= lt!74620 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73730) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142316 (isDefined!129 (getValueByKey!175 (toList!889 lt!73730) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142317 () Bool)

(declare-fun Unit!4508 () Unit!4395)

(assert (=> b!142317 (= e!92736 Unit!4508)))

(declare-fun b!142318 () Bool)

(assert (=> b!142318 (= e!92737 (isDefined!129 (getValueByKey!175 (toList!889 lt!73730) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45141 c!26880) b!142316))

(assert (= (and d!45141 (not c!26880)) b!142317))

(assert (= (and d!45141 (not res!67854)) b!142318))

(declare-fun m!171449 () Bool)

(assert (=> d!45141 m!171449))

(declare-fun m!171451 () Bool)

(assert (=> b!142316 m!171451))

(assert (=> b!142316 m!168167))

(assert (=> b!142316 m!168167))

(declare-fun m!171453 () Bool)

(assert (=> b!142316 m!171453))

(assert (=> b!142318 m!168167))

(assert (=> b!142318 m!168167))

(assert (=> b!142318 m!171453))

(assert (=> d!43801 d!45141))

(declare-fun e!92739 () Option!181)

(declare-fun b!142321 () Bool)

(assert (=> b!142321 (= e!92739 (getValueByKey!175 (t!6360 lt!73731) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142320 () Bool)

(declare-fun e!92738 () Option!181)

(assert (=> b!142320 (= e!92738 e!92739)))

(declare-fun c!26882 () Bool)

(assert (=> b!142320 (= c!26882 (and ((_ is Cons!1760) lt!73731) (not (= (_1!1352 (h!2367 lt!73731)) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!142322 () Bool)

(assert (=> b!142322 (= e!92739 None!179)))

(declare-fun b!142319 () Bool)

(assert (=> b!142319 (= e!92738 (Some!180 (_2!1352 (h!2367 lt!73731))))))

(declare-fun d!45143 () Bool)

(declare-fun c!26881 () Bool)

(assert (=> d!45143 (= c!26881 (and ((_ is Cons!1760) lt!73731) (= (_1!1352 (h!2367 lt!73731)) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45143 (= (getValueByKey!175 lt!73731 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) e!92738)))

(assert (= (and d!45143 c!26881) b!142319))

(assert (= (and d!45143 (not c!26881)) b!142320))

(assert (= (and b!142320 c!26882) b!142321))

(assert (= (and b!142320 (not c!26882)) b!142322))

(declare-fun m!171455 () Bool)

(assert (=> b!142321 m!171455))

(assert (=> d!43801 d!45143))

(declare-fun d!45145 () Bool)

(assert (=> d!45145 (= (getValueByKey!175 lt!73731 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74622 () Unit!4395)

(assert (=> d!45145 (= lt!74622 (choose!873 lt!73731 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92740 () Bool)

(assert (=> d!45145 e!92740))

(declare-fun res!67855 () Bool)

(assert (=> d!45145 (=> (not res!67855) (not e!92740))))

(assert (=> d!45145 (= res!67855 (isStrictlySorted!320 lt!73731))))

(assert (=> d!45145 (= (lemmaContainsTupThenGetReturnValue!91 lt!73731 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) lt!74622)))

(declare-fun b!142323 () Bool)

(declare-fun res!67856 () Bool)

(assert (=> b!142323 (=> (not res!67856) (not e!92740))))

(assert (=> b!142323 (= res!67856 (containsKey!179 lt!73731 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142324 () Bool)

(assert (=> b!142324 (= e!92740 (contains!923 lt!73731 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45145 res!67855) b!142323))

(assert (= (and b!142323 res!67856) b!142324))

(assert (=> d!45145 m!168161))

(declare-fun m!171457 () Bool)

(assert (=> d!45145 m!171457))

(declare-fun m!171459 () Bool)

(assert (=> d!45145 m!171459))

(declare-fun m!171461 () Bool)

(assert (=> b!142323 m!171461))

(declare-fun m!171463 () Bool)

(assert (=> b!142324 m!171463))

(assert (=> d!43801 d!45145))

(declare-fun d!45147 () Bool)

(declare-fun e!92741 () Bool)

(assert (=> d!45147 e!92741))

(declare-fun res!67858 () Bool)

(assert (=> d!45147 (=> (not res!67858) (not e!92741))))

(declare-fun lt!74623 () List!1764)

(assert (=> d!45147 (= res!67858 (isStrictlySorted!320 lt!74623))))

(declare-fun e!92743 () List!1764)

(assert (=> d!45147 (= lt!74623 e!92743)))

(declare-fun c!26883 () Bool)

(assert (=> d!45147 (= c!26883 (and ((_ is Cons!1760) (toList!889 lt!73487)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73487))) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45147 (isStrictlySorted!320 (toList!889 lt!73487))))

(assert (=> d!45147 (= (insertStrictlySorted!93 (toList!889 lt!73487) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))) lt!74623)))

(declare-fun b!142325 () Bool)

(assert (=> b!142325 (= e!92741 (contains!923 lt!74623 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(declare-fun call!15762 () List!1764)

(declare-fun bm!15759 () Bool)

(declare-fun e!92744 () List!1764)

(assert (=> bm!15759 (= call!15762 ($colon$colon!93 e!92744 (ite c!26883 (h!2367 (toList!889 lt!73487)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26886 () Bool)

(assert (=> bm!15759 (= c!26886 c!26883)))

(declare-fun b!142326 () Bool)

(assert (=> b!142326 (= e!92743 call!15762)))

(declare-fun b!142327 () Bool)

(assert (=> b!142327 (= e!92744 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73487)) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142328 () Bool)

(declare-fun e!92745 () List!1764)

(declare-fun call!15763 () List!1764)

(assert (=> b!142328 (= e!92745 call!15763)))

(declare-fun bm!15760 () Bool)

(assert (=> bm!15760 (= call!15763 call!15762)))

(declare-fun b!142329 () Bool)

(declare-fun e!92742 () List!1764)

(declare-fun call!15764 () List!1764)

(assert (=> b!142329 (= e!92742 call!15764)))

(declare-fun b!142330 () Bool)

(declare-fun c!26885 () Bool)

(assert (=> b!142330 (= c!26885 (and ((_ is Cons!1760) (toList!889 lt!73487)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73487))) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142330 (= e!92745 e!92742)))

(declare-fun b!142331 () Bool)

(assert (=> b!142331 (= e!92743 e!92745)))

(declare-fun c!26884 () Bool)

(assert (=> b!142331 (= c!26884 (and ((_ is Cons!1760) (toList!889 lt!73487)) (= (_1!1352 (h!2367 (toList!889 lt!73487))) (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142332 () Bool)

(assert (=> b!142332 (= e!92744 (ite c!26884 (t!6360 (toList!889 lt!73487)) (ite c!26885 (Cons!1760 (h!2367 (toList!889 lt!73487)) (t!6360 (toList!889 lt!73487))) Nil!1761)))))

(declare-fun bm!15761 () Bool)

(assert (=> bm!15761 (= call!15764 call!15763)))

(declare-fun b!142333 () Bool)

(declare-fun res!67857 () Bool)

(assert (=> b!142333 (=> (not res!67857) (not e!92741))))

(assert (=> b!142333 (= res!67857 (containsKey!179 lt!74623 (_1!1352 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142334 () Bool)

(assert (=> b!142334 (= e!92742 call!15764)))

(assert (= (and d!45147 c!26883) b!142326))

(assert (= (and d!45147 (not c!26883)) b!142331))

(assert (= (and b!142331 c!26884) b!142328))

(assert (= (and b!142331 (not c!26884)) b!142330))

(assert (= (and b!142330 c!26885) b!142334))

(assert (= (and b!142330 (not c!26885)) b!142329))

(assert (= (or b!142334 b!142329) bm!15761))

(assert (= (or b!142328 bm!15761) bm!15760))

(assert (= (or b!142326 bm!15760) bm!15759))

(assert (= (and bm!15759 c!26886) b!142327))

(assert (= (and bm!15759 (not c!26886)) b!142332))

(assert (= (and d!45147 res!67858) b!142333))

(assert (= (and b!142333 res!67857) b!142325))

(declare-fun m!171465 () Bool)

(assert (=> b!142325 m!171465))

(declare-fun m!171467 () Bool)

(assert (=> b!142333 m!171467))

(declare-fun m!171469 () Bool)

(assert (=> b!142327 m!171469))

(declare-fun m!171471 () Bool)

(assert (=> bm!15759 m!171471))

(declare-fun m!171473 () Bool)

(assert (=> d!45147 m!171473))

(declare-fun m!171475 () Bool)

(assert (=> d!45147 m!171475))

(assert (=> d!43801 d!45147))

(declare-fun d!45149 () Bool)

(assert (=> d!45149 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!6004 () Bool)

(assert (= bs!6004 d!45149))

(assert (=> bs!6004 m!167727))

(declare-fun m!171477 () Bool)

(assert (=> bs!6004 m!171477))

(assert (=> b!140850 d!45149))

(assert (=> b!140850 d!44205))

(declare-fun d!45151 () Bool)

(assert (=> d!45151 (isDefined!129 (getValueByKey!175 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun lt!74624 () Unit!4395)

(assert (=> d!45151 (= lt!74624 (choose!868 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun e!92746 () Bool)

(assert (=> d!45151 e!92746))

(declare-fun res!67859 () Bool)

(assert (=> d!45151 (=> (not res!67859) (not e!92746))))

(assert (=> d!45151 (= res!67859 (isStrictlySorted!320 (toList!889 (map!1438 (_2!1353 lt!73341)))))))

(assert (=> d!45151 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) lt!74624)))

(declare-fun b!142335 () Bool)

(assert (=> b!142335 (= e!92746 (containsKey!179 (toList!889 (map!1438 (_2!1353 lt!73341))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!45151 res!67859) b!142335))

(assert (=> d!45151 m!166733))

(assert (=> d!45151 m!167919))

(assert (=> d!45151 m!167919))

(assert (=> d!45151 m!167921))

(assert (=> d!45151 m!166733))

(declare-fun m!171479 () Bool)

(assert (=> d!45151 m!171479))

(declare-fun m!171481 () Bool)

(assert (=> d!45151 m!171481))

(assert (=> b!142335 m!166733))

(assert (=> b!142335 m!167915))

(assert (=> b!140450 d!45151))

(assert (=> b!140450 d!44929))

(assert (=> b!140450 d!44931))

(assert (=> d!44061 d!43843))

(assert (=> d!44061 d!43845))

(declare-fun d!45153 () Bool)

(assert (=> d!45153 (isDefined!129 (getValueByKey!175 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45153 true))

(declare-fun _$12!417 () Unit!4395)

(assert (=> d!45153 (= (choose!868 (toList!889 lt!73135) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!417)))

(declare-fun bs!6005 () Bool)

(assert (= bs!6005 d!45153))

(assert (=> bs!6005 m!167383))

(assert (=> bs!6005 m!167383))

(assert (=> bs!6005 m!167411))

(assert (=> d!44061 d!45153))

(assert (=> d!44061 d!44697))

(declare-fun d!45155 () Bool)

(declare-fun e!92748 () Bool)

(assert (=> d!45155 e!92748))

(declare-fun res!67860 () Bool)

(assert (=> d!45155 (=> res!67860 e!92748)))

(declare-fun lt!74625 () Bool)

(assert (=> d!45155 (= res!67860 (not lt!74625))))

(declare-fun lt!74628 () Bool)

(assert (=> d!45155 (= lt!74625 lt!74628)))

(declare-fun lt!74626 () Unit!4395)

(declare-fun e!92747 () Unit!4395)

(assert (=> d!45155 (= lt!74626 e!92747)))

(declare-fun c!26887 () Bool)

(assert (=> d!45155 (= c!26887 lt!74628)))

(assert (=> d!45155 (= lt!74628 (containsKey!179 (toList!889 lt!73941) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(assert (=> d!45155 (= (contains!921 lt!73941 (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)) lt!74625)))

(declare-fun b!142336 () Bool)

(declare-fun lt!74627 () Unit!4395)

(assert (=> b!142336 (= e!92747 lt!74627)))

(assert (=> b!142336 (= lt!74627 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73941) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(assert (=> b!142336 (isDefined!129 (getValueByKey!175 (toList!889 lt!73941) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000)))))

(declare-fun b!142337 () Bool)

(declare-fun Unit!4509 () Unit!4395)

(assert (=> b!142337 (= e!92747 Unit!4509)))

(declare-fun b!142338 () Bool)

(assert (=> b!142338 (= e!92748 (isDefined!129 (getValueByKey!175 (toList!889 lt!73941) (select (arr!2314 (_keys!4699 (_2!1353 lt!73223))) #b00000000000000000000000000000000))))))

(assert (= (and d!45155 c!26887) b!142336))

(assert (= (and d!45155 (not c!26887)) b!142337))

(assert (= (and d!45155 (not res!67860)) b!142338))

(assert (=> d!45155 m!167711))

(declare-fun m!171483 () Bool)

(assert (=> d!45155 m!171483))

(assert (=> b!142336 m!167711))

(declare-fun m!171485 () Bool)

(assert (=> b!142336 m!171485))

(assert (=> b!142336 m!167711))

(assert (=> b!142336 m!170917))

(assert (=> b!142336 m!170917))

(declare-fun m!171487 () Bool)

(assert (=> b!142336 m!171487))

(assert (=> b!142338 m!167711))

(assert (=> b!142338 m!170917))

(assert (=> b!142338 m!170917))

(assert (=> b!142338 m!171487))

(assert (=> b!140864 d!45155))

(declare-fun d!45157 () Bool)

(declare-fun e!92750 () Bool)

(assert (=> d!45157 e!92750))

(declare-fun res!67861 () Bool)

(assert (=> d!45157 (=> res!67861 e!92750)))

(declare-fun lt!74629 () Bool)

(assert (=> d!45157 (= res!67861 (not lt!74629))))

(declare-fun lt!74632 () Bool)

(assert (=> d!45157 (= lt!74629 lt!74632)))

(declare-fun lt!74630 () Unit!4395)

(declare-fun e!92749 () Unit!4395)

(assert (=> d!45157 (= lt!74630 e!92749)))

(declare-fun c!26888 () Bool)

(assert (=> d!45157 (= c!26888 lt!74632)))

(assert (=> d!45157 (= lt!74632 (containsKey!179 (toList!889 lt!73593) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45157 (= (contains!921 lt!73593 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74629)))

(declare-fun b!142339 () Bool)

(declare-fun lt!74631 () Unit!4395)

(assert (=> b!142339 (= e!92749 lt!74631)))

(assert (=> b!142339 (= lt!74631 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73593) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142339 (isDefined!129 (getValueByKey!175 (toList!889 lt!73593) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142340 () Bool)

(declare-fun Unit!4510 () Unit!4395)

(assert (=> b!142340 (= e!92749 Unit!4510)))

(declare-fun b!142341 () Bool)

(assert (=> b!142341 (= e!92750 (isDefined!129 (getValueByKey!175 (toList!889 lt!73593) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45157 c!26888) b!142339))

(assert (= (and d!45157 (not c!26888)) b!142340))

(assert (= (and d!45157 (not res!67861)) b!142341))

(declare-fun m!171489 () Bool)

(assert (=> d!45157 m!171489))

(declare-fun m!171491 () Bool)

(assert (=> b!142339 m!171491))

(declare-fun m!171493 () Bool)

(assert (=> b!142339 m!171493))

(assert (=> b!142339 m!171493))

(declare-fun m!171495 () Bool)

(assert (=> b!142339 m!171495))

(assert (=> b!142341 m!171493))

(assert (=> b!142341 m!171493))

(assert (=> b!142341 m!171495))

(assert (=> b!140260 d!45157))

(declare-fun d!45159 () Bool)

(assert (=> d!45159 (= (get!1538 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3283 (getValueByKey!175 (toList!889 lt!73441) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43933 d!45159))

(assert (=> d!43933 d!44331))

(declare-fun d!45161 () Bool)

(assert (=> d!45161 (contains!921 (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74065)))

(declare-fun lt!74633 () Unit!4395)

(assert (=> d!45161 (= lt!74633 (choose!871 lt!74067 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!74065))))

(assert (=> d!45161 (contains!921 lt!74067 lt!74065)))

(assert (=> d!45161 (= (addStillContains!96 lt!74067 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!74065) lt!74633)))

(declare-fun bs!6006 () Bool)

(assert (= bs!6006 d!45161))

(assert (=> bs!6006 m!169129))

(assert (=> bs!6006 m!169129))

(assert (=> bs!6006 m!169131))

(assert (=> bs!6006 m!166731))

(declare-fun m!171497 () Bool)

(assert (=> bs!6006 m!171497))

(declare-fun m!171499 () Bool)

(assert (=> bs!6006 m!171499))

(assert (=> b!141025 d!45161))

(assert (=> b!141025 d!45033))

(declare-fun d!45163 () Bool)

(declare-fun e!92751 () Bool)

(assert (=> d!45163 e!92751))

(declare-fun res!67863 () Bool)

(assert (=> d!45163 (=> (not res!67863) (not e!92751))))

(declare-fun lt!74636 () ListLongMap!1747)

(assert (=> d!45163 (= res!67863 (contains!921 lt!74636 (_1!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74637 () List!1764)

(assert (=> d!45163 (= lt!74636 (ListLongMap!1748 lt!74637))))

(declare-fun lt!74634 () Unit!4395)

(declare-fun lt!74635 () Unit!4395)

(assert (=> d!45163 (= lt!74634 lt!74635)))

(assert (=> d!45163 (= (getValueByKey!175 lt!74637 (_1!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45163 (= lt!74635 (lemmaContainsTupThenGetReturnValue!91 lt!74637 (_1!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45163 (= lt!74637 (insertStrictlySorted!93 (toList!889 lt!74063) (_1!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45163 (= (+!174 lt!74063 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74636)))

(declare-fun b!142342 () Bool)

(declare-fun res!67862 () Bool)

(assert (=> b!142342 (=> (not res!67862) (not e!92751))))

(assert (=> b!142342 (= res!67862 (= (getValueByKey!175 (toList!889 lt!74636) (_1!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142343 () Bool)

(assert (=> b!142343 (= e!92751 (contains!923 (toList!889 lt!74636) (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45163 res!67863) b!142342))

(assert (= (and b!142342 res!67862) b!142343))

(declare-fun m!171501 () Bool)

(assert (=> d!45163 m!171501))

(declare-fun m!171503 () Bool)

(assert (=> d!45163 m!171503))

(declare-fun m!171505 () Bool)

(assert (=> d!45163 m!171505))

(declare-fun m!171507 () Bool)

(assert (=> d!45163 m!171507))

(declare-fun m!171509 () Bool)

(assert (=> b!142342 m!171509))

(declare-fun m!171511 () Bool)

(assert (=> b!142343 m!171511))

(assert (=> b!141025 d!45163))

(declare-fun d!45165 () Bool)

(assert (=> d!45165 (= (apply!120 (+!174 lt!74069 (tuple2!2685 lt!74073 (minValue!2790 newMap!16))) lt!74075) (apply!120 lt!74069 lt!74075))))

(declare-fun lt!74638 () Unit!4395)

(assert (=> d!45165 (= lt!74638 (choose!870 lt!74069 lt!74073 (minValue!2790 newMap!16) lt!74075))))

(declare-fun e!92752 () Bool)

(assert (=> d!45165 e!92752))

(declare-fun res!67864 () Bool)

(assert (=> d!45165 (=> (not res!67864) (not e!92752))))

(assert (=> d!45165 (= res!67864 (contains!921 lt!74069 lt!74075))))

(assert (=> d!45165 (= (addApplyDifferent!96 lt!74069 lt!74073 (minValue!2790 newMap!16) lt!74075) lt!74638)))

(declare-fun b!142344 () Bool)

(assert (=> b!142344 (= e!92752 (not (= lt!74075 lt!74073)))))

(assert (= (and d!45165 res!67864) b!142344))

(declare-fun m!171513 () Bool)

(assert (=> d!45165 m!171513))

(assert (=> d!45165 m!169137))

(assert (=> d!45165 m!169139))

(assert (=> d!45165 m!169137))

(assert (=> d!45165 m!169135))

(declare-fun m!171515 () Bool)

(assert (=> d!45165 m!171515))

(assert (=> b!141025 d!45165))

(declare-fun d!45167 () Bool)

(assert (=> d!45167 (= (apply!120 lt!74072 lt!74064) (get!1538 (getValueByKey!175 (toList!889 lt!74072) lt!74064)))))

(declare-fun bs!6007 () Bool)

(assert (= bs!6007 d!45167))

(declare-fun m!171517 () Bool)

(assert (=> bs!6007 m!171517))

(assert (=> bs!6007 m!171517))

(declare-fun m!171519 () Bool)

(assert (=> bs!6007 m!171519))

(assert (=> b!141025 d!45167))

(declare-fun d!45169 () Bool)

(assert (=> d!45169 (= (apply!120 (+!174 lt!74063 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74074) (apply!120 lt!74063 lt!74074))))

(declare-fun lt!74639 () Unit!4395)

(assert (=> d!45169 (= lt!74639 (choose!870 lt!74063 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!74074))))

(declare-fun e!92753 () Bool)

(assert (=> d!45169 e!92753))

(declare-fun res!67865 () Bool)

(assert (=> d!45169 (=> (not res!67865) (not e!92753))))

(assert (=> d!45169 (= res!67865 (contains!921 lt!74063 lt!74074))))

(assert (=> d!45169 (= (addApplyDifferent!96 lt!74063 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!74074) lt!74639)))

(declare-fun b!142345 () Bool)

(assert (=> b!142345 (= e!92753 (not (= lt!74074 lt!74068)))))

(assert (= (and d!45169 res!67865) b!142345))

(declare-fun m!171521 () Bool)

(assert (=> d!45169 m!171521))

(assert (=> d!45169 m!169141))

(assert (=> d!45169 m!169143))

(assert (=> d!45169 m!169141))

(assert (=> d!45169 m!169151))

(assert (=> d!45169 m!166731))

(declare-fun m!171523 () Bool)

(assert (=> d!45169 m!171523))

(assert (=> b!141025 d!45169))

(declare-fun d!45171 () Bool)

(assert (=> d!45171 (= (apply!120 (+!174 lt!74069 (tuple2!2685 lt!74073 (minValue!2790 newMap!16))) lt!74075) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!74069 (tuple2!2685 lt!74073 (minValue!2790 newMap!16)))) lt!74075)))))

(declare-fun bs!6008 () Bool)

(assert (= bs!6008 d!45171))

(declare-fun m!171525 () Bool)

(assert (=> bs!6008 m!171525))

(assert (=> bs!6008 m!171525))

(declare-fun m!171527 () Bool)

(assert (=> bs!6008 m!171527))

(assert (=> b!141025 d!45171))

(declare-fun d!45173 () Bool)

(assert (=> d!45173 (= (apply!120 (+!174 lt!74063 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74074) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!74063 (tuple2!2685 lt!74068 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74074)))))

(declare-fun bs!6009 () Bool)

(assert (= bs!6009 d!45173))

(declare-fun m!171529 () Bool)

(assert (=> bs!6009 m!171529))

(assert (=> bs!6009 m!171529))

(declare-fun m!171531 () Bool)

(assert (=> bs!6009 m!171531))

(assert (=> b!141025 d!45173))

(declare-fun d!45175 () Bool)

(declare-fun e!92754 () Bool)

(assert (=> d!45175 e!92754))

(declare-fun res!67867 () Bool)

(assert (=> d!45175 (=> (not res!67867) (not e!92754))))

(declare-fun lt!74642 () ListLongMap!1747)

(assert (=> d!45175 (= res!67867 (contains!921 lt!74642 (_1!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16)))))))

(declare-fun lt!74643 () List!1764)

(assert (=> d!45175 (= lt!74642 (ListLongMap!1748 lt!74643))))

(declare-fun lt!74640 () Unit!4395)

(declare-fun lt!74641 () Unit!4395)

(assert (=> d!45175 (= lt!74640 lt!74641)))

(assert (=> d!45175 (= (getValueByKey!175 lt!74643 (_1!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16)))))))

(assert (=> d!45175 (= lt!74641 (lemmaContainsTupThenGetReturnValue!91 lt!74643 (_1!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16)))))))

(assert (=> d!45175 (= lt!74643 (insertStrictlySorted!93 (toList!889 lt!74072) (_1!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16)))))))

(assert (=> d!45175 (= (+!174 lt!74072 (tuple2!2685 lt!74055 (minValue!2790 newMap!16))) lt!74642)))

(declare-fun b!142346 () Bool)

(declare-fun res!67866 () Bool)

(assert (=> b!142346 (=> (not res!67866) (not e!92754))))

(assert (=> b!142346 (= res!67866 (= (getValueByKey!175 (toList!889 lt!74642) (_1!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!74055 (minValue!2790 newMap!16))))))))

(declare-fun b!142347 () Bool)

(assert (=> b!142347 (= e!92754 (contains!923 (toList!889 lt!74642) (tuple2!2685 lt!74055 (minValue!2790 newMap!16))))))

(assert (= (and d!45175 res!67867) b!142346))

(assert (= (and b!142346 res!67866) b!142347))

(declare-fun m!171533 () Bool)

(assert (=> d!45175 m!171533))

(declare-fun m!171535 () Bool)

(assert (=> d!45175 m!171535))

(declare-fun m!171537 () Bool)

(assert (=> d!45175 m!171537))

(declare-fun m!171539 () Bool)

(assert (=> d!45175 m!171539))

(declare-fun m!171541 () Bool)

(assert (=> b!142346 m!171541))

(declare-fun m!171543 () Bool)

(assert (=> b!142347 m!171543))

(assert (=> b!141025 d!45175))

(declare-fun d!45177 () Bool)

(declare-fun e!92755 () Bool)

(assert (=> d!45177 e!92755))

(declare-fun res!67869 () Bool)

(assert (=> d!45177 (=> (not res!67869) (not e!92755))))

(declare-fun lt!74646 () ListLongMap!1747)

(assert (=> d!45177 (= res!67869 (contains!921 lt!74646 (_1!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74647 () List!1764)

(assert (=> d!45177 (= lt!74646 (ListLongMap!1748 lt!74647))))

(declare-fun lt!74644 () Unit!4395)

(declare-fun lt!74645 () Unit!4395)

(assert (=> d!45177 (= lt!74644 lt!74645)))

(assert (=> d!45177 (= (getValueByKey!175 lt!74647 (_1!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45177 (= lt!74645 (lemmaContainsTupThenGetReturnValue!91 lt!74647 (_1!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45177 (= lt!74647 (insertStrictlySorted!93 (toList!889 lt!74067) (_1!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45177 (= (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74646)))

(declare-fun b!142348 () Bool)

(declare-fun res!67868 () Bool)

(assert (=> b!142348 (=> (not res!67868) (not e!92755))))

(assert (=> b!142348 (= res!67868 (= (getValueByKey!175 (toList!889 lt!74646) (_1!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142349 () Bool)

(assert (=> b!142349 (= e!92755 (contains!923 (toList!889 lt!74646) (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45177 res!67869) b!142348))

(assert (= (and b!142348 res!67868) b!142349))

(declare-fun m!171545 () Bool)

(assert (=> d!45177 m!171545))

(declare-fun m!171547 () Bool)

(assert (=> d!45177 m!171547))

(declare-fun m!171549 () Bool)

(assert (=> d!45177 m!171549))

(declare-fun m!171551 () Bool)

(assert (=> d!45177 m!171551))

(declare-fun m!171553 () Bool)

(assert (=> b!142348 m!171553))

(declare-fun m!171555 () Bool)

(assert (=> b!142349 m!171555))

(assert (=> b!141025 d!45177))

(declare-fun d!45179 () Bool)

(assert (=> d!45179 (= (apply!120 (+!174 lt!74072 (tuple2!2685 lt!74055 (minValue!2790 newMap!16))) lt!74064) (apply!120 lt!74072 lt!74064))))

(declare-fun lt!74648 () Unit!4395)

(assert (=> d!45179 (= lt!74648 (choose!870 lt!74072 lt!74055 (minValue!2790 newMap!16) lt!74064))))

(declare-fun e!92756 () Bool)

(assert (=> d!45179 e!92756))

(declare-fun res!67870 () Bool)

(assert (=> d!45179 (=> (not res!67870) (not e!92756))))

(assert (=> d!45179 (= res!67870 (contains!921 lt!74072 lt!74064))))

(assert (=> d!45179 (= (addApplyDifferent!96 lt!74072 lt!74055 (minValue!2790 newMap!16) lt!74064) lt!74648)))

(declare-fun b!142350 () Bool)

(assert (=> b!142350 (= e!92756 (not (= lt!74064 lt!74055)))))

(assert (= (and d!45179 res!67870) b!142350))

(declare-fun m!171557 () Bool)

(assert (=> d!45179 m!171557))

(assert (=> d!45179 m!169123))

(assert (=> d!45179 m!169125))

(assert (=> d!45179 m!169123))

(assert (=> d!45179 m!169149))

(declare-fun m!171559 () Bool)

(assert (=> d!45179 m!171559))

(assert (=> b!141025 d!45179))

(declare-fun d!45181 () Bool)

(declare-fun e!92758 () Bool)

(assert (=> d!45181 e!92758))

(declare-fun res!67871 () Bool)

(assert (=> d!45181 (=> res!67871 e!92758)))

(declare-fun lt!74649 () Bool)

(assert (=> d!45181 (= res!67871 (not lt!74649))))

(declare-fun lt!74652 () Bool)

(assert (=> d!45181 (= lt!74649 lt!74652)))

(declare-fun lt!74650 () Unit!4395)

(declare-fun e!92757 () Unit!4395)

(assert (=> d!45181 (= lt!74650 e!92757)))

(declare-fun c!26889 () Bool)

(assert (=> d!45181 (= c!26889 lt!74652)))

(assert (=> d!45181 (= lt!74652 (containsKey!179 (toList!889 (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74065))))

(assert (=> d!45181 (= (contains!921 (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74065) lt!74649)))

(declare-fun b!142351 () Bool)

(declare-fun lt!74651 () Unit!4395)

(assert (=> b!142351 (= e!92757 lt!74651)))

(assert (=> b!142351 (= lt!74651 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74065))))

(assert (=> b!142351 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74065))))

(declare-fun b!142352 () Bool)

(declare-fun Unit!4511 () Unit!4395)

(assert (=> b!142352 (= e!92757 Unit!4511)))

(declare-fun b!142353 () Bool)

(assert (=> b!142353 (= e!92758 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!74067 (tuple2!2685 lt!74060 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74065)))))

(assert (= (and d!45181 c!26889) b!142351))

(assert (= (and d!45181 (not c!26889)) b!142352))

(assert (= (and d!45181 (not res!67871)) b!142353))

(declare-fun m!171561 () Bool)

(assert (=> d!45181 m!171561))

(declare-fun m!171563 () Bool)

(assert (=> b!142351 m!171563))

(declare-fun m!171565 () Bool)

(assert (=> b!142351 m!171565))

(assert (=> b!142351 m!171565))

(declare-fun m!171567 () Bool)

(assert (=> b!142351 m!171567))

(assert (=> b!142353 m!171565))

(assert (=> b!142353 m!171565))

(assert (=> b!142353 m!171567))

(assert (=> b!141025 d!45181))

(declare-fun d!45183 () Bool)

(declare-fun e!92759 () Bool)

(assert (=> d!45183 e!92759))

(declare-fun res!67873 () Bool)

(assert (=> d!45183 (=> (not res!67873) (not e!92759))))

(declare-fun lt!74655 () ListLongMap!1747)

(assert (=> d!45183 (= res!67873 (contains!921 lt!74655 (_1!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16)))))))

(declare-fun lt!74656 () List!1764)

(assert (=> d!45183 (= lt!74655 (ListLongMap!1748 lt!74656))))

(declare-fun lt!74653 () Unit!4395)

(declare-fun lt!74654 () Unit!4395)

(assert (=> d!45183 (= lt!74653 lt!74654)))

(assert (=> d!45183 (= (getValueByKey!175 lt!74656 (_1!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16)))))))

(assert (=> d!45183 (= lt!74654 (lemmaContainsTupThenGetReturnValue!91 lt!74656 (_1!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16)))))))

(assert (=> d!45183 (= lt!74656 (insertStrictlySorted!93 (toList!889 lt!74069) (_1!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16)))))))

(assert (=> d!45183 (= (+!174 lt!74069 (tuple2!2685 lt!74073 (minValue!2790 newMap!16))) lt!74655)))

(declare-fun b!142354 () Bool)

(declare-fun res!67872 () Bool)

(assert (=> b!142354 (=> (not res!67872) (not e!92759))))

(assert (=> b!142354 (= res!67872 (= (getValueByKey!175 (toList!889 lt!74655) (_1!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!74073 (minValue!2790 newMap!16))))))))

(declare-fun b!142355 () Bool)

(assert (=> b!142355 (= e!92759 (contains!923 (toList!889 lt!74655) (tuple2!2685 lt!74073 (minValue!2790 newMap!16))))))

(assert (= (and d!45183 res!67873) b!142354))

(assert (= (and b!142354 res!67872) b!142355))

(declare-fun m!171569 () Bool)

(assert (=> d!45183 m!171569))

(declare-fun m!171571 () Bool)

(assert (=> d!45183 m!171571))

(declare-fun m!171573 () Bool)

(assert (=> d!45183 m!171573))

(declare-fun m!171575 () Bool)

(assert (=> d!45183 m!171575))

(declare-fun m!171577 () Bool)

(assert (=> b!142354 m!171577))

(declare-fun m!171579 () Bool)

(assert (=> b!142355 m!171579))

(assert (=> b!141025 d!45183))

(declare-fun d!45185 () Bool)

(assert (=> d!45185 (= (apply!120 lt!74063 lt!74074) (get!1538 (getValueByKey!175 (toList!889 lt!74063) lt!74074)))))

(declare-fun bs!6010 () Bool)

(assert (= bs!6010 d!45185))

(declare-fun m!171581 () Bool)

(assert (=> bs!6010 m!171581))

(assert (=> bs!6010 m!171581))

(declare-fun m!171583 () Bool)

(assert (=> bs!6010 m!171583))

(assert (=> b!141025 d!45185))

(declare-fun d!45187 () Bool)

(assert (=> d!45187 (= (apply!120 (+!174 lt!74072 (tuple2!2685 lt!74055 (minValue!2790 newMap!16))) lt!74064) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!74072 (tuple2!2685 lt!74055 (minValue!2790 newMap!16)))) lt!74064)))))

(declare-fun bs!6011 () Bool)

(assert (= bs!6011 d!45187))

(declare-fun m!171585 () Bool)

(assert (=> bs!6011 m!171585))

(assert (=> bs!6011 m!171585))

(declare-fun m!171587 () Bool)

(assert (=> bs!6011 m!171587))

(assert (=> b!141025 d!45187))

(declare-fun d!45189 () Bool)

(assert (=> d!45189 (= (apply!120 lt!74069 lt!74075) (get!1538 (getValueByKey!175 (toList!889 lt!74069) lt!74075)))))

(declare-fun bs!6012 () Bool)

(assert (= bs!6012 d!45189))

(declare-fun m!171589 () Bool)

(assert (=> bs!6012 m!171589))

(assert (=> bs!6012 m!171589))

(declare-fun m!171591 () Bool)

(assert (=> bs!6012 m!171591))

(assert (=> b!141025 d!45189))

(declare-fun d!45191 () Bool)

(assert (=> d!45191 (= (get!1538 (getValueByKey!175 (toList!889 lt!73493) lt!73499)) (v!3283 (getValueByKey!175 (toList!889 lt!73493) lt!73499)))))

(assert (=> d!43791 d!45191))

(declare-fun b!142358 () Bool)

(declare-fun e!92761 () Option!181)

(assert (=> b!142358 (= e!92761 (getValueByKey!175 (t!6360 (toList!889 lt!73493)) lt!73499))))

(declare-fun b!142357 () Bool)

(declare-fun e!92760 () Option!181)

(assert (=> b!142357 (= e!92760 e!92761)))

(declare-fun c!26891 () Bool)

(assert (=> b!142357 (= c!26891 (and ((_ is Cons!1760) (toList!889 lt!73493)) (not (= (_1!1352 (h!2367 (toList!889 lt!73493))) lt!73499))))))

(declare-fun b!142359 () Bool)

(assert (=> b!142359 (= e!92761 None!179)))

(declare-fun b!142356 () Bool)

(assert (=> b!142356 (= e!92760 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73493)))))))

(declare-fun d!45193 () Bool)

(declare-fun c!26890 () Bool)

(assert (=> d!45193 (= c!26890 (and ((_ is Cons!1760) (toList!889 lt!73493)) (= (_1!1352 (h!2367 (toList!889 lt!73493))) lt!73499)))))

(assert (=> d!45193 (= (getValueByKey!175 (toList!889 lt!73493) lt!73499) e!92760)))

(assert (= (and d!45193 c!26890) b!142356))

(assert (= (and d!45193 (not c!26890)) b!142357))

(assert (= (and b!142357 c!26891) b!142358))

(assert (= (and b!142357 (not c!26891)) b!142359))

(declare-fun m!171593 () Bool)

(assert (=> b!142358 m!171593))

(assert (=> d!43791 d!45193))

(declare-fun d!45195 () Bool)

(declare-fun e!92763 () Bool)

(assert (=> d!45195 e!92763))

(declare-fun res!67874 () Bool)

(assert (=> d!45195 (=> res!67874 e!92763)))

(declare-fun lt!74657 () Bool)

(assert (=> d!45195 (= res!67874 (not lt!74657))))

(declare-fun lt!74660 () Bool)

(assert (=> d!45195 (= lt!74657 lt!74660)))

(declare-fun lt!74658 () Unit!4395)

(declare-fun e!92762 () Unit!4395)

(assert (=> d!45195 (= lt!74658 e!92762)))

(declare-fun c!26892 () Bool)

(assert (=> d!45195 (= c!26892 lt!74660)))

(assert (=> d!45195 (= lt!74660 (containsKey!179 (toList!889 lt!74052) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45195 (= (contains!921 lt!74052 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74657)))

(declare-fun b!142360 () Bool)

(declare-fun lt!74659 () Unit!4395)

(assert (=> b!142360 (= e!92762 lt!74659)))

(assert (=> b!142360 (= lt!74659 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74052) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!142360 (isDefined!129 (getValueByKey!175 (toList!889 lt!74052) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142361 () Bool)

(declare-fun Unit!4512 () Unit!4395)

(assert (=> b!142361 (= e!92762 Unit!4512)))

(declare-fun b!142362 () Bool)

(assert (=> b!142362 (= e!92763 (isDefined!129 (getValueByKey!175 (toList!889 lt!74052) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45195 c!26892) b!142360))

(assert (= (and d!45195 (not c!26892)) b!142361))

(assert (= (and d!45195 (not res!67874)) b!142362))

(declare-fun m!171595 () Bool)

(assert (=> d!45195 m!171595))

(declare-fun m!171597 () Bool)

(assert (=> b!142360 m!171597))

(assert (=> b!142360 m!169101))

(assert (=> b!142360 m!169101))

(declare-fun m!171599 () Bool)

(assert (=> b!142360 m!171599))

(assert (=> b!142362 m!169101))

(assert (=> b!142362 m!169101))

(assert (=> b!142362 m!171599))

(assert (=> d!44085 d!45195))

(declare-fun e!92765 () Option!181)

(declare-fun b!142365 () Bool)

(assert (=> b!142365 (= e!92765 (getValueByKey!175 (t!6360 lt!74053) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142364 () Bool)

(declare-fun e!92764 () Option!181)

(assert (=> b!142364 (= e!92764 e!92765)))

(declare-fun c!26894 () Bool)

(assert (=> b!142364 (= c!26894 (and ((_ is Cons!1760) lt!74053) (not (= (_1!1352 (h!2367 lt!74053)) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142366 () Bool)

(assert (=> b!142366 (= e!92765 None!179)))

(declare-fun b!142363 () Bool)

(assert (=> b!142363 (= e!92764 (Some!180 (_2!1352 (h!2367 lt!74053))))))

(declare-fun d!45197 () Bool)

(declare-fun c!26893 () Bool)

(assert (=> d!45197 (= c!26893 (and ((_ is Cons!1760) lt!74053) (= (_1!1352 (h!2367 lt!74053)) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45197 (= (getValueByKey!175 lt!74053 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92764)))

(assert (= (and d!45197 c!26893) b!142363))

(assert (= (and d!45197 (not c!26893)) b!142364))

(assert (= (and b!142364 c!26894) b!142365))

(assert (= (and b!142364 (not c!26894)) b!142366))

(declare-fun m!171601 () Bool)

(assert (=> b!142365 m!171601))

(assert (=> d!44085 d!45197))

(declare-fun d!45199 () Bool)

(assert (=> d!45199 (= (getValueByKey!175 lt!74053 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74661 () Unit!4395)

(assert (=> d!45199 (= lt!74661 (choose!873 lt!74053 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!92766 () Bool)

(assert (=> d!45199 e!92766))

(declare-fun res!67875 () Bool)

(assert (=> d!45199 (=> (not res!67875) (not e!92766))))

(assert (=> d!45199 (= res!67875 (isStrictlySorted!320 lt!74053))))

(assert (=> d!45199 (= (lemmaContainsTupThenGetReturnValue!91 lt!74053 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74661)))

(declare-fun b!142367 () Bool)

(declare-fun res!67876 () Bool)

(assert (=> b!142367 (=> (not res!67876) (not e!92766))))

(assert (=> b!142367 (= res!67876 (containsKey!179 lt!74053 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142368 () Bool)

(assert (=> b!142368 (= e!92766 (contains!923 lt!74053 (tuple2!2685 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45199 res!67875) b!142367))

(assert (= (and b!142367 res!67876) b!142368))

(assert (=> d!45199 m!169095))

(declare-fun m!171603 () Bool)

(assert (=> d!45199 m!171603))

(declare-fun m!171605 () Bool)

(assert (=> d!45199 m!171605))

(declare-fun m!171607 () Bool)

(assert (=> b!142367 m!171607))

(declare-fun m!171609 () Bool)

(assert (=> b!142368 m!171609))

(assert (=> d!44085 d!45199))

(declare-fun d!45201 () Bool)

(declare-fun e!92767 () Bool)

(assert (=> d!45201 e!92767))

(declare-fun res!67878 () Bool)

(assert (=> d!45201 (=> (not res!67878) (not e!92767))))

(declare-fun lt!74662 () List!1764)

(assert (=> d!45201 (= res!67878 (isStrictlySorted!320 lt!74662))))

(declare-fun e!92769 () List!1764)

(assert (=> d!45201 (= lt!74662 e!92769)))

(declare-fun c!26895 () Bool)

(assert (=> d!45201 (= c!26895 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45201 (isStrictlySorted!320 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (=> d!45201 (= (insertStrictlySorted!93 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74662)))

(declare-fun b!142369 () Bool)

(assert (=> b!142369 (= e!92767 (contains!923 lt!74662 (tuple2!2685 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun call!15765 () List!1764)

(declare-fun bm!15762 () Bool)

(declare-fun e!92770 () List!1764)

(assert (=> bm!15762 (= call!15765 ($colon$colon!93 e!92770 (ite c!26895 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (tuple2!2685 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!26898 () Bool)

(assert (=> bm!15762 (= c!26898 c!26895)))

(declare-fun b!142370 () Bool)

(assert (=> b!142370 (= e!92769 call!15765)))

(declare-fun b!142371 () Bool)

(assert (=> b!142371 (= e!92770 (insertStrictlySorted!93 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142372 () Bool)

(declare-fun e!92771 () List!1764)

(declare-fun call!15766 () List!1764)

(assert (=> b!142372 (= e!92771 call!15766)))

(declare-fun bm!15763 () Bool)

(assert (=> bm!15763 (= call!15766 call!15765)))

(declare-fun b!142373 () Bool)

(declare-fun e!92768 () List!1764)

(declare-fun call!15767 () List!1764)

(assert (=> b!142373 (= e!92768 call!15767)))

(declare-fun c!26897 () Bool)

(declare-fun b!142374 () Bool)

(assert (=> b!142374 (= c!26897 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvsgt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!142374 (= e!92771 e!92768)))

(declare-fun b!142375 () Bool)

(assert (=> b!142375 (= e!92769 e!92771)))

(declare-fun c!26896 () Bool)

(assert (=> b!142375 (= c!26896 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142376 () Bool)

(assert (=> b!142376 (= e!92770 (ite c!26896 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (ite c!26897 (Cons!1760 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) Nil!1761)))))

(declare-fun bm!15764 () Bool)

(assert (=> bm!15764 (= call!15767 call!15766)))

(declare-fun b!142377 () Bool)

(declare-fun res!67877 () Bool)

(assert (=> b!142377 (=> (not res!67877) (not e!92767))))

(assert (=> b!142377 (= res!67877 (containsKey!179 lt!74662 (_1!1352 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142378 () Bool)

(assert (=> b!142378 (= e!92768 call!15767)))

(assert (= (and d!45201 c!26895) b!142370))

(assert (= (and d!45201 (not c!26895)) b!142375))

(assert (= (and b!142375 c!26896) b!142372))

(assert (= (and b!142375 (not c!26896)) b!142374))

(assert (= (and b!142374 c!26897) b!142378))

(assert (= (and b!142374 (not c!26897)) b!142373))

(assert (= (or b!142378 b!142373) bm!15764))

(assert (= (or b!142372 bm!15764) bm!15763))

(assert (= (or b!142370 bm!15763) bm!15762))

(assert (= (and bm!15762 c!26898) b!142371))

(assert (= (and bm!15762 (not c!26898)) b!142376))

(assert (= (and d!45201 res!67878) b!142377))

(assert (= (and b!142377 res!67877) b!142369))

(declare-fun m!171611 () Bool)

(assert (=> b!142369 m!171611))

(declare-fun m!171613 () Bool)

(assert (=> b!142377 m!171613))

(declare-fun m!171615 () Bool)

(assert (=> b!142371 m!171615))

(declare-fun m!171617 () Bool)

(assert (=> bm!15762 m!171617))

(declare-fun m!171619 () Bool)

(assert (=> d!45201 m!171619))

(assert (=> d!45201 m!170173))

(assert (=> d!44085 d!45201))

(declare-fun d!45203 () Bool)

(assert (=> d!45203 (= (get!1536 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3279 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!140343 d!45203))

(declare-fun lt!74663 () Bool)

(declare-fun d!45205 () Bool)

(assert (=> d!45205 (= lt!74663 (select (content!137 lt!73707) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun e!92772 () Bool)

(assert (=> d!45205 (= lt!74663 e!92772)))

(declare-fun res!67880 () Bool)

(assert (=> d!45205 (=> (not res!67880) (not e!92772))))

(assert (=> d!45205 (= res!67880 ((_ is Cons!1760) lt!73707))))

(assert (=> d!45205 (= (contains!923 lt!73707 (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!74663)))

(declare-fun b!142379 () Bool)

(declare-fun e!92773 () Bool)

(assert (=> b!142379 (= e!92772 e!92773)))

(declare-fun res!67879 () Bool)

(assert (=> b!142379 (=> res!67879 e!92773)))

(assert (=> b!142379 (= res!67879 (= (h!2367 lt!73707) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!142380 () Bool)

(assert (=> b!142380 (= e!92773 (contains!923 (t!6360 lt!73707) (tuple2!2685 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (_2!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (= (and d!45205 res!67880) b!142379))

(assert (= (and b!142379 (not res!67879)) b!142380))

(declare-fun m!171621 () Bool)

(assert (=> d!45205 m!171621))

(declare-fun m!171623 () Bool)

(assert (=> d!45205 m!171623))

(declare-fun m!171625 () Bool)

(assert (=> b!142380 m!171625))

(assert (=> b!140519 d!45205))

(assert (=> d!44009 d!44021))

(assert (=> d!44009 d!44007))

(declare-fun d!45207 () Bool)

(declare-fun e!92775 () Bool)

(assert (=> d!45207 e!92775))

(declare-fun res!67881 () Bool)

(assert (=> d!45207 (=> res!67881 e!92775)))

(declare-fun lt!74664 () Bool)

(assert (=> d!45207 (= res!67881 (not lt!74664))))

(declare-fun lt!74667 () Bool)

(assert (=> d!45207 (= lt!74664 lt!74667)))

(declare-fun lt!74665 () Unit!4395)

(declare-fun e!92774 () Unit!4395)

(assert (=> d!45207 (= lt!74665 e!92774)))

(declare-fun c!26899 () Bool)

(assert (=> d!45207 (= c!26899 lt!74667)))

(assert (=> d!45207 (= lt!74667 (containsKey!179 (toList!889 lt!73402) lt!73408))))

(assert (=> d!45207 (= (contains!921 lt!73402 lt!73408) lt!74664)))

(declare-fun b!142381 () Bool)

(declare-fun lt!74666 () Unit!4395)

(assert (=> b!142381 (= e!92774 lt!74666)))

(assert (=> b!142381 (= lt!74666 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73402) lt!73408))))

(assert (=> b!142381 (isDefined!129 (getValueByKey!175 (toList!889 lt!73402) lt!73408))))

(declare-fun b!142382 () Bool)

(declare-fun Unit!4513 () Unit!4395)

(assert (=> b!142382 (= e!92774 Unit!4513)))

(declare-fun b!142383 () Bool)

(assert (=> b!142383 (= e!92775 (isDefined!129 (getValueByKey!175 (toList!889 lt!73402) lt!73408)))))

(assert (= (and d!45207 c!26899) b!142381))

(assert (= (and d!45207 (not c!26899)) b!142382))

(assert (= (and d!45207 (not res!67881)) b!142383))

(declare-fun m!171627 () Bool)

(assert (=> d!45207 m!171627))

(declare-fun m!171629 () Bool)

(assert (=> b!142381 m!171629))

(assert (=> b!142381 m!168969))

(assert (=> b!142381 m!168969))

(declare-fun m!171631 () Bool)

(assert (=> b!142381 m!171631))

(assert (=> b!142383 m!168969))

(assert (=> b!142383 m!168969))

(assert (=> b!142383 m!171631))

(assert (=> d!44009 d!45207))

(declare-fun d!45209 () Bool)

(assert (=> d!45209 (= (apply!120 (+!174 lt!73402 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) lt!73408) (apply!120 lt!73402 lt!73408))))

(assert (=> d!45209 true))

(declare-fun _$34!1007 () Unit!4395)

(assert (=> d!45209 (= (choose!870 lt!73402 lt!73406 (minValue!2790 newMap!16) lt!73408) _$34!1007)))

(declare-fun bs!6013 () Bool)

(assert (= bs!6013 d!45209))

(assert (=> bs!6013 m!167181))

(assert (=> bs!6013 m!167181))

(assert (=> bs!6013 m!167183))

(assert (=> bs!6013 m!167179))

(assert (=> d!44009 d!45209))

(assert (=> d!44009 d!44005))

(declare-fun d!45211 () Bool)

(declare-fun e!92776 () Bool)

(assert (=> d!45211 e!92776))

(declare-fun res!67883 () Bool)

(assert (=> d!45211 (=> (not res!67883) (not e!92776))))

(declare-fun lt!74670 () ListLongMap!1747)

(assert (=> d!45211 (= res!67883 (contains!921 lt!74670 (_1!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74671 () List!1764)

(assert (=> d!45211 (= lt!74670 (ListLongMap!1748 lt!74671))))

(declare-fun lt!74668 () Unit!4395)

(declare-fun lt!74669 () Unit!4395)

(assert (=> d!45211 (= lt!74668 lt!74669)))

(assert (=> d!45211 (= (getValueByKey!175 lt!74671 (_1!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45211 (= lt!74669 (lemmaContainsTupThenGetReturnValue!91 lt!74671 (_1!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45211 (= lt!74671 (insertStrictlySorted!93 (toList!889 (ite c!26398 call!15639 (ite c!26401 call!15641 call!15638))) (_1!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45211 (= (+!174 (ite c!26398 call!15639 (ite c!26401 call!15641 call!15638)) (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74670)))

(declare-fun b!142384 () Bool)

(declare-fun res!67882 () Bool)

(assert (=> b!142384 (=> (not res!67882) (not e!92776))))

(assert (=> b!142384 (= res!67882 (= (getValueByKey!175 (toList!889 lt!74670) (_1!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142385 () Bool)

(assert (=> b!142385 (= e!92776 (contains!923 (toList!889 lt!74670) (ite (or c!26398 c!26401) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!45211 res!67883) b!142384))

(assert (= (and b!142384 res!67882) b!142385))

(declare-fun m!171633 () Bool)

(assert (=> d!45211 m!171633))

(declare-fun m!171635 () Bool)

(assert (=> d!45211 m!171635))

(declare-fun m!171637 () Bool)

(assert (=> d!45211 m!171637))

(declare-fun m!171639 () Bool)

(assert (=> d!45211 m!171639))

(declare-fun m!171641 () Bool)

(assert (=> b!142384 m!171641))

(declare-fun m!171643 () Bool)

(assert (=> b!142385 m!171643))

(assert (=> bm!15637 d!45211))

(declare-fun d!45213 () Bool)

(assert (=> d!45213 (= ($colon$colon!93 e!91600 (ite c!26323 (h!2367 (toList!889 call!15447)) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (Cons!1760 (ite c!26323 (h!2367 (toList!889 call!15447)) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!91600))))

(assert (=> bm!15601 d!45213))

(declare-fun b!142388 () Bool)

(declare-fun e!92778 () Option!181)

(assert (=> b!142388 (= e!92778 (getValueByKey!175 (t!6360 (toList!889 lt!73578)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142387 () Bool)

(declare-fun e!92777 () Option!181)

(assert (=> b!142387 (= e!92777 e!92778)))

(declare-fun c!26901 () Bool)

(assert (=> b!142387 (= c!26901 (and ((_ is Cons!1760) (toList!889 lt!73578)) (not (= (_1!1352 (h!2367 (toList!889 lt!73578))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142389 () Bool)

(assert (=> b!142389 (= e!92778 None!179)))

(declare-fun b!142386 () Bool)

(assert (=> b!142386 (= e!92777 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73578)))))))

(declare-fun d!45215 () Bool)

(declare-fun c!26900 () Bool)

(assert (=> d!45215 (= c!26900 (and ((_ is Cons!1760) (toList!889 lt!73578)) (= (_1!1352 (h!2367 (toList!889 lt!73578))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45215 (= (getValueByKey!175 (toList!889 lt!73578) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!92777)))

(assert (= (and d!45215 c!26900) b!142386))

(assert (= (and d!45215 (not c!26900)) b!142387))

(assert (= (and b!142387 c!26901) b!142388))

(assert (= (and b!142387 (not c!26901)) b!142389))

(declare-fun m!171645 () Bool)

(assert (=> b!142388 m!171645))

(assert (=> b!140242 d!45215))

(declare-fun d!45217 () Bool)

(assert (=> d!45217 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!6014 () Bool)

(assert (= bs!6014 d!45217))

(assert (=> bs!6014 m!168303))

(declare-fun m!171647 () Bool)

(assert (=> bs!6014 m!171647))

(assert (=> b!140600 d!45217))

(assert (=> b!140600 d!45065))

(declare-fun d!45219 () Bool)

(declare-fun res!67884 () Bool)

(declare-fun e!92779 () Bool)

(assert (=> d!45219 (=> res!67884 e!92779)))

(assert (=> d!45219 (= res!67884 (and ((_ is Cons!1760) (toList!889 lt!73391)) (= (_1!1352 (h!2367 (toList!889 lt!73391))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45219 (= (containsKey!179 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000) e!92779)))

(declare-fun b!142390 () Bool)

(declare-fun e!92780 () Bool)

(assert (=> b!142390 (= e!92779 e!92780)))

(declare-fun res!67885 () Bool)

(assert (=> b!142390 (=> (not res!67885) (not e!92780))))

(assert (=> b!142390 (= res!67885 (and (or (not ((_ is Cons!1760) (toList!889 lt!73391))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73391))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73391)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73391))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142391 () Bool)

(assert (=> b!142391 (= e!92780 (containsKey!179 (t!6360 (toList!889 lt!73391)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45219 (not res!67884)) b!142390))

(assert (= (and b!142390 res!67885) b!142391))

(declare-fun m!171649 () Bool)

(assert (=> b!142391 m!171649))

(assert (=> d!43997 d!45219))

(declare-fun d!45221 () Bool)

(assert (=> d!45221 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun bs!6015 () Bool)

(assert (= bs!6015 d!45221))

(assert (=> bs!6015 m!167441))

(declare-fun m!171651 () Bool)

(assert (=> bs!6015 m!171651))

(assert (=> b!140547 d!45221))

(assert (=> b!140547 d!43711))

(assert (=> d!43817 d!43835))

(declare-fun d!45223 () Bool)

(declare-fun e!92782 () Bool)

(assert (=> d!45223 e!92782))

(declare-fun res!67886 () Bool)

(assert (=> d!45223 (=> res!67886 e!92782)))

(declare-fun lt!74672 () Bool)

(assert (=> d!45223 (= res!67886 (not lt!74672))))

(declare-fun lt!74675 () Bool)

(assert (=> d!45223 (= lt!74672 lt!74675)))

(declare-fun lt!74673 () Unit!4395)

(declare-fun e!92781 () Unit!4395)

(assert (=> d!45223 (= lt!74673 e!92781)))

(declare-fun c!26902 () Bool)

(assert (=> d!45223 (= c!26902 lt!74675)))

(assert (=> d!45223 (= lt!74675 (containsKey!179 (toList!889 lt!73455) lt!73466))))

(assert (=> d!45223 (= (contains!921 lt!73455 lt!73466) lt!74672)))

(declare-fun b!142392 () Bool)

(declare-fun lt!74674 () Unit!4395)

(assert (=> b!142392 (= e!92781 lt!74674)))

(assert (=> b!142392 (= lt!74674 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73455) lt!73466))))

(assert (=> b!142392 (isDefined!129 (getValueByKey!175 (toList!889 lt!73455) lt!73466))))

(declare-fun b!142393 () Bool)

(declare-fun Unit!4514 () Unit!4395)

(assert (=> b!142393 (= e!92781 Unit!4514)))

(declare-fun b!142394 () Bool)

(assert (=> b!142394 (= e!92782 (isDefined!129 (getValueByKey!175 (toList!889 lt!73455) lt!73466)))))

(assert (= (and d!45223 c!26902) b!142392))

(assert (= (and d!45223 (not c!26902)) b!142393))

(assert (= (and d!45223 (not res!67886)) b!142394))

(declare-fun m!171653 () Bool)

(assert (=> d!45223 m!171653))

(declare-fun m!171655 () Bool)

(assert (=> b!142392 m!171655))

(assert (=> b!142392 m!168239))

(assert (=> b!142392 m!168239))

(declare-fun m!171657 () Bool)

(assert (=> b!142392 m!171657))

(assert (=> b!142394 m!168239))

(assert (=> b!142394 m!168239))

(assert (=> b!142394 m!171657))

(assert (=> d!43817 d!45223))

(declare-fun d!45225 () Bool)

(assert (=> d!45225 (= (apply!120 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) lt!73466) (apply!120 lt!73455 lt!73466))))

(assert (=> d!45225 true))

(declare-fun _$34!1008 () Unit!4395)

(assert (=> d!45225 (= (choose!870 lt!73455 lt!73460 (zeroValue!2790 newMap!16) lt!73466) _$34!1008)))

(declare-fun bs!6016 () Bool)

(assert (= bs!6016 d!45225))

(assert (=> bs!6016 m!167281))

(assert (=> bs!6016 m!167281))

(assert (=> bs!6016 m!167283))

(assert (=> bs!6016 m!167291))

(assert (=> d!43817 d!45225))

(assert (=> d!43817 d!43825))

(assert (=> d!43817 d!43827))

(assert (=> d!43643 d!43645))

(assert (=> d!43643 d!43647))

(declare-fun d!45227 () Bool)

(assert (=> d!45227 (isDefined!129 (getValueByKey!175 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!45227 true))

(declare-fun _$12!418 () Unit!4395)

(assert (=> d!45227 (= (choose!868 (toList!889 call!15504) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) _$12!418)))

(declare-fun bs!6017 () Bool)

(assert (= bs!6017 d!45227))

(assert (=> bs!6017 m!166733))

(assert (=> bs!6017 m!167555))

(assert (=> bs!6017 m!167555))

(assert (=> bs!6017 m!167557))

(assert (=> d!43643 d!45227))

(declare-fun d!45229 () Bool)

(declare-fun res!67887 () Bool)

(declare-fun e!92783 () Bool)

(assert (=> d!45229 (=> res!67887 e!92783)))

(assert (=> d!45229 (= res!67887 (or ((_ is Nil!1761) (toList!889 call!15504)) ((_ is Nil!1761) (t!6360 (toList!889 call!15504)))))))

(assert (=> d!45229 (= (isStrictlySorted!320 (toList!889 call!15504)) e!92783)))

(declare-fun b!142395 () Bool)

(declare-fun e!92784 () Bool)

(assert (=> b!142395 (= e!92783 e!92784)))

(declare-fun res!67888 () Bool)

(assert (=> b!142395 (=> (not res!67888) (not e!92784))))

(assert (=> b!142395 (= res!67888 (bvslt (_1!1352 (h!2367 (toList!889 call!15504))) (_1!1352 (h!2367 (t!6360 (toList!889 call!15504))))))))

(declare-fun b!142396 () Bool)

(assert (=> b!142396 (= e!92784 (isStrictlySorted!320 (t!6360 (toList!889 call!15504))))))

(assert (= (and d!45229 (not res!67887)) b!142395))

(assert (= (and b!142395 res!67888) b!142396))

(declare-fun m!171659 () Bool)

(assert (=> b!142396 m!171659))

(assert (=> d!43643 d!45229))

(assert (=> b!140622 d!43605))

(declare-fun e!92786 () Option!181)

(declare-fun b!142399 () Bool)

(assert (=> b!142399 (= e!92786 (getValueByKey!175 (t!6360 (t!6360 lt!73471)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142398 () Bool)

(declare-fun e!92785 () Option!181)

(assert (=> b!142398 (= e!92785 e!92786)))

(declare-fun c!26904 () Bool)

(assert (=> b!142398 (= c!26904 (and ((_ is Cons!1760) (t!6360 lt!73471)) (not (= (_1!1352 (h!2367 (t!6360 lt!73471))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun b!142400 () Bool)

(assert (=> b!142400 (= e!92786 None!179)))

(declare-fun b!142397 () Bool)

(assert (=> b!142397 (= e!92785 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73471)))))))

(declare-fun c!26903 () Bool)

(declare-fun d!45231 () Bool)

(assert (=> d!45231 (= c!26903 (and ((_ is Cons!1760) (t!6360 lt!73471)) (= (_1!1352 (h!2367 (t!6360 lt!73471))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!45231 (= (getValueByKey!175 (t!6360 lt!73471) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!92785)))

(assert (= (and d!45231 c!26903) b!142397))

(assert (= (and d!45231 (not c!26903)) b!142398))

(assert (= (and b!142398 c!26904) b!142399))

(assert (= (and b!142398 (not c!26904)) b!142400))

(declare-fun m!171661 () Bool)

(assert (=> b!142399 m!171661))

(assert (=> b!140515 d!45231))

(declare-fun d!45233 () Bool)

(declare-fun res!67889 () Bool)

(declare-fun e!92787 () Bool)

(assert (=> d!45233 (=> res!67889 e!92787)))

(assert (=> d!45233 (= res!67889 (and ((_ is Cons!1760) lt!73551) (= (_1!1352 (h!2367 lt!73551)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45233 (= (containsKey!179 lt!73551 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92787)))

(declare-fun b!142401 () Bool)

(declare-fun e!92788 () Bool)

(assert (=> b!142401 (= e!92787 e!92788)))

(declare-fun res!67890 () Bool)

(assert (=> b!142401 (=> (not res!67890) (not e!92788))))

(assert (=> b!142401 (= res!67890 (and (or (not ((_ is Cons!1760) lt!73551)) (bvsle (_1!1352 (h!2367 lt!73551)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73551) (bvslt (_1!1352 (h!2367 lt!73551)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142402 () Bool)

(assert (=> b!142402 (= e!92788 (containsKey!179 (t!6360 lt!73551) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45233 (not res!67889)) b!142401))

(assert (= (and b!142401 res!67890) b!142402))

(declare-fun m!171663 () Bool)

(assert (=> b!142402 m!171663))

(assert (=> b!140297 d!45233))

(declare-fun d!45235 () Bool)

(assert (=> d!45235 (= (get!1538 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43759 d!45235))

(declare-fun b!142405 () Bool)

(declare-fun e!92790 () Option!181)

(assert (=> b!142405 (= e!92790 (getValueByKey!175 (t!6360 (toList!889 lt!73250)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142404 () Bool)

(declare-fun e!92789 () Option!181)

(assert (=> b!142404 (= e!92789 e!92790)))

(declare-fun c!26906 () Bool)

(assert (=> b!142404 (= c!26906 (and ((_ is Cons!1760) (toList!889 lt!73250)) (not (= (_1!1352 (h!2367 (toList!889 lt!73250))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142406 () Bool)

(assert (=> b!142406 (= e!92790 None!179)))

(declare-fun b!142403 () Bool)

(assert (=> b!142403 (= e!92789 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73250)))))))

(declare-fun d!45237 () Bool)

(declare-fun c!26905 () Bool)

(assert (=> d!45237 (= c!26905 (and ((_ is Cons!1760) (toList!889 lt!73250)) (= (_1!1352 (h!2367 (toList!889 lt!73250))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45237 (= (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000) e!92789)))

(assert (= (and d!45237 c!26905) b!142403))

(assert (= (and d!45237 (not c!26905)) b!142404))

(assert (= (and b!142404 c!26906) b!142405))

(assert (= (and b!142404 (not c!26906)) b!142406))

(declare-fun m!171665 () Bool)

(assert (=> b!142405 m!171665))

(assert (=> d!43759 d!45237))

(declare-fun d!45239 () Bool)

(assert (=> d!45239 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73256)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73256)))))

(assert (=> d!44141 d!45239))

(declare-fun b!142409 () Bool)

(declare-fun e!92792 () Option!181)

(assert (=> b!142409 (= e!92792 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!73256))))

(declare-fun b!142408 () Bool)

(declare-fun e!92791 () Option!181)

(assert (=> b!142408 (= e!92791 e!92792)))

(declare-fun c!26908 () Bool)

(assert (=> b!142408 (= c!26908 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73256))))))

(declare-fun b!142410 () Bool)

(assert (=> b!142410 (= e!92792 None!179)))

(declare-fun b!142407 () Bool)

(assert (=> b!142407 (= e!92791 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun c!26907 () Bool)

(declare-fun d!45241 () Bool)

(assert (=> d!45241 (= c!26907 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))) lt!73256)))))

(assert (=> d!45241 (= (getValueByKey!175 (toList!889 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) lt!73256) e!92791)))

(assert (= (and d!45241 c!26907) b!142407))

(assert (= (and d!45241 (not c!26907)) b!142408))

(assert (= (and b!142408 c!26908) b!142409))

(assert (= (and b!142408 (not c!26908)) b!142410))

(declare-fun m!171667 () Bool)

(assert (=> b!142409 m!171667))

(assert (=> d!44141 d!45241))

(assert (=> d!43745 d!43743))

(declare-fun d!45243 () Bool)

(assert (=> d!45243 (= (getValueByKey!175 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!180 (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45243 true))

(declare-fun _$22!498 () Unit!4395)

(assert (=> d!45243 (= (choose!873 lt!73529 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!498)))

(declare-fun bs!6018 () Bool)

(assert (= bs!6018 d!45243))

(assert (=> bs!6018 m!167417))

(assert (=> d!43745 d!45243))

(declare-fun d!45245 () Bool)

(declare-fun res!67891 () Bool)

(declare-fun e!92793 () Bool)

(assert (=> d!45245 (=> res!67891 e!92793)))

(assert (=> d!45245 (= res!67891 (or ((_ is Nil!1761) lt!73529) ((_ is Nil!1761) (t!6360 lt!73529))))))

(assert (=> d!45245 (= (isStrictlySorted!320 lt!73529) e!92793)))

(declare-fun b!142411 () Bool)

(declare-fun e!92794 () Bool)

(assert (=> b!142411 (= e!92793 e!92794)))

(declare-fun res!67892 () Bool)

(assert (=> b!142411 (=> (not res!67892) (not e!92794))))

(assert (=> b!142411 (= res!67892 (bvslt (_1!1352 (h!2367 lt!73529)) (_1!1352 (h!2367 (t!6360 lt!73529)))))))

(declare-fun b!142412 () Bool)

(assert (=> b!142412 (= e!92794 (isStrictlySorted!320 (t!6360 lt!73529)))))

(assert (= (and d!45245 (not res!67891)) b!142411))

(assert (= (and b!142411 res!67892) b!142412))

(declare-fun m!171669 () Bool)

(assert (=> b!142412 m!171669))

(assert (=> d!43745 d!45245))

(declare-fun d!45247 () Bool)

(assert (=> d!45247 (= (get!1538 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) (v!3283 (getValueByKey!175 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!44091 d!45247))

(assert (=> d!44091 d!44489))

(declare-fun d!45249 () Bool)

(declare-fun res!67893 () Bool)

(declare-fun e!92795 () Bool)

(assert (=> d!45249 (=> res!67893 e!92795)))

(assert (=> d!45249 (= res!67893 (or ((_ is Nil!1761) (t!6360 (toList!889 lt!73065))) ((_ is Nil!1761) (t!6360 (t!6360 (toList!889 lt!73065))))))))

(assert (=> d!45249 (= (isStrictlySorted!320 (t!6360 (toList!889 lt!73065))) e!92795)))

(declare-fun b!142413 () Bool)

(declare-fun e!92796 () Bool)

(assert (=> b!142413 (= e!92795 e!92796)))

(declare-fun res!67894 () Bool)

(assert (=> b!142413 (=> (not res!67894) (not e!92796))))

(assert (=> b!142413 (= res!67894 (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73065)))) (_1!1352 (h!2367 (t!6360 (t!6360 (toList!889 lt!73065)))))))))

(declare-fun b!142414 () Bool)

(assert (=> b!142414 (= e!92796 (isStrictlySorted!320 (t!6360 (t!6360 (toList!889 lt!73065)))))))

(assert (= (and d!45249 (not res!67893)) b!142413))

(assert (= (and b!142413 res!67894) b!142414))

(declare-fun m!171671 () Bool)

(assert (=> b!142414 m!171671))

(assert (=> b!140651 d!45249))

(declare-fun d!45251 () Bool)

(assert (=> d!45251 (isDefined!129 (getValueByKey!175 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun lt!74676 () Unit!4395)

(assert (=> d!45251 (= lt!74676 (choose!868 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92797 () Bool)

(assert (=> d!45251 e!92797))

(declare-fun res!67895 () Bool)

(assert (=> d!45251 (=> (not res!67895) (not e!92797))))

(assert (=> d!45251 (= res!67895 (isStrictlySorted!320 (toList!889 lt!73470)))))

(assert (=> d!45251 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74676)))

(declare-fun b!142415 () Bool)

(assert (=> b!142415 (= e!92797 (containsKey!179 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45251 res!67895) b!142415))

(assert (=> d!45251 m!167301))

(assert (=> d!45251 m!167301))

(assert (=> d!45251 m!168013))

(declare-fun m!171673 () Bool)

(assert (=> d!45251 m!171673))

(declare-fun m!171675 () Bool)

(assert (=> d!45251 m!171675))

(assert (=> b!142415 m!168009))

(assert (=> b!140510 d!45251))

(declare-fun d!45253 () Bool)

(assert (=> d!45253 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73470) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun bs!6019 () Bool)

(assert (= bs!6019 d!45253))

(assert (=> bs!6019 m!167301))

(declare-fun m!171677 () Bool)

(assert (=> bs!6019 m!171677))

(assert (=> b!140510 d!45253))

(assert (=> b!140510 d!43771))

(declare-fun d!45255 () Bool)

(assert (=> d!45255 (= (isEmpty!423 lt!73971) (isEmpty!424 (toList!889 lt!73971)))))

(declare-fun bs!6020 () Bool)

(assert (= bs!6020 d!45255))

(declare-fun m!171679 () Bool)

(assert (=> bs!6020 m!171679))

(assert (=> b!140899 d!45255))

(declare-fun d!45257 () Bool)

(assert (=> d!45257 (= (apply!120 lt!74058 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!74058) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6021 () Bool)

(assert (= bs!6021 d!45257))

(assert (=> bs!6021 m!170553))

(assert (=> bs!6021 m!170553))

(declare-fun m!171681 () Bool)

(assert (=> bs!6021 m!171681))

(assert (=> b!141036 d!45257))

(declare-fun d!45259 () Bool)

(declare-fun res!67896 () Bool)

(declare-fun e!92798 () Bool)

(assert (=> d!45259 (=> res!67896 e!92798)))

(assert (=> d!45259 (= res!67896 (and ((_ is Cons!1760) (toList!889 lt!73546)) (= (_1!1352 (h!2367 (toList!889 lt!73546))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45259 (= (containsKey!179 (toList!889 lt!73546) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92798)))

(declare-fun b!142416 () Bool)

(declare-fun e!92799 () Bool)

(assert (=> b!142416 (= e!92798 e!92799)))

(declare-fun res!67897 () Bool)

(assert (=> b!142416 (=> (not res!67897) (not e!92799))))

(assert (=> b!142416 (= res!67897 (and (or (not ((_ is Cons!1760) (toList!889 lt!73546))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73546))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) (toList!889 lt!73546)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73546))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142417 () Bool)

(assert (=> b!142417 (= e!92799 (containsKey!179 (t!6360 (toList!889 lt!73546)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45259 (not res!67896)) b!142416))

(assert (= (and b!142416 res!67897) b!142417))

(declare-fun m!171683 () Bool)

(assert (=> b!142417 m!171683))

(assert (=> d!44039 d!45259))

(declare-fun d!45261 () Bool)

(assert (=> d!45261 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) lt!73466)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) lt!73466)))))

(assert (=> d!43835 d!45261))

(declare-fun b!142420 () Bool)

(declare-fun e!92801 () Option!181)

(assert (=> b!142420 (= e!92801 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))) lt!73466))))

(declare-fun b!142419 () Bool)

(declare-fun e!92800 () Option!181)

(assert (=> b!142419 (= e!92800 e!92801)))

(declare-fun c!26910 () Bool)

(assert (=> b!142419 (= c!26910 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))) lt!73466))))))

(declare-fun b!142421 () Bool)

(assert (=> b!142421 (= e!92801 None!179)))

(declare-fun b!142418 () Bool)

(assert (=> b!142418 (= e!92800 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26909 () Bool)

(declare-fun d!45263 () Bool)

(assert (=> d!45263 (= c!26909 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))))) lt!73466)))))

(assert (=> d!45263 (= (getValueByKey!175 (toList!889 (+!174 lt!73455 (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16)))) lt!73466) e!92800)))

(assert (= (and d!45263 c!26909) b!142418))

(assert (= (and d!45263 (not c!26909)) b!142419))

(assert (= (and b!142419 c!26910) b!142420))

(assert (= (and b!142419 (not c!26910)) b!142421))

(declare-fun m!171685 () Bool)

(assert (=> b!142420 m!171685))

(assert (=> d!43835 d!45263))

(declare-fun d!45265 () Bool)

(declare-fun e!92803 () Bool)

(assert (=> d!45265 e!92803))

(declare-fun res!67898 () Bool)

(assert (=> d!45265 (=> res!67898 e!92803)))

(declare-fun lt!74677 () Bool)

(assert (=> d!45265 (= res!67898 (not lt!74677))))

(declare-fun lt!74680 () Bool)

(assert (=> d!45265 (= lt!74677 lt!74680)))

(declare-fun lt!74678 () Unit!4395)

(declare-fun e!92802 () Unit!4395)

(assert (=> d!45265 (= lt!74678 e!92802)))

(declare-fun c!26911 () Bool)

(assert (=> d!45265 (= c!26911 lt!74680)))

(assert (=> d!45265 (= lt!74680 (containsKey!179 (toList!889 lt!74098) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> d!45265 (= (contains!921 lt!74098 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74677)))

(declare-fun b!142422 () Bool)

(declare-fun lt!74679 () Unit!4395)

(assert (=> b!142422 (= e!92802 lt!74679)))

(assert (=> b!142422 (= lt!74679 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74098) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(assert (=> b!142422 (isDefined!129 (getValueByKey!175 (toList!889 lt!74098) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!142423 () Bool)

(declare-fun Unit!4515 () Unit!4395)

(assert (=> b!142423 (= e!92802 Unit!4515)))

(declare-fun b!142424 () Bool)

(assert (=> b!142424 (= e!92803 (isDefined!129 (getValueByKey!175 (toList!889 lt!74098) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!45265 c!26911) b!142422))

(assert (= (and d!45265 (not c!26911)) b!142423))

(assert (= (and d!45265 (not res!67898)) b!142424))

(declare-fun m!171687 () Bool)

(assert (=> d!45265 m!171687))

(declare-fun m!171689 () Bool)

(assert (=> b!142422 m!171689))

(assert (=> b!142422 m!169235))

(assert (=> b!142422 m!169235))

(declare-fun m!171691 () Bool)

(assert (=> b!142422 m!171691))

(assert (=> b!142424 m!169235))

(assert (=> b!142424 m!169235))

(assert (=> b!142424 m!171691))

(assert (=> d!44127 d!45265))

(declare-fun b!142427 () Bool)

(declare-fun e!92805 () Option!181)

(assert (=> b!142427 (= e!92805 (getValueByKey!175 (t!6360 lt!74099) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!142426 () Bool)

(declare-fun e!92804 () Option!181)

(assert (=> b!142426 (= e!92804 e!92805)))

(declare-fun c!26913 () Bool)

(assert (=> b!142426 (= c!26913 (and ((_ is Cons!1760) lt!74099) (not (= (_1!1352 (h!2367 lt!74099)) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun b!142428 () Bool)

(assert (=> b!142428 (= e!92805 None!179)))

(declare-fun b!142425 () Bool)

(assert (=> b!142425 (= e!92804 (Some!180 (_2!1352 (h!2367 lt!74099))))))

(declare-fun c!26912 () Bool)

(declare-fun d!45267 () Bool)

(assert (=> d!45267 (= c!26912 (and ((_ is Cons!1760) lt!74099) (= (_1!1352 (h!2367 lt!74099)) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!45267 (= (getValueByKey!175 lt!74099 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!92804)))

(assert (= (and d!45267 c!26912) b!142425))

(assert (= (and d!45267 (not c!26912)) b!142426))

(assert (= (and b!142426 c!26913) b!142427))

(assert (= (and b!142426 (not c!26913)) b!142428))

(declare-fun m!171693 () Bool)

(assert (=> b!142427 m!171693))

(assert (=> d!44127 d!45267))

(declare-fun d!45269 () Bool)

(assert (=> d!45269 (= (getValueByKey!175 lt!74099 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) (Some!180 (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun lt!74681 () Unit!4395)

(assert (=> d!45269 (= lt!74681 (choose!873 lt!74099 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun e!92806 () Bool)

(assert (=> d!45269 e!92806))

(declare-fun res!67899 () Bool)

(assert (=> d!45269 (=> (not res!67899) (not e!92806))))

(assert (=> d!45269 (= res!67899 (isStrictlySorted!320 lt!74099))))

(assert (=> d!45269 (= (lemmaContainsTupThenGetReturnValue!91 lt!74099 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74681)))

(declare-fun b!142429 () Bool)

(declare-fun res!67900 () Bool)

(assert (=> b!142429 (=> (not res!67900) (not e!92806))))

(assert (=> b!142429 (= res!67900 (containsKey!179 lt!74099 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!142430 () Bool)

(assert (=> b!142430 (= e!92806 (contains!923 lt!74099 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (= (and d!45269 res!67899) b!142429))

(assert (= (and b!142429 res!67900) b!142430))

(assert (=> d!45269 m!169229))

(declare-fun m!171695 () Bool)

(assert (=> d!45269 m!171695))

(declare-fun m!171697 () Bool)

(assert (=> d!45269 m!171697))

(declare-fun m!171699 () Bool)

(assert (=> b!142429 m!171699))

(declare-fun m!171701 () Bool)

(assert (=> b!142430 m!171701))

(assert (=> d!44127 d!45269))

(declare-fun d!45271 () Bool)

(declare-fun e!92807 () Bool)

(assert (=> d!45271 e!92807))

(declare-fun res!67902 () Bool)

(assert (=> d!45271 (=> (not res!67902) (not e!92807))))

(declare-fun lt!74682 () List!1764)

(assert (=> d!45271 (= res!67902 (isStrictlySorted!320 lt!74682))))

(declare-fun e!92809 () List!1764)

(assert (=> d!45271 (= lt!74682 e!92809)))

(declare-fun c!26914 () Bool)

(assert (=> d!45271 (= c!26914 (and ((_ is Cons!1760) (toList!889 lt!73255)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73255))) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!45271 (isStrictlySorted!320 (toList!889 lt!73255))))

(assert (=> d!45271 (= (insertStrictlySorted!93 (toList!889 lt!73255) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!74682)))

(declare-fun b!142431 () Bool)

(assert (=> b!142431 (= e!92807 (contains!923 lt!74682 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun e!92810 () List!1764)

(declare-fun bm!15765 () Bool)

(declare-fun call!15768 () List!1764)

(assert (=> bm!15765 (= call!15768 ($colon$colon!93 e!92810 (ite c!26914 (h!2367 (toList!889 lt!73255)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26917 () Bool)

(assert (=> bm!15765 (= c!26917 c!26914)))

(declare-fun b!142432 () Bool)

(assert (=> b!142432 (= e!92809 call!15768)))

(declare-fun b!142433 () Bool)

(assert (=> b!142433 (= e!92810 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73255)) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))) (_2!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!142434 () Bool)

(declare-fun e!92811 () List!1764)

(declare-fun call!15769 () List!1764)

(assert (=> b!142434 (= e!92811 call!15769)))

(declare-fun bm!15766 () Bool)

(assert (=> bm!15766 (= call!15769 call!15768)))

(declare-fun b!142435 () Bool)

(declare-fun e!92808 () List!1764)

(declare-fun call!15770 () List!1764)

(assert (=> b!142435 (= e!92808 call!15770)))

(declare-fun b!142436 () Bool)

(declare-fun c!26916 () Bool)

(assert (=> b!142436 (= c!26916 (and ((_ is Cons!1760) (toList!889 lt!73255)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73255))) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> b!142436 (= e!92811 e!92808)))

(declare-fun b!142437 () Bool)

(assert (=> b!142437 (= e!92809 e!92811)))

(declare-fun c!26915 () Bool)

(assert (=> b!142437 (= c!26915 (and ((_ is Cons!1760) (toList!889 lt!73255)) (= (_1!1352 (h!2367 (toList!889 lt!73255))) (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(declare-fun b!142438 () Bool)

(assert (=> b!142438 (= e!92810 (ite c!26915 (t!6360 (toList!889 lt!73255)) (ite c!26916 (Cons!1760 (h!2367 (toList!889 lt!73255)) (t!6360 (toList!889 lt!73255))) Nil!1761)))))

(declare-fun bm!15767 () Bool)

(assert (=> bm!15767 (= call!15770 call!15769)))

(declare-fun b!142439 () Bool)

(declare-fun res!67901 () Bool)

(assert (=> b!142439 (=> (not res!67901) (not e!92807))))

(assert (=> b!142439 (= res!67901 (containsKey!179 lt!74682 (_1!1352 (tuple2!2685 lt!73260 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!142440 () Bool)

(assert (=> b!142440 (= e!92808 call!15770)))

(assert (= (and d!45271 c!26914) b!142432))

(assert (= (and d!45271 (not c!26914)) b!142437))

(assert (= (and b!142437 c!26915) b!142434))

(assert (= (and b!142437 (not c!26915)) b!142436))

(assert (= (and b!142436 c!26916) b!142440))

(assert (= (and b!142436 (not c!26916)) b!142435))

(assert (= (or b!142440 b!142435) bm!15767))

(assert (= (or b!142434 bm!15767) bm!15766))

(assert (= (or b!142432 bm!15766) bm!15765))

(assert (= (and bm!15765 c!26917) b!142433))

(assert (= (and bm!15765 (not c!26917)) b!142438))

(assert (= (and d!45271 res!67902) b!142439))

(assert (= (and b!142439 res!67901) b!142431))

(declare-fun m!171703 () Bool)

(assert (=> b!142431 m!171703))

(declare-fun m!171705 () Bool)

(assert (=> b!142439 m!171705))

(declare-fun m!171707 () Bool)

(assert (=> b!142433 m!171707))

(declare-fun m!171709 () Bool)

(assert (=> bm!15765 m!171709))

(declare-fun m!171711 () Bool)

(assert (=> d!45271 m!171711))

(declare-fun m!171713 () Bool)

(assert (=> d!45271 m!171713))

(assert (=> d!44127 d!45271))

(declare-fun d!45273 () Bool)

(declare-fun e!92813 () Bool)

(assert (=> d!45273 e!92813))

(declare-fun res!67903 () Bool)

(assert (=> d!45273 (=> res!67903 e!92813)))

(declare-fun lt!74683 () Bool)

(assert (=> d!45273 (= res!67903 (not lt!74683))))

(declare-fun lt!74686 () Bool)

(assert (=> d!45273 (= lt!74683 lt!74686)))

(declare-fun lt!74684 () Unit!4395)

(declare-fun e!92812 () Unit!4395)

(assert (=> d!45273 (= lt!74684 e!92812)))

(declare-fun c!26918 () Bool)

(assert (=> d!45273 (= c!26918 lt!74686)))

(assert (=> d!45273 (= lt!74686 (containsKey!179 (toList!889 lt!73741) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45273 (= (contains!921 lt!73741 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!74683)))

(declare-fun b!142441 () Bool)

(declare-fun lt!74685 () Unit!4395)

(assert (=> b!142441 (= e!92812 lt!74685)))

(assert (=> b!142441 (= lt!74685 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73741) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142441 (isDefined!129 (getValueByKey!175 (toList!889 lt!73741) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142442 () Bool)

(declare-fun Unit!4516 () Unit!4395)

(assert (=> b!142442 (= e!92812 Unit!4516)))

(declare-fun b!142443 () Bool)

(assert (=> b!142443 (= e!92813 (isDefined!129 (getValueByKey!175 (toList!889 lt!73741) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45273 c!26918) b!142441))

(assert (= (and d!45273 (not c!26918)) b!142442))

(assert (= (and d!45273 (not res!67903)) b!142443))

(declare-fun m!171715 () Bool)

(assert (=> d!45273 m!171715))

(declare-fun m!171717 () Bool)

(assert (=> b!142441 m!171717))

(assert (=> b!142441 m!168207))

(assert (=> b!142441 m!168207))

(declare-fun m!171719 () Bool)

(assert (=> b!142441 m!171719))

(assert (=> b!142443 m!168207))

(assert (=> b!142443 m!168207))

(assert (=> b!142443 m!171719))

(assert (=> d!43813 d!45273))

(declare-fun b!142446 () Bool)

(declare-fun e!92815 () Option!181)

(assert (=> b!142446 (= e!92815 (getValueByKey!175 (t!6360 lt!73742) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142445 () Bool)

(declare-fun e!92814 () Option!181)

(assert (=> b!142445 (= e!92814 e!92815)))

(declare-fun c!26920 () Bool)

(assert (=> b!142445 (= c!26920 (and ((_ is Cons!1760) lt!73742) (not (= (_1!1352 (h!2367 lt!73742)) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!142447 () Bool)

(assert (=> b!142447 (= e!92815 None!179)))

(declare-fun b!142444 () Bool)

(assert (=> b!142444 (= e!92814 (Some!180 (_2!1352 (h!2367 lt!73742))))))

(declare-fun c!26919 () Bool)

(declare-fun d!45275 () Bool)

(assert (=> d!45275 (= c!26919 (and ((_ is Cons!1760) lt!73742) (= (_1!1352 (h!2367 lt!73742)) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45275 (= (getValueByKey!175 lt!73742 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) e!92814)))

(assert (= (and d!45275 c!26919) b!142444))

(assert (= (and d!45275 (not c!26919)) b!142445))

(assert (= (and b!142445 c!26920) b!142446))

(assert (= (and b!142445 (not c!26920)) b!142447))

(declare-fun m!171721 () Bool)

(assert (=> b!142446 m!171721))

(assert (=> d!43813 d!45275))

(declare-fun d!45277 () Bool)

(assert (=> d!45277 (= (getValueByKey!175 lt!73742 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74687 () Unit!4395)

(assert (=> d!45277 (= lt!74687 (choose!873 lt!73742 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92816 () Bool)

(assert (=> d!45277 e!92816))

(declare-fun res!67904 () Bool)

(assert (=> d!45277 (=> (not res!67904) (not e!92816))))

(assert (=> d!45277 (= res!67904 (isStrictlySorted!320 lt!73742))))

(assert (=> d!45277 (= (lemmaContainsTupThenGetReturnValue!91 lt!73742 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!74687)))

(declare-fun b!142448 () Bool)

(declare-fun res!67905 () Bool)

(assert (=> b!142448 (=> (not res!67905) (not e!92816))))

(assert (=> b!142448 (= res!67905 (containsKey!179 lt!73742 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142449 () Bool)

(assert (=> b!142449 (= e!92816 (contains!923 lt!73742 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45277 res!67904) b!142448))

(assert (= (and b!142448 res!67905) b!142449))

(assert (=> d!45277 m!168201))

(declare-fun m!171723 () Bool)

(assert (=> d!45277 m!171723))

(declare-fun m!171725 () Bool)

(assert (=> d!45277 m!171725))

(declare-fun m!171727 () Bool)

(assert (=> b!142448 m!171727))

(declare-fun m!171729 () Bool)

(assert (=> b!142449 m!171729))

(assert (=> d!43813 d!45277))

(declare-fun d!45279 () Bool)

(declare-fun e!92817 () Bool)

(assert (=> d!45279 e!92817))

(declare-fun res!67907 () Bool)

(assert (=> d!45279 (=> (not res!67907) (not e!92817))))

(declare-fun lt!74688 () List!1764)

(assert (=> d!45279 (= res!67907 (isStrictlySorted!320 lt!74688))))

(declare-fun e!92819 () List!1764)

(assert (=> d!45279 (= lt!74688 e!92819)))

(declare-fun c!26921 () Bool)

(assert (=> d!45279 (= c!26921 (and ((_ is Cons!1760) (toList!889 lt!73459)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73459))) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45279 (isStrictlySorted!320 (toList!889 lt!73459))))

(assert (=> d!45279 (= (insertStrictlySorted!93 (toList!889 lt!73459) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!74688)))

(declare-fun b!142450 () Bool)

(assert (=> b!142450 (= e!92817 (contains!923 lt!74688 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(declare-fun bm!15768 () Bool)

(declare-fun e!92820 () List!1764)

(declare-fun call!15771 () List!1764)

(assert (=> bm!15768 (= call!15771 ($colon$colon!93 e!92820 (ite c!26921 (h!2367 (toList!889 lt!73459)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26924 () Bool)

(assert (=> bm!15768 (= c!26924 c!26921)))

(declare-fun b!142451 () Bool)

(assert (=> b!142451 (= e!92819 call!15771)))

(declare-fun b!142452 () Bool)

(assert (=> b!142452 (= e!92820 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73459)) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142453 () Bool)

(declare-fun e!92821 () List!1764)

(declare-fun call!15772 () List!1764)

(assert (=> b!142453 (= e!92821 call!15772)))

(declare-fun bm!15769 () Bool)

(assert (=> bm!15769 (= call!15772 call!15771)))

(declare-fun b!142454 () Bool)

(declare-fun e!92818 () List!1764)

(declare-fun call!15773 () List!1764)

(assert (=> b!142454 (= e!92818 call!15773)))

(declare-fun c!26923 () Bool)

(declare-fun b!142455 () Bool)

(assert (=> b!142455 (= c!26923 (and ((_ is Cons!1760) (toList!889 lt!73459)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73459))) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142455 (= e!92821 e!92818)))

(declare-fun b!142456 () Bool)

(assert (=> b!142456 (= e!92819 e!92821)))

(declare-fun c!26922 () Bool)

(assert (=> b!142456 (= c!26922 (and ((_ is Cons!1760) (toList!889 lt!73459)) (= (_1!1352 (h!2367 (toList!889 lt!73459))) (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142457 () Bool)

(assert (=> b!142457 (= e!92820 (ite c!26922 (t!6360 (toList!889 lt!73459)) (ite c!26923 (Cons!1760 (h!2367 (toList!889 lt!73459)) (t!6360 (toList!889 lt!73459))) Nil!1761)))))

(declare-fun bm!15770 () Bool)

(assert (=> bm!15770 (= call!15773 call!15772)))

(declare-fun b!142458 () Bool)

(declare-fun res!67906 () Bool)

(assert (=> b!142458 (=> (not res!67906) (not e!92817))))

(assert (=> b!142458 (= res!67906 (containsKey!179 lt!74688 (_1!1352 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142459 () Bool)

(assert (=> b!142459 (= e!92818 call!15773)))

(assert (= (and d!45279 c!26921) b!142451))

(assert (= (and d!45279 (not c!26921)) b!142456))

(assert (= (and b!142456 c!26922) b!142453))

(assert (= (and b!142456 (not c!26922)) b!142455))

(assert (= (and b!142455 c!26923) b!142459))

(assert (= (and b!142455 (not c!26923)) b!142454))

(assert (= (or b!142459 b!142454) bm!15770))

(assert (= (or b!142453 bm!15770) bm!15769))

(assert (= (or b!142451 bm!15769) bm!15768))

(assert (= (and bm!15768 c!26924) b!142452))

(assert (= (and bm!15768 (not c!26924)) b!142457))

(assert (= (and d!45279 res!67907) b!142458))

(assert (= (and b!142458 res!67906) b!142450))

(declare-fun m!171731 () Bool)

(assert (=> b!142450 m!171731))

(declare-fun m!171733 () Bool)

(assert (=> b!142458 m!171733))

(declare-fun m!171735 () Bool)

(assert (=> b!142452 m!171735))

(declare-fun m!171737 () Bool)

(assert (=> bm!15768 m!171737))

(declare-fun m!171739 () Bool)

(assert (=> d!45279 m!171739))

(declare-fun m!171741 () Bool)

(assert (=> d!45279 m!171741))

(assert (=> d!43813 d!45279))

(declare-fun d!45281 () Bool)

(assert (=> d!45281 (= (apply!120 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))) lt!73499) (apply!120 lt!73493 lt!73499))))

(assert (=> d!45281 true))

(declare-fun _$34!1009 () Unit!4395)

(assert (=> d!45281 (= (choose!870 lt!73493 lt!73497 (minValue!2790 newMap!16) lt!73499) _$34!1009)))

(declare-fun bs!6022 () Bool)

(assert (= bs!6022 d!45281))

(assert (=> bs!6022 m!167349))

(assert (=> bs!6022 m!167349))

(assert (=> bs!6022 m!167351))

(assert (=> bs!6022 m!167347))

(assert (=> d!43809 d!45281))

(assert (=> d!43809 d!43789))

(assert (=> d!43809 d!43791))

(assert (=> d!43809 d!43803))

(declare-fun d!45283 () Bool)

(declare-fun e!92823 () Bool)

(assert (=> d!45283 e!92823))

(declare-fun res!67908 () Bool)

(assert (=> d!45283 (=> res!67908 e!92823)))

(declare-fun lt!74689 () Bool)

(assert (=> d!45283 (= res!67908 (not lt!74689))))

(declare-fun lt!74692 () Bool)

(assert (=> d!45283 (= lt!74689 lt!74692)))

(declare-fun lt!74690 () Unit!4395)

(declare-fun e!92822 () Unit!4395)

(assert (=> d!45283 (= lt!74690 e!92822)))

(declare-fun c!26925 () Bool)

(assert (=> d!45283 (= c!26925 lt!74692)))

(assert (=> d!45283 (= lt!74692 (containsKey!179 (toList!889 lt!73493) lt!73499))))

(assert (=> d!45283 (= (contains!921 lt!73493 lt!73499) lt!74689)))

(declare-fun b!142460 () Bool)

(declare-fun lt!74691 () Unit!4395)

(assert (=> b!142460 (= e!92822 lt!74691)))

(assert (=> b!142460 (= lt!74691 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73493) lt!73499))))

(assert (=> b!142460 (isDefined!129 (getValueByKey!175 (toList!889 lt!73493) lt!73499))))

(declare-fun b!142461 () Bool)

(declare-fun Unit!4517 () Unit!4395)

(assert (=> b!142461 (= e!92822 Unit!4517)))

(declare-fun b!142462 () Bool)

(assert (=> b!142462 (= e!92823 (isDefined!129 (getValueByKey!175 (toList!889 lt!73493) lt!73499)))))

(assert (= (and d!45283 c!26925) b!142460))

(assert (= (and d!45283 (not c!26925)) b!142461))

(assert (= (and d!45283 (not res!67908)) b!142462))

(declare-fun m!171743 () Bool)

(assert (=> d!45283 m!171743))

(declare-fun m!171745 () Bool)

(assert (=> b!142460 m!171745))

(assert (=> b!142460 m!168119))

(assert (=> b!142460 m!168119))

(declare-fun m!171747 () Bool)

(assert (=> b!142460 m!171747))

(assert (=> b!142462 m!168119))

(assert (=> b!142462 m!168119))

(assert (=> b!142462 m!171747))

(assert (=> d!43809 d!45283))

(declare-fun d!45285 () Bool)

(declare-fun e!92825 () Bool)

(assert (=> d!45285 e!92825))

(declare-fun res!67909 () Bool)

(assert (=> d!45285 (=> res!67909 e!92825)))

(declare-fun lt!74693 () Bool)

(assert (=> d!45285 (= res!67909 (not lt!74693))))

(declare-fun lt!74696 () Bool)

(assert (=> d!45285 (= lt!74693 lt!74696)))

(declare-fun lt!74694 () Unit!4395)

(declare-fun e!92824 () Unit!4395)

(assert (=> d!45285 (= lt!74694 e!92824)))

(declare-fun c!26926 () Bool)

(assert (=> d!45285 (= c!26926 lt!74696)))

(assert (=> d!45285 (= lt!74696 (containsKey!179 (toList!889 lt!73586) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45285 (= (contains!921 lt!73586 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74693)))

(declare-fun b!142463 () Bool)

(declare-fun lt!74695 () Unit!4395)

(assert (=> b!142463 (= e!92824 lt!74695)))

(assert (=> b!142463 (= lt!74695 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73586) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142463 (isDefined!129 (getValueByKey!175 (toList!889 lt!73586) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142464 () Bool)

(declare-fun Unit!4518 () Unit!4395)

(assert (=> b!142464 (= e!92824 Unit!4518)))

(declare-fun b!142465 () Bool)

(assert (=> b!142465 (= e!92825 (isDefined!129 (getValueByKey!175 (toList!889 lt!73586) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45285 c!26926) b!142463))

(assert (= (and d!45285 (not c!26926)) b!142464))

(assert (= (and d!45285 (not res!67909)) b!142465))

(declare-fun m!171749 () Bool)

(assert (=> d!45285 m!171749))

(declare-fun m!171751 () Bool)

(assert (=> b!142463 m!171751))

(declare-fun m!171753 () Bool)

(assert (=> b!142463 m!171753))

(assert (=> b!142463 m!171753))

(declare-fun m!171755 () Bool)

(assert (=> b!142463 m!171755))

(assert (=> b!142465 m!171753))

(assert (=> b!142465 m!171753))

(assert (=> b!142465 m!171755))

(assert (=> b!140248 d!45285))

(declare-fun d!45287 () Bool)

(declare-fun c!26927 () Bool)

(assert (=> d!45287 (= c!26927 ((_ is Nil!1761) (toList!889 lt!73508)))))

(declare-fun e!92826 () (InoxSet tuple2!2684))

(assert (=> d!45287 (= (content!137 (toList!889 lt!73508)) e!92826)))

(declare-fun b!142466 () Bool)

(assert (=> b!142466 (= e!92826 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!142467 () Bool)

(assert (=> b!142467 (= e!92826 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73508)) true) (content!137 (t!6360 (toList!889 lt!73508)))))))

(assert (= (and d!45287 c!26927) b!142466))

(assert (= (and d!45287 (not c!26927)) b!142467))

(declare-fun m!171757 () Bool)

(assert (=> b!142467 m!171757))

(assert (=> b!142467 m!169731))

(assert (=> d!43691 d!45287))

(assert (=> d!44123 d!44121))

(declare-fun d!45289 () Bool)

(declare-fun e!92828 () Bool)

(assert (=> d!45289 e!92828))

(declare-fun res!67910 () Bool)

(assert (=> d!45289 (=> res!67910 e!92828)))

(declare-fun lt!74697 () Bool)

(assert (=> d!45289 (= res!67910 (not lt!74697))))

(declare-fun lt!74700 () Bool)

(assert (=> d!45289 (= lt!74697 lt!74700)))

(declare-fun lt!74698 () Unit!4395)

(declare-fun e!92827 () Unit!4395)

(assert (=> d!45289 (= lt!74698 e!92827)))

(declare-fun c!26928 () Bool)

(assert (=> d!45289 (= c!26928 lt!74700)))

(assert (=> d!45289 (= lt!74700 (containsKey!179 (toList!889 lt!73264) lt!73256))))

(assert (=> d!45289 (= (contains!921 lt!73264 lt!73256) lt!74697)))

(declare-fun b!142468 () Bool)

(declare-fun lt!74699 () Unit!4395)

(assert (=> b!142468 (= e!92827 lt!74699)))

(assert (=> b!142468 (= lt!74699 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73264) lt!73256))))

(assert (=> b!142468 (isDefined!129 (getValueByKey!175 (toList!889 lt!73264) lt!73256))))

(declare-fun b!142469 () Bool)

(declare-fun Unit!4519 () Unit!4395)

(assert (=> b!142469 (= e!92827 Unit!4519)))

(declare-fun b!142470 () Bool)

(assert (=> b!142470 (= e!92828 (isDefined!129 (getValueByKey!175 (toList!889 lt!73264) lt!73256)))))

(assert (= (and d!45289 c!26928) b!142468))

(assert (= (and d!45289 (not c!26928)) b!142469))

(assert (= (and d!45289 (not res!67910)) b!142470))

(declare-fun m!171759 () Bool)

(assert (=> d!45289 m!171759))

(declare-fun m!171761 () Bool)

(assert (=> b!142468 m!171761))

(assert (=> b!142468 m!169243))

(assert (=> b!142468 m!169243))

(declare-fun m!171763 () Bool)

(assert (=> b!142468 m!171763))

(assert (=> b!142470 m!169243))

(assert (=> b!142470 m!169243))

(assert (=> b!142470 m!171763))

(assert (=> d!44123 d!45289))

(assert (=> d!44123 d!44141))

(declare-fun d!45291 () Bool)

(assert (=> d!45291 (= (apply!120 (+!174 lt!73264 (tuple2!2685 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!73256) (apply!120 lt!73264 lt!73256))))

(assert (=> d!45291 true))

(declare-fun _$34!1010 () Unit!4395)

(assert (=> d!45291 (= (choose!870 lt!73264 lt!73247 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)) lt!73256) _$34!1010)))

(declare-fun bs!6023 () Bool)

(assert (= bs!6023 d!45291))

(assert (=> bs!6023 m!166987))

(assert (=> bs!6023 m!166987))

(assert (=> bs!6023 m!166989))

(assert (=> bs!6023 m!167013))

(assert (=> d!44123 d!45291))

(assert (=> d!44123 d!44131))

(declare-fun d!45293 () Bool)

(declare-fun e!92830 () Bool)

(assert (=> d!45293 e!92830))

(declare-fun res!67911 () Bool)

(assert (=> d!45293 (=> res!67911 e!92830)))

(declare-fun lt!74701 () Bool)

(assert (=> d!45293 (= res!67911 (not lt!74701))))

(declare-fun lt!74704 () Bool)

(assert (=> d!45293 (= lt!74701 lt!74704)))

(declare-fun lt!74702 () Unit!4395)

(declare-fun e!92829 () Unit!4395)

(assert (=> d!45293 (= lt!74702 e!92829)))

(declare-fun c!26929 () Bool)

(assert (=> d!45293 (= c!26929 lt!74704)))

(assert (=> d!45293 (= lt!74704 (containsKey!179 (toList!889 lt!73924) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45293 (= (contains!921 lt!73924 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74701)))

(declare-fun b!142471 () Bool)

(declare-fun lt!74703 () Unit!4395)

(assert (=> b!142471 (= e!92829 lt!74703)))

(assert (=> b!142471 (= lt!74703 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73924) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142471 (isDefined!129 (getValueByKey!175 (toList!889 lt!73924) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142472 () Bool)

(declare-fun Unit!4520 () Unit!4395)

(assert (=> b!142472 (= e!92829 Unit!4520)))

(declare-fun b!142473 () Bool)

(assert (=> b!142473 (= e!92830 (isDefined!129 (getValueByKey!175 (toList!889 lt!73924) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45293 c!26929) b!142471))

(assert (= (and d!45293 (not c!26929)) b!142472))

(assert (= (and d!45293 (not res!67911)) b!142473))

(declare-fun m!171765 () Bool)

(assert (=> d!45293 m!171765))

(declare-fun m!171767 () Bool)

(assert (=> b!142471 m!171767))

(declare-fun m!171769 () Bool)

(assert (=> b!142471 m!171769))

(assert (=> b!142471 m!171769))

(declare-fun m!171771 () Bool)

(assert (=> b!142471 m!171771))

(assert (=> b!142473 m!171769))

(assert (=> b!142473 m!171769))

(assert (=> b!142473 m!171771))

(assert (=> d!43967 d!45293))

(assert (=> d!43967 d!43661))

(declare-fun d!45295 () Bool)

(declare-fun res!67912 () Bool)

(declare-fun e!92831 () Bool)

(assert (=> d!45295 (=> res!67912 e!92831)))

(assert (=> d!45295 (= res!67912 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))))

(assert (=> d!45295 (= (containsKey!179 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))) e!92831)))

(declare-fun b!142474 () Bool)

(declare-fun e!92832 () Bool)

(assert (=> b!142474 (= e!92831 e!92832)))

(declare-fun res!67913 () Bool)

(assert (=> b!142474 (=> (not res!67913) (not e!92832))))

(assert (=> b!142474 (= res!67913 (and (or (not ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (bvsle (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))) ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))))

(declare-fun b!142475 () Bool)

(assert (=> b!142475 (= e!92832 (containsKey!179 (t!6360 (toList!889 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)))))))

(assert (= (and d!45295 (not res!67912)) b!142474))

(assert (= (and b!142474 res!67913) b!142475))

(assert (=> b!142475 m!167045))

(declare-fun m!171773 () Bool)

(assert (=> b!142475 m!171773))

(assert (=> d!43921 d!45295))

(declare-fun d!45297 () Bool)

(declare-fun res!67914 () Bool)

(declare-fun e!92833 () Bool)

(assert (=> d!45297 (=> res!67914 e!92833)))

(assert (=> d!45297 (= res!67914 (and ((_ is Cons!1760) (toList!889 lt!73508)) (= (_1!1352 (h!2367 (toList!889 lt!73508))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45297 (= (containsKey!179 (toList!889 lt!73508) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!92833)))

(declare-fun b!142476 () Bool)

(declare-fun e!92834 () Bool)

(assert (=> b!142476 (= e!92833 e!92834)))

(declare-fun res!67915 () Bool)

(assert (=> b!142476 (=> (not res!67915) (not e!92834))))

(assert (=> b!142476 (= res!67915 (and (or (not ((_ is Cons!1760) (toList!889 lt!73508))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73508))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1760) (toList!889 lt!73508)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73508))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142477 () Bool)

(assert (=> b!142477 (= e!92834 (containsKey!179 (t!6360 (toList!889 lt!73508)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!45297 (not res!67914)) b!142476))

(assert (= (and b!142476 res!67915) b!142477))

(declare-fun m!171775 () Bool)

(assert (=> b!142477 m!171775))

(assert (=> d!43665 d!45297))

(assert (=> d!44097 d!43575))

(assert (=> d!44097 d!43555))

(assert (=> d!44097 d!43581))

(declare-fun d!45299 () Bool)

(declare-fun lt!74705 () Bool)

(assert (=> d!45299 (= lt!74705 (select (content!137 (toList!889 lt!73722)) (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))

(declare-fun e!92835 () Bool)

(assert (=> d!45299 (= lt!74705 e!92835)))

(declare-fun res!67917 () Bool)

(assert (=> d!45299 (=> (not res!67917) (not e!92835))))

(assert (=> d!45299 (= res!67917 ((_ is Cons!1760) (toList!889 lt!73722)))))

(assert (=> d!45299 (= (contains!923 (toList!889 lt!73722) (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))) lt!74705)))

(declare-fun b!142478 () Bool)

(declare-fun e!92836 () Bool)

(assert (=> b!142478 (= e!92835 e!92836)))

(declare-fun res!67916 () Bool)

(assert (=> b!142478 (=> res!67916 e!92836)))

(assert (=> b!142478 (= res!67916 (= (h!2367 (toList!889 lt!73722)) (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))

(declare-fun b!142479 () Bool)

(assert (=> b!142479 (= e!92836 (contains!923 (t!6360 (toList!889 lt!73722)) (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45299 res!67917) b!142478))

(assert (= (and b!142478 (not res!67916)) b!142479))

(declare-fun m!171777 () Bool)

(assert (=> d!45299 m!171777))

(declare-fun m!171779 () Bool)

(assert (=> d!45299 m!171779))

(declare-fun m!171781 () Bool)

(assert (=> b!142479 m!171781))

(assert (=> b!140571 d!45299))

(declare-fun d!45301 () Bool)

(declare-fun res!67918 () Bool)

(declare-fun e!92837 () Bool)

(assert (=> d!45301 (=> res!67918 e!92837)))

(assert (=> d!45301 (= res!67918 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15508))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15508)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!45301 (= (containsKey!179 (t!6360 (toList!889 call!15508)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92837)))

(declare-fun b!142480 () Bool)

(declare-fun e!92838 () Bool)

(assert (=> b!142480 (= e!92837 e!92838)))

(declare-fun res!67919 () Bool)

(assert (=> b!142480 (=> (not res!67919) (not e!92838))))

(assert (=> b!142480 (= res!67919 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 call!15508)))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 call!15508)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (t!6360 (toList!889 call!15508))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 call!15508)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!142481 () Bool)

(assert (=> b!142481 (= e!92838 (containsKey!179 (t!6360 (t!6360 (toList!889 call!15508))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!45301 (not res!67918)) b!142480))

(assert (= (and b!142480 res!67919) b!142481))

(assert (=> b!142481 m!166733))

(declare-fun m!171783 () Bool)

(assert (=> b!142481 m!171783))

(assert (=> b!140949 d!45301))

(declare-fun lt!74706 () Bool)

(declare-fun d!45303 () Bool)

(assert (=> d!45303 (= lt!74706 (select (content!137 (t!6360 (toList!889 lt!73550))) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!92839 () Bool)

(assert (=> d!45303 (= lt!74706 e!92839)))

(declare-fun res!67921 () Bool)

(assert (=> d!45303 (=> (not res!67921) (not e!92839))))

(assert (=> d!45303 (= res!67921 ((_ is Cons!1760) (t!6360 (toList!889 lt!73550))))))

(assert (=> d!45303 (= (contains!923 (t!6360 (toList!889 lt!73550)) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!74706)))

(declare-fun b!142482 () Bool)

(declare-fun e!92840 () Bool)

(assert (=> b!142482 (= e!92839 e!92840)))

(declare-fun res!67920 () Bool)

(assert (=> b!142482 (=> res!67920 e!92840)))

(assert (=> b!142482 (= res!67920 (= (h!2367 (t!6360 (toList!889 lt!73550))) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!142483 () Bool)

(assert (=> b!142483 (= e!92840 (contains!923 (t!6360 (t!6360 (toList!889 lt!73550))) (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!45303 res!67921) b!142482))

(assert (= (and b!142482 (not res!67920)) b!142483))

(assert (=> d!45303 m!169525))

(declare-fun m!171785 () Bool)

(assert (=> d!45303 m!171785))

(declare-fun m!171787 () Bool)

(assert (=> b!142483 m!171787))

(assert (=> b!140565 d!45303))

(declare-fun b!142484 () Bool)

(declare-fun lt!74708 () SeekEntryResult!289)

(assert (=> b!142484 (and (bvsge (index!3321 lt!74708) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74708) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67922 () Bool)

(assert (=> b!142484 (= res!67922 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74708)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92844 () Bool)

(assert (=> b!142484 (=> res!67922 e!92844)))

(declare-fun b!142485 () Bool)

(assert (=> b!142485 (and (bvsge (index!3321 lt!74708) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74708) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67924 () Bool)

(assert (=> b!142485 (= res!67924 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74708)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142485 (=> res!67924 e!92844)))

(declare-fun e!92845 () Bool)

(assert (=> b!142485 (= e!92845 e!92844)))

(declare-fun d!45305 () Bool)

(declare-fun e!92843 () Bool)

(assert (=> d!45305 e!92843))

(declare-fun c!26930 () Bool)

(assert (=> d!45305 (= c!26930 (and ((_ is Intermediate!289) lt!74708) (undefined!1101 lt!74708)))))

(declare-fun e!92842 () SeekEntryResult!289)

(assert (=> d!45305 (= lt!74708 e!92842)))

(declare-fun c!26931 () Bool)

(assert (=> d!45305 (= c!26931 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!74707 () (_ BitVec 64))

(assert (=> d!45305 (= lt!74707 (select (arr!2314 (_keys!4699 newMap!16)) (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16))))))

(assert (=> d!45305 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45305 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74708)))

(declare-fun b!142486 () Bool)

(declare-fun e!92841 () SeekEntryResult!289)

(assert (=> b!142486 (= e!92841 (Intermediate!289 false (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!142487 () Bool)

(assert (=> b!142487 (= e!92843 e!92845)))

(declare-fun res!67923 () Bool)

(assert (=> b!142487 (= res!67923 (and ((_ is Intermediate!289) lt!74708) (not (undefined!1101 lt!74708)) (bvslt (x!16146 lt!74708) #b01111111111111111111111111111110) (bvsge (x!16146 lt!74708) #b00000000000000000000000000000000) (bvsge (x!16146 lt!74708) #b00000000000000000000000000000000)))))

(assert (=> b!142487 (=> (not res!67923) (not e!92845))))

(declare-fun b!142488 () Bool)

(assert (=> b!142488 (= e!92843 (bvsge (x!16146 lt!74708) #b01111111111111111111111111111110))))

(declare-fun b!142489 () Bool)

(assert (=> b!142489 (and (bvsge (index!3321 lt!74708) #b00000000000000000000000000000000) (bvslt (index!3321 lt!74708) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!142489 (= e!92844 (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!74708)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142490 () Bool)

(assert (=> b!142490 (= e!92841 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) #b00000000000000000000000000000000 (mask!7280 newMap!16)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(declare-fun b!142491 () Bool)

(assert (=> b!142491 (= e!92842 (Intermediate!289 true (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!142492 () Bool)

(assert (=> b!142492 (= e!92842 e!92841)))

(declare-fun c!26932 () Bool)

(assert (=> b!142492 (= c!26932 (or (= lt!74707 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!74707 lt!74707) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45305 c!26931) b!142491))

(assert (= (and d!45305 (not c!26931)) b!142492))

(assert (= (and b!142492 c!26932) b!142486))

(assert (= (and b!142492 (not c!26932)) b!142490))

(assert (= (and d!45305 c!26930) b!142488))

(assert (= (and d!45305 (not c!26930)) b!142487))

(assert (= (and b!142487 res!67923) b!142485))

(assert (= (and b!142485 (not res!67924)) b!142484))

(assert (= (and b!142484 (not res!67922)) b!142489))

(declare-fun m!171789 () Bool)

(assert (=> b!142489 m!171789))

(assert (=> b!142490 m!167883))

(declare-fun m!171791 () Bool)

(assert (=> b!142490 m!171791))

(assert (=> b!142490 m!171791))

(assert (=> b!142490 m!166967))

(declare-fun m!171793 () Bool)

(assert (=> b!142490 m!171793))

(assert (=> b!142484 m!171789))

(assert (=> d!45305 m!167883))

(declare-fun m!171795 () Bool)

(assert (=> d!45305 m!171795))

(assert (=> d!45305 m!166961))

(assert (=> b!142485 m!171789))

(assert (=> d!43699 d!45305))

(declare-fun d!45307 () Bool)

(declare-fun lt!74710 () (_ BitVec 32))

(declare-fun lt!74709 () (_ BitVec 32))

(assert (=> d!45307 (= lt!74710 (bvmul (bvxor lt!74709 (bvlshr lt!74709 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!45307 (= lt!74709 ((_ extract 31 0) (bvand (bvxor (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!45307 (and (bvsge (mask!7280 newMap!16) #b00000000000000000000000000000000) (let ((res!67361 (let ((h!2368 ((_ extract 31 0) (bvand (bvxor (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!16250 (bvmul (bvxor h!2368 (bvlshr h!2368 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!16250 (bvlshr x!16250 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))) (and (bvslt res!67361 (bvadd (mask!7280 newMap!16) #b00000000000000000000000000000001)) (bvsge res!67361 #b00000000000000000000000000000000))))))

(assert (=> d!45307 (= (toIndex!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (mask!7280 newMap!16)) (bvand (bvxor lt!74710 (bvlshr lt!74710 #b00000000000000000000000000001101)) (mask!7280 newMap!16)))))

(assert (=> d!43699 d!45307))

(assert (=> d!43699 d!43661))

(declare-fun e!92847 () Option!181)

(declare-fun b!142495 () Bool)

(assert (=> b!142495 (= e!92847 (getValueByKey!175 (t!6360 (toList!889 lt!73755)) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))

(declare-fun b!142494 () Bool)

(declare-fun e!92846 () Option!181)

(assert (=> b!142494 (= e!92846 e!92847)))

(declare-fun c!26934 () Bool)

(assert (=> b!142494 (= c!26934 (and ((_ is Cons!1760) (toList!889 lt!73755)) (not (= (_1!1352 (h!2367 (toList!889 lt!73755))) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))))))))

(declare-fun b!142496 () Bool)

(assert (=> b!142496 (= e!92847 None!179)))

(declare-fun b!142493 () Bool)

(assert (=> b!142493 (= e!92846 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73755)))))))

(declare-fun d!45309 () Bool)

(declare-fun c!26933 () Bool)

(assert (=> d!45309 (= c!26933 (and ((_ is Cons!1760) (toList!889 lt!73755)) (= (_1!1352 (h!2367 (toList!889 lt!73755))) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16))))))))

(assert (=> d!45309 (= (getValueByKey!175 (toList!889 lt!73755) (_1!1352 (tuple2!2685 lt!73447 (minValue!2790 newMap!16)))) e!92846)))

(assert (= (and d!45309 c!26933) b!142493))

(assert (= (and d!45309 (not c!26933)) b!142494))

(assert (= (and b!142494 c!26934) b!142495))

(assert (= (and b!142494 (not c!26934)) b!142496))

(declare-fun m!171797 () Bool)

(assert (=> b!142495 m!171797))

(assert (=> b!140588 d!45309))

(declare-fun d!45311 () Bool)

(declare-fun e!92849 () Bool)

(assert (=> d!45311 e!92849))

(declare-fun res!67925 () Bool)

(assert (=> d!45311 (=> res!67925 e!92849)))

(declare-fun lt!74711 () Bool)

(assert (=> d!45311 (= res!67925 (not lt!74711))))

(declare-fun lt!74714 () Bool)

(assert (=> d!45311 (= lt!74711 lt!74714)))

(declare-fun lt!74712 () Unit!4395)

(declare-fun e!92848 () Unit!4395)

(assert (=> d!45311 (= lt!74712 e!92848)))

(declare-fun c!26935 () Bool)

(assert (=> d!45311 (= c!26935 lt!74714)))

(assert (=> d!45311 (= lt!74714 (containsKey!179 (toList!889 lt!74000) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45311 (= (contains!921 lt!74000 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!74711)))

(declare-fun b!142497 () Bool)

(declare-fun lt!74713 () Unit!4395)

(assert (=> b!142497 (= e!92848 lt!74713)))

(assert (=> b!142497 (= lt!74713 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!74000) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142497 (isDefined!129 (getValueByKey!175 (toList!889 lt!74000) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142498 () Bool)

(declare-fun Unit!4521 () Unit!4395)

(assert (=> b!142498 (= e!92848 Unit!4521)))

(declare-fun b!142499 () Bool)

(assert (=> b!142499 (= e!92849 (isDefined!129 (getValueByKey!175 (toList!889 lt!74000) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45311 c!26935) b!142497))

(assert (= (and d!45311 (not c!26935)) b!142498))

(assert (= (and d!45311 (not res!67925)) b!142499))

(declare-fun m!171799 () Bool)

(assert (=> d!45311 m!171799))

(declare-fun m!171801 () Bool)

(assert (=> b!142497 m!171801))

(assert (=> b!142497 m!168957))

(assert (=> b!142497 m!168957))

(declare-fun m!171803 () Bool)

(assert (=> b!142497 m!171803))

(assert (=> b!142499 m!168957))

(assert (=> b!142499 m!168957))

(assert (=> b!142499 m!171803))

(assert (=> d!44017 d!45311))

(declare-fun b!142502 () Bool)

(declare-fun e!92851 () Option!181)

(assert (=> b!142502 (= e!92851 (getValueByKey!175 (t!6360 lt!74001) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142501 () Bool)

(declare-fun e!92850 () Option!181)

(assert (=> b!142501 (= e!92850 e!92851)))

(declare-fun c!26937 () Bool)

(assert (=> b!142501 (= c!26937 (and ((_ is Cons!1760) lt!74001) (not (= (_1!1352 (h!2367 lt!74001)) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!142503 () Bool)

(assert (=> b!142503 (= e!92851 None!179)))

(declare-fun b!142500 () Bool)

(assert (=> b!142500 (= e!92850 (Some!180 (_2!1352 (h!2367 lt!74001))))))

(declare-fun c!26936 () Bool)

(declare-fun d!45313 () Bool)

(assert (=> d!45313 (= c!26936 (and ((_ is Cons!1760) lt!74001) (= (_1!1352 (h!2367 lt!74001)) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45313 (= (getValueByKey!175 lt!74001 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) e!92850)))

(assert (= (and d!45313 c!26936) b!142500))

(assert (= (and d!45313 (not c!26936)) b!142501))

(assert (= (and b!142501 c!26937) b!142502))

(assert (= (and b!142501 (not c!26937)) b!142503))

(declare-fun m!171805 () Bool)

(assert (=> b!142502 m!171805))

(assert (=> d!44017 d!45313))

(declare-fun d!45315 () Bool)

(assert (=> d!45315 (= (getValueByKey!175 lt!74001 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74715 () Unit!4395)

(assert (=> d!45315 (= lt!74715 (choose!873 lt!74001 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92852 () Bool)

(assert (=> d!45315 e!92852))

(declare-fun res!67926 () Bool)

(assert (=> d!45315 (=> (not res!67926) (not e!92852))))

(assert (=> d!45315 (= res!67926 (isStrictlySorted!320 lt!74001))))

(assert (=> d!45315 (= (lemmaContainsTupThenGetReturnValue!91 lt!74001 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!74715)))

(declare-fun b!142504 () Bool)

(declare-fun res!67927 () Bool)

(assert (=> b!142504 (=> (not res!67927) (not e!92852))))

(assert (=> b!142504 (= res!67927 (containsKey!179 lt!74001 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142505 () Bool)

(assert (=> b!142505 (= e!92852 (contains!923 lt!74001 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45315 res!67926) b!142504))

(assert (= (and b!142504 res!67927) b!142505))

(assert (=> d!45315 m!168951))

(declare-fun m!171807 () Bool)

(assert (=> d!45315 m!171807))

(declare-fun m!171809 () Bool)

(assert (=> d!45315 m!171809))

(declare-fun m!171811 () Bool)

(assert (=> b!142504 m!171811))

(declare-fun m!171813 () Bool)

(assert (=> b!142505 m!171813))

(assert (=> d!44017 d!45315))

(declare-fun d!45317 () Bool)

(declare-fun e!92853 () Bool)

(assert (=> d!45317 e!92853))

(declare-fun res!67929 () Bool)

(assert (=> d!45317 (=> (not res!67929) (not e!92853))))

(declare-fun lt!74716 () List!1764)

(assert (=> d!45317 (= res!67929 (isStrictlySorted!320 lt!74716))))

(declare-fun e!92855 () List!1764)

(assert (=> d!45317 (= lt!74716 e!92855)))

(declare-fun c!26938 () Bool)

(assert (=> d!45317 (= c!26938 (and ((_ is Cons!1760) (toList!889 lt!73400)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73400))) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45317 (isStrictlySorted!320 (toList!889 lt!73400))))

(assert (=> d!45317 (= (insertStrictlySorted!93 (toList!889 lt!73400) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!74716)))

(declare-fun b!142506 () Bool)

(assert (=> b!142506 (= e!92853 (contains!923 lt!74716 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(declare-fun call!15774 () List!1764)

(declare-fun bm!15771 () Bool)

(declare-fun e!92856 () List!1764)

(assert (=> bm!15771 (= call!15774 ($colon$colon!93 e!92856 (ite c!26938 (h!2367 (toList!889 lt!73400)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26941 () Bool)

(assert (=> bm!15771 (= c!26941 c!26938)))

(declare-fun b!142507 () Bool)

(assert (=> b!142507 (= e!92855 call!15774)))

(declare-fun b!142508 () Bool)

(assert (=> b!142508 (= e!92856 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73400)) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142509 () Bool)

(declare-fun e!92857 () List!1764)

(declare-fun call!15775 () List!1764)

(assert (=> b!142509 (= e!92857 call!15775)))

(declare-fun bm!15772 () Bool)

(assert (=> bm!15772 (= call!15775 call!15774)))

(declare-fun b!142510 () Bool)

(declare-fun e!92854 () List!1764)

(declare-fun call!15776 () List!1764)

(assert (=> b!142510 (= e!92854 call!15776)))

(declare-fun c!26940 () Bool)

(declare-fun b!142511 () Bool)

(assert (=> b!142511 (= c!26940 (and ((_ is Cons!1760) (toList!889 lt!73400)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73400))) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142511 (= e!92857 e!92854)))

(declare-fun b!142512 () Bool)

(assert (=> b!142512 (= e!92855 e!92857)))

(declare-fun c!26939 () Bool)

(assert (=> b!142512 (= c!26939 (and ((_ is Cons!1760) (toList!889 lt!73400)) (= (_1!1352 (h!2367 (toList!889 lt!73400))) (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142513 () Bool)

(assert (=> b!142513 (= e!92856 (ite c!26939 (t!6360 (toList!889 lt!73400)) (ite c!26940 (Cons!1760 (h!2367 (toList!889 lt!73400)) (t!6360 (toList!889 lt!73400))) Nil!1761)))))

(declare-fun bm!15773 () Bool)

(assert (=> bm!15773 (= call!15776 call!15775)))

(declare-fun b!142514 () Bool)

(declare-fun res!67928 () Bool)

(assert (=> b!142514 (=> (not res!67928) (not e!92853))))

(assert (=> b!142514 (= res!67928 (containsKey!179 lt!74716 (_1!1352 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142515 () Bool)

(assert (=> b!142515 (= e!92854 call!15776)))

(assert (= (and d!45317 c!26938) b!142507))

(assert (= (and d!45317 (not c!26938)) b!142512))

(assert (= (and b!142512 c!26939) b!142509))

(assert (= (and b!142512 (not c!26939)) b!142511))

(assert (= (and b!142511 c!26940) b!142515))

(assert (= (and b!142511 (not c!26940)) b!142510))

(assert (= (or b!142515 b!142510) bm!15773))

(assert (= (or b!142509 bm!15773) bm!15772))

(assert (= (or b!142507 bm!15772) bm!15771))

(assert (= (and bm!15771 c!26941) b!142508))

(assert (= (and bm!15771 (not c!26941)) b!142513))

(assert (= (and d!45317 res!67929) b!142514))

(assert (= (and b!142514 res!67928) b!142506))

(declare-fun m!171815 () Bool)

(assert (=> b!142506 m!171815))

(declare-fun m!171817 () Bool)

(assert (=> b!142514 m!171817))

(declare-fun m!171819 () Bool)

(assert (=> b!142508 m!171819))

(declare-fun m!171821 () Bool)

(assert (=> bm!15771 m!171821))

(declare-fun m!171823 () Bool)

(assert (=> d!45317 m!171823))

(declare-fun m!171825 () Bool)

(assert (=> d!45317 m!171825))

(assert (=> d!44017 d!45317))

(declare-fun e!92859 () Option!181)

(declare-fun b!142518 () Bool)

(assert (=> b!142518 (= e!92859 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73550))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142517 () Bool)

(declare-fun e!92858 () Option!181)

(assert (=> b!142517 (= e!92858 e!92859)))

(declare-fun c!26943 () Bool)

(assert (=> b!142517 (= c!26943 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73550))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73550)))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!142519 () Bool)

(assert (=> b!142519 (= e!92859 None!179)))

(declare-fun b!142516 () Bool)

(assert (=> b!142516 (= e!92858 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73550))))))))

(declare-fun d!45319 () Bool)

(declare-fun c!26942 () Bool)

(assert (=> d!45319 (= c!26942 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73550))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73550)))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45319 (= (getValueByKey!175 (t!6360 (toList!889 lt!73550)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92858)))

(assert (= (and d!45319 c!26942) b!142516))

(assert (= (and d!45319 (not c!26942)) b!142517))

(assert (= (and b!142517 c!26943) b!142518))

(assert (= (and b!142517 (not c!26943)) b!142519))

(declare-fun m!171827 () Bool)

(assert (=> b!142518 m!171827))

(assert (=> b!140351 d!45319))

(declare-fun lt!74717 () Bool)

(declare-fun d!45321 () Bool)

(assert (=> d!45321 (= lt!74717 (select (content!137 lt!73551) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92860 () Bool)

(assert (=> d!45321 (= lt!74717 e!92860)))

(declare-fun res!67931 () Bool)

(assert (=> d!45321 (=> (not res!67931) (not e!92860))))

(assert (=> d!45321 (= res!67931 ((_ is Cons!1760) lt!73551))))

(assert (=> d!45321 (= (contains!923 lt!73551 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74717)))

(declare-fun b!142520 () Bool)

(declare-fun e!92861 () Bool)

(assert (=> b!142520 (= e!92860 e!92861)))

(declare-fun res!67930 () Bool)

(assert (=> b!142520 (=> res!67930 e!92861)))

(assert (=> b!142520 (= res!67930 (= (h!2367 lt!73551) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142521 () Bool)

(assert (=> b!142521 (= e!92861 (contains!923 (t!6360 lt!73551) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45321 res!67931) b!142520))

(assert (= (and b!142520 (not res!67930)) b!142521))

(declare-fun m!171829 () Bool)

(assert (=> d!45321 m!171829))

(declare-fun m!171831 () Bool)

(assert (=> d!45321 m!171831))

(declare-fun m!171833 () Bool)

(assert (=> b!142521 m!171833))

(assert (=> b!140298 d!45321))

(declare-fun d!45323 () Bool)

(assert (=> d!45323 (= (get!1538 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43607 d!45323))

(assert (=> d!43607 d!44265))

(declare-fun e!92863 () Option!181)

(declare-fun b!142524 () Bool)

(assert (=> b!142524 (= e!92863 (getValueByKey!175 (t!6360 (toList!889 lt!73734)) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))

(declare-fun b!142523 () Bool)

(declare-fun e!92862 () Option!181)

(assert (=> b!142523 (= e!92862 e!92863)))

(declare-fun c!26945 () Bool)

(assert (=> b!142523 (= c!26945 (and ((_ is Cons!1760) (toList!889 lt!73734)) (not (= (_1!1352 (h!2367 (toList!889 lt!73734))) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))))))

(declare-fun b!142525 () Bool)

(assert (=> b!142525 (= e!92863 None!179)))

(declare-fun b!142522 () Bool)

(assert (=> b!142522 (= e!92862 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73734)))))))

(declare-fun c!26944 () Bool)

(declare-fun d!45325 () Bool)

(assert (=> d!45325 (= c!26944 (and ((_ is Cons!1760) (toList!889 lt!73734)) (= (_1!1352 (h!2367 (toList!889 lt!73734))) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))

(assert (=> d!45325 (= (getValueByKey!175 (toList!889 lt!73734) (_1!1352 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) e!92862)))

(assert (= (and d!45325 c!26944) b!142522))

(assert (= (and d!45325 (not c!26944)) b!142523))

(assert (= (and b!142523 c!26945) b!142524))

(assert (= (and b!142523 (not c!26945)) b!142525))

(declare-fun m!171835 () Bool)

(assert (=> b!142524 m!171835))

(assert (=> b!140576 d!45325))

(declare-fun b!142528 () Bool)

(declare-fun e!92865 () Option!181)

(assert (=> b!142528 (= e!92865 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73470))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142527 () Bool)

(declare-fun e!92864 () Option!181)

(assert (=> b!142527 (= e!92864 e!92865)))

(declare-fun c!26947 () Bool)

(assert (=> b!142527 (= c!26947 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73470))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73470)))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))))

(declare-fun b!142529 () Bool)

(assert (=> b!142529 (= e!92865 None!179)))

(declare-fun b!142526 () Bool)

(assert (=> b!142526 (= e!92864 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73470))))))))

(declare-fun c!26946 () Bool)

(declare-fun d!45327 () Bool)

(assert (=> d!45327 (= c!26946 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73470))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73470)))) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!45327 (= (getValueByKey!175 (t!6360 (toList!889 lt!73470)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!92864)))

(assert (= (and d!45327 c!26946) b!142526))

(assert (= (and d!45327 (not c!26946)) b!142527))

(assert (= (and b!142527 c!26947) b!142528))

(assert (= (and b!142527 (not c!26947)) b!142529))

(declare-fun m!171837 () Bool)

(assert (=> b!142528 m!171837))

(assert (=> b!140543 d!45327))

(declare-fun d!45329 () Bool)

(declare-fun res!67932 () Bool)

(declare-fun e!92866 () Bool)

(assert (=> d!45329 (=> res!67932 e!92866)))

(assert (=> d!45329 (= res!67932 (and ((_ is Cons!1760) (toList!889 lt!73450)) (= (_1!1352 (h!2367 (toList!889 lt!73450))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45329 (= (containsKey!179 (toList!889 lt!73450) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!92866)))

(declare-fun b!142530 () Bool)

(declare-fun e!92867 () Bool)

(assert (=> b!142530 (= e!92866 e!92867)))

(declare-fun res!67933 () Bool)

(assert (=> b!142530 (=> (not res!67933) (not e!92867))))

(assert (=> b!142530 (= res!67933 (and (or (not ((_ is Cons!1760) (toList!889 lt!73450))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73450))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1760) (toList!889 lt!73450)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73450))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142531 () Bool)

(assert (=> b!142531 (= e!92867 (containsKey!179 (t!6360 (toList!889 lt!73450)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45329 (not res!67932)) b!142530))

(assert (= (and b!142530 res!67933) b!142531))

(assert (=> b!142531 m!166967))

(declare-fun m!171839 () Bool)

(assert (=> b!142531 m!171839))

(assert (=> d!44155 d!45329))

(assert (=> b!140409 d!43663))

(declare-fun d!45331 () Bool)

(declare-fun res!67934 () Bool)

(declare-fun e!92868 () Bool)

(assert (=> d!45331 (=> res!67934 e!92868)))

(assert (=> d!45331 (= res!67934 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (=> d!45331 (= (containsKey!179 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))) e!92868)))

(declare-fun b!142532 () Bool)

(declare-fun e!92869 () Bool)

(assert (=> b!142532 (= e!92868 e!92869)))

(declare-fun res!67935 () Bool)

(assert (=> b!142532 (=> (not res!67935) (not e!92869))))

(assert (=> b!142532 (= res!67935 (and (or (not ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (bvsle (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(declare-fun b!142533 () Bool)

(assert (=> b!142533 (= e!92869 (containsKey!179 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))

(assert (= (and d!45331 (not res!67934)) b!142532))

(assert (= (and b!142532 res!67935) b!142533))

(assert (=> b!142533 m!166933))

(declare-fun m!171841 () Bool)

(assert (=> b!142533 m!171841))

(assert (=> d!43851 d!45331))

(assert (=> b!140379 d!44811))

(declare-fun lt!74718 () Bool)

(declare-fun d!45333 () Bool)

(assert (=> d!45333 (= lt!74718 (select (content!137 (t!6360 (toList!889 lt!73535))) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!92870 () Bool)

(assert (=> d!45333 (= lt!74718 e!92870)))

(declare-fun res!67937 () Bool)

(assert (=> d!45333 (=> (not res!67937) (not e!92870))))

(assert (=> d!45333 (= res!67937 ((_ is Cons!1760) (t!6360 (toList!889 lt!73535))))))

(assert (=> d!45333 (= (contains!923 (t!6360 (toList!889 lt!73535)) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!74718)))

(declare-fun b!142534 () Bool)

(declare-fun e!92871 () Bool)

(assert (=> b!142534 (= e!92870 e!92871)))

(declare-fun res!67936 () Bool)

(assert (=> b!142534 (=> res!67936 e!92871)))

(assert (=> b!142534 (= res!67936 (= (h!2367 (t!6360 (toList!889 lt!73535))) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!142535 () Bool)

(assert (=> b!142535 (= e!92871 (contains!923 (t!6360 (t!6360 (toList!889 lt!73535))) (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!45333 res!67937) b!142534))

(assert (= (and b!142534 (not res!67936)) b!142535))

(assert (=> d!45333 m!169541))

(declare-fun m!171843 () Bool)

(assert (=> d!45333 m!171843))

(declare-fun m!171845 () Bool)

(assert (=> b!142535 m!171845))

(assert (=> b!140787 d!45333))

(declare-fun d!45335 () Bool)

(assert (=> d!45335 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun bs!6024 () Bool)

(assert (= bs!6024 d!45335))

(assert (=> bs!6024 m!167127))

(declare-fun m!171847 () Bool)

(assert (=> bs!6024 m!171847))

(assert (=> b!140465 d!45335))

(assert (=> b!140465 d!43875))

(declare-fun d!45337 () Bool)

(declare-fun e!92873 () Bool)

(assert (=> d!45337 e!92873))

(declare-fun res!67938 () Bool)

(assert (=> d!45337 (=> res!67938 e!92873)))

(declare-fun lt!74719 () Bool)

(assert (=> d!45337 (= res!67938 (not lt!74719))))

(declare-fun lt!74722 () Bool)

(assert (=> d!45337 (= lt!74719 lt!74722)))

(declare-fun lt!74720 () Unit!4395)

(declare-fun e!92872 () Unit!4395)

(assert (=> d!45337 (= lt!74720 e!92872)))

(declare-fun c!26948 () Bool)

(assert (=> d!45337 (= c!26948 lt!74722)))

(assert (=> d!45337 (= lt!74722 (containsKey!179 (toList!889 lt!73986) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45337 (= (contains!921 lt!73986 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) lt!74719)))

(declare-fun b!142536 () Bool)

(declare-fun lt!74721 () Unit!4395)

(assert (=> b!142536 (= e!92872 lt!74721)))

(assert (=> b!142536 (= lt!74721 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73986) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(assert (=> b!142536 (isDefined!129 (getValueByKey!175 (toList!889 lt!73986) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142537 () Bool)

(declare-fun Unit!4522 () Unit!4395)

(assert (=> b!142537 (= e!92872 Unit!4522)))

(declare-fun b!142538 () Bool)

(assert (=> b!142538 (= e!92873 (isDefined!129 (getValueByKey!175 (toList!889 lt!73986) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45337 c!26948) b!142536))

(assert (= (and d!45337 (not c!26948)) b!142537))

(assert (= (and d!45337 (not res!67938)) b!142538))

(declare-fun m!171849 () Bool)

(assert (=> d!45337 m!171849))

(declare-fun m!171851 () Bool)

(assert (=> b!142536 m!171851))

(assert (=> b!142536 m!168905))

(assert (=> b!142536 m!168905))

(declare-fun m!171853 () Bool)

(assert (=> b!142536 m!171853))

(assert (=> b!142538 m!168905))

(assert (=> b!142538 m!168905))

(assert (=> b!142538 m!171853))

(assert (=> d!44003 d!45337))

(declare-fun b!142541 () Bool)

(declare-fun e!92875 () Option!181)

(assert (=> b!142541 (= e!92875 (getValueByKey!175 (t!6360 lt!73987) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142540 () Bool)

(declare-fun e!92874 () Option!181)

(assert (=> b!142540 (= e!92874 e!92875)))

(declare-fun c!26950 () Bool)

(assert (=> b!142540 (= c!26950 (and ((_ is Cons!1760) lt!73987) (not (= (_1!1352 (h!2367 lt!73987)) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!142542 () Bool)

(assert (=> b!142542 (= e!92875 None!179)))

(declare-fun b!142539 () Bool)

(assert (=> b!142539 (= e!92874 (Some!180 (_2!1352 (h!2367 lt!73987))))))

(declare-fun d!45339 () Bool)

(declare-fun c!26949 () Bool)

(assert (=> d!45339 (= c!26949 (and ((_ is Cons!1760) lt!73987) (= (_1!1352 (h!2367 lt!73987)) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45339 (= (getValueByKey!175 lt!73987 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) e!92874)))

(assert (= (and d!45339 c!26949) b!142539))

(assert (= (and d!45339 (not c!26949)) b!142540))

(assert (= (and b!142540 c!26950) b!142541))

(assert (= (and b!142540 (not c!26950)) b!142542))

(declare-fun m!171855 () Bool)

(assert (=> b!142541 m!171855))

(assert (=> d!44003 d!45339))

(declare-fun d!45341 () Bool)

(assert (=> d!45341 (= (getValueByKey!175 lt!73987 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74723 () Unit!4395)

(assert (=> d!45341 (= lt!74723 (choose!873 lt!73987 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun e!92876 () Bool)

(assert (=> d!45341 e!92876))

(declare-fun res!67939 () Bool)

(assert (=> d!45341 (=> (not res!67939) (not e!92876))))

(assert (=> d!45341 (= res!67939 (isStrictlySorted!320 lt!73987))))

(assert (=> d!45341 (= (lemmaContainsTupThenGetReturnValue!91 lt!73987 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) lt!74723)))

(declare-fun b!142543 () Bool)

(declare-fun res!67940 () Bool)

(assert (=> b!142543 (=> (not res!67940) (not e!92876))))

(assert (=> b!142543 (= res!67940 (containsKey!179 lt!73987 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142544 () Bool)

(assert (=> b!142544 (= e!92876 (contains!923 lt!73987 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(assert (= (and d!45341 res!67939) b!142543))

(assert (= (and b!142543 res!67940) b!142544))

(assert (=> d!45341 m!168899))

(declare-fun m!171857 () Bool)

(assert (=> d!45341 m!171857))

(declare-fun m!171859 () Bool)

(assert (=> d!45341 m!171859))

(declare-fun m!171861 () Bool)

(assert (=> b!142543 m!171861))

(declare-fun m!171863 () Bool)

(assert (=> b!142544 m!171863))

(assert (=> d!44003 d!45341))

(declare-fun d!45343 () Bool)

(declare-fun e!92877 () Bool)

(assert (=> d!45343 e!92877))

(declare-fun res!67942 () Bool)

(assert (=> d!45343 (=> (not res!67942) (not e!92877))))

(declare-fun lt!74724 () List!1764)

(assert (=> d!45343 (= res!67942 (isStrictlySorted!320 lt!74724))))

(declare-fun e!92879 () List!1764)

(assert (=> d!45343 (= lt!74724 e!92879)))

(declare-fun c!26951 () Bool)

(assert (=> d!45343 (= c!26951 (and ((_ is Cons!1760) (toList!889 lt!73396)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73396))) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45343 (isStrictlySorted!320 (toList!889 lt!73396))))

(assert (=> d!45343 (= (insertStrictlySorted!93 (toList!889 lt!73396) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))) lt!74724)))

(declare-fun b!142545 () Bool)

(assert (=> b!142545 (= e!92877 (contains!923 lt!74724 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(declare-fun bm!15774 () Bool)

(declare-fun call!15777 () List!1764)

(declare-fun e!92880 () List!1764)

(assert (=> bm!15774 (= call!15777 ($colon$colon!93 e!92880 (ite c!26951 (h!2367 (toList!889 lt!73396)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))))

(declare-fun c!26954 () Bool)

(assert (=> bm!15774 (= c!26954 c!26951)))

(declare-fun b!142546 () Bool)

(assert (=> b!142546 (= e!92879 call!15777)))

(declare-fun b!142547 () Bool)

(assert (=> b!142547 (= e!92880 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73396)) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142548 () Bool)

(declare-fun e!92881 () List!1764)

(declare-fun call!15778 () List!1764)

(assert (=> b!142548 (= e!92881 call!15778)))

(declare-fun bm!15775 () Bool)

(assert (=> bm!15775 (= call!15778 call!15777)))

(declare-fun b!142549 () Bool)

(declare-fun e!92878 () List!1764)

(declare-fun call!15779 () List!1764)

(assert (=> b!142549 (= e!92878 call!15779)))

(declare-fun b!142550 () Bool)

(declare-fun c!26953 () Bool)

(assert (=> b!142550 (= c!26953 (and ((_ is Cons!1760) (toList!889 lt!73396)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73396))) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(assert (=> b!142550 (= e!92881 e!92878)))

(declare-fun b!142551 () Bool)

(assert (=> b!142551 (= e!92879 e!92881)))

(declare-fun c!26952 () Bool)

(assert (=> b!142551 (= c!26952 (and ((_ is Cons!1760) (toList!889 lt!73396)) (= (_1!1352 (h!2367 (toList!889 lt!73396))) (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142552 () Bool)

(assert (=> b!142552 (= e!92880 (ite c!26952 (t!6360 (toList!889 lt!73396)) (ite c!26953 (Cons!1760 (h!2367 (toList!889 lt!73396)) (t!6360 (toList!889 lt!73396))) Nil!1761)))))

(declare-fun bm!15776 () Bool)

(assert (=> bm!15776 (= call!15779 call!15778)))

(declare-fun b!142553 () Bool)

(declare-fun res!67941 () Bool)

(assert (=> b!142553 (=> (not res!67941) (not e!92877))))

(assert (=> b!142553 (= res!67941 (containsKey!179 lt!74724 (_1!1352 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142554 () Bool)

(assert (=> b!142554 (= e!92878 call!15779)))

(assert (= (and d!45343 c!26951) b!142546))

(assert (= (and d!45343 (not c!26951)) b!142551))

(assert (= (and b!142551 c!26952) b!142548))

(assert (= (and b!142551 (not c!26952)) b!142550))

(assert (= (and b!142550 c!26953) b!142554))

(assert (= (and b!142550 (not c!26953)) b!142549))

(assert (= (or b!142554 b!142549) bm!15776))

(assert (= (or b!142548 bm!15776) bm!15775))

(assert (= (or b!142546 bm!15775) bm!15774))

(assert (= (and bm!15774 c!26954) b!142547))

(assert (= (and bm!15774 (not c!26954)) b!142552))

(assert (= (and d!45343 res!67942) b!142553))

(assert (= (and b!142553 res!67941) b!142545))

(declare-fun m!171865 () Bool)

(assert (=> b!142545 m!171865))

(declare-fun m!171867 () Bool)

(assert (=> b!142553 m!171867))

(declare-fun m!171869 () Bool)

(assert (=> b!142547 m!171869))

(declare-fun m!171871 () Bool)

(assert (=> bm!15774 m!171871))

(declare-fun m!171873 () Bool)

(assert (=> d!45343 m!171873))

(declare-fun m!171875 () Bool)

(assert (=> d!45343 m!171875))

(assert (=> d!44003 d!45343))

(declare-fun d!45345 () Bool)

(assert (=> d!45345 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443))))

(declare-fun lt!74725 () Unit!4395)

(assert (=> d!45345 (= lt!74725 (choose!868 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443))))

(declare-fun e!92882 () Bool)

(assert (=> d!45345 e!92882))

(declare-fun res!67943 () Bool)

(assert (=> d!45345 (=> (not res!67943) (not e!92882))))

(assert (=> d!45345 (= res!67943 (isStrictlySorted!320 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442)))))))

(assert (=> d!45345 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443) lt!74725)))

(declare-fun b!142555 () Bool)

(assert (=> b!142555 (= e!92882 (containsKey!179 (toList!889 (+!174 lt!73440 (tuple2!2685 lt!73444 lt!73442))) lt!73443))))

(assert (= (and d!45345 res!67943) b!142555))

(assert (=> d!45345 m!168719))

(assert (=> d!45345 m!168719))

(assert (=> d!45345 m!168721))

(declare-fun m!171877 () Bool)

(assert (=> d!45345 m!171877))

(declare-fun m!171879 () Bool)

(assert (=> d!45345 m!171879))

(assert (=> b!142555 m!168715))

(assert (=> b!140823 d!45345))

(assert (=> b!140823 d!45013))

(assert (=> b!140823 d!45015))

(declare-fun d!45347 () Bool)

(declare-fun e!92883 () Bool)

(assert (=> d!45347 e!92883))

(declare-fun res!67945 () Bool)

(assert (=> d!45347 (=> (not res!67945) (not e!92883))))

(declare-fun lt!74728 () ListLongMap!1747)

(assert (=> d!45347 (= res!67945 (contains!921 lt!74728 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74729 () List!1764)

(assert (=> d!45347 (= lt!74728 (ListLongMap!1748 lt!74729))))

(declare-fun lt!74726 () Unit!4395)

(declare-fun lt!74727 () Unit!4395)

(assert (=> d!45347 (= lt!74726 lt!74727)))

(assert (=> d!45347 (= (getValueByKey!175 lt!74729 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45347 (= lt!74727 (lemmaContainsTupThenGetReturnValue!91 lt!74729 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45347 (= lt!74729 (insertStrictlySorted!93 (toList!889 call!15600) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45347 (= (+!174 call!15600 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74728)))

(declare-fun b!142556 () Bool)

(declare-fun res!67944 () Bool)

(assert (=> b!142556 (=> (not res!67944) (not e!92883))))

(assert (=> b!142556 (= res!67944 (= (getValueByKey!175 (toList!889 lt!74728) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142557 () Bool)

(assert (=> b!142557 (= e!92883 (contains!923 (toList!889 lt!74728) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45347 res!67945) b!142556))

(assert (= (and b!142556 res!67944) b!142557))

(declare-fun m!171881 () Bool)

(assert (=> d!45347 m!171881))

(declare-fun m!171883 () Bool)

(assert (=> d!45347 m!171883))

(declare-fun m!171885 () Bool)

(assert (=> d!45347 m!171885))

(declare-fun m!171887 () Bool)

(assert (=> d!45347 m!171887))

(declare-fun m!171889 () Bool)

(assert (=> b!142556 m!171889))

(declare-fun m!171891 () Bool)

(assert (=> b!142557 m!171891))

(assert (=> b!140405 d!45347))

(assert (=> b!140843 d!44093))

(declare-fun d!45349 () Bool)

(declare-fun e!92884 () Bool)

(assert (=> d!45349 e!92884))

(declare-fun res!67947 () Bool)

(assert (=> d!45349 (=> (not res!67947) (not e!92884))))

(declare-fun lt!74732 () ListLongMap!1747)

(assert (=> d!45349 (= res!67947 (contains!921 lt!74732 (_1!1352 (tuple2!2685 lt!73927 lt!73925))))))

(declare-fun lt!74733 () List!1764)

(assert (=> d!45349 (= lt!74732 (ListLongMap!1748 lt!74733))))

(declare-fun lt!74730 () Unit!4395)

(declare-fun lt!74731 () Unit!4395)

(assert (=> d!45349 (= lt!74730 lt!74731)))

(assert (=> d!45349 (= (getValueByKey!175 lt!74733 (_1!1352 (tuple2!2685 lt!73927 lt!73925))) (Some!180 (_2!1352 (tuple2!2685 lt!73927 lt!73925))))))

(assert (=> d!45349 (= lt!74731 (lemmaContainsTupThenGetReturnValue!91 lt!74733 (_1!1352 (tuple2!2685 lt!73927 lt!73925)) (_2!1352 (tuple2!2685 lt!73927 lt!73925))))))

(assert (=> d!45349 (= lt!74733 (insertStrictlySorted!93 (toList!889 lt!73923) (_1!1352 (tuple2!2685 lt!73927 lt!73925)) (_2!1352 (tuple2!2685 lt!73927 lt!73925))))))

(assert (=> d!45349 (= (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925)) lt!74732)))

(declare-fun b!142558 () Bool)

(declare-fun res!67946 () Bool)

(assert (=> b!142558 (=> (not res!67946) (not e!92884))))

(assert (=> b!142558 (= res!67946 (= (getValueByKey!175 (toList!889 lt!74732) (_1!1352 (tuple2!2685 lt!73927 lt!73925))) (Some!180 (_2!1352 (tuple2!2685 lt!73927 lt!73925)))))))

(declare-fun b!142559 () Bool)

(assert (=> b!142559 (= e!92884 (contains!923 (toList!889 lt!74732) (tuple2!2685 lt!73927 lt!73925)))))

(assert (= (and d!45349 res!67947) b!142558))

(assert (= (and b!142558 res!67946) b!142559))

(declare-fun m!171893 () Bool)

(assert (=> d!45349 m!171893))

(declare-fun m!171895 () Bool)

(assert (=> d!45349 m!171895))

(declare-fun m!171897 () Bool)

(assert (=> d!45349 m!171897))

(declare-fun m!171899 () Bool)

(assert (=> d!45349 m!171899))

(declare-fun m!171901 () Bool)

(assert (=> b!142558 m!171901))

(declare-fun m!171903 () Bool)

(assert (=> b!142559 m!171903))

(assert (=> b!140843 d!45349))

(declare-fun d!45351 () Bool)

(assert (=> d!45351 (not (contains!921 (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925)) lt!73926))))

(declare-fun lt!74734 () Unit!4395)

(assert (=> d!45351 (= lt!74734 (choose!875 lt!73923 lt!73927 lt!73925 lt!73926))))

(declare-fun e!92885 () Bool)

(assert (=> d!45351 e!92885))

(declare-fun res!67948 () Bool)

(assert (=> d!45351 (=> (not res!67948) (not e!92885))))

(assert (=> d!45351 (= res!67948 (not (contains!921 lt!73923 lt!73926)))))

(assert (=> d!45351 (= (addStillNotContains!66 lt!73923 lt!73927 lt!73925 lt!73926) lt!74734)))

(declare-fun b!142560 () Bool)

(assert (=> b!142560 (= e!92885 (not (= lt!73927 lt!73926)))))

(assert (= (and d!45351 res!67948) b!142560))

(assert (=> d!45351 m!168735))

(assert (=> d!45351 m!168735))

(assert (=> d!45351 m!168737))

(declare-fun m!171905 () Bool)

(assert (=> d!45351 m!171905))

(declare-fun m!171907 () Bool)

(assert (=> d!45351 m!171907))

(assert (=> b!140843 d!45351))

(declare-fun d!45353 () Bool)

(declare-fun e!92886 () Bool)

(assert (=> d!45353 e!92886))

(declare-fun res!67950 () Bool)

(assert (=> d!45353 (=> (not res!67950) (not e!92886))))

(declare-fun lt!74737 () ListLongMap!1747)

(assert (=> d!45353 (= res!67950 (contains!921 lt!74737 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74738 () List!1764)

(assert (=> d!45353 (= lt!74737 (ListLongMap!1748 lt!74738))))

(declare-fun lt!74735 () Unit!4395)

(declare-fun lt!74736 () Unit!4395)

(assert (=> d!45353 (= lt!74735 lt!74736)))

(assert (=> d!45353 (= (getValueByKey!175 lt!74738 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45353 (= lt!74736 (lemmaContainsTupThenGetReturnValue!91 lt!74738 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45353 (= lt!74738 (insertStrictlySorted!93 (toList!889 call!15646) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45353 (= (+!174 call!15646 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74737)))

(declare-fun b!142561 () Bool)

(declare-fun res!67949 () Bool)

(assert (=> b!142561 (=> (not res!67949) (not e!92886))))

(assert (=> b!142561 (= res!67949 (= (getValueByKey!175 (toList!889 lt!74737) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142562 () Bool)

(assert (=> b!142562 (= e!92886 (contains!923 (toList!889 lt!74737) (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45353 res!67950) b!142561))

(assert (= (and b!142561 res!67949) b!142562))

(declare-fun m!171909 () Bool)

(assert (=> d!45353 m!171909))

(declare-fun m!171911 () Bool)

(assert (=> d!45353 m!171911))

(declare-fun m!171913 () Bool)

(assert (=> d!45353 m!171913))

(declare-fun m!171915 () Bool)

(assert (=> d!45353 m!171915))

(declare-fun m!171917 () Bool)

(assert (=> b!142561 m!171917))

(declare-fun m!171919 () Bool)

(assert (=> b!142562 m!171919))

(assert (=> b!140843 d!45353))

(declare-fun d!45355 () Bool)

(declare-fun e!92888 () Bool)

(assert (=> d!45355 e!92888))

(declare-fun res!67951 () Bool)

(assert (=> d!45355 (=> res!67951 e!92888)))

(declare-fun lt!74739 () Bool)

(assert (=> d!45355 (= res!67951 (not lt!74739))))

(declare-fun lt!74742 () Bool)

(assert (=> d!45355 (= lt!74739 lt!74742)))

(declare-fun lt!74740 () Unit!4395)

(declare-fun e!92887 () Unit!4395)

(assert (=> d!45355 (= lt!74740 e!92887)))

(declare-fun c!26955 () Bool)

(assert (=> d!45355 (= c!26955 lt!74742)))

(assert (=> d!45355 (= lt!74742 (containsKey!179 (toList!889 (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925))) lt!73926))))

(assert (=> d!45355 (= (contains!921 (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925)) lt!73926) lt!74739)))

(declare-fun b!142563 () Bool)

(declare-fun lt!74741 () Unit!4395)

(assert (=> b!142563 (= e!92887 lt!74741)))

(assert (=> b!142563 (= lt!74741 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925))) lt!73926))))

(assert (=> b!142563 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925))) lt!73926))))

(declare-fun b!142564 () Bool)

(declare-fun Unit!4523 () Unit!4395)

(assert (=> b!142564 (= e!92887 Unit!4523)))

(declare-fun b!142565 () Bool)

(assert (=> b!142565 (= e!92888 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73923 (tuple2!2685 lt!73927 lt!73925))) lt!73926)))))

(assert (= (and d!45355 c!26955) b!142563))

(assert (= (and d!45355 (not c!26955)) b!142564))

(assert (= (and d!45355 (not res!67951)) b!142565))

(declare-fun m!171921 () Bool)

(assert (=> d!45355 m!171921))

(declare-fun m!171923 () Bool)

(assert (=> b!142563 m!171923))

(declare-fun m!171925 () Bool)

(assert (=> b!142563 m!171925))

(assert (=> b!142563 m!171925))

(declare-fun m!171927 () Bool)

(assert (=> b!142563 m!171927))

(assert (=> b!142565 m!171925))

(assert (=> b!142565 m!171925))

(assert (=> b!142565 m!171927))

(assert (=> b!140843 d!45355))

(declare-fun d!45357 () Bool)

(assert (=> d!45357 (= (apply!120 lt!73586 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73586) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6025 () Bool)

(assert (= bs!6025 d!45357))

(assert (=> bs!6025 m!166967))

(assert (=> bs!6025 m!170387))

(assert (=> bs!6025 m!170387))

(declare-fun m!171929 () Bool)

(assert (=> bs!6025 m!171929))

(assert (=> b!140249 d!45357))

(assert (=> b!140249 d!43765))

(assert (=> d!44023 d!44001))

(assert (=> d!44023 d!44003))

(declare-fun d!45359 () Bool)

(assert (=> d!45359 (= (apply!120 (+!174 lt!73396 (tuple2!2685 lt!73401 (zeroValue!2790 newMap!16))) lt!73407) (apply!120 lt!73396 lt!73407))))

(assert (=> d!45359 true))

(declare-fun _$34!1011 () Unit!4395)

(assert (=> d!45359 (= (choose!870 lt!73396 lt!73401 (zeroValue!2790 newMap!16) lt!73407) _$34!1011)))

(declare-fun bs!6026 () Bool)

(assert (= bs!6026 d!45359))

(assert (=> bs!6026 m!167185))

(assert (=> bs!6026 m!167185))

(assert (=> bs!6026 m!167187))

(assert (=> bs!6026 m!167195))

(assert (=> d!44023 d!45359))

(declare-fun d!45361 () Bool)

(declare-fun e!92890 () Bool)

(assert (=> d!45361 e!92890))

(declare-fun res!67952 () Bool)

(assert (=> d!45361 (=> res!67952 e!92890)))

(declare-fun lt!74743 () Bool)

(assert (=> d!45361 (= res!67952 (not lt!74743))))

(declare-fun lt!74746 () Bool)

(assert (=> d!45361 (= lt!74743 lt!74746)))

(declare-fun lt!74744 () Unit!4395)

(declare-fun e!92889 () Unit!4395)

(assert (=> d!45361 (= lt!74744 e!92889)))

(declare-fun c!26956 () Bool)

(assert (=> d!45361 (= c!26956 lt!74746)))

(assert (=> d!45361 (= lt!74746 (containsKey!179 (toList!889 lt!73396) lt!73407))))

(assert (=> d!45361 (= (contains!921 lt!73396 lt!73407) lt!74743)))

(declare-fun b!142566 () Bool)

(declare-fun lt!74745 () Unit!4395)

(assert (=> b!142566 (= e!92889 lt!74745)))

(assert (=> b!142566 (= lt!74745 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73396) lt!73407))))

(assert (=> b!142566 (isDefined!129 (getValueByKey!175 (toList!889 lt!73396) lt!73407))))

(declare-fun b!142567 () Bool)

(declare-fun Unit!4524 () Unit!4395)

(assert (=> b!142567 (= e!92889 Unit!4524)))

(declare-fun b!142568 () Bool)

(assert (=> b!142568 (= e!92890 (isDefined!129 (getValueByKey!175 (toList!889 lt!73396) lt!73407)))))

(assert (= (and d!45361 c!26956) b!142566))

(assert (= (and d!45361 (not c!26956)) b!142567))

(assert (= (and d!45361 (not res!67952)) b!142568))

(declare-fun m!171931 () Bool)

(assert (=> d!45361 m!171931))

(declare-fun m!171933 () Bool)

(assert (=> b!142566 m!171933))

(assert (=> b!142566 m!168893))

(assert (=> b!142566 m!168893))

(declare-fun m!171935 () Bool)

(assert (=> b!142566 m!171935))

(assert (=> b!142568 m!168893))

(assert (=> b!142568 m!168893))

(assert (=> b!142568 m!171935))

(assert (=> d!44023 d!45361))

(assert (=> d!44023 d!44029))

(declare-fun e!92892 () Option!181)

(declare-fun b!142571 () Bool)

(assert (=> b!142571 (= e!92892 (getValueByKey!175 (t!6360 (t!6360 (t!6360 (toList!889 lt!73065)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(declare-fun b!142570 () Bool)

(declare-fun e!92891 () Option!181)

(assert (=> b!142570 (= e!92891 e!92892)))

(declare-fun c!26958 () Bool)

(assert (=> b!142570 (= c!26958 (and ((_ is Cons!1760) (t!6360 (t!6360 (toList!889 lt!73065)))) (not (= (_1!1352 (h!2367 (t!6360 (t!6360 (toList!889 lt!73065))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(declare-fun b!142572 () Bool)

(assert (=> b!142572 (= e!92892 None!179)))

(declare-fun b!142569 () Bool)

(assert (=> b!142569 (= e!92891 (Some!180 (_2!1352 (h!2367 (t!6360 (t!6360 (toList!889 lt!73065)))))))))

(declare-fun d!45363 () Bool)

(declare-fun c!26957 () Bool)

(assert (=> d!45363 (= c!26957 (and ((_ is Cons!1760) (t!6360 (t!6360 (toList!889 lt!73065)))) (= (_1!1352 (h!2367 (t!6360 (t!6360 (toList!889 lt!73065))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!45363 (= (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!92891)))

(assert (= (and d!45363 c!26957) b!142569))

(assert (= (and d!45363 (not c!26957)) b!142570))

(assert (= (and b!142570 c!26958) b!142571))

(assert (= (and b!142570 (not c!26958)) b!142572))

(assert (=> b!142571 m!166733))

(declare-fun m!171937 () Bool)

(assert (=> b!142571 m!171937))

(assert (=> b!140640 d!45363))

(declare-fun d!45365 () Bool)

(assert (=> d!45365 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!74747 () Unit!4395)

(assert (=> d!45365 (= lt!74747 (choose!868 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!92893 () Bool)

(assert (=> d!45365 e!92893))

(declare-fun res!67953 () Bool)

(assert (=> d!45365 (=> (not res!67953) (not e!92893))))

(assert (=> d!45365 (= res!67953 (isStrictlySorted!320 (toList!889 lt!73250)))))

(assert (=> d!45365 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74747)))

(declare-fun b!142573 () Bool)

(assert (=> b!142573 (= e!92893 (containsKey!179 (toList!889 lt!73250) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45365 res!67953) b!142573))

(assert (=> d!45365 m!166967))

(assert (=> d!45365 m!167727))

(assert (=> d!45365 m!167727))

(assert (=> d!45365 m!168769))

(assert (=> d!45365 m!166967))

(declare-fun m!171939 () Bool)

(assert (=> d!45365 m!171939))

(assert (=> d!45365 m!169533))

(assert (=> b!142573 m!166967))

(assert (=> b!142573 m!168765))

(assert (=> b!140848 d!45365))

(assert (=> b!140848 d!45149))

(assert (=> b!140848 d!44205))

(declare-fun d!45367 () Bool)

(declare-fun res!67954 () Bool)

(declare-fun e!92894 () Bool)

(assert (=> d!45367 (=> res!67954 e!92894)))

(assert (=> d!45367 (= res!67954 (and ((_ is Cons!1760) (toList!889 lt!73250)) (= (_1!1352 (h!2367 (toList!889 lt!73250))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45367 (= (containsKey!179 (toList!889 lt!73250) #b1000000000000000000000000000000000000000000000000000000000000000) e!92894)))

(declare-fun b!142574 () Bool)

(declare-fun e!92895 () Bool)

(assert (=> b!142574 (= e!92894 e!92895)))

(declare-fun res!67955 () Bool)

(assert (=> b!142574 (=> (not res!67955) (not e!92895))))

(assert (=> b!142574 (= res!67955 (and (or (not ((_ is Cons!1760) (toList!889 lt!73250))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73250))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73250)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73250))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142575 () Bool)

(assert (=> b!142575 (= e!92895 (containsKey!179 (t!6360 (toList!889 lt!73250)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45367 (not res!67954)) b!142574))

(assert (= (and b!142574 res!67955) b!142575))

(declare-fun m!171941 () Bool)

(assert (=> b!142575 m!171941))

(assert (=> d!44117 d!45367))

(assert (=> b!140512 d!45253))

(assert (=> b!140512 d!43771))

(declare-fun d!45369 () Bool)

(declare-fun lt!74748 () Bool)

(assert (=> d!45369 (= lt!74748 (select (content!137 lt!73713) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!92896 () Bool)

(assert (=> d!45369 (= lt!74748 e!92896)))

(declare-fun res!67957 () Bool)

(assert (=> d!45369 (=> (not res!67957) (not e!92896))))

(assert (=> d!45369 (= res!67957 ((_ is Cons!1760) lt!73713))))

(assert (=> d!45369 (= (contains!923 lt!73713 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74748)))

(declare-fun b!142576 () Bool)

(declare-fun e!92897 () Bool)

(assert (=> b!142576 (= e!92896 e!92897)))

(declare-fun res!67956 () Bool)

(assert (=> b!142576 (=> res!67956 e!92897)))

(assert (=> b!142576 (= res!67956 (= (h!2367 lt!73713) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142577 () Bool)

(assert (=> b!142577 (= e!92897 (contains!923 (t!6360 lt!73713) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45369 res!67957) b!142576))

(assert (= (and b!142576 (not res!67956)) b!142577))

(declare-fun m!171943 () Bool)

(assert (=> d!45369 m!171943))

(declare-fun m!171945 () Bool)

(assert (=> d!45369 m!171945))

(declare-fun m!171947 () Bool)

(assert (=> b!142577 m!171947))

(assert (=> b!140554 d!45369))

(declare-fun b!142580 () Bool)

(declare-fun e!92899 () Option!181)

(assert (=> b!142580 (= e!92899 (getValueByKey!175 (t!6360 (toList!889 lt!74107)) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))

(declare-fun b!142579 () Bool)

(declare-fun e!92898 () Option!181)

(assert (=> b!142579 (= e!92898 e!92899)))

(declare-fun c!26960 () Bool)

(assert (=> b!142579 (= c!26960 (and ((_ is Cons!1760) (toList!889 lt!74107)) (not (= (_1!1352 (h!2367 (toList!889 lt!74107))) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))))))

(declare-fun b!142581 () Bool)

(assert (=> b!142581 (= e!92899 None!179)))

(declare-fun b!142578 () Bool)

(assert (=> b!142578 (= e!92898 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74107)))))))

(declare-fun d!45371 () Bool)

(declare-fun c!26959 () Bool)

(assert (=> d!45371 (= c!26959 (and ((_ is Cons!1760) (toList!889 lt!74107)) (= (_1!1352 (h!2367 (toList!889 lt!74107))) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))))))

(assert (=> d!45371 (= (getValueByKey!175 (toList!889 lt!74107) (_1!1352 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) e!92898)))

(assert (= (and d!45371 c!26959) b!142578))

(assert (= (and d!45371 (not c!26959)) b!142579))

(assert (= (and b!142579 c!26960) b!142580))

(assert (= (and b!142579 (not c!26960)) b!142581))

(declare-fun m!171949 () Bool)

(assert (=> b!142580 m!171949))

(assert (=> b!141083 d!45371))

(declare-fun d!45373 () Bool)

(assert (=> d!45373 (= (apply!120 lt!73941 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73941) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6027 () Bool)

(assert (= bs!6027 d!45373))

(assert (=> bs!6027 m!170109))

(assert (=> bs!6027 m!170109))

(declare-fun m!171951 () Bool)

(assert (=> bs!6027 m!171951))

(assert (=> b!140863 d!45373))

(assert (=> d!43601 d!43571))

(assert (=> d!43601 d!43565))

(assert (=> d!43601 d!43583))

(declare-fun d!45375 () Bool)

(assert (=> d!45375 (= (get!1538 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73391) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!44055 d!45375))

(assert (=> d!44055 d!44219))

(declare-fun d!45377 () Bool)

(declare-fun e!92900 () Bool)

(assert (=> d!45377 e!92900))

(declare-fun res!67959 () Bool)

(assert (=> d!45377 (=> (not res!67959) (not e!92900))))

(declare-fun lt!74751 () ListLongMap!1747)

(assert (=> d!45377 (= res!67959 (contains!921 lt!74751 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74752 () List!1764)

(assert (=> d!45377 (= lt!74751 (ListLongMap!1748 lt!74752))))

(declare-fun lt!74749 () Unit!4395)

(declare-fun lt!74750 () Unit!4395)

(assert (=> d!45377 (= lt!74749 lt!74750)))

(assert (=> d!45377 (= (getValueByKey!175 lt!74752 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45377 (= lt!74750 (lemmaContainsTupThenGetReturnValue!91 lt!74752 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45377 (= lt!74752 (insertStrictlySorted!93 (toList!889 call!15642) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45377 (= (+!174 call!15642 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74751)))

(declare-fun b!142582 () Bool)

(declare-fun res!67958 () Bool)

(assert (=> b!142582 (=> (not res!67958) (not e!92900))))

(assert (=> b!142582 (= res!67958 (= (getValueByKey!175 (toList!889 lt!74751) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142583 () Bool)

(assert (=> b!142583 (= e!92900 (contains!923 (toList!889 lt!74751) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!45377 res!67959) b!142582))

(assert (= (and b!142582 res!67958) b!142583))

(declare-fun m!171953 () Bool)

(assert (=> d!45377 m!171953))

(declare-fun m!171955 () Bool)

(assert (=> d!45377 m!171955))

(declare-fun m!171957 () Bool)

(assert (=> d!45377 m!171957))

(declare-fun m!171959 () Bool)

(assert (=> d!45377 m!171959))

(declare-fun m!171961 () Bool)

(assert (=> b!142582 m!171961))

(declare-fun m!171963 () Bool)

(assert (=> b!142583 m!171963))

(assert (=> b!140761 d!45377))

(declare-fun d!45379 () Bool)

(assert (=> d!45379 (contains!921 (getCurrentListMap!555 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) (select (arr!2314 lt!73346) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))))))

(assert (=> d!45379 true))

(declare-fun _$16!159 () Unit!4395)

(assert (=> d!45379 (= (choose!864 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (defaultEntry!2940 newMap!16)) _$16!159)))

(declare-fun bs!6028 () Bool)

(assert (= bs!6028 d!45379))

(assert (=> bs!6028 m!167051))

(assert (=> bs!6028 m!168539))

(assert (=> bs!6028 m!167051))

(assert (=> bs!6028 m!168539))

(assert (=> bs!6028 m!168541))

(assert (=> d!43911 d!45379))

(assert (=> d!43911 d!43661))

(declare-fun d!45381 () Bool)

(declare-fun res!67960 () Bool)

(declare-fun e!92901 () Bool)

(assert (=> d!45381 (=> res!67960 e!92901)))

(assert (=> d!45381 (= res!67960 (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!45381 (= (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!92901)))

(declare-fun b!142584 () Bool)

(declare-fun e!92902 () Bool)

(assert (=> b!142584 (= e!92901 e!92902)))

(declare-fun res!67961 () Bool)

(assert (=> b!142584 (=> (not res!67961) (not e!92902))))

(assert (=> b!142584 (= res!67961 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!142585 () Bool)

(assert (=> b!142585 (= e!92902 (arrayContainsKey!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!45381 (not res!67960)) b!142584))

(assert (= (and b!142584 res!67961) b!142585))

(declare-fun m!171965 () Bool)

(assert (=> d!45381 m!171965))

(assert (=> b!142585 m!166733))

(declare-fun m!171967 () Bool)

(assert (=> b!142585 m!171967))

(assert (=> b!141090 d!45381))

(declare-fun b!142586 () Bool)

(declare-fun res!67963 () Bool)

(declare-fun e!92903 () Bool)

(assert (=> b!142586 (=> (not res!67963) (not e!92903))))

(assert (=> b!142586 (= res!67963 (and (= (size!2587 (_values!2923 (_2!1353 lt!73341))) (bvadd (mask!7280 (_2!1353 lt!73341)) #b00000000000000000000000000000001)) (= (size!2586 (_keys!4699 (_2!1353 lt!73341))) (size!2587 (_values!2923 (_2!1353 lt!73341)))) (bvsge (_size!625 (_2!1353 lt!73341)) #b00000000000000000000000000000000) (bvsle (_size!625 (_2!1353 lt!73341)) (bvadd (mask!7280 (_2!1353 lt!73341)) #b00000000000000000000000000000001))))))

(declare-fun b!142589 () Bool)

(assert (=> b!142589 (= e!92903 (and (bvsge (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000000) (bvsle (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000011) (bvsge (_vacant!625 (_2!1353 lt!73341)) #b00000000000000000000000000000000)))))

(declare-fun d!45383 () Bool)

(declare-fun res!67962 () Bool)

(assert (=> d!45383 (=> (not res!67962) (not e!92903))))

(assert (=> d!45383 (= res!67962 (validMask!0 (mask!7280 (_2!1353 lt!73341))))))

(assert (=> d!45383 (= (simpleValid!95 (_2!1353 lt!73341)) e!92903)))

(declare-fun b!142587 () Bool)

(declare-fun res!67965 () Bool)

(assert (=> b!142587 (=> (not res!67965) (not e!92903))))

(assert (=> b!142587 (= res!67965 (bvsge (size!2590 (_2!1353 lt!73341)) (_size!625 (_2!1353 lt!73341))))))

(declare-fun b!142588 () Bool)

(declare-fun res!67964 () Bool)

(assert (=> b!142588 (=> (not res!67964) (not e!92903))))

(assert (=> b!142588 (= res!67964 (= (size!2590 (_2!1353 lt!73341)) (bvadd (_size!625 (_2!1353 lt!73341)) (bvsdiv (bvadd (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!45383 res!67962) b!142586))

(assert (= (and b!142586 res!67963) b!142587))

(assert (= (and b!142587 res!67965) b!142588))

(assert (= (and b!142588 res!67964) b!142589))

(declare-fun m!171969 () Bool)

(assert (=> d!45383 m!171969))

(declare-fun m!171971 () Bool)

(assert (=> b!142587 m!171971))

(assert (=> b!142588 m!171971))

(assert (=> d!44115 d!45383))

(declare-fun d!45385 () Bool)

(assert (=> d!45385 (isDefined!129 (getValueByKey!175 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74753 () Unit!4395)

(assert (=> d!45385 (= lt!74753 (choose!868 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!92904 () Bool)

(assert (=> d!45385 e!92904))

(declare-fun res!67966 () Bool)

(assert (=> d!45385 (=> (not res!67966) (not e!92904))))

(assert (=> d!45385 (= res!67966 (isStrictlySorted!320 (toList!889 lt!73482)))))

(assert (=> d!45385 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000) lt!74753)))

(declare-fun b!142590 () Bool)

(assert (=> b!142590 (= e!92904 (containsKey!179 (toList!889 lt!73482) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45385 res!67966) b!142590))

(assert (=> d!45385 m!168303))

(assert (=> d!45385 m!168303))

(assert (=> d!45385 m!168305))

(declare-fun m!171973 () Bool)

(assert (=> d!45385 m!171973))

(assert (=> d!45385 m!169759))

(assert (=> b!142590 m!168299))

(assert (=> b!140598 d!45385))

(assert (=> b!140598 d!45217))

(assert (=> b!140598 d!45065))

(declare-fun d!45387 () Bool)

(assert (=> d!45387 (= (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398)) (not (isEmpty!422 (getValueByKey!175 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398))))))

(declare-fun bs!6029 () Bool)

(assert (= bs!6029 d!45387))

(assert (=> bs!6029 m!168965))

(declare-fun m!171975 () Bool)

(assert (=> bs!6029 m!171975))

(assert (=> b!140916 d!45387))

(declare-fun b!142593 () Bool)

(declare-fun e!92906 () Option!181)

(assert (=> b!142593 (= e!92906 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))) lt!73398))))

(declare-fun b!142592 () Bool)

(declare-fun e!92905 () Option!181)

(assert (=> b!142592 (= e!92905 e!92906)))

(declare-fun c!26962 () Bool)

(assert (=> b!142592 (= c!26962 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))) lt!73398))))))

(declare-fun b!142594 () Bool)

(assert (=> b!142594 (= e!92906 None!179)))

(declare-fun b!142591 () Bool)

(assert (=> b!142591 (= e!92905 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26961 () Bool)

(declare-fun d!45389 () Bool)

(assert (=> d!45389 (= c!26961 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))))) lt!73398)))))

(assert (=> d!45389 (= (getValueByKey!175 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398) e!92905)))

(assert (= (and d!45389 c!26961) b!142591))

(assert (= (and d!45389 (not c!26961)) b!142592))

(assert (= (and b!142592 c!26962) b!142593))

(assert (= (and b!142592 (not c!26962)) b!142594))

(declare-fun m!171977 () Bool)

(assert (=> b!142593 m!171977))

(assert (=> b!140916 d!45389))

(declare-fun d!45391 () Bool)

(declare-fun lt!74754 () Bool)

(assert (=> d!45391 (= lt!74754 (select (content!136 Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!92908 () Bool)

(assert (=> d!45391 (= lt!74754 e!92908)))

(declare-fun res!67968 () Bool)

(assert (=> d!45391 (=> (not res!67968) (not e!92908))))

(assert (=> d!45391 (= res!67968 ((_ is Cons!1759) Nil!1760))))

(assert (=> d!45391 (= (contains!922 Nil!1760 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)) lt!74754)))

(declare-fun b!142595 () Bool)

(declare-fun e!92907 () Bool)

(assert (=> b!142595 (= e!92908 e!92907)))

(declare-fun res!67967 () Bool)

(assert (=> b!142595 (=> res!67967 e!92907)))

(assert (=> b!142595 (= res!67967 (= (h!2366 Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!142596 () Bool)

(assert (=> b!142596 (= e!92907 (contains!922 (t!6359 Nil!1760) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!45391 res!67968) b!142595))

(assert (= (and b!142595 (not res!67967)) b!142596))

(assert (=> d!45391 m!167095))

(assert (=> d!45391 m!167905))

(declare-fun m!171979 () Bool)

(assert (=> d!45391 m!171979))

(assert (=> b!142596 m!167905))

(declare-fun m!171981 () Bool)

(assert (=> b!142596 m!171981))

(assert (=> b!140441 d!45391))

(declare-fun d!45393 () Bool)

(declare-fun e!92909 () Bool)

(assert (=> d!45393 e!92909))

(declare-fun res!67970 () Bool)

(assert (=> d!45393 (=> (not res!67970) (not e!92909))))

(declare-fun lt!74755 () List!1764)

(assert (=> d!45393 (= res!67970 (isStrictlySorted!320 lt!74755))))

(declare-fun e!92911 () List!1764)

(assert (=> d!45393 (= lt!74755 e!92911)))

(declare-fun c!26963 () Bool)

(assert (=> d!45393 (= c!26963 (and ((_ is Cons!1760) (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!45393 (isStrictlySorted!320 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))))))

(assert (=> d!45393 (= (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74755)))

(declare-fun b!142597 () Bool)

(assert (=> b!142597 (= e!92909 (contains!923 lt!74755 (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!15777 () Bool)

(declare-fun call!15780 () List!1764)

(declare-fun e!92912 () List!1764)

(assert (=> bm!15777 (= call!15780 ($colon$colon!93 e!92912 (ite c!26963 (h!2367 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!26966 () Bool)

(assert (=> bm!15777 (= c!26966 c!26963)))

(declare-fun b!142598 () Bool)

(assert (=> b!142598 (= e!92911 call!15780)))

(declare-fun b!142599 () Bool)

(assert (=> b!142599 (= e!92912 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142600 () Bool)

(declare-fun e!92913 () List!1764)

(declare-fun call!15781 () List!1764)

(assert (=> b!142600 (= e!92913 call!15781)))

(declare-fun bm!15778 () Bool)

(assert (=> bm!15778 (= call!15781 call!15780)))

(declare-fun b!142601 () Bool)

(declare-fun e!92910 () List!1764)

(declare-fun call!15782 () List!1764)

(assert (=> b!142601 (= e!92910 call!15782)))

(declare-fun b!142602 () Bool)

(declare-fun c!26965 () Bool)

(assert (=> b!142602 (= c!26965 (and ((_ is Cons!1760) (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!142602 (= e!92913 e!92910)))

(declare-fun b!142603 () Bool)

(assert (=> b!142603 (= e!92911 e!92913)))

(declare-fun c!26964 () Bool)

(assert (=> b!142603 (= c!26964 (and ((_ is Cons!1760) (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) (= (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))))) (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142604 () Bool)

(assert (=> b!142604 (= e!92912 (ite c!26964 (t!6360 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) (ite c!26965 (Cons!1760 (h!2367 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))) (t!6360 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))))) Nil!1761)))))

(declare-fun bm!15779 () Bool)

(assert (=> bm!15779 (= call!15782 call!15781)))

(declare-fun b!142605 () Bool)

(declare-fun res!67969 () Bool)

(assert (=> b!142605 (=> (not res!67969) (not e!92909))))

(assert (=> b!142605 (= res!67969 (containsKey!179 lt!74755 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142606 () Bool)

(assert (=> b!142606 (= e!92910 call!15782)))

(assert (= (and d!45393 c!26963) b!142598))

(assert (= (and d!45393 (not c!26963)) b!142603))

(assert (= (and b!142603 c!26964) b!142600))

(assert (= (and b!142603 (not c!26964)) b!142602))

(assert (= (and b!142602 c!26965) b!142606))

(assert (= (and b!142602 (not c!26965)) b!142601))

(assert (= (or b!142606 b!142601) bm!15779))

(assert (= (or b!142600 bm!15779) bm!15778))

(assert (= (or b!142598 bm!15778) bm!15777))

(assert (= (and bm!15777 c!26966) b!142599))

(assert (= (and bm!15777 (not c!26966)) b!142604))

(assert (= (and d!45393 res!67970) b!142605))

(assert (= (and b!142605 res!67969) b!142597))

(declare-fun m!171983 () Bool)

(assert (=> b!142597 m!171983))

(declare-fun m!171985 () Bool)

(assert (=> b!142605 m!171985))

(declare-fun m!171987 () Bool)

(assert (=> b!142599 m!171987))

(declare-fun m!171989 () Bool)

(assert (=> bm!15777 m!171989))

(declare-fun m!171991 () Bool)

(assert (=> d!45393 m!171991))

(declare-fun m!171993 () Bool)

(assert (=> d!45393 m!171993))

(assert (=> b!140502 d!45393))

(assert (=> d!44067 d!43515))

(declare-fun b!142609 () Bool)

(declare-fun e!92915 () Option!181)

(assert (=> b!142609 (= e!92915 (getValueByKey!175 (t!6360 (toList!889 lt!73747)) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))

(declare-fun b!142608 () Bool)

(declare-fun e!92914 () Option!181)

(assert (=> b!142608 (= e!92914 e!92915)))

(declare-fun c!26968 () Bool)

(assert (=> b!142608 (= c!26968 (and ((_ is Cons!1760) (toList!889 lt!73747)) (not (= (_1!1352 (h!2367 (toList!889 lt!73747))) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))))))

(declare-fun b!142610 () Bool)

(assert (=> b!142610 (= e!92915 None!179)))

(declare-fun b!142607 () Bool)

(assert (=> b!142607 (= e!92914 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73747)))))))

(declare-fun d!45395 () Bool)

(declare-fun c!26967 () Bool)

(assert (=> d!45395 (= c!26967 (and ((_ is Cons!1760) (toList!889 lt!73747)) (= (_1!1352 (h!2367 (toList!889 lt!73747))) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))

(assert (=> d!45395 (= (getValueByKey!175 (toList!889 lt!73747) (_1!1352 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) e!92914)))

(assert (= (and d!45395 c!26967) b!142607))

(assert (= (and d!45395 (not c!26967)) b!142608))

(assert (= (and b!142608 c!26968) b!142609))

(assert (= (and b!142608 (not c!26968)) b!142610))

(declare-fun m!171995 () Bool)

(assert (=> b!142609 m!171995))

(assert (=> b!140584 d!45395))

(declare-fun d!45397 () Bool)

(declare-fun res!67971 () Bool)

(declare-fun e!92916 () Bool)

(assert (=> d!45397 (=> res!67971 e!92916)))

(assert (=> d!45397 (= res!67971 (and ((_ is Cons!1760) lt!73543) (= (_1!1352 (h!2367 lt!73543)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45397 (= (containsKey!179 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92916)))

(declare-fun b!142611 () Bool)

(declare-fun e!92917 () Bool)

(assert (=> b!142611 (= e!92916 e!92917)))

(declare-fun res!67972 () Bool)

(assert (=> b!142611 (=> (not res!67972) (not e!92917))))

(assert (=> b!142611 (= res!67972 (and (or (not ((_ is Cons!1760) lt!73543)) (bvsle (_1!1352 (h!2367 lt!73543)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73543) (bvslt (_1!1352 (h!2367 lt!73543)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142612 () Bool)

(assert (=> b!142612 (= e!92917 (containsKey!179 (t!6360 lt!73543) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45397 (not res!67971)) b!142611))

(assert (= (and b!142611 res!67972) b!142612))

(declare-fun m!171997 () Bool)

(assert (=> b!142612 m!171997))

(assert (=> b!140663 d!45397))

(assert (=> d!43625 d!43681))

(declare-fun d!45399 () Bool)

(assert (=> d!45399 (= (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489)) (not (isEmpty!422 (getValueByKey!175 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489))))))

(declare-fun bs!6030 () Bool)

(assert (= bs!6030 d!45399))

(assert (=> bs!6030 m!168131))

(declare-fun m!171999 () Bool)

(assert (=> bs!6030 m!171999))

(assert (=> b!140569 d!45399))

(declare-fun e!92919 () Option!181)

(declare-fun b!142615 () Bool)

(assert (=> b!142615 (= e!92919 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))) lt!73489))))

(declare-fun b!142614 () Bool)

(declare-fun e!92918 () Option!181)

(assert (=> b!142614 (= e!92918 e!92919)))

(declare-fun c!26970 () Bool)

(assert (=> b!142614 (= c!26970 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))) lt!73489))))))

(declare-fun b!142616 () Bool)

(assert (=> b!142616 (= e!92919 None!179)))

(declare-fun b!142613 () Bool)

(assert (=> b!142613 (= e!92918 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))))

(declare-fun c!26969 () Bool)

(declare-fun d!45401 () Bool)

(assert (=> d!45401 (= c!26969 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))) lt!73489)))))

(assert (=> d!45401 (= (getValueByKey!175 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489) e!92918)))

(assert (= (and d!45401 c!26969) b!142613))

(assert (= (and d!45401 (not c!26969)) b!142614))

(assert (= (and b!142614 c!26970) b!142615))

(assert (= (and b!142614 (not c!26970)) b!142616))

(declare-fun m!172001 () Bool)

(assert (=> b!142615 m!172001))

(assert (=> b!140569 d!45401))

(declare-fun d!45403 () Bool)

(declare-fun res!67973 () Bool)

(declare-fun e!92920 () Bool)

(assert (=> d!45403 (=> res!67973 e!92920)))

(assert (=> d!45403 (= res!67973 (and ((_ is Cons!1760) (toList!889 lt!73140)) (= (_1!1352 (h!2367 (toList!889 lt!73140))) lt!73151)))))

(assert (=> d!45403 (= (containsKey!179 (toList!889 lt!73140) lt!73151) e!92920)))

(declare-fun b!142617 () Bool)

(declare-fun e!92921 () Bool)

(assert (=> b!142617 (= e!92920 e!92921)))

(declare-fun res!67974 () Bool)

(assert (=> b!142617 (=> (not res!67974) (not e!92921))))

(assert (=> b!142617 (= res!67974 (and (or (not ((_ is Cons!1760) (toList!889 lt!73140))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73140))) lt!73151)) ((_ is Cons!1760) (toList!889 lt!73140)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73140))) lt!73151)))))

(declare-fun b!142618 () Bool)

(assert (=> b!142618 (= e!92921 (containsKey!179 (t!6360 (toList!889 lt!73140)) lt!73151))))

(assert (= (and d!45403 (not res!67973)) b!142617))

(assert (= (and b!142617 res!67974) b!142618))

(declare-fun m!172003 () Bool)

(assert (=> b!142618 m!172003))

(assert (=> d!44095 d!45403))

(declare-fun b!142621 () Bool)

(declare-fun e!92923 () Option!181)

(assert (=> b!142621 (= e!92923 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73135))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142620 () Bool)

(declare-fun e!92922 () Option!181)

(assert (=> b!142620 (= e!92922 e!92923)))

(declare-fun c!26972 () Bool)

(assert (=> b!142620 (= c!26972 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142622 () Bool)

(assert (=> b!142622 (= e!92923 None!179)))

(declare-fun b!142619 () Bool)

(assert (=> b!142619 (= e!92922 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73135))))))))

(declare-fun d!45405 () Bool)

(declare-fun c!26971 () Bool)

(assert (=> d!45405 (= c!26971 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45405 (= (getValueByKey!175 (t!6360 (toList!889 lt!73135)) #b1000000000000000000000000000000000000000000000000000000000000000) e!92922)))

(assert (= (and d!45405 c!26971) b!142619))

(assert (= (and d!45405 (not c!26971)) b!142620))

(assert (= (and b!142620 c!26972) b!142621))

(assert (= (and b!142620 (not c!26972)) b!142622))

(declare-fun m!172005 () Bool)

(assert (=> b!142621 m!172005))

(assert (=> b!140439 d!45405))

(assert (=> d!43901 d!43909))

(declare-fun d!45407 () Bool)

(assert (=> d!45407 (arrayContainsKey!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!45407 true))

(declare-fun _$60!370 () Unit!4395)

(assert (=> d!45407 (= (choose!13 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228))) _$60!370)))

(declare-fun bs!6031 () Bool)

(assert (= bs!6031 d!45407))

(assert (=> bs!6031 m!166733))

(assert (=> bs!6031 m!167041))

(assert (=> d!43901 d!45407))

(declare-fun d!45409 () Bool)

(assert (=> d!45409 (isDefined!129 (getValueByKey!175 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!74756 () Unit!4395)

(assert (=> d!45409 (= lt!74756 (choose!868 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!92924 () Bool)

(assert (=> d!45409 e!92924))

(declare-fun res!67975 () Bool)

(assert (=> d!45409 (=> (not res!67975) (not e!92924))))

(assert (=> d!45409 (= res!67975 (isStrictlySorted!320 (toList!889 lt!73535)))))

(assert (=> d!45409 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74756)))

(declare-fun b!142623 () Bool)

(assert (=> b!142623 (= e!92924 (containsKey!179 (toList!889 lt!73535) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45409 res!67975) b!142623))

(assert (=> d!45409 m!167441))

(assert (=> d!45409 m!167441))

(assert (=> d!45409 m!168073))

(declare-fun m!172007 () Bool)

(assert (=> d!45409 m!172007))

(declare-fun m!172009 () Bool)

(assert (=> d!45409 m!172009))

(assert (=> b!142623 m!168069))

(assert (=> b!140545 d!45409))

(assert (=> b!140545 d!45221))

(assert (=> b!140545 d!43711))

(declare-fun d!45411 () Bool)

(assert (=> d!45411 (= (apply!120 lt!73643 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73643) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6032 () Bool)

(assert (= bs!6032 d!45411))

(assert (=> bs!6032 m!166967))

(declare-fun m!172011 () Bool)

(assert (=> bs!6032 m!172011))

(assert (=> bs!6032 m!172011))

(declare-fun m!172013 () Bool)

(assert (=> bs!6032 m!172013))

(assert (=> b!140402 d!45411))

(assert (=> b!140402 d!43651))

(declare-fun d!45413 () Bool)

(declare-fun lt!74757 () Bool)

(assert (=> d!45413 (= lt!74757 (select (content!137 (toList!889 lt!73908)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92925 () Bool)

(assert (=> d!45413 (= lt!74757 e!92925)))

(declare-fun res!67977 () Bool)

(assert (=> d!45413 (=> (not res!67977) (not e!92925))))

(assert (=> d!45413 (= res!67977 ((_ is Cons!1760) (toList!889 lt!73908)))))

(assert (=> d!45413 (= (contains!923 (toList!889 lt!73908) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74757)))

(declare-fun b!142624 () Bool)

(declare-fun e!92926 () Bool)

(assert (=> b!142624 (= e!92925 e!92926)))

(declare-fun res!67976 () Bool)

(assert (=> b!142624 (=> res!67976 e!92926)))

(assert (=> b!142624 (= res!67976 (= (h!2367 (toList!889 lt!73908)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142625 () Bool)

(assert (=> b!142625 (= e!92926 (contains!923 (t!6360 (toList!889 lt!73908)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45413 res!67977) b!142624))

(assert (= (and b!142624 (not res!67976)) b!142625))

(declare-fun m!172015 () Bool)

(assert (=> d!45413 m!172015))

(declare-fun m!172017 () Bool)

(assert (=> d!45413 m!172017))

(declare-fun m!172019 () Bool)

(assert (=> b!142625 m!172019))

(assert (=> b!140816 d!45413))

(declare-fun b!142628 () Bool)

(declare-fun e!92928 () Option!181)

(assert (=> b!142628 (= e!92928 (getValueByKey!175 (t!6360 (toList!889 lt!73800)) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142627 () Bool)

(declare-fun e!92927 () Option!181)

(assert (=> b!142627 (= e!92927 e!92928)))

(declare-fun c!26974 () Bool)

(assert (=> b!142627 (= c!26974 (and ((_ is Cons!1760) (toList!889 lt!73800)) (not (= (_1!1352 (h!2367 (toList!889 lt!73800))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun b!142629 () Bool)

(assert (=> b!142629 (= e!92928 None!179)))

(declare-fun b!142626 () Bool)

(assert (=> b!142626 (= e!92927 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73800)))))))

(declare-fun c!26973 () Bool)

(declare-fun d!45415 () Bool)

(assert (=> d!45415 (= c!26973 (and ((_ is Cons!1760) (toList!889 lt!73800)) (= (_1!1352 (h!2367 (toList!889 lt!73800))) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!45415 (= (getValueByKey!175 (toList!889 lt!73800) (_1!1352 (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!92927)))

(assert (= (and d!45415 c!26973) b!142626))

(assert (= (and d!45415 (not c!26973)) b!142627))

(assert (= (and b!142627 c!26974) b!142628))

(assert (= (and b!142627 (not c!26974)) b!142629))

(declare-fun m!172021 () Bool)

(assert (=> b!142628 m!172021))

(assert (=> b!140642 d!45415))

(assert (=> d!43669 d!43667))

(declare-fun d!45417 () Bool)

(assert (=> d!45417 (= (getValueByKey!175 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45417 true))

(declare-fun _$22!499 () Unit!4395)

(assert (=> d!45417 (= (choose!873 lt!73509 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!499)))

(declare-fun bs!6033 () Bool)

(assert (= bs!6033 d!45417))

(assert (=> bs!6033 m!167373))

(assert (=> d!43669 d!45417))

(declare-fun d!45419 () Bool)

(declare-fun res!67978 () Bool)

(declare-fun e!92929 () Bool)

(assert (=> d!45419 (=> res!67978 e!92929)))

(assert (=> d!45419 (= res!67978 (or ((_ is Nil!1761) lt!73509) ((_ is Nil!1761) (t!6360 lt!73509))))))

(assert (=> d!45419 (= (isStrictlySorted!320 lt!73509) e!92929)))

(declare-fun b!142630 () Bool)

(declare-fun e!92930 () Bool)

(assert (=> b!142630 (= e!92929 e!92930)))

(declare-fun res!67979 () Bool)

(assert (=> b!142630 (=> (not res!67979) (not e!92930))))

(assert (=> b!142630 (= res!67979 (bvslt (_1!1352 (h!2367 lt!73509)) (_1!1352 (h!2367 (t!6360 lt!73509)))))))

(declare-fun b!142631 () Bool)

(assert (=> b!142631 (= e!92930 (isStrictlySorted!320 (t!6360 lt!73509)))))

(assert (= (and d!45419 (not res!67978)) b!142630))

(assert (= (and b!142630 res!67979) b!142631))

(declare-fun m!172023 () Bool)

(assert (=> b!142631 m!172023))

(assert (=> d!43669 d!45419))

(declare-fun d!45421 () Bool)

(assert (=> d!45421 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140376 d!45421))

(declare-fun b!142632 () Bool)

(declare-fun res!67981 () Bool)

(declare-fun e!92935 () Bool)

(assert (=> b!142632 (=> (not res!67981) (not e!92935))))

(declare-fun lt!74760 () ListLongMap!1747)

(assert (=> b!142632 (= res!67981 (not (contains!921 lt!74760 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142633 () Bool)

(assert (=> b!142633 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!142633 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73219)))))

(declare-fun e!92931 () Bool)

(assert (=> b!142633 (= e!92931 (= (apply!120 lt!74760 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 lt!73219) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142634 () Bool)

(declare-fun e!92937 () ListLongMap!1747)

(declare-fun e!92934 () ListLongMap!1747)

(assert (=> b!142634 (= e!92937 e!92934)))

(declare-fun c!26977 () Bool)

(assert (=> b!142634 (= c!26977 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142635 () Bool)

(declare-fun e!92932 () Bool)

(assert (=> b!142635 (= e!92932 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142635 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!45423 () Bool)

(assert (=> d!45423 e!92935))

(declare-fun res!67983 () Bool)

(assert (=> d!45423 (=> (not res!67983) (not e!92935))))

(assert (=> d!45423 (= res!67983 (not (contains!921 lt!74760 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45423 (= lt!74760 e!92937)))

(declare-fun c!26978 () Bool)

(assert (=> d!45423 (= c!26978 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!45423 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45423 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74760)))

(declare-fun b!142636 () Bool)

(declare-fun e!92933 () Bool)

(declare-fun e!92936 () Bool)

(assert (=> b!142636 (= e!92933 e!92936)))

(declare-fun c!26975 () Bool)

(assert (=> b!142636 (= c!26975 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142637 () Bool)

(assert (=> b!142637 (= e!92936 (= lt!74760 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!142638 () Bool)

(assert (=> b!142638 (= e!92933 e!92931)))

(assert (=> b!142638 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67982 () Bool)

(assert (=> b!142638 (= res!67982 (contains!921 lt!74760 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142638 (=> (not res!67982) (not e!92931))))

(declare-fun b!142639 () Bool)

(declare-fun call!15783 () ListLongMap!1747)

(assert (=> b!142639 (= e!92934 call!15783)))

(declare-fun bm!15780 () Bool)

(assert (=> bm!15780 (= call!15783 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) lt!73219 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!142640 () Bool)

(assert (=> b!142640 (= e!92937 (ListLongMap!1748 Nil!1761))))

(declare-fun b!142641 () Bool)

(declare-fun lt!74758 () Unit!4395)

(declare-fun lt!74764 () Unit!4395)

(assert (=> b!142641 (= lt!74758 lt!74764)))

(declare-fun lt!74759 () ListLongMap!1747)

(declare-fun lt!74761 () V!3555)

(declare-fun lt!74762 () (_ BitVec 64))

(declare-fun lt!74763 () (_ BitVec 64))

(assert (=> b!142641 (not (contains!921 (+!174 lt!74759 (tuple2!2685 lt!74763 lt!74761)) lt!74762))))

(assert (=> b!142641 (= lt!74764 (addStillNotContains!66 lt!74759 lt!74763 lt!74761 lt!74762))))

(assert (=> b!142641 (= lt!74762 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142641 (= lt!74761 (get!1535 (select (arr!2315 lt!73219) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142641 (= lt!74763 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!142641 (= lt!74759 call!15783)))

(assert (=> b!142641 (= e!92934 (+!174 call!15783 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 lt!73219) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142642 () Bool)

(assert (=> b!142642 (= e!92935 e!92933)))

(declare-fun c!26976 () Bool)

(assert (=> b!142642 (= c!26976 e!92932)))

(declare-fun res!67980 () Bool)

(assert (=> b!142642 (=> (not res!67980) (not e!92932))))

(assert (=> b!142642 (= res!67980 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142643 () Bool)

(assert (=> b!142643 (= e!92936 (isEmpty!423 lt!74760))))

(assert (= (and d!45423 c!26978) b!142640))

(assert (= (and d!45423 (not c!26978)) b!142634))

(assert (= (and b!142634 c!26977) b!142641))

(assert (= (and b!142634 (not c!26977)) b!142639))

(assert (= (or b!142641 b!142639) bm!15780))

(assert (= (and d!45423 res!67983) b!142632))

(assert (= (and b!142632 res!67981) b!142642))

(assert (= (and b!142642 res!67980) b!142635))

(assert (= (and b!142642 c!26976) b!142638))

(assert (= (and b!142642 (not c!26976)) b!142636))

(assert (= (and b!142638 res!67982) b!142633))

(assert (= (and b!142636 c!26975) b!142637))

(assert (= (and b!142636 (not c!26975)) b!142643))

(declare-fun b_lambda!6405 () Bool)

(assert (=> (not b_lambda!6405) (not b!142633)))

(assert (=> b!142633 t!6366))

(declare-fun b_and!8905 () Bool)

(assert (= b_and!8901 (and (=> t!6366 result!4203) b_and!8905)))

(assert (=> b!142633 t!6368))

(declare-fun b_and!8907 () Bool)

(assert (= b_and!8903 (and (=> t!6368 result!4205) b_and!8907)))

(declare-fun b_lambda!6407 () Bool)

(assert (=> (not b_lambda!6407) (not b!142641)))

(assert (=> b!142641 t!6366))

(declare-fun b_and!8909 () Bool)

(assert (= b_and!8905 (and (=> t!6366 result!4203) b_and!8909)))

(assert (=> b!142641 t!6368))

(declare-fun b_and!8911 () Bool)

(assert (= b_and!8907 (and (=> t!6368 result!4205) b_and!8911)))

(declare-fun m!172025 () Bool)

(assert (=> b!142637 m!172025))

(assert (=> b!142635 m!166967))

(assert (=> b!142635 m!166967))

(assert (=> b!142635 m!166981))

(declare-fun m!172027 () Bool)

(assert (=> b!142641 m!172027))

(declare-fun m!172029 () Bool)

(assert (=> b!142641 m!172029))

(assert (=> b!142641 m!166967))

(declare-fun m!172031 () Bool)

(assert (=> b!142641 m!172031))

(declare-fun m!172033 () Bool)

(assert (=> b!142641 m!172033))

(assert (=> b!142641 m!166971))

(assert (=> b!142641 m!168333))

(assert (=> b!142641 m!168333))

(assert (=> b!142641 m!166971))

(assert (=> b!142641 m!168335))

(assert (=> b!142641 m!172027))

(assert (=> b!142638 m!166967))

(assert (=> b!142638 m!166967))

(declare-fun m!172035 () Bool)

(assert (=> b!142638 m!172035))

(assert (=> b!142634 m!166967))

(assert (=> b!142634 m!166967))

(assert (=> b!142634 m!166981))

(assert (=> b!142633 m!166967))

(assert (=> b!142633 m!166967))

(declare-fun m!172037 () Bool)

(assert (=> b!142633 m!172037))

(assert (=> b!142633 m!166971))

(assert (=> b!142633 m!168333))

(assert (=> b!142633 m!168333))

(assert (=> b!142633 m!166971))

(assert (=> b!142633 m!168335))

(declare-fun m!172039 () Bool)

(assert (=> b!142643 m!172039))

(declare-fun m!172041 () Bool)

(assert (=> d!45423 m!172041))

(assert (=> d!45423 m!166961))

(declare-fun m!172043 () Bool)

(assert (=> b!142632 m!172043))

(assert (=> bm!15780 m!172025))

(assert (=> bm!15616 d!45423))

(assert (=> b!140860 d!44283))

(declare-fun d!45425 () Bool)

(declare-fun res!67984 () Bool)

(declare-fun e!92938 () Bool)

(assert (=> d!45425 (=> res!67984 e!92938)))

(assert (=> d!45425 (= res!67984 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))) lt!73457)))))

(assert (=> d!45425 (= (containsKey!179 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))) lt!73457) e!92938)))

(declare-fun b!142644 () Bool)

(declare-fun e!92939 () Bool)

(assert (=> b!142644 (= e!92938 e!92939)))

(declare-fun res!67985 () Bool)

(assert (=> b!142644 (=> (not res!67985) (not e!92939))))

(assert (=> b!142644 (= res!67985 (and (or (not ((_ is Cons!1760) (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))) (bvsle (_1!1352 (h!2367 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))) lt!73457)) ((_ is Cons!1760) (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))) (bvslt (_1!1352 (h!2367 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16)))))) lt!73457)))))

(declare-fun b!142645 () Bool)

(assert (=> b!142645 (= e!92939 (containsKey!179 (t!6360 (toList!889 (+!174 lt!73459 (tuple2!2685 lt!73452 (zeroValue!2790 newMap!16))))) lt!73457))))

(assert (= (and d!45425 (not res!67984)) b!142644))

(assert (= (and b!142644 res!67985) b!142645))

(declare-fun m!172045 () Bool)

(assert (=> b!142645 m!172045))

(assert (=> d!43839 d!45425))

(declare-fun d!45427 () Bool)

(declare-fun e!92940 () Bool)

(assert (=> d!45427 e!92940))

(declare-fun res!67987 () Bool)

(assert (=> d!45427 (=> (not res!67987) (not e!92940))))

(declare-fun lt!74765 () List!1764)

(assert (=> d!45427 (= res!67987 (isStrictlySorted!320 lt!74765))))

(declare-fun e!92942 () List!1764)

(assert (=> d!45427 (= lt!74765 e!92942)))

(declare-fun c!26979 () Bool)

(assert (=> d!45427 (= c!26979 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73149))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73149)))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45427 (isStrictlySorted!320 (t!6360 (toList!889 lt!73149)))))

(assert (=> d!45427 (= (insertStrictlySorted!93 (t!6360 (toList!889 lt!73149)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74765)))

(declare-fun b!142646 () Bool)

(assert (=> b!142646 (= e!92940 (contains!923 lt!74765 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun call!15784 () List!1764)

(declare-fun bm!15781 () Bool)

(declare-fun e!92943 () List!1764)

(assert (=> bm!15781 (= call!15784 ($colon$colon!93 e!92943 (ite c!26979 (h!2367 (t!6360 (toList!889 lt!73149))) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26982 () Bool)

(assert (=> bm!15781 (= c!26982 c!26979)))

(declare-fun b!142647 () Bool)

(assert (=> b!142647 (= e!92942 call!15784)))

(declare-fun b!142648 () Bool)

(assert (=> b!142648 (= e!92943 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 lt!73149))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142649 () Bool)

(declare-fun e!92944 () List!1764)

(declare-fun call!15785 () List!1764)

(assert (=> b!142649 (= e!92944 call!15785)))

(declare-fun bm!15782 () Bool)

(assert (=> bm!15782 (= call!15785 call!15784)))

(declare-fun b!142650 () Bool)

(declare-fun e!92941 () List!1764)

(declare-fun call!15786 () List!1764)

(assert (=> b!142650 (= e!92941 call!15786)))

(declare-fun b!142651 () Bool)

(declare-fun c!26981 () Bool)

(assert (=> b!142651 (= c!26981 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73149))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73149)))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!142651 (= e!92944 e!92941)))

(declare-fun b!142652 () Bool)

(assert (=> b!142652 (= e!92942 e!92944)))

(declare-fun c!26980 () Bool)

(assert (=> b!142652 (= c!26980 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73149))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73149)))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142653 () Bool)

(assert (=> b!142653 (= e!92943 (ite c!26980 (t!6360 (t!6360 (toList!889 lt!73149))) (ite c!26981 (Cons!1760 (h!2367 (t!6360 (toList!889 lt!73149))) (t!6360 (t!6360 (toList!889 lt!73149)))) Nil!1761)))))

(declare-fun bm!15783 () Bool)

(assert (=> bm!15783 (= call!15786 call!15785)))

(declare-fun b!142654 () Bool)

(declare-fun res!67986 () Bool)

(assert (=> b!142654 (=> (not res!67986) (not e!92940))))

(assert (=> b!142654 (= res!67986 (containsKey!179 lt!74765 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142655 () Bool)

(assert (=> b!142655 (= e!92941 call!15786)))

(assert (= (and d!45427 c!26979) b!142647))

(assert (= (and d!45427 (not c!26979)) b!142652))

(assert (= (and b!142652 c!26980) b!142649))

(assert (= (and b!142652 (not c!26980)) b!142651))

(assert (= (and b!142651 c!26981) b!142655))

(assert (= (and b!142651 (not c!26981)) b!142650))

(assert (= (or b!142655 b!142650) bm!15783))

(assert (= (or b!142649 bm!15783) bm!15782))

(assert (= (or b!142647 bm!15782) bm!15781))

(assert (= (and bm!15781 c!26982) b!142648))

(assert (= (and bm!15781 (not c!26982)) b!142653))

(assert (= (and d!45427 res!67987) b!142654))

(assert (= (and b!142654 res!67986) b!142646))

(declare-fun m!172047 () Bool)

(assert (=> b!142646 m!172047))

(declare-fun m!172049 () Bool)

(assert (=> b!142654 m!172049))

(declare-fun m!172051 () Bool)

(assert (=> b!142648 m!172051))

(declare-fun m!172053 () Bool)

(assert (=> bm!15781 m!172053))

(declare-fun m!172055 () Bool)

(assert (=> d!45427 m!172055))

(declare-fun m!172057 () Bool)

(assert (=> d!45427 m!172057))

(assert (=> b!140667 d!45427))

(declare-fun d!45429 () Bool)

(declare-fun e!92946 () Bool)

(assert (=> d!45429 e!92946))

(declare-fun res!67988 () Bool)

(assert (=> d!45429 (=> res!67988 e!92946)))

(declare-fun lt!74766 () Bool)

(assert (=> d!45429 (= res!67988 (not lt!74766))))

(declare-fun lt!74769 () Bool)

(assert (=> d!45429 (= lt!74766 lt!74769)))

(declare-fun lt!74767 () Unit!4395)

(declare-fun e!92945 () Unit!4395)

(assert (=> d!45429 (= lt!74767 e!92945)))

(declare-fun c!26983 () Bool)

(assert (=> d!45429 (= c!26983 lt!74769)))

(assert (=> d!45429 (= lt!74769 (containsKey!179 (toList!889 lt!73863) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45429 (= (contains!921 lt!73863 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74766)))

(declare-fun b!142656 () Bool)

(declare-fun lt!74768 () Unit!4395)

(assert (=> b!142656 (= e!92945 lt!74768)))

(assert (=> b!142656 (= lt!74768 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73863) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142656 (isDefined!129 (getValueByKey!175 (toList!889 lt!73863) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142657 () Bool)

(declare-fun Unit!4525 () Unit!4395)

(assert (=> b!142657 (= e!92945 Unit!4525)))

(declare-fun b!142658 () Bool)

(assert (=> b!142658 (= e!92946 (isDefined!129 (getValueByKey!175 (toList!889 lt!73863) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45429 c!26983) b!142656))

(assert (= (and d!45429 (not c!26983)) b!142657))

(assert (= (and d!45429 (not res!67988)) b!142658))

(declare-fun m!172059 () Bool)

(assert (=> d!45429 m!172059))

(declare-fun m!172061 () Bool)

(assert (=> b!142656 m!172061))

(assert (=> b!142656 m!169745))

(assert (=> b!142656 m!169745))

(declare-fun m!172063 () Bool)

(assert (=> b!142656 m!172063))

(assert (=> b!142658 m!169745))

(assert (=> b!142658 m!169745))

(assert (=> b!142658 m!172063))

(assert (=> bm!15640 d!45429))

(declare-fun d!45431 () Bool)

(declare-fun c!26984 () Bool)

(assert (=> d!45431 (= c!26984 ((_ is Nil!1761) (toList!889 lt!73378)))))

(declare-fun e!92947 () (InoxSet tuple2!2684))

(assert (=> d!45431 (= (content!137 (toList!889 lt!73378)) e!92947)))

(declare-fun b!142659 () Bool)

(assert (=> b!142659 (= e!92947 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!142660 () Bool)

(assert (=> b!142660 (= e!92947 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73378)) true) (content!137 (t!6360 (toList!889 lt!73378)))))))

(assert (= (and d!45431 c!26984) b!142659))

(assert (= (and d!45431 (not c!26984)) b!142660))

(declare-fun m!172065 () Bool)

(assert (=> b!142660 m!172065))

(assert (=> b!142660 m!170759))

(assert (=> d!43985 d!45431))

(declare-fun d!45433 () Bool)

(declare-fun res!67989 () Bool)

(declare-fun e!92948 () Bool)

(assert (=> d!45433 (=> res!67989 e!92948)))

(assert (=> d!45433 (= res!67989 (and ((_ is Cons!1760) lt!73707) (= (_1!1352 (h!2367 lt!73707)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(assert (=> d!45433 (= (containsKey!179 lt!73707 (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!92948)))

(declare-fun b!142661 () Bool)

(declare-fun e!92949 () Bool)

(assert (=> b!142661 (= e!92948 e!92949)))

(declare-fun res!67990 () Bool)

(assert (=> b!142661 (=> (not res!67990) (not e!92949))))

(assert (=> b!142661 (= res!67990 (and (or (not ((_ is Cons!1760) lt!73707)) (bvsle (_1!1352 (h!2367 lt!73707)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) ((_ is Cons!1760) lt!73707) (bvslt (_1!1352 (h!2367 lt!73707)) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!142662 () Bool)

(assert (=> b!142662 (= e!92949 (containsKey!179 (t!6360 lt!73707) (_1!1352 (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45433 (not res!67989)) b!142661))

(assert (= (and b!142661 res!67990) b!142662))

(declare-fun m!172067 () Bool)

(assert (=> b!142662 m!172067))

(assert (=> b!140527 d!45433))

(declare-fun d!45435 () Bool)

(assert (=> d!45435 (= (apply!120 (+!174 lt!73654 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73660) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73654 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73660)))))

(declare-fun bs!6034 () Bool)

(assert (= bs!6034 d!45435))

(declare-fun m!172069 () Bool)

(assert (=> bs!6034 m!172069))

(assert (=> bs!6034 m!172069))

(declare-fun m!172071 () Bool)

(assert (=> bs!6034 m!172071))

(assert (=> b!140389 d!45435))

(declare-fun d!45437 () Bool)

(assert (=> d!45437 (= (apply!120 (+!174 lt!73648 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))) lt!73659) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73648 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16)))) lt!73659)))))

(declare-fun bs!6035 () Bool)

(assert (= bs!6035 d!45437))

(declare-fun m!172073 () Bool)

(assert (=> bs!6035 m!172073))

(assert (=> bs!6035 m!172073))

(declare-fun m!172075 () Bool)

(assert (=> bs!6035 m!172075))

(assert (=> b!140389 d!45437))

(declare-fun d!45439 () Bool)

(declare-fun e!92950 () Bool)

(assert (=> d!45439 e!92950))

(declare-fun res!67992 () Bool)

(assert (=> d!45439 (=> (not res!67992) (not e!92950))))

(declare-fun lt!74772 () ListLongMap!1747)

(assert (=> d!45439 (= res!67992 (contains!921 lt!74772 (_1!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74773 () List!1764)

(assert (=> d!45439 (= lt!74772 (ListLongMap!1748 lt!74773))))

(declare-fun lt!74770 () Unit!4395)

(declare-fun lt!74771 () Unit!4395)

(assert (=> d!45439 (= lt!74770 lt!74771)))

(assert (=> d!45439 (= (getValueByKey!175 lt!74773 (_1!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45439 (= lt!74771 (lemmaContainsTupThenGetReturnValue!91 lt!74773 (_1!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45439 (= lt!74773 (insertStrictlySorted!93 (toList!889 lt!73648) (_1!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45439 (= (+!174 lt!73648 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))) lt!74772)))

(declare-fun b!142663 () Bool)

(declare-fun res!67991 () Bool)

(assert (=> b!142663 (=> (not res!67991) (not e!92950))))

(assert (=> b!142663 (= res!67991 (= (getValueByKey!175 (toList!889 lt!74772) (_1!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142664 () Bool)

(assert (=> b!142664 (= e!92950 (contains!923 (toList!889 lt!74772) (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45439 res!67992) b!142663))

(assert (= (and b!142663 res!67991) b!142664))

(declare-fun m!172077 () Bool)

(assert (=> d!45439 m!172077))

(declare-fun m!172079 () Bool)

(assert (=> d!45439 m!172079))

(declare-fun m!172081 () Bool)

(assert (=> d!45439 m!172081))

(declare-fun m!172083 () Bool)

(assert (=> d!45439 m!172083))

(declare-fun m!172085 () Bool)

(assert (=> b!142663 m!172085))

(declare-fun m!172087 () Bool)

(assert (=> b!142664 m!172087))

(assert (=> b!140389 d!45439))

(declare-fun d!45441 () Bool)

(declare-fun e!92952 () Bool)

(assert (=> d!45441 e!92952))

(declare-fun res!67993 () Bool)

(assert (=> d!45441 (=> res!67993 e!92952)))

(declare-fun lt!74774 () Bool)

(assert (=> d!45441 (= res!67993 (not lt!74774))))

(declare-fun lt!74777 () Bool)

(assert (=> d!45441 (= lt!74774 lt!74777)))

(declare-fun lt!74775 () Unit!4395)

(declare-fun e!92951 () Unit!4395)

(assert (=> d!45441 (= lt!74775 e!92951)))

(declare-fun c!26985 () Bool)

(assert (=> d!45441 (= c!26985 lt!74777)))

(assert (=> d!45441 (= lt!74777 (containsKey!179 (toList!889 (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))) lt!73650))))

(assert (=> d!45441 (= (contains!921 (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))) lt!73650) lt!74774)))

(declare-fun b!142665 () Bool)

(declare-fun lt!74776 () Unit!4395)

(assert (=> b!142665 (= e!92951 lt!74776)))

(assert (=> b!142665 (= lt!74776 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))) lt!73650))))

(assert (=> b!142665 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))) lt!73650))))

(declare-fun b!142666 () Bool)

(declare-fun Unit!4526 () Unit!4395)

(assert (=> b!142666 (= e!92951 Unit!4526)))

(declare-fun b!142667 () Bool)

(assert (=> b!142667 (= e!92952 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))) lt!73650)))))

(assert (= (and d!45441 c!26985) b!142665))

(assert (= (and d!45441 (not c!26985)) b!142666))

(assert (= (and d!45441 (not res!67993)) b!142667))

(declare-fun m!172089 () Bool)

(assert (=> d!45441 m!172089))

(declare-fun m!172091 () Bool)

(assert (=> b!142665 m!172091))

(declare-fun m!172093 () Bool)

(assert (=> b!142665 m!172093))

(assert (=> b!142665 m!172093))

(declare-fun m!172095 () Bool)

(assert (=> b!142665 m!172095))

(assert (=> b!142667 m!172093))

(assert (=> b!142667 m!172093))

(assert (=> b!142667 m!172095))

(assert (=> b!140389 d!45441))

(declare-fun b!142668 () Bool)

(declare-fun res!67995 () Bool)

(declare-fun e!92957 () Bool)

(assert (=> b!142668 (=> (not res!67995) (not e!92957))))

(declare-fun lt!74780 () ListLongMap!1747)

(assert (=> b!142668 (= res!67995 (not (contains!921 lt!74780 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142669 () Bool)

(assert (=> b!142669 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!142669 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 newMap!16))))))

(declare-fun e!92953 () Bool)

(assert (=> b!142669 (= e!92953 (= (apply!120 lt!74780 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142670 () Bool)

(declare-fun e!92959 () ListLongMap!1747)

(declare-fun e!92956 () ListLongMap!1747)

(assert (=> b!142670 (= e!92959 e!92956)))

(declare-fun c!26988 () Bool)

(assert (=> b!142670 (= c!26988 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142671 () Bool)

(declare-fun e!92954 () Bool)

(assert (=> b!142671 (= e!92954 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142671 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!45443 () Bool)

(assert (=> d!45443 e!92957))

(declare-fun res!67997 () Bool)

(assert (=> d!45443 (=> (not res!67997) (not e!92957))))

(assert (=> d!45443 (= res!67997 (not (contains!921 lt!74780 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45443 (= lt!74780 e!92959)))

(declare-fun c!26989 () Bool)

(assert (=> d!45443 (= c!26989 (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!45443 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45443 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74780)))

(declare-fun b!142672 () Bool)

(declare-fun e!92955 () Bool)

(declare-fun e!92958 () Bool)

(assert (=> b!142672 (= e!92955 e!92958)))

(declare-fun c!26986 () Bool)

(assert (=> b!142672 (= c!26986 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142673 () Bool)

(assert (=> b!142673 (= e!92958 (= lt!74780 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!142674 () Bool)

(assert (=> b!142674 (= e!92955 e!92953)))

(assert (=> b!142674 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!67996 () Bool)

(assert (=> b!142674 (= res!67996 (contains!921 lt!74780 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142674 (=> (not res!67996) (not e!92953))))

(declare-fun b!142675 () Bool)

(declare-fun call!15787 () ListLongMap!1747)

(assert (=> b!142675 (= e!92956 call!15787)))

(declare-fun bm!15784 () Bool)

(assert (=> bm!15784 (= call!15787 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) lt!73222 (zeroValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!142676 () Bool)

(assert (=> b!142676 (= e!92959 (ListLongMap!1748 Nil!1761))))

(declare-fun b!142677 () Bool)

(declare-fun lt!74778 () Unit!4395)

(declare-fun lt!74784 () Unit!4395)

(assert (=> b!142677 (= lt!74778 lt!74784)))

(declare-fun lt!74783 () (_ BitVec 64))

(declare-fun lt!74782 () (_ BitVec 64))

(declare-fun lt!74779 () ListLongMap!1747)

(declare-fun lt!74781 () V!3555)

(assert (=> b!142677 (not (contains!921 (+!174 lt!74779 (tuple2!2685 lt!74783 lt!74781)) lt!74782))))

(assert (=> b!142677 (= lt!74784 (addStillNotContains!66 lt!74779 lt!74783 lt!74781 lt!74782))))

(assert (=> b!142677 (= lt!74782 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142677 (= lt!74781 (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142677 (= lt!74783 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!142677 (= lt!74779 call!15787)))

(assert (=> b!142677 (= e!92956 (+!174 call!15787 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142678 () Bool)

(assert (=> b!142678 (= e!92957 e!92955)))

(declare-fun c!26987 () Bool)

(assert (=> b!142678 (= c!26987 e!92954)))

(declare-fun res!67994 () Bool)

(assert (=> b!142678 (=> (not res!67994) (not e!92954))))

(assert (=> b!142678 (= res!67994 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142679 () Bool)

(assert (=> b!142679 (= e!92958 (isEmpty!423 lt!74780))))

(assert (= (and d!45443 c!26989) b!142676))

(assert (= (and d!45443 (not c!26989)) b!142670))

(assert (= (and b!142670 c!26988) b!142677))

(assert (= (and b!142670 (not c!26988)) b!142675))

(assert (= (or b!142677 b!142675) bm!15784))

(assert (= (and d!45443 res!67997) b!142668))

(assert (= (and b!142668 res!67995) b!142678))

(assert (= (and b!142678 res!67994) b!142671))

(assert (= (and b!142678 c!26987) b!142674))

(assert (= (and b!142678 (not c!26987)) b!142672))

(assert (= (and b!142674 res!67996) b!142669))

(assert (= (and b!142672 c!26986) b!142673))

(assert (= (and b!142672 (not c!26986)) b!142679))

(declare-fun b_lambda!6409 () Bool)

(assert (=> (not b_lambda!6409) (not b!142669)))

(assert (=> b!142669 t!6366))

(declare-fun b_and!8913 () Bool)

(assert (= b_and!8909 (and (=> t!6366 result!4203) b_and!8913)))

(assert (=> b!142669 t!6368))

(declare-fun b_and!8915 () Bool)

(assert (= b_and!8911 (and (=> t!6368 result!4205) b_and!8915)))

(declare-fun b_lambda!6411 () Bool)

(assert (=> (not b_lambda!6411) (not b!142677)))

(assert (=> b!142677 t!6366))

(declare-fun b_and!8917 () Bool)

(assert (= b_and!8913 (and (=> t!6366 result!4203) b_and!8917)))

(assert (=> b!142677 t!6368))

(declare-fun b_and!8919 () Bool)

(assert (= b_and!8915 (and (=> t!6368 result!4205) b_and!8919)))

(assert (=> b!142673 m!166731))

(declare-fun m!172097 () Bool)

(assert (=> b!142673 m!172097))

(assert (=> b!142671 m!166967))

(assert (=> b!142671 m!166967))

(assert (=> b!142671 m!166981))

(declare-fun m!172099 () Bool)

(assert (=> b!142677 m!172099))

(declare-fun m!172101 () Bool)

(assert (=> b!142677 m!172101))

(assert (=> b!142677 m!166967))

(declare-fun m!172103 () Bool)

(assert (=> b!142677 m!172103))

(declare-fun m!172105 () Bool)

(assert (=> b!142677 m!172105))

(assert (=> b!142677 m!166971))

(assert (=> b!142677 m!166973))

(assert (=> b!142677 m!166973))

(assert (=> b!142677 m!166971))

(assert (=> b!142677 m!166975))

(assert (=> b!142677 m!172099))

(assert (=> b!142674 m!166967))

(assert (=> b!142674 m!166967))

(declare-fun m!172107 () Bool)

(assert (=> b!142674 m!172107))

(assert (=> b!142670 m!166967))

(assert (=> b!142670 m!166967))

(assert (=> b!142670 m!166981))

(assert (=> b!142669 m!166967))

(assert (=> b!142669 m!166967))

(declare-fun m!172109 () Bool)

(assert (=> b!142669 m!172109))

(assert (=> b!142669 m!166971))

(assert (=> b!142669 m!166973))

(assert (=> b!142669 m!166973))

(assert (=> b!142669 m!166971))

(assert (=> b!142669 m!166975))

(declare-fun m!172111 () Bool)

(assert (=> b!142679 m!172111))

(declare-fun m!172113 () Bool)

(assert (=> d!45443 m!172113))

(assert (=> d!45443 m!166961))

(declare-fun m!172115 () Bool)

(assert (=> b!142668 m!172115))

(assert (=> bm!15784 m!166731))

(assert (=> bm!15784 m!172097))

(assert (=> b!140389 d!45443))

(declare-fun d!45445 () Bool)

(assert (=> d!45445 (= (apply!120 lt!73648 lt!73659) (get!1538 (getValueByKey!175 (toList!889 lt!73648) lt!73659)))))

(declare-fun bs!6036 () Bool)

(assert (= bs!6036 d!45445))

(declare-fun m!172117 () Bool)

(assert (=> bs!6036 m!172117))

(assert (=> bs!6036 m!172117))

(declare-fun m!172119 () Bool)

(assert (=> bs!6036 m!172119))

(assert (=> b!140389 d!45445))

(declare-fun d!45447 () Bool)

(assert (=> d!45447 (= (apply!120 lt!73657 lt!73649) (get!1538 (getValueByKey!175 (toList!889 lt!73657) lt!73649)))))

(declare-fun bs!6037 () Bool)

(assert (= bs!6037 d!45447))

(declare-fun m!172121 () Bool)

(assert (=> bs!6037 m!172121))

(assert (=> bs!6037 m!172121))

(declare-fun m!172123 () Bool)

(assert (=> bs!6037 m!172123))

(assert (=> b!140389 d!45447))

(declare-fun d!45449 () Bool)

(declare-fun e!92960 () Bool)

(assert (=> d!45449 e!92960))

(declare-fun res!67999 () Bool)

(assert (=> d!45449 (=> (not res!67999) (not e!92960))))

(declare-fun lt!74787 () ListLongMap!1747)

(assert (=> d!45449 (= res!67999 (contains!921 lt!74787 (_1!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74788 () List!1764)

(assert (=> d!45449 (= lt!74787 (ListLongMap!1748 lt!74788))))

(declare-fun lt!74785 () Unit!4395)

(declare-fun lt!74786 () Unit!4395)

(assert (=> d!45449 (= lt!74785 lt!74786)))

(assert (=> d!45449 (= (getValueByKey!175 lt!74788 (_1!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45449 (= lt!74786 (lemmaContainsTupThenGetReturnValue!91 lt!74788 (_1!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45449 (= lt!74788 (insertStrictlySorted!93 (toList!889 lt!73654) (_1!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45449 (= (+!174 lt!73654 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74787)))

(declare-fun b!142680 () Bool)

(declare-fun res!67998 () Bool)

(assert (=> b!142680 (=> (not res!67998) (not e!92960))))

(assert (=> b!142680 (= res!67998 (= (getValueByKey!175 (toList!889 lt!74787) (_1!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142681 () Bool)

(assert (=> b!142681 (= e!92960 (contains!923 (toList!889 lt!74787) (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45449 res!67999) b!142680))

(assert (= (and b!142680 res!67998) b!142681))

(declare-fun m!172125 () Bool)

(assert (=> d!45449 m!172125))

(declare-fun m!172127 () Bool)

(assert (=> d!45449 m!172127))

(declare-fun m!172129 () Bool)

(assert (=> d!45449 m!172129))

(declare-fun m!172131 () Bool)

(assert (=> d!45449 m!172131))

(declare-fun m!172133 () Bool)

(assert (=> b!142680 m!172133))

(declare-fun m!172135 () Bool)

(assert (=> b!142681 m!172135))

(assert (=> b!140389 d!45449))

(declare-fun d!45451 () Bool)

(assert (=> d!45451 (= (apply!120 (+!174 lt!73654 (tuple2!2685 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73660) (apply!120 lt!73654 lt!73660))))

(declare-fun lt!74789 () Unit!4395)

(assert (=> d!45451 (= lt!74789 (choose!870 lt!73654 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73660))))

(declare-fun e!92961 () Bool)

(assert (=> d!45451 e!92961))

(declare-fun res!68000 () Bool)

(assert (=> d!45451 (=> (not res!68000) (not e!92961))))

(assert (=> d!45451 (= res!68000 (contains!921 lt!73654 lt!73660))))

(assert (=> d!45451 (= (addApplyDifferent!96 lt!73654 lt!73658 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73660) lt!74789)))

(declare-fun b!142682 () Bool)

(assert (=> b!142682 (= e!92961 (not (= lt!73660 lt!73658)))))

(assert (= (and d!45451 res!68000) b!142682))

(declare-fun m!172137 () Bool)

(assert (=> d!45451 m!172137))

(assert (=> d!45451 m!167841))

(assert (=> d!45451 m!167843))

(assert (=> d!45451 m!167841))

(assert (=> d!45451 m!167839))

(assert (=> d!45451 m!166731))

(declare-fun m!172139 () Bool)

(assert (=> d!45451 m!172139))

(assert (=> b!140389 d!45451))

(declare-fun d!45453 () Bool)

(declare-fun e!92962 () Bool)

(assert (=> d!45453 e!92962))

(declare-fun res!68002 () Bool)

(assert (=> d!45453 (=> (not res!68002) (not e!92962))))

(declare-fun lt!74792 () ListLongMap!1747)

(assert (=> d!45453 (= res!68002 (contains!921 lt!74792 (_1!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74793 () List!1764)

(assert (=> d!45453 (= lt!74792 (ListLongMap!1748 lt!74793))))

(declare-fun lt!74790 () Unit!4395)

(declare-fun lt!74791 () Unit!4395)

(assert (=> d!45453 (= lt!74790 lt!74791)))

(assert (=> d!45453 (= (getValueByKey!175 lt!74793 (_1!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45453 (= lt!74791 (lemmaContainsTupThenGetReturnValue!91 lt!74793 (_1!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45453 (= lt!74793 (insertStrictlySorted!93 (toList!889 lt!73652) (_1!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45453 (= (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))) lt!74792)))

(declare-fun b!142683 () Bool)

(declare-fun res!68001 () Bool)

(assert (=> b!142683 (=> (not res!68001) (not e!92962))))

(assert (=> b!142683 (= res!68001 (= (getValueByKey!175 (toList!889 lt!74792) (_1!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142684 () Bool)

(assert (=> b!142684 (= e!92962 (contains!923 (toList!889 lt!74792) (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45453 res!68002) b!142683))

(assert (= (and b!142683 res!68001) b!142684))

(declare-fun m!172141 () Bool)

(assert (=> d!45453 m!172141))

(declare-fun m!172143 () Bool)

(assert (=> d!45453 m!172143))

(declare-fun m!172145 () Bool)

(assert (=> d!45453 m!172145))

(declare-fun m!172147 () Bool)

(assert (=> d!45453 m!172147))

(declare-fun m!172149 () Bool)

(assert (=> b!142683 m!172149))

(declare-fun m!172151 () Bool)

(assert (=> b!142684 m!172151))

(assert (=> b!140389 d!45453))

(declare-fun d!45455 () Bool)

(assert (=> d!45455 (= (apply!120 lt!73654 lt!73660) (get!1538 (getValueByKey!175 (toList!889 lt!73654) lt!73660)))))

(declare-fun bs!6038 () Bool)

(assert (= bs!6038 d!45455))

(declare-fun m!172153 () Bool)

(assert (=> bs!6038 m!172153))

(assert (=> bs!6038 m!172153))

(declare-fun m!172155 () Bool)

(assert (=> bs!6038 m!172155))

(assert (=> b!140389 d!45455))

(declare-fun d!45457 () Bool)

(assert (=> d!45457 (= (apply!120 (+!174 lt!73657 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73649) (apply!120 lt!73657 lt!73649))))

(declare-fun lt!74794 () Unit!4395)

(assert (=> d!45457 (= lt!74794 (choose!870 lt!73657 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73649))))

(declare-fun e!92963 () Bool)

(assert (=> d!45457 e!92963))

(declare-fun res!68003 () Bool)

(assert (=> d!45457 (=> (not res!68003) (not e!92963))))

(assert (=> d!45457 (= res!68003 (contains!921 lt!73657 lt!73649))))

(assert (=> d!45457 (= (addApplyDifferent!96 lt!73657 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!73649) lt!74794)))

(declare-fun b!142685 () Bool)

(assert (=> b!142685 (= e!92963 (not (= lt!73649 lt!73640)))))

(assert (= (and d!45457 res!68003) b!142685))

(declare-fun m!172157 () Bool)

(assert (=> d!45457 m!172157))

(assert (=> d!45457 m!167827))

(assert (=> d!45457 m!167829))

(assert (=> d!45457 m!167827))

(assert (=> d!45457 m!167853))

(assert (=> d!45457 m!166731))

(declare-fun m!172159 () Bool)

(assert (=> d!45457 m!172159))

(assert (=> b!140389 d!45457))

(declare-fun d!45459 () Bool)

(assert (=> d!45459 (contains!921 (+!174 lt!73652 (tuple2!2685 lt!73645 (zeroValue!2790 newMap!16))) lt!73650)))

(declare-fun lt!74795 () Unit!4395)

(assert (=> d!45459 (= lt!74795 (choose!871 lt!73652 lt!73645 (zeroValue!2790 newMap!16) lt!73650))))

(assert (=> d!45459 (contains!921 lt!73652 lt!73650)))

(assert (=> d!45459 (= (addStillContains!96 lt!73652 lt!73645 (zeroValue!2790 newMap!16) lt!73650) lt!74795)))

(declare-fun bs!6039 () Bool)

(assert (= bs!6039 d!45459))

(assert (=> bs!6039 m!167833))

(assert (=> bs!6039 m!167833))

(assert (=> bs!6039 m!167835))

(declare-fun m!172161 () Bool)

(assert (=> bs!6039 m!172161))

(declare-fun m!172163 () Bool)

(assert (=> bs!6039 m!172163))

(assert (=> b!140389 d!45459))

(declare-fun d!45461 () Bool)

(assert (=> d!45461 (= (apply!120 (+!174 lt!73648 (tuple2!2685 lt!73653 (zeroValue!2790 newMap!16))) lt!73659) (apply!120 lt!73648 lt!73659))))

(declare-fun lt!74796 () Unit!4395)

(assert (=> d!45461 (= lt!74796 (choose!870 lt!73648 lt!73653 (zeroValue!2790 newMap!16) lt!73659))))

(declare-fun e!92964 () Bool)

(assert (=> d!45461 e!92964))

(declare-fun res!68004 () Bool)

(assert (=> d!45461 (=> (not res!68004) (not e!92964))))

(assert (=> d!45461 (= res!68004 (contains!921 lt!73648 lt!73659))))

(assert (=> d!45461 (= (addApplyDifferent!96 lt!73648 lt!73653 (zeroValue!2790 newMap!16) lt!73659) lt!74796)))

(declare-fun b!142686 () Bool)

(assert (=> b!142686 (= e!92964 (not (= lt!73659 lt!73653)))))

(assert (= (and d!45461 res!68004) b!142686))

(declare-fun m!172165 () Bool)

(assert (=> d!45461 m!172165))

(assert (=> d!45461 m!167845))

(assert (=> d!45461 m!167847))

(assert (=> d!45461 m!167845))

(assert (=> d!45461 m!167855))

(declare-fun m!172167 () Bool)

(assert (=> d!45461 m!172167))

(assert (=> b!140389 d!45461))

(declare-fun d!45463 () Bool)

(declare-fun e!92965 () Bool)

(assert (=> d!45463 e!92965))

(declare-fun res!68006 () Bool)

(assert (=> d!45463 (=> (not res!68006) (not e!92965))))

(declare-fun lt!74799 () ListLongMap!1747)

(assert (=> d!45463 (= res!68006 (contains!921 lt!74799 (_1!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74800 () List!1764)

(assert (=> d!45463 (= lt!74799 (ListLongMap!1748 lt!74800))))

(declare-fun lt!74797 () Unit!4395)

(declare-fun lt!74798 () Unit!4395)

(assert (=> d!45463 (= lt!74797 lt!74798)))

(assert (=> d!45463 (= (getValueByKey!175 lt!74800 (_1!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45463 (= lt!74798 (lemmaContainsTupThenGetReturnValue!91 lt!74800 (_1!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45463 (= lt!74800 (insertStrictlySorted!93 (toList!889 lt!73657) (_1!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45463 (= (+!174 lt!73657 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74799)))

(declare-fun b!142687 () Bool)

(declare-fun res!68005 () Bool)

(assert (=> b!142687 (=> (not res!68005) (not e!92965))))

(assert (=> b!142687 (= res!68005 (= (getValueByKey!175 (toList!889 lt!74799) (_1!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142688 () Bool)

(assert (=> b!142688 (= e!92965 (contains!923 (toList!889 lt!74799) (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45463 res!68006) b!142687))

(assert (= (and b!142687 res!68005) b!142688))

(declare-fun m!172169 () Bool)

(assert (=> d!45463 m!172169))

(declare-fun m!172171 () Bool)

(assert (=> d!45463 m!172171))

(declare-fun m!172173 () Bool)

(assert (=> d!45463 m!172173))

(declare-fun m!172175 () Bool)

(assert (=> d!45463 m!172175))

(declare-fun m!172177 () Bool)

(assert (=> b!142687 m!172177))

(declare-fun m!172179 () Bool)

(assert (=> b!142688 m!172179))

(assert (=> b!140389 d!45463))

(declare-fun d!45465 () Bool)

(assert (=> d!45465 (= (apply!120 (+!174 lt!73657 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!73649) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73657 (tuple2!2685 lt!73640 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!73649)))))

(declare-fun bs!6040 () Bool)

(assert (= bs!6040 d!45465))

(declare-fun m!172181 () Bool)

(assert (=> bs!6040 m!172181))

(assert (=> bs!6040 m!172181))

(declare-fun m!172183 () Bool)

(assert (=> bs!6040 m!172183))

(assert (=> b!140389 d!45465))

(declare-fun d!45467 () Bool)

(declare-fun e!92966 () Bool)

(assert (=> d!45467 e!92966))

(declare-fun res!68008 () Bool)

(assert (=> d!45467 (=> (not res!68008) (not e!92966))))

(declare-fun lt!74803 () ListLongMap!1747)

(assert (=> d!45467 (= res!68008 (contains!921 lt!74803 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74804 () List!1764)

(assert (=> d!45467 (= lt!74803 (ListLongMap!1748 lt!74804))))

(declare-fun lt!74801 () Unit!4395)

(declare-fun lt!74802 () Unit!4395)

(assert (=> d!45467 (= lt!74801 lt!74802)))

(assert (=> d!45467 (= (getValueByKey!175 lt!74804 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45467 (= lt!74802 (lemmaContainsTupThenGetReturnValue!91 lt!74804 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45467 (= lt!74804 (insertStrictlySorted!93 (toList!889 call!15655) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45467 (= (+!174 call!15655 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74803)))

(declare-fun b!142689 () Bool)

(declare-fun res!68007 () Bool)

(assert (=> b!142689 (=> (not res!68007) (not e!92966))))

(assert (=> b!142689 (= res!68007 (= (getValueByKey!175 (toList!889 lt!74803) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142690 () Bool)

(assert (=> b!142690 (= e!92966 (contains!923 (toList!889 lt!74803) (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45467 res!68008) b!142689))

(assert (= (and b!142689 res!68007) b!142690))

(declare-fun m!172185 () Bool)

(assert (=> d!45467 m!172185))

(declare-fun m!172187 () Bool)

(assert (=> d!45467 m!172187))

(declare-fun m!172189 () Bool)

(assert (=> d!45467 m!172189))

(declare-fun m!172191 () Bool)

(assert (=> d!45467 m!172191))

(declare-fun m!172193 () Bool)

(assert (=> b!142689 m!172193))

(declare-fun m!172195 () Bool)

(assert (=> b!142690 m!172195))

(assert (=> b!140897 d!45467))

(declare-fun d!45469 () Bool)

(declare-fun e!92968 () Bool)

(assert (=> d!45469 e!92968))

(declare-fun res!68009 () Bool)

(assert (=> d!45469 (=> res!68009 e!92968)))

(declare-fun lt!74805 () Bool)

(assert (=> d!45469 (= res!68009 (not lt!74805))))

(declare-fun lt!74808 () Bool)

(assert (=> d!45469 (= lt!74805 lt!74808)))

(declare-fun lt!74806 () Unit!4395)

(declare-fun e!92967 () Unit!4395)

(assert (=> d!45469 (= lt!74806 e!92967)))

(declare-fun c!26990 () Bool)

(assert (=> d!45469 (= c!26990 lt!74808)))

(assert (=> d!45469 (= lt!74808 (containsKey!179 (toList!889 (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972))) lt!73973))))

(assert (=> d!45469 (= (contains!921 (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972)) lt!73973) lt!74805)))

(declare-fun b!142691 () Bool)

(declare-fun lt!74807 () Unit!4395)

(assert (=> b!142691 (= e!92967 lt!74807)))

(assert (=> b!142691 (= lt!74807 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972))) lt!73973))))

(assert (=> b!142691 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972))) lt!73973))))

(declare-fun b!142692 () Bool)

(declare-fun Unit!4527 () Unit!4395)

(assert (=> b!142692 (= e!92967 Unit!4527)))

(declare-fun b!142693 () Bool)

(assert (=> b!142693 (= e!92968 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972))) lt!73973)))))

(assert (= (and d!45469 c!26990) b!142691))

(assert (= (and d!45469 (not c!26990)) b!142692))

(assert (= (and d!45469 (not res!68009)) b!142693))

(declare-fun m!172197 () Bool)

(assert (=> d!45469 m!172197))

(declare-fun m!172199 () Bool)

(assert (=> b!142691 m!172199))

(declare-fun m!172201 () Bool)

(assert (=> b!142691 m!172201))

(assert (=> b!142691 m!172201))

(declare-fun m!172203 () Bool)

(assert (=> b!142691 m!172203))

(assert (=> b!142693 m!172201))

(assert (=> b!142693 m!172201))

(assert (=> b!142693 m!172203))

(assert (=> b!140897 d!45469))

(declare-fun d!45471 () Bool)

(declare-fun e!92969 () Bool)

(assert (=> d!45471 e!92969))

(declare-fun res!68011 () Bool)

(assert (=> d!45471 (=> (not res!68011) (not e!92969))))

(declare-fun lt!74811 () ListLongMap!1747)

(assert (=> d!45471 (= res!68011 (contains!921 lt!74811 (_1!1352 (tuple2!2685 lt!73974 lt!73972))))))

(declare-fun lt!74812 () List!1764)

(assert (=> d!45471 (= lt!74811 (ListLongMap!1748 lt!74812))))

(declare-fun lt!74809 () Unit!4395)

(declare-fun lt!74810 () Unit!4395)

(assert (=> d!45471 (= lt!74809 lt!74810)))

(assert (=> d!45471 (= (getValueByKey!175 lt!74812 (_1!1352 (tuple2!2685 lt!73974 lt!73972))) (Some!180 (_2!1352 (tuple2!2685 lt!73974 lt!73972))))))

(assert (=> d!45471 (= lt!74810 (lemmaContainsTupThenGetReturnValue!91 lt!74812 (_1!1352 (tuple2!2685 lt!73974 lt!73972)) (_2!1352 (tuple2!2685 lt!73974 lt!73972))))))

(assert (=> d!45471 (= lt!74812 (insertStrictlySorted!93 (toList!889 lt!73970) (_1!1352 (tuple2!2685 lt!73974 lt!73972)) (_2!1352 (tuple2!2685 lt!73974 lt!73972))))))

(assert (=> d!45471 (= (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972)) lt!74811)))

(declare-fun b!142694 () Bool)

(declare-fun res!68010 () Bool)

(assert (=> b!142694 (=> (not res!68010) (not e!92969))))

(assert (=> b!142694 (= res!68010 (= (getValueByKey!175 (toList!889 lt!74811) (_1!1352 (tuple2!2685 lt!73974 lt!73972))) (Some!180 (_2!1352 (tuple2!2685 lt!73974 lt!73972)))))))

(declare-fun b!142695 () Bool)

(assert (=> b!142695 (= e!92969 (contains!923 (toList!889 lt!74811) (tuple2!2685 lt!73974 lt!73972)))))

(assert (= (and d!45471 res!68011) b!142694))

(assert (= (and b!142694 res!68010) b!142695))

(declare-fun m!172205 () Bool)

(assert (=> d!45471 m!172205))

(declare-fun m!172207 () Bool)

(assert (=> d!45471 m!172207))

(declare-fun m!172209 () Bool)

(assert (=> d!45471 m!172209))

(declare-fun m!172211 () Bool)

(assert (=> d!45471 m!172211))

(declare-fun m!172213 () Bool)

(assert (=> b!142694 m!172213))

(declare-fun m!172215 () Bool)

(assert (=> b!142695 m!172215))

(assert (=> b!140897 d!45471))

(declare-fun d!45473 () Bool)

(assert (=> d!45473 (not (contains!921 (+!174 lt!73970 (tuple2!2685 lt!73974 lt!73972)) lt!73973))))

(declare-fun lt!74813 () Unit!4395)

(assert (=> d!45473 (= lt!74813 (choose!875 lt!73970 lt!73974 lt!73972 lt!73973))))

(declare-fun e!92970 () Bool)

(assert (=> d!45473 e!92970))

(declare-fun res!68012 () Bool)

(assert (=> d!45473 (=> (not res!68012) (not e!92970))))

(assert (=> d!45473 (= res!68012 (not (contains!921 lt!73970 lt!73973)))))

(assert (=> d!45473 (= (addStillNotContains!66 lt!73970 lt!73974 lt!73972 lt!73973) lt!74813)))

(declare-fun b!142696 () Bool)

(assert (=> b!142696 (= e!92970 (not (= lt!73974 lt!73973)))))

(assert (= (and d!45473 res!68012) b!142696))

(assert (=> d!45473 m!168855))

(assert (=> d!45473 m!168855))

(assert (=> d!45473 m!168857))

(declare-fun m!172217 () Bool)

(assert (=> d!45473 m!172217))

(declare-fun m!172219 () Bool)

(assert (=> d!45473 m!172219))

(assert (=> b!140897 d!45473))

(assert (=> b!140897 d!43651))

(declare-fun d!45475 () Bool)

(assert (=> d!45475 (= (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140537 d!45475))

(declare-fun e!92972 () Option!181)

(declare-fun b!142699 () Bool)

(assert (=> b!142699 (= e!92972 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73542))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142698 () Bool)

(declare-fun e!92971 () Option!181)

(assert (=> b!142698 (= e!92971 e!92972)))

(declare-fun c!26992 () Bool)

(assert (=> b!142698 (= c!26992 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73542))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73542)))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!142700 () Bool)

(assert (=> b!142700 (= e!92972 None!179)))

(declare-fun b!142697 () Bool)

(assert (=> b!142697 (= e!92971 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73542))))))))

(declare-fun d!45477 () Bool)

(declare-fun c!26991 () Bool)

(assert (=> d!45477 (= c!26991 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73542))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73542)))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45477 (= (getValueByKey!175 (t!6360 (toList!889 lt!73542)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!92971)))

(assert (= (and d!45477 c!26991) b!142697))

(assert (= (and d!45477 (not c!26991)) b!142698))

(assert (= (and b!142698 c!26992) b!142699))

(assert (= (and b!142698 (not c!26992)) b!142700))

(declare-fun m!172221 () Bool)

(assert (=> b!142699 m!172221))

(assert (=> b!140780 d!45477))

(declare-fun d!45479 () Bool)

(declare-fun lt!74814 () Bool)

(assert (=> d!45479 (= lt!74814 (select (content!137 (toList!889 lt!73820)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!92973 () Bool)

(assert (=> d!45479 (= lt!74814 e!92973)))

(declare-fun res!68014 () Bool)

(assert (=> d!45479 (=> (not res!68014) (not e!92973))))

(assert (=> d!45479 (= res!68014 ((_ is Cons!1760) (toList!889 lt!73820)))))

(assert (=> d!45479 (= (contains!923 (toList!889 lt!73820) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74814)))

(declare-fun b!142701 () Bool)

(declare-fun e!92974 () Bool)

(assert (=> b!142701 (= e!92973 e!92974)))

(declare-fun res!68013 () Bool)

(assert (=> b!142701 (=> res!68013 e!92974)))

(assert (=> b!142701 (= res!68013 (= (h!2367 (toList!889 lt!73820)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142702 () Bool)

(assert (=> b!142702 (= e!92974 (contains!923 (t!6360 (toList!889 lt!73820)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45479 res!68014) b!142701))

(assert (= (and b!142701 (not res!68013)) b!142702))

(declare-fun m!172223 () Bool)

(assert (=> d!45479 m!172223))

(declare-fun m!172225 () Bool)

(assert (=> d!45479 m!172225))

(declare-fun m!172227 () Bool)

(assert (=> b!142702 m!172227))

(assert (=> b!140693 d!45479))

(declare-fun d!45481 () Bool)

(assert (=> d!45481 (= (apply!120 lt!73863 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73863) (select (arr!2314 lt!73346) #b00000000000000000000000000000000))))))

(declare-fun bs!6041 () Bool)

(assert (= bs!6041 d!45481))

(assert (=> bs!6041 m!168583))

(declare-fun m!172229 () Bool)

(assert (=> bs!6041 m!172229))

(assert (=> bs!6041 m!172229))

(declare-fun m!172231 () Bool)

(assert (=> bs!6041 m!172231))

(assert (=> b!140758 d!45481))

(declare-fun d!45483 () Bool)

(declare-fun c!26993 () Bool)

(assert (=> d!45483 (= c!26993 ((_ is ValueCellFull!1122) (select (arr!2315 lt!73351) #b00000000000000000000000000000000)))))

(declare-fun e!92975 () V!3555)

(assert (=> d!45483 (= (get!1535 (select (arr!2315 lt!73351) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!92975)))

(declare-fun b!142703 () Bool)

(assert (=> b!142703 (= e!92975 (get!1536 (select (arr!2315 lt!73351) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142704 () Bool)

(assert (=> b!142704 (= e!92975 (get!1537 (select (arr!2315 lt!73351) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45483 c!26993) b!142703))

(assert (= (and d!45483 (not c!26993)) b!142704))

(assert (=> b!142703 m!168587))

(assert (=> b!142703 m!166971))

(declare-fun m!172233 () Bool)

(assert (=> b!142703 m!172233))

(assert (=> b!142704 m!168587))

(assert (=> b!142704 m!166971))

(declare-fun m!172235 () Bool)

(assert (=> b!142704 m!172235))

(assert (=> b!140758 d!45483))

(declare-fun d!45485 () Bool)

(declare-fun e!92976 () Bool)

(assert (=> d!45485 e!92976))

(declare-fun res!68016 () Bool)

(assert (=> d!45485 (=> (not res!68016) (not e!92976))))

(declare-fun lt!74815 () List!1764)

(assert (=> d!45485 (= res!68016 (isStrictlySorted!320 lt!74815))))

(declare-fun e!92978 () List!1764)

(assert (=> d!45485 (= lt!74815 e!92978)))

(declare-fun c!26994 () Bool)

(assert (=> d!45485 (= c!26994 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73144))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73144)))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45485 (isStrictlySorted!320 (t!6360 (toList!889 lt!73144)))))

(assert (=> d!45485 (= (insertStrictlySorted!93 (t!6360 (toList!889 lt!73144)) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74815)))

(declare-fun b!142705 () Bool)

(assert (=> b!142705 (= e!92976 (contains!923 lt!74815 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun bm!15785 () Bool)

(declare-fun e!92979 () List!1764)

(declare-fun call!15788 () List!1764)

(assert (=> bm!15785 (= call!15788 ($colon$colon!93 e!92979 (ite c!26994 (h!2367 (t!6360 (toList!889 lt!73144))) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun c!26997 () Bool)

(assert (=> bm!15785 (= c!26997 c!26994)))

(declare-fun b!142706 () Bool)

(assert (=> b!142706 (= e!92978 call!15788)))

(declare-fun b!142707 () Bool)

(assert (=> b!142707 (= e!92979 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 lt!73144))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142708 () Bool)

(declare-fun e!92980 () List!1764)

(declare-fun call!15789 () List!1764)

(assert (=> b!142708 (= e!92980 call!15789)))

(declare-fun bm!15786 () Bool)

(assert (=> bm!15786 (= call!15789 call!15788)))

(declare-fun b!142709 () Bool)

(declare-fun e!92977 () List!1764)

(declare-fun call!15790 () List!1764)

(assert (=> b!142709 (= e!92977 call!15790)))

(declare-fun c!26996 () Bool)

(declare-fun b!142710 () Bool)

(assert (=> b!142710 (= c!26996 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73144))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73144)))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> b!142710 (= e!92980 e!92977)))

(declare-fun b!142711 () Bool)

(assert (=> b!142711 (= e!92978 e!92980)))

(declare-fun c!26995 () Bool)

(assert (=> b!142711 (= c!26995 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73144))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73144)))) (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142712 () Bool)

(assert (=> b!142712 (= e!92979 (ite c!26995 (t!6360 (t!6360 (toList!889 lt!73144))) (ite c!26996 (Cons!1760 (h!2367 (t!6360 (toList!889 lt!73144))) (t!6360 (t!6360 (toList!889 lt!73144)))) Nil!1761)))))

(declare-fun bm!15787 () Bool)

(assert (=> bm!15787 (= call!15790 call!15789)))

(declare-fun b!142713 () Bool)

(declare-fun res!68015 () Bool)

(assert (=> b!142713 (=> (not res!68015) (not e!92976))))

(assert (=> b!142713 (= res!68015 (containsKey!179 lt!74815 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142714 () Bool)

(assert (=> b!142714 (= e!92977 call!15790)))

(assert (= (and d!45485 c!26994) b!142706))

(assert (= (and d!45485 (not c!26994)) b!142711))

(assert (= (and b!142711 c!26995) b!142708))

(assert (= (and b!142711 (not c!26995)) b!142710))

(assert (= (and b!142710 c!26996) b!142714))

(assert (= (and b!142710 (not c!26996)) b!142709))

(assert (= (or b!142714 b!142709) bm!15787))

(assert (= (or b!142708 bm!15787) bm!15786))

(assert (= (or b!142706 bm!15786) bm!15785))

(assert (= (and bm!15785 c!26997) b!142707))

(assert (= (and bm!15785 (not c!26997)) b!142712))

(assert (= (and d!45485 res!68016) b!142713))

(assert (= (and b!142713 res!68015) b!142705))

(declare-fun m!172237 () Bool)

(assert (=> b!142705 m!172237))

(declare-fun m!172239 () Bool)

(assert (=> b!142713 m!172239))

(declare-fun m!172241 () Bool)

(assert (=> b!142707 m!172241))

(declare-fun m!172243 () Bool)

(assert (=> bm!15785 m!172243))

(declare-fun m!172245 () Bool)

(assert (=> d!45485 m!172245))

(declare-fun m!172247 () Bool)

(assert (=> d!45485 m!172247))

(assert (=> b!140938 d!45485))

(assert (=> b!140703 d!44747))

(declare-fun d!45487 () Bool)

(declare-fun res!68017 () Bool)

(declare-fun e!92981 () Bool)

(assert (=> d!45487 (=> res!68017 e!92981)))

(assert (=> d!45487 (= res!68017 (and ((_ is Cons!1760) (toList!889 lt!73441)) (= (_1!1352 (h!2367 (toList!889 lt!73441))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45487 (= (containsKey!179 (toList!889 lt!73441) #b1000000000000000000000000000000000000000000000000000000000000000) e!92981)))

(declare-fun b!142715 () Bool)

(declare-fun e!92982 () Bool)

(assert (=> b!142715 (= e!92981 e!92982)))

(declare-fun res!68018 () Bool)

(assert (=> b!142715 (=> (not res!68018) (not e!92982))))

(assert (=> b!142715 (= res!68018 (and (or (not ((_ is Cons!1760) (toList!889 lt!73441))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73441))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73441)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73441))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142716 () Bool)

(assert (=> b!142716 (= e!92982 (containsKey!179 (t!6360 (toList!889 lt!73441)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45487 (not res!68017)) b!142715))

(assert (= (and b!142715 res!68018) b!142716))

(declare-fun m!172249 () Bool)

(assert (=> b!142716 m!172249))

(assert (=> d!43701 d!45487))

(declare-fun d!45489 () Bool)

(assert (=> d!45489 (contains!921 (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))) lt!73870)))

(declare-fun lt!74816 () Unit!4395)

(assert (=> d!45489 (= lt!74816 (choose!871 lt!73872 lt!73865 (zeroValue!2790 newMap!16) lt!73870))))

(assert (=> d!45489 (contains!921 lt!73872 lt!73870)))

(assert (=> d!45489 (= (addStillContains!96 lt!73872 lt!73865 (zeroValue!2790 newMap!16) lt!73870) lt!74816)))

(declare-fun bs!6042 () Bool)

(assert (= bs!6042 d!45489))

(assert (=> bs!6042 m!168607))

(assert (=> bs!6042 m!168607))

(assert (=> bs!6042 m!168609))

(declare-fun m!172251 () Bool)

(assert (=> bs!6042 m!172251))

(declare-fun m!172253 () Bool)

(assert (=> bs!6042 m!172253))

(assert (=> b!140745 d!45489))

(declare-fun d!45491 () Bool)

(declare-fun e!92983 () Bool)

(assert (=> d!45491 e!92983))

(declare-fun res!68020 () Bool)

(assert (=> d!45491 (=> (not res!68020) (not e!92983))))

(declare-fun lt!74819 () ListLongMap!1747)

(assert (=> d!45491 (= res!68020 (contains!921 lt!74819 (_1!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16)))))))

(declare-fun lt!74820 () List!1764)

(assert (=> d!45491 (= lt!74819 (ListLongMap!1748 lt!74820))))

(declare-fun lt!74817 () Unit!4395)

(declare-fun lt!74818 () Unit!4395)

(assert (=> d!45491 (= lt!74817 lt!74818)))

(assert (=> d!45491 (= (getValueByKey!175 lt!74820 (_1!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16)))))))

(assert (=> d!45491 (= lt!74818 (lemmaContainsTupThenGetReturnValue!91 lt!74820 (_1!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16)))))))

(assert (=> d!45491 (= lt!74820 (insertStrictlySorted!93 (toList!889 lt!73874) (_1!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16)))))))

(assert (=> d!45491 (= (+!174 lt!73874 (tuple2!2685 lt!73878 (minValue!2790 newMap!16))) lt!74819)))

(declare-fun b!142717 () Bool)

(declare-fun res!68019 () Bool)

(assert (=> b!142717 (=> (not res!68019) (not e!92983))))

(assert (=> b!142717 (= res!68019 (= (getValueByKey!175 (toList!889 lt!74819) (_1!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73878 (minValue!2790 newMap!16))))))))

(declare-fun b!142718 () Bool)

(assert (=> b!142718 (= e!92983 (contains!923 (toList!889 lt!74819) (tuple2!2685 lt!73878 (minValue!2790 newMap!16))))))

(assert (= (and d!45491 res!68020) b!142717))

(assert (= (and b!142717 res!68019) b!142718))

(declare-fun m!172255 () Bool)

(assert (=> d!45491 m!172255))

(declare-fun m!172257 () Bool)

(assert (=> d!45491 m!172257))

(declare-fun m!172259 () Bool)

(assert (=> d!45491 m!172259))

(declare-fun m!172261 () Bool)

(assert (=> d!45491 m!172261))

(declare-fun m!172263 () Bool)

(assert (=> b!142717 m!172263))

(declare-fun m!172265 () Bool)

(assert (=> b!142718 m!172265))

(assert (=> b!140745 d!45491))

(declare-fun d!45493 () Bool)

(declare-fun e!92984 () Bool)

(assert (=> d!45493 e!92984))

(declare-fun res!68022 () Bool)

(assert (=> d!45493 (=> (not res!68022) (not e!92984))))

(declare-fun lt!74823 () ListLongMap!1747)

(assert (=> d!45493 (= res!68022 (contains!921 lt!74823 (_1!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16)))))))

(declare-fun lt!74824 () List!1764)

(assert (=> d!45493 (= lt!74823 (ListLongMap!1748 lt!74824))))

(declare-fun lt!74821 () Unit!4395)

(declare-fun lt!74822 () Unit!4395)

(assert (=> d!45493 (= lt!74821 lt!74822)))

(assert (=> d!45493 (= (getValueByKey!175 lt!74824 (_1!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16)))))))

(assert (=> d!45493 (= lt!74822 (lemmaContainsTupThenGetReturnValue!91 lt!74824 (_1!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16)))))))

(assert (=> d!45493 (= lt!74824 (insertStrictlySorted!93 (toList!889 lt!73877) (_1!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16)))))))

(assert (=> d!45493 (= (+!174 lt!73877 (tuple2!2685 lt!73860 (minValue!2790 newMap!16))) lt!74823)))

(declare-fun b!142719 () Bool)

(declare-fun res!68021 () Bool)

(assert (=> b!142719 (=> (not res!68021) (not e!92984))))

(assert (=> b!142719 (= res!68021 (= (getValueByKey!175 (toList!889 lt!74823) (_1!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73860 (minValue!2790 newMap!16))))))))

(declare-fun b!142720 () Bool)

(assert (=> b!142720 (= e!92984 (contains!923 (toList!889 lt!74823) (tuple2!2685 lt!73860 (minValue!2790 newMap!16))))))

(assert (= (and d!45493 res!68022) b!142719))

(assert (= (and b!142719 res!68021) b!142720))

(declare-fun m!172267 () Bool)

(assert (=> d!45493 m!172267))

(declare-fun m!172269 () Bool)

(assert (=> d!45493 m!172269))

(declare-fun m!172271 () Bool)

(assert (=> d!45493 m!172271))

(declare-fun m!172273 () Bool)

(assert (=> d!45493 m!172273))

(declare-fun m!172275 () Bool)

(assert (=> b!142719 m!172275))

(declare-fun m!172277 () Bool)

(assert (=> b!142720 m!172277))

(assert (=> b!140745 d!45493))

(declare-fun d!45495 () Bool)

(declare-fun e!92985 () Bool)

(assert (=> d!45495 e!92985))

(declare-fun res!68024 () Bool)

(assert (=> d!45495 (=> (not res!68024) (not e!92985))))

(declare-fun lt!74827 () ListLongMap!1747)

(assert (=> d!45495 (= res!68024 (contains!921 lt!74827 (_1!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74828 () List!1764)

(assert (=> d!45495 (= lt!74827 (ListLongMap!1748 lt!74828))))

(declare-fun lt!74825 () Unit!4395)

(declare-fun lt!74826 () Unit!4395)

(assert (=> d!45495 (= lt!74825 lt!74826)))

(assert (=> d!45495 (= (getValueByKey!175 lt!74828 (_1!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45495 (= lt!74826 (lemmaContainsTupThenGetReturnValue!91 lt!74828 (_1!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45495 (= lt!74828 (insertStrictlySorted!93 (toList!889 lt!73868) (_1!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45495 (= (+!174 lt!73868 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))) lt!74827)))

(declare-fun b!142721 () Bool)

(declare-fun res!68023 () Bool)

(assert (=> b!142721 (=> (not res!68023) (not e!92985))))

(assert (=> b!142721 (= res!68023 (= (getValueByKey!175 (toList!889 lt!74827) (_1!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142722 () Bool)

(assert (=> b!142722 (= e!92985 (contains!923 (toList!889 lt!74827) (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45495 res!68024) b!142721))

(assert (= (and b!142721 res!68023) b!142722))

(declare-fun m!172279 () Bool)

(assert (=> d!45495 m!172279))

(declare-fun m!172281 () Bool)

(assert (=> d!45495 m!172281))

(declare-fun m!172283 () Bool)

(assert (=> d!45495 m!172283))

(declare-fun m!172285 () Bool)

(assert (=> d!45495 m!172285))

(declare-fun m!172287 () Bool)

(assert (=> b!142721 m!172287))

(declare-fun m!172289 () Bool)

(assert (=> b!142722 m!172289))

(assert (=> b!140745 d!45495))

(declare-fun d!45497 () Bool)

(declare-fun e!92986 () Bool)

(assert (=> d!45497 e!92986))

(declare-fun res!68026 () Bool)

(assert (=> d!45497 (=> (not res!68026) (not e!92986))))

(declare-fun lt!74831 () ListLongMap!1747)

(assert (=> d!45497 (= res!68026 (contains!921 lt!74831 (_1!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74832 () List!1764)

(assert (=> d!45497 (= lt!74831 (ListLongMap!1748 lt!74832))))

(declare-fun lt!74829 () Unit!4395)

(declare-fun lt!74830 () Unit!4395)

(assert (=> d!45497 (= lt!74829 lt!74830)))

(assert (=> d!45497 (= (getValueByKey!175 lt!74832 (_1!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45497 (= lt!74830 (lemmaContainsTupThenGetReturnValue!91 lt!74832 (_1!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45497 (= lt!74832 (insertStrictlySorted!93 (toList!889 lt!73872) (_1!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45497 (= (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))) lt!74831)))

(declare-fun b!142723 () Bool)

(declare-fun res!68025 () Bool)

(assert (=> b!142723 (=> (not res!68025) (not e!92986))))

(assert (=> b!142723 (= res!68025 (= (getValueByKey!175 (toList!889 lt!74831) (_1!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142724 () Bool)

(assert (=> b!142724 (= e!92986 (contains!923 (toList!889 lt!74831) (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45497 res!68026) b!142723))

(assert (= (and b!142723 res!68025) b!142724))

(declare-fun m!172291 () Bool)

(assert (=> d!45497 m!172291))

(declare-fun m!172293 () Bool)

(assert (=> d!45497 m!172293))

(declare-fun m!172295 () Bool)

(assert (=> d!45497 m!172295))

(declare-fun m!172297 () Bool)

(assert (=> d!45497 m!172297))

(declare-fun m!172299 () Bool)

(assert (=> b!142723 m!172299))

(declare-fun m!172301 () Bool)

(assert (=> b!142724 m!172301))

(assert (=> b!140745 d!45497))

(declare-fun d!45499 () Bool)

(assert (=> d!45499 (= (apply!120 (+!174 lt!73877 (tuple2!2685 lt!73860 (minValue!2790 newMap!16))) lt!73869) (apply!120 lt!73877 lt!73869))))

(declare-fun lt!74833 () Unit!4395)

(assert (=> d!45499 (= lt!74833 (choose!870 lt!73877 lt!73860 (minValue!2790 newMap!16) lt!73869))))

(declare-fun e!92987 () Bool)

(assert (=> d!45499 e!92987))

(declare-fun res!68027 () Bool)

(assert (=> d!45499 (=> (not res!68027) (not e!92987))))

(assert (=> d!45499 (= res!68027 (contains!921 lt!73877 lt!73869))))

(assert (=> d!45499 (= (addApplyDifferent!96 lt!73877 lt!73860 (minValue!2790 newMap!16) lt!73869) lt!74833)))

(declare-fun b!142725 () Bool)

(assert (=> b!142725 (= e!92987 (not (= lt!73869 lt!73860)))))

(assert (= (and d!45499 res!68027) b!142725))

(declare-fun m!172303 () Bool)

(assert (=> d!45499 m!172303))

(assert (=> d!45499 m!168601))

(assert (=> d!45499 m!168603))

(assert (=> d!45499 m!168601))

(assert (=> d!45499 m!168627))

(declare-fun m!172305 () Bool)

(assert (=> d!45499 m!172305))

(assert (=> b!140745 d!45499))

(declare-fun b!142726 () Bool)

(declare-fun res!68029 () Bool)

(declare-fun e!92992 () Bool)

(assert (=> b!142726 (=> (not res!68029) (not e!92992))))

(declare-fun lt!74836 () ListLongMap!1747)

(assert (=> b!142726 (= res!68029 (not (contains!921 lt!74836 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142727 () Bool)

(assert (=> b!142727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(assert (=> b!142727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 lt!73351)))))

(declare-fun e!92988 () Bool)

(assert (=> b!142727 (= e!92988 (= (apply!120 lt!74836 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 lt!73351) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142728 () Bool)

(declare-fun e!92994 () ListLongMap!1747)

(declare-fun e!92991 () ListLongMap!1747)

(assert (=> b!142728 (= e!92994 e!92991)))

(declare-fun c!27000 () Bool)

(assert (=> b!142728 (= c!27000 (validKeyInArray!0 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(declare-fun b!142729 () Bool)

(declare-fun e!92989 () Bool)

(assert (=> b!142729 (= e!92989 (validKeyInArray!0 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(assert (=> b!142729 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!45501 () Bool)

(assert (=> d!45501 e!92992))

(declare-fun res!68031 () Bool)

(assert (=> d!45501 (=> (not res!68031) (not e!92992))))

(assert (=> d!45501 (= res!68031 (not (contains!921 lt!74836 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45501 (= lt!74836 e!92994)))

(declare-fun c!27001 () Bool)

(assert (=> d!45501 (= c!27001 (bvsge #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(assert (=> d!45501 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45501 (= (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)) lt!74836)))

(declare-fun b!142730 () Bool)

(declare-fun e!92990 () Bool)

(declare-fun e!92993 () Bool)

(assert (=> b!142730 (= e!92990 e!92993)))

(declare-fun c!26998 () Bool)

(assert (=> b!142730 (= c!26998 (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(declare-fun b!142731 () Bool)

(assert (=> b!142731 (= e!92993 (= lt!74836 (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!142732 () Bool)

(assert (=> b!142732 (= e!92990 e!92988)))

(assert (=> b!142732 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(declare-fun res!68030 () Bool)

(assert (=> b!142732 (= res!68030 (contains!921 lt!74836 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(assert (=> b!142732 (=> (not res!68030) (not e!92988))))

(declare-fun b!142733 () Bool)

(declare-fun call!15791 () ListLongMap!1747)

(assert (=> b!142733 (= e!92991 call!15791)))

(declare-fun bm!15788 () Bool)

(assert (=> bm!15788 (= call!15791 (getCurrentListMapNoExtraKeys!141 lt!73346 lt!73351 (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!142734 () Bool)

(assert (=> b!142734 (= e!92994 (ListLongMap!1748 Nil!1761))))

(declare-fun b!142735 () Bool)

(declare-fun lt!74834 () Unit!4395)

(declare-fun lt!74840 () Unit!4395)

(assert (=> b!142735 (= lt!74834 lt!74840)))

(declare-fun lt!74835 () ListLongMap!1747)

(declare-fun lt!74838 () (_ BitVec 64))

(declare-fun lt!74837 () V!3555)

(declare-fun lt!74839 () (_ BitVec 64))

(assert (=> b!142735 (not (contains!921 (+!174 lt!74835 (tuple2!2685 lt!74839 lt!74837)) lt!74838))))

(assert (=> b!142735 (= lt!74840 (addStillNotContains!66 lt!74835 lt!74839 lt!74837 lt!74838))))

(assert (=> b!142735 (= lt!74838 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142735 (= lt!74837 (get!1535 (select (arr!2315 lt!73351) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142735 (= lt!74839 (select (arr!2314 lt!73346) #b00000000000000000000000000000000))))

(assert (=> b!142735 (= lt!74835 call!15791)))

(assert (=> b!142735 (= e!92991 (+!174 call!15791 (tuple2!2685 (select (arr!2314 lt!73346) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 lt!73351) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142736 () Bool)

(assert (=> b!142736 (= e!92992 e!92990)))

(declare-fun c!26999 () Bool)

(assert (=> b!142736 (= c!26999 e!92989)))

(declare-fun res!68028 () Bool)

(assert (=> b!142736 (=> (not res!68028) (not e!92989))))

(assert (=> b!142736 (= res!68028 (bvslt #b00000000000000000000000000000000 (size!2586 lt!73346)))))

(declare-fun b!142737 () Bool)

(assert (=> b!142737 (= e!92993 (isEmpty!423 lt!74836))))

(assert (= (and d!45501 c!27001) b!142734))

(assert (= (and d!45501 (not c!27001)) b!142728))

(assert (= (and b!142728 c!27000) b!142735))

(assert (= (and b!142728 (not c!27000)) b!142733))

(assert (= (or b!142735 b!142733) bm!15788))

(assert (= (and d!45501 res!68031) b!142726))

(assert (= (and b!142726 res!68029) b!142736))

(assert (= (and b!142736 res!68028) b!142729))

(assert (= (and b!142736 c!26999) b!142732))

(assert (= (and b!142736 (not c!26999)) b!142730))

(assert (= (and b!142732 res!68030) b!142727))

(assert (= (and b!142730 c!26998) b!142731))

(assert (= (and b!142730 (not c!26998)) b!142737))

(declare-fun b_lambda!6413 () Bool)

(assert (=> (not b_lambda!6413) (not b!142727)))

(assert (=> b!142727 t!6366))

(declare-fun b_and!8921 () Bool)

(assert (= b_and!8917 (and (=> t!6366 result!4203) b_and!8921)))

(assert (=> b!142727 t!6368))

(declare-fun b_and!8923 () Bool)

(assert (= b_and!8919 (and (=> t!6368 result!4205) b_and!8923)))

(declare-fun b_lambda!6415 () Bool)

(assert (=> (not b_lambda!6415) (not b!142735)))

(assert (=> b!142735 t!6366))

(declare-fun b_and!8925 () Bool)

(assert (= b_and!8921 (and (=> t!6366 result!4203) b_and!8925)))

(assert (=> b!142735 t!6368))

(declare-fun b_and!8927 () Bool)

(assert (= b_and!8923 (and (=> t!6368 result!4205) b_and!8927)))

(declare-fun m!172307 () Bool)

(assert (=> b!142731 m!172307))

(assert (=> b!142729 m!168583))

(assert (=> b!142729 m!168583))

(assert (=> b!142729 m!168595))

(declare-fun m!172309 () Bool)

(assert (=> b!142735 m!172309))

(declare-fun m!172311 () Bool)

(assert (=> b!142735 m!172311))

(assert (=> b!142735 m!168583))

(declare-fun m!172313 () Bool)

(assert (=> b!142735 m!172313))

(declare-fun m!172315 () Bool)

(assert (=> b!142735 m!172315))

(assert (=> b!142735 m!166971))

(assert (=> b!142735 m!168587))

(assert (=> b!142735 m!168587))

(assert (=> b!142735 m!166971))

(assert (=> b!142735 m!168589))

(assert (=> b!142735 m!172309))

(assert (=> b!142732 m!168583))

(assert (=> b!142732 m!168583))

(declare-fun m!172317 () Bool)

(assert (=> b!142732 m!172317))

(assert (=> b!142728 m!168583))

(assert (=> b!142728 m!168583))

(assert (=> b!142728 m!168595))

(assert (=> b!142727 m!168583))

(assert (=> b!142727 m!168583))

(declare-fun m!172319 () Bool)

(assert (=> b!142727 m!172319))

(assert (=> b!142727 m!166971))

(assert (=> b!142727 m!168587))

(assert (=> b!142727 m!168587))

(assert (=> b!142727 m!166971))

(assert (=> b!142727 m!168589))

(declare-fun m!172321 () Bool)

(assert (=> b!142737 m!172321))

(declare-fun m!172323 () Bool)

(assert (=> d!45501 m!172323))

(assert (=> d!45501 m!166961))

(declare-fun m!172325 () Bool)

(assert (=> b!142726 m!172325))

(assert (=> bm!15788 m!172307))

(assert (=> b!140745 d!45501))

(declare-fun d!45503 () Bool)

(declare-fun e!92996 () Bool)

(assert (=> d!45503 e!92996))

(declare-fun res!68032 () Bool)

(assert (=> d!45503 (=> res!68032 e!92996)))

(declare-fun lt!74841 () Bool)

(assert (=> d!45503 (= res!68032 (not lt!74841))))

(declare-fun lt!74844 () Bool)

(assert (=> d!45503 (= lt!74841 lt!74844)))

(declare-fun lt!74842 () Unit!4395)

(declare-fun e!92995 () Unit!4395)

(assert (=> d!45503 (= lt!74842 e!92995)))

(declare-fun c!27002 () Bool)

(assert (=> d!45503 (= c!27002 lt!74844)))

(assert (=> d!45503 (= lt!74844 (containsKey!179 (toList!889 (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))) lt!73870))))

(assert (=> d!45503 (= (contains!921 (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16))) lt!73870) lt!74841)))

(declare-fun b!142738 () Bool)

(declare-fun lt!74843 () Unit!4395)

(assert (=> b!142738 (= e!92995 lt!74843)))

(assert (=> b!142738 (= lt!74843 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))) lt!73870))))

(assert (=> b!142738 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))) lt!73870))))

(declare-fun b!142739 () Bool)

(declare-fun Unit!4528 () Unit!4395)

(assert (=> b!142739 (= e!92995 Unit!4528)))

(declare-fun b!142740 () Bool)

(assert (=> b!142740 (= e!92996 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73872 (tuple2!2685 lt!73865 (zeroValue!2790 newMap!16)))) lt!73870)))))

(assert (= (and d!45503 c!27002) b!142738))

(assert (= (and d!45503 (not c!27002)) b!142739))

(assert (= (and d!45503 (not res!68032)) b!142740))

(declare-fun m!172327 () Bool)

(assert (=> d!45503 m!172327))

(declare-fun m!172329 () Bool)

(assert (=> b!142738 m!172329))

(declare-fun m!172331 () Bool)

(assert (=> b!142738 m!172331))

(assert (=> b!142738 m!172331))

(declare-fun m!172333 () Bool)

(assert (=> b!142738 m!172333))

(assert (=> b!142740 m!172331))

(assert (=> b!142740 m!172331))

(assert (=> b!142740 m!172333))

(assert (=> b!140745 d!45503))

(declare-fun d!45505 () Bool)

(assert (=> d!45505 (= (apply!120 lt!73868 lt!73879) (get!1538 (getValueByKey!175 (toList!889 lt!73868) lt!73879)))))

(declare-fun bs!6043 () Bool)

(assert (= bs!6043 d!45505))

(declare-fun m!172335 () Bool)

(assert (=> bs!6043 m!172335))

(assert (=> bs!6043 m!172335))

(declare-fun m!172337 () Bool)

(assert (=> bs!6043 m!172337))

(assert (=> b!140745 d!45505))

(declare-fun d!45507 () Bool)

(assert (=> d!45507 (= (apply!120 (+!174 lt!73868 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))) lt!73879) (apply!120 lt!73868 lt!73879))))

(declare-fun lt!74845 () Unit!4395)

(assert (=> d!45507 (= lt!74845 (choose!870 lt!73868 lt!73873 (zeroValue!2790 newMap!16) lt!73879))))

(declare-fun e!92997 () Bool)

(assert (=> d!45507 e!92997))

(declare-fun res!68033 () Bool)

(assert (=> d!45507 (=> (not res!68033) (not e!92997))))

(assert (=> d!45507 (= res!68033 (contains!921 lt!73868 lt!73879))))

(assert (=> d!45507 (= (addApplyDifferent!96 lt!73868 lt!73873 (zeroValue!2790 newMap!16) lt!73879) lt!74845)))

(declare-fun b!142741 () Bool)

(assert (=> b!142741 (= e!92997 (not (= lt!73879 lt!73873)))))

(assert (= (and d!45507 res!68033) b!142741))

(declare-fun m!172339 () Bool)

(assert (=> d!45507 m!172339))

(assert (=> d!45507 m!168619))

(assert (=> d!45507 m!168621))

(assert (=> d!45507 m!168619))

(assert (=> d!45507 m!168629))

(declare-fun m!172341 () Bool)

(assert (=> d!45507 m!172341))

(assert (=> b!140745 d!45507))

(declare-fun d!45509 () Bool)

(assert (=> d!45509 (= (apply!120 (+!174 lt!73874 (tuple2!2685 lt!73878 (minValue!2790 newMap!16))) lt!73880) (apply!120 lt!73874 lt!73880))))

(declare-fun lt!74846 () Unit!4395)

(assert (=> d!45509 (= lt!74846 (choose!870 lt!73874 lt!73878 (minValue!2790 newMap!16) lt!73880))))

(declare-fun e!92998 () Bool)

(assert (=> d!45509 e!92998))

(declare-fun res!68034 () Bool)

(assert (=> d!45509 (=> (not res!68034) (not e!92998))))

(assert (=> d!45509 (= res!68034 (contains!921 lt!73874 lt!73880))))

(assert (=> d!45509 (= (addApplyDifferent!96 lt!73874 lt!73878 (minValue!2790 newMap!16) lt!73880) lt!74846)))

(declare-fun b!142742 () Bool)

(assert (=> b!142742 (= e!92998 (not (= lt!73880 lt!73878)))))

(assert (= (and d!45509 res!68034) b!142742))

(declare-fun m!172343 () Bool)

(assert (=> d!45509 m!172343))

(assert (=> d!45509 m!168615))

(assert (=> d!45509 m!168617))

(assert (=> d!45509 m!168615))

(assert (=> d!45509 m!168613))

(declare-fun m!172345 () Bool)

(assert (=> d!45509 m!172345))

(assert (=> b!140745 d!45509))

(declare-fun d!45511 () Bool)

(assert (=> d!45511 (= (apply!120 (+!174 lt!73868 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16))) lt!73879) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73868 (tuple2!2685 lt!73873 (zeroValue!2790 newMap!16)))) lt!73879)))))

(declare-fun bs!6044 () Bool)

(assert (= bs!6044 d!45511))

(declare-fun m!172347 () Bool)

(assert (=> bs!6044 m!172347))

(assert (=> bs!6044 m!172347))

(declare-fun m!172349 () Bool)

(assert (=> bs!6044 m!172349))

(assert (=> b!140745 d!45511))

(declare-fun d!45513 () Bool)

(assert (=> d!45513 (= (apply!120 lt!73874 lt!73880) (get!1538 (getValueByKey!175 (toList!889 lt!73874) lt!73880)))))

(declare-fun bs!6045 () Bool)

(assert (= bs!6045 d!45513))

(declare-fun m!172351 () Bool)

(assert (=> bs!6045 m!172351))

(assert (=> bs!6045 m!172351))

(declare-fun m!172353 () Bool)

(assert (=> bs!6045 m!172353))

(assert (=> b!140745 d!45513))

(declare-fun d!45515 () Bool)

(assert (=> d!45515 (= (apply!120 lt!73877 lt!73869) (get!1538 (getValueByKey!175 (toList!889 lt!73877) lt!73869)))))

(declare-fun bs!6046 () Bool)

(assert (= bs!6046 d!45515))

(declare-fun m!172355 () Bool)

(assert (=> bs!6046 m!172355))

(assert (=> bs!6046 m!172355))

(declare-fun m!172357 () Bool)

(assert (=> bs!6046 m!172357))

(assert (=> b!140745 d!45515))

(declare-fun d!45517 () Bool)

(assert (=> d!45517 (= (apply!120 (+!174 lt!73877 (tuple2!2685 lt!73860 (minValue!2790 newMap!16))) lt!73869) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73877 (tuple2!2685 lt!73860 (minValue!2790 newMap!16)))) lt!73869)))))

(declare-fun bs!6047 () Bool)

(assert (= bs!6047 d!45517))

(declare-fun m!172359 () Bool)

(assert (=> bs!6047 m!172359))

(assert (=> bs!6047 m!172359))

(declare-fun m!172361 () Bool)

(assert (=> bs!6047 m!172361))

(assert (=> b!140745 d!45517))

(declare-fun d!45519 () Bool)

(assert (=> d!45519 (= (apply!120 (+!174 lt!73874 (tuple2!2685 lt!73878 (minValue!2790 newMap!16))) lt!73880) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73874 (tuple2!2685 lt!73878 (minValue!2790 newMap!16)))) lt!73880)))))

(declare-fun bs!6048 () Bool)

(assert (= bs!6048 d!45519))

(declare-fun m!172363 () Bool)

(assert (=> bs!6048 m!172363))

(assert (=> bs!6048 m!172363))

(declare-fun m!172365 () Bool)

(assert (=> bs!6048 m!172365))

(assert (=> b!140745 d!45519))

(declare-fun d!45521 () Bool)

(assert (=> d!45521 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73144) lt!73142)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73144) lt!73142))))))

(declare-fun bs!6049 () Bool)

(assert (= bs!6049 d!45521))

(assert (=> bs!6049 m!168663))

(declare-fun m!172367 () Bool)

(assert (=> bs!6049 m!172367))

(assert (=> b!140791 d!45521))

(declare-fun b!142745 () Bool)

(declare-fun e!93000 () Option!181)

(assert (=> b!142745 (= e!93000 (getValueByKey!175 (t!6360 (toList!889 lt!73144)) lt!73142))))

(declare-fun b!142744 () Bool)

(declare-fun e!92999 () Option!181)

(assert (=> b!142744 (= e!92999 e!93000)))

(declare-fun c!27004 () Bool)

(assert (=> b!142744 (= c!27004 (and ((_ is Cons!1760) (toList!889 lt!73144)) (not (= (_1!1352 (h!2367 (toList!889 lt!73144))) lt!73142))))))

(declare-fun b!142746 () Bool)

(assert (=> b!142746 (= e!93000 None!179)))

(declare-fun b!142743 () Bool)

(assert (=> b!142743 (= e!92999 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73144)))))))

(declare-fun d!45523 () Bool)

(declare-fun c!27003 () Bool)

(assert (=> d!45523 (= c!27003 (and ((_ is Cons!1760) (toList!889 lt!73144)) (= (_1!1352 (h!2367 (toList!889 lt!73144))) lt!73142)))))

(assert (=> d!45523 (= (getValueByKey!175 (toList!889 lt!73144) lt!73142) e!92999)))

(assert (= (and d!45523 c!27003) b!142743))

(assert (= (and d!45523 (not c!27003)) b!142744))

(assert (= (and b!142744 c!27004) b!142745))

(assert (= (and b!142744 (not c!27004)) b!142746))

(declare-fun m!172369 () Bool)

(assert (=> b!142745 m!172369))

(assert (=> b!140791 d!45523))

(declare-fun d!45525 () Bool)

(assert (=> d!45525 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!6050 () Bool)

(assert (= bs!6050 d!45525))

(assert (=> bs!6050 m!168041))

(declare-fun m!172371 () Bool)

(assert (=> bs!6050 m!172371))

(assert (=> b!141052 d!45525))

(assert (=> b!141052 d!45237))

(declare-fun d!45527 () Bool)

(assert (=> d!45527 (= (validKeyInArray!0 (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334)) (and (not (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2314 (array!4897 (store (arr!2314 (_keys!4699 newMap!16)) (ite c!26148 (index!3322 lt!73228) (index!3319 lt!73228)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) (size!2586 (_keys!4699 newMap!16)))) lt!73334) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!140724 d!45527))

(declare-fun d!45529 () Bool)

(declare-fun res!68035 () Bool)

(declare-fun e!93001 () Bool)

(assert (=> d!45529 (=> res!68035 e!93001)))

(assert (=> d!45529 (= res!68035 (and ((_ is Cons!1760) (toList!889 lt!73391)) (= (_1!1352 (h!2367 (toList!889 lt!73391))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45529 (= (containsKey!179 (toList!889 lt!73391) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!93001)))

(declare-fun b!142747 () Bool)

(declare-fun e!93002 () Bool)

(assert (=> b!142747 (= e!93001 e!93002)))

(declare-fun res!68036 () Bool)

(assert (=> b!142747 (=> (not res!68036) (not e!93002))))

(assert (=> b!142747 (= res!68036 (and (or (not ((_ is Cons!1760) (toList!889 lt!73391))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73391))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1760) (toList!889 lt!73391)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73391))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142748 () Bool)

(assert (=> b!142748 (= e!93002 (containsKey!179 (t!6360 (toList!889 lt!73391)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45529 (not res!68035)) b!142747))

(assert (= (and b!142747 res!68036) b!142748))

(assert (=> b!142748 m!166967))

(declare-fun m!172373 () Bool)

(assert (=> b!142748 m!172373))

(assert (=> d!43739 d!45529))

(declare-fun e!93004 () Option!181)

(declare-fun b!142751 () Bool)

(assert (=> b!142751 (= e!93004 (getValueByKey!175 (t!6360 (t!6360 lt!73536)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142750 () Bool)

(declare-fun e!93003 () Option!181)

(assert (=> b!142750 (= e!93003 e!93004)))

(declare-fun c!27006 () Bool)

(assert (=> b!142750 (= c!27006 (and ((_ is Cons!1760) (t!6360 lt!73536)) (not (= (_1!1352 (h!2367 (t!6360 lt!73536))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!142752 () Bool)

(assert (=> b!142752 (= e!93004 None!179)))

(declare-fun b!142749 () Bool)

(assert (=> b!142749 (= e!93003 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73536)))))))

(declare-fun c!27005 () Bool)

(declare-fun d!45531 () Bool)

(assert (=> d!45531 (= c!27005 (and ((_ is Cons!1760) (t!6360 lt!73536)) (= (_1!1352 (h!2367 (t!6360 lt!73536))) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45531 (= (getValueByKey!175 (t!6360 lt!73536) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!93003)))

(assert (= (and d!45531 c!27005) b!142749))

(assert (= (and d!45531 (not c!27005)) b!142750))

(assert (= (and b!142750 c!27006) b!142751))

(assert (= (and b!142750 (not c!27006)) b!142752))

(declare-fun m!172375 () Bool)

(assert (=> b!142751 m!172375))

(assert (=> b!140550 d!45531))

(declare-fun d!45533 () Bool)

(declare-fun res!68037 () Bool)

(declare-fun e!93005 () Bool)

(assert (=> d!45533 (=> res!68037 e!93005)))

(assert (=> d!45533 (= res!68037 (and ((_ is Cons!1760) lt!73617) (= (_1!1352 (h!2367 lt!73617)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45533 (= (containsKey!179 lt!73617 (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!93005)))

(declare-fun b!142753 () Bool)

(declare-fun e!93006 () Bool)

(assert (=> b!142753 (= e!93005 e!93006)))

(declare-fun res!68038 () Bool)

(assert (=> b!142753 (=> (not res!68038) (not e!93006))))

(assert (=> b!142753 (= res!68038 (and (or (not ((_ is Cons!1760) lt!73617)) (bvsle (_1!1352 (h!2367 lt!73617)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73617) (bvslt (_1!1352 (h!2367 lt!73617)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142754 () Bool)

(assert (=> b!142754 (= e!93006 (containsKey!179 (t!6360 lt!73617) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45533 (not res!68037)) b!142753))

(assert (= (and b!142753 res!68038) b!142754))

(declare-fun m!172377 () Bool)

(assert (=> b!142754 m!172377))

(assert (=> b!140327 d!45533))

(declare-fun d!45535 () Bool)

(declare-fun e!93008 () Bool)

(assert (=> d!45535 e!93008))

(declare-fun res!68039 () Bool)

(assert (=> d!45535 (=> res!68039 e!93008)))

(declare-fun lt!74847 () Bool)

(assert (=> d!45535 (= res!68039 (not lt!74847))))

(declare-fun lt!74850 () Bool)

(assert (=> d!45535 (= lt!74847 lt!74850)))

(declare-fun lt!74848 () Unit!4395)

(declare-fun e!93007 () Unit!4395)

(assert (=> d!45535 (= lt!74848 e!93007)))

(declare-fun c!27007 () Bool)

(assert (=> d!45535 (= c!27007 lt!74850)))

(assert (=> d!45535 (= lt!74850 (containsKey!179 (toList!889 lt!73681) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!45535 (= (contains!921 lt!73681 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!74847)))

(declare-fun b!142755 () Bool)

(declare-fun lt!74849 () Unit!4395)

(assert (=> b!142755 (= e!93007 lt!74849)))

(assert (=> b!142755 (= lt!74849 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73681) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> b!142755 (isDefined!129 (getValueByKey!175 (toList!889 lt!73681) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142756 () Bool)

(declare-fun Unit!4529 () Unit!4395)

(assert (=> b!142756 (= e!93007 Unit!4529)))

(declare-fun b!142757 () Bool)

(assert (=> b!142757 (= e!93008 (isDefined!129 (getValueByKey!175 (toList!889 lt!73681) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (= (and d!45535 c!27007) b!142755))

(assert (= (and d!45535 (not c!27007)) b!142756))

(assert (= (and d!45535 (not res!68039)) b!142757))

(declare-fun m!172379 () Bool)

(assert (=> d!45535 m!172379))

(declare-fun m!172381 () Bool)

(assert (=> b!142755 m!172381))

(assert (=> b!142755 m!167937))

(assert (=> b!142755 m!167937))

(declare-fun m!172383 () Bool)

(assert (=> b!142755 m!172383))

(assert (=> b!142757 m!167937))

(assert (=> b!142757 m!167937))

(assert (=> b!142757 m!172383))

(assert (=> d!43725 d!45535))

(declare-fun e!93010 () Option!181)

(declare-fun b!142760 () Bool)

(assert (=> b!142760 (= e!93010 (getValueByKey!175 (t!6360 lt!73682) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142759 () Bool)

(declare-fun e!93009 () Option!181)

(assert (=> b!142759 (= e!93009 e!93010)))

(declare-fun c!27009 () Bool)

(assert (=> b!142759 (= c!27009 (and ((_ is Cons!1760) lt!73682) (not (= (_1!1352 (h!2367 lt!73682)) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun b!142761 () Bool)

(assert (=> b!142761 (= e!93010 None!179)))

(declare-fun b!142758 () Bool)

(assert (=> b!142758 (= e!93009 (Some!180 (_2!1352 (h!2367 lt!73682))))))

(declare-fun c!27008 () Bool)

(declare-fun d!45537 () Bool)

(assert (=> d!45537 (= c!27008 (and ((_ is Cons!1760) lt!73682) (= (_1!1352 (h!2367 lt!73682)) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> d!45537 (= (getValueByKey!175 lt!73682 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) e!93009)))

(assert (= (and d!45537 c!27008) b!142758))

(assert (= (and d!45537 (not c!27008)) b!142759))

(assert (= (and b!142759 c!27009) b!142760))

(assert (= (and b!142759 (not c!27009)) b!142761))

(declare-fun m!172385 () Bool)

(assert (=> b!142760 m!172385))

(assert (=> d!43725 d!45537))

(declare-fun d!45539 () Bool)

(assert (=> d!45539 (= (getValueByKey!175 lt!73682 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) (Some!180 (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun lt!74851 () Unit!4395)

(assert (=> d!45539 (= lt!74851 (choose!873 lt!73682 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun e!93011 () Bool)

(assert (=> d!45539 e!93011))

(declare-fun res!68040 () Bool)

(assert (=> d!45539 (=> (not res!68040) (not e!93011))))

(assert (=> d!45539 (= res!68040 (isStrictlySorted!320 lt!73682))))

(assert (=> d!45539 (= (lemmaContainsTupThenGetReturnValue!91 lt!73682 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!74851)))

(declare-fun b!142762 () Bool)

(declare-fun res!68041 () Bool)

(assert (=> b!142762 (=> (not res!68041) (not e!93011))))

(assert (=> b!142762 (= res!68041 (containsKey!179 lt!73682 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142763 () Bool)

(assert (=> b!142763 (= e!93011 (contains!923 lt!73682 (tuple2!2685 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (= (and d!45539 res!68040) b!142762))

(assert (= (and b!142762 res!68041) b!142763))

(assert (=> d!45539 m!167931))

(declare-fun m!172387 () Bool)

(assert (=> d!45539 m!172387))

(declare-fun m!172389 () Bool)

(assert (=> d!45539 m!172389))

(declare-fun m!172391 () Bool)

(assert (=> b!142762 m!172391))

(declare-fun m!172393 () Bool)

(assert (=> b!142763 m!172393))

(assert (=> d!43725 d!45539))

(declare-fun d!45541 () Bool)

(declare-fun e!93012 () Bool)

(assert (=> d!45541 e!93012))

(declare-fun res!68043 () Bool)

(assert (=> d!45541 (=> (not res!68043) (not e!93012))))

(declare-fun lt!74852 () List!1764)

(assert (=> d!45541 (= res!68043 (isStrictlySorted!320 lt!74852))))

(declare-fun e!93014 () List!1764)

(assert (=> d!45541 (= lt!74852 e!93014)))

(declare-fun c!27010 () Bool)

(assert (=> d!45541 (= c!27010 (and ((_ is Cons!1760) (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)))) (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522))))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> d!45541 (isStrictlySorted!320 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522))))))

(assert (=> d!45541 (= (insertStrictlySorted!93 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))) lt!74852)))

(declare-fun b!142764 () Bool)

(assert (=> b!142764 (= e!93012 (contains!923 lt!74852 (tuple2!2685 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun e!93015 () List!1764)

(declare-fun call!15792 () List!1764)

(declare-fun bm!15789 () Bool)

(assert (=> bm!15789 (= call!15792 ($colon$colon!93 e!93015 (ite c!27010 (h!2367 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)))) (tuple2!2685 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))))

(declare-fun c!27013 () Bool)

(assert (=> bm!15789 (= c!27013 c!27010)))

(declare-fun b!142765 () Bool)

(assert (=> b!142765 (= e!93014 call!15792)))

(declare-fun b!142766 () Bool)

(assert (=> b!142766 (= e!93015 (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) (_2!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142767 () Bool)

(declare-fun e!93016 () List!1764)

(declare-fun call!15793 () List!1764)

(assert (=> b!142767 (= e!93016 call!15793)))

(declare-fun bm!15790 () Bool)

(assert (=> bm!15790 (= call!15793 call!15792)))

(declare-fun b!142768 () Bool)

(declare-fun e!93013 () List!1764)

(declare-fun call!15794 () List!1764)

(assert (=> b!142768 (= e!93013 call!15794)))

(declare-fun b!142769 () Bool)

(declare-fun c!27012 () Bool)

(assert (=> b!142769 (= c!27012 (and ((_ is Cons!1760) (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)))) (bvsgt (_1!1352 (h!2367 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522))))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(assert (=> b!142769 (= e!93016 e!93013)))

(declare-fun b!142770 () Bool)

(assert (=> b!142770 (= e!93014 e!93016)))

(declare-fun c!27011 () Bool)

(assert (=> b!142770 (= c!27011 (and ((_ is Cons!1760) (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)))) (= (_1!1352 (h!2367 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522))))) (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!142771 () Bool)

(assert (=> b!142771 (= e!93015 (ite c!27011 (t!6360 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)))) (ite c!27012 (Cons!1760 (h!2367 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522)))) (t!6360 (toList!889 (ite c!26158 call!15523 (ite c!26161 call!15525 call!15522))))) Nil!1761)))))

(declare-fun bm!15791 () Bool)

(assert (=> bm!15791 (= call!15794 call!15793)))

(declare-fun b!142772 () Bool)

(declare-fun res!68042 () Bool)

(assert (=> b!142772 (=> (not res!68042) (not e!93012))))

(assert (=> b!142772 (= res!68042 (containsKey!179 lt!74852 (_1!1352 (ite (or c!26158 c!26161) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(declare-fun b!142773 () Bool)

(assert (=> b!142773 (= e!93013 call!15794)))

(assert (= (and d!45541 c!27010) b!142765))

(assert (= (and d!45541 (not c!27010)) b!142770))

(assert (= (and b!142770 c!27011) b!142767))

(assert (= (and b!142770 (not c!27011)) b!142769))

(assert (= (and b!142769 c!27012) b!142773))

(assert (= (and b!142769 (not c!27012)) b!142768))

(assert (= (or b!142773 b!142768) bm!15791))

(assert (= (or b!142767 bm!15791) bm!15790))

(assert (= (or b!142765 bm!15790) bm!15789))

(assert (= (and bm!15789 c!27013) b!142766))

(assert (= (and bm!15789 (not c!27013)) b!142771))

(assert (= (and d!45541 res!68043) b!142772))

(assert (= (and b!142772 res!68042) b!142764))

(declare-fun m!172395 () Bool)

(assert (=> b!142764 m!172395))

(declare-fun m!172397 () Bool)

(assert (=> b!142772 m!172397))

(declare-fun m!172399 () Bool)

(assert (=> b!142766 m!172399))

(declare-fun m!172401 () Bool)

(assert (=> bm!15789 m!172401))

(declare-fun m!172403 () Bool)

(assert (=> d!45541 m!172403))

(declare-fun m!172405 () Bool)

(assert (=> d!45541 m!172405))

(assert (=> d!43725 d!45541))

(declare-fun lt!74853 () Bool)

(declare-fun d!45543 () Bool)

(assert (=> d!45543 (= lt!74853 (select (content!137 lt!73701) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!93017 () Bool)

(assert (=> d!45543 (= lt!74853 e!93017)))

(declare-fun res!68045 () Bool)

(assert (=> d!45543 (=> (not res!68045) (not e!93017))))

(assert (=> d!45543 (= res!68045 ((_ is Cons!1760) lt!73701))))

(assert (=> d!45543 (= (contains!923 lt!73701 (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!74853)))

(declare-fun b!142774 () Bool)

(declare-fun e!93018 () Bool)

(assert (=> b!142774 (= e!93017 e!93018)))

(declare-fun res!68044 () Bool)

(assert (=> b!142774 (=> res!68044 e!93018)))

(assert (=> b!142774 (= res!68044 (= (h!2367 lt!73701) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142775 () Bool)

(assert (=> b!142775 (= e!93018 (contains!923 (t!6360 lt!73701) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!45543 res!68045) b!142774))

(assert (= (and b!142774 (not res!68044)) b!142775))

(declare-fun m!172407 () Bool)

(assert (=> d!45543 m!172407))

(declare-fun m!172409 () Bool)

(assert (=> d!45543 m!172409))

(declare-fun m!172411 () Bool)

(assert (=> b!142775 m!172411))

(assert (=> b!140500 d!45543))

(declare-fun d!45545 () Bool)

(declare-fun lt!74854 () Bool)

(assert (=> d!45545 (= lt!74854 (select (content!137 (toList!889 lt!73574)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun e!93019 () Bool)

(assert (=> d!45545 (= lt!74854 e!93019)))

(declare-fun res!68047 () Bool)

(assert (=> d!45545 (=> (not res!68047) (not e!93019))))

(assert (=> d!45545 (= res!68047 ((_ is Cons!1760) (toList!889 lt!73574)))))

(assert (=> d!45545 (= (contains!923 (toList!889 lt!73574) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) lt!74854)))

(declare-fun b!142776 () Bool)

(declare-fun e!93020 () Bool)

(assert (=> b!142776 (= e!93019 e!93020)))

(declare-fun res!68046 () Bool)

(assert (=> b!142776 (=> res!68046 e!93020)))

(assert (=> b!142776 (= res!68046 (= (h!2367 (toList!889 lt!73574)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(declare-fun b!142777 () Bool)

(assert (=> b!142777 (= e!93020 (contains!923 (t!6360 (toList!889 lt!73574)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))

(assert (= (and d!45545 res!68047) b!142776))

(assert (= (and b!142776 (not res!68046)) b!142777))

(declare-fun m!172413 () Bool)

(assert (=> d!45545 m!172413))

(declare-fun m!172415 () Bool)

(assert (=> d!45545 m!172415))

(declare-fun m!172417 () Bool)

(assert (=> b!142777 m!172417))

(assert (=> b!140241 d!45545))

(declare-fun d!45547 () Bool)

(declare-fun res!68048 () Bool)

(declare-fun e!93021 () Bool)

(assert (=> d!45547 (=> res!68048 e!93021)))

(assert (=> d!45547 (= res!68048 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73257)))))

(assert (=> d!45547 (= (containsKey!179 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))) lt!73257) e!93021)))

(declare-fun b!142778 () Bool)

(declare-fun e!93022 () Bool)

(assert (=> b!142778 (= e!93021 e!93022)))

(declare-fun res!68049 () Bool)

(assert (=> b!142778 (=> (not res!68049) (not e!93022))))

(assert (=> b!142778 (= res!68049 (and (or (not ((_ is Cons!1760) (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) (bvsle (_1!1352 (h!2367 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73257)) ((_ is Cons!1760) (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) (bvslt (_1!1352 (h!2367 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16))))))) lt!73257)))))

(declare-fun b!142779 () Bool)

(assert (=> b!142779 (= e!93022 (containsKey!179 (t!6360 (toList!889 (+!174 lt!73259 (tuple2!2685 lt!73252 (ite (and c!26153 c!26151) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2790 newMap!16)))))) lt!73257))))

(assert (= (and d!45547 (not res!68048)) b!142778))

(assert (= (and b!142778 res!68049) b!142779))

(declare-fun m!172419 () Bool)

(assert (=> b!142779 m!172419))

(assert (=> d!44145 d!45547))

(declare-fun d!45549 () Bool)

(declare-fun e!93024 () Bool)

(assert (=> d!45549 e!93024))

(declare-fun res!68050 () Bool)

(assert (=> d!45549 (=> res!68050 e!93024)))

(declare-fun lt!74855 () Bool)

(assert (=> d!45549 (= res!68050 (not lt!74855))))

(declare-fun lt!74858 () Bool)

(assert (=> d!45549 (= lt!74855 lt!74858)))

(declare-fun lt!74856 () Unit!4395)

(declare-fun e!93023 () Unit!4395)

(assert (=> d!45549 (= lt!74856 e!93023)))

(declare-fun c!27014 () Bool)

(assert (=> d!45549 (= c!27014 lt!74858)))

(assert (=> d!45549 (= lt!74858 (containsKey!179 (toList!889 lt!73779) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45549 (= (contains!921 lt!73779 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74855)))

(declare-fun b!142780 () Bool)

(declare-fun lt!74857 () Unit!4395)

(assert (=> b!142780 (= e!93023 lt!74857)))

(assert (=> b!142780 (= lt!74857 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73779) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142780 (isDefined!129 (getValueByKey!175 (toList!889 lt!73779) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142781 () Bool)

(declare-fun Unit!4530 () Unit!4395)

(assert (=> b!142781 (= e!93023 Unit!4530)))

(declare-fun b!142782 () Bool)

(assert (=> b!142782 (= e!93024 (isDefined!129 (getValueByKey!175 (toList!889 lt!73779) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45549 c!27014) b!142780))

(assert (= (and d!45549 (not c!27014)) b!142781))

(assert (= (and d!45549 (not res!68050)) b!142782))

(declare-fun m!172421 () Bool)

(assert (=> d!45549 m!172421))

(declare-fun m!172423 () Bool)

(assert (=> b!142780 m!172423))

(assert (=> b!142780 m!169791))

(assert (=> b!142780 m!169791))

(declare-fun m!172425 () Bool)

(assert (=> b!142780 m!172425))

(assert (=> b!142782 m!169791))

(assert (=> b!142782 m!169791))

(assert (=> b!142782 m!172425))

(assert (=> bm!15620 d!45549))

(declare-fun b!142785 () Bool)

(declare-fun e!93026 () Option!181)

(assert (=> b!142785 (= e!93026 (getValueByKey!175 (t!6360 (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73152))))

(declare-fun b!142784 () Bool)

(declare-fun e!93025 () Option!181)

(assert (=> b!142784 (= e!93025 e!93026)))

(declare-fun c!27016 () Bool)

(assert (=> b!142784 (= c!27016 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73152))))))

(declare-fun b!142786 () Bool)

(assert (=> b!142786 (= e!93026 None!179)))

(declare-fun b!142783 () Bool)

(assert (=> b!142783 (= e!93025 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))))

(declare-fun c!27015 () Bool)

(declare-fun d!45551 () Bool)

(assert (=> d!45551 (= c!27015 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73152)))))

(assert (=> d!45551 (= (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73146 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73152) e!93025)))

(assert (= (and d!45551 c!27015) b!142783))

(assert (= (and d!45551 (not c!27015)) b!142784))

(assert (= (and b!142784 c!27016) b!142785))

(assert (= (and b!142784 (not c!27016)) b!142786))

(declare-fun m!172427 () Bool)

(assert (=> b!142785 m!172427))

(assert (=> b!140677 d!45551))

(declare-fun d!45553 () Bool)

(assert (=> d!45553 (= (isEmpty!422 (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) (not ((_ is Some!180) (getValueByKey!175 (toList!889 call!15508) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))))

(assert (=> d!43855 d!45553))

(declare-fun d!45555 () Bool)

(assert (=> d!45555 (= (get!1538 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3283 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43991 d!45555))

(declare-fun b!142789 () Bool)

(declare-fun e!93028 () Option!181)

(assert (=> b!142789 (= e!93028 (getValueByKey!175 (t!6360 (toList!889 lt!73450)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142788 () Bool)

(declare-fun e!93027 () Option!181)

(assert (=> b!142788 (= e!93027 e!93028)))

(declare-fun c!27018 () Bool)

(assert (=> b!142788 (= c!27018 (and ((_ is Cons!1760) (toList!889 lt!73450)) (not (= (_1!1352 (h!2367 (toList!889 lt!73450))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142790 () Bool)

(assert (=> b!142790 (= e!93028 None!179)))

(declare-fun b!142787 () Bool)

(assert (=> b!142787 (= e!93027 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73450)))))))

(declare-fun d!45557 () Bool)

(declare-fun c!27017 () Bool)

(assert (=> d!45557 (= c!27017 (and ((_ is Cons!1760) (toList!889 lt!73450)) (= (_1!1352 (h!2367 (toList!889 lt!73450))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45557 (= (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000) e!93027)))

(assert (= (and d!45557 c!27017) b!142787))

(assert (= (and d!45557 (not c!27017)) b!142788))

(assert (= (and b!142788 c!27018) b!142789))

(assert (= (and b!142788 (not c!27018)) b!142790))

(declare-fun m!172429 () Bool)

(assert (=> b!142789 m!172429))

(assert (=> d!43991 d!45557))

(declare-fun d!45559 () Bool)

(declare-fun res!68051 () Bool)

(declare-fun e!93029 () Bool)

(assert (=> d!45559 (=> res!68051 e!93029)))

(assert (=> d!45559 (= res!68051 (or ((_ is Nil!1761) lt!73701) ((_ is Nil!1761) (t!6360 lt!73701))))))

(assert (=> d!45559 (= (isStrictlySorted!320 lt!73701) e!93029)))

(declare-fun b!142791 () Bool)

(declare-fun e!93030 () Bool)

(assert (=> b!142791 (= e!93029 e!93030)))

(declare-fun res!68052 () Bool)

(assert (=> b!142791 (=> (not res!68052) (not e!93030))))

(assert (=> b!142791 (= res!68052 (bvslt (_1!1352 (h!2367 lt!73701)) (_1!1352 (h!2367 (t!6360 lt!73701)))))))

(declare-fun b!142792 () Bool)

(assert (=> b!142792 (= e!93030 (isStrictlySorted!320 (t!6360 lt!73701)))))

(assert (= (and d!45559 (not res!68051)) b!142791))

(assert (= (and b!142791 res!68052) b!142792))

(declare-fun m!172431 () Bool)

(assert (=> b!142792 m!172431))

(assert (=> d!43747 d!45559))

(declare-fun d!45561 () Bool)

(declare-fun res!68053 () Bool)

(declare-fun e!93031 () Bool)

(assert (=> d!45561 (=> res!68053 e!93031)))

(assert (=> d!45561 (= res!68053 (or ((_ is Nil!1761) (toList!889 (ite c!26153 call!15498 call!15508))) ((_ is Nil!1761) (t!6360 (toList!889 (ite c!26153 call!15498 call!15508))))))))

(assert (=> d!45561 (= (isStrictlySorted!320 (toList!889 (ite c!26153 call!15498 call!15508))) e!93031)))

(declare-fun b!142793 () Bool)

(declare-fun e!93032 () Bool)

(assert (=> b!142793 (= e!93031 e!93032)))

(declare-fun res!68054 () Bool)

(assert (=> b!142793 (=> (not res!68054) (not e!93032))))

(assert (=> b!142793 (= res!68054 (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508)))) (_1!1352 (h!2367 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))))))))

(declare-fun b!142794 () Bool)

(assert (=> b!142794 (= e!93032 (isStrictlySorted!320 (t!6360 (toList!889 (ite c!26153 call!15498 call!15508)))))))

(assert (= (and d!45561 (not res!68053)) b!142793))

(assert (= (and b!142793 res!68054) b!142794))

(assert (=> b!142794 m!171993))

(assert (=> d!43747 d!45561))

(declare-fun bm!15792 () Bool)

(declare-fun call!15800 () ListLongMap!1747)

(declare-fun call!15799 () ListLongMap!1747)

(assert (=> bm!15792 (= call!15800 call!15799)))

(declare-fun b!142795 () Bool)

(declare-fun e!93039 () ListLongMap!1747)

(declare-fun call!15795 () ListLongMap!1747)

(assert (=> b!142795 (= e!93039 call!15795)))

(declare-fun bm!15793 () Bool)

(declare-fun call!15796 () ListLongMap!1747)

(assert (=> bm!15793 (= call!15796 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73341)) (_values!2923 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341)) (extraKeys!2695 (_2!1353 lt!73341)) (zeroValue!2790 (_2!1353 lt!73341)) (minValue!2790 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73341))))))

(declare-fun b!142796 () Bool)

(declare-fun e!93037 () Unit!4395)

(declare-fun lt!74876 () Unit!4395)

(assert (=> b!142796 (= e!93037 lt!74876)))

(declare-fun lt!74872 () ListLongMap!1747)

(assert (=> b!142796 (= lt!74872 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73341)) (_values!2923 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341)) (extraKeys!2695 (_2!1353 lt!73341)) (zeroValue!2790 (_2!1353 lt!73341)) (minValue!2790 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73341))))))

(declare-fun lt!74865 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74865 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74870 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74870 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000))))

(declare-fun lt!74867 () Unit!4395)

(assert (=> b!142796 (= lt!74867 (addStillContains!96 lt!74872 lt!74865 (zeroValue!2790 (_2!1353 lt!73341)) lt!74870))))

(assert (=> b!142796 (contains!921 (+!174 lt!74872 (tuple2!2685 lt!74865 (zeroValue!2790 (_2!1353 lt!73341)))) lt!74870)))

(declare-fun lt!74875 () Unit!4395)

(assert (=> b!142796 (= lt!74875 lt!74867)))

(declare-fun lt!74874 () ListLongMap!1747)

(assert (=> b!142796 (= lt!74874 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73341)) (_values!2923 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341)) (extraKeys!2695 (_2!1353 lt!73341)) (zeroValue!2790 (_2!1353 lt!73341)) (minValue!2790 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73341))))))

(declare-fun lt!74878 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74878 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74880 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74880 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000))))

(declare-fun lt!74871 () Unit!4395)

(assert (=> b!142796 (= lt!74871 (addApplyDifferent!96 lt!74874 lt!74878 (minValue!2790 (_2!1353 lt!73341)) lt!74880))))

(assert (=> b!142796 (= (apply!120 (+!174 lt!74874 (tuple2!2685 lt!74878 (minValue!2790 (_2!1353 lt!73341)))) lt!74880) (apply!120 lt!74874 lt!74880))))

(declare-fun lt!74859 () Unit!4395)

(assert (=> b!142796 (= lt!74859 lt!74871)))

(declare-fun lt!74868 () ListLongMap!1747)

(assert (=> b!142796 (= lt!74868 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73341)) (_values!2923 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341)) (extraKeys!2695 (_2!1353 lt!73341)) (zeroValue!2790 (_2!1353 lt!73341)) (minValue!2790 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73341))))))

(declare-fun lt!74873 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74873 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74879 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74879 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000))))

(declare-fun lt!74866 () Unit!4395)

(assert (=> b!142796 (= lt!74866 (addApplyDifferent!96 lt!74868 lt!74873 (zeroValue!2790 (_2!1353 lt!73341)) lt!74879))))

(assert (=> b!142796 (= (apply!120 (+!174 lt!74868 (tuple2!2685 lt!74873 (zeroValue!2790 (_2!1353 lt!73341)))) lt!74879) (apply!120 lt!74868 lt!74879))))

(declare-fun lt!74864 () Unit!4395)

(assert (=> b!142796 (= lt!74864 lt!74866)))

(declare-fun lt!74877 () ListLongMap!1747)

(assert (=> b!142796 (= lt!74877 (getCurrentListMapNoExtraKeys!141 (_keys!4699 (_2!1353 lt!73341)) (_values!2923 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341)) (extraKeys!2695 (_2!1353 lt!73341)) (zeroValue!2790 (_2!1353 lt!73341)) (minValue!2790 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73341))))))

(declare-fun lt!74860 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74860 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!74869 () (_ BitVec 64))

(assert (=> b!142796 (= lt!74869 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000))))

(assert (=> b!142796 (= lt!74876 (addApplyDifferent!96 lt!74877 lt!74860 (minValue!2790 (_2!1353 lt!73341)) lt!74869))))

(assert (=> b!142796 (= (apply!120 (+!174 lt!74877 (tuple2!2685 lt!74860 (minValue!2790 (_2!1353 lt!73341)))) lt!74869) (apply!120 lt!74877 lt!74869))))

(declare-fun b!142797 () Bool)

(declare-fun res!68059 () Bool)

(declare-fun e!93033 () Bool)

(assert (=> b!142797 (=> (not res!68059) (not e!93033))))

(declare-fun e!93043 () Bool)

(assert (=> b!142797 (= res!68059 e!93043)))

(declare-fun res!68056 () Bool)

(assert (=> b!142797 (=> res!68056 e!93043)))

(declare-fun e!93040 () Bool)

(assert (=> b!142797 (= res!68056 (not e!93040))))

(declare-fun res!68055 () Bool)

(assert (=> b!142797 (=> (not res!68055) (not e!93040))))

(assert (=> b!142797 (= res!68055 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(declare-fun b!142798 () Bool)

(assert (=> b!142798 (= e!93039 call!15800)))

(declare-fun b!142799 () Bool)

(declare-fun e!93035 () ListLongMap!1747)

(declare-fun e!93042 () ListLongMap!1747)

(assert (=> b!142799 (= e!93035 e!93042)))

(declare-fun c!27023 () Bool)

(assert (=> b!142799 (= c!27023 (and (not (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!15798 () ListLongMap!1747)

(declare-fun c!27020 () Bool)

(declare-fun bm!15794 () Bool)

(assert (=> bm!15794 (= call!15799 (+!174 (ite c!27020 call!15796 (ite c!27023 call!15798 call!15795)) (ite (or c!27020 c!27023) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (_2!1353 lt!73341))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73341))))))))

(declare-fun b!142801 () Bool)

(declare-fun Unit!4531 () Unit!4395)

(assert (=> b!142801 (= e!93037 Unit!4531)))

(declare-fun b!142802 () Bool)

(declare-fun e!93044 () Bool)

(declare-fun e!93036 () Bool)

(assert (=> b!142802 (= e!93044 e!93036)))

(declare-fun res!68060 () Bool)

(declare-fun call!15797 () Bool)

(assert (=> b!142802 (= res!68060 call!15797)))

(assert (=> b!142802 (=> (not res!68060) (not e!93036))))

(declare-fun b!142803 () Bool)

(declare-fun e!93045 () Bool)

(assert (=> b!142803 (= e!93033 e!93045)))

(declare-fun c!27019 () Bool)

(assert (=> b!142803 (= c!27019 (not (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!142804 () Bool)

(assert (=> b!142804 (= e!93040 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(declare-fun b!142805 () Bool)

(declare-fun lt!74863 () ListLongMap!1747)

(assert (=> b!142805 (= e!93036 (= (apply!120 lt!74863 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2790 (_2!1353 lt!73341))))))

(declare-fun bm!15795 () Bool)

(assert (=> bm!15795 (= call!15795 call!15798)))

(declare-fun b!142806 () Bool)

(declare-fun call!15801 () Bool)

(assert (=> b!142806 (= e!93045 (not call!15801))))

(declare-fun b!142807 () Bool)

(declare-fun e!93041 () Bool)

(assert (=> b!142807 (= e!93041 (= (apply!120 lt!74863 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2790 (_2!1353 lt!73341))))))

(declare-fun bm!15796 () Bool)

(assert (=> bm!15796 (= call!15798 call!15796)))

(declare-fun b!142808 () Bool)

(declare-fun e!93034 () Bool)

(assert (=> b!142808 (= e!93043 e!93034)))

(declare-fun res!68063 () Bool)

(assert (=> b!142808 (=> (not res!68063) (not e!93034))))

(assert (=> b!142808 (= res!68063 (contains!921 lt!74863 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(assert (=> b!142808 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(declare-fun bm!15797 () Bool)

(assert (=> bm!15797 (= call!15797 (contains!921 lt!74863 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142809 () Bool)

(assert (=> b!142809 (= e!93034 (= (apply!120 lt!74863 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)) (get!1535 (select (arr!2315 (_values!2923 (_2!1353 lt!73341))) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 (_2!1353 lt!73341)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!142809 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2587 (_values!2923 (_2!1353 lt!73341)))))))

(assert (=> b!142809 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(declare-fun b!142810 () Bool)

(declare-fun e!93038 () Bool)

(assert (=> b!142810 (= e!93038 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (_2!1353 lt!73341))) #b00000000000000000000000000000000)))))

(declare-fun b!142811 () Bool)

(declare-fun c!27024 () Bool)

(assert (=> b!142811 (= c!27024 (and (not (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!142811 (= e!93042 e!93039)))

(declare-fun b!142812 () Bool)

(assert (=> b!142812 (= e!93035 (+!174 call!15799 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (_2!1353 lt!73341)))))))

(declare-fun d!45563 () Bool)

(assert (=> d!45563 e!93033))

(declare-fun res!68057 () Bool)

(assert (=> d!45563 (=> (not res!68057) (not e!93033))))

(assert (=> d!45563 (= res!68057 (or (bvsge #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))))

(declare-fun lt!74862 () ListLongMap!1747)

(assert (=> d!45563 (= lt!74863 lt!74862)))

(declare-fun lt!74861 () Unit!4395)

(assert (=> d!45563 (= lt!74861 e!93037)))

(declare-fun c!27022 () Bool)

(assert (=> d!45563 (= c!27022 e!93038)))

(declare-fun res!68061 () Bool)

(assert (=> d!45563 (=> (not res!68061) (not e!93038))))

(assert (=> d!45563 (= res!68061 (bvslt #b00000000000000000000000000000000 (size!2586 (_keys!4699 (_2!1353 lt!73341)))))))

(assert (=> d!45563 (= lt!74862 e!93035)))

(assert (=> d!45563 (= c!27020 (and (not (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!45563 (validMask!0 (mask!7280 (_2!1353 lt!73341)))))

(assert (=> d!45563 (= (getCurrentListMap!555 (_keys!4699 (_2!1353 lt!73341)) (_values!2923 (_2!1353 lt!73341)) (mask!7280 (_2!1353 lt!73341)) (extraKeys!2695 (_2!1353 lt!73341)) (zeroValue!2790 (_2!1353 lt!73341)) (minValue!2790 (_2!1353 lt!73341)) #b00000000000000000000000000000000 (defaultEntry!2940 (_2!1353 lt!73341))) lt!74863)))

(declare-fun b!142800 () Bool)

(assert (=> b!142800 (= e!93042 call!15800)))

(declare-fun bm!15798 () Bool)

(assert (=> bm!15798 (= call!15801 (contains!921 lt!74863 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142813 () Bool)

(assert (=> b!142813 (= e!93045 e!93041)))

(declare-fun res!68062 () Bool)

(assert (=> b!142813 (= res!68062 call!15801)))

(assert (=> b!142813 (=> (not res!68062) (not e!93041))))

(declare-fun b!142814 () Bool)

(assert (=> b!142814 (= e!93044 (not call!15797))))

(declare-fun b!142815 () Bool)

(declare-fun res!68058 () Bool)

(assert (=> b!142815 (=> (not res!68058) (not e!93033))))

(assert (=> b!142815 (= res!68058 e!93044)))

(declare-fun c!27021 () Bool)

(assert (=> b!142815 (= c!27021 (not (= (bvand (extraKeys!2695 (_2!1353 lt!73341)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (= (and d!45563 c!27020) b!142812))

(assert (= (and d!45563 (not c!27020)) b!142799))

(assert (= (and b!142799 c!27023) b!142800))

(assert (= (and b!142799 (not c!27023)) b!142811))

(assert (= (and b!142811 c!27024) b!142798))

(assert (= (and b!142811 (not c!27024)) b!142795))

(assert (= (or b!142798 b!142795) bm!15795))

(assert (= (or b!142800 bm!15795) bm!15796))

(assert (= (or b!142800 b!142798) bm!15792))

(assert (= (or b!142812 bm!15796) bm!15793))

(assert (= (or b!142812 bm!15792) bm!15794))

(assert (= (and d!45563 res!68061) b!142810))

(assert (= (and d!45563 c!27022) b!142796))

(assert (= (and d!45563 (not c!27022)) b!142801))

(assert (= (and d!45563 res!68057) b!142797))

(assert (= (and b!142797 res!68055) b!142804))

(assert (= (and b!142797 (not res!68056)) b!142808))

(assert (= (and b!142808 res!68063) b!142809))

(assert (= (and b!142797 res!68059) b!142815))

(assert (= (and b!142815 c!27021) b!142802))

(assert (= (and b!142815 (not c!27021)) b!142814))

(assert (= (and b!142802 res!68060) b!142805))

(assert (= (or b!142802 b!142814) bm!15797))

(assert (= (and b!142815 res!68058) b!142803))

(assert (= (and b!142803 c!27019) b!142813))

(assert (= (and b!142803 (not c!27019)) b!142806))

(assert (= (and b!142813 res!68062) b!142807))

(assert (= (or b!142813 b!142806) bm!15798))

(declare-fun b_lambda!6417 () Bool)

(assert (=> (not b_lambda!6417) (not b!142809)))

(declare-fun tb!2573 () Bool)

(declare-fun t!6375 () Bool)

(assert (=> (and b!139567 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 (_2!1353 lt!73341))) t!6375) tb!2573))

(declare-fun result!4211 () Bool)

(assert (=> tb!2573 (= result!4211 tp_is_empty!2931)))

(assert (=> b!142809 t!6375))

(declare-fun b_and!8929 () Bool)

(assert (= b_and!8925 (and (=> t!6375 result!4211) b_and!8929)))

(declare-fun t!6377 () Bool)

(declare-fun tb!2575 () Bool)

(assert (=> (and b!139573 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (_2!1353 lt!73341))) t!6377) tb!2575))

(declare-fun result!4213 () Bool)

(assert (= result!4213 result!4211))

(assert (=> b!142809 t!6377))

(declare-fun b_and!8931 () Bool)

(assert (= b_and!8927 (and (=> t!6377 result!4213) b_and!8931)))

(declare-fun m!172433 () Bool)

(assert (=> b!142812 m!172433))

(declare-fun m!172435 () Bool)

(assert (=> bm!15793 m!172435))

(assert (=> d!45563 m!171969))

(declare-fun m!172437 () Bool)

(assert (=> b!142807 m!172437))

(declare-fun m!172439 () Bool)

(assert (=> bm!15794 m!172439))

(assert (=> b!142809 m!169707))

(assert (=> b!142809 m!169707))

(declare-fun m!172441 () Bool)

(assert (=> b!142809 m!172441))

(declare-fun m!172443 () Bool)

(assert (=> b!142809 m!172443))

(declare-fun m!172445 () Bool)

(assert (=> b!142809 m!172445))

(assert (=> b!142809 m!172443))

(declare-fun m!172447 () Bool)

(assert (=> b!142809 m!172447))

(assert (=> b!142809 m!172445))

(declare-fun m!172449 () Bool)

(assert (=> bm!15797 m!172449))

(declare-fun m!172451 () Bool)

(assert (=> b!142805 m!172451))

(assert (=> b!142804 m!169707))

(assert (=> b!142804 m!169707))

(assert (=> b!142804 m!169711))

(assert (=> b!142808 m!169707))

(assert (=> b!142808 m!169707))

(declare-fun m!172453 () Bool)

(assert (=> b!142808 m!172453))

(assert (=> b!142810 m!169707))

(assert (=> b!142810 m!169707))

(assert (=> b!142810 m!169711))

(declare-fun m!172455 () Bool)

(assert (=> bm!15798 m!172455))

(declare-fun m!172457 () Bool)

(assert (=> b!142796 m!172457))

(declare-fun m!172459 () Bool)

(assert (=> b!142796 m!172459))

(declare-fun m!172461 () Bool)

(assert (=> b!142796 m!172461))

(declare-fun m!172463 () Bool)

(assert (=> b!142796 m!172463))

(declare-fun m!172465 () Bool)

(assert (=> b!142796 m!172465))

(declare-fun m!172467 () Bool)

(assert (=> b!142796 m!172467))

(declare-fun m!172469 () Bool)

(assert (=> b!142796 m!172469))

(declare-fun m!172471 () Bool)

(assert (=> b!142796 m!172471))

(assert (=> b!142796 m!172471))

(declare-fun m!172473 () Bool)

(assert (=> b!142796 m!172473))

(assert (=> b!142796 m!172435))

(declare-fun m!172475 () Bool)

(assert (=> b!142796 m!172475))

(declare-fun m!172477 () Bool)

(assert (=> b!142796 m!172477))

(assert (=> b!142796 m!172463))

(declare-fun m!172479 () Bool)

(assert (=> b!142796 m!172479))

(declare-fun m!172481 () Bool)

(assert (=> b!142796 m!172481))

(assert (=> b!142796 m!169707))

(declare-fun m!172483 () Bool)

(assert (=> b!142796 m!172483))

(assert (=> b!142796 m!172457))

(declare-fun m!172485 () Bool)

(assert (=> b!142796 m!172485))

(assert (=> b!142796 m!172475))

(assert (=> d!43715 d!45563))

(declare-fun d!45565 () Bool)

(declare-fun res!68064 () Bool)

(declare-fun e!93046 () Bool)

(assert (=> d!45565 (=> res!68064 e!93046)))

(assert (=> d!45565 (= res!68064 (and ((_ is Cons!1760) (toList!889 lt!73542)) (= (_1!1352 (h!2367 (toList!889 lt!73542))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45565 (= (containsKey!179 (toList!889 lt!73542) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!93046)))

(declare-fun b!142816 () Bool)

(declare-fun e!93047 () Bool)

(assert (=> b!142816 (= e!93046 e!93047)))

(declare-fun res!68065 () Bool)

(assert (=> b!142816 (=> (not res!68065) (not e!93047))))

(assert (=> b!142816 (= res!68065 (and (or (not ((_ is Cons!1760) (toList!889 lt!73542))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73542))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) (toList!889 lt!73542)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73542))) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142817 () Bool)

(assert (=> b!142817 (= e!93047 (containsKey!179 (t!6360 (toList!889 lt!73542)) (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45565 (not res!68064)) b!142816))

(assert (= (and b!142816 res!68065) b!142817))

(declare-fun m!172487 () Bool)

(assert (=> b!142817 m!172487))

(assert (=> d!43877 d!45565))

(declare-fun d!45567 () Bool)

(declare-fun res!68066 () Bool)

(declare-fun e!93048 () Bool)

(assert (=> d!45567 (=> res!68066 e!93048)))

(assert (=> d!45567 (= res!68066 (and ((_ is Cons!1760) (toList!889 lt!73482)) (= (_1!1352 (h!2367 (toList!889 lt!73482))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45567 (= (containsKey!179 (toList!889 lt!73482) #b0000000000000000000000000000000000000000000000000000000000000000) e!93048)))

(declare-fun b!142818 () Bool)

(declare-fun e!93049 () Bool)

(assert (=> b!142818 (= e!93048 e!93049)))

(declare-fun res!68067 () Bool)

(assert (=> b!142818 (=> (not res!68067) (not e!93049))))

(assert (=> b!142818 (= res!68067 (and (or (not ((_ is Cons!1760) (toList!889 lt!73482))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73482))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73482)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73482))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142819 () Bool)

(assert (=> b!142819 (= e!93049 (containsKey!179 (t!6360 (toList!889 lt!73482)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45567 (not res!68066)) b!142818))

(assert (= (and b!142818 res!68067) b!142819))

(declare-fun m!172489 () Bool)

(assert (=> b!142819 m!172489))

(assert (=> d!43615 d!45567))

(assert (=> b!140377 d!45421))

(declare-fun b!142822 () Bool)

(declare-fun e!93051 () Option!181)

(assert (=> b!142822 (= e!93051 (getValueByKey!175 (t!6360 (t!6360 lt!73379)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142821 () Bool)

(declare-fun e!93050 () Option!181)

(assert (=> b!142821 (= e!93050 e!93051)))

(declare-fun c!27026 () Bool)

(assert (=> b!142821 (= c!27026 (and ((_ is Cons!1760) (t!6360 lt!73379)) (not (= (_1!1352 (h!2367 (t!6360 lt!73379))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))

(declare-fun b!142823 () Bool)

(assert (=> b!142823 (= e!93051 None!179)))

(declare-fun b!142820 () Bool)

(assert (=> b!142820 (= e!93050 (Some!180 (_2!1352 (h!2367 (t!6360 lt!73379)))))))

(declare-fun d!45569 () Bool)

(declare-fun c!27025 () Bool)

(assert (=> d!45569 (= c!27025 (and ((_ is Cons!1760) (t!6360 lt!73379)) (= (_1!1352 (h!2367 (t!6360 lt!73379))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45569 (= (getValueByKey!175 (t!6360 lt!73379) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!93050)))

(assert (= (and d!45569 c!27025) b!142820))

(assert (= (and d!45569 (not c!27025)) b!142821))

(assert (= (and b!142821 c!27026) b!142822))

(assert (= (and b!142821 (not c!27026)) b!142823))

(declare-fun m!172491 () Bool)

(assert (=> b!142822 m!172491))

(assert (=> b!140468 d!45569))

(declare-fun d!45571 () Bool)

(declare-fun e!93052 () Bool)

(assert (=> d!45571 e!93052))

(declare-fun res!68069 () Bool)

(assert (=> d!45571 (=> (not res!68069) (not e!93052))))

(declare-fun lt!74883 () ListLongMap!1747)

(assert (=> d!45571 (= res!68069 (contains!921 lt!74883 (_1!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74884 () List!1764)

(assert (=> d!45571 (= lt!74883 (ListLongMap!1748 lt!74884))))

(declare-fun lt!74881 () Unit!4395)

(declare-fun lt!74882 () Unit!4395)

(assert (=> d!45571 (= lt!74881 lt!74882)))

(assert (=> d!45571 (= (getValueByKey!175 lt!74884 (_1!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45571 (= lt!74882 (lemmaContainsTupThenGetReturnValue!91 lt!74884 (_1!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45571 (= lt!74884 (insertStrictlySorted!93 (toList!889 lt!73788) (_1!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45571 (= (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))) lt!74883)))

(declare-fun b!142824 () Bool)

(declare-fun res!68068 () Bool)

(assert (=> b!142824 (=> (not res!68068) (not e!93052))))

(assert (=> b!142824 (= res!68068 (= (getValueByKey!175 (toList!889 lt!74883) (_1!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142825 () Bool)

(assert (=> b!142825 (= e!93052 (contains!923 (toList!889 lt!74883) (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45571 res!68069) b!142824))

(assert (= (and b!142824 res!68068) b!142825))

(declare-fun m!172493 () Bool)

(assert (=> d!45571 m!172493))

(declare-fun m!172495 () Bool)

(assert (=> d!45571 m!172495))

(declare-fun m!172497 () Bool)

(assert (=> d!45571 m!172497))

(declare-fun m!172499 () Bool)

(assert (=> d!45571 m!172499))

(declare-fun m!172501 () Bool)

(assert (=> b!142824 m!172501))

(declare-fun m!172503 () Bool)

(assert (=> b!142825 m!172503))

(assert (=> b!140608 d!45571))

(declare-fun d!45573 () Bool)

(assert (=> d!45573 (= (apply!120 lt!73790 lt!73796) (get!1538 (getValueByKey!175 (toList!889 lt!73790) lt!73796)))))

(declare-fun bs!6051 () Bool)

(assert (= bs!6051 d!45573))

(declare-fun m!172505 () Bool)

(assert (=> bs!6051 m!172505))

(assert (=> bs!6051 m!172505))

(declare-fun m!172507 () Bool)

(assert (=> bs!6051 m!172507))

(assert (=> b!140608 d!45573))

(declare-fun d!45575 () Bool)

(assert (=> d!45575 (= (apply!120 (+!174 lt!73793 (tuple2!2685 lt!73776 (minValue!2790 newMap!16))) lt!73785) (apply!120 lt!73793 lt!73785))))

(declare-fun lt!74885 () Unit!4395)

(assert (=> d!45575 (= lt!74885 (choose!870 lt!73793 lt!73776 (minValue!2790 newMap!16) lt!73785))))

(declare-fun e!93053 () Bool)

(assert (=> d!45575 e!93053))

(declare-fun res!68070 () Bool)

(assert (=> d!45575 (=> (not res!68070) (not e!93053))))

(assert (=> d!45575 (= res!68070 (contains!921 lt!73793 lt!73785))))

(assert (=> d!45575 (= (addApplyDifferent!96 lt!73793 lt!73776 (minValue!2790 newMap!16) lt!73785) lt!74885)))

(declare-fun b!142826 () Bool)

(assert (=> b!142826 (= e!93053 (not (= lt!73785 lt!73776)))))

(assert (= (and d!45575 res!68070) b!142826))

(declare-fun m!172509 () Bool)

(assert (=> d!45575 m!172509))

(assert (=> d!45575 m!168345))

(assert (=> d!45575 m!168347))

(assert (=> d!45575 m!168345))

(assert (=> d!45575 m!168371))

(declare-fun m!172511 () Bool)

(assert (=> d!45575 m!172511))

(assert (=> b!140608 d!45575))

(declare-fun d!45577 () Bool)

(assert (=> d!45577 (contains!921 (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))) lt!73786)))

(declare-fun lt!74886 () Unit!4395)

(assert (=> d!45577 (= lt!74886 (choose!871 lt!73788 lt!73781 (zeroValue!2790 newMap!16) lt!73786))))

(assert (=> d!45577 (contains!921 lt!73788 lt!73786)))

(assert (=> d!45577 (= (addStillContains!96 lt!73788 lt!73781 (zeroValue!2790 newMap!16) lt!73786) lt!74886)))

(declare-fun bs!6052 () Bool)

(assert (= bs!6052 d!45577))

(assert (=> bs!6052 m!168351))

(assert (=> bs!6052 m!168351))

(assert (=> bs!6052 m!168353))

(declare-fun m!172513 () Bool)

(assert (=> bs!6052 m!172513))

(declare-fun m!172515 () Bool)

(assert (=> bs!6052 m!172515))

(assert (=> b!140608 d!45577))

(declare-fun d!45579 () Bool)

(declare-fun e!93054 () Bool)

(assert (=> d!45579 e!93054))

(declare-fun res!68072 () Bool)

(assert (=> d!45579 (=> (not res!68072) (not e!93054))))

(declare-fun lt!74889 () ListLongMap!1747)

(assert (=> d!45579 (= res!68072 (contains!921 lt!74889 (_1!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16)))))))

(declare-fun lt!74890 () List!1764)

(assert (=> d!45579 (= lt!74889 (ListLongMap!1748 lt!74890))))

(declare-fun lt!74887 () Unit!4395)

(declare-fun lt!74888 () Unit!4395)

(assert (=> d!45579 (= lt!74887 lt!74888)))

(assert (=> d!45579 (= (getValueByKey!175 lt!74890 (_1!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45579 (= lt!74888 (lemmaContainsTupThenGetReturnValue!91 lt!74890 (_1!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45579 (= lt!74890 (insertStrictlySorted!93 (toList!889 lt!73784) (_1!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16)))))))

(assert (=> d!45579 (= (+!174 lt!73784 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))) lt!74889)))

(declare-fun b!142827 () Bool)

(declare-fun res!68071 () Bool)

(assert (=> b!142827 (=> (not res!68071) (not e!93054))))

(assert (=> b!142827 (= res!68071 (= (getValueByKey!175 (toList!889 lt!74889) (_1!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))))))))

(declare-fun b!142828 () Bool)

(assert (=> b!142828 (= e!93054 (contains!923 (toList!889 lt!74889) (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45579 res!68072) b!142827))

(assert (= (and b!142827 res!68071) b!142828))

(declare-fun m!172517 () Bool)

(assert (=> d!45579 m!172517))

(declare-fun m!172519 () Bool)

(assert (=> d!45579 m!172519))

(declare-fun m!172521 () Bool)

(assert (=> d!45579 m!172521))

(declare-fun m!172523 () Bool)

(assert (=> d!45579 m!172523))

(declare-fun m!172525 () Bool)

(assert (=> b!142827 m!172525))

(declare-fun m!172527 () Bool)

(assert (=> b!142828 m!172527))

(assert (=> b!140608 d!45579))

(declare-fun d!45581 () Bool)

(assert (=> d!45581 (= (apply!120 (+!174 lt!73790 (tuple2!2685 lt!73794 (minValue!2790 newMap!16))) lt!73796) (apply!120 lt!73790 lt!73796))))

(declare-fun lt!74891 () Unit!4395)

(assert (=> d!45581 (= lt!74891 (choose!870 lt!73790 lt!73794 (minValue!2790 newMap!16) lt!73796))))

(declare-fun e!93055 () Bool)

(assert (=> d!45581 e!93055))

(declare-fun res!68073 () Bool)

(assert (=> d!45581 (=> (not res!68073) (not e!93055))))

(assert (=> d!45581 (= res!68073 (contains!921 lt!73790 lt!73796))))

(assert (=> d!45581 (= (addApplyDifferent!96 lt!73790 lt!73794 (minValue!2790 newMap!16) lt!73796) lt!74891)))

(declare-fun b!142829 () Bool)

(assert (=> b!142829 (= e!93055 (not (= lt!73796 lt!73794)))))

(assert (= (and d!45581 res!68073) b!142829))

(declare-fun m!172529 () Bool)

(assert (=> d!45581 m!172529))

(assert (=> d!45581 m!168359))

(assert (=> d!45581 m!168361))

(assert (=> d!45581 m!168359))

(assert (=> d!45581 m!168357))

(declare-fun m!172531 () Bool)

(assert (=> d!45581 m!172531))

(assert (=> b!140608 d!45581))

(declare-fun d!45583 () Bool)

(assert (=> d!45583 (= (apply!120 (+!174 lt!73784 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))) lt!73795) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73784 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16)))) lt!73795)))))

(declare-fun bs!6053 () Bool)

(assert (= bs!6053 d!45583))

(declare-fun m!172533 () Bool)

(assert (=> bs!6053 m!172533))

(assert (=> bs!6053 m!172533))

(declare-fun m!172535 () Bool)

(assert (=> bs!6053 m!172535))

(assert (=> b!140608 d!45583))

(declare-fun d!45585 () Bool)

(assert (=> d!45585 (= (apply!120 (+!174 lt!73793 (tuple2!2685 lt!73776 (minValue!2790 newMap!16))) lt!73785) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73793 (tuple2!2685 lt!73776 (minValue!2790 newMap!16)))) lt!73785)))))

(declare-fun bs!6054 () Bool)

(assert (= bs!6054 d!45585))

(declare-fun m!172537 () Bool)

(assert (=> bs!6054 m!172537))

(assert (=> bs!6054 m!172537))

(declare-fun m!172539 () Bool)

(assert (=> bs!6054 m!172539))

(assert (=> b!140608 d!45585))

(declare-fun d!45587 () Bool)

(assert (=> d!45587 (= (apply!120 lt!73784 lt!73795) (get!1538 (getValueByKey!175 (toList!889 lt!73784) lt!73795)))))

(declare-fun bs!6055 () Bool)

(assert (= bs!6055 d!45587))

(declare-fun m!172541 () Bool)

(assert (=> bs!6055 m!172541))

(assert (=> bs!6055 m!172541))

(declare-fun m!172543 () Bool)

(assert (=> bs!6055 m!172543))

(assert (=> b!140608 d!45587))

(declare-fun d!45589 () Bool)

(assert (=> d!45589 (= (apply!120 (+!174 lt!73790 (tuple2!2685 lt!73794 (minValue!2790 newMap!16))) lt!73796) (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73790 (tuple2!2685 lt!73794 (minValue!2790 newMap!16)))) lt!73796)))))

(declare-fun bs!6056 () Bool)

(assert (= bs!6056 d!45589))

(declare-fun m!172545 () Bool)

(assert (=> bs!6056 m!172545))

(assert (=> bs!6056 m!172545))

(declare-fun m!172547 () Bool)

(assert (=> bs!6056 m!172547))

(assert (=> b!140608 d!45589))

(declare-fun d!45591 () Bool)

(declare-fun e!93056 () Bool)

(assert (=> d!45591 e!93056))

(declare-fun res!68075 () Bool)

(assert (=> d!45591 (=> (not res!68075) (not e!93056))))

(declare-fun lt!74894 () ListLongMap!1747)

(assert (=> d!45591 (= res!68075 (contains!921 lt!74894 (_1!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16)))))))

(declare-fun lt!74895 () List!1764)

(assert (=> d!45591 (= lt!74894 (ListLongMap!1748 lt!74895))))

(declare-fun lt!74892 () Unit!4395)

(declare-fun lt!74893 () Unit!4395)

(assert (=> d!45591 (= lt!74892 lt!74893)))

(assert (=> d!45591 (= (getValueByKey!175 lt!74895 (_1!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16)))))))

(assert (=> d!45591 (= lt!74893 (lemmaContainsTupThenGetReturnValue!91 lt!74895 (_1!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16)))))))

(assert (=> d!45591 (= lt!74895 (insertStrictlySorted!93 (toList!889 lt!73790) (_1!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16)))))))

(assert (=> d!45591 (= (+!174 lt!73790 (tuple2!2685 lt!73794 (minValue!2790 newMap!16))) lt!74894)))

(declare-fun b!142830 () Bool)

(declare-fun res!68074 () Bool)

(assert (=> b!142830 (=> (not res!68074) (not e!93056))))

(assert (=> b!142830 (= res!68074 (= (getValueByKey!175 (toList!889 lt!74894) (_1!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73794 (minValue!2790 newMap!16))))))))

(declare-fun b!142831 () Bool)

(assert (=> b!142831 (= e!93056 (contains!923 (toList!889 lt!74894) (tuple2!2685 lt!73794 (minValue!2790 newMap!16))))))

(assert (= (and d!45591 res!68075) b!142830))

(assert (= (and b!142830 res!68074) b!142831))

(declare-fun m!172549 () Bool)

(assert (=> d!45591 m!172549))

(declare-fun m!172551 () Bool)

(assert (=> d!45591 m!172551))

(declare-fun m!172553 () Bool)

(assert (=> d!45591 m!172553))

(declare-fun m!172555 () Bool)

(assert (=> d!45591 m!172555))

(declare-fun m!172557 () Bool)

(assert (=> b!142830 m!172557))

(declare-fun m!172559 () Bool)

(assert (=> b!142831 m!172559))

(assert (=> b!140608 d!45591))

(declare-fun d!45593 () Bool)

(declare-fun e!93057 () Bool)

(assert (=> d!45593 e!93057))

(declare-fun res!68077 () Bool)

(assert (=> d!45593 (=> (not res!68077) (not e!93057))))

(declare-fun lt!74898 () ListLongMap!1747)

(assert (=> d!45593 (= res!68077 (contains!921 lt!74898 (_1!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16)))))))

(declare-fun lt!74899 () List!1764)

(assert (=> d!45593 (= lt!74898 (ListLongMap!1748 lt!74899))))

(declare-fun lt!74896 () Unit!4395)

(declare-fun lt!74897 () Unit!4395)

(assert (=> d!45593 (= lt!74896 lt!74897)))

(assert (=> d!45593 (= (getValueByKey!175 lt!74899 (_1!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16)))))))

(assert (=> d!45593 (= lt!74897 (lemmaContainsTupThenGetReturnValue!91 lt!74899 (_1!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16)))))))

(assert (=> d!45593 (= lt!74899 (insertStrictlySorted!93 (toList!889 lt!73793) (_1!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16)))))))

(assert (=> d!45593 (= (+!174 lt!73793 (tuple2!2685 lt!73776 (minValue!2790 newMap!16))) lt!74898)))

(declare-fun b!142832 () Bool)

(declare-fun res!68076 () Bool)

(assert (=> b!142832 (=> (not res!68076) (not e!93057))))

(assert (=> b!142832 (= res!68076 (= (getValueByKey!175 (toList!889 lt!74898) (_1!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73776 (minValue!2790 newMap!16))))))))

(declare-fun b!142833 () Bool)

(assert (=> b!142833 (= e!93057 (contains!923 (toList!889 lt!74898) (tuple2!2685 lt!73776 (minValue!2790 newMap!16))))))

(assert (= (and d!45593 res!68077) b!142832))

(assert (= (and b!142832 res!68076) b!142833))

(declare-fun m!172561 () Bool)

(assert (=> d!45593 m!172561))

(declare-fun m!172563 () Bool)

(assert (=> d!45593 m!172563))

(declare-fun m!172565 () Bool)

(assert (=> d!45593 m!172565))

(declare-fun m!172567 () Bool)

(assert (=> d!45593 m!172567))

(declare-fun m!172569 () Bool)

(assert (=> b!142832 m!172569))

(declare-fun m!172571 () Bool)

(assert (=> b!142833 m!172571))

(assert (=> b!140608 d!45593))

(declare-fun d!45595 () Bool)

(assert (=> d!45595 (= (apply!120 lt!73793 lt!73785) (get!1538 (getValueByKey!175 (toList!889 lt!73793) lt!73785)))))

(declare-fun bs!6057 () Bool)

(assert (= bs!6057 d!45595))

(declare-fun m!172573 () Bool)

(assert (=> bs!6057 m!172573))

(assert (=> bs!6057 m!172573))

(declare-fun m!172575 () Bool)

(assert (=> bs!6057 m!172575))

(assert (=> b!140608 d!45595))

(declare-fun d!45597 () Bool)

(declare-fun e!93059 () Bool)

(assert (=> d!45597 e!93059))

(declare-fun res!68078 () Bool)

(assert (=> d!45597 (=> res!68078 e!93059)))

(declare-fun lt!74900 () Bool)

(assert (=> d!45597 (= res!68078 (not lt!74900))))

(declare-fun lt!74903 () Bool)

(assert (=> d!45597 (= lt!74900 lt!74903)))

(declare-fun lt!74901 () Unit!4395)

(declare-fun e!93058 () Unit!4395)

(assert (=> d!45597 (= lt!74901 e!93058)))

(declare-fun c!27027 () Bool)

(assert (=> d!45597 (= c!27027 lt!74903)))

(assert (=> d!45597 (= lt!74903 (containsKey!179 (toList!889 (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))) lt!73786))))

(assert (=> d!45597 (= (contains!921 (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16))) lt!73786) lt!74900)))

(declare-fun b!142834 () Bool)

(declare-fun lt!74902 () Unit!4395)

(assert (=> b!142834 (= e!93058 lt!74902)))

(assert (=> b!142834 (= lt!74902 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))) lt!73786))))

(assert (=> b!142834 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))) lt!73786))))

(declare-fun b!142835 () Bool)

(declare-fun Unit!4532 () Unit!4395)

(assert (=> b!142835 (= e!93058 Unit!4532)))

(declare-fun b!142836 () Bool)

(assert (=> b!142836 (= e!93059 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73788 (tuple2!2685 lt!73781 (zeroValue!2790 newMap!16)))) lt!73786)))))

(assert (= (and d!45597 c!27027) b!142834))

(assert (= (and d!45597 (not c!27027)) b!142835))

(assert (= (and d!45597 (not res!68078)) b!142836))

(declare-fun m!172577 () Bool)

(assert (=> d!45597 m!172577))

(declare-fun m!172579 () Bool)

(assert (=> b!142834 m!172579))

(declare-fun m!172581 () Bool)

(assert (=> b!142834 m!172581))

(assert (=> b!142834 m!172581))

(declare-fun m!172583 () Bool)

(assert (=> b!142834 m!172583))

(assert (=> b!142836 m!172581))

(assert (=> b!142836 m!172581))

(assert (=> b!142836 m!172583))

(assert (=> b!140608 d!45597))

(declare-fun d!45599 () Bool)

(assert (=> d!45599 (= (apply!120 (+!174 lt!73784 (tuple2!2685 lt!73789 (zeroValue!2790 newMap!16))) lt!73795) (apply!120 lt!73784 lt!73795))))

(declare-fun lt!74904 () Unit!4395)

(assert (=> d!45599 (= lt!74904 (choose!870 lt!73784 lt!73789 (zeroValue!2790 newMap!16) lt!73795))))

(declare-fun e!93060 () Bool)

(assert (=> d!45599 e!93060))

(declare-fun res!68079 () Bool)

(assert (=> d!45599 (=> (not res!68079) (not e!93060))))

(assert (=> d!45599 (= res!68079 (contains!921 lt!73784 lt!73795))))

(assert (=> d!45599 (= (addApplyDifferent!96 lt!73784 lt!73789 (zeroValue!2790 newMap!16) lt!73795) lt!74904)))

(declare-fun b!142837 () Bool)

(assert (=> b!142837 (= e!93060 (not (= lt!73795 lt!73789)))))

(assert (= (and d!45599 res!68079) b!142837))

(declare-fun m!172585 () Bool)

(assert (=> d!45599 m!172585))

(assert (=> d!45599 m!168363))

(assert (=> d!45599 m!168365))

(assert (=> d!45599 m!168363))

(assert (=> d!45599 m!168373))

(declare-fun m!172587 () Bool)

(assert (=> d!45599 m!172587))

(assert (=> b!140608 d!45599))

(assert (=> b!140608 d!45423))

(declare-fun b!142838 () Bool)

(declare-fun res!68081 () Bool)

(declare-fun e!93065 () Bool)

(assert (=> b!142838 (=> (not res!68081) (not e!93065))))

(declare-fun lt!74907 () ListLongMap!1747)

(assert (=> b!142838 (= res!68081 (not (contains!921 lt!74907 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142839 () Bool)

(assert (=> b!142839 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> b!142839 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2587 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))))))))

(declare-fun e!93061 () Bool)

(assert (=> b!142839 (= e!93061 (= (apply!120 lt!74907 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!142840 () Bool)

(declare-fun e!93067 () ListLongMap!1747)

(declare-fun e!93064 () ListLongMap!1747)

(assert (=> b!142840 (= e!93067 e!93064)))

(declare-fun c!27030 () Bool)

(assert (=> b!142840 (= c!27030 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!142841 () Bool)

(declare-fun e!93062 () Bool)

(assert (=> b!142841 (= e!93062 (validKeyInArray!0 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142841 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!45601 () Bool)

(assert (=> d!45601 e!93065))

(declare-fun res!68083 () Bool)

(assert (=> d!45601 (=> (not res!68083) (not e!93065))))

(assert (=> d!45601 (= res!68083 (not (contains!921 lt!74907 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45601 (= lt!74907 e!93067)))

(declare-fun c!27031 () Bool)

(assert (=> d!45601 (= c!27031 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(assert (=> d!45601 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45601 (= (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)) lt!74907)))

(declare-fun b!142842 () Bool)

(declare-fun e!93063 () Bool)

(declare-fun e!93066 () Bool)

(assert (=> b!142842 (= e!93063 e!93066)))

(declare-fun c!27028 () Bool)

(assert (=> b!142842 (= c!27028 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142843 () Bool)

(assert (=> b!142843 (= e!93066 (= lt!74907 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16))))))

(declare-fun b!142844 () Bool)

(assert (=> b!142844 (= e!93063 e!93061)))

(assert (=> b!142844 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun res!68082 () Bool)

(assert (=> b!142844 (= res!68082 (contains!921 lt!74907 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!142844 (=> (not res!68082) (not e!93061))))

(declare-fun b!142845 () Bool)

(declare-fun call!15802 () ListLongMap!1747)

(assert (=> b!142845 (= e!93064 call!15802)))

(declare-fun bm!15799 () Bool)

(assert (=> bm!15799 (= call!15802 (getCurrentListMapNoExtraKeys!141 (_keys!4699 newMap!16) (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16))) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2940 newMap!16)))))

(declare-fun b!142846 () Bool)

(assert (=> b!142846 (= e!93067 (ListLongMap!1748 Nil!1761))))

(declare-fun b!142847 () Bool)

(declare-fun lt!74905 () Unit!4395)

(declare-fun lt!74911 () Unit!4395)

(assert (=> b!142847 (= lt!74905 lt!74911)))

(declare-fun lt!74908 () V!3555)

(declare-fun lt!74909 () (_ BitVec 64))

(declare-fun lt!74906 () ListLongMap!1747)

(declare-fun lt!74910 () (_ BitVec 64))

(assert (=> b!142847 (not (contains!921 (+!174 lt!74906 (tuple2!2685 lt!74910 lt!74908)) lt!74909))))

(assert (=> b!142847 (= lt!74911 (addStillNotContains!66 lt!74906 lt!74910 lt!74908 lt!74909))))

(assert (=> b!142847 (= lt!74909 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!142847 (= lt!74908 (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!142847 (= lt!74910 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!142847 (= lt!74906 call!15802)))

(assert (=> b!142847 (= e!93064 (+!174 call!15802 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1535 (select (arr!2315 (array!4899 (store (arr!2315 (_values!2923 newMap!16)) (index!3320 lt!73228) (ValueCellFull!1122 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2587 (_values!2923 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142848 () Bool)

(assert (=> b!142848 (= e!93065 e!93063)))

(declare-fun c!27029 () Bool)

(assert (=> b!142848 (= c!27029 e!93062)))

(declare-fun res!68080 () Bool)

(assert (=> b!142848 (=> (not res!68080) (not e!93062))))

(assert (=> b!142848 (= res!68080 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!142849 () Bool)

(assert (=> b!142849 (= e!93066 (isEmpty!423 lt!74907))))

(assert (= (and d!45601 c!27031) b!142846))

(assert (= (and d!45601 (not c!27031)) b!142840))

(assert (= (and b!142840 c!27030) b!142847))

(assert (= (and b!142840 (not c!27030)) b!142845))

(assert (= (or b!142847 b!142845) bm!15799))

(assert (= (and d!45601 res!68083) b!142838))

(assert (= (and b!142838 res!68081) b!142848))

(assert (= (and b!142848 res!68080) b!142841))

(assert (= (and b!142848 c!27029) b!142844))

(assert (= (and b!142848 (not c!27029)) b!142842))

(assert (= (and b!142844 res!68082) b!142839))

(assert (= (and b!142842 c!27028) b!142843))

(assert (= (and b!142842 (not c!27028)) b!142849))

(declare-fun b_lambda!6419 () Bool)

(assert (=> (not b_lambda!6419) (not b!142839)))

(assert (=> b!142839 t!6366))

(declare-fun b_and!8933 () Bool)

(assert (= b_and!8929 (and (=> t!6366 result!4203) b_and!8933)))

(assert (=> b!142839 t!6368))

(declare-fun b_and!8935 () Bool)

(assert (= b_and!8931 (and (=> t!6368 result!4205) b_and!8935)))

(declare-fun b_lambda!6421 () Bool)

(assert (=> (not b_lambda!6421) (not b!142847)))

(assert (=> b!142847 t!6366))

(declare-fun b_and!8937 () Bool)

(assert (= b_and!8933 (and (=> t!6366 result!4203) b_and!8937)))

(assert (=> b!142847 t!6368))

(declare-fun b_and!8939 () Bool)

(assert (= b_and!8935 (and (=> t!6368 result!4205) b_and!8939)))

(declare-fun m!172589 () Bool)

(assert (=> b!142843 m!172589))

(assert (=> b!142841 m!167699))

(assert (=> b!142841 m!167699))

(assert (=> b!142841 m!167707))

(declare-fun m!172591 () Bool)

(assert (=> b!142847 m!172591))

(declare-fun m!172593 () Bool)

(assert (=> b!142847 m!172593))

(assert (=> b!142847 m!167699))

(declare-fun m!172595 () Bool)

(assert (=> b!142847 m!172595))

(declare-fun m!172597 () Bool)

(assert (=> b!142847 m!172597))

(assert (=> b!142847 m!166971))

(declare-fun m!172599 () Bool)

(assert (=> b!142847 m!172599))

(assert (=> b!142847 m!172599))

(assert (=> b!142847 m!166971))

(declare-fun m!172601 () Bool)

(assert (=> b!142847 m!172601))

(assert (=> b!142847 m!172591))

(assert (=> b!142844 m!167699))

(assert (=> b!142844 m!167699))

(declare-fun m!172603 () Bool)

(assert (=> b!142844 m!172603))

(assert (=> b!142840 m!167699))

(assert (=> b!142840 m!167699))

(assert (=> b!142840 m!167707))

(assert (=> b!142839 m!167699))

(assert (=> b!142839 m!167699))

(declare-fun m!172605 () Bool)

(assert (=> b!142839 m!172605))

(assert (=> b!142839 m!166971))

(assert (=> b!142839 m!172599))

(assert (=> b!142839 m!172599))

(assert (=> b!142839 m!166971))

(assert (=> b!142839 m!172601))

(declare-fun m!172607 () Bool)

(assert (=> b!142849 m!172607))

(declare-fun m!172609 () Bool)

(assert (=> d!45601 m!172609))

(assert (=> d!45601 m!166961))

(declare-fun m!172611 () Bool)

(assert (=> b!142838 m!172611))

(assert (=> bm!15799 m!172589))

(assert (=> bm!15643 d!45601))

(declare-fun d!45603 () Bool)

(assert (=> d!45603 (= (isEmpty!423 lt!73593) (isEmpty!424 (toList!889 lt!73593)))))

(declare-fun bs!6058 () Bool)

(assert (= bs!6058 d!45603))

(declare-fun m!172613 () Bool)

(assert (=> bs!6058 m!172613))

(assert (=> b!140271 d!45603))

(assert (=> b!140403 d!43605))

(declare-fun d!45605 () Bool)

(declare-fun lt!74912 () Bool)

(assert (=> d!45605 (= lt!74912 (select (content!137 (toList!889 lt!73800)) (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!93068 () Bool)

(assert (=> d!45605 (= lt!74912 e!93068)))

(declare-fun res!68085 () Bool)

(assert (=> d!45605 (=> (not res!68085) (not e!93068))))

(assert (=> d!45605 (= res!68085 ((_ is Cons!1760) (toList!889 lt!73800)))))

(assert (=> d!45605 (= (contains!923 (toList!889 lt!73800) (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74912)))

(declare-fun b!142850 () Bool)

(declare-fun e!93069 () Bool)

(assert (=> b!142850 (= e!93068 e!93069)))

(declare-fun res!68084 () Bool)

(assert (=> b!142850 (=> res!68084 e!93069)))

(assert (=> b!142850 (= res!68084 (= (h!2367 (toList!889 lt!73800)) (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142851 () Bool)

(assert (=> b!142851 (= e!93069 (contains!923 (t!6360 (toList!889 lt!73800)) (ite (or c!26235 c!26238) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (= (and d!45605 res!68085) b!142850))

(assert (= (and b!142850 (not res!68084)) b!142851))

(declare-fun m!172615 () Bool)

(assert (=> d!45605 m!172615))

(declare-fun m!172617 () Bool)

(assert (=> d!45605 m!172617))

(declare-fun m!172619 () Bool)

(assert (=> b!142851 m!172619))

(assert (=> b!140643 d!45605))

(declare-fun b!142854 () Bool)

(declare-fun e!93071 () Option!181)

(assert (=> b!142854 (= e!93071 (getValueByKey!175 (t!6360 (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) lt!73141))))

(declare-fun b!142853 () Bool)

(declare-fun e!93070 () Option!181)

(assert (=> b!142853 (= e!93070 e!93071)))

(declare-fun c!27033 () Bool)

(assert (=> b!142853 (= c!27033 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73141))))))

(declare-fun b!142855 () Bool)

(assert (=> b!142855 (= e!93071 None!179)))

(declare-fun b!142852 () Bool)

(assert (=> b!142852 (= e!93070 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))))))

(declare-fun c!27032 () Bool)

(declare-fun d!45607 () Bool)

(assert (=> d!45607 (= c!27032 (and ((_ is Cons!1760) (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (= (_1!1352 (h!2367 (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))) lt!73141)))))

(assert (=> d!45607 (= (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73149 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!73141) e!93070)))

(assert (= (and d!45607 c!27032) b!142852))

(assert (= (and d!45607 (not c!27032)) b!142853))

(assert (= (and b!142853 c!27033) b!142854))

(assert (= (and b!142853 (not c!27033)) b!142855))

(declare-fun m!172621 () Bool)

(assert (=> b!142854 m!172621))

(assert (=> b!141055 d!45607))

(declare-fun d!45609 () Bool)

(declare-fun res!68086 () Bool)

(declare-fun e!93072 () Bool)

(assert (=> d!45609 (=> res!68086 e!93072)))

(assert (=> d!45609 (= res!68086 (and ((_ is Cons!1760) (toList!889 lt!73482)) (= (_1!1352 (h!2367 (toList!889 lt!73482))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!45609 (= (containsKey!179 (toList!889 lt!73482) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) e!93072)))

(declare-fun b!142856 () Bool)

(declare-fun e!93073 () Bool)

(assert (=> b!142856 (= e!93072 e!93073)))

(declare-fun res!68087 () Bool)

(assert (=> b!142856 (=> (not res!68087) (not e!93073))))

(assert (=> b!142856 (= res!68087 (and (or (not ((_ is Cons!1760) (toList!889 lt!73482))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73482))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1760) (toList!889 lt!73482)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73482))) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!142857 () Bool)

(assert (=> b!142857 (= e!93073 (containsKey!179 (t!6360 (toList!889 lt!73482)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!45609 (not res!68086)) b!142856))

(assert (= (and b!142856 res!68087) b!142857))

(assert (=> b!142857 m!166967))

(declare-fun m!172623 () Bool)

(assert (=> b!142857 m!172623))

(assert (=> d!44153 d!45609))

(declare-fun b!142860 () Bool)

(declare-fun e!93075 () Option!181)

(assert (=> b!142860 (= e!93075 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73146))) lt!73152))))

(declare-fun b!142859 () Bool)

(declare-fun e!93074 () Option!181)

(assert (=> b!142859 (= e!93074 e!93075)))

(declare-fun c!27035 () Bool)

(assert (=> b!142859 (= c!27035 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73146))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73146)))) lt!73152))))))

(declare-fun b!142861 () Bool)

(assert (=> b!142861 (= e!93075 None!179)))

(declare-fun b!142858 () Bool)

(assert (=> b!142858 (= e!93074 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73146))))))))

(declare-fun d!45611 () Bool)

(declare-fun c!27034 () Bool)

(assert (=> d!45611 (= c!27034 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73146))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73146)))) lt!73152)))))

(assert (=> d!45611 (= (getValueByKey!175 (t!6360 (toList!889 lt!73146)) lt!73152) e!93074)))

(assert (= (and d!45611 c!27034) b!142858))

(assert (= (and d!45611 (not c!27034)) b!142859))

(assert (= (and b!142859 c!27035) b!142860))

(assert (= (and b!142859 (not c!27035)) b!142861))

(declare-fun m!172625 () Bool)

(assert (=> b!142860 m!172625))

(assert (=> b!140979 d!45611))

(declare-fun d!45613 () Bool)

(assert (=> d!45613 (= (apply!120 lt!73941 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73941) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6059 () Bool)

(assert (= bs!6059 d!45613))

(assert (=> bs!6059 m!170735))

(assert (=> bs!6059 m!170735))

(declare-fun m!172627 () Bool)

(assert (=> bs!6059 m!172627))

(assert (=> b!140861 d!45613))

(declare-fun d!45615 () Bool)

(assert (=> d!45615 (isDefined!129 (getValueByKey!175 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun lt!74913 () Unit!4395)

(assert (=> d!45615 (= lt!74913 (choose!868 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!93076 () Bool)

(assert (=> d!45615 e!93076))

(declare-fun res!68088 () Bool)

(assert (=> d!45615 (=> (not res!68088) (not e!93076))))

(assert (=> d!45615 (= res!68088 (isStrictlySorted!320 (toList!889 lt!73378)))))

(assert (=> d!45615 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74913)))

(declare-fun b!142862 () Bool)

(assert (=> b!142862 (= e!93076 (containsKey!179 (toList!889 lt!73378) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45615 res!68088) b!142862))

(assert (=> d!45615 m!167127))

(assert (=> d!45615 m!167127))

(assert (=> d!45615 m!167945))

(declare-fun m!172629 () Bool)

(assert (=> d!45615 m!172629))

(declare-fun m!172631 () Bool)

(assert (=> d!45615 m!172631))

(assert (=> b!142862 m!167941))

(assert (=> b!140463 d!45615))

(assert (=> b!140463 d!45335))

(assert (=> b!140463 d!43875))

(declare-fun d!45617 () Bool)

(assert (=> d!45617 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) lt!73467)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) lt!73467)))))

(assert (=> d!43821 d!45617))

(declare-fun e!93078 () Option!181)

(declare-fun b!142865 () Bool)

(assert (=> b!142865 (= e!93078 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))) lt!73467))))

(declare-fun b!142864 () Bool)

(declare-fun e!93077 () Option!181)

(assert (=> b!142864 (= e!93077 e!93078)))

(declare-fun c!27037 () Bool)

(assert (=> b!142864 (= c!27037 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))) lt!73467))))))

(declare-fun b!142866 () Bool)

(assert (=> b!142866 (= e!93078 None!179)))

(declare-fun b!142863 () Bool)

(assert (=> b!142863 (= e!93077 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))))))))

(declare-fun c!27036 () Bool)

(declare-fun d!45619 () Bool)

(assert (=> d!45619 (= c!27036 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))))) lt!73467)))))

(assert (=> d!45619 (= (getValueByKey!175 (toList!889 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16)))) lt!73467) e!93077)))

(assert (= (and d!45619 c!27036) b!142863))

(assert (= (and d!45619 (not c!27036)) b!142864))

(assert (= (and b!142864 c!27037) b!142865))

(assert (= (and b!142864 (not c!27037)) b!142866))

(declare-fun m!172633 () Bool)

(assert (=> b!142865 m!172633))

(assert (=> d!43821 d!45619))

(assert (=> d!44089 d!44085))

(assert (=> d!44089 d!43525))

(assert (=> d!44089 d!44087))

(declare-fun d!45621 () Bool)

(declare-fun lt!74914 () Bool)

(assert (=> d!45621 (= lt!74914 (select (content!137 (t!6360 (toList!889 lt!73546))) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!93079 () Bool)

(assert (=> d!45621 (= lt!74914 e!93079)))

(declare-fun res!68090 () Bool)

(assert (=> d!45621 (=> (not res!68090) (not e!93079))))

(assert (=> d!45621 (= res!68090 ((_ is Cons!1760) (t!6360 (toList!889 lt!73546))))))

(assert (=> d!45621 (= (contains!923 (t!6360 (toList!889 lt!73546)) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!74914)))

(declare-fun b!142867 () Bool)

(declare-fun e!93080 () Bool)

(assert (=> b!142867 (= e!93079 e!93080)))

(declare-fun res!68089 () Bool)

(assert (=> b!142867 (=> res!68089 e!93080)))

(assert (=> b!142867 (= res!68089 (= (h!2367 (t!6360 (toList!889 lt!73546))) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!142868 () Bool)

(assert (=> b!142868 (= e!93080 (contains!923 (t!6360 (t!6360 (toList!889 lt!73546))) (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!45621 res!68090) b!142867))

(assert (= (and b!142867 (not res!68089)) b!142868))

(assert (=> d!45621 m!169911))

(declare-fun m!172635 () Bool)

(assert (=> d!45621 m!172635))

(declare-fun m!172637 () Bool)

(assert (=> b!142868 m!172637))

(assert (=> b!141015 d!45621))

(declare-fun d!45623 () Bool)

(assert (=> d!45623 (= (apply!120 lt!73826 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!73826) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6060 () Bool)

(assert (= bs!6060 d!45623))

(assert (=> bs!6060 m!171097))

(assert (=> bs!6060 m!171097))

(declare-fun m!172639 () Bool)

(assert (=> bs!6060 m!172639))

(assert (=> b!140704 d!45623))

(assert (=> b!140759 d!44711))

(assert (=> b!140539 d!45475))

(declare-fun d!45625 () Bool)

(assert (=> d!45625 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398))))

(declare-fun lt!74915 () Unit!4395)

(assert (=> d!45625 (= lt!74915 (choose!868 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398))))

(declare-fun e!93081 () Bool)

(assert (=> d!45625 e!93081))

(declare-fun res!68091 () Bool)

(assert (=> d!45625 (=> (not res!68091) (not e!93081))))

(assert (=> d!45625 (= res!68091 (isStrictlySorted!320 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45625 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398) lt!74915)))

(declare-fun b!142869 () Bool)

(assert (=> b!142869 (= e!93081 (containsKey!179 (toList!889 (+!174 lt!73400 (tuple2!2685 lt!73393 (zeroValue!2790 newMap!16)))) lt!73398))))

(assert (= (and d!45625 res!68091) b!142869))

(assert (=> d!45625 m!168965))

(assert (=> d!45625 m!168965))

(assert (=> d!45625 m!168967))

(declare-fun m!172641 () Bool)

(assert (=> d!45625 m!172641))

(declare-fun m!172643 () Bool)

(assert (=> d!45625 m!172643))

(assert (=> b!142869 m!168961))

(assert (=> b!140914 d!45625))

(assert (=> b!140914 d!45387))

(assert (=> b!140914 d!45389))

(declare-fun d!45627 () Bool)

(declare-fun e!93082 () Bool)

(assert (=> d!45627 e!93082))

(declare-fun res!68093 () Bool)

(assert (=> d!45627 (=> (not res!68093) (not e!93082))))

(declare-fun lt!74916 () List!1764)

(assert (=> d!45627 (= res!68093 (isStrictlySorted!320 lt!74916))))

(declare-fun e!93084 () List!1764)

(assert (=> d!45627 (= lt!74916 e!93084)))

(declare-fun c!27038 () Bool)

(assert (=> d!45627 (= c!27038 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15500))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 call!15500)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45627 (isStrictlySorted!320 (t!6360 (toList!889 call!15500)))))

(assert (=> d!45627 (= (insertStrictlySorted!93 (t!6360 (toList!889 call!15500)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74916)))

(declare-fun b!142870 () Bool)

(assert (=> b!142870 (= e!93082 (contains!923 lt!74916 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!93085 () List!1764)

(declare-fun bm!15800 () Bool)

(declare-fun call!15803 () List!1764)

(assert (=> bm!15800 (= call!15803 ($colon$colon!93 e!93085 (ite c!27038 (h!2367 (t!6360 (toList!889 call!15500))) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!27041 () Bool)

(assert (=> bm!15800 (= c!27041 c!27038)))

(declare-fun b!142871 () Bool)

(assert (=> b!142871 (= e!93084 call!15803)))

(declare-fun b!142872 () Bool)

(assert (=> b!142872 (= e!93085 (insertStrictlySorted!93 (t!6360 (t!6360 (toList!889 call!15500))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142873 () Bool)

(declare-fun e!93086 () List!1764)

(declare-fun call!15804 () List!1764)

(assert (=> b!142873 (= e!93086 call!15804)))

(declare-fun bm!15801 () Bool)

(assert (=> bm!15801 (= call!15804 call!15803)))

(declare-fun b!142874 () Bool)

(declare-fun e!93083 () List!1764)

(declare-fun call!15805 () List!1764)

(assert (=> b!142874 (= e!93083 call!15805)))

(declare-fun c!27040 () Bool)

(declare-fun b!142875 () Bool)

(assert (=> b!142875 (= c!27040 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15500))) (bvsgt (_1!1352 (h!2367 (t!6360 (toList!889 call!15500)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!142875 (= e!93086 e!93083)))

(declare-fun b!142876 () Bool)

(assert (=> b!142876 (= e!93084 e!93086)))

(declare-fun c!27039 () Bool)

(assert (=> b!142876 (= c!27039 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15500))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15500)))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142877 () Bool)

(assert (=> b!142877 (= e!93085 (ite c!27039 (t!6360 (t!6360 (toList!889 call!15500))) (ite c!27040 (Cons!1760 (h!2367 (t!6360 (toList!889 call!15500))) (t!6360 (t!6360 (toList!889 call!15500)))) Nil!1761)))))

(declare-fun bm!15802 () Bool)

(assert (=> bm!15802 (= call!15805 call!15804)))

(declare-fun b!142878 () Bool)

(declare-fun res!68092 () Bool)

(assert (=> b!142878 (=> (not res!68092) (not e!93082))))

(assert (=> b!142878 (= res!68092 (containsKey!179 lt!74916 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142879 () Bool)

(assert (=> b!142879 (= e!93083 call!15805)))

(assert (= (and d!45627 c!27038) b!142871))

(assert (= (and d!45627 (not c!27038)) b!142876))

(assert (= (and b!142876 c!27039) b!142873))

(assert (= (and b!142876 (not c!27039)) b!142875))

(assert (= (and b!142875 c!27040) b!142879))

(assert (= (and b!142875 (not c!27040)) b!142874))

(assert (= (or b!142879 b!142874) bm!15802))

(assert (= (or b!142873 bm!15802) bm!15801))

(assert (= (or b!142871 bm!15801) bm!15800))

(assert (= (and bm!15800 c!27041) b!142872))

(assert (= (and bm!15800 (not c!27041)) b!142877))

(assert (= (and d!45627 res!68093) b!142878))

(assert (= (and b!142878 res!68092) b!142870))

(declare-fun m!172645 () Bool)

(assert (=> b!142870 m!172645))

(declare-fun m!172647 () Bool)

(assert (=> b!142878 m!172647))

(declare-fun m!172649 () Bool)

(assert (=> b!142872 m!172649))

(declare-fun m!172651 () Bool)

(assert (=> bm!15800 m!172651))

(declare-fun m!172653 () Bool)

(assert (=> d!45627 m!172653))

(declare-fun m!172655 () Bool)

(assert (=> d!45627 m!172655))

(assert (=> b!140366 d!45627))

(declare-fun d!45629 () Bool)

(assert (=> d!45629 (= ($colon$colon!93 e!91615 (ite c!26331 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508))) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1760 (ite c!26331 (h!2367 (toList!889 (ite c!26153 call!15498 call!15508))) (tuple2!2685 (_1!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1352 (ite c!26153 (ite c!26151 (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!91615))))

(assert (=> bm!15604 d!45629))

(declare-fun d!45631 () Bool)

(assert (=> d!45631 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) lt!73488)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) lt!73488)))))

(assert (=> d!43785 d!45631))

(declare-fun b!142882 () Bool)

(declare-fun e!93088 () Option!181)

(assert (=> b!142882 (= e!93088 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))) lt!73488))))

(declare-fun b!142881 () Bool)

(declare-fun e!93087 () Option!181)

(assert (=> b!142881 (= e!93087 e!93088)))

(declare-fun c!27043 () Bool)

(assert (=> b!142881 (= c!27043 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))) lt!73488))))))

(declare-fun b!142883 () Bool)

(assert (=> b!142883 (= e!93088 None!179)))

(declare-fun b!142880 () Bool)

(assert (=> b!142880 (= e!93087 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))))

(declare-fun d!45633 () Bool)

(declare-fun c!27042 () Bool)

(assert (=> d!45633 (= c!27042 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))) lt!73488)))))

(assert (=> d!45633 (= (getValueByKey!175 (toList!889 (+!174 lt!73496 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) lt!73488) e!93087)))

(assert (= (and d!45633 c!27042) b!142880))

(assert (= (and d!45633 (not c!27042)) b!142881))

(assert (= (and b!142881 c!27043) b!142882))

(assert (= (and b!142881 (not c!27043)) b!142883))

(declare-fun m!172657 () Bool)

(assert (=> b!142882 m!172657))

(assert (=> d!43785 d!45633))

(declare-fun d!45635 () Bool)

(declare-fun c!27046 () Bool)

(assert (=> d!45635 (= c!27046 ((_ is Nil!1760) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)))))

(declare-fun e!93091 () (InoxSet (_ BitVec 64)))

(assert (=> d!45635 (= (content!136 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) e!93091)))

(declare-fun b!142888 () Bool)

(assert (=> b!142888 (= e!93091 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!142889 () Bool)

(assert (=> b!142889 (= e!93091 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2366 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) true) (content!136 (t!6359 (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)))))))

(assert (= (and d!45635 c!27046) b!142888))

(assert (= (and d!45635 (not c!27046)) b!142889))

(declare-fun m!172659 () Bool)

(assert (=> b!142889 m!172659))

(assert (=> b!142889 m!170309))

(assert (=> d!43629 d!45635))

(declare-fun d!45637 () Bool)

(assert (=> d!45637 (= (apply!120 (+!174 lt!73461 (tuple2!2685 lt!73465 (minValue!2790 newMap!16))) lt!73467) (apply!120 lt!73461 lt!73467))))

(assert (=> d!45637 true))

(declare-fun _$34!1012 () Unit!4395)

(assert (=> d!45637 (= (choose!870 lt!73461 lt!73465 (minValue!2790 newMap!16) lt!73467) _$34!1012)))

(declare-fun bs!6061 () Bool)

(assert (= bs!6061 d!45637))

(assert (=> bs!6061 m!167277))

(assert (=> bs!6061 m!167277))

(assert (=> bs!6061 m!167279))

(assert (=> bs!6061 m!167275))

(assert (=> d!43831 d!45637))

(assert (=> d!43831 d!43819))

(assert (=> d!43831 d!43837))

(declare-fun d!45639 () Bool)

(declare-fun e!93093 () Bool)

(assert (=> d!45639 e!93093))

(declare-fun res!68094 () Bool)

(assert (=> d!45639 (=> res!68094 e!93093)))

(declare-fun lt!74917 () Bool)

(assert (=> d!45639 (= res!68094 (not lt!74917))))

(declare-fun lt!74920 () Bool)

(assert (=> d!45639 (= lt!74917 lt!74920)))

(declare-fun lt!74918 () Unit!4395)

(declare-fun e!93092 () Unit!4395)

(assert (=> d!45639 (= lt!74918 e!93092)))

(declare-fun c!27047 () Bool)

(assert (=> d!45639 (= c!27047 lt!74920)))

(assert (=> d!45639 (= lt!74920 (containsKey!179 (toList!889 lt!73461) lt!73467))))

(assert (=> d!45639 (= (contains!921 lt!73461 lt!73467) lt!74917)))

(declare-fun b!142890 () Bool)

(declare-fun lt!74919 () Unit!4395)

(assert (=> b!142890 (= e!93092 lt!74919)))

(assert (=> b!142890 (= lt!74919 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73461) lt!73467))))

(assert (=> b!142890 (isDefined!129 (getValueByKey!175 (toList!889 lt!73461) lt!73467))))

(declare-fun b!142891 () Bool)

(declare-fun Unit!4533 () Unit!4395)

(assert (=> b!142891 (= e!93092 Unit!4533)))

(declare-fun b!142892 () Bool)

(assert (=> b!142892 (= e!93093 (isDefined!129 (getValueByKey!175 (toList!889 lt!73461) lt!73467)))))

(assert (= (and d!45639 c!27047) b!142890))

(assert (= (and d!45639 (not c!27047)) b!142891))

(assert (= (and d!45639 (not res!68094)) b!142892))

(declare-fun m!172661 () Bool)

(assert (=> d!45639 m!172661))

(declare-fun m!172663 () Bool)

(assert (=> b!142890 m!172663))

(assert (=> b!142890 m!168279))

(assert (=> b!142890 m!168279))

(declare-fun m!172665 () Bool)

(assert (=> b!142890 m!172665))

(assert (=> b!142892 m!168279))

(assert (=> b!142892 m!168279))

(assert (=> b!142892 m!172665))

(assert (=> d!43831 d!45639))

(assert (=> d!43831 d!43821))

(declare-fun d!45641 () Bool)

(assert (=> d!45641 (= (apply!120 lt!73779 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (get!1538 (getValueByKey!175 (toList!889 lt!73779) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!6062 () Bool)

(assert (= bs!6062 d!45641))

(assert (=> bs!6062 m!166967))

(declare-fun m!172667 () Bool)

(assert (=> bs!6062 m!172667))

(assert (=> bs!6062 m!172667))

(declare-fun m!172669 () Bool)

(assert (=> bs!6062 m!172669))

(assert (=> b!140621 d!45641))

(declare-fun d!45643 () Bool)

(declare-fun c!27048 () Bool)

(assert (=> d!45643 (= c!27048 ((_ is ValueCellFull!1122) (select (arr!2315 lt!73219) #b00000000000000000000000000000000)))))

(declare-fun e!93094 () V!3555)

(assert (=> d!45643 (= (get!1535 (select (arr!2315 lt!73219) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!93094)))

(declare-fun b!142893 () Bool)

(assert (=> b!142893 (= e!93094 (get!1536 (select (arr!2315 lt!73219) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142894 () Bool)

(assert (=> b!142894 (= e!93094 (get!1537 (select (arr!2315 lt!73219) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45643 c!27048) b!142893))

(assert (= (and d!45643 (not c!27048)) b!142894))

(assert (=> b!142893 m!168333))

(assert (=> b!142893 m!166971))

(declare-fun m!172671 () Bool)

(assert (=> b!142893 m!172671))

(assert (=> b!142894 m!168333))

(assert (=> b!142894 m!166971))

(declare-fun m!172673 () Bool)

(assert (=> b!142894 m!172673))

(assert (=> b!140621 d!45643))

(declare-fun e!93096 () Option!181)

(declare-fun b!142897 () Bool)

(assert (=> b!142897 (= e!93096 (getValueByKey!175 (t!6360 (toList!889 lt!73722)) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))

(declare-fun b!142896 () Bool)

(declare-fun e!93095 () Option!181)

(assert (=> b!142896 (= e!93095 e!93096)))

(declare-fun c!27050 () Bool)

(assert (=> b!142896 (= c!27050 (and ((_ is Cons!1760) (toList!889 lt!73722)) (not (= (_1!1352 (h!2367 (toList!889 lt!73722))) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))))))))

(declare-fun b!142898 () Bool)

(assert (=> b!142898 (= e!93096 None!179)))

(declare-fun b!142895 () Bool)

(assert (=> b!142895 (= e!93095 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73722)))))))

(declare-fun d!45645 () Bool)

(declare-fun c!27049 () Bool)

(assert (=> d!45645 (= c!27049 (and ((_ is Cons!1760) (toList!889 lt!73722)) (= (_1!1352 (h!2367 (toList!889 lt!73722))) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45645 (= (getValueByKey!175 (toList!889 lt!73722) (_1!1352 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) e!93095)))

(assert (= (and d!45645 c!27049) b!142895))

(assert (= (and d!45645 (not c!27049)) b!142896))

(assert (= (and b!142896 c!27050) b!142897))

(assert (= (and b!142896 (not c!27050)) b!142898))

(declare-fun m!172675 () Bool)

(assert (=> b!142897 m!172675))

(assert (=> b!140570 d!45645))

(declare-fun lt!74921 () Bool)

(declare-fun d!45647 () Bool)

(assert (=> d!45647 (= lt!74921 (select (content!137 (t!6360 (toList!889 lt!73470))) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun e!93097 () Bool)

(assert (=> d!45647 (= lt!74921 e!93097)))

(declare-fun res!68096 () Bool)

(assert (=> d!45647 (=> (not res!68096) (not e!93097))))

(assert (=> d!45647 (= res!68096 ((_ is Cons!1760) (t!6360 (toList!889 lt!73470))))))

(assert (=> d!45647 (= (contains!923 (t!6360 (toList!889 lt!73470)) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) lt!74921)))

(declare-fun b!142899 () Bool)

(declare-fun e!93098 () Bool)

(assert (=> b!142899 (= e!93097 e!93098)))

(declare-fun res!68095 () Bool)

(assert (=> b!142899 (=> res!68095 e!93098)))

(assert (=> b!142899 (= res!68095 (= (h!2367 (t!6360 (toList!889 lt!73470))) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(declare-fun b!142900 () Bool)

(assert (=> b!142900 (= e!93098 (contains!923 (t!6360 (t!6360 (toList!889 lt!73470))) (ite (or c!26110 c!26113) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45647 res!68096) b!142899))

(assert (= (and b!142899 (not res!68095)) b!142900))

(assert (=> d!45647 m!169789))

(declare-fun m!172677 () Bool)

(assert (=> d!45647 m!172677))

(declare-fun m!172679 () Bool)

(assert (=> b!142900 m!172679))

(assert (=> b!140831 d!45647))

(declare-fun d!45649 () Bool)

(declare-fun c!27051 () Bool)

(assert (=> d!45649 (= c!27051 ((_ is Nil!1761) (toList!889 lt!73528)))))

(declare-fun e!93099 () (InoxSet tuple2!2684))

(assert (=> d!45649 (= (content!137 (toList!889 lt!73528)) e!93099)))

(declare-fun b!142901 () Bool)

(assert (=> b!142901 (= e!93099 ((as const (Array tuple2!2684 Bool)) false))))

(declare-fun b!142902 () Bool)

(assert (=> b!142902 (= e!93099 ((_ map or) (store ((as const (Array tuple2!2684 Bool)) false) (h!2367 (toList!889 lt!73528)) true) (content!137 (t!6360 (toList!889 lt!73528)))))))

(assert (= (and d!45649 c!27051) b!142901))

(assert (= (and d!45649 (not c!27051)) b!142902))

(declare-fun m!172681 () Bool)

(assert (=> b!142902 m!172681))

(assert (=> b!142902 m!170141))

(assert (=> d!43859 d!45649))

(declare-fun d!45651 () Bool)

(declare-fun e!93101 () Bool)

(assert (=> d!45651 e!93101))

(declare-fun res!68097 () Bool)

(assert (=> d!45651 (=> res!68097 e!93101)))

(declare-fun lt!74922 () Bool)

(assert (=> d!45651 (= res!68097 (not lt!74922))))

(declare-fun lt!74925 () Bool)

(assert (=> d!45651 (= lt!74922 lt!74925)))

(declare-fun lt!74923 () Unit!4395)

(declare-fun e!93100 () Unit!4395)

(assert (=> d!45651 (= lt!74923 e!93100)))

(declare-fun c!27052 () Bool)

(assert (=> d!45651 (= c!27052 lt!74925)))

(assert (=> d!45651 (= lt!74925 (containsKey!179 (toList!889 lt!73487) lt!73498))))

(assert (=> d!45651 (= (contains!921 lt!73487 lt!73498) lt!74922)))

(declare-fun b!142903 () Bool)

(declare-fun lt!74924 () Unit!4395)

(assert (=> b!142903 (= e!93100 lt!74924)))

(assert (=> b!142903 (= lt!74924 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73487) lt!73498))))

(assert (=> b!142903 (isDefined!129 (getValueByKey!175 (toList!889 lt!73487) lt!73498))))

(declare-fun b!142904 () Bool)

(declare-fun Unit!4534 () Unit!4395)

(assert (=> b!142904 (= e!93100 Unit!4534)))

(declare-fun b!142905 () Bool)

(assert (=> b!142905 (= e!93101 (isDefined!129 (getValueByKey!175 (toList!889 lt!73487) lt!73498)))))

(assert (= (and d!45651 c!27052) b!142903))

(assert (= (and d!45651 (not c!27052)) b!142904))

(assert (= (and d!45651 (not res!68097)) b!142905))

(declare-fun m!172683 () Bool)

(assert (=> d!45651 m!172683))

(declare-fun m!172685 () Bool)

(assert (=> b!142903 m!172685))

(assert (=> b!142903 m!168111))

(assert (=> b!142903 m!168111))

(declare-fun m!172687 () Bool)

(assert (=> b!142903 m!172687))

(assert (=> b!142905 m!168111))

(assert (=> b!142905 m!168111))

(assert (=> b!142905 m!172687))

(assert (=> d!43805 d!45651))

(assert (=> d!43805 d!43787))

(assert (=> d!43805 d!43801))

(assert (=> d!43805 d!43811))

(declare-fun d!45653 () Bool)

(assert (=> d!45653 (= (apply!120 (+!174 lt!73487 (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) lt!73498) (apply!120 lt!73487 lt!73498))))

(assert (=> d!45653 true))

(declare-fun _$34!1013 () Unit!4395)

(assert (=> d!45653 (= (choose!870 lt!73487 lt!73492 (zeroValue!2790 newMap!16) lt!73498) _$34!1013)))

(declare-fun bs!6063 () Bool)

(assert (= bs!6063 d!45653))

(assert (=> bs!6063 m!167353))

(assert (=> bs!6063 m!167353))

(assert (=> bs!6063 m!167355))

(assert (=> bs!6063 m!167363))

(assert (=> d!43805 d!45653))

(declare-fun d!45655 () Bool)

(assert (=> d!45655 (= (isEmpty!423 lt!73586) (isEmpty!424 (toList!889 lt!73586)))))

(declare-fun bs!6064 () Bool)

(assert (= bs!6064 d!45655))

(declare-fun m!172689 () Bool)

(assert (=> bs!6064 m!172689))

(assert (=> b!140259 d!45655))

(declare-fun d!45657 () Bool)

(declare-fun res!68098 () Bool)

(declare-fun e!93102 () Bool)

(assert (=> d!45657 (=> res!68098 e!93102)))

(assert (=> d!45657 (= res!68098 (and ((_ is Cons!1760) lt!73713) (= (_1!1352 (h!2367 lt!73713)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45657 (= (containsKey!179 lt!73713 (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!93102)))

(declare-fun b!142906 () Bool)

(declare-fun e!93103 () Bool)

(assert (=> b!142906 (= e!93102 e!93103)))

(declare-fun res!68099 () Bool)

(assert (=> b!142906 (=> (not res!68099) (not e!93103))))

(assert (=> b!142906 (= res!68099 (and (or (not ((_ is Cons!1760) lt!73713)) (bvsle (_1!1352 (h!2367 lt!73713)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73713) (bvslt (_1!1352 (h!2367 lt!73713)) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142907 () Bool)

(assert (=> b!142907 (= e!93103 (containsKey!179 (t!6360 lt!73713) (_1!1352 (tuple2!2685 lt!73145 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45657 (not res!68098)) b!142906))

(assert (= (and b!142906 res!68099) b!142907))

(declare-fun m!172691 () Bool)

(assert (=> b!142907 m!172691))

(assert (=> b!140562 d!45657))

(assert (=> b!141074 d!44263))

(assert (=> b!141074 d!44265))

(declare-fun d!45659 () Bool)

(declare-fun e!93105 () Bool)

(assert (=> d!45659 e!93105))

(declare-fun res!68100 () Bool)

(assert (=> d!45659 (=> res!68100 e!93105)))

(declare-fun lt!74926 () Bool)

(assert (=> d!45659 (= res!68100 (not lt!74926))))

(declare-fun lt!74929 () Bool)

(assert (=> d!45659 (= lt!74926 lt!74929)))

(declare-fun lt!74927 () Unit!4395)

(declare-fun e!93104 () Unit!4395)

(assert (=> d!45659 (= lt!74927 e!93104)))

(declare-fun c!27053 () Bool)

(assert (=> d!45659 (= c!27053 lt!74929)))

(assert (=> d!45659 (= lt!74929 (containsKey!179 (toList!889 lt!73630) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45659 (= (contains!921 lt!73630 #b1000000000000000000000000000000000000000000000000000000000000000) lt!74926)))

(declare-fun b!142908 () Bool)

(declare-fun lt!74928 () Unit!4395)

(assert (=> b!142908 (= e!93104 lt!74928)))

(assert (=> b!142908 (= lt!74928 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73630) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142908 (isDefined!129 (getValueByKey!175 (toList!889 lt!73630) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142909 () Bool)

(declare-fun Unit!4535 () Unit!4395)

(assert (=> b!142909 (= e!93104 Unit!4535)))

(declare-fun b!142910 () Bool)

(assert (=> b!142910 (= e!93105 (isDefined!129 (getValueByKey!175 (toList!889 lt!73630) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45659 c!27053) b!142908))

(assert (= (and d!45659 (not c!27053)) b!142909))

(assert (= (and d!45659 (not res!68100)) b!142910))

(declare-fun m!172693 () Bool)

(assert (=> d!45659 m!172693))

(declare-fun m!172695 () Bool)

(assert (=> b!142908 m!172695))

(declare-fun m!172697 () Bool)

(assert (=> b!142908 m!172697))

(assert (=> b!142908 m!172697))

(declare-fun m!172699 () Bool)

(assert (=> b!142908 m!172699))

(assert (=> b!142910 m!172697))

(assert (=> b!142910 m!172697))

(assert (=> b!142910 m!172699))

(assert (=> b!140374 d!45659))

(declare-fun d!45661 () Bool)

(assert (=> d!45661 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489))))

(declare-fun lt!74930 () Unit!4395)

(assert (=> d!45661 (= lt!74930 (choose!868 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489))))

(declare-fun e!93106 () Bool)

(assert (=> d!45661 e!93106))

(declare-fun res!68101 () Bool)

(assert (=> d!45661 (=> (not res!68101) (not e!93106))))

(assert (=> d!45661 (= res!68101 (isStrictlySorted!320 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16))))))))

(assert (=> d!45661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489) lt!74930)))

(declare-fun b!142911 () Bool)

(assert (=> b!142911 (= e!93106 (containsKey!179 (toList!889 (+!174 lt!73491 (tuple2!2685 lt!73484 (zeroValue!2790 newMap!16)))) lt!73489))))

(assert (= (and d!45661 res!68101) b!142911))

(assert (=> d!45661 m!168131))

(assert (=> d!45661 m!168131))

(assert (=> d!45661 m!168133))

(declare-fun m!172701 () Bool)

(assert (=> d!45661 m!172701))

(declare-fun m!172703 () Bool)

(assert (=> d!45661 m!172703))

(assert (=> b!142911 m!168127))

(assert (=> b!140567 d!45661))

(assert (=> b!140567 d!45399))

(assert (=> b!140567 d!45401))

(declare-fun d!45663 () Bool)

(declare-fun lt!74931 () Bool)

(assert (=> d!45663 (= lt!74931 (select (content!137 (toList!889 lt!73751)) (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))

(declare-fun e!93107 () Bool)

(assert (=> d!45663 (= lt!74931 e!93107)))

(declare-fun res!68103 () Bool)

(assert (=> d!45663 (=> (not res!68103) (not e!93107))))

(assert (=> d!45663 (= res!68103 ((_ is Cons!1760) (toList!889 lt!73751)))))

(assert (=> d!45663 (= (contains!923 (toList!889 lt!73751) (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))) lt!74931)))

(declare-fun b!142912 () Bool)

(declare-fun e!93108 () Bool)

(assert (=> b!142912 (= e!93107 e!93108)))

(declare-fun res!68102 () Bool)

(assert (=> b!142912 (=> res!68102 e!93108)))

(assert (=> b!142912 (= res!68102 (= (h!2367 (toList!889 lt!73751)) (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))

(declare-fun b!142913 () Bool)

(assert (=> b!142913 (= e!93108 (contains!923 (t!6360 (toList!889 lt!73751)) (tuple2!2685 lt!73460 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45663 res!68103) b!142912))

(assert (= (and b!142912 (not res!68102)) b!142913))

(declare-fun m!172705 () Bool)

(assert (=> d!45663 m!172705))

(declare-fun m!172707 () Bool)

(assert (=> d!45663 m!172707))

(declare-fun m!172709 () Bool)

(assert (=> b!142913 m!172709))

(assert (=> b!140587 d!45663))

(assert (=> d!43961 d!43499))

(assert (=> b!140839 d!45601))

(declare-fun d!45665 () Bool)

(assert (=> d!45665 (= ($colon$colon!93 e!91715 (ite c!26378 (h!2367 (toList!889 lt!73149)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (Cons!1760 (ite c!26378 (h!2367 (toList!889 lt!73149)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!91715))))

(assert (=> bm!15622 d!45665))

(assert (=> d!43937 d!44273))

(declare-fun d!45667 () Bool)

(declare-fun e!93110 () Bool)

(assert (=> d!45667 e!93110))

(declare-fun res!68104 () Bool)

(assert (=> d!45667 (=> res!68104 e!93110)))

(declare-fun lt!74932 () Bool)

(assert (=> d!45667 (= res!68104 (not lt!74932))))

(declare-fun lt!74935 () Bool)

(assert (=> d!45667 (= lt!74932 lt!74935)))

(declare-fun lt!74933 () Unit!4395)

(declare-fun e!93109 () Unit!4395)

(assert (=> d!45667 (= lt!74933 e!93109)))

(declare-fun c!27054 () Bool)

(assert (=> d!45667 (= c!27054 lt!74935)))

(assert (=> d!45667 (= lt!74935 (containsKey!179 (toList!889 lt!73643) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45667 (= (contains!921 lt!73643 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74932)))

(declare-fun b!142914 () Bool)

(declare-fun lt!74934 () Unit!4395)

(assert (=> b!142914 (= e!93109 lt!74934)))

(assert (=> b!142914 (= lt!74934 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73643) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!142914 (isDefined!129 (getValueByKey!175 (toList!889 lt!73643) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142915 () Bool)

(declare-fun Unit!4536 () Unit!4395)

(assert (=> b!142915 (= e!93109 Unit!4536)))

(declare-fun b!142916 () Bool)

(assert (=> b!142916 (= e!93110 (isDefined!129 (getValueByKey!175 (toList!889 lt!73643) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45667 c!27054) b!142914))

(assert (= (and d!45667 (not c!27054)) b!142915))

(assert (= (and d!45667 (not res!68104)) b!142916))

(assert (=> d!45667 m!166967))

(declare-fun m!172711 () Bool)

(assert (=> d!45667 m!172711))

(assert (=> b!142914 m!166967))

(declare-fun m!172713 () Bool)

(assert (=> b!142914 m!172713))

(assert (=> b!142914 m!166967))

(assert (=> b!142914 m!172011))

(assert (=> b!142914 m!172011))

(declare-fun m!172715 () Bool)

(assert (=> b!142914 m!172715))

(assert (=> b!142916 m!166967))

(assert (=> b!142916 m!172011))

(assert (=> b!142916 m!172011))

(assert (=> b!142916 m!172715))

(assert (=> b!140401 d!45667))

(assert (=> b!141033 d!43605))

(declare-fun d!45669 () Bool)

(declare-fun lt!74936 () Bool)

(assert (=> d!45669 (= lt!74936 (select (content!137 (toList!889 lt!73730)) (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))

(declare-fun e!93111 () Bool)

(assert (=> d!45669 (= lt!74936 e!93111)))

(declare-fun res!68106 () Bool)

(assert (=> d!45669 (=> (not res!68106) (not e!93111))))

(assert (=> d!45669 (= res!68106 ((_ is Cons!1760) (toList!889 lt!73730)))))

(assert (=> d!45669 (= (contains!923 (toList!889 lt!73730) (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))) lt!74936)))

(declare-fun b!142917 () Bool)

(declare-fun e!93112 () Bool)

(assert (=> b!142917 (= e!93111 e!93112)))

(declare-fun res!68105 () Bool)

(assert (=> b!142917 (=> res!68105 e!93112)))

(assert (=> b!142917 (= res!68105 (= (h!2367 (toList!889 lt!73730)) (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))

(declare-fun b!142918 () Bool)

(assert (=> b!142918 (= e!93112 (contains!923 (t!6360 (toList!889 lt!73730)) (tuple2!2685 lt!73492 (zeroValue!2790 newMap!16))))))

(assert (= (and d!45669 res!68106) b!142917))

(assert (= (and b!142917 (not res!68105)) b!142918))

(declare-fun m!172717 () Bool)

(assert (=> d!45669 m!172717))

(declare-fun m!172719 () Bool)

(assert (=> d!45669 m!172719))

(declare-fun m!172721 () Bool)

(assert (=> b!142918 m!172721))

(assert (=> b!140575 d!45669))

(declare-fun d!45671 () Bool)

(declare-fun lt!74937 () Bool)

(assert (=> d!45671 (= lt!74937 (select (content!137 (t!6360 (toList!889 lt!73542))) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun e!93113 () Bool)

(assert (=> d!45671 (= lt!74937 e!93113)))

(declare-fun res!68108 () Bool)

(assert (=> d!45671 (=> (not res!68108) (not e!93113))))

(assert (=> d!45671 (= res!68108 ((_ is Cons!1760) (t!6360 (toList!889 lt!73542))))))

(assert (=> d!45671 (= (contains!923 (t!6360 (toList!889 lt!73542)) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) lt!74937)))

(declare-fun b!142919 () Bool)

(declare-fun e!93114 () Bool)

(assert (=> b!142919 (= e!93113 e!93114)))

(declare-fun res!68107 () Bool)

(assert (=> b!142919 (=> res!68107 e!93114)))

(assert (=> b!142919 (= res!68107 (= (h!2367 (t!6360 (toList!889 lt!73542))) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(declare-fun b!142920 () Bool)

(assert (=> b!142920 (= e!93114 (contains!923 (t!6360 (t!6360 (toList!889 lt!73542))) (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))

(assert (= (and d!45671 res!68108) b!142919))

(assert (= (and b!142919 (not res!68107)) b!142920))

(assert (=> d!45671 m!171083))

(declare-fun m!172723 () Bool)

(assert (=> d!45671 m!172723))

(declare-fun m!172725 () Bool)

(assert (=> b!142920 m!172725))

(assert (=> b!140814 d!45671))

(declare-fun lt!74938 () Bool)

(declare-fun d!45673 () Bool)

(assert (=> d!45673 (= lt!74938 (select (content!137 (toList!889 lt!74052)) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!93115 () Bool)

(assert (=> d!45673 (= lt!74938 e!93115)))

(declare-fun res!68110 () Bool)

(assert (=> d!45673 (=> (not res!68110) (not e!93115))))

(assert (=> d!45673 (= res!68110 ((_ is Cons!1760) (toList!889 lt!74052)))))

(assert (=> d!45673 (= (contains!923 (toList!889 lt!74052) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74938)))

(declare-fun b!142921 () Bool)

(declare-fun e!93116 () Bool)

(assert (=> b!142921 (= e!93115 e!93116)))

(declare-fun res!68109 () Bool)

(assert (=> b!142921 (=> res!68109 e!93116)))

(assert (=> b!142921 (= res!68109 (= (h!2367 (toList!889 lt!74052)) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!142922 () Bool)

(assert (=> b!142922 (= e!93116 (contains!923 (t!6360 (toList!889 lt!74052)) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45673 res!68110) b!142921))

(assert (= (and b!142921 (not res!68109)) b!142922))

(declare-fun m!172727 () Bool)

(assert (=> d!45673 m!172727))

(declare-fun m!172729 () Bool)

(assert (=> d!45673 m!172729))

(declare-fun m!172731 () Bool)

(assert (=> b!142922 m!172731))

(assert (=> b!141023 d!45673))

(declare-fun d!45675 () Bool)

(declare-fun e!93118 () Bool)

(assert (=> d!45675 e!93118))

(declare-fun res!68111 () Bool)

(assert (=> d!45675 (=> res!68111 e!93118)))

(declare-fun lt!74939 () Bool)

(assert (=> d!45675 (= res!68111 (not lt!74939))))

(declare-fun lt!74942 () Bool)

(assert (=> d!45675 (= lt!74939 lt!74942)))

(declare-fun lt!74940 () Unit!4395)

(declare-fun e!93117 () Unit!4395)

(assert (=> d!45675 (= lt!74940 e!93117)))

(declare-fun c!27055 () Bool)

(assert (=> d!45675 (= c!27055 lt!74942)))

(assert (=> d!45675 (= lt!74942 (containsKey!179 (toList!889 lt!73578) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> d!45675 (= (contains!921 lt!73578 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74939)))

(declare-fun b!142923 () Bool)

(declare-fun lt!74941 () Unit!4395)

(assert (=> b!142923 (= e!93117 lt!74941)))

(assert (=> b!142923 (= lt!74941 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73578) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(assert (=> b!142923 (isDefined!129 (getValueByKey!175 (toList!889 lt!73578) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142924 () Bool)

(declare-fun Unit!4537 () Unit!4395)

(assert (=> b!142924 (= e!93117 Unit!4537)))

(declare-fun b!142925 () Bool)

(assert (=> b!142925 (= e!93118 (isDefined!129 (getValueByKey!175 (toList!889 lt!73578) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45675 c!27055) b!142923))

(assert (= (and d!45675 (not c!27055)) b!142924))

(assert (= (and d!45675 (not res!68111)) b!142925))

(declare-fun m!172733 () Bool)

(assert (=> d!45675 m!172733))

(declare-fun m!172735 () Bool)

(assert (=> b!142923 m!172735))

(assert (=> b!142923 m!167585))

(assert (=> b!142923 m!167585))

(declare-fun m!172737 () Bool)

(assert (=> b!142923 m!172737))

(assert (=> b!142925 m!167585))

(assert (=> b!142925 m!167585))

(assert (=> b!142925 m!172737))

(assert (=> d!43599 d!45675))

(declare-fun b!142928 () Bool)

(declare-fun e!93120 () Option!181)

(assert (=> b!142928 (= e!93120 (getValueByKey!175 (t!6360 lt!73579) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142927 () Bool)

(declare-fun e!93119 () Option!181)

(assert (=> b!142927 (= e!93119 e!93120)))

(declare-fun c!27057 () Bool)

(assert (=> b!142927 (= c!27057 (and ((_ is Cons!1760) lt!73579) (not (= (_1!1352 (h!2367 lt!73579)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!142929 () Bool)

(assert (=> b!142929 (= e!93120 None!179)))

(declare-fun b!142926 () Bool)

(assert (=> b!142926 (= e!93119 (Some!180 (_2!1352 (h!2367 lt!73579))))))

(declare-fun d!45677 () Bool)

(declare-fun c!27056 () Bool)

(assert (=> d!45677 (= c!27056 (and ((_ is Cons!1760) lt!73579) (= (_1!1352 (h!2367 lt!73579)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45677 (= (getValueByKey!175 lt!73579 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!93119)))

(assert (= (and d!45677 c!27056) b!142926))

(assert (= (and d!45677 (not c!27056)) b!142927))

(assert (= (and b!142927 c!27057) b!142928))

(assert (= (and b!142927 (not c!27057)) b!142929))

(declare-fun m!172739 () Bool)

(assert (=> b!142928 m!172739))

(assert (=> d!43599 d!45677))

(declare-fun d!45679 () Bool)

(assert (=> d!45679 (= (getValueByKey!175 lt!73579 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun lt!74943 () Unit!4395)

(assert (=> d!45679 (= lt!74943 (choose!873 lt!73579 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun e!93121 () Bool)

(assert (=> d!45679 e!93121))

(declare-fun res!68112 () Bool)

(assert (=> d!45679 (=> (not res!68112) (not e!93121))))

(assert (=> d!45679 (= res!68112 (isStrictlySorted!320 lt!73579))))

(assert (=> d!45679 (= (lemmaContainsTupThenGetReturnValue!91 lt!73579 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74943)))

(declare-fun b!142930 () Bool)

(declare-fun res!68113 () Bool)

(assert (=> b!142930 (=> (not res!68113) (not e!93121))))

(assert (=> b!142930 (= res!68113 (containsKey!179 lt!73579 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142931 () Bool)

(assert (=> b!142931 (= e!93121 (contains!923 lt!73579 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (= (and d!45679 res!68112) b!142930))

(assert (= (and b!142930 res!68113) b!142931))

(assert (=> d!45679 m!167579))

(declare-fun m!172741 () Bool)

(assert (=> d!45679 m!172741))

(declare-fun m!172743 () Bool)

(assert (=> d!45679 m!172743))

(declare-fun m!172745 () Bool)

(assert (=> b!142930 m!172745))

(declare-fun m!172747 () Bool)

(assert (=> b!142931 m!172747))

(assert (=> d!43599 d!45679))

(declare-fun d!45681 () Bool)

(declare-fun e!93122 () Bool)

(assert (=> d!45681 e!93122))

(declare-fun res!68115 () Bool)

(assert (=> d!45681 (=> (not res!68115) (not e!93122))))

(declare-fun lt!74944 () List!1764)

(assert (=> d!45681 (= res!68115 (isStrictlySorted!320 lt!74944))))

(declare-fun e!93124 () List!1764)

(assert (=> d!45681 (= lt!74944 e!93124)))

(declare-fun c!27058 () Bool)

(assert (=> d!45681 (= c!27058 (and ((_ is Cons!1760) (toList!889 call!15559)) (bvslt (_1!1352 (h!2367 (toList!889 call!15559))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45681 (isStrictlySorted!320 (toList!889 call!15559))))

(assert (=> d!45681 (= (insertStrictlySorted!93 (toList!889 call!15559) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) lt!74944)))

(declare-fun b!142932 () Bool)

(assert (=> b!142932 (= e!93122 (contains!923 lt!74944 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun bm!15803 () Bool)

(declare-fun e!93125 () List!1764)

(declare-fun call!15806 () List!1764)

(assert (=> bm!15803 (= call!15806 ($colon$colon!93 e!93125 (ite c!27058 (h!2367 (toList!889 call!15559)) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun c!27061 () Bool)

(assert (=> bm!15803 (= c!27061 c!27058)))

(declare-fun b!142933 () Bool)

(assert (=> b!142933 (= e!93124 call!15806)))

(declare-fun b!142934 () Bool)

(assert (=> b!142934 (= e!93125 (insertStrictlySorted!93 (t!6360 (toList!889 call!15559)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142935 () Bool)

(declare-fun e!93126 () List!1764)

(declare-fun call!15807 () List!1764)

(assert (=> b!142935 (= e!93126 call!15807)))

(declare-fun bm!15804 () Bool)

(assert (=> bm!15804 (= call!15807 call!15806)))

(declare-fun b!142936 () Bool)

(declare-fun e!93123 () List!1764)

(declare-fun call!15808 () List!1764)

(assert (=> b!142936 (= e!93123 call!15808)))

(declare-fun b!142937 () Bool)

(declare-fun c!27060 () Bool)

(assert (=> b!142937 (= c!27060 (and ((_ is Cons!1760) (toList!889 call!15559)) (bvsgt (_1!1352 (h!2367 (toList!889 call!15559))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!142937 (= e!93126 e!93123)))

(declare-fun b!142938 () Bool)

(assert (=> b!142938 (= e!93124 e!93126)))

(declare-fun c!27059 () Bool)

(assert (=> b!142938 (= c!27059 (and ((_ is Cons!1760) (toList!889 call!15559)) (= (_1!1352 (h!2367 (toList!889 call!15559))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142939 () Bool)

(assert (=> b!142939 (= e!93125 (ite c!27059 (t!6360 (toList!889 call!15559)) (ite c!27060 (Cons!1760 (h!2367 (toList!889 call!15559)) (t!6360 (toList!889 call!15559))) Nil!1761)))))

(declare-fun bm!15805 () Bool)

(assert (=> bm!15805 (= call!15808 call!15807)))

(declare-fun b!142940 () Bool)

(declare-fun res!68114 () Bool)

(assert (=> b!142940 (=> (not res!68114) (not e!93122))))

(assert (=> b!142940 (= res!68114 (containsKey!179 lt!74944 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!142941 () Bool)

(assert (=> b!142941 (= e!93123 call!15808)))

(assert (= (and d!45681 c!27058) b!142933))

(assert (= (and d!45681 (not c!27058)) b!142938))

(assert (= (and b!142938 c!27059) b!142935))

(assert (= (and b!142938 (not c!27059)) b!142937))

(assert (= (and b!142937 c!27060) b!142941))

(assert (= (and b!142937 (not c!27060)) b!142936))

(assert (= (or b!142941 b!142936) bm!15805))

(assert (= (or b!142935 bm!15805) bm!15804))

(assert (= (or b!142933 bm!15804) bm!15803))

(assert (= (and bm!15803 c!27061) b!142934))

(assert (= (and bm!15803 (not c!27061)) b!142939))

(assert (= (and d!45681 res!68115) b!142940))

(assert (= (and b!142940 res!68114) b!142932))

(declare-fun m!172749 () Bool)

(assert (=> b!142932 m!172749))

(declare-fun m!172751 () Bool)

(assert (=> b!142940 m!172751))

(declare-fun m!172753 () Bool)

(assert (=> b!142934 m!172753))

(declare-fun m!172755 () Bool)

(assert (=> bm!15803 m!172755))

(declare-fun m!172757 () Bool)

(assert (=> d!45681 m!172757))

(declare-fun m!172759 () Bool)

(assert (=> d!45681 m!172759))

(assert (=> d!43599 d!45681))

(declare-fun d!45683 () Bool)

(declare-fun lt!74945 () Bool)

(assert (=> d!45683 (= lt!74945 (select (content!136 (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!93128 () Bool)

(assert (=> d!45683 (= lt!74945 e!93128)))

(declare-fun res!68117 () Bool)

(assert (=> d!45683 (=> (not res!68117) (not e!93128))))

(assert (=> d!45683 (= res!68117 ((_ is Cons!1759) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))))))

(assert (=> d!45683 (= (contains!922 (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!74945)))

(declare-fun b!142942 () Bool)

(declare-fun e!93127 () Bool)

(assert (=> b!142942 (= e!93128 e!93127)))

(declare-fun res!68116 () Bool)

(assert (=> b!142942 (=> res!68116 e!93127)))

(assert (=> b!142942 (= res!68116 (= (h!2366 (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!142943 () Bool)

(assert (=> b!142943 (= e!93127 (contains!922 (t!6359 (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!45683 res!68117) b!142942))

(assert (= (and b!142942 (not res!68116)) b!142943))

(declare-fun m!172761 () Bool)

(assert (=> d!45683 m!172761))

(assert (=> d!45683 m!168059))

(declare-fun m!172763 () Bool)

(assert (=> d!45683 m!172763))

(assert (=> b!142943 m!168059))

(declare-fun m!172765 () Bool)

(assert (=> b!142943 m!172765))

(assert (=> b!140536 d!45683))

(declare-fun d!45685 () Bool)

(declare-fun res!68118 () Bool)

(declare-fun e!93129 () Bool)

(assert (=> d!45685 (=> res!68118 e!93129)))

(assert (=> d!45685 (= res!68118 (= (select (arr!2314 lt!73348) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (=> d!45685 (= (arrayContainsKey!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!93129)))

(declare-fun b!142944 () Bool)

(declare-fun e!93130 () Bool)

(assert (=> b!142944 (= e!93129 e!93130)))

(declare-fun res!68119 () Bool)

(assert (=> b!142944 (=> (not res!68119) (not e!93130))))

(assert (=> b!142944 (= res!68119 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 lt!73348)))))

(declare-fun b!142945 () Bool)

(assert (=> b!142945 (= e!93130 (arrayContainsKey!0 lt!73348 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!45685 (not res!68118)) b!142944))

(assert (= (and b!142944 res!68119) b!142945))

(declare-fun m!172767 () Bool)

(assert (=> d!45685 m!172767))

(assert (=> b!142945 m!166733))

(declare-fun m!172769 () Bool)

(assert (=> b!142945 m!172769))

(assert (=> b!140716 d!45685))

(declare-fun d!45687 () Bool)

(assert (=> d!45687 (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74946 () Unit!4395)

(assert (=> d!45687 (= lt!74946 (choose!868 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!93131 () Bool)

(assert (=> d!45687 e!93131))

(declare-fun res!68120 () Bool)

(assert (=> d!45687 (=> (not res!68120) (not e!93131))))

(assert (=> d!45687 (= res!68120 (isStrictlySorted!320 (toList!889 lt!73450)))))

(assert (=> d!45687 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74946)))

(declare-fun b!142946 () Bool)

(assert (=> b!142946 (= e!93131 (containsKey!179 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45687 res!68120) b!142946))

(assert (=> d!45687 m!167651))

(assert (=> d!45687 m!167651))

(assert (=> d!45687 m!167653))

(declare-fun m!172771 () Bool)

(assert (=> d!45687 m!172771))

(assert (=> d!45687 m!170043))

(assert (=> b!142946 m!167647))

(assert (=> b!140275 d!45687))

(declare-fun d!45689 () Bool)

(assert (=> d!45689 (= (isDefined!129 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!422 (getValueByKey!175 (toList!889 lt!73450) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!6065 () Bool)

(assert (= bs!6065 d!45689))

(assert (=> bs!6065 m!167651))

(declare-fun m!172773 () Bool)

(assert (=> bs!6065 m!172773))

(assert (=> b!140275 d!45689))

(assert (=> b!140275 d!45557))

(assert (=> d!43907 d!43661))

(assert (=> bm!15652 d!44463))

(declare-fun d!45691 () Bool)

(declare-fun res!68121 () Bool)

(declare-fun e!93132 () Bool)

(assert (=> d!45691 (=> res!68121 e!93132)))

(assert (=> d!45691 (= res!68121 (or ((_ is Nil!1761) lt!73811) ((_ is Nil!1761) (t!6360 lt!73811))))))

(assert (=> d!45691 (= (isStrictlySorted!320 lt!73811) e!93132)))

(declare-fun b!142947 () Bool)

(declare-fun e!93133 () Bool)

(assert (=> b!142947 (= e!93132 e!93133)))

(declare-fun res!68122 () Bool)

(assert (=> b!142947 (=> (not res!68122) (not e!93133))))

(assert (=> b!142947 (= res!68122 (bvslt (_1!1352 (h!2367 lt!73811)) (_1!1352 (h!2367 (t!6360 lt!73811)))))))

(declare-fun b!142948 () Bool)

(assert (=> b!142948 (= e!93133 (isStrictlySorted!320 (t!6360 lt!73811)))))

(assert (= (and d!45691 (not res!68121)) b!142947))

(assert (= (and b!142947 res!68122) b!142948))

(declare-fun m!172775 () Bool)

(assert (=> b!142948 m!172775))

(assert (=> d!43883 d!45691))

(declare-fun d!45693 () Bool)

(declare-fun res!68123 () Bool)

(declare-fun e!93134 () Bool)

(assert (=> d!45693 (=> res!68123 e!93134)))

(assert (=> d!45693 (= res!68123 (or ((_ is Nil!1761) (toList!889 lt!73149)) ((_ is Nil!1761) (t!6360 (toList!889 lt!73149)))))))

(assert (=> d!45693 (= (isStrictlySorted!320 (toList!889 lt!73149)) e!93134)))

(declare-fun b!142949 () Bool)

(declare-fun e!93135 () Bool)

(assert (=> b!142949 (= e!93134 e!93135)))

(declare-fun res!68124 () Bool)

(assert (=> b!142949 (=> (not res!68124) (not e!93135))))

(assert (=> b!142949 (= res!68124 (bvslt (_1!1352 (h!2367 (toList!889 lt!73149))) (_1!1352 (h!2367 (t!6360 (toList!889 lt!73149))))))))

(declare-fun b!142950 () Bool)

(assert (=> b!142950 (= e!93135 (isStrictlySorted!320 (t!6360 (toList!889 lt!73149))))))

(assert (= (and d!45693 (not res!68123)) b!142949))

(assert (= (and b!142949 res!68124) b!142950))

(assert (=> b!142950 m!172057))

(assert (=> d!43883 d!45693))

(declare-fun d!45695 () Bool)

(declare-fun lt!74947 () Bool)

(assert (=> d!45695 (= lt!74947 (select (content!137 lt!74019) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun e!93136 () Bool)

(assert (=> d!45695 (= lt!74947 e!93136)))

(declare-fun res!68126 () Bool)

(assert (=> d!45695 (=> (not res!68126) (not e!93136))))

(assert (=> d!45695 (= res!68126 ((_ is Cons!1760) lt!74019))))

(assert (=> d!45695 (= (contains!923 lt!74019 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) lt!74947)))

(declare-fun b!142951 () Bool)

(declare-fun e!93137 () Bool)

(assert (=> b!142951 (= e!93136 e!93137)))

(declare-fun res!68125 () Bool)

(assert (=> b!142951 (=> res!68125 e!93137)))

(assert (=> b!142951 (= res!68125 (= (h!2367 lt!74019) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!142952 () Bool)

(assert (=> b!142952 (= e!93137 (contains!923 (t!6360 lt!74019) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (= (and d!45695 res!68126) b!142951))

(assert (= (and b!142951 (not res!68125)) b!142952))

(declare-fun m!172777 () Bool)

(assert (=> d!45695 m!172777))

(declare-fun m!172779 () Bool)

(assert (=> d!45695 m!172779))

(declare-fun m!172781 () Bool)

(assert (=> b!142952 m!172781))

(assert (=> b!140936 d!45695))

(declare-fun b!142955 () Bool)

(declare-fun e!93139 () Option!181)

(assert (=> b!142955 (= e!93139 (getValueByKey!175 (t!6360 (toList!889 lt!73982)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))

(declare-fun b!142954 () Bool)

(declare-fun e!93138 () Option!181)

(assert (=> b!142954 (= e!93138 e!93139)))

(declare-fun c!27063 () Bool)

(assert (=> b!142954 (= c!27063 (and ((_ is Cons!1760) (toList!889 lt!73982)) (not (= (_1!1352 (h!2367 (toList!889 lt!73982))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))))))))

(declare-fun b!142956 () Bool)

(assert (=> b!142956 (= e!93139 None!179)))

(declare-fun b!142953 () Bool)

(assert (=> b!142953 (= e!93138 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73982)))))))

(declare-fun d!45697 () Bool)

(declare-fun c!27062 () Bool)

(assert (=> d!45697 (= c!27062 (and ((_ is Cons!1760) (toList!889 lt!73982)) (= (_1!1352 (h!2367 (toList!889 lt!73982))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))))

(assert (=> d!45697 (= (getValueByKey!175 (toList!889 lt!73982) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16))))) e!93138)))

(assert (= (and d!45697 c!27062) b!142953))

(assert (= (and d!45697 (not c!27062)) b!142954))

(assert (= (and b!142954 c!27063) b!142955))

(assert (= (and b!142954 (not c!27063)) b!142956))

(declare-fun m!172783 () Bool)

(assert (=> b!142955 m!172783))

(assert (=> b!140903 d!45697))

(declare-fun b!142957 () Bool)

(declare-fun e!93140 () SeekEntryResult!289)

(assert (=> b!142957 (= e!93140 (MissingVacant!289 (index!3321 lt!73670)))))

(declare-fun b!142958 () Bool)

(declare-fun e!93141 () SeekEntryResult!289)

(assert (=> b!142958 (= e!93141 (Found!289 (index!3321 lt!73670)))))

(declare-fun b!142959 () Bool)

(declare-fun c!27066 () Bool)

(declare-fun lt!74948 () (_ BitVec 64))

(assert (=> b!142959 (= c!27066 (= lt!74948 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142959 (= e!93141 e!93140)))

(declare-fun b!142960 () Bool)

(declare-fun e!93142 () SeekEntryResult!289)

(assert (=> b!142960 (= e!93142 Undefined!289)))

(declare-fun d!45699 () Bool)

(declare-fun lt!74949 () SeekEntryResult!289)

(assert (=> d!45699 (and (or ((_ is Undefined!289) lt!74949) (not ((_ is Found!289) lt!74949)) (and (bvsge (index!3320 lt!74949) #b00000000000000000000000000000000) (bvslt (index!3320 lt!74949) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!74949) ((_ is Found!289) lt!74949) (not ((_ is MissingVacant!289) lt!74949)) (not (= (index!3322 lt!74949) (index!3321 lt!73670))) (and (bvsge (index!3322 lt!74949) #b00000000000000000000000000000000) (bvslt (index!3322 lt!74949) (size!2586 (_keys!4699 newMap!16))))) (or ((_ is Undefined!289) lt!74949) (ite ((_ is Found!289) lt!74949) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!74949)) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!289) lt!74949) (= (index!3322 lt!74949) (index!3321 lt!73670)) (= (select (arr!2314 (_keys!4699 newMap!16)) (index!3322 lt!74949)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!45699 (= lt!74949 e!93142)))

(declare-fun c!27065 () Bool)

(assert (=> d!45699 (= c!27065 (bvsge (x!16146 lt!73670) #b01111111111111111111111111111110))))

(assert (=> d!45699 (= lt!74948 (select (arr!2314 (_keys!4699 newMap!16)) (index!3321 lt!73670)))))

(assert (=> d!45699 (validMask!0 (mask!7280 newMap!16))))

(assert (=> d!45699 (= (seekKeyOrZeroReturnVacant!0 (x!16146 lt!73670) (index!3321 lt!73670) (index!3321 lt!73670) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)) lt!74949)))

(declare-fun b!142961 () Bool)

(assert (=> b!142961 (= e!93142 e!93141)))

(declare-fun c!27064 () Bool)

(assert (=> b!142961 (= c!27064 (= lt!74948 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!142962 () Bool)

(assert (=> b!142962 (= e!93140 (seekKeyOrZeroReturnVacant!0 (bvadd (x!16146 lt!73670) #b00000000000000000000000000000001) (nextIndex!0 (index!3321 lt!73670) (x!16146 lt!73670) (mask!7280 newMap!16)) (index!3321 lt!73670) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (_keys!4699 newMap!16) (mask!7280 newMap!16)))))

(assert (= (and d!45699 c!27065) b!142960))

(assert (= (and d!45699 (not c!27065)) b!142961))

(assert (= (and b!142961 c!27064) b!142958))

(assert (= (and b!142961 (not c!27064)) b!142959))

(assert (= (and b!142959 c!27066) b!142957))

(assert (= (and b!142959 (not c!27066)) b!142962))

(declare-fun m!172785 () Bool)

(assert (=> d!45699 m!172785))

(declare-fun m!172787 () Bool)

(assert (=> d!45699 m!172787))

(assert (=> d!45699 m!167879))

(assert (=> d!45699 m!166961))

(declare-fun m!172789 () Bool)

(assert (=> b!142962 m!172789))

(assert (=> b!142962 m!172789))

(assert (=> b!142962 m!166967))

(declare-fun m!172791 () Bool)

(assert (=> b!142962 m!172791))

(assert (=> b!140430 d!45699))

(declare-fun lt!74950 () Bool)

(declare-fun d!45701 () Bool)

(assert (=> d!45701 (= lt!74950 (select (content!137 (toList!889 lt!74103)) (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun e!93143 () Bool)

(assert (=> d!45701 (= lt!74950 e!93143)))

(declare-fun res!68128 () Bool)

(assert (=> d!45701 (=> (not res!68128) (not e!93143))))

(assert (=> d!45701 (= res!68128 ((_ is Cons!1760) (toList!889 lt!74103)))))

(assert (=> d!45701 (= (contains!923 (toList!889 lt!74103) (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74950)))

(declare-fun b!142963 () Bool)

(declare-fun e!93144 () Bool)

(assert (=> b!142963 (= e!93143 e!93144)))

(declare-fun res!68127 () Bool)

(assert (=> b!142963 (=> res!68127 e!93144)))

(assert (=> b!142963 (= res!68127 (= (h!2367 (toList!889 lt!74103)) (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun b!142964 () Bool)

(assert (=> b!142964 (= e!93144 (contains!923 (t!6360 (toList!889 lt!74103)) (tuple2!2685 lt!73265 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!45701 res!68128) b!142963))

(assert (= (and b!142963 (not res!68127)) b!142964))

(declare-fun m!172793 () Bool)

(assert (=> d!45701 m!172793))

(declare-fun m!172795 () Bool)

(assert (=> d!45701 m!172795))

(declare-fun m!172797 () Bool)

(assert (=> b!142964 m!172797))

(assert (=> b!141082 d!45701))

(declare-fun d!45703 () Bool)

(assert (=> d!45703 (isDefined!129 (getValueByKey!175 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!74951 () Unit!4395)

(assert (=> d!45703 (= lt!74951 (choose!868 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!93145 () Bool)

(assert (=> d!45703 e!93145))

(declare-fun res!68129 () Bool)

(assert (=> d!45703 (=> (not res!68129) (not e!93145))))

(assert (=> d!45703 (= res!68129 (isStrictlySorted!320 (toList!889 lt!73250)))))

(assert (=> d!45703 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000) lt!74951)))

(declare-fun b!142965 () Bool)

(assert (=> b!142965 (= e!93145 (containsKey!179 (toList!889 lt!73250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45703 res!68129) b!142965))

(assert (=> d!45703 m!168041))

(assert (=> d!45703 m!168041))

(assert (=> d!45703 m!169169))

(declare-fun m!172799 () Bool)

(assert (=> d!45703 m!172799))

(assert (=> d!45703 m!169533))

(assert (=> b!142965 m!169165))

(assert (=> b!141050 d!45703))

(assert (=> b!141050 d!45525))

(assert (=> b!141050 d!45237))

(declare-fun d!45705 () Bool)

(declare-fun res!68130 () Bool)

(declare-fun e!93146 () Bool)

(assert (=> d!45705 (=> res!68130 e!93146)))

(assert (=> d!45705 (= res!68130 (and ((_ is Cons!1760) (t!6360 (toList!889 call!15514))) (= (_1!1352 (h!2367 (t!6360 (toList!889 call!15514)))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(assert (=> d!45705 (= (containsKey!179 (t!6360 (toList!889 call!15514)) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) e!93146)))

(declare-fun b!142966 () Bool)

(declare-fun e!93147 () Bool)

(assert (=> b!142966 (= e!93146 e!93147)))

(declare-fun res!68131 () Bool)

(assert (=> b!142966 (=> (not res!68131) (not e!93147))))

(assert (=> b!142966 (= res!68131 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 call!15514)))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 call!15514)))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))) ((_ is Cons!1760) (t!6360 (toList!889 call!15514))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 call!15514)))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228))))))))

(declare-fun b!142967 () Bool)

(assert (=> b!142967 (= e!93147 (containsKey!179 (t!6360 (t!6360 (toList!889 call!15514))) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (= (and d!45705 (not res!68130)) b!142966))

(assert (= (and b!142966 res!68131) b!142967))

(declare-fun m!172801 () Bool)

(assert (=> b!142967 m!172801))

(assert (=> b!140354 d!45705))

(declare-fun d!45707 () Bool)

(declare-fun lt!74952 () Bool)

(assert (=> d!45707 (= lt!74952 (select (content!137 lt!73627) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!93148 () Bool)

(assert (=> d!45707 (= lt!74952 e!93148)))

(declare-fun res!68133 () Bool)

(assert (=> d!45707 (=> (not res!68133) (not e!93148))))

(assert (=> d!45707 (= res!68133 ((_ is Cons!1760) lt!73627))))

(assert (=> d!45707 (= (contains!923 lt!73627 (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!74952)))

(declare-fun b!142968 () Bool)

(declare-fun e!93149 () Bool)

(assert (=> b!142968 (= e!93148 e!93149)))

(declare-fun res!68132 () Bool)

(assert (=> b!142968 (=> res!68132 e!93149)))

(assert (=> b!142968 (= res!68132 (= (h!2367 lt!73627) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!142969 () Bool)

(assert (=> b!142969 (= e!93149 (contains!923 (t!6360 lt!73627) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45707 res!68133) b!142968))

(assert (= (and b!142968 (not res!68132)) b!142969))

(declare-fun m!172803 () Bool)

(assert (=> d!45707 m!172803))

(declare-fun m!172805 () Bool)

(assert (=> d!45707 m!172805))

(declare-fun m!172807 () Bool)

(assert (=> b!142969 m!172807))

(assert (=> b!140364 d!45707))

(assert (=> b!140722 d!45527))

(assert (=> b!140988 d!44443))

(declare-fun d!45709 () Bool)

(declare-fun res!68134 () Bool)

(declare-fun e!93150 () Bool)

(assert (=> d!45709 (=> res!68134 e!93150)))

(assert (=> d!45709 (= res!68134 (and ((_ is Cons!1760) (t!6360 (t!6360 (toList!889 lt!73065)))) (= (_1!1352 (h!2367 (t!6360 (t!6360 (toList!889 lt!73065))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!45709 (= (containsKey!179 (t!6360 (t!6360 (toList!889 lt!73065))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!93150)))

(declare-fun b!142970 () Bool)

(declare-fun e!93151 () Bool)

(assert (=> b!142970 (= e!93150 e!93151)))

(declare-fun res!68135 () Bool)

(assert (=> b!142970 (=> (not res!68135) (not e!93151))))

(assert (=> b!142970 (= res!68135 (and (or (not ((_ is Cons!1760) (t!6360 (t!6360 (toList!889 lt!73065))))) (bvsle (_1!1352 (h!2367 (t!6360 (t!6360 (toList!889 lt!73065))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (t!6360 (t!6360 (toList!889 lt!73065)))) (bvslt (_1!1352 (h!2367 (t!6360 (t!6360 (toList!889 lt!73065))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!142971 () Bool)

(assert (=> b!142971 (= e!93151 (containsKey!179 (t!6360 (t!6360 (t!6360 (toList!889 lt!73065)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!45709 (not res!68134)) b!142970))

(assert (= (and b!142970 res!68135) b!142971))

(assert (=> b!142971 m!166733))

(declare-fun m!172809 () Bool)

(assert (=> b!142971 m!172809))

(assert (=> b!140415 d!45709))

(assert (=> d!43881 d!43879))

(declare-fun d!45711 () Bool)

(assert (=> d!45711 (= (getValueByKey!175 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!45711 true))

(declare-fun _$22!500 () Unit!4395)

(assert (=> d!45711 (= (choose!873 lt!73543 (_1!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73132 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) _$22!500)))

(declare-fun bs!6066 () Bool)

(assert (= bs!6066 d!45711))

(assert (=> bs!6066 m!167451))

(assert (=> d!43881 d!45711))

(declare-fun d!45713 () Bool)

(declare-fun res!68136 () Bool)

(declare-fun e!93152 () Bool)

(assert (=> d!45713 (=> res!68136 e!93152)))

(assert (=> d!45713 (= res!68136 (or ((_ is Nil!1761) lt!73543) ((_ is Nil!1761) (t!6360 lt!73543))))))

(assert (=> d!45713 (= (isStrictlySorted!320 lt!73543) e!93152)))

(declare-fun b!142972 () Bool)

(declare-fun e!93153 () Bool)

(assert (=> b!142972 (= e!93152 e!93153)))

(declare-fun res!68137 () Bool)

(assert (=> b!142972 (=> (not res!68137) (not e!93153))))

(assert (=> b!142972 (= res!68137 (bvslt (_1!1352 (h!2367 lt!73543)) (_1!1352 (h!2367 (t!6360 lt!73543)))))))

(declare-fun b!142973 () Bool)

(assert (=> b!142973 (= e!93153 (isStrictlySorted!320 (t!6360 lt!73543)))))

(assert (= (and d!45713 (not res!68136)) b!142972))

(assert (= (and b!142972 res!68137) b!142973))

(declare-fun m!172811 () Bool)

(assert (=> b!142973 m!172811))

(assert (=> d!43881 d!45713))

(declare-fun d!45715 () Bool)

(declare-fun res!68138 () Bool)

(declare-fun e!93154 () Bool)

(assert (=> d!45715 (=> res!68138 e!93154)))

(assert (=> d!45715 (= res!68138 (or ((_ is Nil!1761) lt!74019) ((_ is Nil!1761) (t!6360 lt!74019))))))

(assert (=> d!45715 (= (isStrictlySorted!320 lt!74019) e!93154)))

(declare-fun b!142974 () Bool)

(declare-fun e!93155 () Bool)

(assert (=> b!142974 (= e!93154 e!93155)))

(declare-fun res!68139 () Bool)

(assert (=> b!142974 (=> (not res!68139) (not e!93155))))

(assert (=> b!142974 (= res!68139 (bvslt (_1!1352 (h!2367 lt!74019)) (_1!1352 (h!2367 (t!6360 lt!74019)))))))

(declare-fun b!142975 () Bool)

(assert (=> b!142975 (= e!93155 (isStrictlySorted!320 (t!6360 lt!74019)))))

(assert (= (and d!45715 (not res!68138)) b!142974))

(assert (= (and b!142974 res!68139) b!142975))

(declare-fun m!172813 () Bool)

(assert (=> b!142975 m!172813))

(assert (=> d!44045 d!45715))

(declare-fun d!45717 () Bool)

(declare-fun res!68140 () Bool)

(declare-fun e!93156 () Bool)

(assert (=> d!45717 (=> res!68140 e!93156)))

(assert (=> d!45717 (= res!68140 (or ((_ is Nil!1761) (toList!889 lt!73144)) ((_ is Nil!1761) (t!6360 (toList!889 lt!73144)))))))

(assert (=> d!45717 (= (isStrictlySorted!320 (toList!889 lt!73144)) e!93156)))

(declare-fun b!142976 () Bool)

(declare-fun e!93157 () Bool)

(assert (=> b!142976 (= e!93156 e!93157)))

(declare-fun res!68141 () Bool)

(assert (=> b!142976 (=> (not res!68141) (not e!93157))))

(assert (=> b!142976 (= res!68141 (bvslt (_1!1352 (h!2367 (toList!889 lt!73144))) (_1!1352 (h!2367 (t!6360 (toList!889 lt!73144))))))))

(declare-fun b!142977 () Bool)

(assert (=> b!142977 (= e!93157 (isStrictlySorted!320 (t!6360 (toList!889 lt!73144))))))

(assert (= (and d!45717 (not res!68140)) b!142976))

(assert (= (and b!142976 res!68141) b!142977))

(assert (=> b!142977 m!172247))

(assert (=> d!44045 d!45717))

(declare-fun d!45719 () Bool)

(assert (=> d!45719 (isDefined!129 (getValueByKey!175 (toList!889 lt!73144) lt!73142))))

(declare-fun lt!74953 () Unit!4395)

(assert (=> d!45719 (= lt!74953 (choose!868 (toList!889 lt!73144) lt!73142))))

(declare-fun e!93158 () Bool)

(assert (=> d!45719 e!93158))

(declare-fun res!68142 () Bool)

(assert (=> d!45719 (=> (not res!68142) (not e!93158))))

(assert (=> d!45719 (= res!68142 (isStrictlySorted!320 (toList!889 lt!73144)))))

(assert (=> d!45719 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73144) lt!73142) lt!74953)))

(declare-fun b!142978 () Bool)

(assert (=> b!142978 (= e!93158 (containsKey!179 (toList!889 lt!73144) lt!73142))))

(assert (= (and d!45719 res!68142) b!142978))

(assert (=> d!45719 m!168663))

(assert (=> d!45719 m!168663))

(assert (=> d!45719 m!168665))

(declare-fun m!172815 () Bool)

(assert (=> d!45719 m!172815))

(assert (=> d!45719 m!169029))

(assert (=> b!142978 m!168659))

(assert (=> b!140789 d!45719))

(assert (=> b!140789 d!45521))

(assert (=> b!140789 d!45523))

(declare-fun d!45721 () Bool)

(declare-fun res!68143 () Bool)

(declare-fun e!93159 () Bool)

(assert (=> d!45721 (=> res!68143 e!93159)))

(assert (=> d!45721 (= res!68143 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45721 (= (containsKey!179 (t!6360 (toList!889 lt!73135)) #b1000000000000000000000000000000000000000000000000000000000000000) e!93159)))

(declare-fun b!142979 () Bool)

(declare-fun e!93160 () Bool)

(assert (=> b!142979 (= e!93159 e!93160)))

(declare-fun res!68144 () Bool)

(assert (=> b!142979 (=> (not res!68144) (not e!93160))))

(assert (=> b!142979 (= res!68144 (and (or (not ((_ is Cons!1760) (t!6360 (toList!889 lt!73135)))) (bvsle (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (t!6360 (toList!889 lt!73135))) (bvslt (_1!1352 (h!2367 (t!6360 (toList!889 lt!73135)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!142980 () Bool)

(assert (=> b!142980 (= e!93160 (containsKey!179 (t!6360 (t!6360 (toList!889 lt!73135))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45721 (not res!68143)) b!142979))

(assert (= (and b!142979 res!68144) b!142980))

(declare-fun m!172817 () Bool)

(assert (=> b!142980 m!172817))

(assert (=> b!140833 d!45721))

(assert (=> b!140740 d!43905))

(assert (=> b!140740 d!43525))

(assert (=> b!140740 d!43907))

(declare-fun d!45723 () Bool)

(declare-fun e!93162 () Bool)

(assert (=> d!45723 e!93162))

(declare-fun res!68145 () Bool)

(assert (=> d!45723 (=> res!68145 e!93162)))

(declare-fun lt!74954 () Bool)

(assert (=> d!45723 (= res!68145 (not lt!74954))))

(declare-fun lt!74957 () Bool)

(assert (=> d!45723 (= lt!74954 lt!74957)))

(declare-fun lt!74955 () Unit!4395)

(declare-fun e!93161 () Unit!4395)

(assert (=> d!45723 (= lt!74955 e!93161)))

(declare-fun c!27067 () Bool)

(assert (=> d!45723 (= c!27067 lt!74957)))

(assert (=> d!45723 (= lt!74957 (containsKey!179 (toList!889 lt!73593) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45723 (= (contains!921 lt!73593 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74954)))

(declare-fun b!142981 () Bool)

(declare-fun lt!74956 () Unit!4395)

(assert (=> b!142981 (= e!93161 lt!74956)))

(assert (=> b!142981 (= lt!74956 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73593) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!142981 (isDefined!129 (getValueByKey!175 (toList!889 lt!73593) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!142982 () Bool)

(declare-fun Unit!4538 () Unit!4395)

(assert (=> b!142982 (= e!93161 Unit!4538)))

(declare-fun b!142983 () Bool)

(assert (=> b!142983 (= e!93162 (isDefined!129 (getValueByKey!175 (toList!889 lt!73593) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45723 c!27067) b!142981))

(assert (= (and d!45723 (not c!27067)) b!142982))

(assert (= (and d!45723 (not res!68145)) b!142983))

(declare-fun m!172819 () Bool)

(assert (=> d!45723 m!172819))

(declare-fun m!172821 () Bool)

(assert (=> b!142981 m!172821))

(declare-fun m!172823 () Bool)

(assert (=> b!142981 m!172823))

(assert (=> b!142981 m!172823))

(declare-fun m!172825 () Bool)

(assert (=> b!142981 m!172825))

(assert (=> b!142983 m!172823))

(assert (=> b!142983 m!172823))

(assert (=> b!142983 m!172825))

(assert (=> d!43613 d!45723))

(assert (=> d!43613 d!43661))

(declare-fun b!142986 () Bool)

(declare-fun e!93164 () Option!181)

(assert (=> b!142986 (= e!93164 (getValueByKey!175 (t!6360 (toList!889 lt!74022)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!142985 () Bool)

(declare-fun e!93163 () Option!181)

(assert (=> b!142985 (= e!93163 e!93164)))

(declare-fun c!27069 () Bool)

(assert (=> b!142985 (= c!27069 (and ((_ is Cons!1760) (toList!889 lt!74022)) (not (= (_1!1352 (h!2367 (toList!889 lt!74022))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!142987 () Bool)

(assert (=> b!142987 (= e!93164 None!179)))

(declare-fun b!142984 () Bool)

(assert (=> b!142984 (= e!93163 (Some!180 (_2!1352 (h!2367 (toList!889 lt!74022)))))))

(declare-fun d!45725 () Bool)

(declare-fun c!27068 () Bool)

(assert (=> d!45725 (= c!27068 (and ((_ is Cons!1760) (toList!889 lt!74022)) (= (_1!1352 (h!2367 (toList!889 lt!74022))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45725 (= (getValueByKey!175 (toList!889 lt!74022) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93163)))

(assert (= (and d!45725 c!27068) b!142984))

(assert (= (and d!45725 (not c!27068)) b!142985))

(assert (= (and b!142985 c!27069) b!142986))

(assert (= (and b!142985 (not c!27069)) b!142987))

(declare-fun m!172827 () Bool)

(assert (=> b!142986 m!172827))

(assert (=> b!140946 d!45725))

(declare-fun b!142990 () Bool)

(declare-fun e!93166 () Option!181)

(assert (=> b!142990 (= e!93166 (getValueByKey!175 (t!6360 (t!6360 (toList!889 lt!73140))) lt!73151))))

(declare-fun b!142989 () Bool)

(declare-fun e!93165 () Option!181)

(assert (=> b!142989 (= e!93165 e!93166)))

(declare-fun c!27071 () Bool)

(assert (=> b!142989 (= c!27071 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73140))) (not (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73140)))) lt!73151))))))

(declare-fun b!142991 () Bool)

(assert (=> b!142991 (= e!93166 None!179)))

(declare-fun b!142988 () Bool)

(assert (=> b!142988 (= e!93165 (Some!180 (_2!1352 (h!2367 (t!6360 (toList!889 lt!73140))))))))

(declare-fun d!45727 () Bool)

(declare-fun c!27070 () Bool)

(assert (=> d!45727 (= c!27070 (and ((_ is Cons!1760) (t!6360 (toList!889 lt!73140))) (= (_1!1352 (h!2367 (t!6360 (toList!889 lt!73140)))) lt!73151)))))

(assert (=> d!45727 (= (getValueByKey!175 (t!6360 (toList!889 lt!73140)) lt!73151) e!93165)))

(assert (= (and d!45727 c!27070) b!142988))

(assert (= (and d!45727 (not c!27070)) b!142989))

(assert (= (and b!142989 c!27071) b!142990))

(assert (= (and b!142989 (not c!27071)) b!142991))

(declare-fun m!172829 () Bool)

(assert (=> b!142990 m!172829))

(assert (=> b!140455 d!45727))

(declare-fun d!45729 () Bool)

(declare-fun e!93168 () Bool)

(assert (=> d!45729 e!93168))

(declare-fun res!68146 () Bool)

(assert (=> d!45729 (=> res!68146 e!93168)))

(declare-fun lt!74958 () Bool)

(assert (=> d!45729 (= res!68146 (not lt!74958))))

(declare-fun lt!74961 () Bool)

(assert (=> d!45729 (= lt!74958 lt!74961)))

(declare-fun lt!74959 () Unit!4395)

(declare-fun e!93167 () Unit!4395)

(assert (=> d!45729 (= lt!74959 e!93167)))

(declare-fun c!27072 () Bool)

(assert (=> d!45729 (= c!27072 lt!74961)))

(assert (=> d!45729 (= lt!74961 (containsKey!179 (toList!889 lt!73804) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45729 (= (contains!921 lt!73804 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74958)))

(declare-fun b!142992 () Bool)

(declare-fun lt!74960 () Unit!4395)

(assert (=> b!142992 (= e!93167 lt!74960)))

(assert (=> b!142992 (= lt!74960 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73804) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> b!142992 (isDefined!129 (getValueByKey!175 (toList!889 lt!73804) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142993 () Bool)

(declare-fun Unit!4539 () Unit!4395)

(assert (=> b!142993 (= e!93167 Unit!4539)))

(declare-fun b!142994 () Bool)

(assert (=> b!142994 (= e!93168 (isDefined!129 (getValueByKey!175 (toList!889 lt!73804) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!45729 c!27072) b!142992))

(assert (= (and d!45729 (not c!27072)) b!142993))

(assert (= (and d!45729 (not res!68146)) b!142994))

(declare-fun m!172831 () Bool)

(assert (=> d!45729 m!172831))

(declare-fun m!172833 () Bool)

(assert (=> b!142992 m!172833))

(assert (=> b!142992 m!168409))

(assert (=> b!142992 m!168409))

(declare-fun m!172835 () Bool)

(assert (=> b!142992 m!172835))

(assert (=> b!142994 m!168409))

(assert (=> b!142994 m!168409))

(assert (=> b!142994 m!172835))

(assert (=> d!43869 d!45729))

(declare-fun e!93170 () Option!181)

(declare-fun b!142997 () Bool)

(assert (=> b!142997 (= e!93170 (getValueByKey!175 (t!6360 lt!73805) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!142996 () Bool)

(declare-fun e!93169 () Option!181)

(assert (=> b!142996 (= e!93169 e!93170)))

(declare-fun c!27074 () Bool)

(assert (=> b!142996 (= c!27074 (and ((_ is Cons!1760) lt!73805) (not (= (_1!1352 (h!2367 lt!73805)) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun b!142998 () Bool)

(assert (=> b!142998 (= e!93170 None!179)))

(declare-fun b!142995 () Bool)

(assert (=> b!142995 (= e!93169 (Some!180 (_2!1352 (h!2367 lt!73805))))))

(declare-fun d!45731 () Bool)

(declare-fun c!27073 () Bool)

(assert (=> d!45731 (= c!27073 (and ((_ is Cons!1760) lt!73805) (= (_1!1352 (h!2367 lt!73805)) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!45731 (= (getValueByKey!175 lt!73805 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) e!93169)))

(assert (= (and d!45731 c!27073) b!142995))

(assert (= (and d!45731 (not c!27073)) b!142996))

(assert (= (and b!142996 c!27074) b!142997))

(assert (= (and b!142996 (not c!27074)) b!142998))

(declare-fun m!172837 () Bool)

(assert (=> b!142997 m!172837))

(assert (=> d!43869 d!45731))

(declare-fun d!45733 () Bool)

(assert (=> d!45733 (= (getValueByKey!175 lt!73805 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) (Some!180 (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun lt!74962 () Unit!4395)

(assert (=> d!45733 (= lt!74962 (choose!873 lt!73805 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun e!93171 () Bool)

(assert (=> d!45733 e!93171))

(declare-fun res!68147 () Bool)

(assert (=> d!45733 (=> (not res!68147) (not e!93171))))

(assert (=> d!45733 (= res!68147 (isStrictlySorted!320 lt!73805))))

(assert (=> d!45733 (= (lemmaContainsTupThenGetReturnValue!91 lt!73805 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74962)))

(declare-fun b!142999 () Bool)

(declare-fun res!68148 () Bool)

(assert (=> b!142999 (=> (not res!68148) (not e!93171))))

(assert (=> b!142999 (= res!68148 (containsKey!179 lt!73805 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!143000 () Bool)

(assert (=> b!143000 (= e!93171 (contains!923 lt!73805 (tuple2!2685 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (= (and d!45733 res!68147) b!142999))

(assert (= (and b!142999 res!68148) b!143000))

(assert (=> d!45733 m!168403))

(declare-fun m!172839 () Bool)

(assert (=> d!45733 m!172839))

(declare-fun m!172841 () Bool)

(assert (=> d!45733 m!172841))

(declare-fun m!172843 () Bool)

(assert (=> b!142999 m!172843))

(declare-fun m!172845 () Bool)

(assert (=> b!143000 m!172845))

(assert (=> d!43869 d!45733))

(declare-fun d!45735 () Bool)

(declare-fun e!93172 () Bool)

(assert (=> d!45735 e!93172))

(declare-fun res!68150 () Bool)

(assert (=> d!45735 (=> (not res!68150) (not e!93172))))

(declare-fun lt!74963 () List!1764)

(assert (=> d!45735 (= res!68150 (isStrictlySorted!320 lt!74963))))

(declare-fun e!93174 () List!1764)

(assert (=> d!45735 (= lt!74963 e!93174)))

(declare-fun c!27075 () Bool)

(assert (=> d!45735 (= c!27075 (and ((_ is Cons!1760) (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)))) (bvslt (_1!1352 (h!2367 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555))))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> d!45735 (isStrictlySorted!320 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555))))))

(assert (=> d!45735 (= (insertStrictlySorted!93 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))) lt!74963)))

(declare-fun b!143001 () Bool)

(assert (=> b!143001 (= e!93172 (contains!923 lt!74963 (tuple2!2685 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun bm!15806 () Bool)

(declare-fun call!15809 () List!1764)

(declare-fun e!93175 () List!1764)

(assert (=> bm!15806 (= call!15809 ($colon$colon!93 e!93175 (ite c!27075 (h!2367 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)))) (tuple2!2685 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))))

(declare-fun c!27078 () Bool)

(assert (=> bm!15806 (= c!27078 c!27075)))

(declare-fun b!143002 () Bool)

(assert (=> b!143002 (= e!93174 call!15809)))

(declare-fun b!143003 () Bool)

(assert (=> b!143003 (= e!93175 (insertStrictlySorted!93 (t!6360 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) (_2!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!143004 () Bool)

(declare-fun e!93176 () List!1764)

(declare-fun call!15810 () List!1764)

(assert (=> b!143004 (= e!93176 call!15810)))

(declare-fun bm!15807 () Bool)

(assert (=> bm!15807 (= call!15810 call!15809)))

(declare-fun b!143005 () Bool)

(declare-fun e!93173 () List!1764)

(declare-fun call!15811 () List!1764)

(assert (=> b!143005 (= e!93173 call!15811)))

(declare-fun c!27077 () Bool)

(declare-fun b!143006 () Bool)

(assert (=> b!143006 (= c!27077 (and ((_ is Cons!1760) (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)))) (bvsgt (_1!1352 (h!2367 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555))))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(assert (=> b!143006 (= e!93176 e!93173)))

(declare-fun b!143007 () Bool)

(assert (=> b!143007 (= e!93174 e!93176)))

(declare-fun c!27076 () Bool)

(assert (=> b!143007 (= c!27076 (and ((_ is Cons!1760) (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)))) (= (_1!1352 (h!2367 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555))))) (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!143008 () Bool)

(assert (=> b!143008 (= e!93175 (ite c!27076 (t!6360 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)))) (ite c!27077 (Cons!1760 (h!2367 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555)))) (t!6360 (toList!889 (ite c!26223 call!15556 (ite c!26226 call!15558 call!15555))))) Nil!1761)))))

(declare-fun bm!15808 () Bool)

(assert (=> bm!15808 (= call!15811 call!15810)))

(declare-fun b!143009 () Bool)

(declare-fun res!68149 () Bool)

(assert (=> b!143009 (=> (not res!68149) (not e!93172))))

(assert (=> b!143009 (= res!68149 (containsKey!179 lt!74963 (_1!1352 (ite (or c!26223 c!26226) (tuple2!2685 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2790 newMap!16)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(declare-fun b!143010 () Bool)

(assert (=> b!143010 (= e!93173 call!15811)))

(assert (= (and d!45735 c!27075) b!143002))

(assert (= (and d!45735 (not c!27075)) b!143007))

(assert (= (and b!143007 c!27076) b!143004))

(assert (= (and b!143007 (not c!27076)) b!143006))

(assert (= (and b!143006 c!27077) b!143010))

(assert (= (and b!143006 (not c!27077)) b!143005))

(assert (= (or b!143010 b!143005) bm!15808))

(assert (= (or b!143004 bm!15808) bm!15807))

(assert (= (or b!143002 bm!15807) bm!15806))

(assert (= (and bm!15806 c!27078) b!143003))

(assert (= (and bm!15806 (not c!27078)) b!143008))

(assert (= (and d!45735 res!68150) b!143009))

(assert (= (and b!143009 res!68149) b!143001))

(declare-fun m!172847 () Bool)

(assert (=> b!143001 m!172847))

(declare-fun m!172849 () Bool)

(assert (=> b!143009 m!172849))

(declare-fun m!172851 () Bool)

(assert (=> b!143003 m!172851))

(declare-fun m!172853 () Bool)

(assert (=> bm!15806 m!172853))

(declare-fun m!172855 () Bool)

(assert (=> d!45735 m!172855))

(declare-fun m!172857 () Bool)

(assert (=> d!45735 m!172857))

(assert (=> d!43869 d!45735))

(declare-fun d!45737 () Bool)

(assert (=> d!45737 (= (apply!120 lt!73630 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1538 (getValueByKey!175 (toList!889 lt!73630) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!6067 () Bool)

(assert (= bs!6067 d!45737))

(assert (=> bs!6067 m!167115))

(assert (=> bs!6067 m!171143))

(assert (=> bs!6067 m!171143))

(declare-fun m!172859 () Bool)

(assert (=> bs!6067 m!172859))

(assert (=> b!140375 d!45737))

(assert (=> b!140375 d!44905))

(declare-fun d!45739 () Bool)

(assert (=> d!45739 (= (get!1538 (getValueByKey!175 (toList!889 lt!73264) lt!73256)) (v!3283 (getValueByKey!175 (toList!889 lt!73264) lt!73256)))))

(assert (=> d!44131 d!45739))

(declare-fun b!143013 () Bool)

(declare-fun e!93178 () Option!181)

(assert (=> b!143013 (= e!93178 (getValueByKey!175 (t!6360 (toList!889 lt!73264)) lt!73256))))

(declare-fun b!143012 () Bool)

(declare-fun e!93177 () Option!181)

(assert (=> b!143012 (= e!93177 e!93178)))

(declare-fun c!27080 () Bool)

(assert (=> b!143012 (= c!27080 (and ((_ is Cons!1760) (toList!889 lt!73264)) (not (= (_1!1352 (h!2367 (toList!889 lt!73264))) lt!73256))))))

(declare-fun b!143014 () Bool)

(assert (=> b!143014 (= e!93178 None!179)))

(declare-fun b!143011 () Bool)

(assert (=> b!143011 (= e!93177 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73264)))))))

(declare-fun d!45741 () Bool)

(declare-fun c!27079 () Bool)

(assert (=> d!45741 (= c!27079 (and ((_ is Cons!1760) (toList!889 lt!73264)) (= (_1!1352 (h!2367 (toList!889 lt!73264))) lt!73256)))))

(assert (=> d!45741 (= (getValueByKey!175 (toList!889 lt!73264) lt!73256) e!93177)))

(assert (= (and d!45741 c!27079) b!143011))

(assert (= (and d!45741 (not c!27079)) b!143012))

(assert (= (and b!143012 c!27080) b!143013))

(assert (= (and b!143012 (not c!27080)) b!143014))

(declare-fun m!172861 () Bool)

(assert (=> b!143013 m!172861))

(assert (=> d!44131 d!45741))

(declare-fun lt!74964 () Bool)

(declare-fun d!45743 () Bool)

(assert (=> d!45743 (= lt!74964 (select (content!137 (toList!889 lt!74022)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!93179 () Bool)

(assert (=> d!45743 (= lt!74964 e!93179)))

(declare-fun res!68152 () Bool)

(assert (=> d!45743 (=> (not res!68152) (not e!93179))))

(assert (=> d!45743 (= res!68152 ((_ is Cons!1760) (toList!889 lt!74022)))))

(assert (=> d!45743 (= (contains!923 (toList!889 lt!74022) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74964)))

(declare-fun b!143015 () Bool)

(declare-fun e!93180 () Bool)

(assert (=> b!143015 (= e!93179 e!93180)))

(declare-fun res!68151 () Bool)

(assert (=> b!143015 (=> res!68151 e!93180)))

(assert (=> b!143015 (= res!68151 (= (h!2367 (toList!889 lt!74022)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!143016 () Bool)

(assert (=> b!143016 (= e!93180 (contains!923 (t!6360 (toList!889 lt!74022)) (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45743 res!68152) b!143015))

(assert (= (and b!143015 (not res!68151)) b!143016))

(declare-fun m!172863 () Bool)

(assert (=> d!45743 m!172863))

(declare-fun m!172865 () Bool)

(assert (=> d!45743 m!172865))

(declare-fun m!172867 () Bool)

(assert (=> b!143016 m!172867))

(assert (=> b!140947 d!45743))

(assert (=> b!140874 d!44367))

(assert (=> b!140874 d!44369))

(declare-fun d!45745 () Bool)

(declare-fun res!68153 () Bool)

(declare-fun e!93181 () Bool)

(assert (=> d!45745 (=> res!68153 e!93181)))

(assert (=> d!45745 (= res!68153 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(assert (=> d!45745 (= (containsKey!179 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)) e!93181)))

(declare-fun b!143017 () Bool)

(declare-fun e!93182 () Bool)

(assert (=> b!143017 (= e!93181 e!93182)))

(declare-fun res!68154 () Bool)

(assert (=> b!143017 (=> (not res!68154) (not e!93182))))

(assert (=> b!143017 (= res!68154 (and (or (not ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (bvsle (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))) ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355))))))

(declare-fun b!143018 () Bool)

(assert (=> b!143018 (= e!93182 (containsKey!179 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355)))))

(assert (= (and d!45745 (not res!68153)) b!143017))

(assert (= (and b!143017 res!68154) b!143018))

(assert (=> b!143018 m!166733))

(declare-fun m!172869 () Bool)

(assert (=> b!143018 m!172869))

(assert (=> d!43913 d!45745))

(declare-fun d!45747 () Bool)

(declare-fun e!93184 () Bool)

(assert (=> d!45747 e!93184))

(declare-fun res!68155 () Bool)

(assert (=> d!45747 (=> res!68155 e!93184)))

(declare-fun lt!74965 () Bool)

(assert (=> d!45747 (= res!68155 (not lt!74965))))

(declare-fun lt!74968 () Bool)

(assert (=> d!45747 (= lt!74965 lt!74968)))

(declare-fun lt!74966 () Unit!4395)

(declare-fun e!93183 () Unit!4395)

(assert (=> d!45747 (= lt!74966 e!93183)))

(declare-fun c!27081 () Bool)

(assert (=> d!45747 (= c!27081 lt!74968)))

(assert (=> d!45747 (= lt!74968 (containsKey!179 (toList!889 lt!73643) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45747 (= (contains!921 lt!73643 #b0000000000000000000000000000000000000000000000000000000000000000) lt!74965)))

(declare-fun b!143019 () Bool)

(declare-fun lt!74967 () Unit!4395)

(assert (=> b!143019 (= e!93183 lt!74967)))

(assert (=> b!143019 (= lt!74967 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73643) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!143019 (isDefined!129 (getValueByKey!175 (toList!889 lt!73643) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!143020 () Bool)

(declare-fun Unit!4540 () Unit!4395)

(assert (=> b!143020 (= e!93183 Unit!4540)))

(declare-fun b!143021 () Bool)

(assert (=> b!143021 (= e!93184 (isDefined!129 (getValueByKey!175 (toList!889 lt!73643) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45747 c!27081) b!143019))

(assert (= (and d!45747 (not c!27081)) b!143020))

(assert (= (and d!45747 (not res!68155)) b!143021))

(declare-fun m!172871 () Bool)

(assert (=> d!45747 m!172871))

(declare-fun m!172873 () Bool)

(assert (=> b!143019 m!172873))

(assert (=> b!143019 m!170575))

(assert (=> b!143019 m!170575))

(declare-fun m!172875 () Bool)

(assert (=> b!143019 m!172875))

(assert (=> b!143021 m!170575))

(assert (=> b!143021 m!170575))

(assert (=> b!143021 m!172875))

(assert (=> bm!15598 d!45747))

(declare-fun d!45749 () Bool)

(declare-fun e!93186 () Bool)

(assert (=> d!45749 e!93186))

(declare-fun res!68156 () Bool)

(assert (=> d!45749 (=> res!68156 e!93186)))

(declare-fun lt!74969 () Bool)

(assert (=> d!45749 (= res!68156 (not lt!74969))))

(declare-fun lt!74972 () Bool)

(assert (=> d!45749 (= lt!74969 lt!74972)))

(declare-fun lt!74970 () Unit!4395)

(declare-fun e!93185 () Unit!4395)

(assert (=> d!45749 (= lt!74970 e!93185)))

(declare-fun c!27082 () Bool)

(assert (=> d!45749 (= c!27082 lt!74972)))

(assert (=> d!45749 (= lt!74972 (containsKey!179 (toList!889 lt!73924) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45749 (= (contains!921 lt!73924 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!74969)))

(declare-fun b!143022 () Bool)

(declare-fun lt!74971 () Unit!4395)

(assert (=> b!143022 (= e!93185 lt!74971)))

(assert (=> b!143022 (= lt!74971 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73924) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!143022 (isDefined!129 (getValueByKey!175 (toList!889 lt!73924) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!143023 () Bool)

(declare-fun Unit!4541 () Unit!4395)

(assert (=> b!143023 (= e!93185 Unit!4541)))

(declare-fun b!143024 () Bool)

(assert (=> b!143024 (= e!93186 (isDefined!129 (getValueByKey!175 (toList!889 lt!73924) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45749 c!27082) b!143022))

(assert (= (and d!45749 (not c!27082)) b!143023))

(assert (= (and d!45749 (not res!68156)) b!143024))

(assert (=> d!45749 m!166967))

(declare-fun m!172877 () Bool)

(assert (=> d!45749 m!172877))

(assert (=> b!143022 m!166967))

(declare-fun m!172879 () Bool)

(assert (=> b!143022 m!172879))

(assert (=> b!143022 m!166967))

(assert (=> b!143022 m!169727))

(assert (=> b!143022 m!169727))

(declare-fun m!172881 () Bool)

(assert (=> b!143022 m!172881))

(assert (=> b!143024 m!166967))

(assert (=> b!143024 m!169727))

(assert (=> b!143024 m!169727))

(assert (=> b!143024 m!172881))

(assert (=> b!140840 d!45749))

(declare-fun d!45751 () Bool)

(declare-fun res!68157 () Bool)

(declare-fun e!93187 () Bool)

(assert (=> d!45751 (=> res!68157 e!93187)))

(assert (=> d!45751 (= res!68157 (and ((_ is Cons!1760) (toList!889 lt!73146)) (= (_1!1352 (h!2367 (toList!889 lt!73146))) lt!73152)))))

(assert (=> d!45751 (= (containsKey!179 (toList!889 lt!73146) lt!73152) e!93187)))

(declare-fun b!143025 () Bool)

(declare-fun e!93188 () Bool)

(assert (=> b!143025 (= e!93187 e!93188)))

(declare-fun res!68158 () Bool)

(assert (=> b!143025 (=> (not res!68158) (not e!93188))))

(assert (=> b!143025 (= res!68158 (and (or (not ((_ is Cons!1760) (toList!889 lt!73146))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73146))) lt!73152)) ((_ is Cons!1760) (toList!889 lt!73146)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73146))) lt!73152)))))

(declare-fun b!143026 () Bool)

(assert (=> b!143026 (= e!93188 (containsKey!179 (t!6360 (toList!889 lt!73146)) lt!73152))))

(assert (= (and d!45751 (not res!68157)) b!143025))

(assert (= (and b!143025 res!68158) b!143026))

(declare-fun m!172883 () Bool)

(assert (=> b!143026 m!172883))

(assert (=> d!43603 d!45751))

(assert (=> b!140737 d!43899))

(assert (=> b!140737 d!43495))

(assert (=> d!43683 d!43685))

(assert (=> d!43683 d!43687))

(declare-fun d!45753 () Bool)

(assert (=> d!45753 (isDefined!129 (getValueByKey!175 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))))))

(assert (=> d!45753 true))

(declare-fun _$12!419 () Unit!4395)

(assert (=> d!45753 (= (choose!868 (toList!889 call!15514) (ite c!26142 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (select (arr!2314 (_keys!4699 newMap!16)) (index!3320 lt!73228)))) _$12!419)))

(declare-fun bs!6068 () Bool)

(assert (= bs!6068 d!45753))

(assert (=> bs!6068 m!167135))

(assert (=> bs!6068 m!167135))

(assert (=> bs!6068 m!167137))

(assert (=> d!43683 d!45753))

(declare-fun d!45755 () Bool)

(declare-fun res!68159 () Bool)

(declare-fun e!93189 () Bool)

(assert (=> d!45755 (=> res!68159 e!93189)))

(assert (=> d!45755 (= res!68159 (or ((_ is Nil!1761) (toList!889 call!15514)) ((_ is Nil!1761) (t!6360 (toList!889 call!15514)))))))

(assert (=> d!45755 (= (isStrictlySorted!320 (toList!889 call!15514)) e!93189)))

(declare-fun b!143027 () Bool)

(declare-fun e!93190 () Bool)

(assert (=> b!143027 (= e!93189 e!93190)))

(declare-fun res!68160 () Bool)

(assert (=> b!143027 (=> (not res!68160) (not e!93190))))

(assert (=> b!143027 (= res!68160 (bvslt (_1!1352 (h!2367 (toList!889 call!15514))) (_1!1352 (h!2367 (t!6360 (toList!889 call!15514))))))))

(declare-fun b!143028 () Bool)

(assert (=> b!143028 (= e!93190 (isStrictlySorted!320 (t!6360 (toList!889 call!15514))))))

(assert (= (and d!45755 (not res!68159)) b!143027))

(assert (= (and b!143027 res!68160) b!143028))

(declare-fun m!172885 () Bool)

(assert (=> b!143028 m!172885))

(assert (=> d!43683 d!45755))

(declare-fun b!143031 () Bool)

(declare-fun e!93192 () Option!181)

(assert (=> b!143031 (= e!93192 (getValueByKey!175 (t!6360 (toList!889 lt!73908)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143030 () Bool)

(declare-fun e!93191 () Option!181)

(assert (=> b!143030 (= e!93191 e!93192)))

(declare-fun c!27084 () Bool)

(assert (=> b!143030 (= c!27084 (and ((_ is Cons!1760) (toList!889 lt!73908)) (not (= (_1!1352 (h!2367 (toList!889 lt!73908))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!143032 () Bool)

(assert (=> b!143032 (= e!93192 None!179)))

(declare-fun b!143029 () Bool)

(assert (=> b!143029 (= e!93191 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73908)))))))

(declare-fun c!27083 () Bool)

(declare-fun d!45757 () Bool)

(assert (=> d!45757 (= c!27083 (and ((_ is Cons!1760) (toList!889 lt!73908)) (= (_1!1352 (h!2367 (toList!889 lt!73908))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45757 (= (getValueByKey!175 (toList!889 lt!73908) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93191)))

(assert (= (and d!45757 c!27083) b!143029))

(assert (= (and d!45757 (not c!27083)) b!143030))

(assert (= (and b!143030 c!27084) b!143031))

(assert (= (and b!143030 (not c!27084)) b!143032))

(declare-fun m!172887 () Bool)

(assert (=> b!143031 m!172887))

(assert (=> b!140815 d!45757))

(declare-fun d!45759 () Bool)

(declare-fun res!68161 () Bool)

(declare-fun e!93193 () Bool)

(assert (=> d!45759 (=> res!68161 e!93193)))

(assert (=> d!45759 (= res!68161 (and ((_ is Cons!1760) (toList!889 lt!73450)) (= (_1!1352 (h!2367 (toList!889 lt!73450))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45759 (= (containsKey!179 (toList!889 lt!73450) #b1000000000000000000000000000000000000000000000000000000000000000) e!93193)))

(declare-fun b!143033 () Bool)

(declare-fun e!93194 () Bool)

(assert (=> b!143033 (= e!93193 e!93194)))

(declare-fun res!68162 () Bool)

(assert (=> b!143033 (=> (not res!68162) (not e!93194))))

(assert (=> b!143033 (= res!68162 (and (or (not ((_ is Cons!1760) (toList!889 lt!73450))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73450))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73450)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73450))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!143034 () Bool)

(assert (=> b!143034 (= e!93194 (containsKey!179 (t!6360 (toList!889 lt!73450)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45759 (not res!68161)) b!143033))

(assert (= (and b!143033 res!68162) b!143034))

(declare-fun m!172889 () Bool)

(assert (=> b!143034 m!172889))

(assert (=> d!43849 d!45759))

(assert (=> b!140493 d!44309))

(assert (=> b!140493 d!43693))

(declare-fun d!45761 () Bool)

(assert (=> d!45761 (= (apply!120 lt!74058 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1538 (getValueByKey!175 (toList!889 lt!74058) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!6069 () Bool)

(assert (= bs!6069 d!45761))

(assert (=> bs!6069 m!171173))

(assert (=> bs!6069 m!171173))

(declare-fun m!172891 () Bool)

(assert (=> bs!6069 m!172891))

(assert (=> b!141034 d!45761))

(declare-fun d!45763 () Bool)

(assert (=> d!45763 (= (get!1538 (getValueByKey!175 (toList!889 lt!73455) lt!73466)) (v!3283 (getValueByKey!175 (toList!889 lt!73455) lt!73466)))))

(assert (=> d!43825 d!45763))

(declare-fun b!143037 () Bool)

(declare-fun e!93196 () Option!181)

(assert (=> b!143037 (= e!93196 (getValueByKey!175 (t!6360 (toList!889 lt!73455)) lt!73466))))

(declare-fun b!143036 () Bool)

(declare-fun e!93195 () Option!181)

(assert (=> b!143036 (= e!93195 e!93196)))

(declare-fun c!27086 () Bool)

(assert (=> b!143036 (= c!27086 (and ((_ is Cons!1760) (toList!889 lt!73455)) (not (= (_1!1352 (h!2367 (toList!889 lt!73455))) lt!73466))))))

(declare-fun b!143038 () Bool)

(assert (=> b!143038 (= e!93196 None!179)))

(declare-fun b!143035 () Bool)

(assert (=> b!143035 (= e!93195 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73455)))))))

(declare-fun d!45765 () Bool)

(declare-fun c!27085 () Bool)

(assert (=> d!45765 (= c!27085 (and ((_ is Cons!1760) (toList!889 lt!73455)) (= (_1!1352 (h!2367 (toList!889 lt!73455))) lt!73466)))))

(assert (=> d!45765 (= (getValueByKey!175 (toList!889 lt!73455) lt!73466) e!93195)))

(assert (= (and d!45765 c!27085) b!143035))

(assert (= (and d!45765 (not c!27085)) b!143036))

(assert (= (and b!143036 c!27086) b!143037))

(assert (= (and b!143036 (not c!27086)) b!143038))

(declare-fun m!172893 () Bool)

(assert (=> b!143037 m!172893))

(assert (=> d!43825 d!45765))

(declare-fun lt!74973 () Bool)

(declare-fun d!45767 () Bool)

(assert (=> d!45767 (= lt!74973 (select (content!137 (toList!889 lt!73982)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun e!93197 () Bool)

(assert (=> d!45767 (= lt!74973 e!93197)))

(declare-fun res!68164 () Bool)

(assert (=> d!45767 (=> (not res!68164) (not e!93197))))

(assert (=> d!45767 (= res!68164 ((_ is Cons!1760) (toList!889 lt!73982)))))

(assert (=> d!45767 (= (contains!923 (toList!889 lt!73982) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))) lt!74973)))

(declare-fun b!143039 () Bool)

(declare-fun e!93198 () Bool)

(assert (=> b!143039 (= e!93197 e!93198)))

(declare-fun res!68163 () Bool)

(assert (=> b!143039 (=> res!68163 e!93198)))

(assert (=> b!143039 (= res!68163 (= (h!2367 (toList!889 lt!73982)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(declare-fun b!143040 () Bool)

(assert (=> b!143040 (= e!93198 (contains!923 (t!6360 (toList!889 lt!73982)) (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!26153 (ite c!26151 (minValue!2790 newMap!16) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2790 newMap!16)))))))

(assert (= (and d!45767 res!68164) b!143039))

(assert (= (and b!143039 (not res!68163)) b!143040))

(declare-fun m!172895 () Bool)

(assert (=> d!45767 m!172895))

(declare-fun m!172897 () Bool)

(assert (=> d!45767 m!172897))

(declare-fun m!172899 () Bool)

(assert (=> b!143040 m!172899))

(assert (=> b!140904 d!45767))

(declare-fun d!45769 () Bool)

(assert (=> d!45769 (= (get!1538 (getValueByKey!175 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) lt!73499)) (v!3283 (getValueByKey!175 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) lt!73499)))))

(assert (=> d!43789 d!45769))

(declare-fun e!93200 () Option!181)

(declare-fun b!143043 () Bool)

(assert (=> b!143043 (= e!93200 (getValueByKey!175 (t!6360 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))) lt!73499))))

(declare-fun b!143042 () Bool)

(declare-fun e!93199 () Option!181)

(assert (=> b!143042 (= e!93199 e!93200)))

(declare-fun c!27088 () Bool)

(assert (=> b!143042 (= c!27088 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))) (not (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))) lt!73499))))))

(declare-fun b!143044 () Bool)

(assert (=> b!143044 (= e!93200 None!179)))

(declare-fun b!143041 () Bool)

(assert (=> b!143041 (= e!93199 (Some!180 (_2!1352 (h!2367 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))))))))

(declare-fun c!27087 () Bool)

(declare-fun d!45771 () Bool)

(assert (=> d!45771 (= c!27087 (and ((_ is Cons!1760) (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16))))) (= (_1!1352 (h!2367 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))))) lt!73499)))))

(assert (=> d!45771 (= (getValueByKey!175 (toList!889 (+!174 lt!73493 (tuple2!2685 lt!73497 (minValue!2790 newMap!16)))) lt!73499) e!93199)))

(assert (= (and d!45771 c!27087) b!143041))

(assert (= (and d!45771 (not c!27087)) b!143042))

(assert (= (and b!143042 c!27088) b!143043))

(assert (= (and b!143042 (not c!27088)) b!143044))

(declare-fun m!172901 () Bool)

(assert (=> b!143043 m!172901))

(assert (=> d!43789 d!45771))

(declare-fun d!45773 () Bool)

(declare-fun res!68165 () Bool)

(declare-fun e!93201 () Bool)

(assert (=> d!45773 (=> res!68165 e!93201)))

(assert (=> d!45773 (= res!68165 (and ((_ is Cons!1760) lt!73688) (= (_1!1352 (h!2367 lt!73688)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45773 (= (containsKey!179 lt!73688 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!93201)))

(declare-fun b!143045 () Bool)

(declare-fun e!93202 () Bool)

(assert (=> b!143045 (= e!93201 e!93202)))

(declare-fun res!68166 () Bool)

(assert (=> b!143045 (=> (not res!68166) (not e!93202))))

(assert (=> b!143045 (= res!68166 (and (or (not ((_ is Cons!1760) lt!73688)) (bvsle (_1!1352 (h!2367 lt!73688)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) lt!73688) (bvslt (_1!1352 (h!2367 lt!73688)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!143046 () Bool)

(assert (=> b!143046 (= e!93202 (containsKey!179 (t!6360 lt!73688) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45773 (not res!68165)) b!143045))

(assert (= (and b!143045 res!68166) b!143046))

(declare-fun m!172903 () Bool)

(assert (=> b!143046 m!172903))

(assert (=> b!140480 d!45773))

(declare-fun d!45775 () Bool)

(declare-fun e!93203 () Bool)

(assert (=> d!45775 e!93203))

(declare-fun res!68168 () Bool)

(assert (=> d!45775 (=> (not res!68168) (not e!93203))))

(declare-fun lt!74976 () ListLongMap!1747)

(assert (=> d!45775 (= res!68168 (contains!921 lt!74976 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!74977 () List!1764)

(assert (=> d!45775 (= lt!74976 (ListLongMap!1748 lt!74977))))

(declare-fun lt!74974 () Unit!4395)

(declare-fun lt!74975 () Unit!4395)

(assert (=> d!45775 (= lt!74974 lt!74975)))

(assert (=> d!45775 (= (getValueByKey!175 lt!74977 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45775 (= lt!74975 (lemmaContainsTupThenGetReturnValue!91 lt!74977 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45775 (= lt!74977 (insertStrictlySorted!93 (toList!889 call!15580) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45775 (= (+!174 call!15580 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!74976)))

(declare-fun b!143047 () Bool)

(declare-fun res!68167 () Bool)

(assert (=> b!143047 (=> (not res!68167) (not e!93203))))

(assert (=> b!143047 (= res!68167 (= (getValueByKey!175 (toList!889 lt!74976) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!143048 () Bool)

(assert (=> b!143048 (= e!93203 (contains!923 (toList!889 lt!74976) (tuple2!2685 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000) (get!1535 (select (arr!2315 (_values!2923 newMap!16)) #b00000000000000000000000000000000) (dynLambda!443 (defaultEntry!2940 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!45775 res!68168) b!143047))

(assert (= (and b!143047 res!68167) b!143048))

(declare-fun m!172905 () Bool)

(assert (=> d!45775 m!172905))

(declare-fun m!172907 () Bool)

(assert (=> d!45775 m!172907))

(declare-fun m!172909 () Bool)

(assert (=> d!45775 m!172909))

(declare-fun m!172911 () Bool)

(assert (=> d!45775 m!172911))

(declare-fun m!172913 () Bool)

(assert (=> b!143047 m!172913))

(declare-fun m!172915 () Bool)

(assert (=> b!143048 m!172915))

(assert (=> b!140269 d!45775))

(assert (=> b!140269 d!43651))

(declare-fun d!45777 () Bool)

(declare-fun e!93204 () Bool)

(assert (=> d!45777 e!93204))

(declare-fun res!68170 () Bool)

(assert (=> d!45777 (=> (not res!68170) (not e!93204))))

(declare-fun lt!74980 () ListLongMap!1747)

(assert (=> d!45777 (= res!68170 (contains!921 lt!74980 (_1!1352 (tuple2!2685 lt!73596 lt!73594))))))

(declare-fun lt!74981 () List!1764)

(assert (=> d!45777 (= lt!74980 (ListLongMap!1748 lt!74981))))

(declare-fun lt!74978 () Unit!4395)

(declare-fun lt!74979 () Unit!4395)

(assert (=> d!45777 (= lt!74978 lt!74979)))

(assert (=> d!45777 (= (getValueByKey!175 lt!74981 (_1!1352 (tuple2!2685 lt!73596 lt!73594))) (Some!180 (_2!1352 (tuple2!2685 lt!73596 lt!73594))))))

(assert (=> d!45777 (= lt!74979 (lemmaContainsTupThenGetReturnValue!91 lt!74981 (_1!1352 (tuple2!2685 lt!73596 lt!73594)) (_2!1352 (tuple2!2685 lt!73596 lt!73594))))))

(assert (=> d!45777 (= lt!74981 (insertStrictlySorted!93 (toList!889 lt!73592) (_1!1352 (tuple2!2685 lt!73596 lt!73594)) (_2!1352 (tuple2!2685 lt!73596 lt!73594))))))

(assert (=> d!45777 (= (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594)) lt!74980)))

(declare-fun b!143049 () Bool)

(declare-fun res!68169 () Bool)

(assert (=> b!143049 (=> (not res!68169) (not e!93204))))

(assert (=> b!143049 (= res!68169 (= (getValueByKey!175 (toList!889 lt!74980) (_1!1352 (tuple2!2685 lt!73596 lt!73594))) (Some!180 (_2!1352 (tuple2!2685 lt!73596 lt!73594)))))))

(declare-fun b!143050 () Bool)

(assert (=> b!143050 (= e!93204 (contains!923 (toList!889 lt!74980) (tuple2!2685 lt!73596 lt!73594)))))

(assert (= (and d!45777 res!68170) b!143049))

(assert (= (and b!143049 res!68169) b!143050))

(declare-fun m!172917 () Bool)

(assert (=> d!45777 m!172917))

(declare-fun m!172919 () Bool)

(assert (=> d!45777 m!172919))

(declare-fun m!172921 () Bool)

(assert (=> d!45777 m!172921))

(declare-fun m!172923 () Bool)

(assert (=> d!45777 m!172923))

(declare-fun m!172925 () Bool)

(assert (=> b!143049 m!172925))

(declare-fun m!172927 () Bool)

(assert (=> b!143050 m!172927))

(assert (=> b!140269 d!45777))

(declare-fun d!45779 () Bool)

(declare-fun e!93206 () Bool)

(assert (=> d!45779 e!93206))

(declare-fun res!68171 () Bool)

(assert (=> d!45779 (=> res!68171 e!93206)))

(declare-fun lt!74982 () Bool)

(assert (=> d!45779 (= res!68171 (not lt!74982))))

(declare-fun lt!74985 () Bool)

(assert (=> d!45779 (= lt!74982 lt!74985)))

(declare-fun lt!74983 () Unit!4395)

(declare-fun e!93205 () Unit!4395)

(assert (=> d!45779 (= lt!74983 e!93205)))

(declare-fun c!27089 () Bool)

(assert (=> d!45779 (= c!27089 lt!74985)))

(assert (=> d!45779 (= lt!74985 (containsKey!179 (toList!889 (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594))) lt!73595))))

(assert (=> d!45779 (= (contains!921 (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594)) lt!73595) lt!74982)))

(declare-fun b!143051 () Bool)

(declare-fun lt!74984 () Unit!4395)

(assert (=> b!143051 (= e!93205 lt!74984)))

(assert (=> b!143051 (= lt!74984 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594))) lt!73595))))

(assert (=> b!143051 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594))) lt!73595))))

(declare-fun b!143052 () Bool)

(declare-fun Unit!4542 () Unit!4395)

(assert (=> b!143052 (= e!93205 Unit!4542)))

(declare-fun b!143053 () Bool)

(assert (=> b!143053 (= e!93206 (isDefined!129 (getValueByKey!175 (toList!889 (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594))) lt!73595)))))

(assert (= (and d!45779 c!27089) b!143051))

(assert (= (and d!45779 (not c!27089)) b!143052))

(assert (= (and d!45779 (not res!68171)) b!143053))

(declare-fun m!172929 () Bool)

(assert (=> d!45779 m!172929))

(declare-fun m!172931 () Bool)

(assert (=> b!143051 m!172931))

(declare-fun m!172933 () Bool)

(assert (=> b!143051 m!172933))

(assert (=> b!143051 m!172933))

(declare-fun m!172935 () Bool)

(assert (=> b!143051 m!172935))

(assert (=> b!143053 m!172933))

(assert (=> b!143053 m!172933))

(assert (=> b!143053 m!172935))

(assert (=> b!140269 d!45779))

(declare-fun d!45781 () Bool)

(assert (=> d!45781 (not (contains!921 (+!174 lt!73592 (tuple2!2685 lt!73596 lt!73594)) lt!73595))))

(declare-fun lt!74986 () Unit!4395)

(assert (=> d!45781 (= lt!74986 (choose!875 lt!73592 lt!73596 lt!73594 lt!73595))))

(declare-fun e!93207 () Bool)

(assert (=> d!45781 e!93207))

(declare-fun res!68172 () Bool)

(assert (=> d!45781 (=> (not res!68172) (not e!93207))))

(assert (=> d!45781 (= res!68172 (not (contains!921 lt!73592 lt!73595)))))

(assert (=> d!45781 (= (addStillNotContains!66 lt!73592 lt!73596 lt!73594 lt!73595) lt!74986)))

(declare-fun b!143054 () Bool)

(assert (=> b!143054 (= e!93207 (not (= lt!73596 lt!73595)))))

(assert (= (and d!45781 res!68172) b!143054))

(assert (=> d!45781 m!167621))

(assert (=> d!45781 m!167621))

(assert (=> d!45781 m!167623))

(declare-fun m!172937 () Bool)

(assert (=> d!45781 m!172937))

(declare-fun m!172939 () Bool)

(assert (=> d!45781 m!172939))

(assert (=> b!140269 d!45781))

(assert (=> bm!15594 d!45443))

(declare-fun c!27090 () Bool)

(declare-fun call!15812 () Bool)

(declare-fun bm!15809 () Bool)

(assert (=> bm!15809 (= call!15812 (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!27090 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26344 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)))) (ite c!26344 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))))))))

(declare-fun b!143056 () Bool)

(declare-fun e!93209 () Bool)

(declare-fun e!93210 () Bool)

(assert (=> b!143056 (= e!93209 e!93210)))

(assert (=> b!143056 (= c!27090 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!143057 () Bool)

(assert (=> b!143057 (= e!93210 call!15812)))

(declare-fun d!45783 () Bool)

(declare-fun res!68175 () Bool)

(declare-fun e!93211 () Bool)

(assert (=> d!45783 (=> res!68175 e!93211)))

(assert (=> d!45783 (= res!68175 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 (v!3280 (underlying!481 thiss!992))))))))

(assert (=> d!45783 (= (arrayNoDuplicates!0 (_keys!4699 (v!3280 (underlying!481 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!26344 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)))) e!93211)))

(declare-fun e!93208 () Bool)

(declare-fun b!143055 () Bool)

(assert (=> b!143055 (= e!93208 (contains!922 (ite c!26344 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (ite c!26243 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760)) (ite c!26093 (Cons!1759 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) Nil!1760) Nil!1760))) (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!143058 () Bool)

(assert (=> b!143058 (= e!93211 e!93209)))

(declare-fun res!68173 () Bool)

(assert (=> b!143058 (=> (not res!68173) (not e!93209))))

(assert (=> b!143058 (= res!68173 (not e!93208))))

(declare-fun res!68174 () Bool)

(assert (=> b!143058 (=> (not res!68174) (not e!93208))))

(assert (=> b!143058 (= res!68174 (validKeyInArray!0 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!143059 () Bool)

(assert (=> b!143059 (= e!93210 call!15812)))

(assert (= (and d!45783 (not res!68175)) b!143058))

(assert (= (and b!143058 res!68174) b!143055))

(assert (= (and b!143058 res!68173) b!143056))

(assert (= (and b!143056 c!27090) b!143057))

(assert (= (and b!143056 (not c!27090)) b!143059))

(assert (= (or b!143057 b!143059) bm!15809))

(declare-fun m!172941 () Bool)

(assert (=> bm!15809 m!172941))

(declare-fun m!172943 () Bool)

(assert (=> bm!15809 m!172943))

(assert (=> b!143056 m!172941))

(assert (=> b!143056 m!172941))

(declare-fun m!172945 () Bool)

(assert (=> b!143056 m!172945))

(assert (=> b!143055 m!172941))

(assert (=> b!143055 m!172941))

(declare-fun m!172947 () Bool)

(assert (=> b!143055 m!172947))

(assert (=> b!143058 m!172941))

(assert (=> b!143058 m!172941))

(assert (=> b!143058 m!172945))

(assert (=> bm!15611 d!45783))

(declare-fun d!45785 () Bool)

(declare-fun e!93213 () Bool)

(assert (=> d!45785 e!93213))

(declare-fun res!68176 () Bool)

(assert (=> d!45785 (=> res!68176 e!93213)))

(declare-fun lt!74987 () Bool)

(assert (=> d!45785 (= res!68176 (not lt!74987))))

(declare-fun lt!74990 () Bool)

(assert (=> d!45785 (= lt!74987 lt!74990)))

(declare-fun lt!74988 () Unit!4395)

(declare-fun e!93212 () Unit!4395)

(assert (=> d!45785 (= lt!74988 e!93212)))

(declare-fun c!27091 () Bool)

(assert (=> d!45785 (= c!27091 lt!74990)))

(assert (=> d!45785 (= lt!74990 (containsKey!179 (toList!889 lt!73995) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(assert (=> d!45785 (= (contains!921 lt!73995 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) lt!74987)))

(declare-fun b!143060 () Bool)

(declare-fun lt!74989 () Unit!4395)

(assert (=> b!143060 (= e!93212 lt!74989)))

(assert (=> b!143060 (= lt!74989 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73995) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(assert (=> b!143060 (isDefined!129 (getValueByKey!175 (toList!889 lt!73995) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun b!143061 () Bool)

(declare-fun Unit!4543 () Unit!4395)

(assert (=> b!143061 (= e!93212 Unit!4543)))

(declare-fun b!143062 () Bool)

(assert (=> b!143062 (= e!93213 (isDefined!129 (getValueByKey!175 (toList!889 lt!73995) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(assert (= (and d!45785 c!27091) b!143060))

(assert (= (and d!45785 (not c!27091)) b!143061))

(assert (= (and d!45785 (not res!68176)) b!143062))

(declare-fun m!172949 () Bool)

(assert (=> d!45785 m!172949))

(declare-fun m!172951 () Bool)

(assert (=> b!143060 m!172951))

(assert (=> b!143060 m!168937))

(assert (=> b!143060 m!168937))

(declare-fun m!172953 () Bool)

(assert (=> b!143060 m!172953))

(assert (=> b!143062 m!168937))

(assert (=> b!143062 m!168937))

(assert (=> b!143062 m!172953))

(assert (=> d!44011 d!45785))

(declare-fun b!143065 () Bool)

(declare-fun e!93215 () Option!181)

(assert (=> b!143065 (= e!93215 (getValueByKey!175 (t!6360 lt!73996) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun b!143064 () Bool)

(declare-fun e!93214 () Option!181)

(assert (=> b!143064 (= e!93214 e!93215)))

(declare-fun c!27093 () Bool)

(assert (=> b!143064 (= c!27093 (and ((_ is Cons!1760) lt!73996) (not (= (_1!1352 (h!2367 lt!73996)) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))))

(declare-fun b!143066 () Bool)

(assert (=> b!143066 (= e!93215 None!179)))

(declare-fun b!143063 () Bool)

(assert (=> b!143063 (= e!93214 (Some!180 (_2!1352 (h!2367 lt!73996))))))

(declare-fun d!45787 () Bool)

(declare-fun c!27092 () Bool)

(assert (=> d!45787 (= c!27092 (and ((_ is Cons!1760) lt!73996) (= (_1!1352 (h!2367 lt!73996)) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(assert (=> d!45787 (= (getValueByKey!175 lt!73996 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) e!93214)))

(assert (= (and d!45787 c!27092) b!143063))

(assert (= (and d!45787 (not c!27092)) b!143064))

(assert (= (and b!143064 c!27093) b!143065))

(assert (= (and b!143064 (not c!27093)) b!143066))

(declare-fun m!172955 () Bool)

(assert (=> b!143065 m!172955))

(assert (=> d!44011 d!45787))

(declare-fun d!45789 () Bool)

(assert (=> d!45789 (= (getValueByKey!175 lt!73996 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun lt!74991 () Unit!4395)

(assert (=> d!45789 (= lt!74991 (choose!873 lt!73996 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun e!93216 () Bool)

(assert (=> d!45789 e!93216))

(declare-fun res!68177 () Bool)

(assert (=> d!45789 (=> (not res!68177) (not e!93216))))

(assert (=> d!45789 (= res!68177 (isStrictlySorted!320 lt!73996))))

(assert (=> d!45789 (= (lemmaContainsTupThenGetReturnValue!91 lt!73996 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) lt!74991)))

(declare-fun b!143067 () Bool)

(declare-fun res!68178 () Bool)

(assert (=> b!143067 (=> (not res!68178) (not e!93216))))

(assert (=> b!143067 (= res!68178 (containsKey!179 lt!73996 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun b!143068 () Bool)

(assert (=> b!143068 (= e!93216 (contains!923 lt!73996 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(assert (= (and d!45789 res!68177) b!143067))

(assert (= (and b!143067 res!68178) b!143068))

(assert (=> d!45789 m!168931))

(declare-fun m!172957 () Bool)

(assert (=> d!45789 m!172957))

(declare-fun m!172959 () Bool)

(assert (=> d!45789 m!172959))

(declare-fun m!172961 () Bool)

(assert (=> b!143067 m!172961))

(declare-fun m!172963 () Bool)

(assert (=> b!143068 m!172963))

(assert (=> d!44011 d!45789))

(declare-fun d!45791 () Bool)

(declare-fun e!93217 () Bool)

(assert (=> d!45791 e!93217))

(declare-fun res!68180 () Bool)

(assert (=> d!45791 (=> (not res!68180) (not e!93217))))

(declare-fun lt!74992 () List!1764)

(assert (=> d!45791 (= res!68180 (isStrictlySorted!320 lt!74992))))

(declare-fun e!93219 () List!1764)

(assert (=> d!45791 (= lt!74992 e!93219)))

(declare-fun c!27094 () Bool)

(assert (=> d!45791 (= c!27094 (and ((_ is Cons!1760) (toList!889 lt!73405)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73405))) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(assert (=> d!45791 (isStrictlySorted!320 (toList!889 lt!73405))))

(assert (=> d!45791 (= (insertStrictlySorted!93 (toList!889 lt!73405) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))) lt!74992)))

(declare-fun b!143069 () Bool)

(assert (=> b!143069 (= e!93217 (contains!923 lt!74992 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(declare-fun e!93220 () List!1764)

(declare-fun bm!15810 () Bool)

(declare-fun call!15813 () List!1764)

(assert (=> bm!15810 (= call!15813 ($colon$colon!93 e!93220 (ite c!27094 (h!2367 (toList!889 lt!73405)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))))

(declare-fun c!27097 () Bool)

(assert (=> bm!15810 (= c!27097 c!27094)))

(declare-fun b!143070 () Bool)

(assert (=> b!143070 (= e!93219 call!15813)))

(declare-fun b!143071 () Bool)

(assert (=> b!143071 (= e!93220 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73405)) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun b!143072 () Bool)

(declare-fun e!93221 () List!1764)

(declare-fun call!15814 () List!1764)

(assert (=> b!143072 (= e!93221 call!15814)))

(declare-fun bm!15811 () Bool)

(assert (=> bm!15811 (= call!15814 call!15813)))

(declare-fun b!143073 () Bool)

(declare-fun e!93218 () List!1764)

(declare-fun call!15815 () List!1764)

(assert (=> b!143073 (= e!93218 call!15815)))

(declare-fun c!27096 () Bool)

(declare-fun b!143074 () Bool)

(assert (=> b!143074 (= c!27096 (and ((_ is Cons!1760) (toList!889 lt!73405)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73405))) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(assert (=> b!143074 (= e!93221 e!93218)))

(declare-fun b!143075 () Bool)

(assert (=> b!143075 (= e!93219 e!93221)))

(declare-fun c!27095 () Bool)

(assert (=> b!143075 (= c!27095 (and ((_ is Cons!1760) (toList!889 lt!73405)) (= (_1!1352 (h!2367 (toList!889 lt!73405))) (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16))))))))

(declare-fun b!143076 () Bool)

(assert (=> b!143076 (= e!93220 (ite c!27095 (t!6360 (toList!889 lt!73405)) (ite c!27096 (Cons!1760 (h!2367 (toList!889 lt!73405)) (t!6360 (toList!889 lt!73405))) Nil!1761)))))

(declare-fun bm!15812 () Bool)

(assert (=> bm!15812 (= call!15815 call!15814)))

(declare-fun b!143077 () Bool)

(declare-fun res!68179 () Bool)

(assert (=> b!143077 (=> (not res!68179) (not e!93217))))

(assert (=> b!143077 (= res!68179 (containsKey!179 lt!74992 (_1!1352 (tuple2!2685 lt!73388 (minValue!2790 newMap!16)))))))

(declare-fun b!143078 () Bool)

(assert (=> b!143078 (= e!93218 call!15815)))

(assert (= (and d!45791 c!27094) b!143070))

(assert (= (and d!45791 (not c!27094)) b!143075))

(assert (= (and b!143075 c!27095) b!143072))

(assert (= (and b!143075 (not c!27095)) b!143074))

(assert (= (and b!143074 c!27096) b!143078))

(assert (= (and b!143074 (not c!27096)) b!143073))

(assert (= (or b!143078 b!143073) bm!15812))

(assert (= (or b!143072 bm!15812) bm!15811))

(assert (= (or b!143070 bm!15811) bm!15810))

(assert (= (and bm!15810 c!27097) b!143071))

(assert (= (and bm!15810 (not c!27097)) b!143076))

(assert (= (and d!45791 res!68180) b!143077))

(assert (= (and b!143077 res!68179) b!143069))

(declare-fun m!172965 () Bool)

(assert (=> b!143069 m!172965))

(declare-fun m!172967 () Bool)

(assert (=> b!143077 m!172967))

(declare-fun m!172969 () Bool)

(assert (=> b!143071 m!172969))

(declare-fun m!172971 () Bool)

(assert (=> bm!15810 m!172971))

(declare-fun m!172973 () Bool)

(assert (=> d!45791 m!172973))

(declare-fun m!172975 () Bool)

(assert (=> d!45791 m!172975))

(assert (=> d!44011 d!45791))

(declare-fun d!45793 () Bool)

(declare-fun e!93223 () Bool)

(assert (=> d!45793 e!93223))

(declare-fun res!68181 () Bool)

(assert (=> d!45793 (=> res!68181 e!93223)))

(declare-fun lt!74993 () Bool)

(assert (=> d!45793 (= res!68181 (not lt!74993))))

(declare-fun lt!74996 () Bool)

(assert (=> d!45793 (= lt!74993 lt!74996)))

(declare-fun lt!74994 () Unit!4395)

(declare-fun e!93222 () Unit!4395)

(assert (=> d!45793 (= lt!74994 e!93222)))

(declare-fun c!27098 () Bool)

(assert (=> d!45793 (= c!27098 lt!74996)))

(assert (=> d!45793 (= lt!74996 (containsKey!179 (toList!889 lt!73863) (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(assert (=> d!45793 (= (contains!921 lt!73863 (select (arr!2314 lt!73346) #b00000000000000000000000000000000)) lt!74993)))

(declare-fun b!143079 () Bool)

(declare-fun lt!74995 () Unit!4395)

(assert (=> b!143079 (= e!93222 lt!74995)))

(assert (=> b!143079 (= lt!74995 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73863) (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(assert (=> b!143079 (isDefined!129 (getValueByKey!175 (toList!889 lt!73863) (select (arr!2314 lt!73346) #b00000000000000000000000000000000)))))

(declare-fun b!143080 () Bool)

(declare-fun Unit!4544 () Unit!4395)

(assert (=> b!143080 (= e!93222 Unit!4544)))

(declare-fun b!143081 () Bool)

(assert (=> b!143081 (= e!93223 (isDefined!129 (getValueByKey!175 (toList!889 lt!73863) (select (arr!2314 lt!73346) #b00000000000000000000000000000000))))))

(assert (= (and d!45793 c!27098) b!143079))

(assert (= (and d!45793 (not c!27098)) b!143080))

(assert (= (and d!45793 (not res!68181)) b!143081))

(assert (=> d!45793 m!168583))

(declare-fun m!172977 () Bool)

(assert (=> d!45793 m!172977))

(assert (=> b!143079 m!168583))

(declare-fun m!172979 () Bool)

(assert (=> b!143079 m!172979))

(assert (=> b!143079 m!168583))

(assert (=> b!143079 m!172229))

(assert (=> b!143079 m!172229))

(declare-fun m!172981 () Bool)

(assert (=> b!143079 m!172981))

(assert (=> b!143081 m!168583))

(assert (=> b!143081 m!172229))

(assert (=> b!143081 m!172229))

(assert (=> b!143081 m!172981))

(assert (=> b!140757 d!45793))

(declare-fun d!45795 () Bool)

(assert (=> d!45795 (= ($colon$colon!93 e!91882 (ite c!26446 (h!2367 (toList!889 lt!73144)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))) (Cons!1760 (ite c!26446 (h!2367 (toList!889 lt!73144)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))))) e!91882))))

(assert (=> bm!15654 d!45795))

(declare-fun e!93225 () Option!181)

(declare-fun b!143084 () Bool)

(assert (=> b!143084 (= e!93225 (getValueByKey!175 (t!6360 (toList!889 lt!73820)) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143083 () Bool)

(declare-fun e!93224 () Option!181)

(assert (=> b!143083 (= e!93224 e!93225)))

(declare-fun c!27100 () Bool)

(assert (=> b!143083 (= c!27100 (and ((_ is Cons!1760) (toList!889 lt!73820)) (not (= (_1!1352 (h!2367 (toList!889 lt!73820))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!143085 () Bool)

(assert (=> b!143085 (= e!93225 None!179)))

(declare-fun b!143082 () Bool)

(assert (=> b!143082 (= e!93224 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73820)))))))

(declare-fun d!45797 () Bool)

(declare-fun c!27099 () Bool)

(assert (=> d!45797 (= c!27099 (and ((_ is Cons!1760) (toList!889 lt!73820)) (= (_1!1352 (h!2367 (toList!889 lt!73820))) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45797 (= (getValueByKey!175 (toList!889 lt!73820) (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93224)))

(assert (= (and d!45797 c!27099) b!143082))

(assert (= (and d!45797 (not c!27099)) b!143083))

(assert (= (and b!143083 c!27100) b!143084))

(assert (= (and b!143083 (not c!27100)) b!143085))

(declare-fun m!172983 () Bool)

(assert (=> b!143084 m!172983))

(assert (=> b!140692 d!45797))

(assert (=> b!140812 d!44329))

(assert (=> b!140812 d!44331))

(declare-fun b!143088 () Bool)

(declare-fun e!93227 () Option!181)

(assert (=> b!143088 (= e!93227 (getValueByKey!175 (t!6360 (toList!889 lt!73574)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))

(declare-fun b!143087 () Bool)

(declare-fun e!93226 () Option!181)

(assert (=> b!143087 (= e!93226 e!93227)))

(declare-fun c!27102 () Bool)

(assert (=> b!143087 (= c!27102 (and ((_ is Cons!1760) (toList!889 lt!73574)) (not (= (_1!1352 (h!2367 (toList!889 lt!73574))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))))))))

(declare-fun b!143089 () Bool)

(assert (=> b!143089 (= e!93227 None!179)))

(declare-fun b!143086 () Bool)

(assert (=> b!143086 (= e!93226 (Some!180 (_2!1352 (h!2367 (toList!889 lt!73574)))))))

(declare-fun d!45799 () Bool)

(declare-fun c!27101 () Bool)

(assert (=> d!45799 (= c!27101 (and ((_ is Cons!1760) (toList!889 lt!73574)) (= (_1!1352 (h!2367 (toList!889 lt!73574))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16))))))))

(assert (=> d!45799 (= (getValueByKey!175 (toList!889 lt!73574) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2790 newMap!16)))) e!93226)))

(assert (= (and d!45799 c!27101) b!143086))

(assert (= (and d!45799 (not c!27101)) b!143087))

(assert (= (and b!143087 c!27102) b!143088))

(assert (= (and b!143087 (not c!27102)) b!143089))

(declare-fun m!172985 () Bool)

(assert (=> b!143088 m!172985))

(assert (=> b!140240 d!45799))

(declare-fun d!45801 () Bool)

(declare-fun e!93229 () Bool)

(assert (=> d!45801 e!93229))

(declare-fun res!68182 () Bool)

(assert (=> d!45801 (=> res!68182 e!93229)))

(declare-fun lt!74997 () Bool)

(assert (=> d!45801 (= res!68182 (not lt!74997))))

(declare-fun lt!75000 () Bool)

(assert (=> d!45801 (= lt!74997 lt!75000)))

(declare-fun lt!74998 () Unit!4395)

(declare-fun e!93228 () Unit!4395)

(assert (=> d!45801 (= lt!74998 e!93228)))

(declare-fun c!27103 () Bool)

(assert (=> d!45801 (= c!27103 lt!75000)))

(assert (=> d!45801 (= lt!75000 (containsKey!179 (toList!889 lt!73637) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!45801 (= (contains!921 lt!73637 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!74997)))

(declare-fun b!143090 () Bool)

(declare-fun lt!74999 () Unit!4395)

(assert (=> b!143090 (= e!93228 lt!74999)))

(assert (=> b!143090 (= lt!74999 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73637) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!143090 (isDefined!129 (getValueByKey!175 (toList!889 lt!73637) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143091 () Bool)

(declare-fun Unit!4545 () Unit!4395)

(assert (=> b!143091 (= e!93228 Unit!4545)))

(declare-fun b!143092 () Bool)

(assert (=> b!143092 (= e!93229 (isDefined!129 (getValueByKey!175 (toList!889 lt!73637) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45801 c!27103) b!143090))

(assert (= (and d!45801 (not c!27103)) b!143091))

(assert (= (and d!45801 (not res!68182)) b!143092))

(declare-fun m!172987 () Bool)

(assert (=> d!45801 m!172987))

(declare-fun m!172989 () Bool)

(assert (=> b!143090 m!172989))

(assert (=> b!143090 m!167805))

(assert (=> b!143090 m!167805))

(declare-fun m!172991 () Bool)

(assert (=> b!143090 m!172991))

(assert (=> b!143092 m!167805))

(assert (=> b!143092 m!167805))

(assert (=> b!143092 m!172991))

(assert (=> d!43675 d!45801))

(declare-fun e!93231 () Option!181)

(declare-fun b!143095 () Bool)

(assert (=> b!143095 (= e!93231 (getValueByKey!175 (t!6360 lt!73638) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143094 () Bool)

(declare-fun e!93230 () Option!181)

(assert (=> b!143094 (= e!93230 e!93231)))

(declare-fun c!27105 () Bool)

(assert (=> b!143094 (= c!27105 (and ((_ is Cons!1760) lt!73638) (not (= (_1!1352 (h!2367 lt!73638)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!143096 () Bool)

(assert (=> b!143096 (= e!93231 None!179)))

(declare-fun b!143093 () Bool)

(assert (=> b!143093 (= e!93230 (Some!180 (_2!1352 (h!2367 lt!73638))))))

(declare-fun c!27104 () Bool)

(declare-fun d!45803 () Bool)

(assert (=> d!45803 (= c!27104 (and ((_ is Cons!1760) lt!73638) (= (_1!1352 (h!2367 lt!73638)) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45803 (= (getValueByKey!175 lt!73638 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!93230)))

(assert (= (and d!45803 c!27104) b!143093))

(assert (= (and d!45803 (not c!27104)) b!143094))

(assert (= (and b!143094 c!27105) b!143095))

(assert (= (and b!143094 (not c!27105)) b!143096))

(declare-fun m!172993 () Bool)

(assert (=> b!143095 m!172993))

(assert (=> d!43675 d!45803))

(declare-fun d!45805 () Bool)

(assert (=> d!45805 (= (getValueByKey!175 lt!73638 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!180 (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!75001 () Unit!4395)

(assert (=> d!45805 (= lt!75001 (choose!873 lt!73638 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!93232 () Bool)

(assert (=> d!45805 e!93232))

(declare-fun res!68183 () Bool)

(assert (=> d!45805 (=> (not res!68183) (not e!93232))))

(assert (=> d!45805 (= res!68183 (isStrictlySorted!320 lt!73638))))

(assert (=> d!45805 (= (lemmaContainsTupThenGetReturnValue!91 lt!73638 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!75001)))

(declare-fun b!143097 () Bool)

(declare-fun res!68184 () Bool)

(assert (=> b!143097 (=> (not res!68184) (not e!93232))))

(assert (=> b!143097 (= res!68184 (containsKey!179 lt!73638 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143098 () Bool)

(assert (=> b!143098 (= e!93232 (contains!923 lt!73638 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!45805 res!68183) b!143097))

(assert (= (and b!143097 res!68184) b!143098))

(assert (=> d!45805 m!167799))

(declare-fun m!172995 () Bool)

(assert (=> d!45805 m!172995))

(declare-fun m!172997 () Bool)

(assert (=> d!45805 m!172997))

(declare-fun m!172999 () Bool)

(assert (=> b!143097 m!172999))

(declare-fun m!173001 () Bool)

(assert (=> b!143098 m!173001))

(assert (=> d!43675 d!45805))

(declare-fun d!45807 () Bool)

(declare-fun e!93233 () Bool)

(assert (=> d!45807 e!93233))

(declare-fun res!68186 () Bool)

(assert (=> d!45807 (=> (not res!68186) (not e!93233))))

(declare-fun lt!75002 () List!1764)

(assert (=> d!45807 (= res!68186 (isStrictlySorted!320 lt!75002))))

(declare-fun e!93235 () List!1764)

(assert (=> d!45807 (= lt!75002 e!93235)))

(declare-fun c!27106 () Bool)

(assert (=> d!45807 (= c!27106 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvslt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!45807 (isStrictlySorted!320 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))))

(assert (=> d!45807 (= (insertStrictlySorted!93 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!75002)))

(declare-fun b!143099 () Bool)

(assert (=> b!143099 (= e!93233 (contains!923 lt!75002 (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun call!15816 () List!1764)

(declare-fun e!93236 () List!1764)

(declare-fun bm!15813 () Bool)

(assert (=> bm!15813 (= call!15816 ($colon$colon!93 e!93236 (ite c!27106 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (tuple2!2685 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!27109 () Bool)

(assert (=> bm!15813 (= c!27109 c!27106)))

(declare-fun b!143100 () Bool)

(assert (=> b!143100 (= e!93235 call!15816)))

(declare-fun b!143101 () Bool)

(assert (=> b!143101 (= e!93236 (insertStrictlySorted!93 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143102 () Bool)

(declare-fun e!93237 () List!1764)

(declare-fun call!15817 () List!1764)

(assert (=> b!143102 (= e!93237 call!15817)))

(declare-fun bm!15814 () Bool)

(assert (=> bm!15814 (= call!15817 call!15816)))

(declare-fun b!143103 () Bool)

(declare-fun e!93234 () List!1764)

(declare-fun call!15818 () List!1764)

(assert (=> b!143103 (= e!93234 call!15818)))

(declare-fun b!143104 () Bool)

(declare-fun c!27108 () Bool)

(assert (=> b!143104 (= c!27108 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (bvsgt (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!143104 (= e!93237 e!93234)))

(declare-fun b!143105 () Bool)

(assert (=> b!143105 (= e!93235 e!93237)))

(declare-fun c!27107 () Bool)

(assert (=> b!143105 (= c!27107 (and ((_ is Cons!1760) (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (= (_1!1352 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!143106 () Bool)

(assert (=> b!143106 (= e!93236 (ite c!27107 (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (ite c!27108 (Cons!1760 (h!2367 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16)))) (t!6360 (toList!889 (getCurrentListMap!555 (_keys!4699 newMap!16) (_values!2923 newMap!16) (mask!7280 newMap!16) (extraKeys!2695 newMap!16) (zeroValue!2790 newMap!16) (minValue!2790 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2940 newMap!16))))) Nil!1761)))))

(declare-fun bm!15815 () Bool)

(assert (=> bm!15815 (= call!15818 call!15817)))

(declare-fun b!143107 () Bool)

(declare-fun res!68185 () Bool)

(assert (=> b!143107 (=> (not res!68185) (not e!93233))))

(assert (=> b!143107 (= res!68185 (containsKey!179 lt!75002 (_1!1352 (tuple2!2685 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!143108 () Bool)

(assert (=> b!143108 (= e!93234 call!15818)))

(assert (= (and d!45807 c!27106) b!143100))

(assert (= (and d!45807 (not c!27106)) b!143105))

(assert (= (and b!143105 c!27107) b!143102))

(assert (= (and b!143105 (not c!27107)) b!143104))

(assert (= (and b!143104 c!27108) b!143108))

(assert (= (and b!143104 (not c!27108)) b!143103))

(assert (= (or b!143108 b!143103) bm!15815))

(assert (= (or b!143102 bm!15815) bm!15814))

(assert (= (or b!143100 bm!15814) bm!15813))

(assert (= (and bm!15813 c!27109) b!143101))

(assert (= (and bm!15813 (not c!27109)) b!143106))

(assert (= (and d!45807 res!68186) b!143107))

(assert (= (and b!143107 res!68185) b!143099))

(declare-fun m!173003 () Bool)

(assert (=> b!143099 m!173003))

(declare-fun m!173005 () Bool)

(assert (=> b!143107 m!173005))

(declare-fun m!173007 () Bool)

(assert (=> b!143101 m!173007))

(declare-fun m!173009 () Bool)

(assert (=> bm!15813 m!173009))

(declare-fun m!173011 () Bool)

(assert (=> d!45807 m!173011))

(assert (=> d!45807 m!170173))

(assert (=> d!43675 d!45807))

(assert (=> b!141021 d!44049))

(assert (=> b!140277 d!45689))

(assert (=> b!140277 d!45557))

(declare-fun d!45809 () Bool)

(declare-fun res!68187 () Bool)

(declare-fun e!93238 () Bool)

(assert (=> d!45809 (=> res!68187 e!93238)))

(assert (=> d!45809 (= res!68187 (and ((_ is Cons!1760) (toList!889 lt!73441)) (= (_1!1352 (h!2367 (toList!889 lt!73441))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!45809 (= (containsKey!179 (toList!889 lt!73441) #b0000000000000000000000000000000000000000000000000000000000000000) e!93238)))

(declare-fun b!143109 () Bool)

(declare-fun e!93239 () Bool)

(assert (=> b!143109 (= e!93238 e!93239)))

(declare-fun res!68188 () Bool)

(assert (=> b!143109 (=> (not res!68188) (not e!93239))))

(assert (=> b!143109 (= res!68188 (and (or (not ((_ is Cons!1760) (toList!889 lt!73441))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73441))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1760) (toList!889 lt!73441)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73441))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!143110 () Bool)

(assert (=> b!143110 (= e!93239 (containsKey!179 (t!6360 (toList!889 lt!73441)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!45809 (not res!68187)) b!143109))

(assert (= (and b!143109 res!68188) b!143110))

(declare-fun m!173013 () Bool)

(assert (=> b!143110 m!173013))

(assert (=> d!44035 d!45809))

(declare-fun d!45811 () Bool)

(declare-fun res!68189 () Bool)

(declare-fun e!93240 () Bool)

(assert (=> d!45811 (=> res!68189 e!93240)))

(assert (=> d!45811 (= res!68189 (and ((_ is Cons!1760) (toList!889 lt!73550)) (= (_1!1352 (h!2367 (toList!889 lt!73550))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(assert (=> d!45811 (= (containsKey!179 (toList!889 lt!73550) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))) e!93240)))

(declare-fun b!143111 () Bool)

(declare-fun e!93241 () Bool)

(assert (=> b!143111 (= e!93240 e!93241)))

(declare-fun res!68190 () Bool)

(assert (=> b!143111 (=> (not res!68190) (not e!93241))))

(assert (=> b!143111 (= res!68190 (and (or (not ((_ is Cons!1760) (toList!889 lt!73550))) (bvsle (_1!1352 (h!2367 (toList!889 lt!73550))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))) ((_ is Cons!1760) (toList!889 lt!73550)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73550))) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992))))))))))

(declare-fun b!143112 () Bool)

(assert (=> b!143112 (= e!93241 (containsKey!179 (t!6360 (toList!889 lt!73550)) (_1!1352 (tuple2!2685 lt!73150 (minValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (= (and d!45811 (not res!68189)) b!143111))

(assert (= (and b!143111 res!68190) b!143112))

(declare-fun m!173015 () Bool)

(assert (=> b!143112 m!173015))

(assert (=> d!43631 d!45811))

(declare-fun d!45813 () Bool)

(declare-fun e!93243 () Bool)

(assert (=> d!45813 e!93243))

(declare-fun res!68191 () Bool)

(assert (=> d!45813 (=> res!68191 e!93243)))

(declare-fun lt!75003 () Bool)

(assert (=> d!45813 (= res!68191 (not lt!75003))))

(declare-fun lt!75006 () Bool)

(assert (=> d!45813 (= lt!75003 lt!75006)))

(declare-fun lt!75004 () Unit!4395)

(declare-fun e!93242 () Unit!4395)

(assert (=> d!45813 (= lt!75004 e!93242)))

(declare-fun c!27110 () Bool)

(assert (=> d!45813 (= c!27110 lt!75006)))

(assert (=> d!45813 (= lt!75006 (containsKey!179 (toList!889 lt!73726) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(assert (=> d!45813 (= (contains!921 lt!73726 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) lt!75003)))

(declare-fun b!143113 () Bool)

(declare-fun lt!75005 () Unit!4395)

(assert (=> b!143113 (= e!93242 lt!75005)))

(assert (=> b!143113 (= lt!75005 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73726) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(assert (=> b!143113 (isDefined!129 (getValueByKey!175 (toList!889 lt!73726) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun b!143114 () Bool)

(declare-fun Unit!4546 () Unit!4395)

(assert (=> b!143114 (= e!93242 Unit!4546)))

(declare-fun b!143115 () Bool)

(assert (=> b!143115 (= e!93243 (isDefined!129 (getValueByKey!175 (toList!889 lt!73726) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(assert (= (and d!45813 c!27110) b!143113))

(assert (= (and d!45813 (not c!27110)) b!143114))

(assert (= (and d!45813 (not res!68191)) b!143115))

(declare-fun m!173017 () Bool)

(assert (=> d!45813 m!173017))

(declare-fun m!173019 () Bool)

(assert (=> b!143113 m!173019))

(assert (=> b!143113 m!168155))

(assert (=> b!143113 m!168155))

(declare-fun m!173021 () Bool)

(assert (=> b!143113 m!173021))

(assert (=> b!143115 m!168155))

(assert (=> b!143115 m!168155))

(assert (=> b!143115 m!173021))

(assert (=> d!43799 d!45813))

(declare-fun b!143118 () Bool)

(declare-fun e!93245 () Option!181)

(assert (=> b!143118 (= e!93245 (getValueByKey!175 (t!6360 lt!73727) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun b!143117 () Bool)

(declare-fun e!93244 () Option!181)

(assert (=> b!143117 (= e!93244 e!93245)))

(declare-fun c!27112 () Bool)

(assert (=> b!143117 (= c!27112 (and ((_ is Cons!1760) lt!73727) (not (= (_1!1352 (h!2367 lt!73727)) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))))

(declare-fun b!143119 () Bool)

(assert (=> b!143119 (= e!93245 None!179)))

(declare-fun b!143116 () Bool)

(assert (=> b!143116 (= e!93244 (Some!180 (_2!1352 (h!2367 lt!73727))))))

(declare-fun c!27111 () Bool)

(declare-fun d!45815 () Bool)

(assert (=> d!45815 (= c!27111 (and ((_ is Cons!1760) lt!73727) (= (_1!1352 (h!2367 lt!73727)) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(assert (=> d!45815 (= (getValueByKey!175 lt!73727 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) e!93244)))

(assert (= (and d!45815 c!27111) b!143116))

(assert (= (and d!45815 (not c!27111)) b!143117))

(assert (= (and b!143117 c!27112) b!143118))

(assert (= (and b!143117 (not c!27112)) b!143119))

(declare-fun m!173023 () Bool)

(assert (=> b!143118 m!173023))

(assert (=> d!43799 d!45815))

(declare-fun d!45817 () Bool)

(assert (=> d!45817 (= (getValueByKey!175 lt!73727 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun lt!75007 () Unit!4395)

(assert (=> d!45817 (= lt!75007 (choose!873 lt!73727 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun e!93246 () Bool)

(assert (=> d!45817 e!93246))

(declare-fun res!68192 () Bool)

(assert (=> d!45817 (=> (not res!68192) (not e!93246))))

(assert (=> d!45817 (= res!68192 (isStrictlySorted!320 lt!73727))))

(assert (=> d!45817 (= (lemmaContainsTupThenGetReturnValue!91 lt!73727 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) lt!75007)))

(declare-fun b!143120 () Bool)

(declare-fun res!68193 () Bool)

(assert (=> b!143120 (=> (not res!68193) (not e!93246))))

(assert (=> b!143120 (= res!68193 (containsKey!179 lt!73727 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun b!143121 () Bool)

(assert (=> b!143121 (= e!93246 (contains!923 lt!73727 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(assert (= (and d!45817 res!68192) b!143120))

(assert (= (and b!143120 res!68193) b!143121))

(assert (=> d!45817 m!168149))

(declare-fun m!173025 () Bool)

(assert (=> d!45817 m!173025))

(declare-fun m!173027 () Bool)

(assert (=> d!45817 m!173027))

(declare-fun m!173029 () Bool)

(assert (=> b!143120 m!173029))

(declare-fun m!173031 () Bool)

(assert (=> b!143121 m!173031))

(assert (=> d!43799 d!45817))

(declare-fun d!45819 () Bool)

(declare-fun e!93247 () Bool)

(assert (=> d!45819 e!93247))

(declare-fun res!68195 () Bool)

(assert (=> d!45819 (=> (not res!68195) (not e!93247))))

(declare-fun lt!75008 () List!1764)

(assert (=> d!45819 (= res!68195 (isStrictlySorted!320 lt!75008))))

(declare-fun e!93249 () List!1764)

(assert (=> d!45819 (= lt!75008 e!93249)))

(declare-fun c!27113 () Bool)

(assert (=> d!45819 (= c!27113 (and ((_ is Cons!1760) (toList!889 lt!73496)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73496))) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(assert (=> d!45819 (isStrictlySorted!320 (toList!889 lt!73496))))

(assert (=> d!45819 (= (insertStrictlySorted!93 (toList!889 lt!73496) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))) lt!75008)))

(declare-fun b!143122 () Bool)

(assert (=> b!143122 (= e!93247 (contains!923 lt!75008 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(declare-fun e!93250 () List!1764)

(declare-fun call!15819 () List!1764)

(declare-fun bm!15816 () Bool)

(assert (=> bm!15816 (= call!15819 ($colon$colon!93 e!93250 (ite c!27113 (h!2367 (toList!889 lt!73496)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))))

(declare-fun c!27116 () Bool)

(assert (=> bm!15816 (= c!27116 c!27113)))

(declare-fun b!143123 () Bool)

(assert (=> b!143123 (= e!93249 call!15819)))

(declare-fun b!143124 () Bool)

(assert (=> b!143124 (= e!93250 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73496)) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun b!143125 () Bool)

(declare-fun e!93251 () List!1764)

(declare-fun call!15820 () List!1764)

(assert (=> b!143125 (= e!93251 call!15820)))

(declare-fun bm!15817 () Bool)

(assert (=> bm!15817 (= call!15820 call!15819)))

(declare-fun b!143126 () Bool)

(declare-fun e!93248 () List!1764)

(declare-fun call!15821 () List!1764)

(assert (=> b!143126 (= e!93248 call!15821)))

(declare-fun b!143127 () Bool)

(declare-fun c!27115 () Bool)

(assert (=> b!143127 (= c!27115 (and ((_ is Cons!1760) (toList!889 lt!73496)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73496))) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(assert (=> b!143127 (= e!93251 e!93248)))

(declare-fun b!143128 () Bool)

(assert (=> b!143128 (= e!93249 e!93251)))

(declare-fun c!27114 () Bool)

(assert (=> b!143128 (= c!27114 (and ((_ is Cons!1760) (toList!889 lt!73496)) (= (_1!1352 (h!2367 (toList!889 lt!73496))) (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16))))))))

(declare-fun b!143129 () Bool)

(assert (=> b!143129 (= e!93250 (ite c!27114 (t!6360 (toList!889 lt!73496)) (ite c!27115 (Cons!1760 (h!2367 (toList!889 lt!73496)) (t!6360 (toList!889 lt!73496))) Nil!1761)))))

(declare-fun bm!15818 () Bool)

(assert (=> bm!15818 (= call!15821 call!15820)))

(declare-fun b!143130 () Bool)

(declare-fun res!68194 () Bool)

(assert (=> b!143130 (=> (not res!68194) (not e!93247))))

(assert (=> b!143130 (= res!68194 (containsKey!179 lt!75008 (_1!1352 (tuple2!2685 lt!73479 (minValue!2790 newMap!16)))))))

(declare-fun b!143131 () Bool)

(assert (=> b!143131 (= e!93248 call!15821)))

(assert (= (and d!45819 c!27113) b!143123))

(assert (= (and d!45819 (not c!27113)) b!143128))

(assert (= (and b!143128 c!27114) b!143125))

(assert (= (and b!143128 (not c!27114)) b!143127))

(assert (= (and b!143127 c!27115) b!143131))

(assert (= (and b!143127 (not c!27115)) b!143126))

(assert (= (or b!143131 b!143126) bm!15818))

(assert (= (or b!143125 bm!15818) bm!15817))

(assert (= (or b!143123 bm!15817) bm!15816))

(assert (= (and bm!15816 c!27116) b!143124))

(assert (= (and bm!15816 (not c!27116)) b!143129))

(assert (= (and d!45819 res!68195) b!143130))

(assert (= (and b!143130 res!68194) b!143122))

(declare-fun m!173033 () Bool)

(assert (=> b!143122 m!173033))

(declare-fun m!173035 () Bool)

(assert (=> b!143130 m!173035))

(declare-fun m!173037 () Bool)

(assert (=> b!143124 m!173037))

(declare-fun m!173039 () Bool)

(assert (=> bm!15816 m!173039))

(declare-fun m!173041 () Bool)

(assert (=> d!45819 m!173041))

(declare-fun m!173043 () Bool)

(assert (=> d!45819 m!173043))

(assert (=> d!43799 d!45819))

(assert (=> bm!15636 d!45501))

(declare-fun d!45821 () Bool)

(declare-fun res!68196 () Bool)

(declare-fun e!93252 () Bool)

(assert (=> d!45821 (=> res!68196 e!93252)))

(assert (=> d!45821 (= res!68196 (= (select (arr!2314 (_keys!4699 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!73517))))

(assert (=> d!45821 (= (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73517 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!93252)))

(declare-fun b!143132 () Bool)

(declare-fun e!93253 () Bool)

(assert (=> b!143132 (= e!93252 e!93253)))

(declare-fun res!68197 () Bool)

(assert (=> b!143132 (=> (not res!68197) (not e!93253))))

(assert (=> b!143132 (= res!68197 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2586 (_keys!4699 newMap!16))))))

(declare-fun b!143133 () Bool)

(assert (=> b!143133 (= e!93253 (arrayContainsKey!0 (_keys!4699 newMap!16) lt!73517 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!45821 (not res!68196)) b!143132))

(assert (= (and b!143132 res!68197) b!143133))

(assert (=> d!45821 m!167699))

(declare-fun m!173045 () Bool)

(assert (=> b!143133 m!173045))

(assert (=> b!140427 d!45821))

(declare-fun d!45823 () Bool)

(declare-fun e!93255 () Bool)

(assert (=> d!45823 e!93255))

(declare-fun res!68198 () Bool)

(assert (=> d!45823 (=> res!68198 e!93255)))

(declare-fun lt!75009 () Bool)

(assert (=> d!45823 (= res!68198 (not lt!75009))))

(declare-fun lt!75012 () Bool)

(assert (=> d!45823 (= lt!75009 lt!75012)))

(declare-fun lt!75010 () Unit!4395)

(declare-fun e!93254 () Unit!4395)

(assert (=> d!45823 (= lt!75010 e!93254)))

(declare-fun c!27117 () Bool)

(assert (=> d!45823 (= c!27117 lt!75012)))

(assert (=> d!45823 (= lt!75012 (containsKey!179 (toList!889 lt!73990) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(assert (=> d!45823 (= (contains!921 lt!73990 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) lt!75009)))

(declare-fun b!143134 () Bool)

(declare-fun lt!75011 () Unit!4395)

(assert (=> b!143134 (= e!93254 lt!75011)))

(assert (=> b!143134 (= lt!75011 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73990) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(assert (=> b!143134 (isDefined!129 (getValueByKey!175 (toList!889 lt!73990) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun b!143135 () Bool)

(declare-fun Unit!4547 () Unit!4395)

(assert (=> b!143135 (= e!93254 Unit!4547)))

(declare-fun b!143136 () Bool)

(assert (=> b!143136 (= e!93255 (isDefined!129 (getValueByKey!175 (toList!889 lt!73990) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(assert (= (and d!45823 c!27117) b!143134))

(assert (= (and d!45823 (not c!27117)) b!143135))

(assert (= (and d!45823 (not res!68198)) b!143136))

(declare-fun m!173047 () Bool)

(assert (=> d!45823 m!173047))

(declare-fun m!173049 () Bool)

(assert (=> b!143134 m!173049))

(assert (=> b!143134 m!168921))

(assert (=> b!143134 m!168921))

(declare-fun m!173051 () Bool)

(assert (=> b!143134 m!173051))

(assert (=> b!143136 m!168921))

(assert (=> b!143136 m!168921))

(assert (=> b!143136 m!173051))

(assert (=> d!44007 d!45823))

(declare-fun b!143139 () Bool)

(declare-fun e!93257 () Option!181)

(assert (=> b!143139 (= e!93257 (getValueByKey!175 (t!6360 lt!73991) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun b!143138 () Bool)

(declare-fun e!93256 () Option!181)

(assert (=> b!143138 (= e!93256 e!93257)))

(declare-fun c!27119 () Bool)

(assert (=> b!143138 (= c!27119 (and ((_ is Cons!1760) lt!73991) (not (= (_1!1352 (h!2367 lt!73991)) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))))

(declare-fun b!143140 () Bool)

(assert (=> b!143140 (= e!93257 None!179)))

(declare-fun b!143137 () Bool)

(assert (=> b!143137 (= e!93256 (Some!180 (_2!1352 (h!2367 lt!73991))))))

(declare-fun c!27118 () Bool)

(declare-fun d!45825 () Bool)

(assert (=> d!45825 (= c!27118 (and ((_ is Cons!1760) lt!73991) (= (_1!1352 (h!2367 lt!73991)) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(assert (=> d!45825 (= (getValueByKey!175 lt!73991 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) e!93256)))

(assert (= (and d!45825 c!27118) b!143137))

(assert (= (and d!45825 (not c!27118)) b!143138))

(assert (= (and b!143138 c!27119) b!143139))

(assert (= (and b!143138 (not c!27119)) b!143140))

(declare-fun m!173053 () Bool)

(assert (=> b!143139 m!173053))

(assert (=> d!44007 d!45825))

(declare-fun d!45827 () Bool)

(assert (=> d!45827 (= (getValueByKey!175 lt!73991 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) (Some!180 (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun lt!75013 () Unit!4395)

(assert (=> d!45827 (= lt!75013 (choose!873 lt!73991 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun e!93258 () Bool)

(assert (=> d!45827 e!93258))

(declare-fun res!68199 () Bool)

(assert (=> d!45827 (=> (not res!68199) (not e!93258))))

(assert (=> d!45827 (= res!68199 (isStrictlySorted!320 lt!73991))))

(assert (=> d!45827 (= (lemmaContainsTupThenGetReturnValue!91 lt!73991 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) lt!75013)))

(declare-fun b!143141 () Bool)

(declare-fun res!68200 () Bool)

(assert (=> b!143141 (=> (not res!68200) (not e!93258))))

(assert (=> b!143141 (= res!68200 (containsKey!179 lt!73991 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun b!143142 () Bool)

(assert (=> b!143142 (= e!93258 (contains!923 lt!73991 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(assert (= (and d!45827 res!68199) b!143141))

(assert (= (and b!143141 res!68200) b!143142))

(assert (=> d!45827 m!168915))

(declare-fun m!173055 () Bool)

(assert (=> d!45827 m!173055))

(declare-fun m!173057 () Bool)

(assert (=> d!45827 m!173057))

(declare-fun m!173059 () Bool)

(assert (=> b!143141 m!173059))

(declare-fun m!173061 () Bool)

(assert (=> b!143142 m!173061))

(assert (=> d!44007 d!45827))

(declare-fun d!45829 () Bool)

(declare-fun e!93259 () Bool)

(assert (=> d!45829 e!93259))

(declare-fun res!68202 () Bool)

(assert (=> d!45829 (=> (not res!68202) (not e!93259))))

(declare-fun lt!75014 () List!1764)

(assert (=> d!45829 (= res!68202 (isStrictlySorted!320 lt!75014))))

(declare-fun e!93261 () List!1764)

(assert (=> d!45829 (= lt!75014 e!93261)))

(declare-fun c!27120 () Bool)

(assert (=> d!45829 (= c!27120 (and ((_ is Cons!1760) (toList!889 lt!73402)) (bvslt (_1!1352 (h!2367 (toList!889 lt!73402))) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(assert (=> d!45829 (isStrictlySorted!320 (toList!889 lt!73402))))

(assert (=> d!45829 (= (insertStrictlySorted!93 (toList!889 lt!73402) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))) lt!75014)))

(declare-fun b!143143 () Bool)

(assert (=> b!143143 (= e!93259 (contains!923 lt!75014 (tuple2!2685 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(declare-fun call!15822 () List!1764)

(declare-fun bm!15819 () Bool)

(declare-fun e!93262 () List!1764)

(assert (=> bm!15819 (= call!15822 ($colon$colon!93 e!93262 (ite c!27120 (h!2367 (toList!889 lt!73402)) (tuple2!2685 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))))

(declare-fun c!27123 () Bool)

(assert (=> bm!15819 (= c!27123 c!27120)))

(declare-fun b!143144 () Bool)

(assert (=> b!143144 (= e!93261 call!15822)))

(declare-fun b!143145 () Bool)

(assert (=> b!143145 (= e!93262 (insertStrictlySorted!93 (t!6360 (toList!889 lt!73402)) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))) (_2!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun b!143146 () Bool)

(declare-fun e!93263 () List!1764)

(declare-fun call!15823 () List!1764)

(assert (=> b!143146 (= e!93263 call!15823)))

(declare-fun bm!15820 () Bool)

(assert (=> bm!15820 (= call!15823 call!15822)))

(declare-fun b!143147 () Bool)

(declare-fun e!93260 () List!1764)

(declare-fun call!15824 () List!1764)

(assert (=> b!143147 (= e!93260 call!15824)))

(declare-fun c!27122 () Bool)

(declare-fun b!143148 () Bool)

(assert (=> b!143148 (= c!27122 (and ((_ is Cons!1760) (toList!889 lt!73402)) (bvsgt (_1!1352 (h!2367 (toList!889 lt!73402))) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(assert (=> b!143148 (= e!93263 e!93260)))

(declare-fun b!143149 () Bool)

(assert (=> b!143149 (= e!93261 e!93263)))

(declare-fun c!27121 () Bool)

(assert (=> b!143149 (= c!27121 (and ((_ is Cons!1760) (toList!889 lt!73402)) (= (_1!1352 (h!2367 (toList!889 lt!73402))) (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16))))))))

(declare-fun b!143150 () Bool)

(assert (=> b!143150 (= e!93262 (ite c!27121 (t!6360 (toList!889 lt!73402)) (ite c!27122 (Cons!1760 (h!2367 (toList!889 lt!73402)) (t!6360 (toList!889 lt!73402))) Nil!1761)))))

(declare-fun bm!15821 () Bool)

(assert (=> bm!15821 (= call!15824 call!15823)))

(declare-fun b!143151 () Bool)

(declare-fun res!68201 () Bool)

(assert (=> b!143151 (=> (not res!68201) (not e!93259))))

(assert (=> b!143151 (= res!68201 (containsKey!179 lt!75014 (_1!1352 (tuple2!2685 lt!73406 (minValue!2790 newMap!16)))))))

(declare-fun b!143152 () Bool)

(assert (=> b!143152 (= e!93260 call!15824)))

(assert (= (and d!45829 c!27120) b!143144))

(assert (= (and d!45829 (not c!27120)) b!143149))

(assert (= (and b!143149 c!27121) b!143146))

(assert (= (and b!143149 (not c!27121)) b!143148))

(assert (= (and b!143148 c!27122) b!143152))

(assert (= (and b!143148 (not c!27122)) b!143147))

(assert (= (or b!143152 b!143147) bm!15821))

(assert (= (or b!143146 bm!15821) bm!15820))

(assert (= (or b!143144 bm!15820) bm!15819))

(assert (= (and bm!15819 c!27123) b!143145))

(assert (= (and bm!15819 (not c!27123)) b!143150))

(assert (= (and d!45829 res!68202) b!143151))

(assert (= (and b!143151 res!68201) b!143143))

(declare-fun m!173063 () Bool)

(assert (=> b!143143 m!173063))

(declare-fun m!173065 () Bool)

(assert (=> b!143151 m!173065))

(declare-fun m!173067 () Bool)

(assert (=> b!143145 m!173067))

(declare-fun m!173069 () Bool)

(assert (=> bm!15819 m!173069))

(declare-fun m!173071 () Bool)

(assert (=> d!45829 m!173071))

(declare-fun m!173073 () Bool)

(assert (=> d!45829 m!173073))

(assert (=> d!44007 d!45829))

(assert (=> b!140690 d!44675))

(declare-fun d!45831 () Bool)

(assert (=> d!45831 (= ($colon$colon!93 e!91534 (ite c!26288 (h!2367 (toList!889 call!15500)) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1760 (ite c!26288 (h!2367 (toList!889 call!15500)) (tuple2!2685 (_1!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1352 (tuple2!2685 (select (arr!2314 (_keys!4699 (v!3280 (underlying!481 thiss!992)))) from!355) (get!1535 (select (arr!2315 (_values!2923 (v!3280 (underlying!481 thiss!992)))) from!355) (dynLambda!443 (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!91534))))

(assert (=> bm!15589 d!45831))

(declare-fun d!45833 () Bool)

(declare-fun e!93265 () Bool)

(assert (=> d!45833 e!93265))

(declare-fun res!68203 () Bool)

(assert (=> d!45833 (=> res!68203 e!93265)))

(declare-fun lt!75015 () Bool)

(assert (=> d!45833 (= res!68203 (not lt!75015))))

(declare-fun lt!75018 () Bool)

(assert (=> d!45833 (= lt!75015 lt!75018)))

(declare-fun lt!75016 () Unit!4395)

(declare-fun e!93264 () Unit!4395)

(assert (=> d!45833 (= lt!75016 e!93264)))

(declare-fun c!27124 () Bool)

(assert (=> d!45833 (= c!27124 lt!75018)))

(assert (=> d!45833 (= lt!75018 (containsKey!179 (toList!889 lt!73971) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!45833 (= (contains!921 lt!73971 #b0000000000000000000000000000000000000000000000000000000000000000) lt!75015)))

(declare-fun b!143153 () Bool)

(declare-fun lt!75017 () Unit!4395)

(assert (=> b!143153 (= e!93264 lt!75017)))

(assert (=> b!143153 (= lt!75017 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73971) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!143153 (isDefined!129 (getValueByKey!175 (toList!889 lt!73971) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!143154 () Bool)

(declare-fun Unit!4548 () Unit!4395)

(assert (=> b!143154 (= e!93264 Unit!4548)))

(declare-fun b!143155 () Bool)

(assert (=> b!143155 (= e!93265 (isDefined!129 (getValueByKey!175 (toList!889 lt!73971) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!45833 c!27124) b!143153))

(assert (= (and d!45833 (not c!27124)) b!143154))

(assert (= (and d!45833 (not res!68203)) b!143155))

(declare-fun m!173075 () Bool)

(assert (=> d!45833 m!173075))

(declare-fun m!173077 () Bool)

(assert (=> b!143153 m!173077))

(declare-fun m!173079 () Bool)

(assert (=> b!143153 m!173079))

(assert (=> b!143153 m!173079))

(declare-fun m!173081 () Bool)

(assert (=> b!143153 m!173081))

(assert (=> b!143155 m!173079))

(assert (=> b!143155 m!173079))

(assert (=> b!143155 m!173081))

(assert (=> d!43995 d!45833))

(assert (=> d!43995 d!43661))

(declare-fun d!45835 () Bool)

(declare-fun res!68204 () Bool)

(declare-fun e!93266 () Bool)

(assert (=> d!45835 (=> res!68204 e!93266)))

(assert (=> d!45835 (= res!68204 (or ((_ is Nil!1761) lt!73627) ((_ is Nil!1761) (t!6360 lt!73627))))))

(assert (=> d!45835 (= (isStrictlySorted!320 lt!73627) e!93266)))

(declare-fun b!143156 () Bool)

(declare-fun e!93267 () Bool)

(assert (=> b!143156 (= e!93266 e!93267)))

(declare-fun res!68205 () Bool)

(assert (=> b!143156 (=> (not res!68205) (not e!93267))))

(assert (=> b!143156 (= res!68205 (bvslt (_1!1352 (h!2367 lt!73627)) (_1!1352 (h!2367 (t!6360 lt!73627)))))))

(declare-fun b!143157 () Bool)

(assert (=> b!143157 (= e!93267 (isStrictlySorted!320 (t!6360 lt!73627)))))

(assert (= (and d!45835 (not res!68204)) b!143156))

(assert (= (and b!143156 res!68205) b!143157))

(declare-fun m!173083 () Bool)

(assert (=> b!143157 m!173083))

(assert (=> d!43671 d!45835))

(declare-fun d!45837 () Bool)

(declare-fun res!68206 () Bool)

(declare-fun e!93268 () Bool)

(assert (=> d!45837 (=> res!68206 e!93268)))

(assert (=> d!45837 (= res!68206 (or ((_ is Nil!1761) (toList!889 call!15500)) ((_ is Nil!1761) (t!6360 (toList!889 call!15500)))))))

(assert (=> d!45837 (= (isStrictlySorted!320 (toList!889 call!15500)) e!93268)))

(declare-fun b!143158 () Bool)

(declare-fun e!93269 () Bool)

(assert (=> b!143158 (= e!93268 e!93269)))

(declare-fun res!68207 () Bool)

(assert (=> b!143158 (=> (not res!68207) (not e!93269))))

(assert (=> b!143158 (= res!68207 (bvslt (_1!1352 (h!2367 (toList!889 call!15500))) (_1!1352 (h!2367 (t!6360 (toList!889 call!15500))))))))

(declare-fun b!143159 () Bool)

(assert (=> b!143159 (= e!93269 (isStrictlySorted!320 (t!6360 (toList!889 call!15500))))))

(assert (= (and d!45837 (not res!68206)) b!143158))

(assert (= (and b!143158 res!68207) b!143159))

(assert (=> b!143159 m!172655))

(assert (=> d!43671 d!45837))

(assert (=> d!44043 d!44041))

(declare-fun d!45839 () Bool)

(assert (=> d!45839 (= (getValueByKey!175 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) (Some!180 (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))))))

(assert (=> d!45839 true))

(declare-fun _$22!501 () Unit!4395)

(assert (=> d!45839 (= (choose!873 lt!73547 (_1!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992))))) (_2!1352 (tuple2!2685 lt!73137 (zeroValue!2790 (v!3280 (underlying!481 thiss!992)))))) _$22!501)))

(declare-fun bs!6070 () Bool)

(assert (= bs!6070 d!45839))

(assert (=> bs!6070 m!167467))

(assert (=> d!44043 d!45839))

(declare-fun d!45841 () Bool)

(declare-fun res!68208 () Bool)

(declare-fun e!93270 () Bool)

(assert (=> d!45841 (=> res!68208 e!93270)))

(assert (=> d!45841 (= res!68208 (or ((_ is Nil!1761) lt!73547) ((_ is Nil!1761) (t!6360 lt!73547))))))

(assert (=> d!45841 (= (isStrictlySorted!320 lt!73547) e!93270)))

(declare-fun b!143160 () Bool)

(declare-fun e!93271 () Bool)

(assert (=> b!143160 (= e!93270 e!93271)))

(declare-fun res!68209 () Bool)

(assert (=> b!143160 (=> (not res!68209) (not e!93271))))

(assert (=> b!143160 (= res!68209 (bvslt (_1!1352 (h!2367 lt!73547)) (_1!1352 (h!2367 (t!6360 lt!73547)))))))

(declare-fun b!143161 () Bool)

(assert (=> b!143161 (= e!93271 (isStrictlySorted!320 (t!6360 lt!73547)))))

(assert (= (and d!45841 (not res!68208)) b!143160))

(assert (= (and b!143160 res!68209) b!143161))

(declare-fun m!173085 () Bool)

(assert (=> b!143161 m!173085))

(assert (=> d!44043 d!45841))

(declare-fun d!45843 () Bool)

(declare-fun e!93273 () Bool)

(assert (=> d!45843 e!93273))

(declare-fun res!68210 () Bool)

(assert (=> d!45843 (=> res!68210 e!93273)))

(declare-fun lt!75019 () Bool)

(assert (=> d!45843 (= res!68210 (not lt!75019))))

(declare-fun lt!75022 () Bool)

(assert (=> d!45843 (= lt!75019 lt!75022)))

(declare-fun lt!75020 () Unit!4395)

(declare-fun e!93272 () Unit!4395)

(assert (=> d!45843 (= lt!75020 e!93272)))

(declare-fun c!27125 () Bool)

(assert (=> d!45843 (= c!27125 lt!75022)))

(assert (=> d!45843 (= lt!75022 (containsKey!179 (toList!889 lt!73779) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!45843 (= (contains!921 lt!73779 (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)) lt!75019)))

(declare-fun b!143162 () Bool)

(declare-fun lt!75021 () Unit!4395)

(assert (=> b!143162 (= e!93272 lt!75021)))

(assert (=> b!143162 (= lt!75021 (lemmaContainsKeyImpliesGetValueByKeyDefined!128 (toList!889 lt!73779) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!143162 (isDefined!129 (getValueByKey!175 (toList!889 lt!73779) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!143163 () Bool)

(declare-fun Unit!4549 () Unit!4395)

(assert (=> b!143163 (= e!93272 Unit!4549)))

(declare-fun b!143164 () Bool)

(assert (=> b!143164 (= e!93273 (isDefined!129 (getValueByKey!175 (toList!889 lt!73779) (select (arr!2314 (_keys!4699 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!45843 c!27125) b!143162))

(assert (= (and d!45843 (not c!27125)) b!143163))

(assert (= (and d!45843 (not res!68210)) b!143164))

(assert (=> d!45843 m!166967))

(declare-fun m!173087 () Bool)

(assert (=> d!45843 m!173087))

(assert (=> b!143162 m!166967))

(declare-fun m!173089 () Bool)

(assert (=> b!143162 m!173089))

(assert (=> b!143162 m!166967))

(assert (=> b!143162 m!172667))

(assert (=> b!143162 m!172667))

(declare-fun m!173091 () Bool)

(assert (=> b!143162 m!173091))

(assert (=> b!143164 m!166967))

(assert (=> b!143164 m!172667))

(assert (=> b!143164 m!172667))

(assert (=> b!143164 m!173091))

(assert (=> b!140620 d!45843))

(declare-fun mapIsEmpty!4849 () Bool)

(declare-fun mapRes!4849 () Bool)

(assert (=> mapIsEmpty!4849 mapRes!4849))

(declare-fun condMapEmpty!4849 () Bool)

(declare-fun mapDefault!4849 () ValueCell!1122)

(assert (=> mapNonEmpty!4848 (= condMapEmpty!4849 (= mapRest!4848 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4849)))))

(declare-fun e!93275 () Bool)

(assert (=> mapNonEmpty!4848 (= tp!11580 (and e!93275 mapRes!4849))))

(declare-fun mapNonEmpty!4849 () Bool)

(declare-fun tp!11581 () Bool)

(declare-fun e!93274 () Bool)

(assert (=> mapNonEmpty!4849 (= mapRes!4849 (and tp!11581 e!93274))))

(declare-fun mapValue!4849 () ValueCell!1122)

(declare-fun mapRest!4849 () (Array (_ BitVec 32) ValueCell!1122))

(declare-fun mapKey!4849 () (_ BitVec 32))

(assert (=> mapNonEmpty!4849 (= mapRest!4848 (store mapRest!4849 mapKey!4849 mapValue!4849))))

(declare-fun b!143166 () Bool)

(assert (=> b!143166 (= e!93275 tp_is_empty!2931)))

(declare-fun b!143165 () Bool)

(assert (=> b!143165 (= e!93274 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4848 condMapEmpty!4849) mapIsEmpty!4849))

(assert (= (and mapNonEmpty!4848 (not condMapEmpty!4849)) mapNonEmpty!4849))

(assert (= (and mapNonEmpty!4849 ((_ is ValueCellFull!1122) mapValue!4849)) b!143165))

(assert (= (and mapNonEmpty!4848 ((_ is ValueCellFull!1122) mapDefault!4849)) b!143166))

(declare-fun m!173093 () Bool)

(assert (=> mapNonEmpty!4849 m!173093))

(declare-fun mapIsEmpty!4850 () Bool)

(declare-fun mapRes!4850 () Bool)

(assert (=> mapIsEmpty!4850 mapRes!4850))

(declare-fun condMapEmpty!4850 () Bool)

(declare-fun mapDefault!4850 () ValueCell!1122)

(assert (=> mapNonEmpty!4847 (= condMapEmpty!4850 (= mapRest!4847 ((as const (Array (_ BitVec 32) ValueCell!1122)) mapDefault!4850)))))

(declare-fun e!93277 () Bool)

(assert (=> mapNonEmpty!4847 (= tp!11579 (and e!93277 mapRes!4850))))

(declare-fun mapNonEmpty!4850 () Bool)

(declare-fun tp!11582 () Bool)

(declare-fun e!93276 () Bool)

(assert (=> mapNonEmpty!4850 (= mapRes!4850 (and tp!11582 e!93276))))

(declare-fun mapValue!4850 () ValueCell!1122)

(declare-fun mapKey!4850 () (_ BitVec 32))

(declare-fun mapRest!4850 () (Array (_ BitVec 32) ValueCell!1122))

(assert (=> mapNonEmpty!4850 (= mapRest!4847 (store mapRest!4850 mapKey!4850 mapValue!4850))))

(declare-fun b!143168 () Bool)

(assert (=> b!143168 (= e!93277 tp_is_empty!2931)))

(declare-fun b!143167 () Bool)

(assert (=> b!143167 (= e!93276 tp_is_empty!2931)))

(assert (= (and mapNonEmpty!4847 condMapEmpty!4850) mapIsEmpty!4850))

(assert (= (and mapNonEmpty!4847 (not condMapEmpty!4850)) mapNonEmpty!4850))

(assert (= (and mapNonEmpty!4850 ((_ is ValueCellFull!1122) mapValue!4850)) b!143167))

(assert (= (and mapNonEmpty!4847 ((_ is ValueCellFull!1122) mapDefault!4850)) b!143168))

(declare-fun m!173095 () Bool)

(assert (=> mapNonEmpty!4850 m!173095))

(declare-fun b_lambda!6423 () Bool)

(assert (= b_lambda!6411 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6423)))

(declare-fun b_lambda!6425 () Bool)

(assert (= b_lambda!6387 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6425)))

(declare-fun b_lambda!6427 () Bool)

(assert (= b_lambda!6389 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6427)))

(declare-fun b_lambda!6429 () Bool)

(assert (= b_lambda!6419 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6429)))

(declare-fun b_lambda!6431 () Bool)

(assert (= b_lambda!6407 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6431)))

(declare-fun b_lambda!6433 () Bool)

(assert (= b_lambda!6377 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6433)))

(declare-fun b_lambda!6435 () Bool)

(assert (= b_lambda!6339 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 (_2!1353 lt!73223)))) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (_2!1353 lt!73223)))) b_lambda!6435)))

(declare-fun b_lambda!6437 () Bool)

(assert (= b_lambda!6391 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6437)))

(declare-fun b_lambda!6439 () Bool)

(assert (= b_lambda!6405 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6439)))

(declare-fun b_lambda!6441 () Bool)

(assert (= b_lambda!6415 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6441)))

(declare-fun b_lambda!6443 () Bool)

(assert (= b_lambda!6381 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6443)))

(declare-fun b_lambda!6445 () Bool)

(assert (= b_lambda!6379 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6445)))

(declare-fun b_lambda!6447 () Bool)

(assert (= b_lambda!6383 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6447)))

(declare-fun b_lambda!6449 () Bool)

(assert (= b_lambda!6401 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6449)))

(declare-fun b_lambda!6451 () Bool)

(assert (= b_lambda!6403 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6451)))

(declare-fun b_lambda!6453 () Bool)

(assert (= b_lambda!6385 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6453)))

(declare-fun b_lambda!6455 () Bool)

(assert (= b_lambda!6413 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6455)))

(declare-fun b_lambda!6457 () Bool)

(assert (= b_lambda!6395 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6457)))

(declare-fun b_lambda!6459 () Bool)

(assert (= b_lambda!6409 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6459)))

(declare-fun b_lambda!6461 () Bool)

(assert (= b_lambda!6393 (or (and b!139567 b_free!3029) (and b!139573 b_free!3031 (= (defaultEntry!2940 newMap!16) (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))))) b_lambda!6461)))

(declare-fun b_lambda!6463 () Bool)

(assert (= b_lambda!6421 (or (and b!139567 b_free!3029 (= (defaultEntry!2940 (v!3280 (underlying!481 thiss!992))) (defaultEntry!2940 newMap!16))) (and b!139573 b_free!3031) b_lambda!6463)))

(check-sat (not d!44983) (not b!141186) (not b!141763) (not b!141146) (not b!141574) (not b!141672) (not b!142779) (not d!45135) (not b!142819) (not b!141346) (not b!141267) (not b!142276) (not b!141671) (not b!141786) (not d!45169) (not b!141199) (not b!142061) (not b!141958) (not d!44585) (not b!141648) (not d!44515) (not d!44281) (not b!141421) (not b!142228) (not d!45627) (not b!142020) (not b!142910) (not d!45625) (not b!142633) (not d!45289) (not b!141179) (not d!45189) (not b!142674) (not d!44935) (not d!44457) (not d!45305) (not b!141776) (not d!45025) (not d!44359) (not b!141780) (not b_lambda!6463) (not b!141953) (not b!143048) (not b!142831) (not b!143153) (not b!141887) (not b!142547) (not b!141129) (not b!141821) (not b!141913) (not d!44505) (not b!141791) (not b!141858) (not b!141302) (not b!141104) (not b!141622) (not d!44433) (not d!44195) (not d!45163) (not b!141398) (not bm!15682) (not b!141827) (not b!141774) (not d!44753) (not b!142094) (not b!142321) (not d!44947) (not bm!15673) (not d!45681) (not b!141197) (not b!142030) (not b!141707) (not d!45217) (not b!142106) (not b!142834) (not d!44315) (not b!141487) (not b!141591) (not b!141217) (not b!142251) (not b!142882) (not d!45131) (not b!142794) (not b!143050) (not d!45125) (not b!142399) (not b!142450) (not d!45689) (not d!45653) (not b!142923) (not b!142475) (not b!141768) (not d!45563) (not b!143092) (not b!142684) (not b!142977) (not d!45581) (not d!45045) (not d!45225) (not b!142120) (not b!141489) (not b!143118) (not b!142625) (not d!44503) (not b!142405) (not b!141156) (not b!143055) (not d!45285) (not bm!15691) (not d!44445) (not d!44731) (not b!141660) (not b!142431) (not d!45059) (not d!45449) (not b_lambda!6461) (not b!142325) (not d!44977) (not b!142789) (not b!142843) (not b!141561) (not d!45205) (not d!44311) (not b!142134) (not d!44567) (not b!141938) (not d!45737) (not b!142078) (not b!143113) (not b!143065) (not d!44949) (not b!141497) (not b!141500) (not b!141864) (not d!44719) (not b!143122) (not b!142265) (not d!45343) (not b_lambda!6433) (not d!44735) (not b!141631) (not b!141680) (not bm!15718) (not b!142646) (not bm!15714) (not b!142300) (not b!142612) (not b!142731) (not d!44469) (not b!141644) (not b!141838) (not b!142703) (not b!141272) (not d!45505) (not b!141496) (not b!141349) (not b!141739) (not b!142039) (not b!142290) (not b!141263) (not b!141457) (not d!44609) (not d!45789) (not d!44973) (not d!45497) (not d!44933) (not b!141722) (not b!141842) (not b!142849) (not d!45407) (not b!142514) (not b!142422) (not bm!15685) (not d!44557) (not b!141366) (not b!142031) (not b!142211) (not b!141431) (not b!141339) (not b!142735) (not d!45503) (not d!45461) (not b!141863) (not b!142046) (not d!44971) (not b!141893) (not b!141209) (not b!141455) (not b!142136) (not b!141460) (not b!142282) (not b!142543) (not d!45299) (not b_next!3029) (not b!141521) (not b!142809) (not b!142160) (not b!141778) (not b!141830) (not d!45733) (not b!141565) (not d!45279) (not b!141443) (not d!44191) (not d!44461) (not b!141136) (not b!141559) (not bm!15756) (not d!45227) (not b!141106) (not d!45651) (not b!141442) (not d!45417) (not b_lambda!6437) (not b!141382) (not b!141573) (not b!141529) (not b!142065) (not b!141628) (not b!141720) (not bm!15797) (not b!141386) (not d!45221) (not b!142810) (not b!143046) (not b!142689) (not b!142429) (not b!141313) (not b!141112) (not b!141836) (not b!142502) (not d!45599) (not b!142805) (not b!141237) (not b!141446) (not b!142263) (not b!143031) (not b_lambda!6459) (not b!141169) (not d!44843) (not b!142083) (not d!45779) (not b!141539) (not b!142414) (not b!142324) (not d!45663) (not b!142690) (not b!141899) (not d!44349) (not d!45647) (not b!142687) (not b!142190) (not b!142063) (not d!45805) (not b!142042) (not b!142354) (not b!141898) (not d!44511) (not d!44193) (not d!45549) (not d!44929) (not d!44423) (not bm!15809) (not b_lambda!6431) (not b!141873) (not b!142990) (not d!45317) (not d!44635) (not b!142430) (not b!143068) (not bm!15699) (not b!142913) (not d!45641) (not b!142804) (not d!44957) (not b!142705) (not b!142292) (not b!141607) (not d!45075) (not b!142723) (not d!44841) (not b!141745) (not b!141961) (not b!141814) (not b!142716) (not d!44287) (not b!142544) (not b!141402) (not b!142981) (not b!141855) (not b!141274) (not bm!15747) (not b!142188) (not b!142632) (not d!45577) (not d!44877) (not d!45813) (not b!141412) (not b!143079) (not b!142719) (not d!45597) (not b!141770) (not b!141247) (not d!45521) (not d!44709) (not b!142128) (not b!143003) (not b!141744) (not d!45179) (not b!141941) (not d!45093) (not b!141949) (not b!142077) (not b!143018) (not b!141848) (not b!142728) (not b!141880) (not d!44943) (not b!142577) (not d!45243) (not d!44963) (not d!45491) (not b!141229) (not d!44733) (not b!141351) (not d!45493) (not bm!15762) (not d!44365) (not d!44887) (not d!45575) (not b!141403) (not d!45573) (not b!143081) (not b_lambda!6367) (not d!45729) (not d!45151) (not b!141259) (not b!141330) (not b!141200) (not b!142621) (not d!45281) (not b!141475) (not d!44925) (not d!44891) (not d!44367) (not b!141819) (not d!45571) (not d!44909) (not b_lambda!6457) (not b!141410) (not d!45791) (not b!142928) (not d!44351) (not b!142628) (not d!45655) (not d!44777) (not b!142470) (not d!45579) (not b!141395) (not b!142702) (not b!141231) (not d!44463) (not b_lambda!6313) (not b!142562) (not b!141361) (not b!142597) (not b!141936) (not d!44855) (not b!142869) (not b!143157) (not bm!15705) (not b!143051) (not b!141905) (not b!142599) (not b!143142) (not d!45293) (not b!141971) (not b!143009) (not b!142064) (not b!141963) (not b!142452) (not b!141549) (not b!141348) (not b!141627) (not d!44633) (not d!45471) (not b!141318) (not b!142641) (not d!44237) (not b!141718) (not b!141734) (not b!141668) (not d!45601) (not bm!15680) (not b!141915) (not d!45539) (not b!141816) (not b!142663) (not b!142499) (not bm!15688) (not b!141270) (not d!44487) (not d!44559) (not bm!15800) (not d!45501) (not b!142231) (not b!142104) (not b!142992) (not b!142772) (not d!44603) (not b!141630) (not d!44671) (not b!142533) (not b!142392) (not d!44913) (not b!141275) (not b!141547) (not b!142369) (not b!143164) (not d!44661) (not b!142673) (not b!142204) (not d!45183) (not b!142695) (not b!141753) (not d!45465) (not d!45429) (not b!141582) (not b!142766) (not d!45349) (not d!45077) (not b!142268) (not b!142377) (not d!45819) (not d!44907) (not b!142441) (not b!142261) (not b!142158) (not bm!15799) (not d!45453) (not d!45181) (not b!142755) (not d!44401) (not b!142505) (not b!141657) (not bm!15706) (not b!142844) (not b!142297) (not d!44941) (not b_lambda!6371) (not b!142301) (not b!142648) (not b!141694) (not d!44583) (not d!45347) (not bm!15698) (not b!141300) (not b!143143) (not b!142465) (not b!142671) (not d!45089) (not b!142658) (not b!141453) (not d!44581) (not d!45187) (not d!45353) (not b!141517) (not d!45445) (not b!142294) (not d!45753) (not b!142130) (not d!45185) (not d!44621) (not d!45659) (not b!141183) (not d!44397) (not b!142847) (not d!44437) (not b!141480) (not b_lambda!6311) (not b!143099) (not b!142541) (not d!44833) (not b!142458) (not b!141447) (not b!141659) (not b!141965) (not b!142477) (not b!141772) (not d!45161) (not b!142388) (not d!44587) (not b!142156) (not d!45207) (not b!142777) (not b!142531) (not d!45439) (not b_lambda!6303) (not b!142233) (not d!44363) (not b!142593) (not b!142490) (not b!141993) (not d!45031) (not d!45517) (not d!44823) (not b!141924) (not d!45119) (not b!141703) (not b!142950) (not b!141315) (not bm!15780) (not b!142424) (not d!44969) (not b!142894) (not d!45843) (not d!44703) (not b!141445) (not b!142316) (not b!142780) (not b_lambda!6429) (not bm!15819) (not b!141976) (not d!44279) (not d!45027) (not d!44383) (not d!45441) (not d!45683) (not d!44177) (not b!141226) (not b!142391) (not b!142669) (not b!142563) (not d!44751) (not b!142497) (not b!142170) (not b!142615) (not b!142102) (not b!141894) (not d!44911) (not b!141737) (not bm!15684) (not d!44537) (not b!142518) (not b!142090) (not b!141203) (not b!142242) (not d!45129) (not b!142358) (not d!45335) (not b!142785) (not bm!15725) (not d!44799) (not b!142439) (not b!142380) (not b_lambda!6397) (not bm!15813) (not b!141427) (not b!141974) (not b!142582) (not b!142683) (not b!141911) (not b!142748) (not d!45423) (not b!142207) (not b!142159) (not b!142965) (not b!141773) (not b!142338) (not b!141808) (not b!143043) (not d!45605) (not b!141190) (not b!142315) (not b!142255) (not d!44261) (not b!142940) (not b!141940) (not b!141160) (not b!142840) (not d!44597) (not d!45047) (not b!142036) (not d!45223) (not b!142980) (not b!141629) (not d!45829) (not b!142662) (not b!143084) (not d!45723) (not b_lambda!6351) (not b!142931) (not b!142609) (not b!141955) (not b!142587) (not b!143016) (not d!44959) (not b!142994) (not b!142718) (not b_lambda!6353) (not b_lambda!6347) (not d!44827) (not d!45121) (not d!45385) (not d!45585) (not d!44337) (not d!45447) (not b!142878) (not d!45495) (not b!141943) (not b!141867) (not d!44375) (not b!141613) (not b!141700) (not d!45701) (not d!45391) (not d!44617) (not b!141393) (not b!142463) (not b!142006) (not d!44787) (not d!44179) (not bm!15803) (not d!44985) (not d!44535) (not b!141551) (not b!141123) (not d!45167) (not b!141138) (not d!44853) (not b!142348) (not d!45675) (not bm!15721) (not d!44493) (not b!141425) (not d!45061) (not b!141401) (not b!142618) (not b!142969) (not d!45251) (not b!143101) (not b!142838) (not b!142668) (not d!45499) (not b!141296) (not b!141418) (not b!142202) (not d!44485) (not b!142216) (not b!141290) (not b!141322) (not b!142471) (not d!44965) (not b!142870) (not b!142318) (not d!45595) (not b!142713) (not b!141120) (not b!142521) (not b!142699) (not b!141891) (not d!44163) (not bm!15793) (not d!44449) (not d!44919) (not d!45591) (not d!44745) (not b!141121) (not b!141951) (not bm!15806) (not b!143062) (not b!141997) (not b!142721) (not d!45177) (not bm!15729) (not d!45001) (not b!141278) (not b!142508) (not d!44263) (not b!142415) (not d!45137) (not b!142339) (not b!142313) (not d!44569) (not b!141358) (not d!44547) (not b!142812) (not d!44479) (not b!141794) (not b!142585) (not bm!15788) (not d!45667) (not b!141788) (not d!44427) (not d!45427) (not b!142368) (not d!45463) (not b!142303) (not d!44627) (not b!142605) (not d!45087) (not b!141438) (not b!142402) (not b!142336) (not b!141177) (not b!141908) (not d!44451) (not b!141578) (not b!142279) (not b!143115) (not d!45365) (not b!142973) (not b_lambda!6359) (not b!142084) (not d!44645) (not b!142028) (not d!45481) (not b!142360) (not d!44723) (not d!44951) (not b!141248) (not b!141325) (not b!142126) (not b!142568) (not d!44625) (not d!45661) (not d!45321) (not d!45399) (not b!141512) (not b!142139) (not d!44541) (not b!142905) (not bm!15753) (not b!141883) (not b!142645) (not d!45057) (not b!142462) (not b!142775) (not b!142691) (not d!45387) (not d!45603) (not d!45359) (not b!141652) (not b!141406) (not bm!15777) (not b!141343) (not d!44589) (not d!45411) (not b!142528) (not b!141789) (not d!45007) (not b!143019) (not d!45373) (not d!45781) (not d!45393) (not b_lambda!6307) (not b!142897) (not b!142841) (not d!45511) (not d!45383) (not b!141472) (not b!142153) (not bm!15789) (not b!143136) (not b!143053) (not d!45535) (not b!141544) (not b!143120) (not bm!15732) (not d!44385) (not d!45747) (not d!44521) (not b!141173) (not bm!15695) (not d!44739) (not b!142536) (not b!142178) (not b!143161) (not b!141742) (not b!142163) (not b!142481) (not d!44715) (not b!142299) (not b!141687) (not bm!15768) (not b!142932) (not d!45671) (not b!141820) (not b!142916) (not d!44759) (not b!141390) (not b!143071) (not b_lambda!6451) (not b!141983) (not d!44967) (not b!142162) (not b!142971) (not d!45587) (not b!141716) (not b!142738) (not bm!15686) (not b!142184) (not b!142284) (not d!45277) (not b!142934) (not b!141449) (not b!141122) (not b!142962) (not b!142754) (not b_lambda!6355) (not bm!15702) (not d!45357) (not b!142745) (not b!141604) (not d!45091) (not b!141134) (not b!142727) (not b!142309) (not b!142000) (not b!142384) (not d!44811) (not b!142573) (not b!141650) (not d!44797) (not b!142694) (not b!141428) (not b!141283) (not b!141698) (not b_lambda!6417) (not b!142860) (not b!141440) (not bm!15744) (not d!44181) (not d!45311) (not b!141344) (not d!44393) (not b!142764) (not b!142353) (not d!44545) (not b!142559) (not b!142830) (not d!45775) (not d!45479) (not d!45489) (not b!141877) (not b_lambda!6369) (not b!142219) (not b!141761) (not b!142394) (not b!142103) (not b!141378) (not d!44725) (not b!142999) (not d!44683) (not b!142067) (not d!45513) (not b!142327) (not mapNonEmpty!4849) (not b!142583) (not d!45255) (not d!45003) (not b!141244) (not b!141806) (not b!141494) (not d!45157) (not b!142575) (not d!44565) (not b!141194) (not b!142168) (not b!143139) (not d!44335) (not d!45337) (not b!142900) (not b!142367) (not d!45469) (not b!141164) (not b!142914) (not b!143021) (not b!142085) (not d!45589) (not b!142889) (not b!141404) (not b!141645) (not d!44955) (not d!44187) (not b!142946) (not b!142566) (not b!141861) (not b!142347) (not d!45171) (not b!141140) (not b!141748) (not b!142409) (not b_lambda!6285) (not b!142833) (not b!141706) (not b!142148) (not d!44217) (not b!142015) (not b!141731) (not b!142726) (not b!142150) (not b!143095) (not d!45719) (not bm!15728) (not b!142099) (not d!45767) (not b!142124) (not b!141701) (not bm!15784) (not b!141110) (not b!141181) (not d!45735) (not d!44225) (not b!141192) (not d!44295) (not b!141813) (not b!141537) (not b!143056) (not b!142822) (not b!142243) (not b!141305) (not b!142420) (not b!141542) (not d!45687) (not bm!15816) (not d!45525) (not d!45253) (not b!141797) (not b!141713) (not b!141107) (not b_lambda!6439) (not bm!15677) (not d!44699) (not d!44623) (not d!45201) (not d!45147) (not d!44593) (not b!142707) (not b!141536) (not b!141137) (not b!142930) (not d!45703) (not d!45699) (not d!44779) (not b!141640) (not d!44893) (not b!141635) (not d!45271) (not b!143047) (not b!142381) (not b!142964) (not b!141149) (not b!142868) (not b!142449) (not b!142504) (not b!142035) (not bm!15771) (not b!142335) (not d!44211) (not d!44857) (not d!45361) (not b_lambda!6305) (not d!45273) (not d!44607) (not d!45583) (not b!142952) (not d!45473) (not b!141642) (not d!45379) (not d!44207) (not d!44689) (not b!142075) (not b!141127) (not d!45639) (not d!45711) (not d!45173) (not b!141464) (not b!142222) (not b!141491) (not b!143022) (not b!141632) (not b!143097) (not d!44455) (not b!142911) (not b!142635) (not bm!15759) (not d!45149) (not b_lambda!6441) (not b!142446) (not b!141633) (not d!44475) (not b!142029) (not b!143026) (not b!142002) (not b!141853) (not d!45069) (not b!141705) (not b!141655) (not b!141251) (not b!141483) (not d!44793) (not b_next!3031) (not d!44979) (not bm!15794) (not b!142907) (not d!45743) (not b!142824) (not d!45283) (not b!142631) (not b!143098) (not b_lambda!6373) (not b!142545) (not d!44643) (not d!45467) (not b!141175) (not d!44791) (not d!44509) (not b!143145) (not d!44529) (not b!142245) (not b!142011) (not b!142220) (not b!142286) (not d!45515) (not d!44749) (not b!142027) (not b!141264) (not bm!15781) b_and!8937 (not b!142196) (not b!142922) (not b!141904) (not bm!15765) (not b!141594) (not d!45509) (not b!143107) (not bm!15687) (not b_lambda!6363) (not d!44601) (not d!44673) (not bm!15754) (not b!142558) (not b!142017) (not b!142008) (not d!44161) (not b!141662) (not b!142967) (not b!142433) (not b!142524) (not b!141641) (not d!45369) (not b!141436) (not b!141831) (not b!142181) (not b!141213) (not b!141553) (not b!143024) (not b!142740) (not b!141598) (not b!141751) (not b!143134) (not b_lambda!6455) (not d!44629) (not d!45019) (not b!142093) (not b!142679) (not b!141840) (not b!143001) (not b_lambda!6423) (not d!45801) (not b!143067) (not d!44915) (not b!141973) (not d!44413) (not b!141571) (not b!142210) (not bm!15722) (not bm!15742) (not d!45005) (not d!44319) (not d!44727) (not b!141833) (not b!142443) (not d!44591) (not d!45613) (not b!143040) (not b!141109) (not bm!15709) (not d!45333) (not d!45153) (not d!44307) (not b!141250) (not d!44345) (not d!45083) (not d!44555) (not b!141839) (not b!142677) (not b!142637) (not b!142355) (not b!141811) (not d!44573) (not d!45637) (not b!142427) (not b!142596) (not b!141253) (not d!44231) (not b!142483) (not b!141611) (not b!141896) (not b!141962) (not d!44903) (not b!142565) (not d!45793) (not d!44309) (not d!45413) (not b!142665) (not b!142236) (not b!143155) (not b!141856) (not b!143037) (not d!45623) (not b!141719) (not b!141906) (not b!142890) (not bm!15694) (not b!141670) (not b!141450) (not b!141817) (not b!142535) (not b!141989) (not b!142590) (not b!141262) (not b!142792) (not b!142920) (not b!141601) (not d!44871) (not d!45107) (not b!141240) (not d!45519) (not b!142893) (not b!142807) (not b!142660) (not d!44599) (not b!142081) (not b!142048) (not b!142664) (not b!141920) (not b!142174) (not bm!15743) (not d!45377) (not bm!15774) (not b!142908) (not b!143151) (not b!141930) (not b!142371) (not d!45355) (not d!44845) (not b!141286) (not d!45679) (not d!45409) (not b_lambda!6443) (not b!143058) b_and!8939 (not b_lambda!6447) (not b!143124) (not b!142166) (not d!45455) (not b!142670) (not b!143034) (not d!45621) (not bm!15683) (not b!142654) (not b!141966) (not b!142091) (not b!141576) (not d!44575) (not b_lambda!6349) (not d!44881) (not b!143000) (not d!45785) (not b!142032) (not d!45437) (not bm!15798) (not b!142872) (not b!141756) (not b!141152) (not b!142857) (not b!142186) (not b!141407) (not b!142737) (not b!141310) (not d!44839) (not bm!15710) (not b!142076) (not b!142349) (not d!45669) (not b!141415) (not d!45833) (not d!45175) (not d!44895) (not d!45345) (not d!44519) (not b!141373) (not b!142110) (not d!44175) (not b!141728) (not b!142732) (not b!141610) (not b!142681) (not d!45141) (not b!143069) (not b!141166) (not b!142892) (not b!142176) (not b!141563) (not b!143013) (not b!141708) (not bm!15676) (not b!141969) (not d!45443) (not b!142341) (not d!45211) (not b_lambda!6435) (not b!141921) (not b!142997) (not d!45777) (not b!141979) (not d!44813) (not b!141234) (not b!141506) (not b!142050) (not b!141115) (not b!142346) (not b!142851) (not d!45055) (not b!143133) (not d!44399) (not d!45541) (not b!141685) (not b!142839) (not b_lambda!6357) (not d!45839) (not b!141580) (not b!142865) (not b!141119) (not d!44667) (not b!141933) (not b!142473) (not d!45195) (not d!45051) (not d!44695) (not d!44241) (not d!44755) (not d!44377) (not d!44297) (not d!44665) (not b!141509) (not d!45707) (not b!141918) (not b!142693) (not d!44499) (not d!44927) (not b!141162) (not b!141511) (not b!141148) (not d!44253) (not b!141220) (not b!142259) (not b!142200) (not d!45673) (not b!142948) (not d!45013) (not b!142729) (not d!44403) (not b!143077) (not b!142704) (not b!142058) (not b!141498) (not bm!15750) (not b!142131) (not b!142342) (not d!44243) (not d!44165) (not b_lambda!6449) (not b!142073) (not b!142199) (not b!142273) (not b!142172) (not b!141256) (not b!141271) (not b!141293) (not d!45103) (not b!141520) (not d!44303) (not b!142025) (not b!142141) (not b!143049) (not b!141541) (not b!143090) (not b!141609) (not d!44523) (not b!142763) (not d!45101) (not b!143028) (not d!44611) (not b!141342) (not b!142288) (not b!142155) (not b!142460) (not b!142796) (not d!44549) (not b!143112) (not b!142986) (not d!44333) (not b!141710) (not b!142825) (not d!45291) (not bm!15715) (not b!142479) (not b!142333) (not d!45457) (not b_lambda!6445) (not b!142495) (not d!45017) (not bm!15755) (not d!44849) (not b!143162) (not b!142056) (not b!142467) (not b!141651) (not b!142978) (not b!142045) (not b!142343) (not b!141550) (not d!45485) (not d!45351) (not bm!15785) (not b!141334) (not d!45265) (not b!141478) (not b!143159) (not b!141470) (not d!44353) (not b!141514) (not d!45459) (not b!141711) (not b!141117) (not b!142553) (not b!142088) (not d!45033) (not b!141625) (not b!142580) (not b!142385) (not b_lambda!6289) tp_is_empty!2931 (not b_lambda!6425) (not b!141800) (not b!142667) (not b!141429) (not b!141684) (not d!44637) (not b!141467) (not b!142722) (not d!45095) (not b!142836) (not b!141316) (not b!142832) (not b!141364) (not b!141433) (not d!44639) (not b!141674) (not b!142656) (not d!44663) (not d!44291) (not b!142717) (not b!141336) (not d!45023) (not d!45073) (not b!142187) (not b!142362) (not b!141665) (not d!44961) (not b!141444) (not b!142257) (not b!143130) (not b!142365) (not b!142412) (not b!142351) (not d!44815) (not b!141579) (not b!142506) (not b!142323) (not d!44899) (not d!44167) (not d!44409) (not d!45303) (not b!141619) (not d!44861) (not b!141682) (not d!45615) (not b!141400) (not b!141602) (not b!142417) (not b!142179) (not b_lambda!6399) (not b!142383) (not b!141131) (not d!44953) (not b!142117) (not b!142555) (not b_lambda!6375) (not b!141981) (not b!142254) (not b!143088) (not b!141354) (not d!44901) (not b!141462) (not b!142762) (not d!44477) (not b!142213) (not d!44531) (not b!142033) (not b!142234) (not d!45761) (not b!142817) (not bm!15810) (not d!44939) (not b!142538) (not b!143121) (not d!45543) (not d!44447) (not d!44595) (not b!141458) (not b_lambda!6453) (not b!142638) (not d!45545) (not b!141466) (not b!142903) (not b!142087) (not b!142004) (not d!45315) (not b!141523) (not bm!15739) (not b!141639) (not b!142720) (not b!141823) (not d!44431) (not d!44169) (not bm!15713) (not b!142448) (not b!142983) (not b!142133) (not b_lambda!6361) (not b!142571) (not bm!15736) (not d!45145) (not b!141960) (not d!45139) (not b!142854) (not b!143060) (not d!44773) (not b!142241) (not b!141902) (not b!141568) (not b!142055) (not bm!15735) (not d!45749) (not b!142037) (not d!45209) (not b!142312) (not b!142955) (not b!142157) (not b!142782) (not d!45165) (not b!142239) (not d!45053) (not b!141519) (not b!142975) (not b!142757) (not b!143110) (not b!142053) (not d!45823) (not b!142623) (not b!142218) (not mapNonEmpty!4850) (not b!142808) (not d!44259) (not b!142561) (not b!142945) (not b!142396) (not b!141895) (not b!142643) (not b!141922) (not d!44329) (not b!141273) (not d!45155) (not b!142760) (not b!142828) (not b!142146) (not d!45435) (not b!141588) (not b!141277) (not b!142145) (not d!45037) (not b_lambda!6309) (not b!142108) (not b!142556) (not d!45827) (not bm!15681) (not d!45817) (not d!45593) (not b!141281) (not b!142751) (not b!143141) (not b!142468) (not b!141851) (not b!141796) (not d!45695) (not d!45269) (not b!142862) (not d!44379) (not d!45341) (not b!142143) (not d!44763) (not b!142688) (not b_lambda!6365) (not b!141798) (not d!45507) (not b!142114) (not d!44993) (not b!142902) (not b!141201) (not d!45451) (not b!142634) (not d!44467) (not d!44945) (not b!141417) (not b!141663) (not b!142588) (not b!141690) (not d!44605) (not b!142724) (not d!44223) (not b!142096) (not b!142918) (not d!45199) (not d!44829) (not d!44551) (not b!142107) (not b!141308) (not b_lambda!6427) (not b!141327) (not b!141765) (not b!142925) (not b!142827) (not b!142943) (not d!45257) (not b!142680) (not d!44525) (not b!142287) (not b!142557) (not d!45807) (not d!44327) (not b!141865))
(check-sat b_and!8937 b_and!8939 (not b_next!3029) (not b_next!3031))
