; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!29974 () Bool)

(assert start!29974)

(declare-fun res!158749 () Bool)

(declare-fun e!189945 () Bool)

(assert (=> start!29974 (=> (not res!158749) (not e!189945))))

(declare-fun mask!3709 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!29974 (= res!158749 (validMask!0 mask!3709))))

(assert (=> start!29974 e!189945))

(assert (=> start!29974 true))

(declare-datatypes ((array!15210 0))(
  ( (array!15211 (arr!7197 (Array (_ BitVec 32) (_ BitVec 64))) (size!7549 (_ BitVec 32))) )
))
(declare-fun a!3293 () array!15210)

(declare-fun array_inv!5151 (array!15210) Bool)

(assert (=> start!29974 (array_inv!5151 a!3293)))

(declare-fun b!300841 () Bool)

(declare-fun res!158750 () Bool)

(assert (=> b!300841 (=> (not res!158750) (not e!189945))))

(declare-fun i!1240 () (_ BitVec 32))

(assert (=> b!300841 (= res!158750 (and (= (size!7549 a!3293) (bvadd #b00000000000000000000000000000001 mask!3709)) (bvsge i!1240 #b00000000000000000000000000000000) (bvslt i!1240 (size!7549 a!3293))))))

(declare-fun b!300842 () Bool)

(declare-fun res!158751 () Bool)

(assert (=> b!300842 (=> (not res!158751) (not e!189945))))

(declare-fun k!2441 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!300842 (= res!158751 (validKeyInArray!0 k!2441))))

(declare-fun b!300843 () Bool)

(assert (=> b!300843 (= e!189945 (and (bvslt #b00000000000000000000000000000000 (size!7549 a!3293)) (bvsge (size!7549 a!3293) #b01111111111111111111111111111111)))))

(assert (= (and start!29974 res!158749) b!300841))

(assert (= (and b!300841 res!158750) b!300842))

(assert (= (and b!300842 res!158751) b!300843))

(declare-fun m!312769 () Bool)

(assert (=> start!29974 m!312769))

(declare-fun m!312771 () Bool)

(assert (=> start!29974 m!312771))

(declare-fun m!312773 () Bool)

(assert (=> b!300842 m!312773))

(push 1)

(assert (not b!300842))

(assert (not start!29974))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!67701 () Bool)

(assert (=> d!67701 (= (validKeyInArray!0 k!2441) (and (not (= k!2441 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!2441 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!300842 d!67701))

(declare-fun d!67703 () Bool)

(assert (=> d!67703 (= (validMask!0 mask!3709) (and (or (= mask!3709 #b00000000000000000000000000000111) (= mask!3709 #b00000000000000000000000000001111) (= mask!3709 #b00000000000000000000000000011111) (= mask!3709 #b00000000000000000000000000111111) (= mask!3709 #b00000000000000000000000001111111) (= mask!3709 #b00000000000000000000000011111111) (= mask!3709 #b00000000000000000000000111111111) (= mask!3709 #b00000000000000000000001111111111) (= mask!3709 #b00000000000000000000011111111111) (= mask!3709 #b00000000000000000000111111111111) (= mask!3709 #b00000000000000000001111111111111) (= mask!3709 #b00000000000000000011111111111111) (= mask!3709 #b00000000000000000111111111111111) (= mask!3709 #b00000000000000001111111111111111) (= mask!3709 #b00000000000000011111111111111111) (= mask!3709 #b00000000000000111111111111111111) (= mask!3709 #b00000000000001111111111111111111) (= mask!3709 #b00000000000011111111111111111111) (= mask!3709 #b00000000000111111111111111111111) (= mask!3709 #b00000000001111111111111111111111) (= mask!3709 #b00000000011111111111111111111111) (= mask!3709 #b00000000111111111111111111111111) (= mask!3709 #b00000001111111111111111111111111) (= mask!3709 #b00000011111111111111111111111111) (= mask!3709 #b00000111111111111111111111111111) (= mask!3709 #b00001111111111111111111111111111) (= mask!3709 #b00011111111111111111111111111111) (= mask!3709 #b00111111111111111111111111111111)) (bvsle mask!3709 #b00111111111111111111111111111111)))))

