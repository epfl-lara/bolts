; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!29972 () Bool)

(assert start!29972)

(declare-fun res!158740 () Bool)

(declare-fun e!189939 () Bool)

(assert (=> start!29972 (=> (not res!158740) (not e!189939))))

(declare-fun mask!3709 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!29972 (= res!158740 (validMask!0 mask!3709))))

(assert (=> start!29972 e!189939))

(assert (=> start!29972 true))

(declare-datatypes ((array!15208 0))(
  ( (array!15209 (arr!7196 (Array (_ BitVec 32) (_ BitVec 64))) (size!7548 (_ BitVec 32))) )
))
(declare-fun a!3293 () array!15208)

(declare-fun array_inv!5150 (array!15208) Bool)

(assert (=> start!29972 (array_inv!5150 a!3293)))

(declare-fun b!300832 () Bool)

(declare-fun res!158741 () Bool)

(assert (=> b!300832 (=> (not res!158741) (not e!189939))))

(declare-fun i!1240 () (_ BitVec 32))

(assert (=> b!300832 (= res!158741 (and (= (size!7548 a!3293) (bvadd #b00000000000000000000000000000001 mask!3709)) (bvsge i!1240 #b00000000000000000000000000000000) (bvslt i!1240 (size!7548 a!3293))))))

(declare-fun b!300833 () Bool)

(declare-fun res!158742 () Bool)

(assert (=> b!300833 (=> (not res!158742) (not e!189939))))

(declare-fun k0!2441 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!300833 (= res!158742 (validKeyInArray!0 k0!2441))))

(declare-fun b!300834 () Bool)

(assert (=> b!300834 (= e!189939 (and (bvslt #b00000000000000000000000000000000 (size!7548 a!3293)) (bvsge (size!7548 a!3293) #b01111111111111111111111111111111)))))

(assert (= (and start!29972 res!158740) b!300832))

(assert (= (and b!300832 res!158741) b!300833))

(assert (= (and b!300833 res!158742) b!300834))

(declare-fun m!312763 () Bool)

(assert (=> start!29972 m!312763))

(declare-fun m!312765 () Bool)

(assert (=> start!29972 m!312765))

(declare-fun m!312767 () Bool)

(assert (=> b!300833 m!312767))

(check-sat (not b!300833) (not start!29972))
(check-sat)
(get-model)

(declare-fun d!67693 () Bool)

(assert (=> d!67693 (= (validKeyInArray!0 k0!2441) (and (not (= k0!2441 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!2441 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!300833 d!67693))

(declare-fun d!67695 () Bool)

(assert (=> d!67695 (= (validMask!0 mask!3709) (and (or (= mask!3709 #b00000000000000000000000000000111) (= mask!3709 #b00000000000000000000000000001111) (= mask!3709 #b00000000000000000000000000011111) (= mask!3709 #b00000000000000000000000000111111) (= mask!3709 #b00000000000000000000000001111111) (= mask!3709 #b00000000000000000000000011111111) (= mask!3709 #b00000000000000000000000111111111) (= mask!3709 #b00000000000000000000001111111111) (= mask!3709 #b00000000000000000000011111111111) (= mask!3709 #b00000000000000000000111111111111) (= mask!3709 #b00000000000000000001111111111111) (= mask!3709 #b00000000000000000011111111111111) (= mask!3709 #b00000000000000000111111111111111) (= mask!3709 #b00000000000000001111111111111111) (= mask!3709 #b00000000000000011111111111111111) (= mask!3709 #b00000000000000111111111111111111) (= mask!3709 #b00000000000001111111111111111111) (= mask!3709 #b00000000000011111111111111111111) (= mask!3709 #b00000000000111111111111111111111) (= mask!3709 #b00000000001111111111111111111111) (= mask!3709 #b00000000011111111111111111111111) (= mask!3709 #b00000000111111111111111111111111) (= mask!3709 #b00000001111111111111111111111111) (= mask!3709 #b00000011111111111111111111111111) (= mask!3709 #b00000111111111111111111111111111) (= mask!3709 #b00001111111111111111111111111111) (= mask!3709 #b00011111111111111111111111111111) (= mask!3709 #b00111111111111111111111111111111)) (bvsle mask!3709 #b00111111111111111111111111111111)))))

(assert (=> start!29972 d!67695))

(declare-fun d!67705 () Bool)

(assert (=> d!67705 (= (array_inv!5150 a!3293) (bvsge (size!7548 a!3293) #b00000000000000000000000000000000))))

(assert (=> start!29972 d!67705))

(check-sat)
