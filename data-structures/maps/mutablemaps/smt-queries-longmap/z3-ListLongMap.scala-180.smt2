; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!3492 () Bool)

(assert start!3492)

(declare-fun b!23168 () Bool)

(declare-fun b_free!759 () Bool)

(declare-fun b_next!759 () Bool)

(assert (=> b!23168 (= b_free!759 (not b_next!759))))

(declare-fun tp!3524 () Bool)

(declare-fun b_and!1483 () Bool)

(assert (=> b!23168 (= tp!3524 b_and!1483)))

(declare-fun bm!1852 () Bool)

(declare-datatypes ((V!1189 0))(
  ( (V!1190 (val!538 Int)) )
))
(declare-datatypes ((ValueCell!312 0))(
  ( (ValueCellFull!312 (v!1603 V!1189)) (EmptyCell!312) )
))
(declare-datatypes ((array!1275 0))(
  ( (array!1276 (arr!603 (Array (_ BitVec 32) ValueCell!312)) (size!699 (_ BitVec 32))) )
))
(declare-datatypes ((array!1277 0))(
  ( (array!1278 (arr!604 (Array (_ BitVec 32) (_ BitVec 64))) (size!700 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!210 0))(
  ( (LongMapFixedSize!211 (defaultEntry!1743 Int) (mask!4730 (_ BitVec 32)) (extraKeys!1641 (_ BitVec 32)) (zeroValue!1666 V!1189) (minValue!1666 V!1189) (_size!150 (_ BitVec 32)) (_keys!3164 array!1277) (_values!1729 array!1275) (_vacant!150 (_ BitVec 32))) )
))
(declare-datatypes ((tuple2!938 0))(
  ( (tuple2!939 (_1!476 Bool) (_2!476 LongMapFixedSize!210)) )
))
(declare-fun call!1855 () tuple2!938)

(declare-fun call!1856 () tuple2!938)

(assert (=> bm!1852 (= call!1855 call!1856)))

(declare-fun b!23167 () Bool)

(declare-datatypes ((Cell!210 0))(
  ( (Cell!211 (v!1604 LongMapFixedSize!210)) )
))
(declare-datatypes ((tuple2!940 0))(
  ( (tuple2!941 (_1!477 Bool) (_2!477 Cell!210)) )
))
(declare-fun e!15070 () tuple2!940)

(declare-fun lt!8162 () LongMapFixedSize!210)

(assert (=> b!23167 (= e!15070 (tuple2!941 true (Cell!211 lt!8162)))))

(declare-fun bm!1853 () Bool)

(declare-fun c!2949 () Bool)

(declare-fun lt!8164 () tuple2!938)

(declare-datatypes ((LongMap!210 0))(
  ( (LongMap!211 (underlying!116 Cell!210)) )
))
(declare-fun thiss!938 () LongMap!210)

(declare-fun c!2948 () Bool)

(declare-fun update!34 (LongMapFixedSize!210 (_ BitVec 64) V!1189) tuple2!938)

(assert (=> bm!1853 (= call!1856 (update!34 (ite c!2948 (_2!476 lt!8164) lt!8162) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun e!15063 () Bool)

(declare-fun e!15061 () Bool)

(declare-fun tp_is_empty!1023 () Bool)

(declare-fun array_inv!425 (array!1277) Bool)

(declare-fun array_inv!426 (array!1275) Bool)

(assert (=> b!23168 (= e!15061 (and tp!3524 tp_is_empty!1023 (array_inv!425 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (array_inv!426 (_values!1729 (v!1604 (underlying!116 thiss!938)))) e!15063))))

(declare-fun b!23170 () Bool)

(declare-fun e!15071 () Bool)

(declare-fun e!15067 () Bool)

(assert (=> b!23170 (= e!15071 e!15067)))

(declare-fun res!14331 () Bool)

(assert (=> b!23170 (=> (not res!14331) (not e!15067))))

(declare-fun e!15064 () tuple2!940)

(assert (=> b!23170 (= res!14331 (_1!477 e!15064))))

(declare-fun lt!8160 () Bool)

(assert (=> b!23170 (= c!2948 (and (not lt!8160) (not (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> b!23170 (= lt!8160 (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001) #b00000000000000000000000000000000))))

(declare-fun getNewLongMapFixedSize!31 ((_ BitVec 32) Int) LongMapFixedSize!210)

(declare-fun computeNewMask!28 (LongMap!210 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!23170 (= lt!8162 (getNewLongMapFixedSize!31 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23171 () Bool)

(assert (=> b!23171 (= e!15067 (not (= (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (bvadd #b00000000000000000000000000000001 (mask!4730 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!23172 () Bool)

(declare-fun lt!8165 () tuple2!938)

(assert (=> b!23172 (= lt!8165 call!1855)))

(declare-fun e!15066 () tuple2!940)

(assert (=> b!23172 (= e!15066 (tuple2!941 (_1!476 lt!8165) (Cell!211 (_2!476 lt!8165))))))

(declare-fun mapNonEmpty!1025 () Bool)

(declare-fun mapRes!1025 () Bool)

(declare-fun tp!3523 () Bool)

(declare-fun e!15065 () Bool)

(assert (=> mapNonEmpty!1025 (= mapRes!1025 (and tp!3523 e!15065))))

(declare-fun mapRest!1025 () (Array (_ BitVec 32) ValueCell!312))

(declare-fun mapValue!1025 () ValueCell!312)

(declare-fun mapKey!1025 () (_ BitVec 32))

(assert (=> mapNonEmpty!1025 (= (arr!603 (_values!1729 (v!1604 (underlying!116 thiss!938)))) (store mapRest!1025 mapKey!1025 mapValue!1025))))

(declare-fun b!23173 () Bool)

(declare-fun e!15069 () Bool)

(assert (=> b!23173 (= e!15069 tp_is_empty!1023)))

(declare-fun mapIsEmpty!1025 () Bool)

(assert (=> mapIsEmpty!1025 mapRes!1025))

(declare-fun b!23174 () Bool)

(declare-fun lt!8163 () tuple2!938)

(assert (=> b!23174 (= e!15070 (tuple2!941 (_1!476 lt!8163) (Cell!211 (_2!476 lt!8163))))))

(assert (=> b!23174 (= lt!8163 call!1855)))

(declare-fun b!23175 () Bool)

(declare-fun c!2950 () Bool)

(assert (=> b!23175 (= c!2950 (and (not (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) lt!8160))))

(assert (=> b!23175 (= e!15066 e!15070)))

(declare-fun b!23176 () Bool)

(declare-fun e!15068 () Bool)

(assert (=> b!23176 (= e!15068 e!15061)))

(declare-fun res!14330 () Bool)

(assert (=> start!3492 (=> (not res!14330) (not e!15071))))

(declare-fun valid!108 (LongMap!210) Bool)

(assert (=> start!3492 (= res!14330 (valid!108 thiss!938))))

(assert (=> start!3492 e!15071))

(declare-fun e!15062 () Bool)

(assert (=> start!3492 e!15062))

(declare-fun b!23169 () Bool)

(assert (=> b!23169 (= e!15063 (and e!15069 mapRes!1025))))

(declare-fun condMapEmpty!1025 () Bool)

(declare-fun mapDefault!1025 () ValueCell!312)

(assert (=> b!23169 (= condMapEmpty!1025 (= (arr!603 (_values!1729 (v!1604 (underlying!116 thiss!938)))) ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1025)))))

(declare-fun b!23177 () Bool)

(declare-fun res!14332 () Bool)

(assert (=> b!23177 (=> (not res!14332) (not e!15067))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!23177 (= res!14332 (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23178 () Bool)

(assert (=> b!23178 (= e!15065 tp_is_empty!1023)))

(declare-fun b!23179 () Bool)

(assert (=> b!23179 (= e!15062 e!15068)))

(declare-fun b!23180 () Bool)

(assert (=> b!23180 (= e!15064 e!15066)))

(assert (=> b!23180 (= c!2949 (and (not lt!8160) (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23181 () Bool)

(declare-fun lt!8161 () tuple2!938)

(assert (=> b!23181 (= e!15064 (tuple2!941 (and (_1!476 lt!8164) (_1!476 lt!8161)) (Cell!211 (_2!476 lt!8161))))))

(assert (=> b!23181 (= lt!8164 (update!34 lt!8162 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> b!23181 (= lt!8161 call!1856)))

(assert (= (and start!3492 res!14330) b!23170))

(assert (= (and b!23170 c!2948) b!23181))

(assert (= (and b!23170 (not c!2948)) b!23180))

(assert (= (and b!23180 c!2949) b!23172))

(assert (= (and b!23180 (not c!2949)) b!23175))

(assert (= (and b!23175 c!2950) b!23174))

(assert (= (and b!23175 (not c!2950)) b!23167))

(assert (= (or b!23172 b!23174) bm!1852))

(assert (= (or b!23181 bm!1852) bm!1853))

(assert (= (and b!23170 res!14331) b!23177))

(assert (= (and b!23177 res!14332) b!23171))

(assert (= (and b!23169 condMapEmpty!1025) mapIsEmpty!1025))

(assert (= (and b!23169 (not condMapEmpty!1025)) mapNonEmpty!1025))

(get-info :version)

(assert (= (and mapNonEmpty!1025 ((_ is ValueCellFull!312) mapValue!1025)) b!23178))

(assert (= (and b!23169 ((_ is ValueCellFull!312) mapDefault!1025)) b!23173))

(assert (= b!23168 b!23169))

(assert (= b!23176 b!23168))

(assert (= b!23179 b!23176))

(assert (= start!3492 b!23179))

(declare-fun m!16754 () Bool)

(assert (=> mapNonEmpty!1025 m!16754))

(declare-fun m!16756 () Bool)

(assert (=> bm!1853 m!16756))

(declare-fun m!16758 () Bool)

(assert (=> b!23170 m!16758))

(assert (=> b!23170 m!16758))

(declare-fun m!16760 () Bool)

(assert (=> b!23170 m!16760))

(declare-fun m!16762 () Bool)

(assert (=> b!23168 m!16762))

(declare-fun m!16764 () Bool)

(assert (=> b!23168 m!16764))

(declare-fun m!16766 () Bool)

(assert (=> start!3492 m!16766))

(declare-fun m!16768 () Bool)

(assert (=> b!23181 m!16768))

(declare-fun m!16770 () Bool)

(assert (=> b!23177 m!16770))

(check-sat (not start!3492) (not mapNonEmpty!1025) (not b!23181) (not b!23177) (not bm!1853) tp_is_empty!1023 b_and!1483 (not b_next!759) (not b!23170) (not b!23168))
(check-sat b_and!1483 (not b_next!759))
(get-model)

(declare-fun d!3987 () Bool)

(declare-fun valid!109 (LongMapFixedSize!210) Bool)

(assert (=> d!3987 (= (valid!108 thiss!938) (valid!109 (v!1604 (underlying!116 thiss!938))))))

(declare-fun bs!948 () Bool)

(assert (= bs!948 d!3987))

(declare-fun m!16790 () Bool)

(assert (=> bs!948 m!16790))

(assert (=> start!3492 d!3987))

(declare-fun d!3989 () Bool)

(assert (=> d!3989 (= (array_inv!425 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (bvsge (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000))))

(assert (=> b!23168 d!3989))

(declare-fun d!3991 () Bool)

(assert (=> d!3991 (= (array_inv!426 (_values!1729 (v!1604 (underlying!116 thiss!938)))) (bvsge (size!699 (_values!1729 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000))))

(assert (=> b!23168 d!3991))

(declare-fun bm!1908 () Bool)

(declare-fun call!1934 () Bool)

(declare-fun call!1928 () Bool)

(assert (=> bm!1908 (= call!1934 call!1928)))

(declare-fun b!23311 () Bool)

(declare-fun e!15160 () Bool)

(declare-fun e!15161 () Bool)

(assert (=> b!23311 (= e!15160 e!15161)))

(declare-fun res!14379 () Bool)

(declare-fun call!1932 () Bool)

(assert (=> b!23311 (= res!14379 call!1932)))

(assert (=> b!23311 (=> (not res!14379) (not e!15161))))

(declare-fun b!23312 () Bool)

(declare-datatypes ((tuple2!946 0))(
  ( (tuple2!947 (_1!480 (_ BitVec 64)) (_2!480 V!1189)) )
))
(declare-datatypes ((List!565 0))(
  ( (Nil!562) (Cons!561 (h!1127 tuple2!946) (t!3238 List!565)) )
))
(declare-datatypes ((ListLongMap!553 0))(
  ( (ListLongMap!554 (toList!292 List!565)) )
))
(declare-fun e!15153 () ListLongMap!553)

(declare-fun call!1919 () ListLongMap!553)

(assert (=> b!23312 (= e!15153 call!1919)))

(declare-fun b!23313 () Bool)

(declare-datatypes ((Unit!514 0))(
  ( (Unit!515) )
))
(declare-fun lt!8258 () Unit!514)

(declare-fun lt!8254 () Unit!514)

(assert (=> b!23313 (= lt!8258 lt!8254)))

(declare-fun call!1915 () ListLongMap!553)

(declare-fun call!1920 () ListLongMap!553)

(assert (=> b!23313 (= call!1915 call!1920)))

(declare-fun lt!8238 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!10 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!514)

(assert (=> b!23313 (= lt!8254 (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> b!23313 (= lt!8238 (bvor (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001))))

(declare-fun e!15170 () tuple2!938)

(assert (=> b!23313 (= e!15170 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvor (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_vacant!150 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23314 () Bool)

(declare-fun e!15162 () Bool)

(declare-fun e!15172 () Bool)

(assert (=> b!23314 (= e!15162 e!15172)))

(declare-fun c!2994 () Bool)

(declare-fun lt!8264 () tuple2!938)

(assert (=> b!23314 (= c!2994 (_1!476 lt!8264))))

(declare-fun bm!1910 () Bool)

(declare-fun call!1929 () Unit!514)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!514)

(assert (=> bm!1910 (= call!1929 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23315 () Bool)

(declare-fun res!14373 () Bool)

(declare-fun e!15163 () Bool)

(assert (=> b!23315 (=> (not res!14373) (not e!15163))))

(declare-datatypes ((SeekEntryResult!59 0))(
  ( (MissingZero!59 (index!2357 (_ BitVec 32))) (Found!59 (index!2358 (_ BitVec 32))) (Intermediate!59 (undefined!871 Bool) (index!2359 (_ BitVec 32)) (x!5581 (_ BitVec 32))) (Undefined!59) (MissingVacant!59 (index!2360 (_ BitVec 32))) )
))
(declare-fun lt!8248 () SeekEntryResult!59)

(assert (=> b!23315 (= res!14373 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2357 lt!8248)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23316 () Bool)

(declare-fun e!15164 () Unit!514)

(declare-fun Unit!516 () Unit!514)

(assert (=> b!23316 (= e!15164 Unit!516)))

(declare-fun lt!8242 () Unit!514)

(assert (=> b!23316 (= lt!8242 call!1929)))

(declare-fun lt!8250 () SeekEntryResult!59)

(declare-fun call!1917 () SeekEntryResult!59)

(assert (=> b!23316 (= lt!8250 call!1917)))

(declare-fun c!2995 () Bool)

(assert (=> b!23316 (= c!2995 ((_ is MissingZero!59) lt!8250))))

(declare-fun e!15168 () Bool)

(assert (=> b!23316 e!15168))

(declare-fun lt!8239 () Unit!514)

(assert (=> b!23316 (= lt!8239 lt!8242)))

(assert (=> b!23316 false))

(declare-fun b!23317 () Bool)

(assert (=> b!23317 (= e!15160 ((_ is Undefined!59) lt!8250))))

(declare-fun b!23318 () Bool)

(declare-fun e!15167 () Bool)

(declare-fun e!15158 () Bool)

(assert (=> b!23318 (= e!15167 e!15158)))

(declare-fun res!14383 () Bool)

(declare-fun call!1931 () Bool)

(assert (=> b!23318 (= res!14383 call!1931)))

(assert (=> b!23318 (=> (not res!14383) (not e!15158))))

(declare-fun bm!1911 () Bool)

(declare-fun call!1923 () Bool)

(assert (=> bm!1911 (= call!1923 call!1928)))

(declare-fun e!15155 () Bool)

(declare-fun lt!8256 () SeekEntryResult!59)

(declare-fun b!23319 () Bool)

(assert (=> b!23319 (= e!15155 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8256)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!1912 () Bool)

(declare-fun call!1933 () Bool)

(declare-fun arrayContainsKey!0 (array!1277 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> bm!1912 (= call!1933 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000))))

(declare-fun bm!1913 () Bool)

(declare-fun call!1927 () ListLongMap!553)

(declare-fun map!410 (LongMapFixedSize!210) ListLongMap!553)

(assert (=> bm!1913 (= call!1927 (map!410 (_2!476 lt!8264)))))

(declare-fun b!23320 () Bool)

(declare-fun call!1924 () Bool)

(assert (=> b!23320 (= e!15163 (not call!1924))))

(declare-fun b!23321 () Bool)

(declare-fun call!1921 () Bool)

(assert (=> b!23321 (= e!15161 (not call!1921))))

(declare-fun b!23322 () Bool)

(declare-fun e!15165 () Bool)

(assert (=> b!23322 (= e!15165 (not call!1921))))

(declare-fun b!23323 () Bool)

(declare-fun e!15154 () tuple2!938)

(declare-fun lt!8263 () tuple2!938)

(assert (=> b!23323 (= e!15154 (tuple2!939 (_1!476 lt!8263) (_2!476 lt!8263)))))

(declare-fun call!1926 () tuple2!938)

(assert (=> b!23323 (= lt!8263 call!1926)))

(declare-fun b!23324 () Bool)

(declare-fun getCurrentListMap!121 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) ListLongMap!553)

(assert (=> b!23324 (= e!15153 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23325 () Bool)

(declare-fun c!2991 () Bool)

(declare-fun lt!8255 () SeekEntryResult!59)

(assert (=> b!23325 (= c!2991 ((_ is MissingVacant!59) lt!8255))))

(declare-fun e!15166 () tuple2!938)

(assert (=> b!23325 (= e!15166 e!15154)))

(declare-fun b!23326 () Bool)

(declare-fun e!15169 () ListLongMap!553)

(declare-fun call!1912 () ListLongMap!553)

(assert (=> b!23326 (= e!15169 call!1912)))

(declare-fun call!1922 () ListLongMap!553)

(declare-fun c!2997 () Bool)

(declare-fun bm!1914 () Bool)

(declare-fun lt!8261 () array!1275)

(assert (=> bm!1914 (= call!1922 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!1915 () Bool)

(assert (=> bm!1915 (= call!1932 call!1934)))

(declare-fun b!23327 () Bool)

(declare-fun lt!8240 () tuple2!938)

(assert (=> b!23327 (= lt!8240 call!1926)))

(declare-fun e!15171 () tuple2!938)

(assert (=> b!23327 (= e!15171 (tuple2!939 (_1!476 lt!8240) (_2!476 lt!8240)))))

(declare-fun bm!1916 () Bool)

(declare-fun call!1930 () SeekEntryResult!59)

(declare-fun call!1925 () SeekEntryResult!59)

(assert (=> bm!1916 (= call!1930 call!1925)))

(declare-fun b!23328 () Bool)

(declare-fun res!14372 () Bool)

(assert (=> b!23328 (=> (not res!14372) (not e!15165))))

(assert (=> b!23328 (= res!14372 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2357 lt!8250)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1917 () Bool)

(declare-fun updateHelperNewKey!10 (LongMapFixedSize!210 (_ BitVec 64) V!1189 (_ BitVec 32)) tuple2!938)

(assert (=> bm!1917 (= call!1926 (updateHelperNewKey!10 (ite c!2948 (_2!476 lt!8164) lt!8162) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))

(declare-fun c!3001 () Bool)

(declare-fun bm!1918 () Bool)

(declare-fun call!1916 () ListLongMap!553)

(declare-fun +!45 (ListLongMap!553 tuple2!946) ListLongMap!553)

(assert (=> bm!1918 (= call!1916 (+!45 e!15153 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun c!2992 () Bool)

(assert (=> bm!1918 (= c!2992 c!2997)))

(declare-fun b!23329 () Bool)

(declare-fun lt!8246 () Unit!514)

(declare-fun lt!8245 () Unit!514)

(assert (=> b!23329 (= lt!8246 lt!8245)))

(assert (=> b!23329 (= call!1915 call!1920)))

(declare-fun lt!8259 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!514)

(assert (=> b!23329 (= lt!8245 (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> b!23329 (= lt!8259 (bvor (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010))))

(assert (=> b!23329 (= e!15170 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvor (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_vacant!150 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23330 () Bool)

(declare-fun res!14381 () Bool)

(assert (=> b!23330 (=> (not res!14381) (not e!15163))))

(assert (=> b!23330 (= res!14381 call!1931)))

(declare-fun e!15173 () Bool)

(assert (=> b!23330 (= e!15173 e!15163)))

(declare-fun b!23331 () Bool)

(declare-fun lt!8251 () Unit!514)

(assert (=> b!23331 (= e!15164 lt!8251)))

(declare-fun call!1913 () Unit!514)

(assert (=> b!23331 (= lt!8251 call!1913)))

(assert (=> b!23331 (= lt!8256 call!1917)))

(declare-fun res!14371 () Bool)

(assert (=> b!23331 (= res!14371 ((_ is Found!59) lt!8256))))

(assert (=> b!23331 (=> (not res!14371) (not e!15155))))

(assert (=> b!23331 e!15155))

(declare-fun b!23332 () Bool)

(declare-fun c!2988 () Bool)

(assert (=> b!23332 (= c!2988 ((_ is MissingVacant!59) lt!8250))))

(assert (=> b!23332 (= e!15168 e!15160)))

(declare-fun b!23333 () Bool)

(declare-fun c!2990 () Bool)

(assert (=> b!23333 (= c!2990 ((_ is MissingVacant!59) lt!8248))))

(assert (=> b!23333 (= e!15173 e!15167)))

(declare-fun b!23334 () Bool)

(declare-fun e!15174 () Bool)

(assert (=> b!23334 (= e!15172 e!15174)))

(declare-fun res!14374 () Bool)

(declare-fun contains!220 (ListLongMap!553 (_ BitVec 64)) Bool)

(assert (=> b!23334 (= res!14374 (contains!220 call!1927 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23334 (=> (not res!14374) (not e!15174))))

(declare-fun bm!1919 () Bool)

(assert (=> bm!1919 (= call!1917 call!1925)))

(declare-fun b!23335 () Bool)

(declare-fun e!15156 () tuple2!938)

(assert (=> b!23335 (= e!15156 e!15170)))

(assert (=> b!23335 (= c!3001 (= (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1920 () Bool)

(assert (=> bm!1920 (= call!1915 call!1916)))

(declare-fun b!23336 () Bool)

(assert (=> b!23336 (= e!15156 e!15166)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!1277 (_ BitVec 32)) SeekEntryResult!59)

(assert (=> b!23336 (= lt!8255 (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun c!2993 () Bool)

(assert (=> b!23336 (= c!2993 ((_ is Undefined!59) lt!8255))))

(declare-fun b!23337 () Bool)

(assert (=> b!23337 (= e!15154 e!15171)))

(declare-fun c!2999 () Bool)

(assert (=> b!23337 (= c!2999 ((_ is MissingZero!59) lt!8255))))

(declare-fun res!14375 () Bool)

(declare-fun b!23338 () Bool)

(assert (=> b!23338 (= res!14375 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2360 lt!8248)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23338 (=> (not res!14375) (not e!15158))))

(declare-fun b!23339 () Bool)

(declare-fun lt!8244 () Unit!514)

(declare-fun e!15159 () Unit!514)

(assert (=> b!23339 (= lt!8244 e!15159)))

(declare-fun c!2989 () Bool)

(declare-fun call!1918 () Bool)

(assert (=> b!23339 (= c!2989 call!1918)))

(assert (=> b!23339 (= e!15166 (tuple2!939 false (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(declare-fun bm!1921 () Bool)

(assert (=> bm!1921 (= call!1924 call!1933)))

(declare-fun bm!1922 () Bool)

(declare-fun call!1911 () ListLongMap!553)

(assert (=> bm!1922 (= call!1920 call!1911)))

(declare-fun b!23340 () Bool)

(declare-fun lt!8253 () Unit!514)

(assert (=> b!23340 (= e!15159 lt!8253)))

(assert (=> b!23340 (= lt!8253 call!1929)))

(assert (=> b!23340 (= lt!8248 call!1930)))

(declare-fun c!3000 () Bool)

(assert (=> b!23340 (= c!3000 ((_ is MissingZero!59) lt!8248))))

(assert (=> b!23340 e!15173))

(declare-fun b!23341 () Bool)

(declare-fun lt!8243 () SeekEntryResult!59)

(declare-fun e!15157 () Bool)

(assert (=> b!23341 (= e!15157 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8243)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!1914 () ListLongMap!553)

(declare-fun bm!1923 () Bool)

(assert (=> bm!1923 (= call!1914 (map!410 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(declare-fun bm!1909 () Bool)

(assert (=> bm!1909 (= call!1925 (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun d!3993 () Bool)

(assert (=> d!3993 e!15162))

(declare-fun res!14380 () Bool)

(assert (=> d!3993 (=> (not res!14380) (not e!15162))))

(assert (=> d!3993 (= res!14380 (valid!109 (_2!476 lt!8264)))))

(assert (=> d!3993 (= lt!8264 e!15156)))

(assert (=> d!3993 (= c!2997 (= (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (bvneg (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!3993 (valid!109 (ite c!2948 (_2!476 lt!8164) lt!8162))))

(assert (=> d!3993 (= (update!34 (ite c!2948 (_2!476 lt!8164) lt!8162) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!8264)))

(declare-fun c!2998 () Bool)

(declare-fun bm!1924 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!1924 (= call!1928 (inRange!0 (ite c!2993 (ite c!2989 (index!2358 lt!8243) (ite c!3000 (index!2357 lt!8248) (index!2360 lt!8248))) (ite c!2998 (index!2358 lt!8256) (ite c!2995 (index!2357 lt!8250) (index!2360 lt!8250)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23342 () Bool)

(assert (=> b!23342 (= e!15172 (= call!1927 call!1914))))

(declare-fun bm!1925 () Bool)

(assert (=> bm!1925 (= call!1921 call!1933)))

(declare-fun b!23343 () Bool)

(declare-fun res!14382 () Bool)

(assert (=> b!23343 (= res!14382 call!1934)))

(assert (=> b!23343 (=> (not res!14382) (not e!15155))))

(declare-fun b!23344 () Bool)

(declare-fun lt!8257 () Unit!514)

(declare-fun lt!8249 () Unit!514)

(assert (=> b!23344 (= lt!8257 lt!8249)))

(assert (=> b!23344 (contains!220 call!1922 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!10 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) Unit!514)

(assert (=> b!23344 (= lt!8249 (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> b!23344 (= lt!8261 (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun lt!8260 () Unit!514)

(declare-fun lt!8262 () Unit!514)

(assert (=> b!23344 (= lt!8260 lt!8262)))

(assert (=> b!23344 (= call!1916 call!1912)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!514)

(assert (=> b!23344 (= lt!8262 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8247 () Unit!514)

(assert (=> b!23344 (= lt!8247 e!15164)))

(assert (=> b!23344 (= c!2998 call!1918)))

(assert (=> b!23344 (= e!15171 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_vacant!150 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23345 () Bool)

(declare-fun res!14377 () Bool)

(assert (=> b!23345 (=> (not res!14377) (not e!15165))))

(assert (=> b!23345 (= res!14377 call!1932)))

(assert (=> b!23345 (= e!15168 e!15165)))

(declare-fun bm!1926 () Bool)

(declare-fun c!2996 () Bool)

(assert (=> bm!1926 (= c!2996 c!2993)))

(assert (=> bm!1926 (= call!1918 (contains!220 e!15169 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!23346 () Bool)

(assert (=> b!23346 (= e!15167 ((_ is Undefined!59) lt!8248))))

(declare-fun bm!1927 () Bool)

(assert (=> bm!1927 (= call!1911 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23347 () Bool)

(assert (=> b!23347 (= e!15169 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun res!14376 () Bool)

(declare-fun b!23348 () Bool)

(assert (=> b!23348 (= res!14376 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2360 lt!8250)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23348 (=> (not res!14376) (not e!15161))))

(declare-fun bm!1928 () Bool)

(assert (=> bm!1928 (= call!1931 call!1923)))

(declare-fun b!23349 () Bool)

(assert (=> b!23349 (= e!15174 (= call!1927 (+!45 call!1914 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!23350 () Bool)

(declare-fun res!14370 () Bool)

(assert (=> b!23350 (= res!14370 call!1923)))

(assert (=> b!23350 (=> (not res!14370) (not e!15157))))

(declare-fun bm!1929 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!514)

(assert (=> bm!1929 (= call!1913 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23351 () Bool)

(assert (=> b!23351 (= e!15158 (not call!1924))))

(declare-fun bm!1930 () Bool)

(assert (=> bm!1930 (= call!1919 call!1922)))

(declare-fun b!23352 () Bool)

(declare-fun Unit!517 () Unit!514)

(assert (=> b!23352 (= e!15159 Unit!517)))

(declare-fun lt!8241 () Unit!514)

(assert (=> b!23352 (= lt!8241 call!1913)))

(assert (=> b!23352 (= lt!8243 call!1930)))

(declare-fun res!14378 () Bool)

(assert (=> b!23352 (= res!14378 ((_ is Found!59) lt!8243))))

(assert (=> b!23352 (=> (not res!14378) (not e!15157))))

(assert (=> b!23352 e!15157))

(declare-fun lt!8252 () Unit!514)

(assert (=> b!23352 (= lt!8252 lt!8241)))

(assert (=> b!23352 false))

(declare-fun bm!1931 () Bool)

(assert (=> bm!1931 (= call!1912 call!1911)))

(assert (= (and d!3993 c!2997) b!23335))

(assert (= (and d!3993 (not c!2997)) b!23336))

(assert (= (and b!23335 c!3001) b!23313))

(assert (= (and b!23335 (not c!3001)) b!23329))

(assert (= (or b!23313 b!23329) bm!1922))

(assert (= (or b!23313 b!23329) bm!1930))

(assert (= (or b!23313 b!23329) bm!1920))

(assert (= (and b!23336 c!2993) b!23339))

(assert (= (and b!23336 (not c!2993)) b!23325))

(assert (= (and b!23339 c!2989) b!23352))

(assert (= (and b!23339 (not c!2989)) b!23340))

(assert (= (and b!23352 res!14378) b!23350))

(assert (= (and b!23350 res!14370) b!23341))

(assert (= (and b!23340 c!3000) b!23330))

(assert (= (and b!23340 (not c!3000)) b!23333))

(assert (= (and b!23330 res!14381) b!23315))

(assert (= (and b!23315 res!14373) b!23320))

(assert (= (and b!23333 c!2990) b!23318))

(assert (= (and b!23333 (not c!2990)) b!23346))

(assert (= (and b!23318 res!14383) b!23338))

(assert (= (and b!23338 res!14375) b!23351))

(assert (= (or b!23330 b!23318) bm!1928))

(assert (= (or b!23320 b!23351) bm!1921))

(assert (= (or b!23350 bm!1928) bm!1911))

(assert (= (or b!23352 b!23340) bm!1916))

(assert (= (and b!23325 c!2991) b!23323))

(assert (= (and b!23325 (not c!2991)) b!23337))

(assert (= (and b!23337 c!2999) b!23327))

(assert (= (and b!23337 (not c!2999)) b!23344))

(assert (= (and b!23344 c!2998) b!23331))

(assert (= (and b!23344 (not c!2998)) b!23316))

(assert (= (and b!23331 res!14371) b!23343))

(assert (= (and b!23343 res!14382) b!23319))

(assert (= (and b!23316 c!2995) b!23345))

(assert (= (and b!23316 (not c!2995)) b!23332))

(assert (= (and b!23345 res!14377) b!23328))

(assert (= (and b!23328 res!14372) b!23322))

(assert (= (and b!23332 c!2988) b!23311))

(assert (= (and b!23332 (not c!2988)) b!23317))

(assert (= (and b!23311 res!14379) b!23348))

(assert (= (and b!23348 res!14376) b!23321))

(assert (= (or b!23345 b!23311) bm!1915))

(assert (= (or b!23322 b!23321) bm!1925))

(assert (= (or b!23343 bm!1915) bm!1908))

(assert (= (or b!23331 b!23316) bm!1919))

(assert (= (or b!23323 b!23327) bm!1917))

(assert (= (or b!23340 b!23316) bm!1910))

(assert (= (or b!23339 b!23344) bm!1931))

(assert (= (or b!23352 b!23331) bm!1929))

(assert (= (or bm!1911 bm!1908) bm!1924))

(assert (= (or bm!1921 bm!1925) bm!1912))

(assert (= (or bm!1916 bm!1919) bm!1909))

(assert (= (or b!23339 b!23344) bm!1926))

(assert (= (and bm!1926 c!2996) b!23326))

(assert (= (and bm!1926 (not c!2996)) b!23347))

(assert (= (or bm!1922 bm!1931) bm!1927))

(assert (= (or bm!1930 b!23344) bm!1914))

(assert (= (or bm!1920 b!23344) bm!1918))

(assert (= (and bm!1918 c!2992) b!23312))

(assert (= (and bm!1918 (not c!2992)) b!23324))

(assert (= (and d!3993 res!14380) b!23314))

(assert (= (and b!23314 c!2994) b!23334))

(assert (= (and b!23314 (not c!2994)) b!23342))

(assert (= (and b!23334 res!14374) b!23349))

(assert (= (or b!23349 b!23342) bm!1923))

(assert (= (or b!23334 b!23349 b!23342) bm!1913))

(declare-fun m!16792 () Bool)

(assert (=> bm!1927 m!16792))

(declare-fun m!16794 () Bool)

(assert (=> bm!1927 m!16794))

(declare-fun m!16796 () Bool)

(assert (=> bm!1924 m!16796))

(declare-fun m!16798 () Bool)

(assert (=> bm!1917 m!16798))

(declare-fun m!16800 () Bool)

(assert (=> b!23319 m!16800))

(declare-fun m!16802 () Bool)

(assert (=> bm!1918 m!16802))

(declare-fun m!16804 () Bool)

(assert (=> b!23313 m!16804))

(declare-fun m!16806 () Bool)

(assert (=> b!23349 m!16806))

(declare-fun m!16808 () Bool)

(assert (=> d!3993 m!16808))

(declare-fun m!16810 () Bool)

(assert (=> d!3993 m!16810))

(declare-fun m!16812 () Bool)

(assert (=> bm!1909 m!16812))

(declare-fun m!16814 () Bool)

(assert (=> b!23344 m!16814))

(declare-fun m!16816 () Bool)

(assert (=> b!23344 m!16816))

(assert (=> b!23344 m!16814))

(declare-fun m!16818 () Bool)

(assert (=> b!23344 m!16818))

(declare-fun m!16820 () Bool)

(assert (=> b!23344 m!16820))

(assert (=> b!23344 m!16792))

(declare-fun m!16822 () Bool)

(assert (=> b!23328 m!16822))

(declare-fun m!16824 () Bool)

(assert (=> bm!1913 m!16824))

(declare-fun m!16826 () Bool)

(assert (=> b!23338 m!16826))

(declare-fun m!16828 () Bool)

(assert (=> b!23324 m!16828))

(declare-fun m!16830 () Bool)

(assert (=> bm!1923 m!16830))

(assert (=> b!23336 m!16812))

(declare-fun m!16832 () Bool)

(assert (=> bm!1914 m!16832))

(declare-fun m!16834 () Bool)

(assert (=> b!23348 m!16834))

(declare-fun m!16836 () Bool)

(assert (=> b!23334 m!16836))

(declare-fun m!16838 () Bool)

(assert (=> bm!1926 m!16838))

(declare-fun m!16840 () Bool)

(assert (=> bm!1910 m!16840))

(declare-fun m!16842 () Bool)

(assert (=> b!23329 m!16842))

(assert (=> b!23347 m!16828))

(declare-fun m!16844 () Bool)

(assert (=> bm!1912 m!16844))

(declare-fun m!16846 () Bool)

(assert (=> bm!1929 m!16846))

(declare-fun m!16848 () Bool)

(assert (=> b!23341 m!16848))

(declare-fun m!16850 () Bool)

(assert (=> b!23315 m!16850))

(assert (=> bm!1853 d!3993))

(declare-fun bm!1932 () Bool)

(declare-fun call!1958 () Bool)

(declare-fun call!1952 () Bool)

(assert (=> bm!1932 (= call!1958 call!1952)))

(declare-fun b!23353 () Bool)

(declare-fun e!15182 () Bool)

(declare-fun e!15183 () Bool)

(assert (=> b!23353 (= e!15182 e!15183)))

(declare-fun res!14393 () Bool)

(declare-fun call!1956 () Bool)

(assert (=> b!23353 (= res!14393 call!1956)))

(assert (=> b!23353 (=> (not res!14393) (not e!15183))))

(declare-fun b!23354 () Bool)

(declare-fun e!15175 () ListLongMap!553)

(declare-fun call!1943 () ListLongMap!553)

(assert (=> b!23354 (= e!15175 call!1943)))

(declare-fun b!23355 () Bool)

(declare-fun lt!8285 () Unit!514)

(declare-fun lt!8281 () Unit!514)

(assert (=> b!23355 (= lt!8285 lt!8281)))

(declare-fun call!1939 () ListLongMap!553)

(declare-fun call!1944 () ListLongMap!553)

(assert (=> b!23355 (= call!1939 call!1944)))

(declare-fun lt!8265 () (_ BitVec 32))

(assert (=> b!23355 (= lt!8281 (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8265 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) (defaultEntry!1743 lt!8162)))))

(assert (=> b!23355 (= lt!8265 (bvor (extraKeys!1641 lt!8162) #b00000000000000000000000000000001))))

(declare-fun e!15192 () tuple2!938)

(assert (=> b!23355 (= e!15192 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8162) (mask!4730 lt!8162) (bvor (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) (_size!150 lt!8162) (_keys!3164 lt!8162) (_values!1729 lt!8162) (_vacant!150 lt!8162))))))

(declare-fun b!23356 () Bool)

(declare-fun e!15184 () Bool)

(declare-fun e!15194 () Bool)

(assert (=> b!23356 (= e!15184 e!15194)))

(declare-fun c!3008 () Bool)

(declare-fun lt!8291 () tuple2!938)

(assert (=> b!23356 (= c!3008 (_1!476 lt!8291))))

(declare-fun bm!1934 () Bool)

(declare-fun call!1953 () Unit!514)

(assert (=> bm!1934 (= call!1953 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23357 () Bool)

(declare-fun res!14387 () Bool)

(declare-fun e!15185 () Bool)

(assert (=> b!23357 (=> (not res!14387) (not e!15185))))

(declare-fun lt!8275 () SeekEntryResult!59)

(assert (=> b!23357 (= res!14387 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2357 lt!8275)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23358 () Bool)

(declare-fun e!15186 () Unit!514)

(declare-fun Unit!518 () Unit!514)

(assert (=> b!23358 (= e!15186 Unit!518)))

(declare-fun lt!8269 () Unit!514)

(assert (=> b!23358 (= lt!8269 call!1953)))

(declare-fun lt!8277 () SeekEntryResult!59)

(declare-fun call!1941 () SeekEntryResult!59)

(assert (=> b!23358 (= lt!8277 call!1941)))

(declare-fun c!3009 () Bool)

(assert (=> b!23358 (= c!3009 ((_ is MissingZero!59) lt!8277))))

(declare-fun e!15190 () Bool)

(assert (=> b!23358 e!15190))

(declare-fun lt!8266 () Unit!514)

(assert (=> b!23358 (= lt!8266 lt!8269)))

(assert (=> b!23358 false))

(declare-fun b!23359 () Bool)

(assert (=> b!23359 (= e!15182 ((_ is Undefined!59) lt!8277))))

(declare-fun b!23360 () Bool)

(declare-fun e!15189 () Bool)

(declare-fun e!15180 () Bool)

(assert (=> b!23360 (= e!15189 e!15180)))

(declare-fun res!14397 () Bool)

(declare-fun call!1955 () Bool)

(assert (=> b!23360 (= res!14397 call!1955)))

(assert (=> b!23360 (=> (not res!14397) (not e!15180))))

(declare-fun bm!1935 () Bool)

(declare-fun call!1947 () Bool)

(assert (=> bm!1935 (= call!1947 call!1952)))

(declare-fun b!23361 () Bool)

(declare-fun e!15177 () Bool)

(declare-fun lt!8283 () SeekEntryResult!59)

(assert (=> b!23361 (= e!15177 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8283)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1936 () Bool)

(declare-fun call!1957 () Bool)

(assert (=> bm!1936 (= call!1957 (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun bm!1937 () Bool)

(declare-fun call!1951 () ListLongMap!553)

(assert (=> bm!1937 (= call!1951 (map!410 (_2!476 lt!8291)))))

(declare-fun b!23362 () Bool)

(declare-fun call!1948 () Bool)

(assert (=> b!23362 (= e!15185 (not call!1948))))

(declare-fun b!23363 () Bool)

(declare-fun call!1945 () Bool)

(assert (=> b!23363 (= e!15183 (not call!1945))))

(declare-fun b!23364 () Bool)

(declare-fun e!15187 () Bool)

(assert (=> b!23364 (= e!15187 (not call!1945))))

(declare-fun b!23365 () Bool)

(declare-fun e!15176 () tuple2!938)

(declare-fun lt!8290 () tuple2!938)

(assert (=> b!23365 (= e!15176 (tuple2!939 (_1!476 lt!8290) (_2!476 lt!8290)))))

(declare-fun call!1950 () tuple2!938)

(assert (=> b!23365 (= lt!8290 call!1950)))

(declare-fun b!23366 () Bool)

(assert (=> b!23366 (= e!15175 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23367 () Bool)

(declare-fun c!3005 () Bool)

(declare-fun lt!8282 () SeekEntryResult!59)

(assert (=> b!23367 (= c!3005 ((_ is MissingVacant!59) lt!8282))))

(declare-fun e!15188 () tuple2!938)

(assert (=> b!23367 (= e!15188 e!15176)))

(declare-fun b!23368 () Bool)

(declare-fun e!15191 () ListLongMap!553)

(declare-fun call!1936 () ListLongMap!553)

(assert (=> b!23368 (= e!15191 call!1936)))

(declare-fun call!1946 () ListLongMap!553)

(declare-fun bm!1938 () Bool)

(declare-fun lt!8288 () array!1275)

(declare-fun c!3011 () Bool)

(assert (=> bm!1938 (= call!1946 (getCurrentListMap!121 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun bm!1939 () Bool)

(assert (=> bm!1939 (= call!1956 call!1958)))

(declare-fun b!23369 () Bool)

(declare-fun lt!8267 () tuple2!938)

(assert (=> b!23369 (= lt!8267 call!1950)))

(declare-fun e!15193 () tuple2!938)

(assert (=> b!23369 (= e!15193 (tuple2!939 (_1!476 lt!8267) (_2!476 lt!8267)))))

(declare-fun bm!1940 () Bool)

(declare-fun call!1954 () SeekEntryResult!59)

(declare-fun call!1949 () SeekEntryResult!59)

(assert (=> bm!1940 (= call!1954 call!1949)))

(declare-fun b!23370 () Bool)

(declare-fun res!14386 () Bool)

(assert (=> b!23370 (=> (not res!14386) (not e!15187))))

(assert (=> b!23370 (= res!14386 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2357 lt!8277)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1941 () Bool)

(assert (=> bm!1941 (= call!1950 (updateHelperNewKey!10 lt!8162 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))

(declare-fun call!1940 () ListLongMap!553)

(declare-fun c!3015 () Bool)

(declare-fun bm!1942 () Bool)

(assert (=> bm!1942 (= call!1940 (+!45 e!15175 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun c!3006 () Bool)

(assert (=> bm!1942 (= c!3006 c!3011)))

(declare-fun b!23371 () Bool)

(declare-fun lt!8273 () Unit!514)

(declare-fun lt!8272 () Unit!514)

(assert (=> b!23371 (= lt!8273 lt!8272)))

(assert (=> b!23371 (= call!1939 call!1944)))

(declare-fun lt!8286 () (_ BitVec 32))

(assert (=> b!23371 (= lt!8272 (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)))))

(assert (=> b!23371 (= lt!8286 (bvor (extraKeys!1641 lt!8162) #b00000000000000000000000000000010))))

(assert (=> b!23371 (= e!15192 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8162) (mask!4730 lt!8162) (bvor (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (_size!150 lt!8162) (_keys!3164 lt!8162) (_values!1729 lt!8162) (_vacant!150 lt!8162))))))

(declare-fun b!23372 () Bool)

(declare-fun res!14395 () Bool)

(assert (=> b!23372 (=> (not res!14395) (not e!15185))))

(assert (=> b!23372 (= res!14395 call!1955)))

(declare-fun e!15195 () Bool)

(assert (=> b!23372 (= e!15195 e!15185)))

(declare-fun b!23373 () Bool)

(declare-fun lt!8278 () Unit!514)

(assert (=> b!23373 (= e!15186 lt!8278)))

(declare-fun call!1937 () Unit!514)

(assert (=> b!23373 (= lt!8278 call!1937)))

(assert (=> b!23373 (= lt!8283 call!1941)))

(declare-fun res!14385 () Bool)

(assert (=> b!23373 (= res!14385 ((_ is Found!59) lt!8283))))

(assert (=> b!23373 (=> (not res!14385) (not e!15177))))

(assert (=> b!23373 e!15177))

(declare-fun b!23374 () Bool)

(declare-fun c!3002 () Bool)

(assert (=> b!23374 (= c!3002 ((_ is MissingVacant!59) lt!8277))))

(assert (=> b!23374 (= e!15190 e!15182)))

(declare-fun b!23375 () Bool)

(declare-fun c!3004 () Bool)

(assert (=> b!23375 (= c!3004 ((_ is MissingVacant!59) lt!8275))))

(assert (=> b!23375 (= e!15195 e!15189)))

(declare-fun b!23376 () Bool)

(declare-fun e!15196 () Bool)

(assert (=> b!23376 (= e!15194 e!15196)))

(declare-fun res!14388 () Bool)

(assert (=> b!23376 (= res!14388 (contains!220 call!1951 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23376 (=> (not res!14388) (not e!15196))))

(declare-fun bm!1943 () Bool)

(assert (=> bm!1943 (= call!1941 call!1949)))

(declare-fun b!23377 () Bool)

(declare-fun e!15178 () tuple2!938)

(assert (=> b!23377 (= e!15178 e!15192)))

(assert (=> b!23377 (= c!3015 (= #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1944 () Bool)

(assert (=> bm!1944 (= call!1939 call!1940)))

(declare-fun b!23378 () Bool)

(assert (=> b!23378 (= e!15178 e!15188)))

(assert (=> b!23378 (= lt!8282 (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun c!3007 () Bool)

(assert (=> b!23378 (= c!3007 ((_ is Undefined!59) lt!8282))))

(declare-fun b!23379 () Bool)

(assert (=> b!23379 (= e!15176 e!15193)))

(declare-fun c!3013 () Bool)

(assert (=> b!23379 (= c!3013 ((_ is MissingZero!59) lt!8282))))

(declare-fun b!23380 () Bool)

(declare-fun res!14389 () Bool)

(assert (=> b!23380 (= res!14389 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2360 lt!8275)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23380 (=> (not res!14389) (not e!15180))))

(declare-fun b!23381 () Bool)

(declare-fun lt!8271 () Unit!514)

(declare-fun e!15181 () Unit!514)

(assert (=> b!23381 (= lt!8271 e!15181)))

(declare-fun c!3003 () Bool)

(declare-fun call!1942 () Bool)

(assert (=> b!23381 (= c!3003 call!1942)))

(assert (=> b!23381 (= e!15188 (tuple2!939 false lt!8162))))

(declare-fun bm!1945 () Bool)

(assert (=> bm!1945 (= call!1948 call!1957)))

(declare-fun bm!1946 () Bool)

(declare-fun call!1935 () ListLongMap!553)

(assert (=> bm!1946 (= call!1944 call!1935)))

(declare-fun b!23382 () Bool)

(declare-fun lt!8280 () Unit!514)

(assert (=> b!23382 (= e!15181 lt!8280)))

(assert (=> b!23382 (= lt!8280 call!1953)))

(assert (=> b!23382 (= lt!8275 call!1954)))

(declare-fun c!3014 () Bool)

(assert (=> b!23382 (= c!3014 ((_ is MissingZero!59) lt!8275))))

(assert (=> b!23382 e!15195))

(declare-fun b!23383 () Bool)

(declare-fun e!15179 () Bool)

(declare-fun lt!8270 () SeekEntryResult!59)

(assert (=> b!23383 (= e!15179 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8270)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1947 () Bool)

(declare-fun call!1938 () ListLongMap!553)

(assert (=> bm!1947 (= call!1938 (map!410 lt!8162))))

(declare-fun bm!1933 () Bool)

(assert (=> bm!1933 (= call!1949 (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun d!3995 () Bool)

(assert (=> d!3995 e!15184))

(declare-fun res!14394 () Bool)

(assert (=> d!3995 (=> (not res!14394) (not e!15184))))

(assert (=> d!3995 (= res!14394 (valid!109 (_2!476 lt!8291)))))

(assert (=> d!3995 (= lt!8291 e!15178)))

(assert (=> d!3995 (= c!3011 (= #b0000000000000000000000000000000000000000000000000000000000000000 (bvneg #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!3995 (valid!109 lt!8162)))

(assert (=> d!3995 (= (update!34 lt!8162 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) lt!8291)))

(declare-fun c!3012 () Bool)

(declare-fun bm!1948 () Bool)

(assert (=> bm!1948 (= call!1952 (inRange!0 (ite c!3007 (ite c!3003 (index!2358 lt!8270) (ite c!3014 (index!2357 lt!8275) (index!2360 lt!8275))) (ite c!3012 (index!2358 lt!8283) (ite c!3009 (index!2357 lt!8277) (index!2360 lt!8277)))) (mask!4730 lt!8162)))))

(declare-fun b!23384 () Bool)

(assert (=> b!23384 (= e!15194 (= call!1951 call!1938))))

(declare-fun bm!1949 () Bool)

(assert (=> bm!1949 (= call!1945 call!1957)))

(declare-fun b!23385 () Bool)

(declare-fun res!14396 () Bool)

(assert (=> b!23385 (= res!14396 call!1958)))

(assert (=> b!23385 (=> (not res!14396) (not e!15177))))

(declare-fun b!23386 () Bool)

(declare-fun lt!8284 () Unit!514)

(declare-fun lt!8276 () Unit!514)

(assert (=> b!23386 (= lt!8284 lt!8276)))

(assert (=> b!23386 (contains!220 call!1946 (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))))

(assert (=> b!23386 (= lt!8276 (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) (defaultEntry!1743 lt!8162)))))

(assert (=> b!23386 (= lt!8288 (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))))

(declare-fun lt!8287 () Unit!514)

(declare-fun lt!8289 () Unit!514)

(assert (=> b!23386 (= lt!8287 lt!8289)))

(assert (=> b!23386 (= call!1940 call!1936)))

(assert (=> b!23386 (= lt!8289 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8274 () Unit!514)

(assert (=> b!23386 (= lt!8274 e!15186)))

(assert (=> b!23386 (= c!3012 call!1942)))

(assert (=> b!23386 (= e!15193 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (_size!150 lt!8162) (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (_vacant!150 lt!8162))))))

(declare-fun b!23387 () Bool)

(declare-fun res!14391 () Bool)

(assert (=> b!23387 (=> (not res!14391) (not e!15187))))

(assert (=> b!23387 (= res!14391 call!1956)))

(assert (=> b!23387 (= e!15190 e!15187)))

(declare-fun bm!1950 () Bool)

(declare-fun c!3010 () Bool)

(assert (=> bm!1950 (= c!3010 c!3007)))

(assert (=> bm!1950 (= call!1942 (contains!220 e!15191 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23388 () Bool)

(assert (=> b!23388 (= e!15189 ((_ is Undefined!59) lt!8275))))

(declare-fun bm!1951 () Bool)

(assert (=> bm!1951 (= call!1935 (getCurrentListMap!121 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23389 () Bool)

(assert (=> b!23389 (= e!15191 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23390 () Bool)

(declare-fun res!14390 () Bool)

(assert (=> b!23390 (= res!14390 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2360 lt!8277)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23390 (=> (not res!14390) (not e!15183))))

(declare-fun bm!1952 () Bool)

(assert (=> bm!1952 (= call!1955 call!1947)))

(declare-fun b!23391 () Bool)

(assert (=> b!23391 (= e!15196 (= call!1951 (+!45 call!1938 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!23392 () Bool)

(declare-fun res!14384 () Bool)

(assert (=> b!23392 (= res!14384 call!1947)))

(assert (=> b!23392 (=> (not res!14384) (not e!15179))))

(declare-fun bm!1953 () Bool)

(assert (=> bm!1953 (= call!1937 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23393 () Bool)

(assert (=> b!23393 (= e!15180 (not call!1948))))

(declare-fun bm!1954 () Bool)

(assert (=> bm!1954 (= call!1943 call!1946)))

(declare-fun b!23394 () Bool)

(declare-fun Unit!519 () Unit!514)

(assert (=> b!23394 (= e!15181 Unit!519)))

(declare-fun lt!8268 () Unit!514)

(assert (=> b!23394 (= lt!8268 call!1937)))

(assert (=> b!23394 (= lt!8270 call!1954)))

(declare-fun res!14392 () Bool)

(assert (=> b!23394 (= res!14392 ((_ is Found!59) lt!8270))))

(assert (=> b!23394 (=> (not res!14392) (not e!15179))))

(assert (=> b!23394 e!15179))

(declare-fun lt!8279 () Unit!514)

(assert (=> b!23394 (= lt!8279 lt!8268)))

(assert (=> b!23394 false))

(declare-fun bm!1955 () Bool)

(assert (=> bm!1955 (= call!1936 call!1935)))

(assert (= (and d!3995 c!3011) b!23377))

(assert (= (and d!3995 (not c!3011)) b!23378))

(assert (= (and b!23377 c!3015) b!23355))

(assert (= (and b!23377 (not c!3015)) b!23371))

(assert (= (or b!23355 b!23371) bm!1946))

(assert (= (or b!23355 b!23371) bm!1954))

(assert (= (or b!23355 b!23371) bm!1944))

(assert (= (and b!23378 c!3007) b!23381))

(assert (= (and b!23378 (not c!3007)) b!23367))

(assert (= (and b!23381 c!3003) b!23394))

(assert (= (and b!23381 (not c!3003)) b!23382))

(assert (= (and b!23394 res!14392) b!23392))

(assert (= (and b!23392 res!14384) b!23383))

(assert (= (and b!23382 c!3014) b!23372))

(assert (= (and b!23382 (not c!3014)) b!23375))

(assert (= (and b!23372 res!14395) b!23357))

(assert (= (and b!23357 res!14387) b!23362))

(assert (= (and b!23375 c!3004) b!23360))

(assert (= (and b!23375 (not c!3004)) b!23388))

(assert (= (and b!23360 res!14397) b!23380))

(assert (= (and b!23380 res!14389) b!23393))

(assert (= (or b!23372 b!23360) bm!1952))

(assert (= (or b!23362 b!23393) bm!1945))

(assert (= (or b!23392 bm!1952) bm!1935))

(assert (= (or b!23394 b!23382) bm!1940))

(assert (= (and b!23367 c!3005) b!23365))

(assert (= (and b!23367 (not c!3005)) b!23379))

(assert (= (and b!23379 c!3013) b!23369))

(assert (= (and b!23379 (not c!3013)) b!23386))

(assert (= (and b!23386 c!3012) b!23373))

(assert (= (and b!23386 (not c!3012)) b!23358))

(assert (= (and b!23373 res!14385) b!23385))

(assert (= (and b!23385 res!14396) b!23361))

(assert (= (and b!23358 c!3009) b!23387))

(assert (= (and b!23358 (not c!3009)) b!23374))

(assert (= (and b!23387 res!14391) b!23370))

(assert (= (and b!23370 res!14386) b!23364))

(assert (= (and b!23374 c!3002) b!23353))

(assert (= (and b!23374 (not c!3002)) b!23359))

(assert (= (and b!23353 res!14393) b!23390))

(assert (= (and b!23390 res!14390) b!23363))

(assert (= (or b!23387 b!23353) bm!1939))

(assert (= (or b!23364 b!23363) bm!1949))

(assert (= (or b!23385 bm!1939) bm!1932))

(assert (= (or b!23373 b!23358) bm!1943))

(assert (= (or b!23365 b!23369) bm!1941))

(assert (= (or b!23382 b!23358) bm!1934))

(assert (= (or b!23381 b!23386) bm!1955))

(assert (= (or b!23394 b!23373) bm!1953))

(assert (= (or bm!1935 bm!1932) bm!1948))

(assert (= (or bm!1945 bm!1949) bm!1936))

(assert (= (or bm!1940 bm!1943) bm!1933))

(assert (= (or b!23381 b!23386) bm!1950))

(assert (= (and bm!1950 c!3010) b!23368))

(assert (= (and bm!1950 (not c!3010)) b!23389))

(assert (= (or bm!1946 bm!1955) bm!1951))

(assert (= (or bm!1954 b!23386) bm!1938))

(assert (= (or bm!1944 b!23386) bm!1942))

(assert (= (and bm!1942 c!3006) b!23354))

(assert (= (and bm!1942 (not c!3006)) b!23366))

(assert (= (and d!3995 res!14394) b!23356))

(assert (= (and b!23356 c!3008) b!23376))

(assert (= (and b!23356 (not c!3008)) b!23384))

(assert (= (and b!23376 res!14388) b!23391))

(assert (= (or b!23391 b!23384) bm!1947))

(assert (= (or b!23376 b!23391 b!23384) bm!1937))

(declare-fun m!16852 () Bool)

(assert (=> bm!1951 m!16852))

(declare-fun m!16854 () Bool)

(assert (=> bm!1951 m!16854))

(declare-fun m!16856 () Bool)

(assert (=> bm!1948 m!16856))

(declare-fun m!16858 () Bool)

(assert (=> bm!1941 m!16858))

(declare-fun m!16860 () Bool)

(assert (=> b!23361 m!16860))

(declare-fun m!16862 () Bool)

(assert (=> bm!1942 m!16862))

(declare-fun m!16864 () Bool)

(assert (=> b!23355 m!16864))

(declare-fun m!16866 () Bool)

(assert (=> b!23391 m!16866))

(declare-fun m!16868 () Bool)

(assert (=> d!3995 m!16868))

(declare-fun m!16870 () Bool)

(assert (=> d!3995 m!16870))

(declare-fun m!16872 () Bool)

(assert (=> bm!1933 m!16872))

(declare-fun m!16874 () Bool)

(assert (=> b!23386 m!16874))

(declare-fun m!16876 () Bool)

(assert (=> b!23386 m!16876))

(assert (=> b!23386 m!16874))

(declare-fun m!16878 () Bool)

(assert (=> b!23386 m!16878))

(declare-fun m!16880 () Bool)

(assert (=> b!23386 m!16880))

(assert (=> b!23386 m!16852))

(declare-fun m!16882 () Bool)

(assert (=> b!23370 m!16882))

(declare-fun m!16884 () Bool)

(assert (=> bm!1937 m!16884))

(declare-fun m!16886 () Bool)

(assert (=> b!23380 m!16886))

(declare-fun m!16888 () Bool)

(assert (=> b!23366 m!16888))

(declare-fun m!16890 () Bool)

(assert (=> bm!1947 m!16890))

(assert (=> b!23378 m!16872))

(declare-fun m!16892 () Bool)

(assert (=> bm!1938 m!16892))

(declare-fun m!16894 () Bool)

(assert (=> b!23390 m!16894))

(declare-fun m!16896 () Bool)

(assert (=> b!23376 m!16896))

(declare-fun m!16898 () Bool)

(assert (=> bm!1950 m!16898))

(declare-fun m!16900 () Bool)

(assert (=> bm!1934 m!16900))

(declare-fun m!16902 () Bool)

(assert (=> b!23371 m!16902))

(assert (=> b!23389 m!16888))

(declare-fun m!16904 () Bool)

(assert (=> bm!1936 m!16904))

(declare-fun m!16906 () Bool)

(assert (=> bm!1953 m!16906))

(declare-fun m!16908 () Bool)

(assert (=> b!23383 m!16908))

(declare-fun m!16910 () Bool)

(assert (=> b!23357 m!16910))

(assert (=> b!23181 d!3995))

(declare-fun d!3997 () Bool)

(assert (=> d!3997 (= (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938)))) (and (or (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000001111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000011111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000001111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000011111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000001111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000011111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000001111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000011111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000001111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000011111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000001111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000011111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000001111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000011111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000001111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000011111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000111111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00001111111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00011111111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00111111111111111111111111111111)) (bvsle (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00111111111111111111111111111111)))))

(assert (=> b!23177 d!3997))

(declare-fun b!23408 () Bool)

(declare-fun e!15204 () Unit!514)

(declare-fun Unit!520 () Unit!514)

(assert (=> b!23408 (= e!15204 Unit!520)))

(declare-fun lt!8342 () tuple2!946)

(declare-fun lt!8345 () LongMapFixedSize!210)

(declare-fun head!830 (List!565) tuple2!946)

(assert (=> b!23408 (= lt!8342 (head!830 (toList!292 (map!410 lt!8345))))))

(declare-fun lt!8346 () array!1277)

(assert (=> b!23408 (= lt!8346 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(declare-fun lt!8347 () (_ BitVec 32))

(assert (=> b!23408 (= lt!8347 #b00000000000000000000000000000000)))

(declare-fun lt!8354 () Unit!514)

(declare-fun lemmaKeyInListMapIsInArray!93 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!514)

(declare-fun dynLambda!144 (Int (_ BitVec 64)) V!1189)

(assert (=> b!23408 (= lt!8354 (lemmaKeyInListMapIsInArray!93 lt!8346 (array!1276 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8347 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!480 lt!8342) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun c!3020 () Bool)

(assert (=> b!23408 (= c!3020 (and (not (= (_1!480 lt!8342) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (_1!480 lt!8342) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15203 () Bool)

(assert (=> b!23408 e!15203))

(declare-fun lt!8344 () Unit!514)

(assert (=> b!23408 (= lt!8344 lt!8354)))

(declare-fun lt!8351 () (_ BitVec 32))

(declare-fun arrayScanForKey!0 (array!1277 (_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!23408 (= lt!8351 (arrayScanForKey!0 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!480 lt!8342) #b00000000000000000000000000000000))))

(assert (=> b!23408 false))

(declare-fun b!23409 () Bool)

(declare-fun Unit!521 () Unit!514)

(assert (=> b!23409 (= e!15204 Unit!521)))

(declare-fun b!23410 () Bool)

(assert (=> b!23410 (= e!15203 (arrayContainsKey!0 lt!8346 (_1!480 lt!8342) #b00000000000000000000000000000000))))

(declare-fun b!23407 () Bool)

(declare-fun e!15205 () Bool)

(declare-fun lt!8355 () LongMapFixedSize!210)

(assert (=> b!23407 (= e!15205 (= (map!410 lt!8355) (ListLongMap!554 Nil!562)))))

(declare-fun d!3999 () Bool)

(assert (=> d!3999 e!15205))

(declare-fun res!14402 () Bool)

(assert (=> d!3999 (=> (not res!14402) (not e!15205))))

(assert (=> d!3999 (= res!14402 (valid!109 lt!8355))))

(assert (=> d!3999 (= lt!8355 lt!8345)))

(declare-fun lt!8359 () Unit!514)

(assert (=> d!3999 (= lt!8359 e!15204)))

(declare-fun c!3021 () Bool)

(assert (=> d!3999 (= c!3021 (not (= (map!410 lt!8345) (ListLongMap!554 Nil!562))))))

(declare-fun lt!8352 () Unit!514)

(declare-fun lt!8341 () Unit!514)

(assert (=> d!3999 (= lt!8352 lt!8341)))

(declare-fun lt!8357 () array!1277)

(declare-fun lt!8340 () (_ BitVec 32))

(declare-datatypes ((List!566 0))(
  ( (Nil!563) (Cons!562 (h!1128 (_ BitVec 64)) (t!3239 List!566)) )
))
(declare-fun lt!8339 () List!566)

(declare-fun arrayNoDuplicates!0 (array!1277 (_ BitVec 32) List!566) Bool)

(assert (=> d!3999 (arrayNoDuplicates!0 lt!8357 lt!8340 lt!8339)))

(declare-fun lemmaArrayNoDuplicatesInAll0Array!0 (array!1277 (_ BitVec 32) (_ BitVec 32) List!566) Unit!514)

(assert (=> d!3999 (= lt!8341 (lemmaArrayNoDuplicatesInAll0Array!0 lt!8357 lt!8340 (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8339))))

(assert (=> d!3999 (= lt!8339 Nil!563)))

(assert (=> d!3999 (= lt!8340 #b00000000000000000000000000000000)))

(assert (=> d!3999 (= lt!8357 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(declare-fun lt!8348 () Unit!514)

(declare-fun lt!8360 () Unit!514)

(assert (=> d!3999 (= lt!8348 lt!8360)))

(declare-fun lt!8353 () (_ BitVec 32))

(declare-fun lt!8350 () array!1277)

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!1277 (_ BitVec 32)) Bool)

(assert (=> d!3999 (arrayForallSeekEntryOrOpenFound!0 lt!8353 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun lemmaArrayForallSeekEntryOrOpenFoundAlwaysTrueFor0Array!0 (array!1277 (_ BitVec 32) (_ BitVec 32)) Unit!514)

(assert (=> d!3999 (= lt!8360 (lemmaArrayForallSeekEntryOrOpenFoundAlwaysTrueFor0Array!0 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8353))))

(assert (=> d!3999 (= lt!8353 #b00000000000000000000000000000000)))

(assert (=> d!3999 (= lt!8350 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(declare-fun lt!8349 () Unit!514)

(declare-fun lt!8343 () Unit!514)

(assert (=> d!3999 (= lt!8349 lt!8343)))

(declare-fun lt!8356 () array!1277)

(declare-fun lt!8358 () (_ BitVec 32))

(declare-fun lt!8338 () (_ BitVec 32))

(declare-fun arrayCountValidKeys!0 (array!1277 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!3999 (= (arrayCountValidKeys!0 lt!8356 lt!8358 lt!8338) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayCountValidKeysOfFilled0ArrayIs0!0 (array!1277 (_ BitVec 32) (_ BitVec 32)) Unit!514)

(assert (=> d!3999 (= lt!8343 (lemmaArrayCountValidKeysOfFilled0ArrayIs0!0 lt!8356 lt!8358 lt!8338))))

(assert (=> d!3999 (= lt!8338 (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))))

(assert (=> d!3999 (= lt!8358 #b00000000000000000000000000000000)))

(assert (=> d!3999 (= lt!8356 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(assert (=> d!3999 (= lt!8345 (LongMapFixedSize!211 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (array!1276 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) #b00000000000000000000000000000000))))

(assert (=> d!3999 (validMask!0 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!3999 (= (getNewLongMapFixedSize!31 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) lt!8355)))

(declare-fun b!23411 () Bool)

(declare-fun res!14403 () Bool)

(assert (=> b!23411 (=> (not res!14403) (not e!15205))))

(assert (=> b!23411 (= res!14403 (= (mask!4730 lt!8355) (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!23412 () Bool)

(assert (=> b!23412 (= e!15203 (ite (= (_1!480 lt!8342) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand lt!8347 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8347 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!3999 c!3021) b!23408))

(assert (= (and d!3999 (not c!3021)) b!23409))

(assert (= (and b!23408 c!3020) b!23410))

(assert (= (and b!23408 (not c!3020)) b!23412))

(assert (= (and d!3999 res!14402) b!23411))

(assert (= (and b!23411 res!14403) b!23407))

(declare-fun b_lambda!1579 () Bool)

(assert (=> (not b_lambda!1579) (not b!23408)))

(declare-fun t!3237 () Bool)

(declare-fun tb!659 () Bool)

(assert (=> (and b!23168 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) t!3237) tb!659))

(declare-fun result!1095 () Bool)

(assert (=> tb!659 (= result!1095 tp_is_empty!1023)))

(assert (=> b!23408 t!3237))

(declare-fun b_and!1487 () Bool)

(assert (= b_and!1483 (and (=> t!3237 result!1095) b_and!1487)))

(declare-fun b_lambda!1581 () Bool)

(assert (=> (not b_lambda!1581) (not d!3999)))

(assert (=> d!3999 t!3237))

(declare-fun b_and!1489 () Bool)

(assert (= b_and!1487 (and (=> t!3237 result!1095) b_and!1489)))

(declare-fun m!16912 () Bool)

(assert (=> b!23408 m!16912))

(declare-fun m!16914 () Bool)

(assert (=> b!23408 m!16914))

(assert (=> b!23408 m!16758))

(declare-fun m!16916 () Bool)

(assert (=> b!23408 m!16916))

(assert (=> b!23408 m!16916))

(declare-fun m!16918 () Bool)

(assert (=> b!23408 m!16918))

(declare-fun m!16920 () Bool)

(assert (=> b!23408 m!16920))

(assert (=> b!23408 m!16916))

(declare-fun m!16922 () Bool)

(assert (=> b!23410 m!16922))

(declare-fun m!16924 () Bool)

(assert (=> b!23407 m!16924))

(assert (=> d!3999 m!16758))

(declare-fun m!16926 () Bool)

(assert (=> d!3999 m!16926))

(declare-fun m!16928 () Bool)

(assert (=> d!3999 m!16928))

(assert (=> d!3999 m!16758))

(declare-fun m!16930 () Bool)

(assert (=> d!3999 m!16930))

(declare-fun m!16932 () Bool)

(assert (=> d!3999 m!16932))

(assert (=> d!3999 m!16758))

(declare-fun m!16934 () Bool)

(assert (=> d!3999 m!16934))

(assert (=> d!3999 m!16916))

(declare-fun m!16936 () Bool)

(assert (=> d!3999 m!16936))

(declare-fun m!16938 () Bool)

(assert (=> d!3999 m!16938))

(declare-fun m!16940 () Bool)

(assert (=> d!3999 m!16940))

(assert (=> d!3999 m!16914))

(assert (=> b!23170 d!3999))

(declare-fun d!4001 () Bool)

(declare-fun e!15211 () Bool)

(assert (=> d!4001 e!15211))

(declare-fun res!14406 () Bool)

(assert (=> d!4001 (=> (not res!14406) (not e!15211))))

(declare-fun lt!8366 () (_ BitVec 32))

(assert (=> d!4001 (= res!14406 (validMask!0 lt!8366))))

(declare-datatypes ((tuple2!948 0))(
  ( (tuple2!949 (_1!481 Unit!514) (_2!481 (_ BitVec 32))) )
))
(declare-fun e!15210 () tuple2!948)

(assert (=> d!4001 (= lt!8366 (_2!481 e!15210))))

(declare-fun c!3024 () Bool)

(declare-fun lt!8365 () tuple2!948)

(assert (=> d!4001 (= c!3024 (and (bvsgt (_2!481 lt!8365) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!481 lt!8365)) (bvsge (bvadd (bvand (bvashr (_2!481 lt!8365) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun Unit!522 () Unit!514)

(declare-fun Unit!523 () Unit!514)

(assert (=> d!4001 (= lt!8365 (ite (and (bvsge (bvmul #b00000000000000000000000000000010 (bvadd (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))))) (mask!4730 (v!1604 (underlying!116 thiss!938)))) (bvsle (bvmul #b00000000000000000000000000000101 (_vacant!150 (v!1604 (underlying!116 thiss!938)))) (mask!4730 (v!1604 (underlying!116 thiss!938))))) (tuple2!949 Unit!522 (bvand (bvadd (bvshl (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001) #b00000000000000000000000000000001) #b00111111111111111111111111111111)) (tuple2!949 Unit!523 (mask!4730 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4001 (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938))))))

(assert (=> d!4001 (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8366)))

(declare-fun b!23421 () Bool)

(declare-fun computeNewMaskWhile!14 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) tuple2!948)

(assert (=> b!23421 (= e!15210 (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) (_2!481 lt!8365)))))

(declare-fun b!23422 () Bool)

(declare-fun Unit!524 () Unit!514)

(assert (=> b!23422 (= e!15210 (tuple2!949 Unit!524 (_2!481 lt!8365)))))

(declare-fun b!23423 () Bool)

(assert (=> b!23423 (= e!15211 (bvsle (_size!150 (v!1604 (underlying!116 thiss!938))) (bvadd lt!8366 #b00000000000000000000000000000001)))))

(assert (= (and d!4001 c!3024) b!23421))

(assert (= (and d!4001 (not c!3024)) b!23422))

(assert (= (and d!4001 res!14406) b!23423))

(declare-fun m!16942 () Bool)

(assert (=> d!4001 m!16942))

(assert (=> d!4001 m!16770))

(declare-fun m!16944 () Bool)

(assert (=> b!23421 m!16944))

(assert (=> b!23170 d!4001))

(declare-fun condMapEmpty!1031 () Bool)

(declare-fun mapDefault!1031 () ValueCell!312)

(assert (=> mapNonEmpty!1025 (= condMapEmpty!1031 (= mapRest!1025 ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1031)))))

(declare-fun e!15217 () Bool)

(declare-fun mapRes!1031 () Bool)

(assert (=> mapNonEmpty!1025 (= tp!3523 (and e!15217 mapRes!1031))))

(declare-fun mapNonEmpty!1031 () Bool)

(declare-fun tp!3533 () Bool)

(declare-fun e!15216 () Bool)

(assert (=> mapNonEmpty!1031 (= mapRes!1031 (and tp!3533 e!15216))))

(declare-fun mapKey!1031 () (_ BitVec 32))

(declare-fun mapRest!1031 () (Array (_ BitVec 32) ValueCell!312))

(declare-fun mapValue!1031 () ValueCell!312)

(assert (=> mapNonEmpty!1031 (= mapRest!1025 (store mapRest!1031 mapKey!1031 mapValue!1031))))

(declare-fun mapIsEmpty!1031 () Bool)

(assert (=> mapIsEmpty!1031 mapRes!1031))

(declare-fun b!23431 () Bool)

(assert (=> b!23431 (= e!15217 tp_is_empty!1023)))

(declare-fun b!23430 () Bool)

(assert (=> b!23430 (= e!15216 tp_is_empty!1023)))

(assert (= (and mapNonEmpty!1025 condMapEmpty!1031) mapIsEmpty!1031))

(assert (= (and mapNonEmpty!1025 (not condMapEmpty!1031)) mapNonEmpty!1031))

(assert (= (and mapNonEmpty!1031 ((_ is ValueCellFull!312) mapValue!1031)) b!23430))

(assert (= (and mapNonEmpty!1025 ((_ is ValueCellFull!312) mapDefault!1031)) b!23431))

(declare-fun m!16946 () Bool)

(assert (=> mapNonEmpty!1031 m!16946))

(declare-fun b_lambda!1583 () Bool)

(assert (= b_lambda!1581 (or (and b!23168 b_free!759) b_lambda!1583)))

(declare-fun b_lambda!1585 () Bool)

(assert (= b_lambda!1579 (or (and b!23168 b_free!759) b_lambda!1585)))

(check-sat (not bm!1933) (not b_lambda!1583) (not bm!1937) (not bm!1926) (not d!3987) tp_is_empty!1023 (not b!23421) (not bm!1909) (not bm!1941) (not b!23334) (not b!23376) b_and!1489 (not b!23386) (not b_lambda!1585) (not b!23371) (not bm!1929) (not b_next!759) (not b!23313) (not bm!1918) (not b!23407) (not bm!1942) (not bm!1923) (not b!23336) (not bm!1912) (not bm!1910) (not b!23347) (not bm!1917) (not bm!1951) (not bm!1924) (not b!23391) (not bm!1914) (not b!23410) (not b!23324) (not b!23329) (not b!23344) (not b!23389) (not b!23408) (not bm!1936) (not bm!1927) (not b!23366) (not b!23378) (not d!3999) (not bm!1938) (not bm!1948) (not b!23355) (not d!4001) (not b!23349) (not bm!1934) (not d!3995) (not bm!1913) (not bm!1947) (not bm!1950) (not d!3993) (not mapNonEmpty!1031) (not bm!1953))
(check-sat b_and!1489 (not b_next!759))
(get-model)

(declare-fun d!4003 () Bool)

(assert (=> d!4003 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8369 () Unit!514)

(declare-fun choose!206 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!514)

(assert (=> d!4003 (= lt!8369 (choose!206 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4003 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4003 (= (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8369)))

(declare-fun bs!949 () Bool)

(assert (= bs!949 d!4003))

(declare-fun m!16948 () Bool)

(assert (=> bs!949 m!16948))

(assert (=> bs!949 m!16828))

(declare-fun m!16950 () Bool)

(assert (=> bs!949 m!16950))

(assert (=> bs!949 m!16828))

(declare-fun m!16952 () Bool)

(assert (=> bs!949 m!16952))

(declare-fun m!16954 () Bool)

(assert (=> bs!949 m!16954))

(assert (=> b!23313 d!4003))

(declare-fun d!4005 () Bool)

(declare-fun res!14411 () Bool)

(declare-fun e!15222 () Bool)

(assert (=> d!4005 (=> res!14411 e!15222)))

(assert (=> d!4005 (= res!14411 (= (select (arr!604 lt!8346) #b00000000000000000000000000000000) (_1!480 lt!8342)))))

(assert (=> d!4005 (= (arrayContainsKey!0 lt!8346 (_1!480 lt!8342) #b00000000000000000000000000000000) e!15222)))

(declare-fun b!23436 () Bool)

(declare-fun e!15223 () Bool)

(assert (=> b!23436 (= e!15222 e!15223)))

(declare-fun res!14412 () Bool)

(assert (=> b!23436 (=> (not res!14412) (not e!15223))))

(assert (=> b!23436 (= res!14412 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 lt!8346)))))

(declare-fun b!23437 () Bool)

(assert (=> b!23437 (= e!15223 (arrayContainsKey!0 lt!8346 (_1!480 lt!8342) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4005 (not res!14411)) b!23436))

(assert (= (and b!23436 res!14412) b!23437))

(declare-fun m!16956 () Bool)

(assert (=> d!4005 m!16956))

(declare-fun m!16958 () Bool)

(assert (=> b!23437 m!16958))

(assert (=> b!23410 d!4005))

(declare-fun b!23450 () Bool)

(declare-fun e!15231 () SeekEntryResult!59)

(declare-fun lt!8376 () SeekEntryResult!59)

(assert (=> b!23450 (= e!15231 (MissingZero!59 (index!2359 lt!8376)))))

(declare-fun b!23451 () Bool)

(declare-fun e!15232 () SeekEntryResult!59)

(assert (=> b!23451 (= e!15232 Undefined!59)))

(declare-fun b!23453 () Bool)

(declare-fun e!15230 () SeekEntryResult!59)

(assert (=> b!23453 (= e!15230 (Found!59 (index!2359 lt!8376)))))

(declare-fun b!23452 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!1277 (_ BitVec 32)) SeekEntryResult!59)

(assert (=> b!23452 (= e!15231 (seekKeyOrZeroReturnVacant!0 (x!5581 lt!8376) (index!2359 lt!8376) (index!2359 lt!8376) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8377 () SeekEntryResult!59)

(declare-fun d!4007 () Bool)

(assert (=> d!4007 (and (or ((_ is Undefined!59) lt!8377) (not ((_ is Found!59) lt!8377)) (and (bvsge (index!2358 lt!8377) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8377) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (or ((_ is Undefined!59) lt!8377) ((_ is Found!59) lt!8377) (not ((_ is MissingZero!59) lt!8377)) (and (bvsge (index!2357 lt!8377) #b00000000000000000000000000000000) (bvslt (index!2357 lt!8377) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (or ((_ is Undefined!59) lt!8377) ((_ is Found!59) lt!8377) ((_ is MissingZero!59) lt!8377) (not ((_ is MissingVacant!59) lt!8377)) (and (bvsge (index!2360 lt!8377) #b00000000000000000000000000000000) (bvslt (index!2360 lt!8377) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (or ((_ is Undefined!59) lt!8377) (ite ((_ is Found!59) lt!8377) (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8377)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (ite ((_ is MissingZero!59) lt!8377) (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2357 lt!8377)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!59) lt!8377) (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2360 lt!8377)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!4007 (= lt!8377 e!15232)))

(declare-fun c!3033 () Bool)

(assert (=> d!4007 (= c!3033 (and ((_ is Intermediate!59) lt!8376) (undefined!871 lt!8376)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!1277 (_ BitVec 32)) SeekEntryResult!59)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!4007 (= lt!8376 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4007 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4007 (= (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8377)))

(declare-fun b!23454 () Bool)

(declare-fun c!3031 () Bool)

(declare-fun lt!8378 () (_ BitVec 64))

(assert (=> b!23454 (= c!3031 (= lt!8378 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23454 (= e!15230 e!15231)))

(declare-fun b!23455 () Bool)

(assert (=> b!23455 (= e!15232 e!15230)))

(assert (=> b!23455 (= lt!8378 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2359 lt!8376)))))

(declare-fun c!3032 () Bool)

(assert (=> b!23455 (= c!3032 (= lt!8378 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4007 c!3033) b!23451))

(assert (= (and d!4007 (not c!3033)) b!23455))

(assert (= (and b!23455 c!3032) b!23453))

(assert (= (and b!23455 (not c!3032)) b!23454))

(assert (= (and b!23454 c!3031) b!23450))

(assert (= (and b!23454 (not c!3031)) b!23452))

(declare-fun m!16960 () Bool)

(assert (=> b!23452 m!16960))

(declare-fun m!16962 () Bool)

(assert (=> d!4007 m!16962))

(declare-fun m!16964 () Bool)

(assert (=> d!4007 m!16964))

(declare-fun m!16966 () Bool)

(assert (=> d!4007 m!16966))

(declare-fun m!16968 () Bool)

(assert (=> d!4007 m!16968))

(declare-fun m!16970 () Bool)

(assert (=> d!4007 m!16970))

(assert (=> d!4007 m!16968))

(assert (=> d!4007 m!16948))

(declare-fun m!16972 () Bool)

(assert (=> b!23455 m!16972))

(assert (=> bm!1909 d!4007))

(declare-fun d!4009 () Bool)

(declare-fun e!15237 () Bool)

(assert (=> d!4009 e!15237))

(declare-fun res!14415 () Bool)

(assert (=> d!4009 (=> res!14415 e!15237)))

(declare-fun lt!8388 () Bool)

(assert (=> d!4009 (= res!14415 (not lt!8388))))

(declare-fun lt!8389 () Bool)

(assert (=> d!4009 (= lt!8388 lt!8389)))

(declare-fun lt!8387 () Unit!514)

(declare-fun e!15238 () Unit!514)

(assert (=> d!4009 (= lt!8387 e!15238)))

(declare-fun c!3036 () Bool)

(assert (=> d!4009 (= c!3036 lt!8389)))

(declare-fun containsKey!25 (List!565 (_ BitVec 64)) Bool)

(assert (=> d!4009 (= lt!8389 (containsKey!25 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4009 (= (contains!220 e!15191 #b0000000000000000000000000000000000000000000000000000000000000000) lt!8388)))

(declare-fun b!23462 () Bool)

(declare-fun lt!8390 () Unit!514)

(assert (=> b!23462 (= e!15238 lt!8390)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!22 (List!565 (_ BitVec 64)) Unit!514)

(assert (=> b!23462 (= lt!8390 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-datatypes ((Option!67 0))(
  ( (Some!66 (v!1611 V!1189)) (None!65) )
))
(declare-fun isDefined!23 (Option!67) Bool)

(declare-fun getValueByKey!61 (List!565 (_ BitVec 64)) Option!67)

(assert (=> b!23462 (isDefined!23 (getValueByKey!61 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23463 () Bool)

(declare-fun Unit!525 () Unit!514)

(assert (=> b!23463 (= e!15238 Unit!525)))

(declare-fun b!23464 () Bool)

(assert (=> b!23464 (= e!15237 (isDefined!23 (getValueByKey!61 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4009 c!3036) b!23462))

(assert (= (and d!4009 (not c!3036)) b!23463))

(assert (= (and d!4009 (not res!14415)) b!23464))

(declare-fun m!16974 () Bool)

(assert (=> d!4009 m!16974))

(declare-fun m!16976 () Bool)

(assert (=> b!23462 m!16976))

(declare-fun m!16978 () Bool)

(assert (=> b!23462 m!16978))

(assert (=> b!23462 m!16978))

(declare-fun m!16980 () Bool)

(assert (=> b!23462 m!16980))

(assert (=> b!23464 m!16978))

(assert (=> b!23464 m!16978))

(assert (=> b!23464 m!16980))

(assert (=> bm!1950 d!4009))

(declare-fun d!4011 () Bool)

(assert (=> d!4011 (= (inRange!0 (ite c!2993 (ite c!2989 (index!2358 lt!8243) (ite c!3000 (index!2357 lt!8248) (index!2360 lt!8248))) (ite c!2998 (index!2358 lt!8256) (ite c!2995 (index!2357 lt!8250) (index!2360 lt!8250)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (and (bvsge (ite c!2993 (ite c!2989 (index!2358 lt!8243) (ite c!3000 (index!2357 lt!8248) (index!2360 lt!8248))) (ite c!2998 (index!2358 lt!8256) (ite c!2995 (index!2357 lt!8250) (index!2360 lt!8250)))) #b00000000000000000000000000000000) (bvslt (ite c!2993 (ite c!2989 (index!2358 lt!8243) (ite c!3000 (index!2357 lt!8248) (index!2360 lt!8248))) (ite c!2998 (index!2358 lt!8256) (ite c!2995 (index!2357 lt!8250) (index!2360 lt!8250)))) (bvadd (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001))))))

(assert (=> bm!1924 d!4011))

(declare-fun b!23507 () Bool)

(declare-fun e!15269 () ListLongMap!553)

(declare-fun call!1979 () ListLongMap!553)

(assert (=> b!23507 (= e!15269 call!1979)))

(declare-fun b!23508 () Bool)

(declare-fun res!14442 () Bool)

(declare-fun e!15272 () Bool)

(assert (=> b!23508 (=> (not res!14442) (not e!15272))))

(declare-fun e!15267 () Bool)

(assert (=> b!23508 (= res!14442 e!15267)))

(declare-fun c!3049 () Bool)

(assert (=> b!23508 (= c!3049 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23509 () Bool)

(declare-fun e!15266 () Bool)

(declare-fun e!15274 () Bool)

(assert (=> b!23509 (= e!15266 e!15274)))

(declare-fun res!14438 () Bool)

(assert (=> b!23509 (=> (not res!14438) (not e!15274))))

(declare-fun lt!8444 () ListLongMap!553)

(assert (=> b!23509 (= res!14438 (contains!220 lt!8444 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!23509 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23510 () Bool)

(declare-fun e!15265 () Bool)

(declare-fun e!15273 () Bool)

(assert (=> b!23510 (= e!15265 e!15273)))

(declare-fun res!14441 () Bool)

(declare-fun call!1975 () Bool)

(assert (=> b!23510 (= res!14441 call!1975)))

(assert (=> b!23510 (=> (not res!14441) (not e!15273))))

(declare-fun b!23511 () Bool)

(declare-fun e!15277 () Unit!514)

(declare-fun lt!8435 () Unit!514)

(assert (=> b!23511 (= e!15277 lt!8435)))

(declare-fun lt!8440 () ListLongMap!553)

(declare-fun getCurrentListMapNoExtraKeys!15 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) ListLongMap!553)

(assert (=> b!23511 (= lt!8440 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8451 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8451 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8452 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8452 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8455 () Unit!514)

(declare-fun addStillContains!14 (ListLongMap!553 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!514)

(assert (=> b!23511 (= lt!8455 (addStillContains!14 lt!8440 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8452))))

(assert (=> b!23511 (contains!220 (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8452)))

(declare-fun lt!8449 () Unit!514)

(assert (=> b!23511 (= lt!8449 lt!8455)))

(declare-fun lt!8442 () ListLongMap!553)

(assert (=> b!23511 (= lt!8442 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8438 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8438 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8445 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8445 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8448 () Unit!514)

(declare-fun addApplyDifferent!14 (ListLongMap!553 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!514)

(assert (=> b!23511 (= lt!8448 (addApplyDifferent!14 lt!8442 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8445))))

(declare-fun apply!29 (ListLongMap!553 (_ BitVec 64)) V!1189)

(assert (=> b!23511 (= (apply!29 (+!45 lt!8442 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8445) (apply!29 lt!8442 lt!8445))))

(declare-fun lt!8439 () Unit!514)

(assert (=> b!23511 (= lt!8439 lt!8448)))

(declare-fun lt!8443 () ListLongMap!553)

(assert (=> b!23511 (= lt!8443 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8446 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8446 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8441 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8441 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8447 () Unit!514)

(assert (=> b!23511 (= lt!8447 (addApplyDifferent!14 lt!8443 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8441))))

(assert (=> b!23511 (= (apply!29 (+!45 lt!8443 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8441) (apply!29 lt!8443 lt!8441))))

(declare-fun lt!8456 () Unit!514)

(assert (=> b!23511 (= lt!8456 lt!8447)))

(declare-fun lt!8450 () ListLongMap!553)

(assert (=> b!23511 (= lt!8450 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8436 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8436 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8454 () (_ BitVec 64))

(assert (=> b!23511 (= lt!8454 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!23511 (= lt!8435 (addApplyDifferent!14 lt!8450 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8454))))

(assert (=> b!23511 (= (apply!29 (+!45 lt!8450 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8454) (apply!29 lt!8450 lt!8454))))

(declare-fun bm!1971 () Bool)

(declare-fun call!1978 () ListLongMap!553)

(assert (=> bm!1971 (= call!1978 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23512 () Bool)

(declare-fun call!1976 () Bool)

(assert (=> b!23512 (= e!15267 (not call!1976))))

(declare-fun bm!1972 () Bool)

(declare-fun call!1973 () ListLongMap!553)

(declare-fun call!1977 () ListLongMap!553)

(assert (=> bm!1972 (= call!1973 call!1977)))

(declare-fun c!3053 () Bool)

(declare-fun call!1974 () ListLongMap!553)

(declare-fun c!3052 () Bool)

(declare-fun bm!1973 () Bool)

(assert (=> bm!1973 (= call!1977 (+!45 (ite c!3052 call!1978 (ite c!3053 call!1974 call!1979)) (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!23513 () Bool)

(declare-fun Unit!526 () Unit!514)

(assert (=> b!23513 (= e!15277 Unit!526)))

(declare-fun b!23514 () Bool)

(assert (=> b!23514 (= e!15265 (not call!1975))))

(declare-fun c!3050 () Bool)

(declare-fun b!23515 () Bool)

(assert (=> b!23515 (= c!3050 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15275 () ListLongMap!553)

(assert (=> b!23515 (= e!15275 e!15269)))

(declare-fun b!23516 () Bool)

(declare-fun e!15271 () ListLongMap!553)

(assert (=> b!23516 (= e!15271 e!15275)))

(assert (=> b!23516 (= c!3053 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!1974 () Bool)

(assert (=> bm!1974 (= call!1979 call!1974)))

(declare-fun b!23517 () Bool)

(assert (=> b!23517 (= e!15273 (= (apply!29 lt!8444 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!1975 () Bool)

(assert (=> bm!1975 (= call!1974 call!1978)))

(declare-fun b!23518 () Bool)

(declare-fun e!15276 () Bool)

(assert (=> b!23518 (= e!15267 e!15276)))

(declare-fun res!14440 () Bool)

(assert (=> b!23518 (= res!14440 call!1976)))

(assert (=> b!23518 (=> (not res!14440) (not e!15276))))

(declare-fun d!4013 () Bool)

(assert (=> d!4013 e!15272))

(declare-fun res!14436 () Bool)

(assert (=> d!4013 (=> (not res!14436) (not e!15272))))

(assert (=> d!4013 (= res!14436 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!8453 () ListLongMap!553)

(assert (=> d!4013 (= lt!8444 lt!8453)))

(declare-fun lt!8437 () Unit!514)

(assert (=> d!4013 (= lt!8437 e!15277)))

(declare-fun c!3054 () Bool)

(declare-fun e!15270 () Bool)

(assert (=> d!4013 (= c!3054 e!15270)))

(declare-fun res!14437 () Bool)

(assert (=> d!4013 (=> (not res!14437) (not e!15270))))

(assert (=> d!4013 (= res!14437 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4013 (= lt!8453 e!15271)))

(assert (=> d!4013 (= c!3052 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4013 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4013 (= (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8444)))

(declare-fun bm!1970 () Bool)

(assert (=> bm!1970 (= call!1976 (contains!220 lt!8444 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1976 () Bool)

(assert (=> bm!1976 (= call!1975 (contains!220 lt!8444 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23519 () Bool)

(assert (=> b!23519 (= e!15276 (= (apply!29 lt!8444 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23520 () Bool)

(declare-fun res!14435 () Bool)

(assert (=> b!23520 (=> (not res!14435) (not e!15272))))

(assert (=> b!23520 (= res!14435 e!15266)))

(declare-fun res!14434 () Bool)

(assert (=> b!23520 (=> res!14434 e!15266)))

(declare-fun e!15268 () Bool)

(assert (=> b!23520 (= res!14434 (not e!15268))))

(declare-fun res!14439 () Bool)

(assert (=> b!23520 (=> (not res!14439) (not e!15268))))

(assert (=> b!23520 (= res!14439 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23521 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!23521 (= e!15270 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!23522 () Bool)

(assert (=> b!23522 (= e!15272 e!15265)))

(declare-fun c!3051 () Bool)

(assert (=> b!23522 (= c!3051 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23523 () Bool)

(declare-fun get!390 (ValueCell!312 V!1189) V!1189)

(assert (=> b!23523 (= e!15274 (= (apply!29 lt!8444 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23523 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261))))))

(assert (=> b!23523 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23524 () Bool)

(assert (=> b!23524 (= e!15269 call!1973)))

(declare-fun b!23525 () Bool)

(assert (=> b!23525 (= e!15271 (+!45 call!1977 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23526 () Bool)

(assert (=> b!23526 (= e!15275 call!1973)))

(declare-fun b!23527 () Bool)

(assert (=> b!23527 (= e!15268 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4013 c!3052) b!23525))

(assert (= (and d!4013 (not c!3052)) b!23516))

(assert (= (and b!23516 c!3053) b!23526))

(assert (= (and b!23516 (not c!3053)) b!23515))

(assert (= (and b!23515 c!3050) b!23524))

(assert (= (and b!23515 (not c!3050)) b!23507))

(assert (= (or b!23524 b!23507) bm!1974))

(assert (= (or b!23526 bm!1974) bm!1975))

(assert (= (or b!23526 b!23524) bm!1972))

(assert (= (or b!23525 bm!1975) bm!1971))

(assert (= (or b!23525 bm!1972) bm!1973))

(assert (= (and d!4013 res!14437) b!23521))

(assert (= (and d!4013 c!3054) b!23511))

(assert (= (and d!4013 (not c!3054)) b!23513))

(assert (= (and d!4013 res!14436) b!23520))

(assert (= (and b!23520 res!14439) b!23527))

(assert (= (and b!23520 (not res!14434)) b!23509))

(assert (= (and b!23509 res!14438) b!23523))

(assert (= (and b!23520 res!14435) b!23508))

(assert (= (and b!23508 c!3049) b!23518))

(assert (= (and b!23508 (not c!3049)) b!23512))

(assert (= (and b!23518 res!14440) b!23519))

(assert (= (or b!23518 b!23512) bm!1970))

(assert (= (and b!23508 res!14442) b!23522))

(assert (= (and b!23522 c!3051) b!23510))

(assert (= (and b!23522 (not c!3051)) b!23514))

(assert (= (and b!23510 res!14441) b!23517))

(assert (= (or b!23510 b!23514) bm!1976))

(declare-fun b_lambda!1587 () Bool)

(assert (=> (not b_lambda!1587) (not b!23523)))

(declare-fun tb!661 () Bool)

(declare-fun t!3241 () Bool)

(assert (=> (and b!23168 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) t!3241) tb!661))

(declare-fun result!1101 () Bool)

(assert (=> tb!661 (= result!1101 tp_is_empty!1023)))

(assert (=> b!23523 t!3241))

(declare-fun b_and!1491 () Bool)

(assert (= b_and!1489 (and (=> t!3241 result!1101) b_and!1491)))

(declare-fun m!16982 () Bool)

(assert (=> bm!1970 m!16982))

(declare-fun m!16984 () Bool)

(assert (=> b!23517 m!16984))

(declare-fun m!16986 () Bool)

(assert (=> bm!1976 m!16986))

(declare-fun m!16988 () Bool)

(assert (=> bm!1973 m!16988))

(declare-fun m!16990 () Bool)

(assert (=> b!23525 m!16990))

(declare-fun m!16992 () Bool)

(assert (=> b!23509 m!16992))

(assert (=> b!23509 m!16992))

(declare-fun m!16994 () Bool)

(assert (=> b!23509 m!16994))

(assert (=> b!23527 m!16992))

(assert (=> b!23527 m!16992))

(declare-fun m!16996 () Bool)

(assert (=> b!23527 m!16996))

(assert (=> b!23521 m!16992))

(assert (=> b!23521 m!16992))

(assert (=> b!23521 m!16996))

(declare-fun m!16998 () Bool)

(assert (=> bm!1971 m!16998))

(declare-fun m!17000 () Bool)

(assert (=> b!23511 m!17000))

(declare-fun m!17002 () Bool)

(assert (=> b!23511 m!17002))

(declare-fun m!17004 () Bool)

(assert (=> b!23511 m!17004))

(declare-fun m!17006 () Bool)

(assert (=> b!23511 m!17006))

(assert (=> b!23511 m!17004))

(declare-fun m!17008 () Bool)

(assert (=> b!23511 m!17008))

(declare-fun m!17010 () Bool)

(assert (=> b!23511 m!17010))

(declare-fun m!17012 () Bool)

(assert (=> b!23511 m!17012))

(assert (=> b!23511 m!16998))

(declare-fun m!17014 () Bool)

(assert (=> b!23511 m!17014))

(declare-fun m!17016 () Bool)

(assert (=> b!23511 m!17016))

(declare-fun m!17018 () Bool)

(assert (=> b!23511 m!17018))

(declare-fun m!17020 () Bool)

(assert (=> b!23511 m!17020))

(declare-fun m!17022 () Bool)

(assert (=> b!23511 m!17022))

(assert (=> b!23511 m!17022))

(declare-fun m!17024 () Bool)

(assert (=> b!23511 m!17024))

(assert (=> b!23511 m!17012))

(declare-fun m!17026 () Bool)

(assert (=> b!23511 m!17026))

(assert (=> b!23511 m!16992))

(assert (=> b!23511 m!17020))

(declare-fun m!17028 () Bool)

(assert (=> b!23511 m!17028))

(declare-fun m!17030 () Bool)

(assert (=> b!23519 m!17030))

(declare-fun m!17032 () Bool)

(assert (=> b!23523 m!17032))

(declare-fun m!17034 () Bool)

(assert (=> b!23523 m!17034))

(assert (=> b!23523 m!17032))

(declare-fun m!17036 () Bool)

(assert (=> b!23523 m!17036))

(assert (=> b!23523 m!16992))

(declare-fun m!17038 () Bool)

(assert (=> b!23523 m!17038))

(assert (=> b!23523 m!17034))

(assert (=> b!23523 m!16992))

(assert (=> d!4013 m!16948))

(assert (=> bm!1914 d!4013))

(declare-fun d!4015 () Bool)

(declare-fun e!15280 () Bool)

(assert (=> d!4015 e!15280))

(declare-fun res!14447 () Bool)

(assert (=> d!4015 (=> (not res!14447) (not e!15280))))

(declare-fun lt!8465 () ListLongMap!553)

(assert (=> d!4015 (= res!14447 (contains!220 lt!8465 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!8468 () List!565)

(assert (=> d!4015 (= lt!8465 (ListLongMap!554 lt!8468))))

(declare-fun lt!8466 () Unit!514)

(declare-fun lt!8467 () Unit!514)

(assert (=> d!4015 (= lt!8466 lt!8467)))

(assert (=> d!4015 (= (getValueByKey!61 lt!8468 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!18 (List!565 (_ BitVec 64) V!1189) Unit!514)

(assert (=> d!4015 (= lt!8467 (lemmaContainsTupThenGetReturnValue!18 lt!8468 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun insertStrictlySorted!18 (List!565 (_ BitVec 64) V!1189) List!565)

(assert (=> d!4015 (= lt!8468 (insertStrictlySorted!18 (toList!292 e!15175) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4015 (= (+!45 e!15175 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!8465)))

(declare-fun b!23532 () Bool)

(declare-fun res!14448 () Bool)

(assert (=> b!23532 (=> (not res!14448) (not e!15280))))

(assert (=> b!23532 (= res!14448 (= (getValueByKey!61 (toList!292 lt!8465) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!23533 () Bool)

(declare-fun contains!221 (List!565 tuple2!946) Bool)

(assert (=> b!23533 (= e!15280 (contains!221 (toList!292 lt!8465) (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4015 res!14447) b!23532))

(assert (= (and b!23532 res!14448) b!23533))

(declare-fun m!17040 () Bool)

(assert (=> d!4015 m!17040))

(declare-fun m!17042 () Bool)

(assert (=> d!4015 m!17042))

(declare-fun m!17044 () Bool)

(assert (=> d!4015 m!17044))

(declare-fun m!17046 () Bool)

(assert (=> d!4015 m!17046))

(declare-fun m!17048 () Bool)

(assert (=> b!23532 m!17048))

(declare-fun m!17050 () Bool)

(assert (=> b!23533 m!17050))

(assert (=> bm!1942 d!4015))

(declare-fun d!4017 () Bool)

(assert (=> d!4017 (= (head!830 (toList!292 (map!410 lt!8345))) (h!1127 (toList!292 (map!410 lt!8345))))))

(assert (=> b!23408 d!4017))

(declare-fun d!4019 () Bool)

(assert (=> d!4019 (= (map!410 lt!8345) (getCurrentListMap!121 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun bs!950 () Bool)

(assert (= bs!950 d!4019))

(declare-fun m!17052 () Bool)

(assert (=> bs!950 m!17052))

(assert (=> b!23408 d!4019))

(declare-fun d!4021 () Bool)

(declare-fun e!15283 () Bool)

(assert (=> d!4021 e!15283))

(declare-fun c!3057 () Bool)

(assert (=> d!4021 (= c!3057 (and (not (= (_1!480 lt!8342) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (_1!480 lt!8342) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!8471 () Unit!514)

(declare-fun choose!207 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!514)

(assert (=> d!4021 (= lt!8471 (choose!207 lt!8346 (array!1276 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8347 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!480 lt!8342) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4021 (validMask!0 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4021 (= (lemmaKeyInListMapIsInArray!93 lt!8346 (array!1276 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8347 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!480 lt!8342) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) lt!8471)))

(declare-fun b!23538 () Bool)

(assert (=> b!23538 (= e!15283 (arrayContainsKey!0 lt!8346 (_1!480 lt!8342) #b00000000000000000000000000000000))))

(declare-fun b!23539 () Bool)

(assert (=> b!23539 (= e!15283 (ite (= (_1!480 lt!8342) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand lt!8347 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8347 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!4021 c!3057) b!23538))

(assert (= (and d!4021 (not c!3057)) b!23539))

(assert (=> d!4021 m!16758))

(assert (=> d!4021 m!16916))

(assert (=> d!4021 m!16916))

(declare-fun m!17054 () Bool)

(assert (=> d!4021 m!17054))

(assert (=> d!4021 m!16758))

(assert (=> d!4021 m!16930))

(assert (=> b!23538 m!16922))

(assert (=> b!23408 d!4021))

(declare-fun d!4023 () Bool)

(declare-fun lt!8474 () (_ BitVec 32))

(assert (=> d!4023 (and (or (bvslt lt!8474 #b00000000000000000000000000000000) (bvsge lt!8474 (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (and (bvsge lt!8474 #b00000000000000000000000000000000) (bvslt lt!8474 (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))) (bvsge lt!8474 #b00000000000000000000000000000000) (bvslt lt!8474 (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (= (select (arr!604 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) lt!8474) (_1!480 lt!8342)))))

(declare-fun e!15286 () (_ BitVec 32))

(assert (=> d!4023 (= lt!8474 e!15286)))

(declare-fun c!3060 () Bool)

(assert (=> d!4023 (= c!3060 (= (select (arr!604 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) #b00000000000000000000000000000000) (_1!480 lt!8342)))))

(assert (=> d!4023 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (bvslt (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) #b01111111111111111111111111111111))))

(assert (=> d!4023 (= (arrayScanForKey!0 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!480 lt!8342) #b00000000000000000000000000000000) lt!8474)))

(declare-fun b!23544 () Bool)

(assert (=> b!23544 (= e!15286 #b00000000000000000000000000000000)))

(declare-fun b!23545 () Bool)

(assert (=> b!23545 (= e!15286 (arrayScanForKey!0 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!480 lt!8342) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4023 c!3060) b!23544))

(assert (= (and d!4023 (not c!3060)) b!23545))

(declare-fun m!17056 () Bool)

(assert (=> d!4023 m!17056))

(declare-fun m!17058 () Bool)

(assert (=> d!4023 m!17058))

(declare-fun m!17060 () Bool)

(assert (=> b!23545 m!17060))

(assert (=> b!23408 d!4023))

(declare-fun d!4025 () Bool)

(declare-fun e!15287 () Bool)

(assert (=> d!4025 e!15287))

(declare-fun res!14449 () Bool)

(assert (=> d!4025 (=> res!14449 e!15287)))

(declare-fun lt!8476 () Bool)

(assert (=> d!4025 (= res!14449 (not lt!8476))))

(declare-fun lt!8477 () Bool)

(assert (=> d!4025 (= lt!8476 lt!8477)))

(declare-fun lt!8475 () Unit!514)

(declare-fun e!15288 () Unit!514)

(assert (=> d!4025 (= lt!8475 e!15288)))

(declare-fun c!3061 () Bool)

(assert (=> d!4025 (= c!3061 lt!8477)))

(assert (=> d!4025 (= lt!8477 (containsKey!25 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(assert (=> d!4025 (= (contains!220 call!1946 (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))) lt!8476)))

(declare-fun b!23546 () Bool)

(declare-fun lt!8478 () Unit!514)

(assert (=> b!23546 (= e!15288 lt!8478)))

(assert (=> b!23546 (= lt!8478 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(assert (=> b!23546 (isDefined!23 (getValueByKey!61 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(declare-fun b!23547 () Bool)

(declare-fun Unit!527 () Unit!514)

(assert (=> b!23547 (= e!15288 Unit!527)))

(declare-fun b!23548 () Bool)

(assert (=> b!23548 (= e!15287 (isDefined!23 (getValueByKey!61 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))))))

(assert (= (and d!4025 c!3061) b!23546))

(assert (= (and d!4025 (not c!3061)) b!23547))

(assert (= (and d!4025 (not res!14449)) b!23548))

(assert (=> d!4025 m!16874))

(declare-fun m!17062 () Bool)

(assert (=> d!4025 m!17062))

(assert (=> b!23546 m!16874))

(declare-fun m!17064 () Bool)

(assert (=> b!23546 m!17064))

(assert (=> b!23546 m!16874))

(declare-fun m!17066 () Bool)

(assert (=> b!23546 m!17066))

(assert (=> b!23546 m!17066))

(declare-fun m!17068 () Bool)

(assert (=> b!23546 m!17068))

(assert (=> b!23548 m!16874))

(assert (=> b!23548 m!17066))

(assert (=> b!23548 m!17066))

(assert (=> b!23548 m!17068))

(assert (=> b!23386 d!4025))

(declare-fun d!4027 () Bool)

(declare-fun e!15291 () Bool)

(assert (=> d!4027 e!15291))

(declare-fun res!14452 () Bool)

(assert (=> d!4027 (=> (not res!14452) (not e!15291))))

(assert (=> d!4027 (= res!14452 (and (bvsge (index!2358 lt!8282) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8282) (size!700 (_keys!3164 lt!8162)))))))

(declare-fun lt!8481 () Unit!514)

(declare-fun choose!208 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) Unit!514)

(assert (=> d!4027 (= lt!8481 (choose!208 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) (defaultEntry!1743 lt!8162)))))

(assert (=> d!4027 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4027 (= (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) (defaultEntry!1743 lt!8162)) lt!8481)))

(declare-fun b!23551 () Bool)

(assert (=> b!23551 (= e!15291 (contains!220 (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(assert (= (and d!4027 res!14452) b!23551))

(declare-fun m!17070 () Bool)

(assert (=> d!4027 m!17070))

(declare-fun m!17072 () Bool)

(assert (=> d!4027 m!17072))

(declare-fun m!17074 () Bool)

(assert (=> b!23551 m!17074))

(assert (=> b!23551 m!16874))

(assert (=> b!23551 m!17074))

(assert (=> b!23551 m!16874))

(declare-fun m!17076 () Bool)

(assert (=> b!23551 m!17076))

(assert (=> b!23386 d!4027))

(declare-fun d!4029 () Bool)

(declare-fun e!15294 () Bool)

(assert (=> d!4029 e!15294))

(declare-fun res!14455 () Bool)

(assert (=> d!4029 (=> (not res!14455) (not e!15294))))

(assert (=> d!4029 (= res!14455 (and (bvsge (index!2358 lt!8282) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8282) (size!699 (_values!1729 lt!8162)))))))

(declare-fun lt!8484 () Unit!514)

(declare-fun choose!209 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!514)

(assert (=> d!4029 (= lt!8484 (choose!209 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)))))

(assert (=> d!4029 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4029 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)) lt!8484)))

(declare-fun b!23554 () Bool)

(assert (=> b!23554 (= e!15294 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))))))

(assert (= (and d!4029 res!14455) b!23554))

(declare-fun m!17078 () Bool)

(assert (=> d!4029 m!17078))

(assert (=> d!4029 m!17072))

(assert (=> b!23554 m!16888))

(assert (=> b!23554 m!16888))

(declare-fun m!17080 () Bool)

(assert (=> b!23554 m!17080))

(assert (=> b!23554 m!16852))

(declare-fun m!17082 () Bool)

(assert (=> b!23554 m!17082))

(assert (=> b!23386 d!4029))

(declare-fun d!4031 () Bool)

(declare-fun e!15295 () Bool)

(assert (=> d!4031 e!15295))

(declare-fun res!14456 () Bool)

(assert (=> d!4031 (=> res!14456 e!15295)))

(declare-fun lt!8486 () Bool)

(assert (=> d!4031 (= res!14456 (not lt!8486))))

(declare-fun lt!8487 () Bool)

(assert (=> d!4031 (= lt!8486 lt!8487)))

(declare-fun lt!8485 () Unit!514)

(declare-fun e!15296 () Unit!514)

(assert (=> d!4031 (= lt!8485 e!15296)))

(declare-fun c!3062 () Bool)

(assert (=> d!4031 (= c!3062 lt!8487)))

(assert (=> d!4031 (= lt!8487 (containsKey!25 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(assert (=> d!4031 (= (contains!220 call!1922 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))) lt!8486)))

(declare-fun b!23555 () Bool)

(declare-fun lt!8488 () Unit!514)

(assert (=> b!23555 (= e!15296 lt!8488)))

(assert (=> b!23555 (= lt!8488 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(assert (=> b!23555 (isDefined!23 (getValueByKey!61 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(declare-fun b!23556 () Bool)

(declare-fun Unit!528 () Unit!514)

(assert (=> b!23556 (= e!15296 Unit!528)))

(declare-fun b!23557 () Bool)

(assert (=> b!23557 (= e!15295 (isDefined!23 (getValueByKey!61 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))))))

(assert (= (and d!4031 c!3062) b!23555))

(assert (= (and d!4031 (not c!3062)) b!23556))

(assert (= (and d!4031 (not res!14456)) b!23557))

(assert (=> d!4031 m!16814))

(declare-fun m!17084 () Bool)

(assert (=> d!4031 m!17084))

(assert (=> b!23555 m!16814))

(declare-fun m!17086 () Bool)

(assert (=> b!23555 m!17086))

(assert (=> b!23555 m!16814))

(declare-fun m!17088 () Bool)

(assert (=> b!23555 m!17088))

(assert (=> b!23555 m!17088))

(declare-fun m!17090 () Bool)

(assert (=> b!23555 m!17090))

(assert (=> b!23557 m!16814))

(assert (=> b!23557 m!17088))

(assert (=> b!23557 m!17088))

(assert (=> b!23557 m!17090))

(assert (=> b!23344 d!4031))

(declare-fun d!4033 () Bool)

(declare-fun e!15297 () Bool)

(assert (=> d!4033 e!15297))

(declare-fun res!14457 () Bool)

(assert (=> d!4033 (=> (not res!14457) (not e!15297))))

(assert (=> d!4033 (= res!14457 (and (bvsge (index!2358 lt!8255) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8255) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!8489 () Unit!514)

(assert (=> d!4033 (= lt!8489 (choose!208 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4033 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4033 (= (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8489)))

(declare-fun b!23558 () Bool)

(assert (=> b!23558 (= e!15297 (contains!220 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(assert (= (and d!4033 res!14457) b!23558))

(declare-fun m!17092 () Bool)

(assert (=> d!4033 m!17092))

(assert (=> d!4033 m!16948))

(declare-fun m!17094 () Bool)

(assert (=> b!23558 m!17094))

(assert (=> b!23558 m!16814))

(assert (=> b!23558 m!17094))

(assert (=> b!23558 m!16814))

(declare-fun m!17096 () Bool)

(assert (=> b!23558 m!17096))

(assert (=> b!23344 d!4033))

(declare-fun d!4035 () Bool)

(declare-fun e!15298 () Bool)

(assert (=> d!4035 e!15298))

(declare-fun res!14458 () Bool)

(assert (=> d!4035 (=> (not res!14458) (not e!15298))))

(assert (=> d!4035 (= res!14458 (and (bvsge (index!2358 lt!8255) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8255) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!8490 () Unit!514)

(assert (=> d!4035 (= lt!8490 (choose!209 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4035 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4035 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8490)))

(declare-fun b!23559 () Bool)

(assert (=> b!23559 (= e!15298 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4035 res!14458) b!23559))

(declare-fun m!17098 () Bool)

(assert (=> d!4035 m!17098))

(assert (=> d!4035 m!16948))

(assert (=> b!23559 m!16828))

(assert (=> b!23559 m!16828))

(declare-fun m!17100 () Bool)

(assert (=> b!23559 m!17100))

(assert (=> b!23559 m!16792))

(declare-fun m!17102 () Bool)

(assert (=> b!23559 m!17102))

(assert (=> b!23344 d!4035))

(declare-fun d!4037 () Bool)

(declare-fun e!15299 () Bool)

(assert (=> d!4037 e!15299))

(declare-fun res!14459 () Bool)

(assert (=> d!4037 (=> res!14459 e!15299)))

(declare-fun lt!8492 () Bool)

(assert (=> d!4037 (= res!14459 (not lt!8492))))

(declare-fun lt!8493 () Bool)

(assert (=> d!4037 (= lt!8492 lt!8493)))

(declare-fun lt!8491 () Unit!514)

(declare-fun e!15300 () Unit!514)

(assert (=> d!4037 (= lt!8491 e!15300)))

(declare-fun c!3063 () Bool)

(assert (=> d!4037 (= c!3063 lt!8493)))

(assert (=> d!4037 (= lt!8493 (containsKey!25 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4037 (= (contains!220 e!15169 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) lt!8492)))

(declare-fun b!23560 () Bool)

(declare-fun lt!8494 () Unit!514)

(assert (=> b!23560 (= e!15300 lt!8494)))

(assert (=> b!23560 (= lt!8494 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23560 (isDefined!23 (getValueByKey!61 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!23561 () Bool)

(declare-fun Unit!529 () Unit!514)

(assert (=> b!23561 (= e!15300 Unit!529)))

(declare-fun b!23562 () Bool)

(assert (=> b!23562 (= e!15299 (isDefined!23 (getValueByKey!61 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!4037 c!3063) b!23560))

(assert (= (and d!4037 (not c!3063)) b!23561))

(assert (= (and d!4037 (not res!14459)) b!23562))

(declare-fun m!17104 () Bool)

(assert (=> d!4037 m!17104))

(declare-fun m!17106 () Bool)

(assert (=> b!23560 m!17106))

(declare-fun m!17108 () Bool)

(assert (=> b!23560 m!17108))

(assert (=> b!23560 m!17108))

(declare-fun m!17110 () Bool)

(assert (=> b!23560 m!17110))

(assert (=> b!23562 m!17108))

(assert (=> b!23562 m!17108))

(assert (=> b!23562 m!17110))

(assert (=> bm!1926 d!4037))

(declare-fun d!4039 () Bool)

(declare-fun res!14466 () Bool)

(declare-fun e!15303 () Bool)

(assert (=> d!4039 (=> (not res!14466) (not e!15303))))

(declare-fun simpleValid!19 (LongMapFixedSize!210) Bool)

(assert (=> d!4039 (= res!14466 (simpleValid!19 (v!1604 (underlying!116 thiss!938))))))

(assert (=> d!4039 (= (valid!109 (v!1604 (underlying!116 thiss!938))) e!15303)))

(declare-fun b!23569 () Bool)

(declare-fun res!14467 () Bool)

(assert (=> b!23569 (=> (not res!14467) (not e!15303))))

(assert (=> b!23569 (= res!14467 (= (arrayCountValidKeys!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23570 () Bool)

(declare-fun res!14468 () Bool)

(assert (=> b!23570 (=> (not res!14468) (not e!15303))))

(assert (=> b!23570 (= res!14468 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23571 () Bool)

(assert (=> b!23571 (= e!15303 (arrayNoDuplicates!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4039 res!14466) b!23569))

(assert (= (and b!23569 res!14467) b!23570))

(assert (= (and b!23570 res!14468) b!23571))

(declare-fun m!17112 () Bool)

(assert (=> d!4039 m!17112))

(declare-fun m!17114 () Bool)

(assert (=> b!23569 m!17114))

(declare-fun m!17116 () Bool)

(assert (=> b!23570 m!17116))

(declare-fun m!17118 () Bool)

(assert (=> b!23571 m!17118))

(assert (=> d!3987 d!4039))

(declare-fun d!4041 () Bool)

(declare-fun e!15304 () Bool)

(assert (=> d!4041 e!15304))

(declare-fun res!14469 () Bool)

(assert (=> d!4041 (=> (not res!14469) (not e!15304))))

(declare-fun lt!8495 () ListLongMap!553)

(assert (=> d!4041 (= res!14469 (contains!220 lt!8495 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!8498 () List!565)

(assert (=> d!4041 (= lt!8495 (ListLongMap!554 lt!8498))))

(declare-fun lt!8496 () Unit!514)

(declare-fun lt!8497 () Unit!514)

(assert (=> d!4041 (= lt!8496 lt!8497)))

(assert (=> d!4041 (= (getValueByKey!61 lt!8498 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4041 (= lt!8497 (lemmaContainsTupThenGetReturnValue!18 lt!8498 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4041 (= lt!8498 (insertStrictlySorted!18 (toList!292 call!1938) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4041 (= (+!45 call!1938 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!8495)))

(declare-fun b!23572 () Bool)

(declare-fun res!14470 () Bool)

(assert (=> b!23572 (=> (not res!14470) (not e!15304))))

(assert (=> b!23572 (= res!14470 (= (getValueByKey!61 (toList!292 lt!8495) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!23573 () Bool)

(assert (=> b!23573 (= e!15304 (contains!221 (toList!292 lt!8495) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4041 res!14469) b!23572))

(assert (= (and b!23572 res!14470) b!23573))

(declare-fun m!17120 () Bool)

(assert (=> d!4041 m!17120))

(declare-fun m!17122 () Bool)

(assert (=> d!4041 m!17122))

(declare-fun m!17124 () Bool)

(assert (=> d!4041 m!17124))

(declare-fun m!17126 () Bool)

(assert (=> d!4041 m!17126))

(declare-fun m!17128 () Bool)

(assert (=> b!23572 m!17128))

(declare-fun m!17130 () Bool)

(assert (=> b!23573 m!17130))

(assert (=> b!23391 d!4041))

(declare-fun d!4043 () Bool)

(declare-fun e!15305 () Bool)

(assert (=> d!4043 e!15305))

(declare-fun res!14471 () Bool)

(assert (=> d!4043 (=> (not res!14471) (not e!15305))))

(declare-fun lt!8499 () ListLongMap!553)

(assert (=> d!4043 (= res!14471 (contains!220 lt!8499 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun lt!8502 () List!565)

(assert (=> d!4043 (= lt!8499 (ListLongMap!554 lt!8502))))

(declare-fun lt!8500 () Unit!514)

(declare-fun lt!8501 () Unit!514)

(assert (=> d!4043 (= lt!8500 lt!8501)))

(assert (=> d!4043 (= (getValueByKey!61 lt!8502 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) (Some!66 (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> d!4043 (= lt!8501 (lemmaContainsTupThenGetReturnValue!18 lt!8502 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> d!4043 (= lt!8502 (insertStrictlySorted!18 (toList!292 e!15153) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> d!4043 (= (+!45 e!15153 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!8499)))

(declare-fun b!23574 () Bool)

(declare-fun res!14472 () Bool)

(assert (=> b!23574 (=> (not res!14472) (not e!15305))))

(assert (=> b!23574 (= res!14472 (= (getValueByKey!61 (toList!292 lt!8499) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) (Some!66 (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun b!23575 () Bool)

(assert (=> b!23575 (= e!15305 (contains!221 (toList!292 lt!8499) (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4043 res!14471) b!23574))

(assert (= (and b!23574 res!14472) b!23575))

(declare-fun m!17132 () Bool)

(assert (=> d!4043 m!17132))

(declare-fun m!17134 () Bool)

(assert (=> d!4043 m!17134))

(declare-fun m!17136 () Bool)

(assert (=> d!4043 m!17136))

(declare-fun m!17138 () Bool)

(assert (=> d!4043 m!17138))

(declare-fun m!17140 () Bool)

(assert (=> b!23574 m!17140))

(declare-fun m!17142 () Bool)

(assert (=> b!23575 m!17142))

(assert (=> bm!1918 d!4043))

(declare-fun b!23576 () Bool)

(declare-fun e!15310 () ListLongMap!553)

(declare-fun call!1986 () ListLongMap!553)

(assert (=> b!23576 (= e!15310 call!1986)))

(declare-fun b!23577 () Bool)

(declare-fun res!14481 () Bool)

(declare-fun e!15313 () Bool)

(assert (=> b!23577 (=> (not res!14481) (not e!15313))))

(declare-fun e!15308 () Bool)

(assert (=> b!23577 (= res!14481 e!15308)))

(declare-fun c!3064 () Bool)

(assert (=> b!23577 (= c!3064 (not (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23578 () Bool)

(declare-fun e!15307 () Bool)

(declare-fun e!15315 () Bool)

(assert (=> b!23578 (= e!15307 e!15315)))

(declare-fun res!14477 () Bool)

(assert (=> b!23578 (=> (not res!14477) (not e!15315))))

(declare-fun lt!8512 () ListLongMap!553)

(assert (=> b!23578 (= res!14477 (contains!220 lt!8512 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!23578 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23579 () Bool)

(declare-fun e!15306 () Bool)

(declare-fun e!15314 () Bool)

(assert (=> b!23579 (= e!15306 e!15314)))

(declare-fun res!14480 () Bool)

(declare-fun call!1982 () Bool)

(assert (=> b!23579 (= res!14480 call!1982)))

(assert (=> b!23579 (=> (not res!14480) (not e!15314))))

(declare-fun b!23580 () Bool)

(declare-fun e!15318 () Unit!514)

(declare-fun lt!8503 () Unit!514)

(assert (=> b!23580 (= e!15318 lt!8503)))

(declare-fun lt!8508 () ListLongMap!553)

(assert (=> b!23580 (= lt!8508 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8519 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8519 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8520 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8520 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8523 () Unit!514)

(assert (=> b!23580 (= lt!8523 (addStillContains!14 lt!8508 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) lt!8520))))

(assert (=> b!23580 (contains!220 (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!8520)))

(declare-fun lt!8517 () Unit!514)

(assert (=> b!23580 (= lt!8517 lt!8523)))

(declare-fun lt!8510 () ListLongMap!553)

(assert (=> b!23580 (= lt!8510 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8506 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8506 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8513 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8513 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8516 () Unit!514)

(assert (=> b!23580 (= lt!8516 (addApplyDifferent!14 lt!8510 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) lt!8513))))

(assert (=> b!23580 (= (apply!29 (+!45 lt!8510 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!8513) (apply!29 lt!8510 lt!8513))))

(declare-fun lt!8507 () Unit!514)

(assert (=> b!23580 (= lt!8507 lt!8516)))

(declare-fun lt!8511 () ListLongMap!553)

(assert (=> b!23580 (= lt!8511 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8514 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8514 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8509 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8509 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8515 () Unit!514)

(assert (=> b!23580 (= lt!8515 (addApplyDifferent!14 lt!8511 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) lt!8509))))

(assert (=> b!23580 (= (apply!29 (+!45 lt!8511 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!8509) (apply!29 lt!8511 lt!8509))))

(declare-fun lt!8524 () Unit!514)

(assert (=> b!23580 (= lt!8524 lt!8515)))

(declare-fun lt!8518 () ListLongMap!553)

(assert (=> b!23580 (= lt!8518 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8504 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8504 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8522 () (_ BitVec 64))

(assert (=> b!23580 (= lt!8522 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!23580 (= lt!8503 (addApplyDifferent!14 lt!8518 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) lt!8522))))

(assert (=> b!23580 (= (apply!29 (+!45 lt!8518 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!8522) (apply!29 lt!8518 lt!8522))))

(declare-fun call!1985 () ListLongMap!553)

(declare-fun bm!1978 () Bool)

(assert (=> bm!1978 (= call!1985 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23581 () Bool)

(declare-fun call!1983 () Bool)

(assert (=> b!23581 (= e!15308 (not call!1983))))

(declare-fun bm!1979 () Bool)

(declare-fun call!1980 () ListLongMap!553)

(declare-fun call!1984 () ListLongMap!553)

(assert (=> bm!1979 (= call!1980 call!1984)))

(declare-fun c!3068 () Bool)

(declare-fun bm!1980 () Bool)

(declare-fun c!3067 () Bool)

(declare-fun call!1981 () ListLongMap!553)

(assert (=> bm!1980 (= call!1984 (+!45 (ite c!3067 call!1985 (ite c!3068 call!1981 call!1986)) (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(declare-fun b!23582 () Bool)

(declare-fun Unit!530 () Unit!514)

(assert (=> b!23582 (= e!15318 Unit!530)))

(declare-fun b!23583 () Bool)

(assert (=> b!23583 (= e!15306 (not call!1982))))

(declare-fun c!3065 () Bool)

(declare-fun b!23584 () Bool)

(assert (=> b!23584 (= c!3065 (and (not (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15316 () ListLongMap!553)

(assert (=> b!23584 (= e!15316 e!15310)))

(declare-fun b!23585 () Bool)

(declare-fun e!15312 () ListLongMap!553)

(assert (=> b!23585 (= e!15312 e!15316)))

(assert (=> b!23585 (= c!3068 (and (not (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!1981 () Bool)

(assert (=> bm!1981 (= call!1986 call!1981)))

(declare-fun b!23586 () Bool)

(assert (=> b!23586 (= e!15314 (= (apply!29 lt!8512 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))

(declare-fun bm!1982 () Bool)

(assert (=> bm!1982 (= call!1981 call!1985)))

(declare-fun b!23587 () Bool)

(declare-fun e!15317 () Bool)

(assert (=> b!23587 (= e!15308 e!15317)))

(declare-fun res!14479 () Bool)

(assert (=> b!23587 (= res!14479 call!1983)))

(assert (=> b!23587 (=> (not res!14479) (not e!15317))))

(declare-fun d!4045 () Bool)

(assert (=> d!4045 e!15313))

(declare-fun res!14475 () Bool)

(assert (=> d!4045 (=> (not res!14475) (not e!15313))))

(assert (=> d!4045 (= res!14475 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))))

(declare-fun lt!8521 () ListLongMap!553)

(assert (=> d!4045 (= lt!8512 lt!8521)))

(declare-fun lt!8505 () Unit!514)

(assert (=> d!4045 (= lt!8505 e!15318)))

(declare-fun c!3069 () Bool)

(declare-fun e!15311 () Bool)

(assert (=> d!4045 (= c!3069 e!15311)))

(declare-fun res!14476 () Bool)

(assert (=> d!4045 (=> (not res!14476) (not e!15311))))

(assert (=> d!4045 (= res!14476 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4045 (= lt!8521 e!15312)))

(assert (=> d!4045 (= c!3067 (and (not (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4045 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4045 (= (getCurrentListMap!121 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!8512)))

(declare-fun bm!1977 () Bool)

(assert (=> bm!1977 (= call!1983 (contains!220 lt!8512 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1983 () Bool)

(assert (=> bm!1983 (= call!1982 (contains!220 lt!8512 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23588 () Bool)

(assert (=> b!23588 (= e!15317 (= (apply!29 lt!8512 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))

(declare-fun b!23589 () Bool)

(declare-fun res!14474 () Bool)

(assert (=> b!23589 (=> (not res!14474) (not e!15313))))

(assert (=> b!23589 (= res!14474 e!15307)))

(declare-fun res!14473 () Bool)

(assert (=> b!23589 (=> res!14473 e!15307)))

(declare-fun e!15309 () Bool)

(assert (=> b!23589 (= res!14473 (not e!15309))))

(declare-fun res!14478 () Bool)

(assert (=> b!23589 (=> (not res!14478) (not e!15309))))

(assert (=> b!23589 (= res!14478 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23590 () Bool)

(assert (=> b!23590 (= e!15311 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!23591 () Bool)

(assert (=> b!23591 (= e!15313 e!15306)))

(declare-fun c!3066 () Bool)

(assert (=> b!23591 (= c!3066 (not (= (bvand (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23592 () Bool)

(assert (=> b!23592 (= e!15315 (= (apply!29 lt!8512 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23592 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))))))))

(assert (=> b!23592 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23593 () Bool)

(assert (=> b!23593 (= e!15310 call!1980)))

(declare-fun b!23594 () Bool)

(assert (=> b!23594 (= e!15312 (+!45 call!1984 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))

(declare-fun b!23595 () Bool)

(assert (=> b!23595 (= e!15316 call!1980)))

(declare-fun b!23596 () Bool)

(assert (=> b!23596 (= e!15309 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4045 c!3067) b!23594))

(assert (= (and d!4045 (not c!3067)) b!23585))

(assert (= (and b!23585 c!3068) b!23595))

(assert (= (and b!23585 (not c!3068)) b!23584))

(assert (= (and b!23584 c!3065) b!23593))

(assert (= (and b!23584 (not c!3065)) b!23576))

(assert (= (or b!23593 b!23576) bm!1981))

(assert (= (or b!23595 bm!1981) bm!1982))

(assert (= (or b!23595 b!23593) bm!1979))

(assert (= (or b!23594 bm!1982) bm!1978))

(assert (= (or b!23594 bm!1979) bm!1980))

(assert (= (and d!4045 res!14476) b!23590))

(assert (= (and d!4045 c!3069) b!23580))

(assert (= (and d!4045 (not c!3069)) b!23582))

(assert (= (and d!4045 res!14475) b!23589))

(assert (= (and b!23589 res!14478) b!23596))

(assert (= (and b!23589 (not res!14473)) b!23578))

(assert (= (and b!23578 res!14477) b!23592))

(assert (= (and b!23589 res!14474) b!23577))

(assert (= (and b!23577 c!3064) b!23587))

(assert (= (and b!23577 (not c!3064)) b!23581))

(assert (= (and b!23587 res!14479) b!23588))

(assert (= (or b!23587 b!23581) bm!1977))

(assert (= (and b!23577 res!14481) b!23591))

(assert (= (and b!23591 c!3066) b!23579))

(assert (= (and b!23591 (not c!3066)) b!23583))

(assert (= (and b!23579 res!14480) b!23586))

(assert (= (or b!23579 b!23583) bm!1983))

(declare-fun b_lambda!1589 () Bool)

(assert (=> (not b_lambda!1589) (not b!23592)))

(declare-fun t!3243 () Bool)

(declare-fun tb!663 () Bool)

(assert (=> (and b!23168 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)) t!3243) tb!663))

(declare-fun result!1103 () Bool)

(assert (=> tb!663 (= result!1103 tp_is_empty!1023)))

(assert (=> b!23592 t!3243))

(declare-fun b_and!1493 () Bool)

(assert (= b_and!1491 (and (=> t!3243 result!1103) b_and!1493)))

(declare-fun m!17144 () Bool)

(assert (=> bm!1977 m!17144))

(declare-fun m!17146 () Bool)

(assert (=> b!23586 m!17146))

(declare-fun m!17148 () Bool)

(assert (=> bm!1983 m!17148))

(declare-fun m!17150 () Bool)

(assert (=> bm!1980 m!17150))

(declare-fun m!17152 () Bool)

(assert (=> b!23594 m!17152))

(declare-fun m!17154 () Bool)

(assert (=> b!23578 m!17154))

(assert (=> b!23578 m!17154))

(declare-fun m!17156 () Bool)

(assert (=> b!23578 m!17156))

(assert (=> b!23596 m!17154))

(assert (=> b!23596 m!17154))

(declare-fun m!17158 () Bool)

(assert (=> b!23596 m!17158))

(assert (=> b!23590 m!17154))

(assert (=> b!23590 m!17154))

(assert (=> b!23590 m!17158))

(declare-fun m!17160 () Bool)

(assert (=> bm!1978 m!17160))

(declare-fun m!17162 () Bool)

(assert (=> b!23580 m!17162))

(declare-fun m!17164 () Bool)

(assert (=> b!23580 m!17164))

(declare-fun m!17166 () Bool)

(assert (=> b!23580 m!17166))

(declare-fun m!17168 () Bool)

(assert (=> b!23580 m!17168))

(assert (=> b!23580 m!17166))

(declare-fun m!17170 () Bool)

(assert (=> b!23580 m!17170))

(declare-fun m!17172 () Bool)

(assert (=> b!23580 m!17172))

(declare-fun m!17174 () Bool)

(assert (=> b!23580 m!17174))

(assert (=> b!23580 m!17160))

(declare-fun m!17176 () Bool)

(assert (=> b!23580 m!17176))

(declare-fun m!17178 () Bool)

(assert (=> b!23580 m!17178))

(declare-fun m!17180 () Bool)

(assert (=> b!23580 m!17180))

(declare-fun m!17182 () Bool)

(assert (=> b!23580 m!17182))

(declare-fun m!17184 () Bool)

(assert (=> b!23580 m!17184))

(assert (=> b!23580 m!17184))

(declare-fun m!17186 () Bool)

(assert (=> b!23580 m!17186))

(assert (=> b!23580 m!17174))

(declare-fun m!17188 () Bool)

(assert (=> b!23580 m!17188))

(assert (=> b!23580 m!17154))

(assert (=> b!23580 m!17182))

(declare-fun m!17190 () Bool)

(assert (=> b!23580 m!17190))

(declare-fun m!17192 () Bool)

(assert (=> b!23588 m!17192))

(declare-fun m!17194 () Bool)

(assert (=> b!23592 m!17194))

(declare-fun m!17196 () Bool)

(assert (=> b!23592 m!17196))

(assert (=> b!23592 m!17194))

(declare-fun m!17198 () Bool)

(assert (=> b!23592 m!17198))

(assert (=> b!23592 m!17154))

(declare-fun m!17200 () Bool)

(assert (=> b!23592 m!17200))

(assert (=> b!23592 m!17196))

(assert (=> b!23592 m!17154))

(assert (=> d!4045 m!17072))

(assert (=> bm!1951 d!4045))

(declare-fun d!4047 () Bool)

(declare-fun e!15319 () Bool)

(assert (=> d!4047 e!15319))

(declare-fun res!14482 () Bool)

(assert (=> d!4047 (=> res!14482 e!15319)))

(declare-fun lt!8526 () Bool)

(assert (=> d!4047 (= res!14482 (not lt!8526))))

(declare-fun lt!8527 () Bool)

(assert (=> d!4047 (= lt!8526 lt!8527)))

(declare-fun lt!8525 () Unit!514)

(declare-fun e!15320 () Unit!514)

(assert (=> d!4047 (= lt!8525 e!15320)))

(declare-fun c!3070 () Bool)

(assert (=> d!4047 (= c!3070 lt!8527)))

(assert (=> d!4047 (= lt!8527 (containsKey!25 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4047 (= (contains!220 call!1951 #b0000000000000000000000000000000000000000000000000000000000000000) lt!8526)))

(declare-fun b!23597 () Bool)

(declare-fun lt!8528 () Unit!514)

(assert (=> b!23597 (= e!15320 lt!8528)))

(assert (=> b!23597 (= lt!8528 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23597 (isDefined!23 (getValueByKey!61 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23598 () Bool)

(declare-fun Unit!531 () Unit!514)

(assert (=> b!23598 (= e!15320 Unit!531)))

(declare-fun b!23599 () Bool)

(assert (=> b!23599 (= e!15319 (isDefined!23 (getValueByKey!61 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4047 c!3070) b!23597))

(assert (= (and d!4047 (not c!3070)) b!23598))

(assert (= (and d!4047 (not res!14482)) b!23599))

(declare-fun m!17202 () Bool)

(assert (=> d!4047 m!17202))

(declare-fun m!17204 () Bool)

(assert (=> b!23597 m!17204))

(declare-fun m!17206 () Bool)

(assert (=> b!23597 m!17206))

(assert (=> b!23597 m!17206))

(declare-fun m!17208 () Bool)

(assert (=> b!23597 m!17208))

(assert (=> b!23599 m!17206))

(assert (=> b!23599 m!17206))

(assert (=> b!23599 m!17208))

(assert (=> b!23376 d!4047))

(declare-fun d!4049 () Bool)

(declare-fun res!14483 () Bool)

(declare-fun e!15321 () Bool)

(assert (=> d!4049 (=> res!14483 e!15321)))

(assert (=> d!4049 (= res!14483 (= (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4049 (= (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000) e!15321)))

(declare-fun b!23600 () Bool)

(declare-fun e!15322 () Bool)

(assert (=> b!23600 (= e!15321 e!15322)))

(declare-fun res!14484 () Bool)

(assert (=> b!23600 (=> (not res!14484) (not e!15322))))

(assert (=> b!23600 (= res!14484 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23601 () Bool)

(assert (=> b!23601 (= e!15322 (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4049 (not res!14483)) b!23600))

(assert (= (and b!23600 res!14484) b!23601))

(assert (=> d!4049 m!17154))

(declare-fun m!17210 () Bool)

(assert (=> b!23601 m!17210))

(assert (=> bm!1936 d!4049))

(declare-fun d!4051 () Bool)

(assert (=> d!4051 (= (map!410 (_2!476 lt!8264)) (getCurrentListMap!121 (_keys!3164 (_2!476 lt!8264)) (_values!1729 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264)) (extraKeys!1641 (_2!476 lt!8264)) (zeroValue!1666 (_2!476 lt!8264)) (minValue!1666 (_2!476 lt!8264)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8264))))))

(declare-fun bs!951 () Bool)

(assert (= bs!951 d!4051))

(declare-fun m!17212 () Bool)

(assert (=> bs!951 m!17212))

(assert (=> bm!1913 d!4051))

(declare-fun b!23602 () Bool)

(declare-fun e!15327 () ListLongMap!553)

(declare-fun call!1993 () ListLongMap!553)

(assert (=> b!23602 (= e!15327 call!1993)))

(declare-fun b!23603 () Bool)

(declare-fun res!14493 () Bool)

(declare-fun e!15330 () Bool)

(assert (=> b!23603 (=> (not res!14493) (not e!15330))))

(declare-fun e!15325 () Bool)

(assert (=> b!23603 (= res!14493 e!15325)))

(declare-fun c!3071 () Bool)

(assert (=> b!23603 (= c!3071 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23604 () Bool)

(declare-fun e!15324 () Bool)

(declare-fun e!15332 () Bool)

(assert (=> b!23604 (= e!15324 e!15332)))

(declare-fun res!14489 () Bool)

(assert (=> b!23604 (=> (not res!14489) (not e!15332))))

(declare-fun lt!8538 () ListLongMap!553)

(assert (=> b!23604 (= res!14489 (contains!220 lt!8538 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!23604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23605 () Bool)

(declare-fun e!15323 () Bool)

(declare-fun e!15331 () Bool)

(assert (=> b!23605 (= e!15323 e!15331)))

(declare-fun res!14492 () Bool)

(declare-fun call!1989 () Bool)

(assert (=> b!23605 (= res!14492 call!1989)))

(assert (=> b!23605 (=> (not res!14492) (not e!15331))))

(declare-fun b!23606 () Bool)

(declare-fun e!15335 () Unit!514)

(declare-fun lt!8529 () Unit!514)

(assert (=> b!23606 (= e!15335 lt!8529)))

(declare-fun lt!8534 () ListLongMap!553)

(assert (=> b!23606 (= lt!8534 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8545 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8545 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8546 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8546 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8549 () Unit!514)

(assert (=> b!23606 (= lt!8549 (addStillContains!14 lt!8534 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8546))))

(assert (=> b!23606 (contains!220 (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8546)))

(declare-fun lt!8543 () Unit!514)

(assert (=> b!23606 (= lt!8543 lt!8549)))

(declare-fun lt!8536 () ListLongMap!553)

(assert (=> b!23606 (= lt!8536 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8532 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8532 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8539 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8539 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8542 () Unit!514)

(assert (=> b!23606 (= lt!8542 (addApplyDifferent!14 lt!8536 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8539))))

(assert (=> b!23606 (= (apply!29 (+!45 lt!8536 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8539) (apply!29 lt!8536 lt!8539))))

(declare-fun lt!8533 () Unit!514)

(assert (=> b!23606 (= lt!8533 lt!8542)))

(declare-fun lt!8537 () ListLongMap!553)

(assert (=> b!23606 (= lt!8537 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8540 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8540 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8535 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8535 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8541 () Unit!514)

(assert (=> b!23606 (= lt!8541 (addApplyDifferent!14 lt!8537 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8535))))

(assert (=> b!23606 (= (apply!29 (+!45 lt!8537 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8535) (apply!29 lt!8537 lt!8535))))

(declare-fun lt!8550 () Unit!514)

(assert (=> b!23606 (= lt!8550 lt!8541)))

(declare-fun lt!8544 () ListLongMap!553)

(assert (=> b!23606 (= lt!8544 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8530 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8530 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8548 () (_ BitVec 64))

(assert (=> b!23606 (= lt!8548 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!23606 (= lt!8529 (addApplyDifferent!14 lt!8544 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8548))))

(assert (=> b!23606 (= (apply!29 (+!45 lt!8544 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8548) (apply!29 lt!8544 lt!8548))))

(declare-fun bm!1985 () Bool)

(declare-fun call!1992 () ListLongMap!553)

(assert (=> bm!1985 (= call!1992 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23607 () Bool)

(declare-fun call!1990 () Bool)

(assert (=> b!23607 (= e!15325 (not call!1990))))

(declare-fun bm!1986 () Bool)

(declare-fun call!1987 () ListLongMap!553)

(declare-fun call!1991 () ListLongMap!553)

(assert (=> bm!1986 (= call!1987 call!1991)))

(declare-fun c!3075 () Bool)

(declare-fun call!1988 () ListLongMap!553)

(declare-fun c!3074 () Bool)

(declare-fun bm!1987 () Bool)

(assert (=> bm!1987 (= call!1991 (+!45 (ite c!3074 call!1992 (ite c!3075 call!1988 call!1993)) (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!23608 () Bool)

(declare-fun Unit!532 () Unit!514)

(assert (=> b!23608 (= e!15335 Unit!532)))

(declare-fun b!23609 () Bool)

(assert (=> b!23609 (= e!15323 (not call!1989))))

(declare-fun c!3072 () Bool)

(declare-fun b!23610 () Bool)

(assert (=> b!23610 (= c!3072 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15333 () ListLongMap!553)

(assert (=> b!23610 (= e!15333 e!15327)))

(declare-fun b!23611 () Bool)

(declare-fun e!15329 () ListLongMap!553)

(assert (=> b!23611 (= e!15329 e!15333)))

(assert (=> b!23611 (= c!3075 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!1988 () Bool)

(assert (=> bm!1988 (= call!1993 call!1988)))

(declare-fun b!23612 () Bool)

(assert (=> b!23612 (= e!15331 (= (apply!29 lt!8538 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!1989 () Bool)

(assert (=> bm!1989 (= call!1988 call!1992)))

(declare-fun b!23613 () Bool)

(declare-fun e!15334 () Bool)

(assert (=> b!23613 (= e!15325 e!15334)))

(declare-fun res!14491 () Bool)

(assert (=> b!23613 (= res!14491 call!1990)))

(assert (=> b!23613 (=> (not res!14491) (not e!15334))))

(declare-fun d!4053 () Bool)

(assert (=> d!4053 e!15330))

(declare-fun res!14487 () Bool)

(assert (=> d!4053 (=> (not res!14487) (not e!15330))))

(assert (=> d!4053 (= res!14487 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!8547 () ListLongMap!553)

(assert (=> d!4053 (= lt!8538 lt!8547)))

(declare-fun lt!8531 () Unit!514)

(assert (=> d!4053 (= lt!8531 e!15335)))

(declare-fun c!3076 () Bool)

(declare-fun e!15328 () Bool)

(assert (=> d!4053 (= c!3076 e!15328)))

(declare-fun res!14488 () Bool)

(assert (=> d!4053 (=> (not res!14488) (not e!15328))))

(assert (=> d!4053 (= res!14488 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4053 (= lt!8547 e!15329)))

(assert (=> d!4053 (= c!3074 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4053 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4053 (= (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8538)))

(declare-fun bm!1984 () Bool)

(assert (=> bm!1984 (= call!1990 (contains!220 lt!8538 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1990 () Bool)

(assert (=> bm!1990 (= call!1989 (contains!220 lt!8538 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23614 () Bool)

(assert (=> b!23614 (= e!15334 (= (apply!29 lt!8538 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23615 () Bool)

(declare-fun res!14486 () Bool)

(assert (=> b!23615 (=> (not res!14486) (not e!15330))))

(assert (=> b!23615 (= res!14486 e!15324)))

(declare-fun res!14485 () Bool)

(assert (=> b!23615 (=> res!14485 e!15324)))

(declare-fun e!15326 () Bool)

(assert (=> b!23615 (= res!14485 (not e!15326))))

(declare-fun res!14490 () Bool)

(assert (=> b!23615 (=> (not res!14490) (not e!15326))))

(assert (=> b!23615 (= res!14490 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23616 () Bool)

(assert (=> b!23616 (= e!15328 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!23617 () Bool)

(assert (=> b!23617 (= e!15330 e!15323)))

(declare-fun c!3073 () Bool)

(assert (=> b!23617 (= c!3073 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23618 () Bool)

(assert (=> b!23618 (= e!15332 (= (apply!29 lt!8538 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23618 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> b!23618 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23619 () Bool)

(assert (=> b!23619 (= e!15327 call!1987)))

(declare-fun b!23620 () Bool)

(assert (=> b!23620 (= e!15329 (+!45 call!1991 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23621 () Bool)

(assert (=> b!23621 (= e!15333 call!1987)))

(declare-fun b!23622 () Bool)

(assert (=> b!23622 (= e!15326 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4053 c!3074) b!23620))

(assert (= (and d!4053 (not c!3074)) b!23611))

(assert (= (and b!23611 c!3075) b!23621))

(assert (= (and b!23611 (not c!3075)) b!23610))

(assert (= (and b!23610 c!3072) b!23619))

(assert (= (and b!23610 (not c!3072)) b!23602))

(assert (= (or b!23619 b!23602) bm!1988))

(assert (= (or b!23621 bm!1988) bm!1989))

(assert (= (or b!23621 b!23619) bm!1986))

(assert (= (or b!23620 bm!1989) bm!1985))

(assert (= (or b!23620 bm!1986) bm!1987))

(assert (= (and d!4053 res!14488) b!23616))

(assert (= (and d!4053 c!3076) b!23606))

(assert (= (and d!4053 (not c!3076)) b!23608))

(assert (= (and d!4053 res!14487) b!23615))

(assert (= (and b!23615 res!14490) b!23622))

(assert (= (and b!23615 (not res!14485)) b!23604))

(assert (= (and b!23604 res!14489) b!23618))

(assert (= (and b!23615 res!14486) b!23603))

(assert (= (and b!23603 c!3071) b!23613))

(assert (= (and b!23603 (not c!3071)) b!23607))

(assert (= (and b!23613 res!14491) b!23614))

(assert (= (or b!23613 b!23607) bm!1984))

(assert (= (and b!23603 res!14493) b!23617))

(assert (= (and b!23617 c!3073) b!23605))

(assert (= (and b!23617 (not c!3073)) b!23609))

(assert (= (and b!23605 res!14492) b!23612))

(assert (= (or b!23605 b!23609) bm!1990))

(declare-fun b_lambda!1591 () Bool)

(assert (=> (not b_lambda!1591) (not b!23618)))

(assert (=> b!23618 t!3241))

(declare-fun b_and!1495 () Bool)

(assert (= b_and!1493 (and (=> t!3241 result!1101) b_and!1495)))

(declare-fun m!17214 () Bool)

(assert (=> bm!1984 m!17214))

(declare-fun m!17216 () Bool)

(assert (=> b!23612 m!17216))

(declare-fun m!17218 () Bool)

(assert (=> bm!1990 m!17218))

(declare-fun m!17220 () Bool)

(assert (=> bm!1987 m!17220))

(declare-fun m!17222 () Bool)

(assert (=> b!23620 m!17222))

(assert (=> b!23604 m!16992))

(assert (=> b!23604 m!16992))

(declare-fun m!17224 () Bool)

(assert (=> b!23604 m!17224))

(assert (=> b!23622 m!16992))

(assert (=> b!23622 m!16992))

(assert (=> b!23622 m!16996))

(assert (=> b!23616 m!16992))

(assert (=> b!23616 m!16992))

(assert (=> b!23616 m!16996))

(declare-fun m!17226 () Bool)

(assert (=> bm!1985 m!17226))

(declare-fun m!17228 () Bool)

(assert (=> b!23606 m!17228))

(declare-fun m!17230 () Bool)

(assert (=> b!23606 m!17230))

(declare-fun m!17232 () Bool)

(assert (=> b!23606 m!17232))

(declare-fun m!17234 () Bool)

(assert (=> b!23606 m!17234))

(assert (=> b!23606 m!17232))

(declare-fun m!17236 () Bool)

(assert (=> b!23606 m!17236))

(declare-fun m!17238 () Bool)

(assert (=> b!23606 m!17238))

(declare-fun m!17240 () Bool)

(assert (=> b!23606 m!17240))

(assert (=> b!23606 m!17226))

(declare-fun m!17242 () Bool)

(assert (=> b!23606 m!17242))

(declare-fun m!17244 () Bool)

(assert (=> b!23606 m!17244))

(declare-fun m!17246 () Bool)

(assert (=> b!23606 m!17246))

(declare-fun m!17248 () Bool)

(assert (=> b!23606 m!17248))

(declare-fun m!17250 () Bool)

(assert (=> b!23606 m!17250))

(assert (=> b!23606 m!17250))

(declare-fun m!17252 () Bool)

(assert (=> b!23606 m!17252))

(assert (=> b!23606 m!17240))

(declare-fun m!17254 () Bool)

(assert (=> b!23606 m!17254))

(assert (=> b!23606 m!16992))

(assert (=> b!23606 m!17248))

(declare-fun m!17256 () Bool)

(assert (=> b!23606 m!17256))

(declare-fun m!17258 () Bool)

(assert (=> b!23614 m!17258))

(assert (=> b!23618 m!17032))

(declare-fun m!17260 () Bool)

(assert (=> b!23618 m!17260))

(assert (=> b!23618 m!17032))

(declare-fun m!17262 () Bool)

(assert (=> b!23618 m!17262))

(assert (=> b!23618 m!16992))

(declare-fun m!17264 () Bool)

(assert (=> b!23618 m!17264))

(assert (=> b!23618 m!17260))

(assert (=> b!23618 m!16992))

(assert (=> d!4053 m!16948))

(assert (=> b!23347 d!4053))

(declare-fun d!4055 () Bool)

(assert (=> d!4055 (= (inRange!0 (ite c!3007 (ite c!3003 (index!2358 lt!8270) (ite c!3014 (index!2357 lt!8275) (index!2360 lt!8275))) (ite c!3012 (index!2358 lt!8283) (ite c!3009 (index!2357 lt!8277) (index!2360 lt!8277)))) (mask!4730 lt!8162)) (and (bvsge (ite c!3007 (ite c!3003 (index!2358 lt!8270) (ite c!3014 (index!2357 lt!8275) (index!2360 lt!8275))) (ite c!3012 (index!2358 lt!8283) (ite c!3009 (index!2357 lt!8277) (index!2360 lt!8277)))) #b00000000000000000000000000000000) (bvslt (ite c!3007 (ite c!3003 (index!2358 lt!8270) (ite c!3014 (index!2357 lt!8275) (index!2360 lt!8275))) (ite c!3012 (index!2358 lt!8283) (ite c!3009 (index!2357 lt!8277) (index!2360 lt!8277)))) (bvadd (mask!4730 lt!8162) #b00000000000000000000000000000001))))))

(assert (=> bm!1948 d!4055))

(declare-fun d!4057 () Bool)

(declare-fun res!14494 () Bool)

(declare-fun e!15336 () Bool)

(assert (=> d!4057 (=> (not res!14494) (not e!15336))))

(assert (=> d!4057 (= res!14494 (simpleValid!19 (_2!476 lt!8291)))))

(assert (=> d!4057 (= (valid!109 (_2!476 lt!8291)) e!15336)))

(declare-fun b!23623 () Bool)

(declare-fun res!14495 () Bool)

(assert (=> b!23623 (=> (not res!14495) (not e!15336))))

(assert (=> b!23623 (= res!14495 (= (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8291)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))) (_size!150 (_2!476 lt!8291))))))

(declare-fun b!23624 () Bool)

(declare-fun res!14496 () Bool)

(assert (=> b!23624 (=> (not res!14496) (not e!15336))))

(assert (=> b!23624 (= res!14496 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291))))))

(declare-fun b!23625 () Bool)

(assert (=> b!23625 (= e!15336 (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8291)) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4057 res!14494) b!23623))

(assert (= (and b!23623 res!14495) b!23624))

(assert (= (and b!23624 res!14496) b!23625))

(declare-fun m!17266 () Bool)

(assert (=> d!4057 m!17266))

(declare-fun m!17268 () Bool)

(assert (=> b!23623 m!17268))

(declare-fun m!17270 () Bool)

(assert (=> b!23624 m!17270))

(declare-fun m!17272 () Bool)

(assert (=> b!23625 m!17272))

(assert (=> d!3995 d!4057))

(declare-fun d!4059 () Bool)

(declare-fun res!14497 () Bool)

(declare-fun e!15337 () Bool)

(assert (=> d!4059 (=> (not res!14497) (not e!15337))))

(assert (=> d!4059 (= res!14497 (simpleValid!19 lt!8162))))

(assert (=> d!4059 (= (valid!109 lt!8162) e!15337)))

(declare-fun b!23626 () Bool)

(declare-fun res!14498 () Bool)

(assert (=> b!23626 (=> (not res!14498) (not e!15337))))

(assert (=> b!23626 (= res!14498 (= (arrayCountValidKeys!0 (_keys!3164 lt!8162) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (_size!150 lt!8162)))))

(declare-fun b!23627 () Bool)

(declare-fun res!14499 () Bool)

(assert (=> b!23627 (=> (not res!14499) (not e!15337))))

(assert (=> b!23627 (= res!14499 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun b!23628 () Bool)

(assert (=> b!23628 (= e!15337 (arrayNoDuplicates!0 (_keys!3164 lt!8162) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4059 res!14497) b!23626))

(assert (= (and b!23626 res!14498) b!23627))

(assert (= (and b!23627 res!14499) b!23628))

(declare-fun m!17274 () Bool)

(assert (=> d!4059 m!17274))

(declare-fun m!17276 () Bool)

(assert (=> b!23626 m!17276))

(declare-fun m!17278 () Bool)

(assert (=> b!23627 m!17278))

(declare-fun m!17280 () Bool)

(assert (=> b!23628 m!17280))

(assert (=> d!3995 d!4059))

(declare-fun b!23629 () Bool)

(declare-fun e!15339 () SeekEntryResult!59)

(declare-fun lt!8551 () SeekEntryResult!59)

(assert (=> b!23629 (= e!15339 (MissingZero!59 (index!2359 lt!8551)))))

(declare-fun b!23630 () Bool)

(declare-fun e!15340 () SeekEntryResult!59)

(assert (=> b!23630 (= e!15340 Undefined!59)))

(declare-fun b!23632 () Bool)

(declare-fun e!15338 () SeekEntryResult!59)

(assert (=> b!23632 (= e!15338 (Found!59 (index!2359 lt!8551)))))

(declare-fun b!23631 () Bool)

(assert (=> b!23631 (= e!15339 (seekKeyOrZeroReturnVacant!0 (x!5581 lt!8551) (index!2359 lt!8551) (index!2359 lt!8551) #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun d!4061 () Bool)

(declare-fun lt!8552 () SeekEntryResult!59)

(assert (=> d!4061 (and (or ((_ is Undefined!59) lt!8552) (not ((_ is Found!59) lt!8552)) (and (bvsge (index!2358 lt!8552) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8552) (size!700 (_keys!3164 lt!8162))))) (or ((_ is Undefined!59) lt!8552) ((_ is Found!59) lt!8552) (not ((_ is MissingZero!59) lt!8552)) (and (bvsge (index!2357 lt!8552) #b00000000000000000000000000000000) (bvslt (index!2357 lt!8552) (size!700 (_keys!3164 lt!8162))))) (or ((_ is Undefined!59) lt!8552) ((_ is Found!59) lt!8552) ((_ is MissingZero!59) lt!8552) (not ((_ is MissingVacant!59) lt!8552)) (and (bvsge (index!2360 lt!8552) #b00000000000000000000000000000000) (bvslt (index!2360 lt!8552) (size!700 (_keys!3164 lt!8162))))) (or ((_ is Undefined!59) lt!8552) (ite ((_ is Found!59) lt!8552) (= (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8552)) #b0000000000000000000000000000000000000000000000000000000000000000) (ite ((_ is MissingZero!59) lt!8552) (= (select (arr!604 (_keys!3164 lt!8162)) (index!2357 lt!8552)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!59) lt!8552) (= (select (arr!604 (_keys!3164 lt!8162)) (index!2360 lt!8552)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!4061 (= lt!8552 e!15340)))

(declare-fun c!3079 () Bool)

(assert (=> d!4061 (= c!3079 (and ((_ is Intermediate!59) lt!8551) (undefined!871 lt!8551)))))

(assert (=> d!4061 (= lt!8551 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 #b0000000000000000000000000000000000000000000000000000000000000000 (mask!4730 lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(assert (=> d!4061 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4061 (= (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)) lt!8552)))

(declare-fun b!23633 () Bool)

(declare-fun c!3077 () Bool)

(declare-fun lt!8553 () (_ BitVec 64))

(assert (=> b!23633 (= c!3077 (= lt!8553 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23633 (= e!15338 e!15339)))

(declare-fun b!23634 () Bool)

(assert (=> b!23634 (= e!15340 e!15338)))

(assert (=> b!23634 (= lt!8553 (select (arr!604 (_keys!3164 lt!8162)) (index!2359 lt!8551)))))

(declare-fun c!3078 () Bool)

(assert (=> b!23634 (= c!3078 (= lt!8553 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4061 c!3079) b!23630))

(assert (= (and d!4061 (not c!3079)) b!23634))

(assert (= (and b!23634 c!3078) b!23632))

(assert (= (and b!23634 (not c!3078)) b!23633))

(assert (= (and b!23633 c!3077) b!23629))

(assert (= (and b!23633 (not c!3077)) b!23631))

(declare-fun m!17282 () Bool)

(assert (=> b!23631 m!17282))

(declare-fun m!17284 () Bool)

(assert (=> d!4061 m!17284))

(declare-fun m!17286 () Bool)

(assert (=> d!4061 m!17286))

(declare-fun m!17288 () Bool)

(assert (=> d!4061 m!17288))

(declare-fun m!17290 () Bool)

(assert (=> d!4061 m!17290))

(declare-fun m!17292 () Bool)

(assert (=> d!4061 m!17292))

(assert (=> d!4061 m!17290))

(assert (=> d!4061 m!17072))

(declare-fun m!17294 () Bool)

(assert (=> b!23634 m!17294))

(assert (=> bm!1933 d!4061))

(declare-fun b!23635 () Bool)

(declare-fun e!15345 () ListLongMap!553)

(declare-fun call!2000 () ListLongMap!553)

(assert (=> b!23635 (= e!15345 call!2000)))

(declare-fun b!23636 () Bool)

(declare-fun res!14508 () Bool)

(declare-fun e!15348 () Bool)

(assert (=> b!23636 (=> (not res!14508) (not e!15348))))

(declare-fun e!15343 () Bool)

(assert (=> b!23636 (= res!14508 e!15343)))

(declare-fun c!3080 () Bool)

(assert (=> b!23636 (= c!3080 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23637 () Bool)

(declare-fun e!15342 () Bool)

(declare-fun e!15350 () Bool)

(assert (=> b!23637 (= e!15342 e!15350)))

(declare-fun res!14504 () Bool)

(assert (=> b!23637 (=> (not res!14504) (not e!15350))))

(declare-fun lt!8563 () ListLongMap!553)

(assert (=> b!23637 (= res!14504 (contains!220 lt!8563 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!23637 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23638 () Bool)

(declare-fun e!15341 () Bool)

(declare-fun e!15349 () Bool)

(assert (=> b!23638 (= e!15341 e!15349)))

(declare-fun res!14507 () Bool)

(declare-fun call!1996 () Bool)

(assert (=> b!23638 (= res!14507 call!1996)))

(assert (=> b!23638 (=> (not res!14507) (not e!15349))))

(declare-fun b!23639 () Bool)

(declare-fun e!15353 () Unit!514)

(declare-fun lt!8554 () Unit!514)

(assert (=> b!23639 (= e!15353 lt!8554)))

(declare-fun lt!8559 () ListLongMap!553)

(assert (=> b!23639 (= lt!8559 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8570 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8570 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8571 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8571 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8574 () Unit!514)

(assert (=> b!23639 (= lt!8574 (addStillContains!14 lt!8559 lt!8570 (zeroValue!1666 lt!8162) lt!8571))))

(assert (=> b!23639 (contains!220 (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))) lt!8571)))

(declare-fun lt!8568 () Unit!514)

(assert (=> b!23639 (= lt!8568 lt!8574)))

(declare-fun lt!8561 () ListLongMap!553)

(assert (=> b!23639 (= lt!8561 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8557 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8557 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8564 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8564 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8567 () Unit!514)

(assert (=> b!23639 (= lt!8567 (addApplyDifferent!14 lt!8561 lt!8557 (minValue!1666 lt!8162) lt!8564))))

(assert (=> b!23639 (= (apply!29 (+!45 lt!8561 (tuple2!947 lt!8557 (minValue!1666 lt!8162))) lt!8564) (apply!29 lt!8561 lt!8564))))

(declare-fun lt!8558 () Unit!514)

(assert (=> b!23639 (= lt!8558 lt!8567)))

(declare-fun lt!8562 () ListLongMap!553)

(assert (=> b!23639 (= lt!8562 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8565 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8565 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8560 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8560 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8566 () Unit!514)

(assert (=> b!23639 (= lt!8566 (addApplyDifferent!14 lt!8562 lt!8565 (zeroValue!1666 lt!8162) lt!8560))))

(assert (=> b!23639 (= (apply!29 (+!45 lt!8562 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))) lt!8560) (apply!29 lt!8562 lt!8560))))

(declare-fun lt!8575 () Unit!514)

(assert (=> b!23639 (= lt!8575 lt!8566)))

(declare-fun lt!8569 () ListLongMap!553)

(assert (=> b!23639 (= lt!8569 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8555 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8555 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8573 () (_ BitVec 64))

(assert (=> b!23639 (= lt!8573 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!23639 (= lt!8554 (addApplyDifferent!14 lt!8569 lt!8555 (minValue!1666 lt!8162) lt!8573))))

(assert (=> b!23639 (= (apply!29 (+!45 lt!8569 (tuple2!947 lt!8555 (minValue!1666 lt!8162))) lt!8573) (apply!29 lt!8569 lt!8573))))

(declare-fun call!1999 () ListLongMap!553)

(declare-fun bm!1992 () Bool)

(assert (=> bm!1992 (= call!1999 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23640 () Bool)

(declare-fun call!1997 () Bool)

(assert (=> b!23640 (= e!15343 (not call!1997))))

(declare-fun bm!1993 () Bool)

(declare-fun call!1994 () ListLongMap!553)

(declare-fun call!1998 () ListLongMap!553)

(assert (=> bm!1993 (= call!1994 call!1998)))

(declare-fun c!3084 () Bool)

(declare-fun c!3083 () Bool)

(declare-fun call!1995 () ListLongMap!553)

(declare-fun bm!1994 () Bool)

(assert (=> bm!1994 (= call!1998 (+!45 (ite c!3083 call!1999 (ite c!3084 call!1995 call!2000)) (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun b!23641 () Bool)

(declare-fun Unit!533 () Unit!514)

(assert (=> b!23641 (= e!15353 Unit!533)))

(declare-fun b!23642 () Bool)

(assert (=> b!23642 (= e!15341 (not call!1996))))

(declare-fun b!23643 () Bool)

(declare-fun c!3081 () Bool)

(assert (=> b!23643 (= c!3081 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15351 () ListLongMap!553)

(assert (=> b!23643 (= e!15351 e!15345)))

(declare-fun b!23644 () Bool)

(declare-fun e!15347 () ListLongMap!553)

(assert (=> b!23644 (= e!15347 e!15351)))

(assert (=> b!23644 (= c!3084 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!1995 () Bool)

(assert (=> bm!1995 (= call!2000 call!1995)))

(declare-fun b!23645 () Bool)

(assert (=> b!23645 (= e!15349 (= (apply!29 lt!8563 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8162)))))

(declare-fun bm!1996 () Bool)

(assert (=> bm!1996 (= call!1995 call!1999)))

(declare-fun b!23646 () Bool)

(declare-fun e!15352 () Bool)

(assert (=> b!23646 (= e!15343 e!15352)))

(declare-fun res!14506 () Bool)

(assert (=> b!23646 (= res!14506 call!1997)))

(assert (=> b!23646 (=> (not res!14506) (not e!15352))))

(declare-fun d!4063 () Bool)

(assert (=> d!4063 e!15348))

(declare-fun res!14502 () Bool)

(assert (=> d!4063 (=> (not res!14502) (not e!15348))))

(assert (=> d!4063 (= res!14502 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))))

(declare-fun lt!8572 () ListLongMap!553)

(assert (=> d!4063 (= lt!8563 lt!8572)))

(declare-fun lt!8556 () Unit!514)

(assert (=> d!4063 (= lt!8556 e!15353)))

(declare-fun c!3085 () Bool)

(declare-fun e!15346 () Bool)

(assert (=> d!4063 (= c!3085 e!15346)))

(declare-fun res!14503 () Bool)

(assert (=> d!4063 (=> (not res!14503) (not e!15346))))

(assert (=> d!4063 (= res!14503 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4063 (= lt!8572 e!15347)))

(assert (=> d!4063 (= c!3083 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4063 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4063 (= (getCurrentListMap!121 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!8563)))

(declare-fun bm!1991 () Bool)

(assert (=> bm!1991 (= call!1997 (contains!220 lt!8563 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1997 () Bool)

(assert (=> bm!1997 (= call!1996 (contains!220 lt!8563 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23647 () Bool)

(assert (=> b!23647 (= e!15352 (= (apply!29 lt!8563 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8162)))))

(declare-fun b!23648 () Bool)

(declare-fun res!14501 () Bool)

(assert (=> b!23648 (=> (not res!14501) (not e!15348))))

(assert (=> b!23648 (= res!14501 e!15342)))

(declare-fun res!14500 () Bool)

(assert (=> b!23648 (=> res!14500 e!15342)))

(declare-fun e!15344 () Bool)

(assert (=> b!23648 (= res!14500 (not e!15344))))

(declare-fun res!14505 () Bool)

(assert (=> b!23648 (=> (not res!14505) (not e!15344))))

(assert (=> b!23648 (= res!14505 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23649 () Bool)

(assert (=> b!23649 (= e!15346 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!23650 () Bool)

(assert (=> b!23650 (= e!15348 e!15341)))

(declare-fun c!3082 () Bool)

(assert (=> b!23650 (= c!3082 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23651 () Bool)

(assert (=> b!23651 (= e!15350 (= (apply!29 lt!8563 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23651 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite c!3011 (_values!1729 lt!8162) lt!8288))))))

(assert (=> b!23651 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23652 () Bool)

(assert (=> b!23652 (= e!15345 call!1994)))

(declare-fun b!23653 () Bool)

(assert (=> b!23653 (= e!15347 (+!45 call!1998 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(declare-fun b!23654 () Bool)

(assert (=> b!23654 (= e!15351 call!1994)))

(declare-fun b!23655 () Bool)

(assert (=> b!23655 (= e!15344 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4063 c!3083) b!23653))

(assert (= (and d!4063 (not c!3083)) b!23644))

(assert (= (and b!23644 c!3084) b!23654))

(assert (= (and b!23644 (not c!3084)) b!23643))

(assert (= (and b!23643 c!3081) b!23652))

(assert (= (and b!23643 (not c!3081)) b!23635))

(assert (= (or b!23652 b!23635) bm!1995))

(assert (= (or b!23654 bm!1995) bm!1996))

(assert (= (or b!23654 b!23652) bm!1993))

(assert (= (or b!23653 bm!1996) bm!1992))

(assert (= (or b!23653 bm!1993) bm!1994))

(assert (= (and d!4063 res!14503) b!23649))

(assert (= (and d!4063 c!3085) b!23639))

(assert (= (and d!4063 (not c!3085)) b!23641))

(assert (= (and d!4063 res!14502) b!23648))

(assert (= (and b!23648 res!14505) b!23655))

(assert (= (and b!23648 (not res!14500)) b!23637))

(assert (= (and b!23637 res!14504) b!23651))

(assert (= (and b!23648 res!14501) b!23636))

(assert (= (and b!23636 c!3080) b!23646))

(assert (= (and b!23636 (not c!3080)) b!23640))

(assert (= (and b!23646 res!14506) b!23647))

(assert (= (or b!23646 b!23640) bm!1991))

(assert (= (and b!23636 res!14508) b!23650))

(assert (= (and b!23650 c!3082) b!23638))

(assert (= (and b!23650 (not c!3082)) b!23642))

(assert (= (and b!23638 res!14507) b!23645))

(assert (= (or b!23638 b!23642) bm!1997))

(declare-fun b_lambda!1593 () Bool)

(assert (=> (not b_lambda!1593) (not b!23651)))

(assert (=> b!23651 t!3243))

(declare-fun b_and!1497 () Bool)

(assert (= b_and!1495 (and (=> t!3243 result!1103) b_and!1497)))

(declare-fun m!17296 () Bool)

(assert (=> bm!1991 m!17296))

(declare-fun m!17298 () Bool)

(assert (=> b!23645 m!17298))

(declare-fun m!17300 () Bool)

(assert (=> bm!1997 m!17300))

(declare-fun m!17302 () Bool)

(assert (=> bm!1994 m!17302))

(declare-fun m!17304 () Bool)

(assert (=> b!23653 m!17304))

(assert (=> b!23637 m!17154))

(assert (=> b!23637 m!17154))

(declare-fun m!17306 () Bool)

(assert (=> b!23637 m!17306))

(assert (=> b!23655 m!17154))

(assert (=> b!23655 m!17154))

(assert (=> b!23655 m!17158))

(assert (=> b!23649 m!17154))

(assert (=> b!23649 m!17154))

(assert (=> b!23649 m!17158))

(declare-fun m!17308 () Bool)

(assert (=> bm!1992 m!17308))

(declare-fun m!17310 () Bool)

(assert (=> b!23639 m!17310))

(declare-fun m!17312 () Bool)

(assert (=> b!23639 m!17312))

(declare-fun m!17314 () Bool)

(assert (=> b!23639 m!17314))

(declare-fun m!17316 () Bool)

(assert (=> b!23639 m!17316))

(assert (=> b!23639 m!17314))

(declare-fun m!17318 () Bool)

(assert (=> b!23639 m!17318))

(declare-fun m!17320 () Bool)

(assert (=> b!23639 m!17320))

(declare-fun m!17322 () Bool)

(assert (=> b!23639 m!17322))

(assert (=> b!23639 m!17308))

(declare-fun m!17324 () Bool)

(assert (=> b!23639 m!17324))

(declare-fun m!17326 () Bool)

(assert (=> b!23639 m!17326))

(declare-fun m!17328 () Bool)

(assert (=> b!23639 m!17328))

(declare-fun m!17330 () Bool)

(assert (=> b!23639 m!17330))

(declare-fun m!17332 () Bool)

(assert (=> b!23639 m!17332))

(assert (=> b!23639 m!17332))

(declare-fun m!17334 () Bool)

(assert (=> b!23639 m!17334))

(assert (=> b!23639 m!17322))

(declare-fun m!17336 () Bool)

(assert (=> b!23639 m!17336))

(assert (=> b!23639 m!17154))

(assert (=> b!23639 m!17330))

(declare-fun m!17338 () Bool)

(assert (=> b!23639 m!17338))

(declare-fun m!17340 () Bool)

(assert (=> b!23647 m!17340))

(assert (=> b!23651 m!17194))

(declare-fun m!17342 () Bool)

(assert (=> b!23651 m!17342))

(assert (=> b!23651 m!17194))

(declare-fun m!17344 () Bool)

(assert (=> b!23651 m!17344))

(assert (=> b!23651 m!17154))

(declare-fun m!17346 () Bool)

(assert (=> b!23651 m!17346))

(assert (=> b!23651 m!17342))

(assert (=> b!23651 m!17154))

(assert (=> d!4063 m!17072))

(assert (=> bm!1938 d!4063))

(declare-fun d!4065 () Bool)

(assert (=> d!4065 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8576 () Unit!514)

(assert (=> d!4065 (= lt!8576 (choose!206 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8265 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) (defaultEntry!1743 lt!8162)))))

(assert (=> d!4065 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4065 (= (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8265 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) (defaultEntry!1743 lt!8162)) lt!8576)))

(declare-fun bs!952 () Bool)

(assert (= bs!952 d!4065))

(assert (=> bs!952 m!17072))

(assert (=> bs!952 m!16888))

(declare-fun m!17348 () Bool)

(assert (=> bs!952 m!17348))

(assert (=> bs!952 m!16888))

(assert (=> bs!952 m!17080))

(declare-fun m!17350 () Bool)

(assert (=> bs!952 m!17350))

(assert (=> b!23355 d!4065))

(declare-fun d!4067 () Bool)

(declare-fun lt!8581 () tuple2!948)

(assert (=> d!4067 (or (bvsle (_2!481 lt!8581) #b00000000000000000000000000001000) (bvsge (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!481 lt!8581)) (bvslt (bvadd (bvand (bvashr (_2!481 lt!8581) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun e!15356 () tuple2!948)

(assert (=> d!4067 (= lt!8581 e!15356)))

(declare-fun c!3088 () Bool)

(declare-fun lt!8582 () (_ BitVec 32))

(assert (=> d!4067 (= c!3088 (and (bvsgt lt!8582 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8582) (bvsge (bvadd (bvand (bvashr lt!8582 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4067 (= lt!8582 (bvlshr (_2!481 lt!8365) #b00000000000000000000000000000001))))

(assert (=> d!4067 (and (bvsgt (_2!481 lt!8365) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!481 lt!8365)) (bvsge (bvadd (bvand (bvashr (_2!481 lt!8365) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4067 (= (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) (_2!481 lt!8365)) lt!8581)))

(declare-fun b!23660 () Bool)

(assert (=> b!23660 (= e!15356 (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) lt!8582))))

(declare-fun b!23661 () Bool)

(declare-fun Unit!534 () Unit!514)

(assert (=> b!23661 (= e!15356 (tuple2!949 Unit!534 lt!8582))))

(assert (= (and d!4067 c!3088) b!23660))

(assert (= (and d!4067 (not c!3088)) b!23661))

(declare-fun m!17353 () Bool)

(assert (=> b!23660 m!17353))

(assert (=> b!23421 d!4067))

(declare-fun d!4069 () Bool)

(assert (=> d!4069 (= (map!410 (ite c!2948 (_2!476 lt!8164) lt!8162)) (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bs!953 () Bool)

(assert (= bs!953 d!4069))

(assert (=> bs!953 m!16828))

(assert (=> bm!1923 d!4069))

(declare-fun d!4071 () Bool)

(assert (=> d!4071 (= (map!410 lt!8355) (getCurrentListMap!121 (_keys!3164 lt!8355) (_values!1729 lt!8355) (mask!4730 lt!8355) (extraKeys!1641 lt!8355) (zeroValue!1666 lt!8355) (minValue!1666 lt!8355) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8355)))))

(declare-fun bs!954 () Bool)

(assert (= bs!954 d!4071))

(declare-fun m!17355 () Bool)

(assert (=> bs!954 m!17355))

(assert (=> b!23407 d!4071))

(declare-fun b!23678 () Bool)

(declare-fun lt!8587 () SeekEntryResult!59)

(assert (=> b!23678 (and (bvsge (index!2357 lt!8587) #b00000000000000000000000000000000) (bvslt (index!2357 lt!8587) (size!700 (_keys!3164 lt!8162))))))

(declare-fun res!14517 () Bool)

(assert (=> b!23678 (= res!14517 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2357 lt!8587)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15366 () Bool)

(assert (=> b!23678 (=> (not res!14517) (not e!15366))))

(declare-fun b!23679 () Bool)

(declare-fun call!2005 () Bool)

(assert (=> b!23679 (= e!15366 (not call!2005))))

(declare-fun b!23680 () Bool)

(declare-fun e!15365 () Bool)

(declare-fun e!15368 () Bool)

(assert (=> b!23680 (= e!15365 e!15368)))

(declare-fun c!3094 () Bool)

(assert (=> b!23680 (= c!3094 ((_ is MissingVacant!59) lt!8587))))

(declare-fun b!23681 () Bool)

(declare-fun res!14519 () Bool)

(declare-fun e!15367 () Bool)

(assert (=> b!23681 (=> (not res!14519) (not e!15367))))

(declare-fun call!2006 () Bool)

(assert (=> b!23681 (= res!14519 call!2006)))

(assert (=> b!23681 (= e!15368 e!15367)))

(declare-fun bm!2002 () Bool)

(declare-fun c!3093 () Bool)

(assert (=> bm!2002 (= call!2006 (inRange!0 (ite c!3093 (index!2357 lt!8587) (index!2360 lt!8587)) (mask!4730 lt!8162)))))

(declare-fun b!23682 () Bool)

(declare-fun res!14520 () Bool)

(assert (=> b!23682 (=> (not res!14520) (not e!15367))))

(assert (=> b!23682 (= res!14520 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2360 lt!8587)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23682 (and (bvsge (index!2360 lt!8587) #b00000000000000000000000000000000) (bvslt (index!2360 lt!8587) (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23683 () Bool)

(assert (=> b!23683 (= e!15367 (not call!2005))))

(declare-fun bm!2003 () Bool)

(assert (=> bm!2003 (= call!2005 (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun d!4073 () Bool)

(assert (=> d!4073 e!15365))

(assert (=> d!4073 (= c!3093 ((_ is MissingZero!59) lt!8587))))

(assert (=> d!4073 (= lt!8587 (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun lt!8588 () Unit!514)

(declare-fun choose!210 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!514)

(assert (=> d!4073 (= lt!8588 (choose!210 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> d!4073 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4073 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!8588)))

(declare-fun b!23684 () Bool)

(assert (=> b!23684 (= e!15368 ((_ is Undefined!59) lt!8587))))

(declare-fun b!23685 () Bool)

(assert (=> b!23685 (= e!15365 e!15366)))

(declare-fun res!14518 () Bool)

(assert (=> b!23685 (= res!14518 call!2006)))

(assert (=> b!23685 (=> (not res!14518) (not e!15366))))

(assert (= (and d!4073 c!3093) b!23685))

(assert (= (and d!4073 (not c!3093)) b!23680))

(assert (= (and b!23685 res!14518) b!23678))

(assert (= (and b!23678 res!14517) b!23679))

(assert (= (and b!23680 c!3094) b!23681))

(assert (= (and b!23680 (not c!3094)) b!23684))

(assert (= (and b!23681 res!14519) b!23682))

(assert (= (and b!23682 res!14520) b!23683))

(assert (= (or b!23685 b!23681) bm!2002))

(assert (= (or b!23679 b!23683) bm!2003))

(assert (=> d!4073 m!16872))

(declare-fun m!17357 () Bool)

(assert (=> d!4073 m!17357))

(assert (=> d!4073 m!17072))

(declare-fun m!17359 () Bool)

(assert (=> b!23678 m!17359))

(declare-fun m!17361 () Bool)

(assert (=> bm!2002 m!17361))

(declare-fun m!17363 () Bool)

(assert (=> b!23682 m!17363))

(assert (=> bm!2003 m!16904))

(assert (=> bm!1934 d!4073))

(declare-fun d!4075 () Bool)

(assert (=> d!4075 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8591 () Unit!514)

(declare-fun choose!211 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!514)

(assert (=> d!4075 (= lt!8591 (choose!211 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)))))

(assert (=> d!4075 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4075 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)) lt!8591)))

(declare-fun bs!955 () Bool)

(assert (= bs!955 d!4075))

(declare-fun m!17365 () Bool)

(assert (=> bs!955 m!17365))

(declare-fun m!17367 () Bool)

(assert (=> bs!955 m!17367))

(assert (=> bs!955 m!16888))

(declare-fun m!17369 () Bool)

(assert (=> bs!955 m!17369))

(assert (=> bs!955 m!17072))

(assert (=> bs!955 m!16888))

(assert (=> b!23371 d!4075))

(declare-fun d!4077 () Bool)

(assert (=> d!4077 (= (map!410 (_2!476 lt!8291)) (getCurrentListMap!121 (_keys!3164 (_2!476 lt!8291)) (_values!1729 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291)) (extraKeys!1641 (_2!476 lt!8291)) (zeroValue!1666 (_2!476 lt!8291)) (minValue!1666 (_2!476 lt!8291)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8291))))))

(declare-fun bs!956 () Bool)

(assert (= bs!956 d!4077))

(declare-fun m!17371 () Bool)

(assert (=> bs!956 m!17371))

(assert (=> bm!1937 d!4077))

(declare-fun b!23720 () Bool)

(declare-fun res!14541 () Bool)

(declare-fun e!15386 () Bool)

(assert (=> b!23720 (=> (not res!14541) (not e!15386))))

(declare-fun call!2018 () Bool)

(assert (=> b!23720 (= res!14541 call!2018)))

(declare-fun e!15385 () Bool)

(assert (=> b!23720 (= e!15385 e!15386)))

(declare-fun b!23721 () Bool)

(declare-fun e!15391 () Unit!514)

(declare-fun Unit!535 () Unit!514)

(assert (=> b!23721 (= e!15391 Unit!535)))

(declare-fun lt!8681 () Unit!514)

(declare-fun lemmaArrayContainsKeyThenInListMap!3 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) (_ BitVec 32) Int) Unit!514)

(assert (=> b!23721 (= lt!8681 (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> b!23721 (contains!220 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!8652 () Unit!514)

(assert (=> b!23721 (= lt!8652 lt!8681)))

(assert (=> b!23721 false))

(declare-fun b!23722 () Bool)

(declare-fun e!15392 () Bool)

(declare-fun call!2015 () Bool)

(assert (=> b!23722 (= e!15392 (not call!2015))))

(declare-fun b!23723 () Bool)

(declare-fun res!14539 () Bool)

(declare-fun e!15390 () Bool)

(assert (=> b!23723 (=> (not res!14539) (not e!15390))))

(declare-fun lt!8656 () tuple2!938)

(assert (=> b!23723 (= res!14539 (contains!220 (map!410 (_2!476 lt!8656)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!2017 () Bool)

(declare-fun bm!2012 () Bool)

(declare-fun c!3105 () Bool)

(declare-fun c!3103 () Bool)

(declare-fun lt!8669 () SeekEntryResult!59)

(declare-fun lt!8678 () SeekEntryResult!59)

(assert (=> bm!2012 (= call!2017 (inRange!0 (ite c!3103 (index!2358 lt!8678) (ite c!3105 (index!2357 lt!8669) (index!2360 lt!8669))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23724 () Bool)

(declare-fun e!15388 () Unit!514)

(declare-fun Unit!536 () Unit!514)

(assert (=> b!23724 (= e!15388 Unit!536)))

(declare-fun lt!8654 () Unit!514)

(assert (=> b!23724 (= lt!8654 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun call!2016 () SeekEntryResult!59)

(assert (=> b!23724 (= lt!8678 call!2016)))

(declare-fun res!14546 () Bool)

(assert (=> b!23724 (= res!14546 ((_ is Found!59) lt!8678))))

(declare-fun e!15389 () Bool)

(assert (=> b!23724 (=> (not res!14546) (not e!15389))))

(assert (=> b!23724 e!15389))

(declare-fun lt!8679 () Unit!514)

(assert (=> b!23724 (= lt!8679 lt!8654)))

(assert (=> b!23724 false))

(declare-fun b!23725 () Bool)

(assert (=> b!23725 (= e!15390 (= (map!410 (_2!476 lt!8656)) (+!45 (map!410 (ite c!2948 (_2!476 lt!8164) lt!8162)) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun bm!2013 () Bool)

(assert (=> bm!2013 (= call!2018 call!2017)))

(declare-fun b!23726 () Bool)

(assert (=> b!23726 (= e!15386 (not call!2015))))

(declare-fun b!23727 () Bool)

(declare-fun res!14542 () Bool)

(assert (=> b!23727 (= res!14542 call!2017)))

(assert (=> b!23727 (=> (not res!14542) (not e!15389))))

(declare-fun b!23728 () Bool)

(declare-fun lt!8674 () Unit!514)

(assert (=> b!23728 (= e!15388 lt!8674)))

(assert (=> b!23728 (= lt!8674 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> b!23728 (= lt!8669 call!2016)))

(assert (=> b!23728 (= c!3105 ((_ is MissingZero!59) lt!8669))))

(assert (=> b!23728 e!15385))

(declare-fun bm!2014 () Bool)

(assert (=> bm!2014 (= call!2015 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000))))

(declare-fun bm!2015 () Bool)

(assert (=> bm!2015 (= call!2016 (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23729 () Bool)

(declare-fun Unit!537 () Unit!514)

(assert (=> b!23729 (= e!15391 Unit!537)))

(declare-fun b!23730 () Bool)

(declare-fun e!15387 () Bool)

(assert (=> b!23730 (= e!15387 ((_ is Undefined!59) lt!8669))))

(declare-fun b!23731 () Bool)

(declare-fun c!3106 () Bool)

(assert (=> b!23731 (= c!3106 ((_ is MissingVacant!59) lt!8669))))

(assert (=> b!23731 (= e!15385 e!15387)))

(declare-fun b!23733 () Bool)

(declare-fun res!14544 () Bool)

(assert (=> b!23733 (=> (not res!14544) (not e!15390))))

(assert (=> b!23733 (= res!14544 (valid!109 (_2!476 lt!8656)))))

(declare-fun b!23734 () Bool)

(declare-fun res!14543 () Bool)

(assert (=> b!23734 (=> (not res!14543) (not e!15386))))

(assert (=> b!23734 (= res!14543 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2357 lt!8669)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun res!14545 () Bool)

(declare-fun b!23735 () Bool)

(assert (=> b!23735 (= res!14545 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2360 lt!8669)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23735 (=> (not res!14545) (not e!15392))))

(declare-fun b!23736 () Bool)

(assert (=> b!23736 (= e!15389 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8678)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!23732 () Bool)

(assert (=> b!23732 (= e!15387 e!15392)))

(declare-fun res!14547 () Bool)

(assert (=> b!23732 (= res!14547 call!2018)))

(assert (=> b!23732 (=> (not res!14547) (not e!15392))))

(declare-fun d!4079 () Bool)

(assert (=> d!4079 e!15390))

(declare-fun res!14540 () Bool)

(assert (=> d!4079 (=> (not res!14540) (not e!15390))))

(assert (=> d!4079 (= res!14540 (_1!476 lt!8656))))

(assert (=> d!4079 (= lt!8656 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_vacant!150 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun lt!8672 () Unit!514)

(declare-fun lt!8667 () Unit!514)

(assert (=> d!4079 (= lt!8672 lt!8667)))

(declare-fun lt!8680 () array!1275)

(declare-fun lt!8666 () array!1277)

(assert (=> d!4079 (contains!220 (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (select (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))

(assert (=> d!4079 (= lt!8667 (lemmaValidKeyInArrayIsInListMap!10 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4079 (= lt!8680 (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4079 (= lt!8666 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun lt!8655 () Unit!514)

(declare-fun lt!8658 () Unit!514)

(assert (=> d!4079 (= lt!8655 lt!8658)))

(declare-fun lt!8661 () array!1277)

(assert (=> d!4079 (= (arrayCountValidKeys!0 lt!8661 (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!1277 (_ BitVec 32)) Unit!514)

(assert (=> d!4079 (= lt!8658 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8661 (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))

(assert (=> d!4079 (= lt!8661 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun lt!8676 () Unit!514)

(declare-fun lt!8664 () Unit!514)

(assert (=> d!4079 (= lt!8676 lt!8664)))

(declare-fun lt!8657 () array!1277)

(assert (=> d!4079 (arrayContainsKey!0 lt!8657 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!1277 (_ BitVec 64) (_ BitVec 32)) Unit!514)

(assert (=> d!4079 (= lt!8664 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8657 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))

(assert (=> d!4079 (= lt!8657 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun lt!8671 () Unit!514)

(declare-fun lt!8677 () Unit!514)

(assert (=> d!4079 (= lt!8671 lt!8677)))

(assert (=> d!4079 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!3 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!514)

(assert (=> d!4079 (= lt!8677 (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8662 () Unit!514)

(declare-fun lt!8660 () Unit!514)

(assert (=> d!4079 (= lt!8662 lt!8660)))

(assert (=> d!4079 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!1277 (_ BitVec 32) (_ BitVec 32)) Unit!514)

(assert (=> d!4079 (= lt!8660 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8668 () Unit!514)

(declare-fun lt!8665 () Unit!514)

(assert (=> d!4079 (= lt!8668 lt!8665)))

(assert (=> d!4079 (= (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvadd (arrayCountValidKeys!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!1277 (_ BitVec 32) (_ BitVec 64)) Unit!514)

(assert (=> d!4079 (= lt!8665 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!8673 () Unit!514)

(declare-fun lt!8670 () Unit!514)

(assert (=> d!4079 (= lt!8673 lt!8670)))

(declare-fun lt!8675 () (_ BitVec 32))

(declare-fun lt!8659 () List!566)

(assert (=> d!4079 (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8675 lt!8659)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!1277 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!566) Unit!514)

(assert (=> d!4079 (= lt!8670 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) lt!8675 lt!8659))))

(assert (=> d!4079 (= lt!8659 Nil!563)))

(assert (=> d!4079 (= lt!8675 #b00000000000000000000000000000000)))

(declare-fun lt!8653 () Unit!514)

(assert (=> d!4079 (= lt!8653 e!15391)))

(declare-fun c!3104 () Bool)

(assert (=> d!4079 (= c!3104 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000))))

(declare-fun lt!8663 () Unit!514)

(assert (=> d!4079 (= lt!8663 e!15388)))

(assert (=> d!4079 (= c!3103 (contains!220 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4079 (valid!109 (ite c!2948 (_2!476 lt!8164) lt!8162))))

(assert (=> d!4079 (= (updateHelperNewKey!10 (ite c!2948 (_2!476 lt!8164) lt!8162) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))) lt!8656)))

(assert (= (and d!4079 c!3103) b!23724))

(assert (= (and d!4079 (not c!3103)) b!23728))

(assert (= (and b!23724 res!14546) b!23727))

(assert (= (and b!23727 res!14542) b!23736))

(assert (= (and b!23728 c!3105) b!23720))

(assert (= (and b!23728 (not c!3105)) b!23731))

(assert (= (and b!23720 res!14541) b!23734))

(assert (= (and b!23734 res!14543) b!23726))

(assert (= (and b!23731 c!3106) b!23732))

(assert (= (and b!23731 (not c!3106)) b!23730))

(assert (= (and b!23732 res!14547) b!23735))

(assert (= (and b!23735 res!14545) b!23722))

(assert (= (or b!23720 b!23732) bm!2013))

(assert (= (or b!23726 b!23722) bm!2014))

(assert (= (or b!23727 bm!2013) bm!2012))

(assert (= (or b!23724 b!23728) bm!2015))

(assert (= (and d!4079 c!3104) b!23721))

(assert (= (and d!4079 (not c!3104)) b!23729))

(assert (= (and d!4079 res!14540) b!23733))

(assert (= (and b!23733 res!14544) b!23723))

(assert (= (and b!23723 res!14539) b!23725))

(declare-fun m!17373 () Bool)

(assert (=> d!4079 m!17373))

(declare-fun m!17375 () Bool)

(assert (=> d!4079 m!17375))

(declare-fun m!17377 () Bool)

(assert (=> d!4079 m!17377))

(declare-fun m!17379 () Bool)

(assert (=> d!4079 m!17379))

(declare-fun m!17381 () Bool)

(assert (=> d!4079 m!17381))

(declare-fun m!17383 () Bool)

(assert (=> d!4079 m!17383))

(declare-fun m!17385 () Bool)

(assert (=> d!4079 m!17385))

(declare-fun m!17387 () Bool)

(assert (=> d!4079 m!17387))

(declare-fun m!17389 () Bool)

(assert (=> d!4079 m!17389))

(declare-fun m!17391 () Bool)

(assert (=> d!4079 m!17391))

(assert (=> d!4079 m!17377))

(declare-fun m!17393 () Bool)

(assert (=> d!4079 m!17393))

(declare-fun m!17395 () Bool)

(assert (=> d!4079 m!17395))

(assert (=> d!4079 m!16810))

(declare-fun m!17397 () Bool)

(assert (=> d!4079 m!17397))

(declare-fun m!17399 () Bool)

(assert (=> d!4079 m!17399))

(declare-fun m!17401 () Bool)

(assert (=> d!4079 m!17401))

(declare-fun m!17403 () Bool)

(assert (=> d!4079 m!17403))

(assert (=> d!4079 m!16828))

(declare-fun m!17405 () Bool)

(assert (=> d!4079 m!17405))

(assert (=> d!4079 m!16828))

(declare-fun m!17407 () Bool)

(assert (=> d!4079 m!17407))

(assert (=> d!4079 m!16844))

(assert (=> d!4079 m!16828))

(assert (=> d!4079 m!17100))

(declare-fun m!17409 () Bool)

(assert (=> d!4079 m!17409))

(assert (=> d!4079 m!17375))

(declare-fun m!17411 () Bool)

(assert (=> d!4079 m!17411))

(declare-fun m!17413 () Bool)

(assert (=> b!23735 m!17413))

(declare-fun m!17415 () Bool)

(assert (=> bm!2012 m!17415))

(declare-fun m!17417 () Bool)

(assert (=> b!23721 m!17417))

(assert (=> b!23721 m!16828))

(assert (=> b!23721 m!16828))

(assert (=> b!23721 m!17407))

(declare-fun m!17419 () Bool)

(assert (=> b!23723 m!17419))

(assert (=> b!23723 m!17419))

(declare-fun m!17421 () Bool)

(assert (=> b!23723 m!17421))

(declare-fun m!17423 () Bool)

(assert (=> b!23733 m!17423))

(declare-fun m!17425 () Bool)

(assert (=> b!23734 m!17425))

(assert (=> b!23725 m!17419))

(assert (=> b!23725 m!16830))

(assert (=> b!23725 m!16830))

(declare-fun m!17427 () Bool)

(assert (=> b!23725 m!17427))

(assert (=> bm!2014 m!16844))

(declare-fun m!17429 () Bool)

(assert (=> b!23736 m!17429))

(assert (=> b!23728 m!16840))

(assert (=> b!23724 m!16846))

(assert (=> bm!2015 m!16812))

(assert (=> bm!1917 d!4079))

(declare-fun b!23737 () Bool)

(declare-fun lt!8682 () SeekEntryResult!59)

(assert (=> b!23737 (and (bvsge (index!2357 lt!8682) #b00000000000000000000000000000000) (bvslt (index!2357 lt!8682) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun res!14548 () Bool)

(assert (=> b!23737 (= res!14548 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2357 lt!8682)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15394 () Bool)

(assert (=> b!23737 (=> (not res!14548) (not e!15394))))

(declare-fun b!23738 () Bool)

(declare-fun call!2019 () Bool)

(assert (=> b!23738 (= e!15394 (not call!2019))))

(declare-fun b!23739 () Bool)

(declare-fun e!15393 () Bool)

(declare-fun e!15396 () Bool)

(assert (=> b!23739 (= e!15393 e!15396)))

(declare-fun c!3108 () Bool)

(assert (=> b!23739 (= c!3108 ((_ is MissingVacant!59) lt!8682))))

(declare-fun b!23740 () Bool)

(declare-fun res!14550 () Bool)

(declare-fun e!15395 () Bool)

(assert (=> b!23740 (=> (not res!14550) (not e!15395))))

(declare-fun call!2020 () Bool)

(assert (=> b!23740 (= res!14550 call!2020)))

(assert (=> b!23740 (= e!15396 e!15395)))

(declare-fun c!3107 () Bool)

(declare-fun bm!2016 () Bool)

(assert (=> bm!2016 (= call!2020 (inRange!0 (ite c!3107 (index!2357 lt!8682) (index!2360 lt!8682)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23741 () Bool)

(declare-fun res!14551 () Bool)

(assert (=> b!23741 (=> (not res!14551) (not e!15395))))

(assert (=> b!23741 (= res!14551 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2360 lt!8682)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23741 (and (bvsge (index!2360 lt!8682) #b00000000000000000000000000000000) (bvslt (index!2360 lt!8682) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23742 () Bool)

(assert (=> b!23742 (= e!15395 (not call!2019))))

(declare-fun bm!2017 () Bool)

(assert (=> bm!2017 (= call!2019 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000))))

(declare-fun d!4081 () Bool)

(assert (=> d!4081 e!15393))

(assert (=> d!4081 (= c!3107 ((_ is MissingZero!59) lt!8682))))

(assert (=> d!4081 (= lt!8682 (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8683 () Unit!514)

(assert (=> d!4081 (= lt!8683 (choose!210 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4081 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4081 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8683)))

(declare-fun b!23743 () Bool)

(assert (=> b!23743 (= e!15396 ((_ is Undefined!59) lt!8682))))

(declare-fun b!23744 () Bool)

(assert (=> b!23744 (= e!15393 e!15394)))

(declare-fun res!14549 () Bool)

(assert (=> b!23744 (= res!14549 call!2020)))

(assert (=> b!23744 (=> (not res!14549) (not e!15394))))

(assert (= (and d!4081 c!3107) b!23744))

(assert (= (and d!4081 (not c!3107)) b!23739))

(assert (= (and b!23744 res!14549) b!23737))

(assert (= (and b!23737 res!14548) b!23738))

(assert (= (and b!23739 c!3108) b!23740))

(assert (= (and b!23739 (not c!3108)) b!23743))

(assert (= (and b!23740 res!14550) b!23741))

(assert (= (and b!23741 res!14551) b!23742))

(assert (= (or b!23744 b!23740) bm!2016))

(assert (= (or b!23738 b!23742) bm!2017))

(assert (=> d!4081 m!16812))

(declare-fun m!17431 () Bool)

(assert (=> d!4081 m!17431))

(assert (=> d!4081 m!16948))

(declare-fun m!17433 () Bool)

(assert (=> b!23737 m!17433))

(declare-fun m!17435 () Bool)

(assert (=> bm!2016 m!17435))

(declare-fun m!17437 () Bool)

(assert (=> b!23741 m!17437))

(assert (=> bm!2017 m!16844))

(assert (=> bm!1910 d!4081))

(declare-fun d!4083 () Bool)

(assert (=> d!4083 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8684 () Unit!514)

(assert (=> d!4083 (= lt!8684 (choose!211 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4083 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4083 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8684)))

(declare-fun bs!957 () Bool)

(assert (= bs!957 d!4083))

(declare-fun m!17439 () Bool)

(assert (=> bs!957 m!17439))

(declare-fun m!17441 () Bool)

(assert (=> bs!957 m!17441))

(assert (=> bs!957 m!16828))

(declare-fun m!17443 () Bool)

(assert (=> bs!957 m!17443))

(assert (=> bs!957 m!16948))

(assert (=> bs!957 m!16828))

(assert (=> b!23329 d!4083))

(declare-fun d!4085 () Bool)

(declare-fun res!14552 () Bool)

(declare-fun e!15397 () Bool)

(assert (=> d!4085 (=> (not res!14552) (not e!15397))))

(assert (=> d!4085 (= res!14552 (simpleValid!19 (_2!476 lt!8264)))))

(assert (=> d!4085 (= (valid!109 (_2!476 lt!8264)) e!15397)))

(declare-fun b!23745 () Bool)

(declare-fun res!14553 () Bool)

(assert (=> b!23745 (=> (not res!14553) (not e!15397))))

(assert (=> b!23745 (= res!14553 (= (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8264)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))) (_size!150 (_2!476 lt!8264))))))

(declare-fun b!23746 () Bool)

(declare-fun res!14554 () Bool)

(assert (=> b!23746 (=> (not res!14554) (not e!15397))))

(assert (=> b!23746 (= res!14554 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264))))))

(declare-fun b!23747 () Bool)

(assert (=> b!23747 (= e!15397 (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8264)) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4085 res!14552) b!23745))

(assert (= (and b!23745 res!14553) b!23746))

(assert (= (and b!23746 res!14554) b!23747))

(declare-fun m!17445 () Bool)

(assert (=> d!4085 m!17445))

(declare-fun m!17447 () Bool)

(assert (=> b!23745 m!17447))

(declare-fun m!17449 () Bool)

(assert (=> b!23746 m!17449))

(declare-fun m!17451 () Bool)

(assert (=> b!23747 m!17451))

(assert (=> d!3993 d!4085))

(declare-fun d!4087 () Bool)

(declare-fun res!14555 () Bool)

(declare-fun e!15398 () Bool)

(assert (=> d!4087 (=> (not res!14555) (not e!15398))))

(assert (=> d!4087 (= res!14555 (simpleValid!19 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4087 (= (valid!109 (ite c!2948 (_2!476 lt!8164) lt!8162)) e!15398)))

(declare-fun b!23748 () Bool)

(declare-fun res!14556 () Bool)

(assert (=> b!23748 (=> (not res!14556) (not e!15398))))

(assert (=> b!23748 (= res!14556 (= (arrayCountValidKeys!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23749 () Bool)

(declare-fun res!14557 () Bool)

(assert (=> b!23749 (=> (not res!14557) (not e!15398))))

(assert (=> b!23749 (= res!14557 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23750 () Bool)

(assert (=> b!23750 (= e!15398 (arrayNoDuplicates!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4087 res!14555) b!23748))

(assert (= (and b!23748 res!14556) b!23749))

(assert (= (and b!23749 res!14557) b!23750))

(declare-fun m!17453 () Bool)

(assert (=> d!4087 m!17453))

(assert (=> b!23748 m!17391))

(declare-fun m!17455 () Bool)

(assert (=> b!23749 m!17455))

(declare-fun m!17457 () Bool)

(assert (=> b!23750 m!17457))

(assert (=> d!3993 d!4087))

(declare-fun b!23751 () Bool)

(declare-fun e!15403 () ListLongMap!553)

(declare-fun call!2027 () ListLongMap!553)

(assert (=> b!23751 (= e!15403 call!2027)))

(declare-fun b!23752 () Bool)

(declare-fun res!14566 () Bool)

(declare-fun e!15406 () Bool)

(assert (=> b!23752 (=> (not res!14566) (not e!15406))))

(declare-fun e!15401 () Bool)

(assert (=> b!23752 (= res!14566 e!15401)))

(declare-fun c!3109 () Bool)

(assert (=> b!23752 (= c!3109 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23753 () Bool)

(declare-fun e!15400 () Bool)

(declare-fun e!15408 () Bool)

(assert (=> b!23753 (= e!15400 e!15408)))

(declare-fun res!14562 () Bool)

(assert (=> b!23753 (=> (not res!14562) (not e!15408))))

(declare-fun lt!8694 () ListLongMap!553)

(assert (=> b!23753 (= res!14562 (contains!220 lt!8694 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!23753 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23754 () Bool)

(declare-fun e!15399 () Bool)

(declare-fun e!15407 () Bool)

(assert (=> b!23754 (= e!15399 e!15407)))

(declare-fun res!14565 () Bool)

(declare-fun call!2023 () Bool)

(assert (=> b!23754 (= res!14565 call!2023)))

(assert (=> b!23754 (=> (not res!14565) (not e!15407))))

(declare-fun b!23755 () Bool)

(declare-fun e!15411 () Unit!514)

(declare-fun lt!8685 () Unit!514)

(assert (=> b!23755 (= e!15411 lt!8685)))

(declare-fun lt!8690 () ListLongMap!553)

(assert (=> b!23755 (= lt!8690 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8701 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8701 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8702 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8702 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8705 () Unit!514)

(assert (=> b!23755 (= lt!8705 (addStillContains!14 lt!8690 lt!8701 (zeroValue!1666 lt!8162) lt!8702))))

(assert (=> b!23755 (contains!220 (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))) lt!8702)))

(declare-fun lt!8699 () Unit!514)

(assert (=> b!23755 (= lt!8699 lt!8705)))

(declare-fun lt!8692 () ListLongMap!553)

(assert (=> b!23755 (= lt!8692 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8688 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8688 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8695 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8695 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8698 () Unit!514)

(assert (=> b!23755 (= lt!8698 (addApplyDifferent!14 lt!8692 lt!8688 (minValue!1666 lt!8162) lt!8695))))

(assert (=> b!23755 (= (apply!29 (+!45 lt!8692 (tuple2!947 lt!8688 (minValue!1666 lt!8162))) lt!8695) (apply!29 lt!8692 lt!8695))))

(declare-fun lt!8689 () Unit!514)

(assert (=> b!23755 (= lt!8689 lt!8698)))

(declare-fun lt!8693 () ListLongMap!553)

(assert (=> b!23755 (= lt!8693 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8696 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8696 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8691 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8691 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!8697 () Unit!514)

(assert (=> b!23755 (= lt!8697 (addApplyDifferent!14 lt!8693 lt!8696 (zeroValue!1666 lt!8162) lt!8691))))

(assert (=> b!23755 (= (apply!29 (+!45 lt!8693 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))) lt!8691) (apply!29 lt!8693 lt!8691))))

(declare-fun lt!8706 () Unit!514)

(assert (=> b!23755 (= lt!8706 lt!8697)))

(declare-fun lt!8700 () ListLongMap!553)

(assert (=> b!23755 (= lt!8700 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8686 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8686 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8704 () (_ BitVec 64))

(assert (=> b!23755 (= lt!8704 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!23755 (= lt!8685 (addApplyDifferent!14 lt!8700 lt!8686 (minValue!1666 lt!8162) lt!8704))))

(assert (=> b!23755 (= (apply!29 (+!45 lt!8700 (tuple2!947 lt!8686 (minValue!1666 lt!8162))) lt!8704) (apply!29 lt!8700 lt!8704))))

(declare-fun bm!2019 () Bool)

(declare-fun call!2026 () ListLongMap!553)

(assert (=> bm!2019 (= call!2026 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!23756 () Bool)

(declare-fun call!2024 () Bool)

(assert (=> b!23756 (= e!15401 (not call!2024))))

(declare-fun bm!2020 () Bool)

(declare-fun call!2021 () ListLongMap!553)

(declare-fun call!2025 () ListLongMap!553)

(assert (=> bm!2020 (= call!2021 call!2025)))

(declare-fun c!3112 () Bool)

(declare-fun bm!2021 () Bool)

(declare-fun call!2022 () ListLongMap!553)

(declare-fun c!3113 () Bool)

(assert (=> bm!2021 (= call!2025 (+!45 (ite c!3112 call!2026 (ite c!3113 call!2022 call!2027)) (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun b!23757 () Bool)

(declare-fun Unit!538 () Unit!514)

(assert (=> b!23757 (= e!15411 Unit!538)))

(declare-fun b!23758 () Bool)

(assert (=> b!23758 (= e!15399 (not call!2023))))

(declare-fun b!23759 () Bool)

(declare-fun c!3110 () Bool)

(assert (=> b!23759 (= c!3110 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15409 () ListLongMap!553)

(assert (=> b!23759 (= e!15409 e!15403)))

(declare-fun b!23760 () Bool)

(declare-fun e!15405 () ListLongMap!553)

(assert (=> b!23760 (= e!15405 e!15409)))

(assert (=> b!23760 (= c!3113 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2022 () Bool)

(assert (=> bm!2022 (= call!2027 call!2022)))

(declare-fun b!23761 () Bool)

(assert (=> b!23761 (= e!15407 (= (apply!29 lt!8694 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8162)))))

(declare-fun bm!2023 () Bool)

(assert (=> bm!2023 (= call!2022 call!2026)))

(declare-fun b!23762 () Bool)

(declare-fun e!15410 () Bool)

(assert (=> b!23762 (= e!15401 e!15410)))

(declare-fun res!14564 () Bool)

(assert (=> b!23762 (= res!14564 call!2024)))

(assert (=> b!23762 (=> (not res!14564) (not e!15410))))

(declare-fun d!4089 () Bool)

(assert (=> d!4089 e!15406))

(declare-fun res!14560 () Bool)

(assert (=> d!4089 (=> (not res!14560) (not e!15406))))

(assert (=> d!4089 (= res!14560 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))))

(declare-fun lt!8703 () ListLongMap!553)

(assert (=> d!4089 (= lt!8694 lt!8703)))

(declare-fun lt!8687 () Unit!514)

(assert (=> d!4089 (= lt!8687 e!15411)))

(declare-fun c!3114 () Bool)

(declare-fun e!15404 () Bool)

(assert (=> d!4089 (= c!3114 e!15404)))

(declare-fun res!14561 () Bool)

(assert (=> d!4089 (=> (not res!14561) (not e!15404))))

(assert (=> d!4089 (= res!14561 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4089 (= lt!8703 e!15405)))

(assert (=> d!4089 (= c!3112 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4089 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4089 (= (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!8694)))

(declare-fun bm!2018 () Bool)

(assert (=> bm!2018 (= call!2024 (contains!220 lt!8694 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2024 () Bool)

(assert (=> bm!2024 (= call!2023 (contains!220 lt!8694 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23763 () Bool)

(assert (=> b!23763 (= e!15410 (= (apply!29 lt!8694 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8162)))))

(declare-fun b!23764 () Bool)

(declare-fun res!14559 () Bool)

(assert (=> b!23764 (=> (not res!14559) (not e!15406))))

(assert (=> b!23764 (= res!14559 e!15400)))

(declare-fun res!14558 () Bool)

(assert (=> b!23764 (=> res!14558 e!15400)))

(declare-fun e!15402 () Bool)

(assert (=> b!23764 (= res!14558 (not e!15402))))

(declare-fun res!14563 () Bool)

(assert (=> b!23764 (=> (not res!14563) (not e!15402))))

(assert (=> b!23764 (= res!14563 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23765 () Bool)

(assert (=> b!23765 (= e!15404 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!23766 () Bool)

(assert (=> b!23766 (= e!15406 e!15399)))

(declare-fun c!3111 () Bool)

(assert (=> b!23766 (= c!3111 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23767 () Bool)

(assert (=> b!23767 (= e!15408 (= (apply!29 lt!8694 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 lt!8162))))))

(assert (=> b!23767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!23768 () Bool)

(assert (=> b!23768 (= e!15403 call!2021)))

(declare-fun b!23769 () Bool)

(assert (=> b!23769 (= e!15405 (+!45 call!2025 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(declare-fun b!23770 () Bool)

(assert (=> b!23770 (= e!15409 call!2021)))

(declare-fun b!23771 () Bool)

(assert (=> b!23771 (= e!15402 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4089 c!3112) b!23769))

(assert (= (and d!4089 (not c!3112)) b!23760))

(assert (= (and b!23760 c!3113) b!23770))

(assert (= (and b!23760 (not c!3113)) b!23759))

(assert (= (and b!23759 c!3110) b!23768))

(assert (= (and b!23759 (not c!3110)) b!23751))

(assert (= (or b!23768 b!23751) bm!2022))

(assert (= (or b!23770 bm!2022) bm!2023))

(assert (= (or b!23770 b!23768) bm!2020))

(assert (= (or b!23769 bm!2023) bm!2019))

(assert (= (or b!23769 bm!2020) bm!2021))

(assert (= (and d!4089 res!14561) b!23765))

(assert (= (and d!4089 c!3114) b!23755))

(assert (= (and d!4089 (not c!3114)) b!23757))

(assert (= (and d!4089 res!14560) b!23764))

(assert (= (and b!23764 res!14563) b!23771))

(assert (= (and b!23764 (not res!14558)) b!23753))

(assert (= (and b!23753 res!14562) b!23767))

(assert (= (and b!23764 res!14559) b!23752))

(assert (= (and b!23752 c!3109) b!23762))

(assert (= (and b!23752 (not c!3109)) b!23756))

(assert (= (and b!23762 res!14564) b!23763))

(assert (= (or b!23762 b!23756) bm!2018))

(assert (= (and b!23752 res!14566) b!23766))

(assert (= (and b!23766 c!3111) b!23754))

(assert (= (and b!23766 (not c!3111)) b!23758))

(assert (= (and b!23754 res!14565) b!23761))

(assert (= (or b!23754 b!23758) bm!2024))

(declare-fun b_lambda!1595 () Bool)

(assert (=> (not b_lambda!1595) (not b!23767)))

(assert (=> b!23767 t!3243))

(declare-fun b_and!1499 () Bool)

(assert (= b_and!1497 (and (=> t!3243 result!1103) b_and!1499)))

(declare-fun m!17459 () Bool)

(assert (=> bm!2018 m!17459))

(declare-fun m!17461 () Bool)

(assert (=> b!23761 m!17461))

(declare-fun m!17463 () Bool)

(assert (=> bm!2024 m!17463))

(declare-fun m!17465 () Bool)

(assert (=> bm!2021 m!17465))

(declare-fun m!17467 () Bool)

(assert (=> b!23769 m!17467))

(assert (=> b!23753 m!17154))

(assert (=> b!23753 m!17154))

(declare-fun m!17469 () Bool)

(assert (=> b!23753 m!17469))

(assert (=> b!23771 m!17154))

(assert (=> b!23771 m!17154))

(assert (=> b!23771 m!17158))

(assert (=> b!23765 m!17154))

(assert (=> b!23765 m!17154))

(assert (=> b!23765 m!17158))

(declare-fun m!17471 () Bool)

(assert (=> bm!2019 m!17471))

(declare-fun m!17473 () Bool)

(assert (=> b!23755 m!17473))

(declare-fun m!17475 () Bool)

(assert (=> b!23755 m!17475))

(declare-fun m!17477 () Bool)

(assert (=> b!23755 m!17477))

(declare-fun m!17479 () Bool)

(assert (=> b!23755 m!17479))

(assert (=> b!23755 m!17477))

(declare-fun m!17481 () Bool)

(assert (=> b!23755 m!17481))

(declare-fun m!17483 () Bool)

(assert (=> b!23755 m!17483))

(declare-fun m!17485 () Bool)

(assert (=> b!23755 m!17485))

(assert (=> b!23755 m!17471))

(declare-fun m!17487 () Bool)

(assert (=> b!23755 m!17487))

(declare-fun m!17489 () Bool)

(assert (=> b!23755 m!17489))

(declare-fun m!17491 () Bool)

(assert (=> b!23755 m!17491))

(declare-fun m!17493 () Bool)

(assert (=> b!23755 m!17493))

(declare-fun m!17495 () Bool)

(assert (=> b!23755 m!17495))

(assert (=> b!23755 m!17495))

(declare-fun m!17497 () Bool)

(assert (=> b!23755 m!17497))

(assert (=> b!23755 m!17485))

(declare-fun m!17499 () Bool)

(assert (=> b!23755 m!17499))

(assert (=> b!23755 m!17154))

(assert (=> b!23755 m!17493))

(declare-fun m!17501 () Bool)

(assert (=> b!23755 m!17501))

(declare-fun m!17503 () Bool)

(assert (=> b!23763 m!17503))

(assert (=> b!23767 m!17194))

(declare-fun m!17505 () Bool)

(assert (=> b!23767 m!17505))

(assert (=> b!23767 m!17194))

(declare-fun m!17507 () Bool)

(assert (=> b!23767 m!17507))

(assert (=> b!23767 m!17154))

(declare-fun m!17509 () Bool)

(assert (=> b!23767 m!17509))

(assert (=> b!23767 m!17505))

(assert (=> b!23767 m!17154))

(assert (=> d!4089 m!17072))

(assert (=> b!23389 d!4089))

(declare-fun d!4091 () Bool)

(assert (=> d!4091 (= (validMask!0 lt!8366) (and (or (= lt!8366 #b00000000000000000000000000000111) (= lt!8366 #b00000000000000000000000000001111) (= lt!8366 #b00000000000000000000000000011111) (= lt!8366 #b00000000000000000000000000111111) (= lt!8366 #b00000000000000000000000001111111) (= lt!8366 #b00000000000000000000000011111111) (= lt!8366 #b00000000000000000000000111111111) (= lt!8366 #b00000000000000000000001111111111) (= lt!8366 #b00000000000000000000011111111111) (= lt!8366 #b00000000000000000000111111111111) (= lt!8366 #b00000000000000000001111111111111) (= lt!8366 #b00000000000000000011111111111111) (= lt!8366 #b00000000000000000111111111111111) (= lt!8366 #b00000000000000001111111111111111) (= lt!8366 #b00000000000000011111111111111111) (= lt!8366 #b00000000000000111111111111111111) (= lt!8366 #b00000000000001111111111111111111) (= lt!8366 #b00000000000011111111111111111111) (= lt!8366 #b00000000000111111111111111111111) (= lt!8366 #b00000000001111111111111111111111) (= lt!8366 #b00000000011111111111111111111111) (= lt!8366 #b00000000111111111111111111111111) (= lt!8366 #b00000001111111111111111111111111) (= lt!8366 #b00000011111111111111111111111111) (= lt!8366 #b00000111111111111111111111111111) (= lt!8366 #b00001111111111111111111111111111) (= lt!8366 #b00011111111111111111111111111111) (= lt!8366 #b00111111111111111111111111111111)) (bvsle lt!8366 #b00111111111111111111111111111111)))))

(assert (=> d!4001 d!4091))

(assert (=> d!4001 d!3997))

(assert (=> b!23378 d!4061))

(declare-fun d!4093 () Bool)

(declare-fun res!14567 () Bool)

(declare-fun e!15412 () Bool)

(assert (=> d!4093 (=> res!14567 e!15412)))

(assert (=> d!4093 (= res!14567 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4093 (= (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000) e!15412)))

(declare-fun b!23772 () Bool)

(declare-fun e!15413 () Bool)

(assert (=> b!23772 (= e!15412 e!15413)))

(declare-fun res!14568 () Bool)

(assert (=> b!23772 (=> (not res!14568) (not e!15413))))

(assert (=> b!23772 (= res!14568 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23773 () Bool)

(assert (=> b!23773 (= e!15413 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4093 (not res!14567)) b!23772))

(assert (= (and b!23772 res!14568) b!23773))

(assert (=> d!4093 m!16992))

(declare-fun m!17511 () Bool)

(assert (=> b!23773 m!17511))

(assert (=> bm!1912 d!4093))

(declare-fun d!4095 () Bool)

(declare-fun e!15416 () Bool)

(assert (=> d!4095 e!15416))

(declare-fun res!14574 () Bool)

(assert (=> d!4095 (=> (not res!14574) (not e!15416))))

(declare-fun lt!8712 () SeekEntryResult!59)

(assert (=> d!4095 (= res!14574 ((_ is Found!59) lt!8712))))

(assert (=> d!4095 (= lt!8712 (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun lt!8711 () Unit!514)

(declare-fun choose!212 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!514)

(assert (=> d!4095 (= lt!8711 (choose!212 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> d!4095 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4095 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!8711)))

(declare-fun b!23778 () Bool)

(declare-fun res!14573 () Bool)

(assert (=> b!23778 (=> (not res!14573) (not e!15416))))

(assert (=> b!23778 (= res!14573 (inRange!0 (index!2358 lt!8712) (mask!4730 lt!8162)))))

(declare-fun b!23779 () Bool)

(assert (=> b!23779 (= e!15416 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8712)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23779 (and (bvsge (index!2358 lt!8712) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8712) (size!700 (_keys!3164 lt!8162))))))

(assert (= (and d!4095 res!14574) b!23778))

(assert (= (and b!23778 res!14573) b!23779))

(assert (=> d!4095 m!16872))

(declare-fun m!17513 () Bool)

(assert (=> d!4095 m!17513))

(assert (=> d!4095 m!17072))

(declare-fun m!17515 () Bool)

(assert (=> b!23778 m!17515))

(declare-fun m!17517 () Bool)

(assert (=> b!23779 m!17517))

(assert (=> bm!1953 d!4095))

(assert (=> b!23366 d!4089))

(declare-fun b!23780 () Bool)

(declare-fun e!15421 () ListLongMap!553)

(declare-fun call!2034 () ListLongMap!553)

(assert (=> b!23780 (= e!15421 call!2034)))

(declare-fun b!23781 () Bool)

(declare-fun res!14583 () Bool)

(declare-fun e!15424 () Bool)

(assert (=> b!23781 (=> (not res!14583) (not e!15424))))

(declare-fun e!15419 () Bool)

(assert (=> b!23781 (= res!14583 e!15419)))

(declare-fun c!3115 () Bool)

(assert (=> b!23781 (= c!3115 (not (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23782 () Bool)

(declare-fun e!15418 () Bool)

(declare-fun e!15426 () Bool)

(assert (=> b!23782 (= e!15418 e!15426)))

(declare-fun res!14579 () Bool)

(assert (=> b!23782 (=> (not res!14579) (not e!15426))))

(declare-fun lt!8722 () ListLongMap!553)

(assert (=> b!23782 (= res!14579 (contains!220 lt!8722 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!23782 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23783 () Bool)

(declare-fun e!15417 () Bool)

(declare-fun e!15425 () Bool)

(assert (=> b!23783 (= e!15417 e!15425)))

(declare-fun res!14582 () Bool)

(declare-fun call!2030 () Bool)

(assert (=> b!23783 (= res!14582 call!2030)))

(assert (=> b!23783 (=> (not res!14582) (not e!15425))))

(declare-fun b!23784 () Bool)

(declare-fun e!15429 () Unit!514)

(declare-fun lt!8713 () Unit!514)

(assert (=> b!23784 (= e!15429 lt!8713)))

(declare-fun lt!8718 () ListLongMap!553)

(assert (=> b!23784 (= lt!8718 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8729 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8729 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8730 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8730 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8733 () Unit!514)

(assert (=> b!23784 (= lt!8733 (addStillContains!14 lt!8718 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8730))))

(assert (=> b!23784 (contains!220 (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8730)))

(declare-fun lt!8727 () Unit!514)

(assert (=> b!23784 (= lt!8727 lt!8733)))

(declare-fun lt!8720 () ListLongMap!553)

(assert (=> b!23784 (= lt!8720 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8716 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8716 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8723 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8723 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8726 () Unit!514)

(assert (=> b!23784 (= lt!8726 (addApplyDifferent!14 lt!8720 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8723))))

(assert (=> b!23784 (= (apply!29 (+!45 lt!8720 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8723) (apply!29 lt!8720 lt!8723))))

(declare-fun lt!8717 () Unit!514)

(assert (=> b!23784 (= lt!8717 lt!8726)))

(declare-fun lt!8721 () ListLongMap!553)

(assert (=> b!23784 (= lt!8721 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8724 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8724 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8719 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8719 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!8725 () Unit!514)

(assert (=> b!23784 (= lt!8725 (addApplyDifferent!14 lt!8721 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8719))))

(assert (=> b!23784 (= (apply!29 (+!45 lt!8721 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8719) (apply!29 lt!8721 lt!8719))))

(declare-fun lt!8734 () Unit!514)

(assert (=> b!23784 (= lt!8734 lt!8725)))

(declare-fun lt!8728 () ListLongMap!553)

(assert (=> b!23784 (= lt!8728 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8714 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8714 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8732 () (_ BitVec 64))

(assert (=> b!23784 (= lt!8732 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!23784 (= lt!8713 (addApplyDifferent!14 lt!8728 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8732))))

(assert (=> b!23784 (= (apply!29 (+!45 lt!8728 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8732) (apply!29 lt!8728 lt!8732))))

(declare-fun call!2033 () ListLongMap!553)

(declare-fun bm!2026 () Bool)

(assert (=> bm!2026 (= call!2033 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23785 () Bool)

(declare-fun call!2031 () Bool)

(assert (=> b!23785 (= e!15419 (not call!2031))))

(declare-fun bm!2027 () Bool)

(declare-fun call!2028 () ListLongMap!553)

(declare-fun call!2032 () ListLongMap!553)

(assert (=> bm!2027 (= call!2028 call!2032)))

(declare-fun c!3118 () Bool)

(declare-fun bm!2028 () Bool)

(declare-fun c!3119 () Bool)

(declare-fun call!2029 () ListLongMap!553)

(assert (=> bm!2028 (= call!2032 (+!45 (ite c!3118 call!2033 (ite c!3119 call!2029 call!2034)) (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!23786 () Bool)

(declare-fun Unit!539 () Unit!514)

(assert (=> b!23786 (= e!15429 Unit!539)))

(declare-fun b!23787 () Bool)

(assert (=> b!23787 (= e!15417 (not call!2030))))

(declare-fun b!23788 () Bool)

(declare-fun c!3116 () Bool)

(assert (=> b!23788 (= c!3116 (and (not (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15427 () ListLongMap!553)

(assert (=> b!23788 (= e!15427 e!15421)))

(declare-fun b!23789 () Bool)

(declare-fun e!15423 () ListLongMap!553)

(assert (=> b!23789 (= e!15423 e!15427)))

(assert (=> b!23789 (= c!3119 (and (not (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2029 () Bool)

(assert (=> bm!2029 (= call!2034 call!2029)))

(declare-fun b!23790 () Bool)

(assert (=> b!23790 (= e!15425 (= (apply!29 lt!8722 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun bm!2030 () Bool)

(assert (=> bm!2030 (= call!2029 call!2033)))

(declare-fun b!23791 () Bool)

(declare-fun e!15428 () Bool)

(assert (=> b!23791 (= e!15419 e!15428)))

(declare-fun res!14581 () Bool)

(assert (=> b!23791 (= res!14581 call!2031)))

(assert (=> b!23791 (=> (not res!14581) (not e!15428))))

(declare-fun d!4097 () Bool)

(assert (=> d!4097 e!15424))

(declare-fun res!14577 () Bool)

(assert (=> d!4097 (=> (not res!14577) (not e!15424))))

(assert (=> d!4097 (= res!14577 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!8731 () ListLongMap!553)

(assert (=> d!4097 (= lt!8722 lt!8731)))

(declare-fun lt!8715 () Unit!514)

(assert (=> d!4097 (= lt!8715 e!15429)))

(declare-fun c!3120 () Bool)

(declare-fun e!15422 () Bool)

(assert (=> d!4097 (= c!3120 e!15422)))

(declare-fun res!14578 () Bool)

(assert (=> d!4097 (=> (not res!14578) (not e!15422))))

(assert (=> d!4097 (= res!14578 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4097 (= lt!8731 e!15423)))

(assert (=> d!4097 (= c!3118 (and (not (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4097 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4097 (= (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8722)))

(declare-fun bm!2025 () Bool)

(assert (=> bm!2025 (= call!2031 (contains!220 lt!8722 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2031 () Bool)

(assert (=> bm!2031 (= call!2030 (contains!220 lt!8722 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23792 () Bool)

(assert (=> b!23792 (= e!15428 (= (apply!29 lt!8722 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23793 () Bool)

(declare-fun res!14576 () Bool)

(assert (=> b!23793 (=> (not res!14576) (not e!15424))))

(assert (=> b!23793 (= res!14576 e!15418)))

(declare-fun res!14575 () Bool)

(assert (=> b!23793 (=> res!14575 e!15418)))

(declare-fun e!15420 () Bool)

(assert (=> b!23793 (= res!14575 (not e!15420))))

(declare-fun res!14580 () Bool)

(assert (=> b!23793 (=> (not res!14580) (not e!15420))))

(assert (=> b!23793 (= res!14580 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23794 () Bool)

(assert (=> b!23794 (= e!15422 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!23795 () Bool)

(assert (=> b!23795 (= e!15424 e!15417)))

(declare-fun c!3117 () Bool)

(assert (=> b!23795 (= c!3117 (not (= (bvand (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23796 () Bool)

(assert (=> b!23796 (= e!15426 (= (apply!29 lt!8722 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23796 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(assert (=> b!23796 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23797 () Bool)

(assert (=> b!23797 (= e!15421 call!2028)))

(declare-fun b!23798 () Bool)

(assert (=> b!23798 (= e!15423 (+!45 call!2032 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!23799 () Bool)

(assert (=> b!23799 (= e!15427 call!2028)))

(declare-fun b!23800 () Bool)

(assert (=> b!23800 (= e!15420 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4097 c!3118) b!23798))

(assert (= (and d!4097 (not c!3118)) b!23789))

(assert (= (and b!23789 c!3119) b!23799))

(assert (= (and b!23789 (not c!3119)) b!23788))

(assert (= (and b!23788 c!3116) b!23797))

(assert (= (and b!23788 (not c!3116)) b!23780))

(assert (= (or b!23797 b!23780) bm!2029))

(assert (= (or b!23799 bm!2029) bm!2030))

(assert (= (or b!23799 b!23797) bm!2027))

(assert (= (or b!23798 bm!2030) bm!2026))

(assert (= (or b!23798 bm!2027) bm!2028))

(assert (= (and d!4097 res!14578) b!23794))

(assert (= (and d!4097 c!3120) b!23784))

(assert (= (and d!4097 (not c!3120)) b!23786))

(assert (= (and d!4097 res!14577) b!23793))

(assert (= (and b!23793 res!14580) b!23800))

(assert (= (and b!23793 (not res!14575)) b!23782))

(assert (= (and b!23782 res!14579) b!23796))

(assert (= (and b!23793 res!14576) b!23781))

(assert (= (and b!23781 c!3115) b!23791))

(assert (= (and b!23781 (not c!3115)) b!23785))

(assert (= (and b!23791 res!14581) b!23792))

(assert (= (or b!23791 b!23785) bm!2025))

(assert (= (and b!23781 res!14583) b!23795))

(assert (= (and b!23795 c!3117) b!23783))

(assert (= (and b!23795 (not c!3117)) b!23787))

(assert (= (and b!23783 res!14582) b!23790))

(assert (= (or b!23783 b!23787) bm!2031))

(declare-fun b_lambda!1597 () Bool)

(assert (=> (not b_lambda!1597) (not b!23796)))

(assert (=> b!23796 t!3241))

(declare-fun b_and!1501 () Bool)

(assert (= b_and!1499 (and (=> t!3241 result!1101) b_and!1501)))

(declare-fun m!17519 () Bool)

(assert (=> bm!2025 m!17519))

(declare-fun m!17521 () Bool)

(assert (=> b!23790 m!17521))

(declare-fun m!17523 () Bool)

(assert (=> bm!2031 m!17523))

(declare-fun m!17525 () Bool)

(assert (=> bm!2028 m!17525))

(declare-fun m!17527 () Bool)

(assert (=> b!23798 m!17527))

(assert (=> b!23782 m!16992))

(assert (=> b!23782 m!16992))

(declare-fun m!17529 () Bool)

(assert (=> b!23782 m!17529))

(assert (=> b!23800 m!16992))

(assert (=> b!23800 m!16992))

(assert (=> b!23800 m!16996))

(assert (=> b!23794 m!16992))

(assert (=> b!23794 m!16992))

(assert (=> b!23794 m!16996))

(declare-fun m!17531 () Bool)

(assert (=> bm!2026 m!17531))

(declare-fun m!17533 () Bool)

(assert (=> b!23784 m!17533))

(declare-fun m!17535 () Bool)

(assert (=> b!23784 m!17535))

(declare-fun m!17537 () Bool)

(assert (=> b!23784 m!17537))

(declare-fun m!17539 () Bool)

(assert (=> b!23784 m!17539))

(assert (=> b!23784 m!17537))

(declare-fun m!17541 () Bool)

(assert (=> b!23784 m!17541))

(declare-fun m!17543 () Bool)

(assert (=> b!23784 m!17543))

(declare-fun m!17545 () Bool)

(assert (=> b!23784 m!17545))

(assert (=> b!23784 m!17531))

(declare-fun m!17547 () Bool)

(assert (=> b!23784 m!17547))

(declare-fun m!17549 () Bool)

(assert (=> b!23784 m!17549))

(declare-fun m!17551 () Bool)

(assert (=> b!23784 m!17551))

(declare-fun m!17553 () Bool)

(assert (=> b!23784 m!17553))

(declare-fun m!17555 () Bool)

(assert (=> b!23784 m!17555))

(assert (=> b!23784 m!17555))

(declare-fun m!17557 () Bool)

(assert (=> b!23784 m!17557))

(assert (=> b!23784 m!17545))

(declare-fun m!17559 () Bool)

(assert (=> b!23784 m!17559))

(assert (=> b!23784 m!16992))

(assert (=> b!23784 m!17553))

(declare-fun m!17561 () Bool)

(assert (=> b!23784 m!17561))

(declare-fun m!17563 () Bool)

(assert (=> b!23792 m!17563))

(assert (=> b!23796 m!17032))

(declare-fun m!17565 () Bool)

(assert (=> b!23796 m!17565))

(assert (=> b!23796 m!17032))

(declare-fun m!17567 () Bool)

(assert (=> b!23796 m!17567))

(assert (=> b!23796 m!16992))

(declare-fun m!17569 () Bool)

(assert (=> b!23796 m!17569))

(assert (=> b!23796 m!17565))

(assert (=> b!23796 m!16992))

(assert (=> d!4097 m!16948))

(assert (=> bm!1927 d!4097))

(declare-fun d!4099 () Bool)

(declare-fun e!15430 () Bool)

(assert (=> d!4099 e!15430))

(declare-fun res!14584 () Bool)

(assert (=> d!4099 (=> res!14584 e!15430)))

(declare-fun lt!8736 () Bool)

(assert (=> d!4099 (= res!14584 (not lt!8736))))

(declare-fun lt!8737 () Bool)

(assert (=> d!4099 (= lt!8736 lt!8737)))

(declare-fun lt!8735 () Unit!514)

(declare-fun e!15431 () Unit!514)

(assert (=> d!4099 (= lt!8735 e!15431)))

(declare-fun c!3121 () Bool)

(assert (=> d!4099 (= c!3121 lt!8737)))

(assert (=> d!4099 (= lt!8737 (containsKey!25 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4099 (= (contains!220 call!1927 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) lt!8736)))

(declare-fun b!23801 () Bool)

(declare-fun lt!8738 () Unit!514)

(assert (=> b!23801 (= e!15431 lt!8738)))

(assert (=> b!23801 (= lt!8738 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23801 (isDefined!23 (getValueByKey!61 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!23802 () Bool)

(declare-fun Unit!540 () Unit!514)

(assert (=> b!23802 (= e!15431 Unit!540)))

(declare-fun b!23803 () Bool)

(assert (=> b!23803 (= e!15430 (isDefined!23 (getValueByKey!61 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!4099 c!3121) b!23801))

(assert (= (and d!4099 (not c!3121)) b!23802))

(assert (= (and d!4099 (not res!14584)) b!23803))

(declare-fun m!17571 () Bool)

(assert (=> d!4099 m!17571))

(declare-fun m!17573 () Bool)

(assert (=> b!23801 m!17573))

(declare-fun m!17575 () Bool)

(assert (=> b!23801 m!17575))

(assert (=> b!23801 m!17575))

(declare-fun m!17577 () Bool)

(assert (=> b!23801 m!17577))

(assert (=> b!23803 m!17575))

(assert (=> b!23803 m!17575))

(assert (=> b!23803 m!17577))

(assert (=> b!23334 d!4099))

(declare-fun d!4101 () Bool)

(assert (=> d!4101 (= (map!410 lt!8162) (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun bs!958 () Bool)

(assert (= bs!958 d!4101))

(assert (=> bs!958 m!16888))

(assert (=> bm!1947 d!4101))

(assert (=> b!23324 d!4053))

(assert (=> d!3999 d!4019))

(declare-fun e!15441 () Bool)

(declare-fun b!23814 () Bool)

(declare-fun contains!222 (List!566 (_ BitVec 64)) Bool)

(assert (=> b!23814 (= e!15441 (contains!222 lt!8339 (select (arr!604 lt!8357) lt!8340)))))

(declare-fun b!23815 () Bool)

(declare-fun e!15440 () Bool)

(declare-fun e!15443 () Bool)

(assert (=> b!23815 (= e!15440 e!15443)))

(declare-fun res!14593 () Bool)

(assert (=> b!23815 (=> (not res!14593) (not e!15443))))

(assert (=> b!23815 (= res!14593 (not e!15441))))

(declare-fun res!14592 () Bool)

(assert (=> b!23815 (=> (not res!14592) (not e!15441))))

(assert (=> b!23815 (= res!14592 (validKeyInArray!0 (select (arr!604 lt!8357) lt!8340)))))

(declare-fun b!23817 () Bool)

(declare-fun e!15442 () Bool)

(assert (=> b!23817 (= e!15443 e!15442)))

(declare-fun c!3124 () Bool)

(assert (=> b!23817 (= c!3124 (validKeyInArray!0 (select (arr!604 lt!8357) lt!8340)))))

(declare-fun call!2037 () Bool)

(declare-fun bm!2034 () Bool)

(assert (=> bm!2034 (= call!2037 (arrayNoDuplicates!0 lt!8357 (bvadd lt!8340 #b00000000000000000000000000000001) (ite c!3124 (Cons!562 (select (arr!604 lt!8357) lt!8340) lt!8339) lt!8339)))))

(declare-fun b!23818 () Bool)

(assert (=> b!23818 (= e!15442 call!2037)))

(declare-fun b!23816 () Bool)

(assert (=> b!23816 (= e!15442 call!2037)))

(declare-fun d!4103 () Bool)

(declare-fun res!14591 () Bool)

(assert (=> d!4103 (=> res!14591 e!15440)))

(assert (=> d!4103 (= res!14591 (bvsge lt!8340 (size!700 lt!8357)))))

(assert (=> d!4103 (= (arrayNoDuplicates!0 lt!8357 lt!8340 lt!8339) e!15440)))

(assert (= (and d!4103 (not res!14591)) b!23815))

(assert (= (and b!23815 res!14592) b!23814))

(assert (= (and b!23815 res!14593) b!23817))

(assert (= (and b!23817 c!3124) b!23818))

(assert (= (and b!23817 (not c!3124)) b!23816))

(assert (= (or b!23818 b!23816) bm!2034))

(declare-fun m!17579 () Bool)

(assert (=> b!23814 m!17579))

(assert (=> b!23814 m!17579))

(declare-fun m!17581 () Bool)

(assert (=> b!23814 m!17581))

(assert (=> b!23815 m!17579))

(assert (=> b!23815 m!17579))

(declare-fun m!17583 () Bool)

(assert (=> b!23815 m!17583))

(assert (=> b!23817 m!17579))

(assert (=> b!23817 m!17579))

(assert (=> b!23817 m!17583))

(assert (=> bm!2034 m!17579))

(declare-fun m!17585 () Bool)

(assert (=> bm!2034 m!17585))

(assert (=> d!3999 d!4103))

(declare-fun d!4105 () Bool)

(assert (=> d!4105 (arrayNoDuplicates!0 lt!8357 lt!8340 lt!8339)))

(declare-fun lt!8741 () Unit!514)

(declare-fun choose!111 (array!1277 (_ BitVec 32) (_ BitVec 32) List!566) Unit!514)

(assert (=> d!4105 (= lt!8741 (choose!111 lt!8357 lt!8340 (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8339))))

(assert (=> d!4105 (= (size!700 lt!8357) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))))

(assert (=> d!4105 (= (lemmaArrayNoDuplicatesInAll0Array!0 lt!8357 lt!8340 (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8339) lt!8741)))

(declare-fun bs!959 () Bool)

(assert (= bs!959 d!4105))

(assert (=> bs!959 m!16928))

(declare-fun m!17587 () Bool)

(assert (=> bs!959 m!17587))

(assert (=> d!3999 d!4105))

(declare-fun d!4107 () Bool)

(declare-fun lt!8744 () (_ BitVec 32))

(assert (=> d!4107 (and (bvsge lt!8744 #b00000000000000000000000000000000) (bvsle lt!8744 (bvsub (size!700 lt!8356) lt!8358)))))

(declare-fun e!15449 () (_ BitVec 32))

(assert (=> d!4107 (= lt!8744 e!15449)))

(declare-fun c!3130 () Bool)

(assert (=> d!4107 (= c!3130 (bvsge lt!8358 lt!8338))))

(assert (=> d!4107 (and (bvsle lt!8358 lt!8338) (bvsge lt!8358 #b00000000000000000000000000000000) (bvsle lt!8338 (size!700 lt!8356)))))

(assert (=> d!4107 (= (arrayCountValidKeys!0 lt!8356 lt!8358 lt!8338) lt!8744)))

(declare-fun call!2040 () (_ BitVec 32))

(declare-fun bm!2037 () Bool)

(assert (=> bm!2037 (= call!2040 (arrayCountValidKeys!0 lt!8356 (bvadd lt!8358 #b00000000000000000000000000000001) lt!8338))))

(declare-fun b!23827 () Bool)

(declare-fun e!15448 () (_ BitVec 32))

(assert (=> b!23827 (= e!15448 (bvadd #b00000000000000000000000000000001 call!2040))))

(declare-fun b!23828 () Bool)

(assert (=> b!23828 (= e!15448 call!2040)))

(declare-fun b!23829 () Bool)

(assert (=> b!23829 (= e!15449 #b00000000000000000000000000000000)))

(declare-fun b!23830 () Bool)

(assert (=> b!23830 (= e!15449 e!15448)))

(declare-fun c!3129 () Bool)

(assert (=> b!23830 (= c!3129 (validKeyInArray!0 (select (arr!604 lt!8356) lt!8358)))))

(assert (= (and d!4107 c!3130) b!23829))

(assert (= (and d!4107 (not c!3130)) b!23830))

(assert (= (and b!23830 c!3129) b!23827))

(assert (= (and b!23830 (not c!3129)) b!23828))

(assert (= (or b!23827 b!23828) bm!2037))

(declare-fun m!17589 () Bool)

(assert (=> bm!2037 m!17589))

(declare-fun m!17591 () Bool)

(assert (=> b!23830 m!17591))

(assert (=> b!23830 m!17591))

(declare-fun m!17593 () Bool)

(assert (=> b!23830 m!17593))

(assert (=> d!3999 d!4107))

(declare-fun d!4109 () Bool)

(assert (=> d!4109 (= (arrayCountValidKeys!0 lt!8356 lt!8358 lt!8338) #b00000000000000000000000000000000)))

(declare-fun lt!8747 () Unit!514)

(declare-fun choose!59 (array!1277 (_ BitVec 32) (_ BitVec 32)) Unit!514)

(assert (=> d!4109 (= lt!8747 (choose!59 lt!8356 lt!8358 lt!8338))))

(assert (=> d!4109 (bvslt (size!700 lt!8356) #b01111111111111111111111111111111)))

(assert (=> d!4109 (= (lemmaArrayCountValidKeysOfFilled0ArrayIs0!0 lt!8356 lt!8358 lt!8338) lt!8747)))

(declare-fun bs!960 () Bool)

(assert (= bs!960 d!4109))

(assert (=> bs!960 m!16936))

(declare-fun m!17595 () Bool)

(assert (=> bs!960 m!17595))

(assert (=> d!3999 d!4109))

(declare-fun d!4111 () Bool)

(declare-fun res!14594 () Bool)

(declare-fun e!15450 () Bool)

(assert (=> d!4111 (=> (not res!14594) (not e!15450))))

(assert (=> d!4111 (= res!14594 (simpleValid!19 lt!8355))))

(assert (=> d!4111 (= (valid!109 lt!8355) e!15450)))

(declare-fun b!23831 () Bool)

(declare-fun res!14595 () Bool)

(assert (=> b!23831 (=> (not res!14595) (not e!15450))))

(assert (=> b!23831 (= res!14595 (= (arrayCountValidKeys!0 (_keys!3164 lt!8355) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))) (_size!150 lt!8355)))))

(declare-fun b!23832 () Bool)

(declare-fun res!14596 () Bool)

(assert (=> b!23832 (=> (not res!14596) (not e!15450))))

(assert (=> b!23832 (= res!14596 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8355) (mask!4730 lt!8355)))))

(declare-fun b!23833 () Bool)

(assert (=> b!23833 (= e!15450 (arrayNoDuplicates!0 (_keys!3164 lt!8355) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4111 res!14594) b!23831))

(assert (= (and b!23831 res!14595) b!23832))

(assert (= (and b!23832 res!14596) b!23833))

(declare-fun m!17597 () Bool)

(assert (=> d!4111 m!17597))

(declare-fun m!17599 () Bool)

(assert (=> b!23831 m!17599))

(declare-fun m!17601 () Bool)

(assert (=> b!23832 m!17601))

(declare-fun m!17603 () Bool)

(assert (=> b!23833 m!17603))

(assert (=> d!3999 d!4111))

(declare-fun d!4113 () Bool)

(assert (=> d!4113 (= (validMask!0 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (and (or (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000001111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000011111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000001111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000011111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000001111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000011111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000001111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000011111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000001111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000011111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000001111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000011111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000001111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000011111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000111111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000001111111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000011111111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000111111111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00001111111111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00011111111111111111111111111111) (= (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00111111111111111111111111111111)) (bvsle (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00111111111111111111111111111111)))))

(assert (=> d!3999 d!4113))

(declare-fun d!4115 () Bool)

(assert (=> d!4115 (arrayForallSeekEntryOrOpenFound!0 lt!8353 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun lt!8750 () Unit!514)

(declare-fun choose!34 (array!1277 (_ BitVec 32) (_ BitVec 32)) Unit!514)

(assert (=> d!4115 (= lt!8750 (choose!34 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8353))))

(assert (=> d!4115 (validMask!0 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4115 (= (lemmaArrayForallSeekEntryOrOpenFoundAlwaysTrueFor0Array!0 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8353) lt!8750)))

(declare-fun bs!961 () Bool)

(assert (= bs!961 d!4115))

(assert (=> bs!961 m!16758))

(assert (=> bs!961 m!16926))

(assert (=> bs!961 m!16758))

(declare-fun m!17605 () Bool)

(assert (=> bs!961 m!17605))

(assert (=> bs!961 m!16758))

(assert (=> bs!961 m!16930))

(assert (=> d!3999 d!4115))

(declare-fun b!23842 () Bool)

(declare-fun e!15457 () Bool)

(declare-fun call!2043 () Bool)

(assert (=> b!23842 (= e!15457 call!2043)))

(declare-fun b!23843 () Bool)

(declare-fun e!15458 () Bool)

(assert (=> b!23843 (= e!15458 e!15457)))

(declare-fun lt!8757 () (_ BitVec 64))

(assert (=> b!23843 (= lt!8757 (select (arr!604 lt!8350) lt!8353))))

(declare-fun lt!8758 () Unit!514)

(assert (=> b!23843 (= lt!8758 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8350 lt!8757 lt!8353))))

(assert (=> b!23843 (arrayContainsKey!0 lt!8350 lt!8757 #b00000000000000000000000000000000)))

(declare-fun lt!8759 () Unit!514)

(assert (=> b!23843 (= lt!8759 lt!8758)))

(declare-fun res!14601 () Bool)

(assert (=> b!23843 (= res!14601 (= (seekEntryOrOpen!0 (select (arr!604 lt!8350) lt!8353) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (Found!59 lt!8353)))))

(assert (=> b!23843 (=> (not res!14601) (not e!15457))))

(declare-fun b!23844 () Bool)

(assert (=> b!23844 (= e!15458 call!2043)))

(declare-fun d!4117 () Bool)

(declare-fun res!14602 () Bool)

(declare-fun e!15459 () Bool)

(assert (=> d!4117 (=> res!14602 e!15459)))

(assert (=> d!4117 (= res!14602 (bvsge lt!8353 (size!700 lt!8350)))))

(assert (=> d!4117 (= (arrayForallSeekEntryOrOpenFound!0 lt!8353 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) e!15459)))

(declare-fun bm!2040 () Bool)

(assert (=> bm!2040 (= call!2043 (arrayForallSeekEntryOrOpenFound!0 (bvadd lt!8353 #b00000000000000000000000000000001) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!23845 () Bool)

(assert (=> b!23845 (= e!15459 e!15458)))

(declare-fun c!3133 () Bool)

(assert (=> b!23845 (= c!3133 (validKeyInArray!0 (select (arr!604 lt!8350) lt!8353)))))

(assert (= (and d!4117 (not res!14602)) b!23845))

(assert (= (and b!23845 c!3133) b!23843))

(assert (= (and b!23845 (not c!3133)) b!23844))

(assert (= (and b!23843 res!14601) b!23842))

(assert (= (or b!23842 b!23844) bm!2040))

(declare-fun m!17607 () Bool)

(assert (=> b!23843 m!17607))

(declare-fun m!17609 () Bool)

(assert (=> b!23843 m!17609))

(declare-fun m!17611 () Bool)

(assert (=> b!23843 m!17611))

(assert (=> b!23843 m!17607))

(assert (=> b!23843 m!16758))

(declare-fun m!17613 () Bool)

(assert (=> b!23843 m!17613))

(assert (=> bm!2040 m!16758))

(declare-fun m!17615 () Bool)

(assert (=> bm!2040 m!17615))

(assert (=> b!23845 m!17607))

(assert (=> b!23845 m!17607))

(declare-fun m!17617 () Bool)

(assert (=> b!23845 m!17617))

(assert (=> d!3999 d!4117))

(declare-fun b!23846 () Bool)

(declare-fun res!14605 () Bool)

(declare-fun e!15461 () Bool)

(assert (=> b!23846 (=> (not res!14605) (not e!15461))))

(declare-fun call!2047 () Bool)

(assert (=> b!23846 (= res!14605 call!2047)))

(declare-fun e!15460 () Bool)

(assert (=> b!23846 (= e!15460 e!15461)))

(declare-fun b!23847 () Bool)

(declare-fun e!15466 () Unit!514)

(declare-fun Unit!541 () Unit!514)

(assert (=> b!23847 (= e!15466 Unit!541)))

(declare-fun lt!8789 () Unit!514)

(assert (=> b!23847 (= lt!8789 (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> b!23847 (contains!220 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8760 () Unit!514)

(assert (=> b!23847 (= lt!8760 lt!8789)))

(assert (=> b!23847 false))

(declare-fun b!23848 () Bool)

(declare-fun e!15467 () Bool)

(declare-fun call!2044 () Bool)

(assert (=> b!23848 (= e!15467 (not call!2044))))

(declare-fun b!23849 () Bool)

(declare-fun res!14603 () Bool)

(declare-fun e!15465 () Bool)

(assert (=> b!23849 (=> (not res!14603) (not e!15465))))

(declare-fun lt!8764 () tuple2!938)

(assert (=> b!23849 (= res!14603 (contains!220 (map!410 (_2!476 lt!8764)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!8777 () SeekEntryResult!59)

(declare-fun call!2046 () Bool)

(declare-fun bm!2041 () Bool)

(declare-fun c!3134 () Bool)

(declare-fun c!3136 () Bool)

(declare-fun lt!8786 () SeekEntryResult!59)

(assert (=> bm!2041 (= call!2046 (inRange!0 (ite c!3134 (index!2358 lt!8786) (ite c!3136 (index!2357 lt!8777) (index!2360 lt!8777))) (mask!4730 lt!8162)))))

(declare-fun b!23850 () Bool)

(declare-fun e!15463 () Unit!514)

(declare-fun Unit!542 () Unit!514)

(assert (=> b!23850 (= e!15463 Unit!542)))

(declare-fun lt!8762 () Unit!514)

(assert (=> b!23850 (= lt!8762 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun call!2045 () SeekEntryResult!59)

(assert (=> b!23850 (= lt!8786 call!2045)))

(declare-fun res!14610 () Bool)

(assert (=> b!23850 (= res!14610 ((_ is Found!59) lt!8786))))

(declare-fun e!15464 () Bool)

(assert (=> b!23850 (=> (not res!14610) (not e!15464))))

(assert (=> b!23850 e!15464))

(declare-fun lt!8787 () Unit!514)

(assert (=> b!23850 (= lt!8787 lt!8762)))

(assert (=> b!23850 false))

(declare-fun b!23851 () Bool)

(assert (=> b!23851 (= e!15465 (= (map!410 (_2!476 lt!8764)) (+!45 (map!410 lt!8162) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun bm!2042 () Bool)

(assert (=> bm!2042 (= call!2047 call!2046)))

(declare-fun b!23852 () Bool)

(assert (=> b!23852 (= e!15461 (not call!2044))))

(declare-fun b!23853 () Bool)

(declare-fun res!14606 () Bool)

(assert (=> b!23853 (= res!14606 call!2046)))

(assert (=> b!23853 (=> (not res!14606) (not e!15464))))

(declare-fun b!23854 () Bool)

(declare-fun lt!8782 () Unit!514)

(assert (=> b!23854 (= e!15463 lt!8782)))

(assert (=> b!23854 (= lt!8782 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> b!23854 (= lt!8777 call!2045)))

(assert (=> b!23854 (= c!3136 ((_ is MissingZero!59) lt!8777))))

(assert (=> b!23854 e!15460))

(declare-fun bm!2043 () Bool)

(assert (=> bm!2043 (= call!2044 (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun bm!2044 () Bool)

(assert (=> bm!2044 (= call!2045 (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun b!23855 () Bool)

(declare-fun Unit!543 () Unit!514)

(assert (=> b!23855 (= e!15466 Unit!543)))

(declare-fun b!23856 () Bool)

(declare-fun e!15462 () Bool)

(assert (=> b!23856 (= e!15462 ((_ is Undefined!59) lt!8777))))

(declare-fun b!23857 () Bool)

(declare-fun c!3137 () Bool)

(assert (=> b!23857 (= c!3137 ((_ is MissingVacant!59) lt!8777))))

(assert (=> b!23857 (= e!15460 e!15462)))

(declare-fun b!23859 () Bool)

(declare-fun res!14608 () Bool)

(assert (=> b!23859 (=> (not res!14608) (not e!15465))))

(assert (=> b!23859 (= res!14608 (valid!109 (_2!476 lt!8764)))))

(declare-fun b!23860 () Bool)

(declare-fun res!14607 () Bool)

(assert (=> b!23860 (=> (not res!14607) (not e!15461))))

(assert (=> b!23860 (= res!14607 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2357 lt!8777)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23861 () Bool)

(declare-fun res!14609 () Bool)

(assert (=> b!23861 (= res!14609 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2360 lt!8777)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23861 (=> (not res!14609) (not e!15467))))

(declare-fun b!23862 () Bool)

(assert (=> b!23862 (= e!15464 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8786)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23858 () Bool)

(assert (=> b!23858 (= e!15462 e!15467)))

(declare-fun res!14611 () Bool)

(assert (=> b!23858 (= res!14611 call!2047)))

(assert (=> b!23858 (=> (not res!14611) (not e!15467))))

(declare-fun d!4119 () Bool)

(assert (=> d!4119 e!15465))

(declare-fun res!14604 () Bool)

(assert (=> d!4119 (=> (not res!14604) (not e!15465))))

(assert (=> d!4119 (= res!14604 (_1!476 lt!8764))))

(assert (=> d!4119 (= lt!8764 (tuple2!939 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (bvadd (_size!150 lt!8162) #b00000000000000000000000000000001) (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (_vacant!150 lt!8162))))))

(declare-fun lt!8780 () Unit!514)

(declare-fun lt!8775 () Unit!514)

(assert (=> d!4119 (= lt!8780 lt!8775)))

(declare-fun lt!8788 () array!1275)

(declare-fun lt!8774 () array!1277)

(assert (=> d!4119 (contains!220 (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (select (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))

(assert (=> d!4119 (= lt!8775 (lemmaValidKeyInArrayIsInListMap!10 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (defaultEntry!1743 lt!8162)))))

(assert (=> d!4119 (= lt!8788 (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))))

(assert (=> d!4119 (= lt!8774 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))

(declare-fun lt!8763 () Unit!514)

(declare-fun lt!8766 () Unit!514)

(assert (=> d!4119 (= lt!8763 lt!8766)))

(declare-fun lt!8769 () array!1277)

(assert (=> d!4119 (= (arrayCountValidKeys!0 lt!8769 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!4119 (= lt!8766 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8769 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))

(assert (=> d!4119 (= lt!8769 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))

(declare-fun lt!8784 () Unit!514)

(declare-fun lt!8772 () Unit!514)

(assert (=> d!4119 (= lt!8784 lt!8772)))

(declare-fun lt!8765 () array!1277)

(assert (=> d!4119 (arrayContainsKey!0 lt!8765 #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!4119 (= lt!8772 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8765 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))

(assert (=> d!4119 (= lt!8765 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))

(declare-fun lt!8779 () Unit!514)

(declare-fun lt!8785 () Unit!514)

(assert (=> d!4119 (= lt!8779 lt!8785)))

(assert (=> d!4119 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> d!4119 (= lt!8785 (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)))))

(declare-fun lt!8770 () Unit!514)

(declare-fun lt!8768 () Unit!514)

(assert (=> d!4119 (= lt!8770 lt!8768)))

(assert (=> d!4119 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (mask!4730 lt!8162))))

(assert (=> d!4119 (= lt!8768 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (mask!4730 lt!8162)))))

(declare-fun lt!8776 () Unit!514)

(declare-fun lt!8773 () Unit!514)

(assert (=> d!4119 (= lt!8776 lt!8773)))

(assert (=> d!4119 (= (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (bvadd (arrayCountValidKeys!0 (_keys!3164 lt!8162) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) #b00000000000000000000000000000001))))

(assert (=> d!4119 (= lt!8773 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!8781 () Unit!514)

(declare-fun lt!8778 () Unit!514)

(assert (=> d!4119 (= lt!8781 lt!8778)))

(declare-fun lt!8783 () (_ BitVec 32))

(declare-fun lt!8767 () List!566)

(assert (=> d!4119 (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) lt!8783 lt!8767)))

(assert (=> d!4119 (= lt!8778 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) lt!8783 lt!8767))))

(assert (=> d!4119 (= lt!8767 Nil!563)))

(assert (=> d!4119 (= lt!8783 #b00000000000000000000000000000000)))

(declare-fun lt!8761 () Unit!514)

(assert (=> d!4119 (= lt!8761 e!15466)))

(declare-fun c!3135 () Bool)

(assert (=> d!4119 (= c!3135 (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun lt!8771 () Unit!514)

(assert (=> d!4119 (= lt!8771 e!15463)))

(assert (=> d!4119 (= c!3134 (contains!220 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4119 (valid!109 lt!8162)))

(assert (=> d!4119 (= (updateHelperNewKey!10 lt!8162 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))) lt!8764)))

(assert (= (and d!4119 c!3134) b!23850))

(assert (= (and d!4119 (not c!3134)) b!23854))

(assert (= (and b!23850 res!14610) b!23853))

(assert (= (and b!23853 res!14606) b!23862))

(assert (= (and b!23854 c!3136) b!23846))

(assert (= (and b!23854 (not c!3136)) b!23857))

(assert (= (and b!23846 res!14605) b!23860))

(assert (= (and b!23860 res!14607) b!23852))

(assert (= (and b!23857 c!3137) b!23858))

(assert (= (and b!23857 (not c!3137)) b!23856))

(assert (= (and b!23858 res!14611) b!23861))

(assert (= (and b!23861 res!14609) b!23848))

(assert (= (or b!23846 b!23858) bm!2042))

(assert (= (or b!23852 b!23848) bm!2043))

(assert (= (or b!23853 bm!2042) bm!2041))

(assert (= (or b!23850 b!23854) bm!2044))

(assert (= (and d!4119 c!3135) b!23847))

(assert (= (and d!4119 (not c!3135)) b!23855))

(assert (= (and d!4119 res!14604) b!23859))

(assert (= (and b!23859 res!14608) b!23849))

(assert (= (and b!23849 res!14603) b!23851))

(declare-fun m!17619 () Bool)

(assert (=> d!4119 m!17619))

(declare-fun m!17621 () Bool)

(assert (=> d!4119 m!17621))

(declare-fun m!17623 () Bool)

(assert (=> d!4119 m!17623))

(declare-fun m!17625 () Bool)

(assert (=> d!4119 m!17625))

(declare-fun m!17627 () Bool)

(assert (=> d!4119 m!17627))

(declare-fun m!17629 () Bool)

(assert (=> d!4119 m!17629))

(declare-fun m!17631 () Bool)

(assert (=> d!4119 m!17631))

(declare-fun m!17633 () Bool)

(assert (=> d!4119 m!17633))

(declare-fun m!17635 () Bool)

(assert (=> d!4119 m!17635))

(assert (=> d!4119 m!17276))

(assert (=> d!4119 m!17623))

(declare-fun m!17637 () Bool)

(assert (=> d!4119 m!17637))

(declare-fun m!17639 () Bool)

(assert (=> d!4119 m!17639))

(assert (=> d!4119 m!16870))

(declare-fun m!17641 () Bool)

(assert (=> d!4119 m!17641))

(declare-fun m!17643 () Bool)

(assert (=> d!4119 m!17643))

(declare-fun m!17645 () Bool)

(assert (=> d!4119 m!17645))

(declare-fun m!17647 () Bool)

(assert (=> d!4119 m!17647))

(assert (=> d!4119 m!16888))

(declare-fun m!17649 () Bool)

(assert (=> d!4119 m!17649))

(assert (=> d!4119 m!16888))

(declare-fun m!17651 () Bool)

(assert (=> d!4119 m!17651))

(assert (=> d!4119 m!16904))

(assert (=> d!4119 m!16888))

(assert (=> d!4119 m!17080))

(declare-fun m!17653 () Bool)

(assert (=> d!4119 m!17653))

(assert (=> d!4119 m!17621))

(declare-fun m!17655 () Bool)

(assert (=> d!4119 m!17655))

(declare-fun m!17657 () Bool)

(assert (=> b!23861 m!17657))

(declare-fun m!17659 () Bool)

(assert (=> bm!2041 m!17659))

(declare-fun m!17661 () Bool)

(assert (=> b!23847 m!17661))

(assert (=> b!23847 m!16888))

(assert (=> b!23847 m!16888))

(assert (=> b!23847 m!17651))

(declare-fun m!17663 () Bool)

(assert (=> b!23849 m!17663))

(assert (=> b!23849 m!17663))

(declare-fun m!17665 () Bool)

(assert (=> b!23849 m!17665))

(declare-fun m!17667 () Bool)

(assert (=> b!23859 m!17667))

(declare-fun m!17669 () Bool)

(assert (=> b!23860 m!17669))

(assert (=> b!23851 m!17663))

(assert (=> b!23851 m!16890))

(assert (=> b!23851 m!16890))

(declare-fun m!17671 () Bool)

(assert (=> b!23851 m!17671))

(assert (=> bm!2043 m!16904))

(declare-fun m!17673 () Bool)

(assert (=> b!23862 m!17673))

(assert (=> b!23854 m!16900))

(assert (=> b!23850 m!16906))

(assert (=> bm!2044 m!16872))

(assert (=> bm!1941 d!4119))

(declare-fun d!4121 () Bool)

(declare-fun e!15468 () Bool)

(assert (=> d!4121 e!15468))

(declare-fun res!14612 () Bool)

(assert (=> d!4121 (=> (not res!14612) (not e!15468))))

(declare-fun lt!8790 () ListLongMap!553)

(assert (=> d!4121 (= res!14612 (contains!220 lt!8790 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!8793 () List!565)

(assert (=> d!4121 (= lt!8790 (ListLongMap!554 lt!8793))))

(declare-fun lt!8791 () Unit!514)

(declare-fun lt!8792 () Unit!514)

(assert (=> d!4121 (= lt!8791 lt!8792)))

(assert (=> d!4121 (= (getValueByKey!61 lt!8793 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4121 (= lt!8792 (lemmaContainsTupThenGetReturnValue!18 lt!8793 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4121 (= lt!8793 (insertStrictlySorted!18 (toList!292 call!1914) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4121 (= (+!45 call!1914 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!8790)))

(declare-fun b!23863 () Bool)

(declare-fun res!14613 () Bool)

(assert (=> b!23863 (=> (not res!14613) (not e!15468))))

(assert (=> b!23863 (= res!14613 (= (getValueByKey!61 (toList!292 lt!8790) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23864 () Bool)

(assert (=> b!23864 (= e!15468 (contains!221 (toList!292 lt!8790) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4121 res!14612) b!23863))

(assert (= (and b!23863 res!14613) b!23864))

(declare-fun m!17675 () Bool)

(assert (=> d!4121 m!17675))

(declare-fun m!17677 () Bool)

(assert (=> d!4121 m!17677))

(declare-fun m!17679 () Bool)

(assert (=> d!4121 m!17679))

(declare-fun m!17681 () Bool)

(assert (=> d!4121 m!17681))

(declare-fun m!17683 () Bool)

(assert (=> b!23863 m!17683))

(declare-fun m!17685 () Bool)

(assert (=> b!23864 m!17685))

(assert (=> b!23349 d!4121))

(assert (=> b!23336 d!4007))

(declare-fun d!4123 () Bool)

(declare-fun e!15469 () Bool)

(assert (=> d!4123 e!15469))

(declare-fun res!14615 () Bool)

(assert (=> d!4123 (=> (not res!14615) (not e!15469))))

(declare-fun lt!8795 () SeekEntryResult!59)

(assert (=> d!4123 (= res!14615 ((_ is Found!59) lt!8795))))

(assert (=> d!4123 (= lt!8795 (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!8794 () Unit!514)

(assert (=> d!4123 (= lt!8794 (choose!212 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4123 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4123 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8794)))

(declare-fun b!23865 () Bool)

(declare-fun res!14614 () Bool)

(assert (=> b!23865 (=> (not res!14614) (not e!15469))))

(assert (=> b!23865 (= res!14614 (inRange!0 (index!2358 lt!8795) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23866 () Bool)

(assert (=> b!23866 (= e!15469 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8795)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23866 (and (bvsge (index!2358 lt!8795) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8795) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4123 res!14615) b!23865))

(assert (= (and b!23865 res!14614) b!23866))

(assert (=> d!4123 m!16812))

(declare-fun m!17687 () Bool)

(assert (=> d!4123 m!17687))

(assert (=> d!4123 m!16948))

(declare-fun m!17689 () Bool)

(assert (=> b!23865 m!17689))

(declare-fun m!17691 () Bool)

(assert (=> b!23866 m!17691))

(assert (=> bm!1929 d!4123))

(declare-fun condMapEmpty!1032 () Bool)

(declare-fun mapDefault!1032 () ValueCell!312)

(assert (=> mapNonEmpty!1031 (= condMapEmpty!1032 (= mapRest!1031 ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1032)))))

(declare-fun e!15471 () Bool)

(declare-fun mapRes!1032 () Bool)

(assert (=> mapNonEmpty!1031 (= tp!3533 (and e!15471 mapRes!1032))))

(declare-fun mapNonEmpty!1032 () Bool)

(declare-fun tp!3534 () Bool)

(declare-fun e!15470 () Bool)

(assert (=> mapNonEmpty!1032 (= mapRes!1032 (and tp!3534 e!15470))))

(declare-fun mapKey!1032 () (_ BitVec 32))

(declare-fun mapValue!1032 () ValueCell!312)

(declare-fun mapRest!1032 () (Array (_ BitVec 32) ValueCell!312))

(assert (=> mapNonEmpty!1032 (= mapRest!1031 (store mapRest!1032 mapKey!1032 mapValue!1032))))

(declare-fun mapIsEmpty!1032 () Bool)

(assert (=> mapIsEmpty!1032 mapRes!1032))

(declare-fun b!23868 () Bool)

(assert (=> b!23868 (= e!15471 tp_is_empty!1023)))

(declare-fun b!23867 () Bool)

(assert (=> b!23867 (= e!15470 tp_is_empty!1023)))

(assert (= (and mapNonEmpty!1031 condMapEmpty!1032) mapIsEmpty!1032))

(assert (= (and mapNonEmpty!1031 (not condMapEmpty!1032)) mapNonEmpty!1032))

(assert (= (and mapNonEmpty!1032 ((_ is ValueCellFull!312) mapValue!1032)) b!23867))

(assert (= (and mapNonEmpty!1031 ((_ is ValueCellFull!312) mapDefault!1032)) b!23868))

(declare-fun m!17693 () Bool)

(assert (=> mapNonEmpty!1032 m!17693))

(check-sat (not b!23580) (not b!23831) (not b!23569) (not d!4015) (not b!23631) (not d!4059) (not d!4063) (not bm!1992) (not b_lambda!1585) (not b!23773) (not d!4013) (not d!4089) (not bm!2016) (not b!23596) (not d!4039) (not b!23655) (not b!23606) (not d!4123) (not b_lambda!1583) (not d!4029) (not d!4105) (not b_next!759) (not b!23573) (not bm!1978) (not b!23578) (not bm!1991) (not b!23588) (not b!23571) (not b!23562) (not b!23725) (not d!4053) (not b!23624) (not bm!2012) (not b!23803) (not b!23601) (not b!23746) (not b!23625) (not b!23801) (not b!23452) (not d!4073) (not b!23721) (not b!23574) (not bm!1990) (not b!23753) (not d!4069) (not b!23509) (not b!23833) (not b!23532) (not b!23511) (not b!23800) (not bm!2026) (not bm!2040) (not bm!2015) (not bm!2002) (not b!23614) (not b!23548) (not bm!2043) (not b!23864) (not d!4085) (not b!23750) (not b!23649) (not b!23796) (not bm!1987) (not b!23814) (not b!23560) (not b!23755) (not d!4009) (not b!23850) (not d!4079) (not b!23517) (not b!23660) (not b!23769) (not d!4083) (not d!4119) (not d!4037) (not b!23851) (not d!4109) (not b!23594) (not b_lambda!1593) (not b!23724) (not d!4061) (not b!23558) (not d!4057) (not b!23859) (not b!23849) (not d!4003) (not d!4045) (not b!23854) (not b!23618) (not d!4065) (not b!23733) (not b!23570) (not bm!1980) (not bm!1971) (not b!23798) (not d!4043) (not b!23557) (not b!23792) (not d!4081) (not d!4111) (not b!23575) (not b!23651) (not b!23723) (not b!23843) (not bm!2021) (not b!23830) (not b!23590) (not b!23771) (not d!4019) (not b!23559) (not bm!1977) (not b!23554) (not bm!2018) (not b!23612) (not b!23653) (not b!23637) (not b!23765) (not b!23790) (not b!23555) (not bm!2028) (not d!4031) (not b!23525) (not b_lambda!1591) (not d!4033) (not b!23519) (not d!4071) (not b!23462) (not d!4075) (not b!23437) (not b_lambda!1587) (not bm!1994) (not b!23749) (not b!23592) (not b!23627) (not b!23748) (not bm!2024) (not b!23628) (not b!23545) (not b!23745) (not b!23538) (not bm!1973) tp_is_empty!1023 (not d!4115) (not bm!1983) (not bm!1984) (not b!23523) (not bm!1997) (not b!23620) (not bm!2034) (not b_lambda!1597) (not b!23521) (not d!4099) (not b!23599) (not b!23863) (not d!4121) (not b!23572) (not d!4101) (not bm!1985) (not bm!2041) (not bm!2003) (not d!4047) (not bm!2019) (not b!23832) (not b!23847) (not bm!2031) (not d!4087) (not b!23527) (not b!23728) (not bm!1970) (not d!4021) (not b!23604) (not b!23747) (not b!23817) (not d!4041) (not d!4097) (not b_lambda!1595) (not b!23865) (not b!23551) (not b!23546) (not d!4035) (not bm!2044) (not b!23815) (not bm!2017) (not b!23622) (not b!23761) (not b!23784) (not b!23767) (not b!23616) (not b!23782) (not bm!2014) (not b!23794) (not b!23623) (not bm!1976) (not d!4027) (not b!23464) (not b!23763) (not bm!2025) (not b!23645) (not b!23639) (not b!23647) (not b_lambda!1589) (not d!4077) (not d!4051) (not b!23845) (not d!4007) b_and!1501 (not b!23586) (not d!4025) (not b!23626) (not mapNonEmpty!1032) (not d!4095) (not b!23533) (not b!23778) (not b!23597) (not bm!2037))
(check-sat b_and!1501 (not b_next!759))
(get-model)

(declare-fun d!4125 () Bool)

(declare-fun e!15472 () Bool)

(assert (=> d!4125 e!15472))

(declare-fun res!14616 () Bool)

(assert (=> d!4125 (=> res!14616 e!15472)))

(declare-fun lt!8797 () Bool)

(assert (=> d!4125 (= res!14616 (not lt!8797))))

(declare-fun lt!8798 () Bool)

(assert (=> d!4125 (= lt!8797 lt!8798)))

(declare-fun lt!8796 () Unit!514)

(declare-fun e!15473 () Unit!514)

(assert (=> d!4125 (= lt!8796 e!15473)))

(declare-fun c!3138 () Bool)

(assert (=> d!4125 (= c!3138 lt!8798)))

(assert (=> d!4125 (= lt!8798 (containsKey!25 (toList!292 lt!8444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4125 (= (contains!220 lt!8444 #b1000000000000000000000000000000000000000000000000000000000000000) lt!8797)))

(declare-fun b!23869 () Bool)

(declare-fun lt!8799 () Unit!514)

(assert (=> b!23869 (= e!15473 lt!8799)))

(assert (=> b!23869 (= lt!8799 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23869 (isDefined!23 (getValueByKey!61 (toList!292 lt!8444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23870 () Bool)

(declare-fun Unit!544 () Unit!514)

(assert (=> b!23870 (= e!15473 Unit!544)))

(declare-fun b!23871 () Bool)

(assert (=> b!23871 (= e!15472 (isDefined!23 (getValueByKey!61 (toList!292 lt!8444) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4125 c!3138) b!23869))

(assert (= (and d!4125 (not c!3138)) b!23870))

(assert (= (and d!4125 (not res!14616)) b!23871))

(declare-fun m!17695 () Bool)

(assert (=> d!4125 m!17695))

(declare-fun m!17697 () Bool)

(assert (=> b!23869 m!17697))

(declare-fun m!17699 () Bool)

(assert (=> b!23869 m!17699))

(assert (=> b!23869 m!17699))

(declare-fun m!17701 () Bool)

(assert (=> b!23869 m!17701))

(assert (=> b!23871 m!17699))

(assert (=> b!23871 m!17699))

(assert (=> b!23871 m!17701))

(assert (=> bm!1976 d!4125))

(declare-fun d!4127 () Bool)

(declare-fun c!3143 () Bool)

(assert (=> d!4127 (= c!3143 (and ((_ is Cons!561) (toList!292 lt!8465)) (= (_1!480 (h!1127 (toList!292 lt!8465))) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!15478 () Option!67)

(assert (=> d!4127 (= (getValueByKey!61 (toList!292 lt!8465) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) e!15478)))

(declare-fun b!23883 () Bool)

(declare-fun e!15479 () Option!67)

(assert (=> b!23883 (= e!15479 None!65)))

(declare-fun b!23882 () Bool)

(assert (=> b!23882 (= e!15479 (getValueByKey!61 (t!3238 (toList!292 lt!8465)) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!23881 () Bool)

(assert (=> b!23881 (= e!15478 e!15479)))

(declare-fun c!3144 () Bool)

(assert (=> b!23881 (= c!3144 (and ((_ is Cons!561) (toList!292 lt!8465)) (not (= (_1!480 (h!1127 (toList!292 lt!8465))) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23880 () Bool)

(assert (=> b!23880 (= e!15478 (Some!66 (_2!480 (h!1127 (toList!292 lt!8465)))))))

(assert (= (and d!4127 c!3143) b!23880))

(assert (= (and d!4127 (not c!3143)) b!23881))

(assert (= (and b!23881 c!3144) b!23882))

(assert (= (and b!23881 (not c!3144)) b!23883))

(declare-fun m!17703 () Bool)

(assert (=> b!23882 m!17703))

(assert (=> b!23532 d!4127))

(declare-fun d!4129 () Bool)

(assert (=> d!4129 (= (apply!29 (+!45 lt!8537 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8535) (apply!29 lt!8537 lt!8535))))

(declare-fun lt!8802 () Unit!514)

(declare-fun choose!213 (ListLongMap!553 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!514)

(assert (=> d!4129 (= lt!8802 (choose!213 lt!8537 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8535))))

(declare-fun e!15482 () Bool)

(assert (=> d!4129 e!15482))

(declare-fun res!14619 () Bool)

(assert (=> d!4129 (=> (not res!14619) (not e!15482))))

(assert (=> d!4129 (= res!14619 (contains!220 lt!8537 lt!8535))))

(assert (=> d!4129 (= (addApplyDifferent!14 lt!8537 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8535) lt!8802)))

(declare-fun b!23887 () Bool)

(assert (=> b!23887 (= e!15482 (not (= lt!8535 lt!8540)))))

(assert (= (and d!4129 res!14619) b!23887))

(declare-fun m!17705 () Bool)

(assert (=> d!4129 m!17705))

(assert (=> d!4129 m!17250))

(assert (=> d!4129 m!17230))

(declare-fun m!17707 () Bool)

(assert (=> d!4129 m!17707))

(assert (=> d!4129 m!17250))

(assert (=> d!4129 m!17252))

(assert (=> b!23606 d!4129))

(declare-fun d!4131 () Bool)

(assert (=> d!4131 (= (apply!29 (+!45 lt!8536 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8539) (apply!29 lt!8536 lt!8539))))

(declare-fun lt!8803 () Unit!514)

(assert (=> d!4131 (= lt!8803 (choose!213 lt!8536 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8539))))

(declare-fun e!15483 () Bool)

(assert (=> d!4131 e!15483))

(declare-fun res!14620 () Bool)

(assert (=> d!4131 (=> (not res!14620) (not e!15483))))

(assert (=> d!4131 (= res!14620 (contains!220 lt!8536 lt!8539))))

(assert (=> d!4131 (= (addApplyDifferent!14 lt!8536 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8539) lt!8803)))

(declare-fun b!23888 () Bool)

(assert (=> b!23888 (= e!15483 (not (= lt!8539 lt!8532)))))

(assert (= (and d!4131 res!14620) b!23888))

(declare-fun m!17709 () Bool)

(assert (=> d!4131 m!17709))

(assert (=> d!4131 m!17248))

(assert (=> d!4131 m!17246))

(declare-fun m!17711 () Bool)

(assert (=> d!4131 m!17711))

(assert (=> d!4131 m!17248))

(assert (=> d!4131 m!17256))

(assert (=> b!23606 d!4131))

(declare-fun d!4133 () Bool)

(declare-fun e!15484 () Bool)

(assert (=> d!4133 e!15484))

(declare-fun res!14621 () Bool)

(assert (=> d!4133 (=> (not res!14621) (not e!15484))))

(declare-fun lt!8804 () ListLongMap!553)

(assert (=> d!4133 (= res!14621 (contains!220 lt!8804 (_1!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!8807 () List!565)

(assert (=> d!4133 (= lt!8804 (ListLongMap!554 lt!8807))))

(declare-fun lt!8805 () Unit!514)

(declare-fun lt!8806 () Unit!514)

(assert (=> d!4133 (= lt!8805 lt!8806)))

(assert (=> d!4133 (= (getValueByKey!61 lt!8807 (_1!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4133 (= lt!8806 (lemmaContainsTupThenGetReturnValue!18 lt!8807 (_1!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4133 (= lt!8807 (insertStrictlySorted!18 (toList!292 lt!8534) (_1!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4133 (= (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8804)))

(declare-fun b!23889 () Bool)

(declare-fun res!14622 () Bool)

(assert (=> b!23889 (=> (not res!14622) (not e!15484))))

(assert (=> b!23889 (= res!14622 (= (getValueByKey!61 (toList!292 lt!8804) (_1!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!23890 () Bool)

(assert (=> b!23890 (= e!15484 (contains!221 (toList!292 lt!8804) (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4133 res!14621) b!23889))

(assert (= (and b!23889 res!14622) b!23890))

(declare-fun m!17713 () Bool)

(assert (=> d!4133 m!17713))

(declare-fun m!17715 () Bool)

(assert (=> d!4133 m!17715))

(declare-fun m!17717 () Bool)

(assert (=> d!4133 m!17717))

(declare-fun m!17719 () Bool)

(assert (=> d!4133 m!17719))

(declare-fun m!17721 () Bool)

(assert (=> b!23889 m!17721))

(declare-fun m!17723 () Bool)

(assert (=> b!23890 m!17723))

(assert (=> b!23606 d!4133))

(declare-fun d!4135 () Bool)

(assert (=> d!4135 (contains!220 (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8546)))

(declare-fun lt!8810 () Unit!514)

(declare-fun choose!214 (ListLongMap!553 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!514)

(assert (=> d!4135 (= lt!8810 (choose!214 lt!8534 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8546))))

(assert (=> d!4135 (contains!220 lt!8534 lt!8546)))

(assert (=> d!4135 (= (addStillContains!14 lt!8534 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8546) lt!8810)))

(declare-fun bs!962 () Bool)

(assert (= bs!962 d!4135))

(assert (=> bs!962 m!17232))

(assert (=> bs!962 m!17232))

(assert (=> bs!962 m!17234))

(declare-fun m!17725 () Bool)

(assert (=> bs!962 m!17725))

(declare-fun m!17727 () Bool)

(assert (=> bs!962 m!17727))

(assert (=> b!23606 d!4135))

(declare-fun d!4137 () Bool)

(declare-fun get!391 (Option!67) V!1189)

(assert (=> d!4137 (= (apply!29 (+!45 lt!8537 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8535) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8537 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8535)))))

(declare-fun bs!963 () Bool)

(assert (= bs!963 d!4137))

(declare-fun m!17729 () Bool)

(assert (=> bs!963 m!17729))

(assert (=> bs!963 m!17729))

(declare-fun m!17731 () Bool)

(assert (=> bs!963 m!17731))

(assert (=> b!23606 d!4137))

(declare-fun d!4139 () Bool)

(declare-fun e!15505 () Bool)

(assert (=> d!4139 e!15505))

(declare-fun res!14632 () Bool)

(assert (=> d!4139 (=> (not res!14632) (not e!15505))))

(declare-fun lt!8827 () ListLongMap!553)

(assert (=> d!4139 (= res!14632 (not (contains!220 lt!8827 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15503 () ListLongMap!553)

(assert (=> d!4139 (= lt!8827 e!15503)))

(declare-fun c!3154 () Bool)

(assert (=> d!4139 (= c!3154 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4139 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4139 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8827)))

(declare-fun b!23916 () Bool)

(declare-fun res!14633 () Bool)

(assert (=> b!23916 (=> (not res!14633) (not e!15505))))

(assert (=> b!23916 (= res!14633 (not (contains!220 lt!8827 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23917 () Bool)

(declare-fun e!15502 () Bool)

(declare-fun e!15501 () Bool)

(assert (=> b!23917 (= e!15502 e!15501)))

(declare-fun c!3156 () Bool)

(assert (=> b!23917 (= c!3156 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23918 () Bool)

(assert (=> b!23918 (= e!15501 (= lt!8827 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23919 () Bool)

(assert (=> b!23919 (= e!15503 (ListLongMap!554 Nil!562))))

(declare-fun b!23920 () Bool)

(declare-fun e!15500 () ListLongMap!553)

(declare-fun call!2050 () ListLongMap!553)

(assert (=> b!23920 (= e!15500 call!2050)))

(declare-fun bm!2047 () Bool)

(assert (=> bm!2047 (= call!2050 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!23921 () Bool)

(assert (=> b!23921 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> b!23921 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun e!15504 () Bool)

(assert (=> b!23921 (= e!15504 (= (apply!29 lt!8827 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15499 () Bool)

(declare-fun b!23922 () Bool)

(assert (=> b!23922 (= e!15499 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!23922 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!23923 () Bool)

(assert (=> b!23923 (= e!15503 e!15500)))

(declare-fun c!3153 () Bool)

(assert (=> b!23923 (= c!3153 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!23924 () Bool)

(assert (=> b!23924 (= e!15502 e!15504)))

(assert (=> b!23924 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun res!14634 () Bool)

(assert (=> b!23924 (= res!14634 (contains!220 lt!8827 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!23924 (=> (not res!14634) (not e!15504))))

(declare-fun b!23925 () Bool)

(declare-fun isEmpty!173 (ListLongMap!553) Bool)

(assert (=> b!23925 (= e!15501 (isEmpty!173 lt!8827))))

(declare-fun b!23926 () Bool)

(declare-fun lt!8830 () Unit!514)

(declare-fun lt!8831 () Unit!514)

(assert (=> b!23926 (= lt!8830 lt!8831)))

(declare-fun lt!8829 () ListLongMap!553)

(declare-fun lt!8825 () (_ BitVec 64))

(declare-fun lt!8828 () (_ BitVec 64))

(declare-fun lt!8826 () V!1189)

(assert (=> b!23926 (not (contains!220 (+!45 lt!8829 (tuple2!947 lt!8825 lt!8826)) lt!8828))))

(declare-fun addStillNotContains!2 (ListLongMap!553 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!514)

(assert (=> b!23926 (= lt!8831 (addStillNotContains!2 lt!8829 lt!8825 lt!8826 lt!8828))))

(assert (=> b!23926 (= lt!8828 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!23926 (= lt!8826 (get!390 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23926 (= lt!8825 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!23926 (= lt!8829 call!2050)))

(assert (=> b!23926 (= e!15500 (+!45 call!2050 (tuple2!947 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (get!390 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!23927 () Bool)

(assert (=> b!23927 (= e!15505 e!15502)))

(declare-fun c!3155 () Bool)

(assert (=> b!23927 (= c!3155 e!15499)))

(declare-fun res!14631 () Bool)

(assert (=> b!23927 (=> (not res!14631) (not e!15499))))

(assert (=> b!23927 (= res!14631 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4139 c!3154) b!23919))

(assert (= (and d!4139 (not c!3154)) b!23923))

(assert (= (and b!23923 c!3153) b!23926))

(assert (= (and b!23923 (not c!3153)) b!23920))

(assert (= (or b!23926 b!23920) bm!2047))

(assert (= (and d!4139 res!14632) b!23916))

(assert (= (and b!23916 res!14633) b!23927))

(assert (= (and b!23927 res!14631) b!23922))

(assert (= (and b!23927 c!3155) b!23924))

(assert (= (and b!23927 (not c!3155)) b!23917))

(assert (= (and b!23924 res!14634) b!23921))

(assert (= (and b!23917 c!3156) b!23918))

(assert (= (and b!23917 (not c!3156)) b!23925))

(declare-fun b_lambda!1599 () Bool)

(assert (=> (not b_lambda!1599) (not b!23921)))

(assert (=> b!23921 t!3241))

(declare-fun b_and!1503 () Bool)

(assert (= b_and!1501 (and (=> t!3241 result!1101) b_and!1503)))

(declare-fun b_lambda!1601 () Bool)

(assert (=> (not b_lambda!1601) (not b!23926)))

(assert (=> b!23926 t!3241))

(declare-fun b_and!1505 () Bool)

(assert (= b_and!1503 (and (=> t!3241 result!1101) b_and!1505)))

(assert (=> b!23923 m!16992))

(assert (=> b!23923 m!16992))

(assert (=> b!23923 m!16996))

(declare-fun m!17733 () Bool)

(assert (=> b!23925 m!17733))

(declare-fun m!17735 () Bool)

(assert (=> b!23926 m!17735))

(declare-fun m!17737 () Bool)

(assert (=> b!23926 m!17737))

(assert (=> b!23926 m!17260))

(assert (=> b!23926 m!17032))

(assert (=> b!23926 m!17262))

(declare-fun m!17739 () Bool)

(assert (=> b!23926 m!17739))

(assert (=> b!23926 m!17032))

(assert (=> b!23926 m!17260))

(assert (=> b!23926 m!17735))

(declare-fun m!17741 () Bool)

(assert (=> b!23926 m!17741))

(assert (=> b!23926 m!16992))

(assert (=> b!23922 m!16992))

(assert (=> b!23922 m!16992))

(assert (=> b!23922 m!16996))

(declare-fun m!17743 () Bool)

(assert (=> bm!2047 m!17743))

(assert (=> b!23918 m!17743))

(declare-fun m!17745 () Bool)

(assert (=> b!23916 m!17745))

(assert (=> b!23924 m!16992))

(assert (=> b!23924 m!16992))

(declare-fun m!17747 () Bool)

(assert (=> b!23924 m!17747))

(declare-fun m!17749 () Bool)

(assert (=> d!4139 m!17749))

(assert (=> d!4139 m!16948))

(assert (=> b!23921 m!17260))

(assert (=> b!23921 m!17032))

(assert (=> b!23921 m!17262))

(assert (=> b!23921 m!16992))

(declare-fun m!17751 () Bool)

(assert (=> b!23921 m!17751))

(assert (=> b!23921 m!16992))

(assert (=> b!23921 m!17032))

(assert (=> b!23921 m!17260))

(assert (=> b!23606 d!4139))

(declare-fun d!4141 () Bool)

(assert (=> d!4141 (= (apply!29 (+!45 lt!8544 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8548) (apply!29 lt!8544 lt!8548))))

(declare-fun lt!8832 () Unit!514)

(assert (=> d!4141 (= lt!8832 (choose!213 lt!8544 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8548))))

(declare-fun e!15506 () Bool)

(assert (=> d!4141 e!15506))

(declare-fun res!14635 () Bool)

(assert (=> d!4141 (=> (not res!14635) (not e!15506))))

(assert (=> d!4141 (= res!14635 (contains!220 lt!8544 lt!8548))))

(assert (=> d!4141 (= (addApplyDifferent!14 lt!8544 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8548) lt!8832)))

(declare-fun b!23928 () Bool)

(assert (=> b!23928 (= e!15506 (not (= lt!8548 lt!8530)))))

(assert (= (and d!4141 res!14635) b!23928))

(declare-fun m!17753 () Bool)

(assert (=> d!4141 m!17753))

(assert (=> d!4141 m!17240))

(assert (=> d!4141 m!17236))

(declare-fun m!17755 () Bool)

(assert (=> d!4141 m!17755))

(assert (=> d!4141 m!17240))

(assert (=> d!4141 m!17254))

(assert (=> b!23606 d!4141))

(declare-fun d!4143 () Bool)

(declare-fun e!15507 () Bool)

(assert (=> d!4143 e!15507))

(declare-fun res!14636 () Bool)

(assert (=> d!4143 (=> (not res!14636) (not e!15507))))

(declare-fun lt!8833 () ListLongMap!553)

(assert (=> d!4143 (= res!14636 (contains!220 lt!8833 (_1!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!8836 () List!565)

(assert (=> d!4143 (= lt!8833 (ListLongMap!554 lt!8836))))

(declare-fun lt!8834 () Unit!514)

(declare-fun lt!8835 () Unit!514)

(assert (=> d!4143 (= lt!8834 lt!8835)))

(assert (=> d!4143 (= (getValueByKey!61 lt!8836 (_1!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4143 (= lt!8835 (lemmaContainsTupThenGetReturnValue!18 lt!8836 (_1!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4143 (= lt!8836 (insertStrictlySorted!18 (toList!292 lt!8536) (_1!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4143 (= (+!45 lt!8536 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8833)))

(declare-fun b!23929 () Bool)

(declare-fun res!14637 () Bool)

(assert (=> b!23929 (=> (not res!14637) (not e!15507))))

(assert (=> b!23929 (= res!14637 (= (getValueByKey!61 (toList!292 lt!8833) (_1!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!23930 () Bool)

(assert (=> b!23930 (= e!15507 (contains!221 (toList!292 lt!8833) (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4143 res!14636) b!23929))

(assert (= (and b!23929 res!14637) b!23930))

(declare-fun m!17757 () Bool)

(assert (=> d!4143 m!17757))

(declare-fun m!17759 () Bool)

(assert (=> d!4143 m!17759))

(declare-fun m!17761 () Bool)

(assert (=> d!4143 m!17761))

(declare-fun m!17763 () Bool)

(assert (=> d!4143 m!17763))

(declare-fun m!17765 () Bool)

(assert (=> b!23929 m!17765))

(declare-fun m!17767 () Bool)

(assert (=> b!23930 m!17767))

(assert (=> b!23606 d!4143))

(declare-fun d!4145 () Bool)

(assert (=> d!4145 (= (apply!29 lt!8537 lt!8535) (get!391 (getValueByKey!61 (toList!292 lt!8537) lt!8535)))))

(declare-fun bs!964 () Bool)

(assert (= bs!964 d!4145))

(declare-fun m!17769 () Bool)

(assert (=> bs!964 m!17769))

(assert (=> bs!964 m!17769))

(declare-fun m!17771 () Bool)

(assert (=> bs!964 m!17771))

(assert (=> b!23606 d!4145))

(declare-fun d!4147 () Bool)

(assert (=> d!4147 (= (apply!29 (+!45 lt!8544 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8548) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8544 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8548)))))

(declare-fun bs!965 () Bool)

(assert (= bs!965 d!4147))

(declare-fun m!17773 () Bool)

(assert (=> bs!965 m!17773))

(assert (=> bs!965 m!17773))

(declare-fun m!17775 () Bool)

(assert (=> bs!965 m!17775))

(assert (=> b!23606 d!4147))

(declare-fun d!4149 () Bool)

(declare-fun e!15508 () Bool)

(assert (=> d!4149 e!15508))

(declare-fun res!14638 () Bool)

(assert (=> d!4149 (=> (not res!14638) (not e!15508))))

(declare-fun lt!8837 () ListLongMap!553)

(assert (=> d!4149 (= res!14638 (contains!220 lt!8837 (_1!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!8840 () List!565)

(assert (=> d!4149 (= lt!8837 (ListLongMap!554 lt!8840))))

(declare-fun lt!8838 () Unit!514)

(declare-fun lt!8839 () Unit!514)

(assert (=> d!4149 (= lt!8838 lt!8839)))

(assert (=> d!4149 (= (getValueByKey!61 lt!8840 (_1!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4149 (= lt!8839 (lemmaContainsTupThenGetReturnValue!18 lt!8840 (_1!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4149 (= lt!8840 (insertStrictlySorted!18 (toList!292 lt!8544) (_1!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4149 (= (+!45 lt!8544 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8837)))

(declare-fun b!23931 () Bool)

(declare-fun res!14639 () Bool)

(assert (=> b!23931 (=> (not res!14639) (not e!15508))))

(assert (=> b!23931 (= res!14639 (= (getValueByKey!61 (toList!292 lt!8837) (_1!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!23932 () Bool)

(assert (=> b!23932 (= e!15508 (contains!221 (toList!292 lt!8837) (tuple2!947 lt!8530 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4149 res!14638) b!23931))

(assert (= (and b!23931 res!14639) b!23932))

(declare-fun m!17777 () Bool)

(assert (=> d!4149 m!17777))

(declare-fun m!17779 () Bool)

(assert (=> d!4149 m!17779))

(declare-fun m!17781 () Bool)

(assert (=> d!4149 m!17781))

(declare-fun m!17783 () Bool)

(assert (=> d!4149 m!17783))

(declare-fun m!17785 () Bool)

(assert (=> b!23931 m!17785))

(declare-fun m!17787 () Bool)

(assert (=> b!23932 m!17787))

(assert (=> b!23606 d!4149))

(declare-fun d!4151 () Bool)

(assert (=> d!4151 (= (apply!29 (+!45 lt!8536 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8539) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8536 (tuple2!947 lt!8532 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8539)))))

(declare-fun bs!966 () Bool)

(assert (= bs!966 d!4151))

(declare-fun m!17789 () Bool)

(assert (=> bs!966 m!17789))

(assert (=> bs!966 m!17789))

(declare-fun m!17791 () Bool)

(assert (=> bs!966 m!17791))

(assert (=> b!23606 d!4151))

(declare-fun d!4153 () Bool)

(assert (=> d!4153 (= (apply!29 lt!8544 lt!8548) (get!391 (getValueByKey!61 (toList!292 lt!8544) lt!8548)))))

(declare-fun bs!967 () Bool)

(assert (= bs!967 d!4153))

(declare-fun m!17793 () Bool)

(assert (=> bs!967 m!17793))

(assert (=> bs!967 m!17793))

(declare-fun m!17795 () Bool)

(assert (=> bs!967 m!17795))

(assert (=> b!23606 d!4153))

(declare-fun d!4155 () Bool)

(declare-fun e!15509 () Bool)

(assert (=> d!4155 e!15509))

(declare-fun res!14640 () Bool)

(assert (=> d!4155 (=> res!14640 e!15509)))

(declare-fun lt!8842 () Bool)

(assert (=> d!4155 (= res!14640 (not lt!8842))))

(declare-fun lt!8843 () Bool)

(assert (=> d!4155 (= lt!8842 lt!8843)))

(declare-fun lt!8841 () Unit!514)

(declare-fun e!15510 () Unit!514)

(assert (=> d!4155 (= lt!8841 e!15510)))

(declare-fun c!3157 () Bool)

(assert (=> d!4155 (= c!3157 lt!8843)))

(assert (=> d!4155 (= lt!8843 (containsKey!25 (toList!292 (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8546))))

(assert (=> d!4155 (= (contains!220 (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8546) lt!8842)))

(declare-fun b!23933 () Bool)

(declare-fun lt!8844 () Unit!514)

(assert (=> b!23933 (= e!15510 lt!8844)))

(assert (=> b!23933 (= lt!8844 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8546))))

(assert (=> b!23933 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8546))))

(declare-fun b!23934 () Bool)

(declare-fun Unit!545 () Unit!514)

(assert (=> b!23934 (= e!15510 Unit!545)))

(declare-fun b!23935 () Bool)

(assert (=> b!23935 (= e!15509 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8534 (tuple2!947 lt!8545 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8546)))))

(assert (= (and d!4155 c!3157) b!23933))

(assert (= (and d!4155 (not c!3157)) b!23934))

(assert (= (and d!4155 (not res!14640)) b!23935))

(declare-fun m!17797 () Bool)

(assert (=> d!4155 m!17797))

(declare-fun m!17799 () Bool)

(assert (=> b!23933 m!17799))

(declare-fun m!17801 () Bool)

(assert (=> b!23933 m!17801))

(assert (=> b!23933 m!17801))

(declare-fun m!17803 () Bool)

(assert (=> b!23933 m!17803))

(assert (=> b!23935 m!17801))

(assert (=> b!23935 m!17801))

(assert (=> b!23935 m!17803))

(assert (=> b!23606 d!4155))

(declare-fun d!4157 () Bool)

(declare-fun e!15511 () Bool)

(assert (=> d!4157 e!15511))

(declare-fun res!14641 () Bool)

(assert (=> d!4157 (=> (not res!14641) (not e!15511))))

(declare-fun lt!8845 () ListLongMap!553)

(assert (=> d!4157 (= res!14641 (contains!220 lt!8845 (_1!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!8848 () List!565)

(assert (=> d!4157 (= lt!8845 (ListLongMap!554 lt!8848))))

(declare-fun lt!8846 () Unit!514)

(declare-fun lt!8847 () Unit!514)

(assert (=> d!4157 (= lt!8846 lt!8847)))

(assert (=> d!4157 (= (getValueByKey!61 lt!8848 (_1!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4157 (= lt!8847 (lemmaContainsTupThenGetReturnValue!18 lt!8848 (_1!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4157 (= lt!8848 (insertStrictlySorted!18 (toList!292 lt!8537) (_1!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4157 (= (+!45 lt!8537 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8845)))

(declare-fun b!23936 () Bool)

(declare-fun res!14642 () Bool)

(assert (=> b!23936 (=> (not res!14642) (not e!15511))))

(assert (=> b!23936 (= res!14642 (= (getValueByKey!61 (toList!292 lt!8845) (_1!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!23937 () Bool)

(assert (=> b!23937 (= e!15511 (contains!221 (toList!292 lt!8845) (tuple2!947 lt!8540 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4157 res!14641) b!23936))

(assert (= (and b!23936 res!14642) b!23937))

(declare-fun m!17805 () Bool)

(assert (=> d!4157 m!17805))

(declare-fun m!17807 () Bool)

(assert (=> d!4157 m!17807))

(declare-fun m!17809 () Bool)

(assert (=> d!4157 m!17809))

(declare-fun m!17811 () Bool)

(assert (=> d!4157 m!17811))

(declare-fun m!17813 () Bool)

(assert (=> b!23936 m!17813))

(declare-fun m!17815 () Bool)

(assert (=> b!23937 m!17815))

(assert (=> b!23606 d!4157))

(declare-fun d!4159 () Bool)

(assert (=> d!4159 (= (apply!29 lt!8536 lt!8539) (get!391 (getValueByKey!61 (toList!292 lt!8536) lt!8539)))))

(declare-fun bs!968 () Bool)

(assert (= bs!968 d!4159))

(declare-fun m!17817 () Bool)

(assert (=> bs!968 m!17817))

(assert (=> bs!968 m!17817))

(declare-fun m!17819 () Bool)

(assert (=> bs!968 m!17819))

(assert (=> b!23606 d!4159))

(declare-fun d!4161 () Bool)

(declare-fun e!15512 () Bool)

(assert (=> d!4161 e!15512))

(declare-fun res!14643 () Bool)

(assert (=> d!4161 (=> res!14643 e!15512)))

(declare-fun lt!8850 () Bool)

(assert (=> d!4161 (= res!14643 (not lt!8850))))

(declare-fun lt!8851 () Bool)

(assert (=> d!4161 (= lt!8850 lt!8851)))

(declare-fun lt!8849 () Unit!514)

(declare-fun e!15513 () Unit!514)

(assert (=> d!4161 (= lt!8849 e!15513)))

(declare-fun c!3158 () Bool)

(assert (=> d!4161 (= c!3158 lt!8851)))

(assert (=> d!4161 (= lt!8851 (containsKey!25 (toList!292 lt!8499) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> d!4161 (= (contains!220 lt!8499 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) lt!8850)))

(declare-fun b!23938 () Bool)

(declare-fun lt!8852 () Unit!514)

(assert (=> b!23938 (= e!15513 lt!8852)))

(assert (=> b!23938 (= lt!8852 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8499) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> b!23938 (isDefined!23 (getValueByKey!61 (toList!292 lt!8499) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23939 () Bool)

(declare-fun Unit!546 () Unit!514)

(assert (=> b!23939 (= e!15513 Unit!546)))

(declare-fun b!23940 () Bool)

(assert (=> b!23940 (= e!15512 (isDefined!23 (getValueByKey!61 (toList!292 lt!8499) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(assert (= (and d!4161 c!3158) b!23938))

(assert (= (and d!4161 (not c!3158)) b!23939))

(assert (= (and d!4161 (not res!14643)) b!23940))

(declare-fun m!17821 () Bool)

(assert (=> d!4161 m!17821))

(declare-fun m!17823 () Bool)

(assert (=> b!23938 m!17823))

(assert (=> b!23938 m!17140))

(assert (=> b!23938 m!17140))

(declare-fun m!17825 () Bool)

(assert (=> b!23938 m!17825))

(assert (=> b!23940 m!17140))

(assert (=> b!23940 m!17140))

(assert (=> b!23940 m!17825))

(assert (=> d!4043 d!4161))

(declare-fun d!4163 () Bool)

(declare-fun c!3159 () Bool)

(assert (=> d!4163 (= c!3159 (and ((_ is Cons!561) lt!8502) (= (_1!480 (h!1127 lt!8502)) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun e!15514 () Option!67)

(assert (=> d!4163 (= (getValueByKey!61 lt!8502 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) e!15514)))

(declare-fun b!23944 () Bool)

(declare-fun e!15515 () Option!67)

(assert (=> b!23944 (= e!15515 None!65)))

(declare-fun b!23943 () Bool)

(assert (=> b!23943 (= e!15515 (getValueByKey!61 (t!3238 lt!8502) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23942 () Bool)

(assert (=> b!23942 (= e!15514 e!15515)))

(declare-fun c!3160 () Bool)

(assert (=> b!23942 (= c!3160 (and ((_ is Cons!561) lt!8502) (not (= (_1!480 (h!1127 lt!8502)) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))))

(declare-fun b!23941 () Bool)

(assert (=> b!23941 (= e!15514 (Some!66 (_2!480 (h!1127 lt!8502))))))

(assert (= (and d!4163 c!3159) b!23941))

(assert (= (and d!4163 (not c!3159)) b!23942))

(assert (= (and b!23942 c!3160) b!23943))

(assert (= (and b!23942 (not c!3160)) b!23944))

(declare-fun m!17827 () Bool)

(assert (=> b!23943 m!17827))

(assert (=> d!4043 d!4163))

(declare-fun d!4165 () Bool)

(assert (=> d!4165 (= (getValueByKey!61 lt!8502 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) (Some!66 (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun lt!8855 () Unit!514)

(declare-fun choose!215 (List!565 (_ BitVec 64) V!1189) Unit!514)

(assert (=> d!4165 (= lt!8855 (choose!215 lt!8502 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun e!15518 () Bool)

(assert (=> d!4165 e!15518))

(declare-fun res!14648 () Bool)

(assert (=> d!4165 (=> (not res!14648) (not e!15518))))

(declare-fun isStrictlySorted!168 (List!565) Bool)

(assert (=> d!4165 (= res!14648 (isStrictlySorted!168 lt!8502))))

(assert (=> d!4165 (= (lemmaContainsTupThenGetReturnValue!18 lt!8502 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) lt!8855)))

(declare-fun b!23949 () Bool)

(declare-fun res!14649 () Bool)

(assert (=> b!23949 (=> (not res!14649) (not e!15518))))

(assert (=> b!23949 (= res!14649 (containsKey!25 lt!8502 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23950 () Bool)

(assert (=> b!23950 (= e!15518 (contains!221 lt!8502 (tuple2!947 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(assert (= (and d!4165 res!14648) b!23949))

(assert (= (and b!23949 res!14649) b!23950))

(assert (=> d!4165 m!17134))

(declare-fun m!17829 () Bool)

(assert (=> d!4165 m!17829))

(declare-fun m!17831 () Bool)

(assert (=> d!4165 m!17831))

(declare-fun m!17833 () Bool)

(assert (=> b!23949 m!17833))

(declare-fun m!17835 () Bool)

(assert (=> b!23950 m!17835))

(assert (=> d!4043 d!4165))

(declare-fun bm!2054 () Bool)

(declare-fun call!2059 () List!565)

(declare-fun call!2058 () List!565)

(assert (=> bm!2054 (= call!2059 call!2058)))

(declare-fun bm!2055 () Bool)

(declare-fun call!2057 () List!565)

(assert (=> bm!2055 (= call!2057 call!2059)))

(declare-fun b!23972 () Bool)

(declare-fun e!15529 () List!565)

(assert (=> b!23972 (= e!15529 call!2059)))

(declare-fun b!23973 () Bool)

(declare-fun c!3171 () Bool)

(assert (=> b!23973 (= c!3171 (and ((_ is Cons!561) (toList!292 e!15153)) (bvsgt (_1!480 (h!1127 (toList!292 e!15153))) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun e!15532 () List!565)

(assert (=> b!23973 (= e!15529 e!15532)))

(declare-fun e!15531 () List!565)

(declare-fun b!23974 () Bool)

(declare-fun c!3169 () Bool)

(assert (=> b!23974 (= e!15531 (ite c!3169 (t!3238 (toList!292 e!15153)) (ite c!3171 (Cons!561 (h!1127 (toList!292 e!15153)) (t!3238 (toList!292 e!15153))) Nil!562)))))

(declare-fun b!23975 () Bool)

(assert (=> b!23975 (= e!15531 (insertStrictlySorted!18 (t!3238 (toList!292 e!15153)) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23976 () Bool)

(assert (=> b!23976 (= e!15532 call!2057)))

(declare-fun b!23977 () Bool)

(declare-fun e!15533 () List!565)

(assert (=> b!23977 (= e!15533 e!15529)))

(assert (=> b!23977 (= c!3169 (and ((_ is Cons!561) (toList!292 e!15153)) (= (_1!480 (h!1127 (toList!292 e!15153))) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun d!4167 () Bool)

(declare-fun e!15530 () Bool)

(assert (=> d!4167 e!15530))

(declare-fun res!14655 () Bool)

(assert (=> d!4167 (=> (not res!14655) (not e!15530))))

(declare-fun lt!8858 () List!565)

(assert (=> d!4167 (= res!14655 (isStrictlySorted!168 lt!8858))))

(assert (=> d!4167 (= lt!8858 e!15533)))

(declare-fun c!3170 () Bool)

(assert (=> d!4167 (= c!3170 (and ((_ is Cons!561) (toList!292 e!15153)) (bvslt (_1!480 (h!1127 (toList!292 e!15153))) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(assert (=> d!4167 (isStrictlySorted!168 (toList!292 e!15153))))

(assert (=> d!4167 (= (insertStrictlySorted!18 (toList!292 e!15153) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) lt!8858)))

(declare-fun b!23971 () Bool)

(assert (=> b!23971 (= e!15530 (contains!221 lt!8858 (tuple2!947 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun b!23978 () Bool)

(assert (=> b!23978 (= e!15533 call!2058)))

(declare-fun bm!2056 () Bool)

(declare-fun $colon$colon!30 (List!565 tuple2!946) List!565)

(assert (=> bm!2056 (= call!2058 ($colon$colon!30 e!15531 (ite c!3170 (h!1127 (toList!292 e!15153)) (tuple2!947 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (_2!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))))

(declare-fun c!3172 () Bool)

(assert (=> bm!2056 (= c!3172 c!3170)))

(declare-fun b!23979 () Bool)

(assert (=> b!23979 (= e!15532 call!2057)))

(declare-fun b!23980 () Bool)

(declare-fun res!14654 () Bool)

(assert (=> b!23980 (=> (not res!14654) (not e!15530))))

(assert (=> b!23980 (= res!14654 (containsKey!25 lt!8858 (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (= (and d!4167 c!3170) b!23978))

(assert (= (and d!4167 (not c!3170)) b!23977))

(assert (= (and b!23977 c!3169) b!23972))

(assert (= (and b!23977 (not c!3169)) b!23973))

(assert (= (and b!23973 c!3171) b!23976))

(assert (= (and b!23973 (not c!3171)) b!23979))

(assert (= (or b!23976 b!23979) bm!2055))

(assert (= (or b!23972 bm!2055) bm!2054))

(assert (= (or b!23978 bm!2054) bm!2056))

(assert (= (and bm!2056 c!3172) b!23975))

(assert (= (and bm!2056 (not c!3172)) b!23974))

(assert (= (and d!4167 res!14655) b!23980))

(assert (= (and b!23980 res!14654) b!23971))

(declare-fun m!17837 () Bool)

(assert (=> bm!2056 m!17837))

(declare-fun m!17839 () Bool)

(assert (=> b!23971 m!17839))

(declare-fun m!17841 () Bool)

(assert (=> b!23980 m!17841))

(declare-fun m!17843 () Bool)

(assert (=> b!23975 m!17843))

(declare-fun m!17845 () Bool)

(assert (=> d!4167 m!17845))

(declare-fun m!17847 () Bool)

(assert (=> d!4167 m!17847))

(assert (=> d!4043 d!4167))

(declare-fun lt!8859 () (_ BitVec 32))

(declare-fun d!4169 () Bool)

(assert (=> d!4169 (and (bvsge lt!8859 #b00000000000000000000000000000000) (bvsle lt!8859 (bvsub (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun e!15535 () (_ BitVec 32))

(assert (=> d!4169 (= lt!8859 e!15535)))

(declare-fun c!3174 () Bool)

(assert (=> d!4169 (= c!3174 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4169 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4169 (= (arrayCountValidKeys!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8859)))

(declare-fun bm!2057 () Bool)

(declare-fun call!2060 () (_ BitVec 32))

(assert (=> bm!2057 (= call!2060 (arrayCountValidKeys!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!23981 () Bool)

(declare-fun e!15534 () (_ BitVec 32))

(assert (=> b!23981 (= e!15534 (bvadd #b00000000000000000000000000000001 call!2060))))

(declare-fun b!23982 () Bool)

(assert (=> b!23982 (= e!15534 call!2060)))

(declare-fun b!23983 () Bool)

(assert (=> b!23983 (= e!15535 #b00000000000000000000000000000000)))

(declare-fun b!23984 () Bool)

(assert (=> b!23984 (= e!15535 e!15534)))

(declare-fun c!3173 () Bool)

(assert (=> b!23984 (= c!3173 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4169 c!3174) b!23983))

(assert (= (and d!4169 (not c!3174)) b!23984))

(assert (= (and b!23984 c!3173) b!23981))

(assert (= (and b!23984 (not c!3173)) b!23982))

(assert (= (or b!23981 b!23982) bm!2057))

(declare-fun m!17849 () Bool)

(assert (=> bm!2057 m!17849))

(assert (=> b!23984 m!16992))

(assert (=> b!23984 m!16992))

(assert (=> b!23984 m!16996))

(assert (=> b!23748 d!4169))

(declare-fun d!4171 () Bool)

(assert (=> d!4171 (= (apply!29 lt!8722 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8722) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!969 () Bool)

(assert (= bs!969 d!4171))

(declare-fun m!17851 () Bool)

(assert (=> bs!969 m!17851))

(assert (=> bs!969 m!17851))

(declare-fun m!17853 () Bool)

(assert (=> bs!969 m!17853))

(assert (=> b!23790 d!4171))

(declare-fun d!4173 () Bool)

(declare-fun lt!8860 () (_ BitVec 32))

(assert (=> d!4173 (and (bvsge lt!8860 #b00000000000000000000000000000000) (bvsle lt!8860 (bvsub (size!700 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(declare-fun e!15537 () (_ BitVec 32))

(assert (=> d!4173 (= lt!8860 e!15537)))

(declare-fun c!3176 () Bool)

(assert (=> d!4173 (= c!3176 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(assert (=> d!4173 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 (_2!476 lt!8264))) (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(assert (=> d!4173 (= (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8264)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))) lt!8860)))

(declare-fun bm!2058 () Bool)

(declare-fun call!2061 () (_ BitVec 32))

(assert (=> bm!2058 (= call!2061 (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8264)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(declare-fun b!23985 () Bool)

(declare-fun e!15536 () (_ BitVec 32))

(assert (=> b!23985 (= e!15536 (bvadd #b00000000000000000000000000000001 call!2061))))

(declare-fun b!23986 () Bool)

(assert (=> b!23986 (= e!15536 call!2061)))

(declare-fun b!23987 () Bool)

(assert (=> b!23987 (= e!15537 #b00000000000000000000000000000000)))

(declare-fun b!23988 () Bool)

(assert (=> b!23988 (= e!15537 e!15536)))

(declare-fun c!3175 () Bool)

(assert (=> b!23988 (= c!3175 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(assert (= (and d!4173 c!3176) b!23987))

(assert (= (and d!4173 (not c!3176)) b!23988))

(assert (= (and b!23988 c!3175) b!23985))

(assert (= (and b!23988 (not c!3175)) b!23986))

(assert (= (or b!23985 b!23986) bm!2058))

(declare-fun m!17855 () Bool)

(assert (=> bm!2058 m!17855))

(declare-fun m!17857 () Bool)

(assert (=> b!23988 m!17857))

(assert (=> b!23988 m!17857))

(declare-fun m!17859 () Bool)

(assert (=> b!23988 m!17859))

(assert (=> b!23745 d!4173))

(declare-fun d!4175 () Bool)

(declare-fun c!3177 () Bool)

(assert (=> d!4175 (= c!3177 (and ((_ is Cons!561) (toList!292 lt!8499)) (= (_1!480 (h!1127 (toList!292 lt!8499))) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun e!15538 () Option!67)

(assert (=> d!4175 (= (getValueByKey!61 (toList!292 lt!8499) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))) e!15538)))

(declare-fun b!23992 () Bool)

(declare-fun e!15539 () Option!67)

(assert (=> b!23992 (= e!15539 None!65)))

(declare-fun b!23991 () Bool)

(assert (=> b!23991 (= e!15539 (getValueByKey!61 (t!3238 (toList!292 lt!8499)) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23990 () Bool)

(assert (=> b!23990 (= e!15538 e!15539)))

(declare-fun c!3178 () Bool)

(assert (=> b!23990 (= c!3178 (and ((_ is Cons!561) (toList!292 lt!8499)) (not (= (_1!480 (h!1127 (toList!292 lt!8499))) (_1!480 (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))))

(declare-fun b!23989 () Bool)

(assert (=> b!23989 (= e!15538 (Some!66 (_2!480 (h!1127 (toList!292 lt!8499)))))))

(assert (= (and d!4175 c!3177) b!23989))

(assert (= (and d!4175 (not c!3177)) b!23990))

(assert (= (and b!23990 c!3178) b!23991))

(assert (= (and b!23990 (not c!3178)) b!23992))

(declare-fun m!17861 () Bool)

(assert (=> b!23991 m!17861))

(assert (=> b!23574 d!4175))

(declare-fun b!24011 () Bool)

(declare-fun e!15554 () SeekEntryResult!59)

(assert (=> b!24011 (= e!15554 (Intermediate!59 false (toIndex!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun d!4177 () Bool)

(declare-fun e!15553 () Bool)

(assert (=> d!4177 e!15553))

(declare-fun c!3187 () Bool)

(declare-fun lt!8865 () SeekEntryResult!59)

(assert (=> d!4177 (= c!3187 (and ((_ is Intermediate!59) lt!8865) (undefined!871 lt!8865)))))

(declare-fun e!15550 () SeekEntryResult!59)

(assert (=> d!4177 (= lt!8865 e!15550)))

(declare-fun c!3185 () Bool)

(assert (=> d!4177 (= c!3185 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!8866 () (_ BitVec 64))

(assert (=> d!4177 (= lt!8866 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (toIndex!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4177 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4177 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8865)))

(declare-fun b!24012 () Bool)

(assert (=> b!24012 (= e!15550 e!15554)))

(declare-fun c!3186 () Bool)

(assert (=> b!24012 (= c!3186 (or (= lt!8866 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvadd lt!8866 lt!8866) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24013 () Bool)

(assert (=> b!24013 (and (bvsge (index!2359 lt!8865) #b00000000000000000000000000000000) (bvslt (index!2359 lt!8865) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun e!15551 () Bool)

(assert (=> b!24013 (= e!15551 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2359 lt!8865)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24014 () Bool)

(assert (=> b!24014 (and (bvsge (index!2359 lt!8865) #b00000000000000000000000000000000) (bvslt (index!2359 lt!8865) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun res!14663 () Bool)

(assert (=> b!24014 (= res!14663 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2359 lt!8865)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24014 (=> res!14663 e!15551)))

(declare-fun b!24015 () Bool)

(declare-fun e!15552 () Bool)

(assert (=> b!24015 (= e!15553 e!15552)))

(declare-fun res!14662 () Bool)

(assert (=> b!24015 (= res!14662 (and ((_ is Intermediate!59) lt!8865) (not (undefined!871 lt!8865)) (bvslt (x!5581 lt!8865) #b01111111111111111111111111111110) (bvsge (x!5581 lt!8865) #b00000000000000000000000000000000) (bvsge (x!5581 lt!8865) #b00000000000000000000000000000000)))))

(assert (=> b!24015 (=> (not res!14662) (not e!15552))))

(declare-fun b!24016 () Bool)

(assert (=> b!24016 (= e!15550 (Intermediate!59 true (toIndex!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun b!24017 () Bool)

(assert (=> b!24017 (= e!15553 (bvsge (x!5581 lt!8865) #b01111111111111111111111111111110))))

(declare-fun b!24018 () Bool)

(assert (=> b!24018 (and (bvsge (index!2359 lt!8865) #b00000000000000000000000000000000) (bvslt (index!2359 lt!8865) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun res!14664 () Bool)

(assert (=> b!24018 (= res!14664 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2359 lt!8865)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24018 (=> res!14664 e!15551)))

(assert (=> b!24018 (= e!15552 e!15551)))

(declare-fun b!24019 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!24019 (= e!15554 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (= (and d!4177 c!3185) b!24016))

(assert (= (and d!4177 (not c!3185)) b!24012))

(assert (= (and b!24012 c!3186) b!24011))

(assert (= (and b!24012 (not c!3186)) b!24019))

(assert (= (and d!4177 c!3187) b!24017))

(assert (= (and d!4177 (not c!3187)) b!24015))

(assert (= (and b!24015 res!14662) b!24018))

(assert (= (and b!24018 (not res!14664)) b!24014))

(assert (= (and b!24014 (not res!14663)) b!24013))

(assert (=> d!4177 m!16968))

(declare-fun m!17863 () Bool)

(assert (=> d!4177 m!17863))

(assert (=> d!4177 m!16948))

(declare-fun m!17865 () Bool)

(assert (=> b!24014 m!17865))

(assert (=> b!24018 m!17865))

(assert (=> b!24013 m!17865))

(assert (=> b!24019 m!16968))

(declare-fun m!17867 () Bool)

(assert (=> b!24019 m!17867))

(assert (=> b!24019 m!17867))

(declare-fun m!17869 () Bool)

(assert (=> b!24019 m!17869))

(assert (=> d!4007 d!4177))

(declare-fun d!4179 () Bool)

(declare-fun lt!8872 () (_ BitVec 32))

(declare-fun lt!8871 () (_ BitVec 32))

(assert (=> d!4179 (= lt!8872 (bvmul (bvxor lt!8871 (bvlshr lt!8871 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!4179 (= lt!8871 ((_ extract 31 0) (bvand (bvxor (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (bvlshr (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!4179 (and (bvsge (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000) (let ((res!14665 (let ((h!1129 ((_ extract 31 0) (bvand (bvxor (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (bvlshr (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!5840 (bvmul (bvxor h!1129 (bvlshr h!1129 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!5840 (bvlshr x!5840 #b00000000000000000000000000001101)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))) (and (bvslt res!14665 (bvadd (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001)) (bvsge res!14665 #b00000000000000000000000000000000))))))

(assert (=> d!4179 (= (toIndex!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (bvand (bvxor lt!8872 (bvlshr lt!8872 #b00000000000000000000000000001101)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4007 d!4179))

(declare-fun d!4181 () Bool)

(assert (=> d!4181 (= (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (and (or (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000001111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000011111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000001111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000011111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000001111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000011111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000001111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000011111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000001111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000011111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000001111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000011111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000001111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000011111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000111111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000001111111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000011111111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000111111111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00001111111111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00011111111111111111111111111111) (= (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00111111111111111111111111111111)) (bvsle (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00111111111111111111111111111111)))))

(assert (=> d!4007 d!4181))

(declare-fun b!24020 () Bool)

(declare-fun e!15555 () Bool)

(declare-fun call!2062 () Bool)

(assert (=> b!24020 (= e!15555 call!2062)))

(declare-fun b!24021 () Bool)

(declare-fun e!15556 () Bool)

(assert (=> b!24021 (= e!15556 e!15555)))

(declare-fun lt!8873 () (_ BitVec 64))

(assert (=> b!24021 (= lt!8873 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000))))

(declare-fun lt!8874 () Unit!514)

(assert (=> b!24021 (= lt!8874 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) lt!8873 #b00000000000000000000000000000000))))

(assert (=> b!24021 (arrayContainsKey!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) lt!8873 #b00000000000000000000000000000000)))

(declare-fun lt!8875 () Unit!514)

(assert (=> b!24021 (= lt!8875 lt!8874)))

(declare-fun res!14666 () Bool)

(assert (=> b!24021 (= res!14666 (= (seekEntryOrOpen!0 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000) (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24021 (=> (not res!14666) (not e!15555))))

(declare-fun b!24022 () Bool)

(assert (=> b!24022 (= e!15556 call!2062)))

(declare-fun d!4183 () Bool)

(declare-fun res!14667 () Bool)

(declare-fun e!15557 () Bool)

(assert (=> d!4183 (=> res!14667 e!15557)))

(assert (=> d!4183 (= res!14667 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4183 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))) e!15557)))

(declare-fun bm!2059 () Bool)

(assert (=> bm!2059 (= call!2062 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!24023 () Bool)

(assert (=> b!24023 (= e!15557 e!15556)))

(declare-fun c!3188 () Bool)

(assert (=> b!24023 (= c!3188 (validKeyInArray!0 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(assert (= (and d!4183 (not res!14667)) b!24023))

(assert (= (and b!24023 c!3188) b!24021))

(assert (= (and b!24023 (not c!3188)) b!24022))

(assert (= (and b!24021 res!14666) b!24020))

(assert (= (or b!24020 b!24022) bm!2059))

(declare-fun m!17871 () Bool)

(assert (=> b!24021 m!17871))

(declare-fun m!17873 () Bool)

(assert (=> b!24021 m!17873))

(declare-fun m!17875 () Bool)

(assert (=> b!24021 m!17875))

(assert (=> b!24021 m!17871))

(declare-fun m!17877 () Bool)

(assert (=> b!24021 m!17877))

(declare-fun m!17879 () Bool)

(assert (=> bm!2059 m!17879))

(assert (=> b!24023 m!17871))

(assert (=> b!24023 m!17871))

(declare-fun m!17881 () Bool)

(assert (=> b!24023 m!17881))

(assert (=> b!23570 d!4183))

(declare-fun d!4185 () Bool)

(assert (=> d!4185 (= (inRange!0 (ite c!3093 (index!2357 lt!8587) (index!2360 lt!8587)) (mask!4730 lt!8162)) (and (bvsge (ite c!3093 (index!2357 lt!8587) (index!2360 lt!8587)) #b00000000000000000000000000000000) (bvslt (ite c!3093 (index!2357 lt!8587) (index!2360 lt!8587)) (bvadd (mask!4730 lt!8162) #b00000000000000000000000000000001))))))

(assert (=> bm!2002 d!4185))

(declare-fun d!4187 () Bool)

(declare-fun e!15558 () Bool)

(assert (=> d!4187 e!15558))

(declare-fun res!14668 () Bool)

(assert (=> d!4187 (=> res!14668 e!15558)))

(declare-fun lt!8877 () Bool)

(assert (=> d!4187 (= res!14668 (not lt!8877))))

(declare-fun lt!8878 () Bool)

(assert (=> d!4187 (= lt!8877 lt!8878)))

(declare-fun lt!8876 () Unit!514)

(declare-fun e!15559 () Unit!514)

(assert (=> d!4187 (= lt!8876 e!15559)))

(declare-fun c!3189 () Bool)

(assert (=> d!4187 (= c!3189 lt!8878)))

(assert (=> d!4187 (= lt!8878 (containsKey!25 (toList!292 (map!410 (_2!476 lt!8656))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4187 (= (contains!220 (map!410 (_2!476 lt!8656)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) lt!8877)))

(declare-fun b!24024 () Bool)

(declare-fun lt!8879 () Unit!514)

(assert (=> b!24024 (= e!15559 lt!8879)))

(assert (=> b!24024 (= lt!8879 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (map!410 (_2!476 lt!8656))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24024 (isDefined!23 (getValueByKey!61 (toList!292 (map!410 (_2!476 lt!8656))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24025 () Bool)

(declare-fun Unit!547 () Unit!514)

(assert (=> b!24025 (= e!15559 Unit!547)))

(declare-fun b!24026 () Bool)

(assert (=> b!24026 (= e!15558 (isDefined!23 (getValueByKey!61 (toList!292 (map!410 (_2!476 lt!8656))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!4187 c!3189) b!24024))

(assert (= (and d!4187 (not c!3189)) b!24025))

(assert (= (and d!4187 (not res!14668)) b!24026))

(declare-fun m!17883 () Bool)

(assert (=> d!4187 m!17883))

(declare-fun m!17885 () Bool)

(assert (=> b!24024 m!17885))

(declare-fun m!17887 () Bool)

(assert (=> b!24024 m!17887))

(assert (=> b!24024 m!17887))

(declare-fun m!17889 () Bool)

(assert (=> b!24024 m!17889))

(assert (=> b!24026 m!17887))

(assert (=> b!24026 m!17887))

(assert (=> b!24026 m!17889))

(assert (=> b!23723 d!4187))

(declare-fun d!4189 () Bool)

(assert (=> d!4189 (= (map!410 (_2!476 lt!8656)) (getCurrentListMap!121 (_keys!3164 (_2!476 lt!8656)) (_values!1729 (_2!476 lt!8656)) (mask!4730 (_2!476 lt!8656)) (extraKeys!1641 (_2!476 lt!8656)) (zeroValue!1666 (_2!476 lt!8656)) (minValue!1666 (_2!476 lt!8656)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8656))))))

(declare-fun bs!970 () Bool)

(assert (= bs!970 d!4189))

(declare-fun m!17891 () Bool)

(assert (=> bs!970 m!17891))

(assert (=> b!23723 d!4189))

(declare-fun d!4191 () Bool)

(declare-fun lt!8880 () (_ BitVec 32))

(assert (=> d!4191 (and (bvsge lt!8880 #b00000000000000000000000000000000) (bvsle lt!8880 (bvsub (size!700 lt!8356) (bvadd lt!8358 #b00000000000000000000000000000001))))))

(declare-fun e!15561 () (_ BitVec 32))

(assert (=> d!4191 (= lt!8880 e!15561)))

(declare-fun c!3191 () Bool)

(assert (=> d!4191 (= c!3191 (bvsge (bvadd lt!8358 #b00000000000000000000000000000001) lt!8338))))

(assert (=> d!4191 (and (bvsle (bvadd lt!8358 #b00000000000000000000000000000001) lt!8338) (bvsge (bvadd lt!8358 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle lt!8338 (size!700 lt!8356)))))

(assert (=> d!4191 (= (arrayCountValidKeys!0 lt!8356 (bvadd lt!8358 #b00000000000000000000000000000001) lt!8338) lt!8880)))

(declare-fun bm!2060 () Bool)

(declare-fun call!2063 () (_ BitVec 32))

(assert (=> bm!2060 (= call!2063 (arrayCountValidKeys!0 lt!8356 (bvadd lt!8358 #b00000000000000000000000000000001 #b00000000000000000000000000000001) lt!8338))))

(declare-fun b!24027 () Bool)

(declare-fun e!15560 () (_ BitVec 32))

(assert (=> b!24027 (= e!15560 (bvadd #b00000000000000000000000000000001 call!2063))))

(declare-fun b!24028 () Bool)

(assert (=> b!24028 (= e!15560 call!2063)))

(declare-fun b!24029 () Bool)

(assert (=> b!24029 (= e!15561 #b00000000000000000000000000000000)))

(declare-fun b!24030 () Bool)

(assert (=> b!24030 (= e!15561 e!15560)))

(declare-fun c!3190 () Bool)

(assert (=> b!24030 (= c!3190 (validKeyInArray!0 (select (arr!604 lt!8356) (bvadd lt!8358 #b00000000000000000000000000000001))))))

(assert (= (and d!4191 c!3191) b!24029))

(assert (= (and d!4191 (not c!3191)) b!24030))

(assert (= (and b!24030 c!3190) b!24027))

(assert (= (and b!24030 (not c!3190)) b!24028))

(assert (= (or b!24027 b!24028) bm!2060))

(declare-fun m!17893 () Bool)

(assert (=> bm!2060 m!17893))

(declare-fun m!17895 () Bool)

(assert (=> b!24030 m!17895))

(assert (=> b!24030 m!17895))

(declare-fun m!17897 () Bool)

(assert (=> b!24030 m!17897))

(assert (=> bm!2037 d!4191))

(declare-fun d!4193 () Bool)

(declare-fun e!15562 () Bool)

(assert (=> d!4193 e!15562))

(declare-fun res!14669 () Bool)

(assert (=> d!4193 (=> (not res!14669) (not e!15562))))

(declare-fun lt!8881 () ListLongMap!553)

(assert (=> d!4193 (= res!14669 (contains!220 lt!8881 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun lt!8884 () List!565)

(assert (=> d!4193 (= lt!8881 (ListLongMap!554 lt!8884))))

(declare-fun lt!8882 () Unit!514)

(declare-fun lt!8883 () Unit!514)

(assert (=> d!4193 (= lt!8882 lt!8883)))

(assert (=> d!4193 (= (getValueByKey!61 lt!8884 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (=> d!4193 (= lt!8883 (lemmaContainsTupThenGetReturnValue!18 lt!8884 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (=> d!4193 (= lt!8884 (insertStrictlySorted!18 (toList!292 call!2025) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (=> d!4193 (= (+!45 call!2025 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))) lt!8881)))

(declare-fun b!24031 () Bool)

(declare-fun res!14670 () Bool)

(assert (=> b!24031 (=> (not res!14670) (not e!15562))))

(assert (=> b!24031 (= res!14670 (= (getValueByKey!61 (toList!292 lt!8881) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(declare-fun b!24032 () Bool)

(assert (=> b!24032 (= e!15562 (contains!221 (toList!292 lt!8881) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(assert (= (and d!4193 res!14669) b!24031))

(assert (= (and b!24031 res!14670) b!24032))

(declare-fun m!17899 () Bool)

(assert (=> d!4193 m!17899))

(declare-fun m!17901 () Bool)

(assert (=> d!4193 m!17901))

(declare-fun m!17903 () Bool)

(assert (=> d!4193 m!17903))

(declare-fun m!17905 () Bool)

(assert (=> d!4193 m!17905))

(declare-fun m!17907 () Bool)

(assert (=> b!24031 m!17907))

(declare-fun m!17909 () Bool)

(assert (=> b!24032 m!17909))

(assert (=> b!23769 d!4193))

(declare-fun d!4195 () Bool)

(assert (=> d!4195 (= (inRange!0 (ite c!3103 (index!2358 lt!8678) (ite c!3105 (index!2357 lt!8669) (index!2360 lt!8669))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (and (bvsge (ite c!3103 (index!2358 lt!8678) (ite c!3105 (index!2357 lt!8669) (index!2360 lt!8669))) #b00000000000000000000000000000000) (bvslt (ite c!3103 (index!2358 lt!8678) (ite c!3105 (index!2357 lt!8669) (index!2360 lt!8669))) (bvadd (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001))))))

(assert (=> bm!2012 d!4195))

(declare-fun d!4197 () Bool)

(assert (=> d!4197 (= (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (and (not (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23527 d!4197))

(declare-fun d!4199 () Bool)

(declare-fun isEmpty!174 (Option!67) Bool)

(assert (=> d!4199 (= (isDefined!23 (getValueByKey!61 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))) (not (isEmpty!174 (getValueByKey!61 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bs!971 () Bool)

(assert (= bs!971 d!4199))

(assert (=> bs!971 m!17108))

(declare-fun m!17911 () Bool)

(assert (=> bs!971 m!17911))

(assert (=> b!23562 d!4199))

(declare-fun d!4201 () Bool)

(declare-fun c!3192 () Bool)

(assert (=> d!4201 (= c!3192 (and ((_ is Cons!561) (toList!292 e!15169)) (= (_1!480 (h!1127 (toList!292 e!15169))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!15563 () Option!67)

(assert (=> d!4201 (= (getValueByKey!61 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) e!15563)))

(declare-fun b!24036 () Bool)

(declare-fun e!15564 () Option!67)

(assert (=> b!24036 (= e!15564 None!65)))

(declare-fun b!24035 () Bool)

(assert (=> b!24035 (= e!15564 (getValueByKey!61 (t!3238 (toList!292 e!15169)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24034 () Bool)

(assert (=> b!24034 (= e!15563 e!15564)))

(declare-fun c!3193 () Bool)

(assert (=> b!24034 (= c!3193 (and ((_ is Cons!561) (toList!292 e!15169)) (not (= (_1!480 (h!1127 (toList!292 e!15169))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!24033 () Bool)

(assert (=> b!24033 (= e!15563 (Some!66 (_2!480 (h!1127 (toList!292 e!15169)))))))

(assert (= (and d!4201 c!3192) b!24033))

(assert (= (and d!4201 (not c!3192)) b!24034))

(assert (= (and b!24034 c!3193) b!24035))

(assert (= (and b!24034 (not c!3193)) b!24036))

(declare-fun m!17913 () Bool)

(assert (=> b!24035 m!17913))

(assert (=> b!23562 d!4201))

(declare-fun e!15566 () Bool)

(declare-fun b!24037 () Bool)

(assert (=> b!24037 (= e!15566 (contains!222 (ite c!3124 (Cons!562 (select (arr!604 lt!8357) lt!8340) lt!8339) lt!8339) (select (arr!604 lt!8357) (bvadd lt!8340 #b00000000000000000000000000000001))))))

(declare-fun b!24038 () Bool)

(declare-fun e!15565 () Bool)

(declare-fun e!15568 () Bool)

(assert (=> b!24038 (= e!15565 e!15568)))

(declare-fun res!14673 () Bool)

(assert (=> b!24038 (=> (not res!14673) (not e!15568))))

(assert (=> b!24038 (= res!14673 (not e!15566))))

(declare-fun res!14672 () Bool)

(assert (=> b!24038 (=> (not res!14672) (not e!15566))))

(assert (=> b!24038 (= res!14672 (validKeyInArray!0 (select (arr!604 lt!8357) (bvadd lt!8340 #b00000000000000000000000000000001))))))

(declare-fun b!24040 () Bool)

(declare-fun e!15567 () Bool)

(assert (=> b!24040 (= e!15568 e!15567)))

(declare-fun c!3194 () Bool)

(assert (=> b!24040 (= c!3194 (validKeyInArray!0 (select (arr!604 lt!8357) (bvadd lt!8340 #b00000000000000000000000000000001))))))

(declare-fun call!2064 () Bool)

(declare-fun bm!2061 () Bool)

(assert (=> bm!2061 (= call!2064 (arrayNoDuplicates!0 lt!8357 (bvadd lt!8340 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!3194 (Cons!562 (select (arr!604 lt!8357) (bvadd lt!8340 #b00000000000000000000000000000001)) (ite c!3124 (Cons!562 (select (arr!604 lt!8357) lt!8340) lt!8339) lt!8339)) (ite c!3124 (Cons!562 (select (arr!604 lt!8357) lt!8340) lt!8339) lt!8339))))))

(declare-fun b!24041 () Bool)

(assert (=> b!24041 (= e!15567 call!2064)))

(declare-fun b!24039 () Bool)

(assert (=> b!24039 (= e!15567 call!2064)))

(declare-fun d!4203 () Bool)

(declare-fun res!14671 () Bool)

(assert (=> d!4203 (=> res!14671 e!15565)))

(assert (=> d!4203 (= res!14671 (bvsge (bvadd lt!8340 #b00000000000000000000000000000001) (size!700 lt!8357)))))

(assert (=> d!4203 (= (arrayNoDuplicates!0 lt!8357 (bvadd lt!8340 #b00000000000000000000000000000001) (ite c!3124 (Cons!562 (select (arr!604 lt!8357) lt!8340) lt!8339) lt!8339)) e!15565)))

(assert (= (and d!4203 (not res!14671)) b!24038))

(assert (= (and b!24038 res!14672) b!24037))

(assert (= (and b!24038 res!14673) b!24040))

(assert (= (and b!24040 c!3194) b!24041))

(assert (= (and b!24040 (not c!3194)) b!24039))

(assert (= (or b!24041 b!24039) bm!2061))

(declare-fun m!17915 () Bool)

(assert (=> b!24037 m!17915))

(assert (=> b!24037 m!17915))

(declare-fun m!17917 () Bool)

(assert (=> b!24037 m!17917))

(assert (=> b!24038 m!17915))

(assert (=> b!24038 m!17915))

(declare-fun m!17919 () Bool)

(assert (=> b!24038 m!17919))

(assert (=> b!24040 m!17915))

(assert (=> b!24040 m!17915))

(assert (=> b!24040 m!17919))

(assert (=> bm!2061 m!17915))

(declare-fun m!17921 () Bool)

(assert (=> bm!2061 m!17921))

(assert (=> bm!2034 d!4203))

(declare-fun d!4205 () Bool)

(declare-fun e!15569 () Bool)

(assert (=> d!4205 e!15569))

(declare-fun res!14674 () Bool)

(assert (=> d!4205 (=> res!14674 e!15569)))

(declare-fun lt!8886 () Bool)

(assert (=> d!4205 (= res!14674 (not lt!8886))))

(declare-fun lt!8887 () Bool)

(assert (=> d!4205 (= lt!8886 lt!8887)))

(declare-fun lt!8885 () Unit!514)

(declare-fun e!15570 () Unit!514)

(assert (=> d!4205 (= lt!8885 e!15570)))

(declare-fun c!3195 () Bool)

(assert (=> d!4205 (= c!3195 lt!8887)))

(assert (=> d!4205 (= lt!8887 (containsKey!25 (toList!292 lt!8512) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4205 (= (contains!220 lt!8512 #b0000000000000000000000000000000000000000000000000000000000000000) lt!8886)))

(declare-fun b!24042 () Bool)

(declare-fun lt!8888 () Unit!514)

(assert (=> b!24042 (= e!15570 lt!8888)))

(assert (=> b!24042 (= lt!8888 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8512) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24042 (isDefined!23 (getValueByKey!61 (toList!292 lt!8512) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24043 () Bool)

(declare-fun Unit!548 () Unit!514)

(assert (=> b!24043 (= e!15570 Unit!548)))

(declare-fun b!24044 () Bool)

(assert (=> b!24044 (= e!15569 (isDefined!23 (getValueByKey!61 (toList!292 lt!8512) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4205 c!3195) b!24042))

(assert (= (and d!4205 (not c!3195)) b!24043))

(assert (= (and d!4205 (not res!14674)) b!24044))

(declare-fun m!17923 () Bool)

(assert (=> d!4205 m!17923))

(declare-fun m!17925 () Bool)

(assert (=> b!24042 m!17925))

(declare-fun m!17927 () Bool)

(assert (=> b!24042 m!17927))

(assert (=> b!24042 m!17927))

(declare-fun m!17929 () Bool)

(assert (=> b!24042 m!17929))

(assert (=> b!24044 m!17927))

(assert (=> b!24044 m!17927))

(assert (=> b!24044 m!17929))

(assert (=> bm!1977 d!4205))

(declare-fun b!24055 () Bool)

(declare-fun res!14684 () Bool)

(declare-fun e!15573 () Bool)

(assert (=> b!24055 (=> (not res!14684) (not e!15573))))

(declare-fun size!707 (LongMapFixedSize!210) (_ BitVec 32))

(assert (=> b!24055 (= res!14684 (= (size!707 lt!8355) (bvadd (_size!150 lt!8355) (bvsdiv (bvadd (extraKeys!1641 lt!8355) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4207 () Bool)

(declare-fun res!14685 () Bool)

(assert (=> d!4207 (=> (not res!14685) (not e!15573))))

(assert (=> d!4207 (= res!14685 (validMask!0 (mask!4730 lt!8355)))))

(assert (=> d!4207 (= (simpleValid!19 lt!8355) e!15573)))

(declare-fun b!24053 () Bool)

(declare-fun res!14686 () Bool)

(assert (=> b!24053 (=> (not res!14686) (not e!15573))))

(assert (=> b!24053 (= res!14686 (and (= (size!699 (_values!1729 lt!8355)) (bvadd (mask!4730 lt!8355) #b00000000000000000000000000000001)) (= (size!700 (_keys!3164 lt!8355)) (size!699 (_values!1729 lt!8355))) (bvsge (_size!150 lt!8355) #b00000000000000000000000000000000) (bvsle (_size!150 lt!8355) (bvadd (mask!4730 lt!8355) #b00000000000000000000000000000001))))))

(declare-fun b!24056 () Bool)

(assert (=> b!24056 (= e!15573 (and (bvsge (extraKeys!1641 lt!8355) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 lt!8355) #b00000000000000000000000000000011) (bvsge (_vacant!150 lt!8355) #b00000000000000000000000000000000)))))

(declare-fun b!24054 () Bool)

(declare-fun res!14683 () Bool)

(assert (=> b!24054 (=> (not res!14683) (not e!15573))))

(assert (=> b!24054 (= res!14683 (bvsge (size!707 lt!8355) (_size!150 lt!8355)))))

(assert (= (and d!4207 res!14685) b!24053))

(assert (= (and b!24053 res!14686) b!24054))

(assert (= (and b!24054 res!14683) b!24055))

(assert (= (and b!24055 res!14684) b!24056))

(declare-fun m!17931 () Bool)

(assert (=> b!24055 m!17931))

(declare-fun m!17933 () Bool)

(assert (=> d!4207 m!17933))

(assert (=> b!24054 m!17931))

(assert (=> d!4111 d!4207))

(declare-fun d!4209 () Bool)

(declare-fun e!15574 () Bool)

(assert (=> d!4209 e!15574))

(declare-fun res!14687 () Bool)

(assert (=> d!4209 (=> (not res!14687) (not e!15574))))

(declare-fun lt!8889 () ListLongMap!553)

(assert (=> d!4209 (= res!14687 (contains!220 lt!8889 (_1!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))))))

(declare-fun lt!8892 () List!565)

(assert (=> d!4209 (= lt!8889 (ListLongMap!554 lt!8892))))

(declare-fun lt!8890 () Unit!514)

(declare-fun lt!8891 () Unit!514)

(assert (=> d!4209 (= lt!8890 lt!8891)))

(assert (=> d!4209 (= (getValueByKey!61 lt!8892 (_1!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4209 (= lt!8891 (lemmaContainsTupThenGetReturnValue!18 lt!8892 (_1!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4209 (= lt!8892 (insertStrictlySorted!18 (toList!292 lt!8559) (_1!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4209 (= (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))) lt!8889)))

(declare-fun b!24057 () Bool)

(declare-fun res!14688 () Bool)

(assert (=> b!24057 (=> (not res!14688) (not e!15574))))

(assert (=> b!24057 (= res!14688 (= (getValueByKey!61 (toList!292 lt!8889) (_1!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))))))))

(declare-fun b!24058 () Bool)

(assert (=> b!24058 (= e!15574 (contains!221 (toList!292 lt!8889) (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))))))

(assert (= (and d!4209 res!14687) b!24057))

(assert (= (and b!24057 res!14688) b!24058))

(declare-fun m!17935 () Bool)

(assert (=> d!4209 m!17935))

(declare-fun m!17937 () Bool)

(assert (=> d!4209 m!17937))

(declare-fun m!17939 () Bool)

(assert (=> d!4209 m!17939))

(declare-fun m!17941 () Bool)

(assert (=> d!4209 m!17941))

(declare-fun m!17943 () Bool)

(assert (=> b!24057 m!17943))

(declare-fun m!17945 () Bool)

(assert (=> b!24058 m!17945))

(assert (=> b!23639 d!4209))

(declare-fun d!4211 () Bool)

(assert (=> d!4211 (contains!220 (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))) lt!8571)))

(declare-fun lt!8893 () Unit!514)

(assert (=> d!4211 (= lt!8893 (choose!214 lt!8559 lt!8570 (zeroValue!1666 lt!8162) lt!8571))))

(assert (=> d!4211 (contains!220 lt!8559 lt!8571)))

(assert (=> d!4211 (= (addStillContains!14 lt!8559 lt!8570 (zeroValue!1666 lt!8162) lt!8571) lt!8893)))

(declare-fun bs!972 () Bool)

(assert (= bs!972 d!4211))

(assert (=> bs!972 m!17314))

(assert (=> bs!972 m!17314))

(assert (=> bs!972 m!17316))

(declare-fun m!17947 () Bool)

(assert (=> bs!972 m!17947))

(declare-fun m!17949 () Bool)

(assert (=> bs!972 m!17949))

(assert (=> b!23639 d!4211))

(declare-fun d!4213 () Bool)

(declare-fun e!15575 () Bool)

(assert (=> d!4213 e!15575))

(declare-fun res!14689 () Bool)

(assert (=> d!4213 (=> (not res!14689) (not e!15575))))

(declare-fun lt!8894 () ListLongMap!553)

(assert (=> d!4213 (= res!14689 (contains!220 lt!8894 (_1!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162)))))))

(declare-fun lt!8897 () List!565)

(assert (=> d!4213 (= lt!8894 (ListLongMap!554 lt!8897))))

(declare-fun lt!8895 () Unit!514)

(declare-fun lt!8896 () Unit!514)

(assert (=> d!4213 (= lt!8895 lt!8896)))

(assert (=> d!4213 (= (getValueByKey!61 lt!8897 (_1!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162)))))))

(assert (=> d!4213 (= lt!8896 (lemmaContainsTupThenGetReturnValue!18 lt!8897 (_1!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162)))))))

(assert (=> d!4213 (= lt!8897 (insertStrictlySorted!18 (toList!292 lt!8561) (_1!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162)))))))

(assert (=> d!4213 (= (+!45 lt!8561 (tuple2!947 lt!8557 (minValue!1666 lt!8162))) lt!8894)))

(declare-fun b!24059 () Bool)

(declare-fun res!14690 () Bool)

(assert (=> b!24059 (=> (not res!14690) (not e!15575))))

(assert (=> b!24059 (= res!14690 (= (getValueByKey!61 (toList!292 lt!8894) (_1!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8557 (minValue!1666 lt!8162))))))))

(declare-fun b!24060 () Bool)

(assert (=> b!24060 (= e!15575 (contains!221 (toList!292 lt!8894) (tuple2!947 lt!8557 (minValue!1666 lt!8162))))))

(assert (= (and d!4213 res!14689) b!24059))

(assert (= (and b!24059 res!14690) b!24060))

(declare-fun m!17951 () Bool)

(assert (=> d!4213 m!17951))

(declare-fun m!17953 () Bool)

(assert (=> d!4213 m!17953))

(declare-fun m!17955 () Bool)

(assert (=> d!4213 m!17955))

(declare-fun m!17957 () Bool)

(assert (=> d!4213 m!17957))

(declare-fun m!17959 () Bool)

(assert (=> b!24059 m!17959))

(declare-fun m!17961 () Bool)

(assert (=> b!24060 m!17961))

(assert (=> b!23639 d!4213))

(declare-fun d!4215 () Bool)

(assert (=> d!4215 (= (apply!29 (+!45 lt!8561 (tuple2!947 lt!8557 (minValue!1666 lt!8162))) lt!8564) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8561 (tuple2!947 lt!8557 (minValue!1666 lt!8162)))) lt!8564)))))

(declare-fun bs!973 () Bool)

(assert (= bs!973 d!4215))

(declare-fun m!17963 () Bool)

(assert (=> bs!973 m!17963))

(assert (=> bs!973 m!17963))

(declare-fun m!17965 () Bool)

(assert (=> bs!973 m!17965))

(assert (=> b!23639 d!4215))

(declare-fun d!4217 () Bool)

(assert (=> d!4217 (= (apply!29 lt!8561 lt!8564) (get!391 (getValueByKey!61 (toList!292 lt!8561) lt!8564)))))

(declare-fun bs!974 () Bool)

(assert (= bs!974 d!4217))

(declare-fun m!17967 () Bool)

(assert (=> bs!974 m!17967))

(assert (=> bs!974 m!17967))

(declare-fun m!17969 () Bool)

(assert (=> bs!974 m!17969))

(assert (=> b!23639 d!4217))

(declare-fun d!4219 () Bool)

(assert (=> d!4219 (= (apply!29 lt!8562 lt!8560) (get!391 (getValueByKey!61 (toList!292 lt!8562) lt!8560)))))

(declare-fun bs!975 () Bool)

(assert (= bs!975 d!4219))

(declare-fun m!17971 () Bool)

(assert (=> bs!975 m!17971))

(assert (=> bs!975 m!17971))

(declare-fun m!17973 () Bool)

(assert (=> bs!975 m!17973))

(assert (=> b!23639 d!4219))

(declare-fun d!4221 () Bool)

(assert (=> d!4221 (= (apply!29 (+!45 lt!8569 (tuple2!947 lt!8555 (minValue!1666 lt!8162))) lt!8573) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8569 (tuple2!947 lt!8555 (minValue!1666 lt!8162)))) lt!8573)))))

(declare-fun bs!976 () Bool)

(assert (= bs!976 d!4221))

(declare-fun m!17975 () Bool)

(assert (=> bs!976 m!17975))

(assert (=> bs!976 m!17975))

(declare-fun m!17977 () Bool)

(assert (=> bs!976 m!17977))

(assert (=> b!23639 d!4221))

(declare-fun d!4223 () Bool)

(assert (=> d!4223 (= (apply!29 lt!8569 lt!8573) (get!391 (getValueByKey!61 (toList!292 lt!8569) lt!8573)))))

(declare-fun bs!977 () Bool)

(assert (= bs!977 d!4223))

(declare-fun m!17979 () Bool)

(assert (=> bs!977 m!17979))

(assert (=> bs!977 m!17979))

(declare-fun m!17981 () Bool)

(assert (=> bs!977 m!17981))

(assert (=> b!23639 d!4223))

(declare-fun d!4225 () Bool)

(assert (=> d!4225 (= (apply!29 (+!45 lt!8562 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))) lt!8560) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8562 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162)))) lt!8560)))))

(declare-fun bs!978 () Bool)

(assert (= bs!978 d!4225))

(declare-fun m!17983 () Bool)

(assert (=> bs!978 m!17983))

(assert (=> bs!978 m!17983))

(declare-fun m!17985 () Bool)

(assert (=> bs!978 m!17985))

(assert (=> b!23639 d!4225))

(declare-fun d!4227 () Bool)

(declare-fun e!15576 () Bool)

(assert (=> d!4227 e!15576))

(declare-fun res!14691 () Bool)

(assert (=> d!4227 (=> (not res!14691) (not e!15576))))

(declare-fun lt!8898 () ListLongMap!553)

(assert (=> d!4227 (= res!14691 (contains!220 lt!8898 (_1!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162)))))))

(declare-fun lt!8901 () List!565)

(assert (=> d!4227 (= lt!8898 (ListLongMap!554 lt!8901))))

(declare-fun lt!8899 () Unit!514)

(declare-fun lt!8900 () Unit!514)

(assert (=> d!4227 (= lt!8899 lt!8900)))

(assert (=> d!4227 (= (getValueByKey!61 lt!8901 (_1!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162)))))))

(assert (=> d!4227 (= lt!8900 (lemmaContainsTupThenGetReturnValue!18 lt!8901 (_1!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162)))))))

(assert (=> d!4227 (= lt!8901 (insertStrictlySorted!18 (toList!292 lt!8569) (_1!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162)))))))

(assert (=> d!4227 (= (+!45 lt!8569 (tuple2!947 lt!8555 (minValue!1666 lt!8162))) lt!8898)))

(declare-fun b!24061 () Bool)

(declare-fun res!14692 () Bool)

(assert (=> b!24061 (=> (not res!14692) (not e!15576))))

(assert (=> b!24061 (= res!14692 (= (getValueByKey!61 (toList!292 lt!8898) (_1!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8555 (minValue!1666 lt!8162))))))))

(declare-fun b!24062 () Bool)

(assert (=> b!24062 (= e!15576 (contains!221 (toList!292 lt!8898) (tuple2!947 lt!8555 (minValue!1666 lt!8162))))))

(assert (= (and d!4227 res!14691) b!24061))

(assert (= (and b!24061 res!14692) b!24062))

(declare-fun m!17987 () Bool)

(assert (=> d!4227 m!17987))

(declare-fun m!17989 () Bool)

(assert (=> d!4227 m!17989))

(declare-fun m!17991 () Bool)

(assert (=> d!4227 m!17991))

(declare-fun m!17993 () Bool)

(assert (=> d!4227 m!17993))

(declare-fun m!17995 () Bool)

(assert (=> b!24061 m!17995))

(declare-fun m!17997 () Bool)

(assert (=> b!24062 m!17997))

(assert (=> b!23639 d!4227))

(declare-fun d!4229 () Bool)

(declare-fun e!15577 () Bool)

(assert (=> d!4229 e!15577))

(declare-fun res!14693 () Bool)

(assert (=> d!4229 (=> res!14693 e!15577)))

(declare-fun lt!8903 () Bool)

(assert (=> d!4229 (= res!14693 (not lt!8903))))

(declare-fun lt!8904 () Bool)

(assert (=> d!4229 (= lt!8903 lt!8904)))

(declare-fun lt!8902 () Unit!514)

(declare-fun e!15578 () Unit!514)

(assert (=> d!4229 (= lt!8902 e!15578)))

(declare-fun c!3196 () Bool)

(assert (=> d!4229 (= c!3196 lt!8904)))

(assert (=> d!4229 (= lt!8904 (containsKey!25 (toList!292 (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))) lt!8571))))

(assert (=> d!4229 (= (contains!220 (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162))) lt!8571) lt!8903)))

(declare-fun b!24063 () Bool)

(declare-fun lt!8905 () Unit!514)

(assert (=> b!24063 (= e!15578 lt!8905)))

(assert (=> b!24063 (= lt!8905 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))) lt!8571))))

(assert (=> b!24063 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))) lt!8571))))

(declare-fun b!24064 () Bool)

(declare-fun Unit!549 () Unit!514)

(assert (=> b!24064 (= e!15578 Unit!549)))

(declare-fun b!24065 () Bool)

(assert (=> b!24065 (= e!15577 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8559 (tuple2!947 lt!8570 (zeroValue!1666 lt!8162)))) lt!8571)))))

(assert (= (and d!4229 c!3196) b!24063))

(assert (= (and d!4229 (not c!3196)) b!24064))

(assert (= (and d!4229 (not res!14693)) b!24065))

(declare-fun m!17999 () Bool)

(assert (=> d!4229 m!17999))

(declare-fun m!18001 () Bool)

(assert (=> b!24063 m!18001))

(declare-fun m!18003 () Bool)

(assert (=> b!24063 m!18003))

(assert (=> b!24063 m!18003))

(declare-fun m!18005 () Bool)

(assert (=> b!24063 m!18005))

(assert (=> b!24065 m!18003))

(assert (=> b!24065 m!18003))

(assert (=> b!24065 m!18005))

(assert (=> b!23639 d!4229))

(declare-fun d!4231 () Bool)

(assert (=> d!4231 (= (apply!29 (+!45 lt!8569 (tuple2!947 lt!8555 (minValue!1666 lt!8162))) lt!8573) (apply!29 lt!8569 lt!8573))))

(declare-fun lt!8906 () Unit!514)

(assert (=> d!4231 (= lt!8906 (choose!213 lt!8569 lt!8555 (minValue!1666 lt!8162) lt!8573))))

(declare-fun e!15579 () Bool)

(assert (=> d!4231 e!15579))

(declare-fun res!14694 () Bool)

(assert (=> d!4231 (=> (not res!14694) (not e!15579))))

(assert (=> d!4231 (= res!14694 (contains!220 lt!8569 lt!8573))))

(assert (=> d!4231 (= (addApplyDifferent!14 lt!8569 lt!8555 (minValue!1666 lt!8162) lt!8573) lt!8906)))

(declare-fun b!24066 () Bool)

(assert (=> b!24066 (= e!15579 (not (= lt!8573 lt!8555)))))

(assert (= (and d!4231 res!14694) b!24066))

(declare-fun m!18007 () Bool)

(assert (=> d!4231 m!18007))

(assert (=> d!4231 m!17322))

(assert (=> d!4231 m!17318))

(declare-fun m!18009 () Bool)

(assert (=> d!4231 m!18009))

(assert (=> d!4231 m!17322))

(assert (=> d!4231 m!17336))

(assert (=> b!23639 d!4231))

(declare-fun d!4233 () Bool)

(assert (=> d!4233 (= (apply!29 (+!45 lt!8561 (tuple2!947 lt!8557 (minValue!1666 lt!8162))) lt!8564) (apply!29 lt!8561 lt!8564))))

(declare-fun lt!8907 () Unit!514)

(assert (=> d!4233 (= lt!8907 (choose!213 lt!8561 lt!8557 (minValue!1666 lt!8162) lt!8564))))

(declare-fun e!15580 () Bool)

(assert (=> d!4233 e!15580))

(declare-fun res!14695 () Bool)

(assert (=> d!4233 (=> (not res!14695) (not e!15580))))

(assert (=> d!4233 (= res!14695 (contains!220 lt!8561 lt!8564))))

(assert (=> d!4233 (= (addApplyDifferent!14 lt!8561 lt!8557 (minValue!1666 lt!8162) lt!8564) lt!8907)))

(declare-fun b!24067 () Bool)

(assert (=> b!24067 (= e!15580 (not (= lt!8564 lt!8557)))))

(assert (= (and d!4233 res!14695) b!24067))

(declare-fun m!18011 () Bool)

(assert (=> d!4233 m!18011))

(assert (=> d!4233 m!17330))

(assert (=> d!4233 m!17328))

(declare-fun m!18013 () Bool)

(assert (=> d!4233 m!18013))

(assert (=> d!4233 m!17330))

(assert (=> d!4233 m!17338))

(assert (=> b!23639 d!4233))

(declare-fun d!4235 () Bool)

(declare-fun e!15587 () Bool)

(assert (=> d!4235 e!15587))

(declare-fun res!14697 () Bool)

(assert (=> d!4235 (=> (not res!14697) (not e!15587))))

(declare-fun lt!8910 () ListLongMap!553)

(assert (=> d!4235 (= res!14697 (not (contains!220 lt!8910 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15585 () ListLongMap!553)

(assert (=> d!4235 (= lt!8910 e!15585)))

(declare-fun c!3198 () Bool)

(assert (=> d!4235 (= c!3198 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4235 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4235 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!8910)))

(declare-fun b!24068 () Bool)

(declare-fun res!14698 () Bool)

(assert (=> b!24068 (=> (not res!14698) (not e!15587))))

(assert (=> b!24068 (= res!14698 (not (contains!220 lt!8910 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24069 () Bool)

(declare-fun e!15584 () Bool)

(declare-fun e!15583 () Bool)

(assert (=> b!24069 (= e!15584 e!15583)))

(declare-fun c!3200 () Bool)

(assert (=> b!24069 (= c!3200 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24070 () Bool)

(assert (=> b!24070 (= e!15583 (= lt!8910 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8162))))))

(declare-fun b!24071 () Bool)

(assert (=> b!24071 (= e!15585 (ListLongMap!554 Nil!562))))

(declare-fun b!24072 () Bool)

(declare-fun e!15582 () ListLongMap!553)

(declare-fun call!2065 () ListLongMap!553)

(assert (=> b!24072 (= e!15582 call!2065)))

(declare-fun bm!2062 () Bool)

(assert (=> bm!2062 (= call!2065 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite c!3011 (_values!1729 lt!8162) lt!8288) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8162)))))

(declare-fun b!24073 () Bool)

(assert (=> b!24073 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> b!24073 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite c!3011 (_values!1729 lt!8162) lt!8288))))))

(declare-fun e!15586 () Bool)

(assert (=> b!24073 (= e!15586 (= (apply!29 lt!8910 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24074 () Bool)

(declare-fun e!15581 () Bool)

(assert (=> b!24074 (= e!15581 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24074 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24075 () Bool)

(assert (=> b!24075 (= e!15585 e!15582)))

(declare-fun c!3197 () Bool)

(assert (=> b!24075 (= c!3197 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24076 () Bool)

(assert (=> b!24076 (= e!15584 e!15586)))

(assert (=> b!24076 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun res!14699 () Bool)

(assert (=> b!24076 (= res!14699 (contains!220 lt!8910 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24076 (=> (not res!14699) (not e!15586))))

(declare-fun b!24077 () Bool)

(assert (=> b!24077 (= e!15583 (isEmpty!173 lt!8910))))

(declare-fun b!24078 () Bool)

(declare-fun lt!8913 () Unit!514)

(declare-fun lt!8914 () Unit!514)

(assert (=> b!24078 (= lt!8913 lt!8914)))

(declare-fun lt!8912 () ListLongMap!553)

(declare-fun lt!8911 () (_ BitVec 64))

(declare-fun lt!8909 () V!1189)

(declare-fun lt!8908 () (_ BitVec 64))

(assert (=> b!24078 (not (contains!220 (+!45 lt!8912 (tuple2!947 lt!8908 lt!8909)) lt!8911))))

(assert (=> b!24078 (= lt!8914 (addStillNotContains!2 lt!8912 lt!8908 lt!8909 lt!8911))))

(assert (=> b!24078 (= lt!8911 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24078 (= lt!8909 (get!390 (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24078 (= lt!8908 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!24078 (= lt!8912 call!2065)))

(assert (=> b!24078 (= e!15582 (+!45 call!2065 (tuple2!947 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) (get!390 (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24079 () Bool)

(assert (=> b!24079 (= e!15587 e!15584)))

(declare-fun c!3199 () Bool)

(assert (=> b!24079 (= c!3199 e!15581)))

(declare-fun res!14696 () Bool)

(assert (=> b!24079 (=> (not res!14696) (not e!15581))))

(assert (=> b!24079 (= res!14696 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (= (and d!4235 c!3198) b!24071))

(assert (= (and d!4235 (not c!3198)) b!24075))

(assert (= (and b!24075 c!3197) b!24078))

(assert (= (and b!24075 (not c!3197)) b!24072))

(assert (= (or b!24078 b!24072) bm!2062))

(assert (= (and d!4235 res!14697) b!24068))

(assert (= (and b!24068 res!14698) b!24079))

(assert (= (and b!24079 res!14696) b!24074))

(assert (= (and b!24079 c!3199) b!24076))

(assert (= (and b!24079 (not c!3199)) b!24069))

(assert (= (and b!24076 res!14699) b!24073))

(assert (= (and b!24069 c!3200) b!24070))

(assert (= (and b!24069 (not c!3200)) b!24077))

(declare-fun b_lambda!1603 () Bool)

(assert (=> (not b_lambda!1603) (not b!24073)))

(assert (=> b!24073 t!3243))

(declare-fun b_and!1507 () Bool)

(assert (= b_and!1505 (and (=> t!3243 result!1103) b_and!1507)))

(declare-fun b_lambda!1605 () Bool)

(assert (=> (not b_lambda!1605) (not b!24078)))

(assert (=> b!24078 t!3243))

(declare-fun b_and!1509 () Bool)

(assert (= b_and!1507 (and (=> t!3243 result!1103) b_and!1509)))

(assert (=> b!24075 m!17154))

(assert (=> b!24075 m!17154))

(assert (=> b!24075 m!17158))

(declare-fun m!18015 () Bool)

(assert (=> b!24077 m!18015))

(declare-fun m!18017 () Bool)

(assert (=> b!24078 m!18017))

(declare-fun m!18019 () Bool)

(assert (=> b!24078 m!18019))

(assert (=> b!24078 m!17342))

(assert (=> b!24078 m!17194))

(assert (=> b!24078 m!17344))

(declare-fun m!18021 () Bool)

(assert (=> b!24078 m!18021))

(assert (=> b!24078 m!17194))

(assert (=> b!24078 m!17342))

(assert (=> b!24078 m!18017))

(declare-fun m!18023 () Bool)

(assert (=> b!24078 m!18023))

(assert (=> b!24078 m!17154))

(assert (=> b!24074 m!17154))

(assert (=> b!24074 m!17154))

(assert (=> b!24074 m!17158))

(declare-fun m!18025 () Bool)

(assert (=> bm!2062 m!18025))

(assert (=> b!24070 m!18025))

(declare-fun m!18027 () Bool)

(assert (=> b!24068 m!18027))

(assert (=> b!24076 m!17154))

(assert (=> b!24076 m!17154))

(declare-fun m!18029 () Bool)

(assert (=> b!24076 m!18029))

(declare-fun m!18031 () Bool)

(assert (=> d!4235 m!18031))

(assert (=> d!4235 m!17072))

(assert (=> b!24073 m!17342))

(assert (=> b!24073 m!17194))

(assert (=> b!24073 m!17344))

(assert (=> b!24073 m!17154))

(declare-fun m!18033 () Bool)

(assert (=> b!24073 m!18033))

(assert (=> b!24073 m!17154))

(assert (=> b!24073 m!17194))

(assert (=> b!24073 m!17342))

(assert (=> b!23639 d!4235))

(declare-fun d!4237 () Bool)

(assert (=> d!4237 (= (apply!29 (+!45 lt!8562 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))) lt!8560) (apply!29 lt!8562 lt!8560))))

(declare-fun lt!8915 () Unit!514)

(assert (=> d!4237 (= lt!8915 (choose!213 lt!8562 lt!8565 (zeroValue!1666 lt!8162) lt!8560))))

(declare-fun e!15588 () Bool)

(assert (=> d!4237 e!15588))

(declare-fun res!14700 () Bool)

(assert (=> d!4237 (=> (not res!14700) (not e!15588))))

(assert (=> d!4237 (= res!14700 (contains!220 lt!8562 lt!8560))))

(assert (=> d!4237 (= (addApplyDifferent!14 lt!8562 lt!8565 (zeroValue!1666 lt!8162) lt!8560) lt!8915)))

(declare-fun b!24080 () Bool)

(assert (=> b!24080 (= e!15588 (not (= lt!8560 lt!8565)))))

(assert (= (and d!4237 res!14700) b!24080))

(declare-fun m!18035 () Bool)

(assert (=> d!4237 m!18035))

(assert (=> d!4237 m!17332))

(assert (=> d!4237 m!17312))

(declare-fun m!18037 () Bool)

(assert (=> d!4237 m!18037))

(assert (=> d!4237 m!17332))

(assert (=> d!4237 m!17334))

(assert (=> b!23639 d!4237))

(declare-fun d!4239 () Bool)

(declare-fun e!15589 () Bool)

(assert (=> d!4239 e!15589))

(declare-fun res!14701 () Bool)

(assert (=> d!4239 (=> (not res!14701) (not e!15589))))

(declare-fun lt!8916 () ListLongMap!553)

(assert (=> d!4239 (= res!14701 (contains!220 lt!8916 (_1!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162)))))))

(declare-fun lt!8919 () List!565)

(assert (=> d!4239 (= lt!8916 (ListLongMap!554 lt!8919))))

(declare-fun lt!8917 () Unit!514)

(declare-fun lt!8918 () Unit!514)

(assert (=> d!4239 (= lt!8917 lt!8918)))

(assert (=> d!4239 (= (getValueByKey!61 lt!8919 (_1!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4239 (= lt!8918 (lemmaContainsTupThenGetReturnValue!18 lt!8919 (_1!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4239 (= lt!8919 (insertStrictlySorted!18 (toList!292 lt!8562) (_1!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4239 (= (+!45 lt!8562 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))) lt!8916)))

(declare-fun b!24081 () Bool)

(declare-fun res!14702 () Bool)

(assert (=> b!24081 (=> (not res!14702) (not e!15589))))

(assert (=> b!24081 (= res!14702 (= (getValueByKey!61 (toList!292 lt!8916) (_1!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))))))))

(declare-fun b!24082 () Bool)

(assert (=> b!24082 (= e!15589 (contains!221 (toList!292 lt!8916) (tuple2!947 lt!8565 (zeroValue!1666 lt!8162))))))

(assert (= (and d!4239 res!14701) b!24081))

(assert (= (and b!24081 res!14702) b!24082))

(declare-fun m!18039 () Bool)

(assert (=> d!4239 m!18039))

(declare-fun m!18041 () Bool)

(assert (=> d!4239 m!18041))

(declare-fun m!18043 () Bool)

(assert (=> d!4239 m!18043))

(declare-fun m!18045 () Bool)

(assert (=> d!4239 m!18045))

(declare-fun m!18047 () Bool)

(assert (=> b!24081 m!18047))

(declare-fun m!18049 () Bool)

(assert (=> b!24082 m!18049))

(assert (=> b!23639 d!4239))

(assert (=> bm!2015 d!4007))

(declare-fun b!24083 () Bool)

(declare-fun e!15591 () Bool)

(assert (=> b!24083 (= e!15591 (contains!222 Nil!563 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(declare-fun b!24084 () Bool)

(declare-fun e!15590 () Bool)

(declare-fun e!15593 () Bool)

(assert (=> b!24084 (= e!15590 e!15593)))

(declare-fun res!14705 () Bool)

(assert (=> b!24084 (=> (not res!14705) (not e!15593))))

(assert (=> b!24084 (= res!14705 (not e!15591))))

(declare-fun res!14704 () Bool)

(assert (=> b!24084 (=> (not res!14704) (not e!15591))))

(assert (=> b!24084 (= res!14704 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(declare-fun b!24086 () Bool)

(declare-fun e!15592 () Bool)

(assert (=> b!24086 (= e!15593 e!15592)))

(declare-fun c!3201 () Bool)

(assert (=> b!24086 (= c!3201 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(declare-fun bm!2063 () Bool)

(declare-fun call!2066 () Bool)

(assert (=> bm!2063 (= call!2066 (arrayNoDuplicates!0 (_keys!3164 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3201 (Cons!562 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000) Nil!563) Nil!563)))))

(declare-fun b!24087 () Bool)

(assert (=> b!24087 (= e!15592 call!2066)))

(declare-fun b!24085 () Bool)

(assert (=> b!24085 (= e!15592 call!2066)))

(declare-fun d!4241 () Bool)

(declare-fun res!14703 () Bool)

(assert (=> d!4241 (=> res!14703 e!15590)))

(assert (=> d!4241 (= res!14703 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))

(assert (=> d!4241 (= (arrayNoDuplicates!0 (_keys!3164 lt!8355) #b00000000000000000000000000000000 Nil!563) e!15590)))

(assert (= (and d!4241 (not res!14703)) b!24084))

(assert (= (and b!24084 res!14704) b!24083))

(assert (= (and b!24084 res!14705) b!24086))

(assert (= (and b!24086 c!3201) b!24087))

(assert (= (and b!24086 (not c!3201)) b!24085))

(assert (= (or b!24087 b!24085) bm!2063))

(declare-fun m!18051 () Bool)

(assert (=> b!24083 m!18051))

(assert (=> b!24083 m!18051))

(declare-fun m!18053 () Bool)

(assert (=> b!24083 m!18053))

(assert (=> b!24084 m!18051))

(assert (=> b!24084 m!18051))

(declare-fun m!18055 () Bool)

(assert (=> b!24084 m!18055))

(assert (=> b!24086 m!18051))

(assert (=> b!24086 m!18051))

(assert (=> b!24086 m!18055))

(assert (=> bm!2063 m!18051))

(declare-fun m!18057 () Bool)

(assert (=> bm!2063 m!18057))

(assert (=> b!23833 d!4241))

(declare-fun d!4243 () Bool)

(assert (=> d!4243 (= (apply!29 lt!8694 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8694) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!979 () Bool)

(assert (= bs!979 d!4243))

(declare-fun m!18059 () Bool)

(assert (=> bs!979 m!18059))

(assert (=> bs!979 m!18059))

(declare-fun m!18061 () Bool)

(assert (=> bs!979 m!18061))

(assert (=> b!23761 d!4243))

(declare-fun d!4245 () Bool)

(assert (=> d!4245 (contains!220 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))))

(assert (=> d!4245 true))

(declare-fun _$16!71 () Unit!514)

(assert (=> d!4245 (= (choose!208 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) _$16!71)))

(declare-fun bs!980 () Bool)

(assert (= bs!980 d!4245))

(assert (=> bs!980 m!17094))

(assert (=> bs!980 m!16814))

(assert (=> bs!980 m!17094))

(assert (=> bs!980 m!16814))

(assert (=> bs!980 m!17096))

(assert (=> d!4033 d!4245))

(assert (=> d!4033 d!4181))

(declare-fun d!4247 () Bool)

(assert (=> d!4247 (= (map!410 (_2!476 lt!8764)) (getCurrentListMap!121 (_keys!3164 (_2!476 lt!8764)) (_values!1729 (_2!476 lt!8764)) (mask!4730 (_2!476 lt!8764)) (extraKeys!1641 (_2!476 lt!8764)) (zeroValue!1666 (_2!476 lt!8764)) (minValue!1666 (_2!476 lt!8764)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8764))))))

(declare-fun bs!981 () Bool)

(assert (= bs!981 d!4247))

(declare-fun m!18063 () Bool)

(assert (=> bs!981 m!18063))

(assert (=> b!23851 d!4247))

(declare-fun d!4249 () Bool)

(declare-fun e!15594 () Bool)

(assert (=> d!4249 e!15594))

(declare-fun res!14706 () Bool)

(assert (=> d!4249 (=> (not res!14706) (not e!15594))))

(declare-fun lt!8920 () ListLongMap!553)

(assert (=> d!4249 (= res!14706 (contains!220 lt!8920 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!8923 () List!565)

(assert (=> d!4249 (= lt!8920 (ListLongMap!554 lt!8923))))

(declare-fun lt!8921 () Unit!514)

(declare-fun lt!8922 () Unit!514)

(assert (=> d!4249 (= lt!8921 lt!8922)))

(assert (=> d!4249 (= (getValueByKey!61 lt!8923 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4249 (= lt!8922 (lemmaContainsTupThenGetReturnValue!18 lt!8923 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4249 (= lt!8923 (insertStrictlySorted!18 (toList!292 (map!410 lt!8162)) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4249 (= (+!45 (map!410 lt!8162) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!8920)))

(declare-fun b!24088 () Bool)

(declare-fun res!14707 () Bool)

(assert (=> b!24088 (=> (not res!14707) (not e!15594))))

(assert (=> b!24088 (= res!14707 (= (getValueByKey!61 (toList!292 lt!8920) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24089 () Bool)

(assert (=> b!24089 (= e!15594 (contains!221 (toList!292 lt!8920) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4249 res!14706) b!24088))

(assert (= (and b!24088 res!14707) b!24089))

(declare-fun m!18065 () Bool)

(assert (=> d!4249 m!18065))

(declare-fun m!18067 () Bool)

(assert (=> d!4249 m!18067))

(declare-fun m!18069 () Bool)

(assert (=> d!4249 m!18069))

(declare-fun m!18071 () Bool)

(assert (=> d!4249 m!18071))

(declare-fun m!18073 () Bool)

(assert (=> b!24088 m!18073))

(declare-fun m!18075 () Bool)

(assert (=> b!24089 m!18075))

(assert (=> b!23851 d!4249))

(assert (=> b!23851 d!4101))

(declare-fun d!4251 () Bool)

(assert (=> d!4251 (= (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (and (not (= (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23596 d!4251))

(declare-fun d!4253 () Bool)

(declare-fun lt!8924 () (_ BitVec 32))

(assert (=> d!4253 (and (bvsge lt!8924 #b00000000000000000000000000000000) (bvsle lt!8924 (bvsub (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun e!15596 () (_ BitVec 32))

(assert (=> d!4253 (= lt!8924 e!15596)))

(declare-fun c!3203 () Bool)

(assert (=> d!4253 (= c!3203 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4253 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4253 (= (arrayCountValidKeys!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))) lt!8924)))

(declare-fun bm!2064 () Bool)

(declare-fun call!2067 () (_ BitVec 32))

(assert (=> bm!2064 (= call!2067 (arrayCountValidKeys!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24090 () Bool)

(declare-fun e!15595 () (_ BitVec 32))

(assert (=> b!24090 (= e!15595 (bvadd #b00000000000000000000000000000001 call!2067))))

(declare-fun b!24091 () Bool)

(assert (=> b!24091 (= e!15595 call!2067)))

(declare-fun b!24092 () Bool)

(assert (=> b!24092 (= e!15596 #b00000000000000000000000000000000)))

(declare-fun b!24093 () Bool)

(assert (=> b!24093 (= e!15596 e!15595)))

(declare-fun c!3202 () Bool)

(assert (=> b!24093 (= c!3202 (validKeyInArray!0 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(assert (= (and d!4253 c!3203) b!24092))

(assert (= (and d!4253 (not c!3203)) b!24093))

(assert (= (and b!24093 c!3202) b!24090))

(assert (= (and b!24093 (not c!3202)) b!24091))

(assert (= (or b!24090 b!24091) bm!2064))

(declare-fun m!18077 () Bool)

(assert (=> bm!2064 m!18077))

(assert (=> b!24093 m!17871))

(assert (=> b!24093 m!17871))

(assert (=> b!24093 m!17881))

(assert (=> b!23569 d!4253))

(declare-fun d!4255 () Bool)

(declare-fun e!15597 () Bool)

(assert (=> d!4255 e!15597))

(declare-fun res!14708 () Bool)

(assert (=> d!4255 (=> (not res!14708) (not e!15597))))

(declare-fun lt!8925 () ListLongMap!553)

(assert (=> d!4255 (= res!14708 (contains!220 lt!8925 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!8928 () List!565)

(assert (=> d!4255 (= lt!8925 (ListLongMap!554 lt!8928))))

(declare-fun lt!8926 () Unit!514)

(declare-fun lt!8927 () Unit!514)

(assert (=> d!4255 (= lt!8926 lt!8927)))

(assert (=> d!4255 (= (getValueByKey!61 lt!8928 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4255 (= lt!8927 (lemmaContainsTupThenGetReturnValue!18 lt!8928 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4255 (= lt!8928 (insertStrictlySorted!18 (toList!292 call!1977) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4255 (= (+!45 call!1977 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8925)))

(declare-fun b!24094 () Bool)

(declare-fun res!14709 () Bool)

(assert (=> b!24094 (=> (not res!14709) (not e!15597))))

(assert (=> b!24094 (= res!14709 (= (getValueByKey!61 (toList!292 lt!8925) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24095 () Bool)

(assert (=> b!24095 (= e!15597 (contains!221 (toList!292 lt!8925) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4255 res!14708) b!24094))

(assert (= (and b!24094 res!14709) b!24095))

(declare-fun m!18079 () Bool)

(assert (=> d!4255 m!18079))

(declare-fun m!18081 () Bool)

(assert (=> d!4255 m!18081))

(declare-fun m!18083 () Bool)

(assert (=> d!4255 m!18083))

(declare-fun m!18085 () Bool)

(assert (=> d!4255 m!18085))

(declare-fun m!18087 () Bool)

(assert (=> b!24094 m!18087))

(declare-fun m!18089 () Bool)

(assert (=> b!24095 m!18089))

(assert (=> b!23525 d!4255))

(declare-fun b!24096 () Bool)

(declare-fun e!15602 () SeekEntryResult!59)

(assert (=> b!24096 (= e!15602 (Intermediate!59 false (toIndex!0 #b0000000000000000000000000000000000000000000000000000000000000000 (mask!4730 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun d!4257 () Bool)

(declare-fun e!15601 () Bool)

(assert (=> d!4257 e!15601))

(declare-fun c!3206 () Bool)

(declare-fun lt!8929 () SeekEntryResult!59)

(assert (=> d!4257 (= c!3206 (and ((_ is Intermediate!59) lt!8929) (undefined!871 lt!8929)))))

(declare-fun e!15598 () SeekEntryResult!59)

(assert (=> d!4257 (= lt!8929 e!15598)))

(declare-fun c!3204 () Bool)

(assert (=> d!4257 (= c!3204 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!8930 () (_ BitVec 64))

(assert (=> d!4257 (= lt!8930 (select (arr!604 (_keys!3164 lt!8162)) (toIndex!0 #b0000000000000000000000000000000000000000000000000000000000000000 (mask!4730 lt!8162))))))

(assert (=> d!4257 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4257 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 #b0000000000000000000000000000000000000000000000000000000000000000 (mask!4730 lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)) lt!8929)))

(declare-fun b!24097 () Bool)

(assert (=> b!24097 (= e!15598 e!15602)))

(declare-fun c!3205 () Bool)

(assert (=> b!24097 (= c!3205 (or (= lt!8930 #b0000000000000000000000000000000000000000000000000000000000000000) (= (bvadd lt!8930 lt!8930) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24098 () Bool)

(assert (=> b!24098 (and (bvsge (index!2359 lt!8929) #b00000000000000000000000000000000) (bvslt (index!2359 lt!8929) (size!700 (_keys!3164 lt!8162))))))

(declare-fun e!15599 () Bool)

(assert (=> b!24098 (= e!15599 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2359 lt!8929)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24099 () Bool)

(assert (=> b!24099 (and (bvsge (index!2359 lt!8929) #b00000000000000000000000000000000) (bvslt (index!2359 lt!8929) (size!700 (_keys!3164 lt!8162))))))

(declare-fun res!14711 () Bool)

(assert (=> b!24099 (= res!14711 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2359 lt!8929)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24099 (=> res!14711 e!15599)))

(declare-fun b!24100 () Bool)

(declare-fun e!15600 () Bool)

(assert (=> b!24100 (= e!15601 e!15600)))

(declare-fun res!14710 () Bool)

(assert (=> b!24100 (= res!14710 (and ((_ is Intermediate!59) lt!8929) (not (undefined!871 lt!8929)) (bvslt (x!5581 lt!8929) #b01111111111111111111111111111110) (bvsge (x!5581 lt!8929) #b00000000000000000000000000000000) (bvsge (x!5581 lt!8929) #b00000000000000000000000000000000)))))

(assert (=> b!24100 (=> (not res!14710) (not e!15600))))

(declare-fun b!24101 () Bool)

(assert (=> b!24101 (= e!15598 (Intermediate!59 true (toIndex!0 #b0000000000000000000000000000000000000000000000000000000000000000 (mask!4730 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun b!24102 () Bool)

(assert (=> b!24102 (= e!15601 (bvsge (x!5581 lt!8929) #b01111111111111111111111111111110))))

(declare-fun b!24103 () Bool)

(assert (=> b!24103 (and (bvsge (index!2359 lt!8929) #b00000000000000000000000000000000) (bvslt (index!2359 lt!8929) (size!700 (_keys!3164 lt!8162))))))

(declare-fun res!14712 () Bool)

(assert (=> b!24103 (= res!14712 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2359 lt!8929)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24103 (=> res!14712 e!15599)))

(assert (=> b!24103 (= e!15600 e!15599)))

(declare-fun b!24104 () Bool)

(assert (=> b!24104 (= e!15602 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 #b0000000000000000000000000000000000000000000000000000000000000000 (mask!4730 lt!8162)) #b00000000000000000000000000000000 (mask!4730 lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(assert (= (and d!4257 c!3204) b!24101))

(assert (= (and d!4257 (not c!3204)) b!24097))

(assert (= (and b!24097 c!3205) b!24096))

(assert (= (and b!24097 (not c!3205)) b!24104))

(assert (= (and d!4257 c!3206) b!24102))

(assert (= (and d!4257 (not c!3206)) b!24100))

(assert (= (and b!24100 res!14710) b!24103))

(assert (= (and b!24103 (not res!14712)) b!24099))

(assert (= (and b!24099 (not res!14711)) b!24098))

(assert (=> d!4257 m!17290))

(declare-fun m!18091 () Bool)

(assert (=> d!4257 m!18091))

(assert (=> d!4257 m!17072))

(declare-fun m!18093 () Bool)

(assert (=> b!24099 m!18093))

(assert (=> b!24103 m!18093))

(assert (=> b!24098 m!18093))

(assert (=> b!24104 m!17290))

(declare-fun m!18095 () Bool)

(assert (=> b!24104 m!18095))

(assert (=> b!24104 m!18095))

(declare-fun m!18097 () Bool)

(assert (=> b!24104 m!18097))

(assert (=> d!4061 d!4257))

(declare-fun d!4259 () Bool)

(declare-fun lt!8932 () (_ BitVec 32))

(declare-fun lt!8931 () (_ BitVec 32))

(assert (=> d!4259 (= lt!8932 (bvmul (bvxor lt!8931 (bvlshr lt!8931 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!4259 (= lt!8931 ((_ extract 31 0) (bvand (bvxor #b0000000000000000000000000000000000000000000000000000000000000000 (bvlshr #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!4259 (and (bvsge (mask!4730 lt!8162) #b00000000000000000000000000000000) (let ((res!14665 (let ((h!1129 ((_ extract 31 0) (bvand (bvxor #b0000000000000000000000000000000000000000000000000000000000000000 (bvlshr #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!5840 (bvmul (bvxor h!1129 (bvlshr h!1129 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!5840 (bvlshr x!5840 #b00000000000000000000000000001101)) (mask!4730 lt!8162)))))) (and (bvslt res!14665 (bvadd (mask!4730 lt!8162) #b00000000000000000000000000000001)) (bvsge res!14665 #b00000000000000000000000000000000))))))

(assert (=> d!4259 (= (toIndex!0 #b0000000000000000000000000000000000000000000000000000000000000000 (mask!4730 lt!8162)) (bvand (bvxor lt!8932 (bvlshr lt!8932 #b00000000000000000000000000001101)) (mask!4730 lt!8162)))))

(assert (=> d!4061 d!4259))

(declare-fun d!4261 () Bool)

(assert (=> d!4261 (= (validMask!0 (mask!4730 lt!8162)) (and (or (= (mask!4730 lt!8162) #b00000000000000000000000000000111) (= (mask!4730 lt!8162) #b00000000000000000000000000001111) (= (mask!4730 lt!8162) #b00000000000000000000000000011111) (= (mask!4730 lt!8162) #b00000000000000000000000000111111) (= (mask!4730 lt!8162) #b00000000000000000000000001111111) (= (mask!4730 lt!8162) #b00000000000000000000000011111111) (= (mask!4730 lt!8162) #b00000000000000000000000111111111) (= (mask!4730 lt!8162) #b00000000000000000000001111111111) (= (mask!4730 lt!8162) #b00000000000000000000011111111111) (= (mask!4730 lt!8162) #b00000000000000000000111111111111) (= (mask!4730 lt!8162) #b00000000000000000001111111111111) (= (mask!4730 lt!8162) #b00000000000000000011111111111111) (= (mask!4730 lt!8162) #b00000000000000000111111111111111) (= (mask!4730 lt!8162) #b00000000000000001111111111111111) (= (mask!4730 lt!8162) #b00000000000000011111111111111111) (= (mask!4730 lt!8162) #b00000000000000111111111111111111) (= (mask!4730 lt!8162) #b00000000000001111111111111111111) (= (mask!4730 lt!8162) #b00000000000011111111111111111111) (= (mask!4730 lt!8162) #b00000000000111111111111111111111) (= (mask!4730 lt!8162) #b00000000001111111111111111111111) (= (mask!4730 lt!8162) #b00000000011111111111111111111111) (= (mask!4730 lt!8162) #b00000000111111111111111111111111) (= (mask!4730 lt!8162) #b00000001111111111111111111111111) (= (mask!4730 lt!8162) #b00000011111111111111111111111111) (= (mask!4730 lt!8162) #b00000111111111111111111111111111) (= (mask!4730 lt!8162) #b00001111111111111111111111111111) (= (mask!4730 lt!8162) #b00011111111111111111111111111111) (= (mask!4730 lt!8162) #b00111111111111111111111111111111)) (bvsle (mask!4730 lt!8162) #b00111111111111111111111111111111)))))

(assert (=> d!4061 d!4261))

(assert (=> d!4069 d!4053))

(declare-fun d!4263 () Bool)

(assert (=> d!4263 (= (apply!29 lt!8694 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!292 lt!8694) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))))

(declare-fun bs!982 () Bool)

(assert (= bs!982 d!4263))

(assert (=> bs!982 m!17154))

(declare-fun m!18099 () Bool)

(assert (=> bs!982 m!18099))

(assert (=> bs!982 m!18099))

(declare-fun m!18101 () Bool)

(assert (=> bs!982 m!18101))

(assert (=> b!23767 d!4263))

(declare-fun d!4265 () Bool)

(declare-fun c!3209 () Bool)

(assert (=> d!4265 (= c!3209 ((_ is ValueCellFull!312) (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun e!15605 () V!1189)

(assert (=> d!4265 (= (get!390 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15605)))

(declare-fun b!24109 () Bool)

(declare-fun get!392 (ValueCell!312 V!1189) V!1189)

(assert (=> b!24109 (= e!15605 (get!392 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24110 () Bool)

(declare-fun get!393 (ValueCell!312 V!1189) V!1189)

(assert (=> b!24110 (= e!15605 (get!393 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4265 c!3209) b!24109))

(assert (= (and d!4265 (not c!3209)) b!24110))

(assert (=> b!24109 m!17505))

(assert (=> b!24109 m!17194))

(declare-fun m!18103 () Bool)

(assert (=> b!24109 m!18103))

(assert (=> b!24110 m!17505))

(assert (=> b!24110 m!17194))

(declare-fun m!18105 () Bool)

(assert (=> b!24110 m!18105))

(assert (=> b!23767 d!4265))

(assert (=> d!4101 d!4089))

(declare-fun d!4267 () Bool)

(declare-fun e!15606 () Bool)

(assert (=> d!4267 e!15606))

(declare-fun res!14713 () Bool)

(assert (=> d!4267 (=> (not res!14713) (not e!15606))))

(declare-fun lt!8933 () ListLongMap!553)

(assert (=> d!4267 (= res!14713 (contains!220 lt!8933 (_1!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!8936 () List!565)

(assert (=> d!4267 (= lt!8933 (ListLongMap!554 lt!8936))))

(declare-fun lt!8934 () Unit!514)

(declare-fun lt!8935 () Unit!514)

(assert (=> d!4267 (= lt!8934 lt!8935)))

(assert (=> d!4267 (= (getValueByKey!61 lt!8936 (_1!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4267 (= lt!8935 (lemmaContainsTupThenGetReturnValue!18 lt!8936 (_1!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4267 (= lt!8936 (insertStrictlySorted!18 (toList!292 (ite c!3052 call!1978 (ite c!3053 call!1974 call!1979))) (_1!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4267 (= (+!45 (ite c!3052 call!1978 (ite c!3053 call!1974 call!1979)) (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8933)))

(declare-fun b!24111 () Bool)

(declare-fun res!14714 () Bool)

(assert (=> b!24111 (=> (not res!14714) (not e!15606))))

(assert (=> b!24111 (= res!14714 (= (getValueByKey!61 (toList!292 lt!8933) (_1!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun b!24112 () Bool)

(assert (=> b!24112 (= e!15606 (contains!221 (toList!292 lt!8933) (ite (or c!3052 c!3053) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (= (and d!4267 res!14713) b!24111))

(assert (= (and b!24111 res!14714) b!24112))

(declare-fun m!18107 () Bool)

(assert (=> d!4267 m!18107))

(declare-fun m!18109 () Bool)

(assert (=> d!4267 m!18109))

(declare-fun m!18111 () Bool)

(assert (=> d!4267 m!18111))

(declare-fun m!18113 () Bool)

(assert (=> d!4267 m!18113))

(declare-fun m!18115 () Bool)

(assert (=> b!24111 m!18115))

(declare-fun m!18117 () Bool)

(assert (=> b!24112 m!18117))

(assert (=> bm!1973 d!4267))

(declare-fun d!4269 () Bool)

(assert (=> d!4269 (= (apply!29 lt!8512 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8512) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!983 () Bool)

(assert (= bs!983 d!4269))

(assert (=> bs!983 m!17927))

(assert (=> bs!983 m!17927))

(declare-fun m!18119 () Bool)

(assert (=> bs!983 m!18119))

(assert (=> b!23588 d!4269))

(declare-fun d!4271 () Bool)

(assert (=> d!4271 (= (apply!29 lt!8722 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!292 lt!8722) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))))

(declare-fun bs!984 () Bool)

(assert (= bs!984 d!4271))

(assert (=> bs!984 m!16992))

(declare-fun m!18121 () Bool)

(assert (=> bs!984 m!18121))

(assert (=> bs!984 m!18121))

(declare-fun m!18123 () Bool)

(assert (=> bs!984 m!18123))

(assert (=> b!23796 d!4271))

(declare-fun d!4273 () Bool)

(declare-fun c!3210 () Bool)

(assert (=> d!4273 (= c!3210 ((_ is ValueCellFull!312) (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000)))))

(declare-fun e!15607 () V!1189)

(assert (=> d!4273 (= (get!390 (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15607)))

(declare-fun b!24113 () Bool)

(assert (=> b!24113 (= e!15607 (get!392 (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24114 () Bool)

(assert (=> b!24114 (= e!15607 (get!393 (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4273 c!3210) b!24113))

(assert (= (and d!4273 (not c!3210)) b!24114))

(assert (=> b!24113 m!17565))

(assert (=> b!24113 m!17032))

(declare-fun m!18125 () Bool)

(assert (=> b!24113 m!18125))

(assert (=> b!24114 m!17565))

(assert (=> b!24114 m!17032))

(declare-fun m!18127 () Bool)

(assert (=> b!24114 m!18127))

(assert (=> b!23796 d!4273))

(declare-fun d!4275 () Bool)

(declare-fun e!15614 () Bool)

(assert (=> d!4275 e!15614))

(declare-fun res!14716 () Bool)

(assert (=> d!4275 (=> (not res!14716) (not e!15614))))

(declare-fun lt!8939 () ListLongMap!553)

(assert (=> d!4275 (= res!14716 (not (contains!220 lt!8939 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15612 () ListLongMap!553)

(assert (=> d!4275 (= lt!8939 e!15612)))

(declare-fun c!3212 () Bool)

(assert (=> d!4275 (= c!3212 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4275 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4275 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8939)))

(declare-fun b!24115 () Bool)

(declare-fun res!14717 () Bool)

(assert (=> b!24115 (=> (not res!14717) (not e!15614))))

(assert (=> b!24115 (= res!14717 (not (contains!220 lt!8939 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24116 () Bool)

(declare-fun e!15611 () Bool)

(declare-fun e!15610 () Bool)

(assert (=> b!24116 (= e!15611 e!15610)))

(declare-fun c!3214 () Bool)

(assert (=> b!24116 (= c!3214 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24117 () Bool)

(assert (=> b!24117 (= e!15610 (= lt!8939 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24118 () Bool)

(assert (=> b!24118 (= e!15612 (ListLongMap!554 Nil!562))))

(declare-fun b!24119 () Bool)

(declare-fun e!15609 () ListLongMap!553)

(declare-fun call!2068 () ListLongMap!553)

(assert (=> b!24119 (= e!15609 call!2068)))

(declare-fun bm!2065 () Bool)

(assert (=> bm!2065 (= call!2068 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (ite c!3001 lt!8238 lt!8259) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24120 () Bool)

(assert (=> b!24120 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> b!24120 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun e!15613 () Bool)

(assert (=> b!24120 (= e!15613 (= (apply!29 lt!8939 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24121 () Bool)

(declare-fun e!15608 () Bool)

(assert (=> b!24121 (= e!15608 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24121 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24122 () Bool)

(assert (=> b!24122 (= e!15612 e!15609)))

(declare-fun c!3211 () Bool)

(assert (=> b!24122 (= c!3211 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24123 () Bool)

(assert (=> b!24123 (= e!15611 e!15613)))

(assert (=> b!24123 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun res!14718 () Bool)

(assert (=> b!24123 (= res!14718 (contains!220 lt!8939 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24123 (=> (not res!14718) (not e!15613))))

(declare-fun b!24124 () Bool)

(assert (=> b!24124 (= e!15610 (isEmpty!173 lt!8939))))

(declare-fun b!24125 () Bool)

(declare-fun lt!8942 () Unit!514)

(declare-fun lt!8943 () Unit!514)

(assert (=> b!24125 (= lt!8942 lt!8943)))

(declare-fun lt!8938 () V!1189)

(declare-fun lt!8941 () ListLongMap!553)

(declare-fun lt!8937 () (_ BitVec 64))

(declare-fun lt!8940 () (_ BitVec 64))

(assert (=> b!24125 (not (contains!220 (+!45 lt!8941 (tuple2!947 lt!8937 lt!8938)) lt!8940))))

(assert (=> b!24125 (= lt!8943 (addStillNotContains!2 lt!8941 lt!8937 lt!8938 lt!8940))))

(assert (=> b!24125 (= lt!8940 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24125 (= lt!8938 (get!390 (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24125 (= lt!8937 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!24125 (= lt!8941 call!2068)))

(assert (=> b!24125 (= e!15609 (+!45 call!2068 (tuple2!947 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (get!390 (select (arr!603 (ite (or c!2997 c!2993) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24126 () Bool)

(assert (=> b!24126 (= e!15614 e!15611)))

(declare-fun c!3213 () Bool)

(assert (=> b!24126 (= c!3213 e!15608)))

(declare-fun res!14715 () Bool)

(assert (=> b!24126 (=> (not res!14715) (not e!15608))))

(assert (=> b!24126 (= res!14715 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4275 c!3212) b!24118))

(assert (= (and d!4275 (not c!3212)) b!24122))

(assert (= (and b!24122 c!3211) b!24125))

(assert (= (and b!24122 (not c!3211)) b!24119))

(assert (= (or b!24125 b!24119) bm!2065))

(assert (= (and d!4275 res!14716) b!24115))

(assert (= (and b!24115 res!14717) b!24126))

(assert (= (and b!24126 res!14715) b!24121))

(assert (= (and b!24126 c!3213) b!24123))

(assert (= (and b!24126 (not c!3213)) b!24116))

(assert (= (and b!24123 res!14718) b!24120))

(assert (= (and b!24116 c!3214) b!24117))

(assert (= (and b!24116 (not c!3214)) b!24124))

(declare-fun b_lambda!1607 () Bool)

(assert (=> (not b_lambda!1607) (not b!24120)))

(assert (=> b!24120 t!3241))

(declare-fun b_and!1511 () Bool)

(assert (= b_and!1509 (and (=> t!3241 result!1101) b_and!1511)))

(declare-fun b_lambda!1609 () Bool)

(assert (=> (not b_lambda!1609) (not b!24125)))

(assert (=> b!24125 t!3241))

(declare-fun b_and!1513 () Bool)

(assert (= b_and!1511 (and (=> t!3241 result!1101) b_and!1513)))

(assert (=> b!24122 m!16992))

(assert (=> b!24122 m!16992))

(assert (=> b!24122 m!16996))

(declare-fun m!18129 () Bool)

(assert (=> b!24124 m!18129))

(declare-fun m!18131 () Bool)

(assert (=> b!24125 m!18131))

(declare-fun m!18133 () Bool)

(assert (=> b!24125 m!18133))

(assert (=> b!24125 m!17565))

(assert (=> b!24125 m!17032))

(assert (=> b!24125 m!17567))

(declare-fun m!18135 () Bool)

(assert (=> b!24125 m!18135))

(assert (=> b!24125 m!17032))

(assert (=> b!24125 m!17565))

(assert (=> b!24125 m!18131))

(declare-fun m!18137 () Bool)

(assert (=> b!24125 m!18137))

(assert (=> b!24125 m!16992))

(assert (=> b!24121 m!16992))

(assert (=> b!24121 m!16992))

(assert (=> b!24121 m!16996))

(declare-fun m!18139 () Bool)

(assert (=> bm!2065 m!18139))

(assert (=> b!24117 m!18139))

(declare-fun m!18141 () Bool)

(assert (=> b!24115 m!18141))

(assert (=> b!24123 m!16992))

(assert (=> b!24123 m!16992))

(declare-fun m!18143 () Bool)

(assert (=> b!24123 m!18143))

(declare-fun m!18145 () Bool)

(assert (=> d!4275 m!18145))

(assert (=> d!4275 m!16948))

(assert (=> b!24120 m!17565))

(assert (=> b!24120 m!17032))

(assert (=> b!24120 m!17567))

(assert (=> b!24120 m!16992))

(declare-fun m!18147 () Bool)

(assert (=> b!24120 m!18147))

(assert (=> b!24120 m!16992))

(assert (=> b!24120 m!17032))

(assert (=> b!24120 m!17565))

(assert (=> bm!2026 d!4275))

(assert (=> b!23649 d!4251))

(declare-fun d!4277 () Bool)

(declare-fun e!15615 () Bool)

(assert (=> d!4277 e!15615))

(declare-fun res!14719 () Bool)

(assert (=> d!4277 (=> res!14719 e!15615)))

(declare-fun lt!8945 () Bool)

(assert (=> d!4277 (= res!14719 (not lt!8945))))

(declare-fun lt!8946 () Bool)

(assert (=> d!4277 (= lt!8945 lt!8946)))

(declare-fun lt!8944 () Unit!514)

(declare-fun e!15616 () Unit!514)

(assert (=> d!4277 (= lt!8944 e!15616)))

(declare-fun c!3215 () Bool)

(assert (=> d!4277 (= c!3215 lt!8946)))

(assert (=> d!4277 (= lt!8946 (containsKey!25 (toList!292 lt!8512) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> d!4277 (= (contains!220 lt!8512 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) lt!8945)))

(declare-fun b!24127 () Bool)

(declare-fun lt!8947 () Unit!514)

(assert (=> b!24127 (= e!15616 lt!8947)))

(assert (=> b!24127 (= lt!8947 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8512) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24127 (isDefined!23 (getValueByKey!61 (toList!292 lt!8512) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24128 () Bool)

(declare-fun Unit!550 () Unit!514)

(assert (=> b!24128 (= e!15616 Unit!550)))

(declare-fun b!24129 () Bool)

(assert (=> b!24129 (= e!15615 (isDefined!23 (getValueByKey!61 (toList!292 lt!8512) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))))

(assert (= (and d!4277 c!3215) b!24127))

(assert (= (and d!4277 (not c!3215)) b!24128))

(assert (= (and d!4277 (not res!14719)) b!24129))

(assert (=> d!4277 m!17154))

(declare-fun m!18149 () Bool)

(assert (=> d!4277 m!18149))

(assert (=> b!24127 m!17154))

(declare-fun m!18151 () Bool)

(assert (=> b!24127 m!18151))

(assert (=> b!24127 m!17154))

(declare-fun m!18153 () Bool)

(assert (=> b!24127 m!18153))

(assert (=> b!24127 m!18153))

(declare-fun m!18155 () Bool)

(assert (=> b!24127 m!18155))

(assert (=> b!24129 m!17154))

(assert (=> b!24129 m!18153))

(assert (=> b!24129 m!18153))

(assert (=> b!24129 m!18155))

(assert (=> b!23578 d!4277))

(assert (=> bm!2014 d!4093))

(declare-fun d!4279 () Bool)

(assert (=> d!4279 (= (validKeyInArray!0 (select (arr!604 lt!8357) lt!8340)) (and (not (= (select (arr!604 lt!8357) lt!8340) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!604 lt!8357) lt!8340) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23817 d!4279))

(assert (=> b!23616 d!4197))

(declare-fun b!24142 () Bool)

(declare-fun e!15624 () SeekEntryResult!59)

(assert (=> b!24142 (= e!15624 (seekKeyOrZeroReturnVacant!0 (bvadd (x!5581 lt!8376) #b00000000000000000000000000000001) (nextIndex!0 (index!2359 lt!8376) (x!5581 lt!8376) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2359 lt!8376) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24143 () Bool)

(declare-fun e!15623 () SeekEntryResult!59)

(assert (=> b!24143 (= e!15623 (Found!59 (index!2359 lt!8376)))))

(declare-fun b!24144 () Bool)

(declare-fun e!15625 () SeekEntryResult!59)

(assert (=> b!24144 (= e!15625 e!15623)))

(declare-fun lt!8952 () (_ BitVec 64))

(declare-fun c!3222 () Bool)

(assert (=> b!24144 (= c!3222 (= lt!8952 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24145 () Bool)

(assert (=> b!24145 (= e!15625 Undefined!59)))

(declare-fun b!24146 () Bool)

(declare-fun c!3224 () Bool)

(assert (=> b!24146 (= c!3224 (= lt!8952 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24146 (= e!15623 e!15624)))

(declare-fun b!24147 () Bool)

(assert (=> b!24147 (= e!15624 (MissingVacant!59 (index!2359 lt!8376)))))

(declare-fun d!4281 () Bool)

(declare-fun lt!8953 () SeekEntryResult!59)

(assert (=> d!4281 (and (or ((_ is Undefined!59) lt!8953) (not ((_ is Found!59) lt!8953)) (and (bvsge (index!2358 lt!8953) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8953) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (or ((_ is Undefined!59) lt!8953) ((_ is Found!59) lt!8953) (not ((_ is MissingVacant!59) lt!8953)) (not (= (index!2360 lt!8953) (index!2359 lt!8376))) (and (bvsge (index!2360 lt!8953) #b00000000000000000000000000000000) (bvslt (index!2360 lt!8953) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (or ((_ is Undefined!59) lt!8953) (ite ((_ is Found!59) lt!8953) (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8953)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (and ((_ is MissingVacant!59) lt!8953) (= (index!2360 lt!8953) (index!2359 lt!8376)) (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2360 lt!8953)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!4281 (= lt!8953 e!15625)))

(declare-fun c!3223 () Bool)

(assert (=> d!4281 (= c!3223 (bvsge (x!5581 lt!8376) #b01111111111111111111111111111110))))

(assert (=> d!4281 (= lt!8952 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2359 lt!8376)))))

(assert (=> d!4281 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4281 (= (seekKeyOrZeroReturnVacant!0 (x!5581 lt!8376) (index!2359 lt!8376) (index!2359 lt!8376) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8953)))

(assert (= (and d!4281 c!3223) b!24145))

(assert (= (and d!4281 (not c!3223)) b!24144))

(assert (= (and b!24144 c!3222) b!24143))

(assert (= (and b!24144 (not c!3222)) b!24146))

(assert (= (and b!24146 c!3224) b!24147))

(assert (= (and b!24146 (not c!3224)) b!24142))

(declare-fun m!18157 () Bool)

(assert (=> b!24142 m!18157))

(assert (=> b!24142 m!18157))

(declare-fun m!18159 () Bool)

(assert (=> b!24142 m!18159))

(declare-fun m!18161 () Bool)

(assert (=> d!4281 m!18161))

(declare-fun m!18163 () Bool)

(assert (=> d!4281 m!18163))

(assert (=> d!4281 m!16972))

(assert (=> d!4281 m!16948))

(assert (=> b!23452 d!4281))

(declare-fun b!24148 () Bool)

(declare-fun e!15630 () ListLongMap!553)

(declare-fun call!2075 () ListLongMap!553)

(assert (=> b!24148 (= e!15630 call!2075)))

(declare-fun b!24149 () Bool)

(declare-fun res!14728 () Bool)

(declare-fun e!15633 () Bool)

(assert (=> b!24149 (=> (not res!14728) (not e!15633))))

(declare-fun e!15628 () Bool)

(assert (=> b!24149 (= res!14728 e!15628)))

(declare-fun c!3225 () Bool)

(assert (=> b!24149 (= c!3225 (not (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24150 () Bool)

(declare-fun e!15627 () Bool)

(declare-fun e!15635 () Bool)

(assert (=> b!24150 (= e!15627 e!15635)))

(declare-fun res!14724 () Bool)

(assert (=> b!24150 (=> (not res!14724) (not e!15635))))

(declare-fun lt!8963 () ListLongMap!553)

(assert (=> b!24150 (= res!14724 (contains!220 lt!8963 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(assert (=> b!24150 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(declare-fun b!24151 () Bool)

(declare-fun e!15626 () Bool)

(declare-fun e!15634 () Bool)

(assert (=> b!24151 (= e!15626 e!15634)))

(declare-fun res!14727 () Bool)

(declare-fun call!2071 () Bool)

(assert (=> b!24151 (= res!14727 call!2071)))

(assert (=> b!24151 (=> (not res!14727) (not e!15634))))

(declare-fun b!24152 () Bool)

(declare-fun e!15638 () Unit!514)

(declare-fun lt!8954 () Unit!514)

(assert (=> b!24152 (= e!15638 lt!8954)))

(declare-fun lt!8959 () ListLongMap!553)

(assert (=> b!24152 (= lt!8959 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8264)) (_values!1729 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264)) (extraKeys!1641 (_2!476 lt!8264)) (zeroValue!1666 (_2!476 lt!8264)) (minValue!1666 (_2!476 lt!8264)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8264))))))

(declare-fun lt!8970 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8970 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8971 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8971 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000))))

(declare-fun lt!8974 () Unit!514)

(assert (=> b!24152 (= lt!8974 (addStillContains!14 lt!8959 lt!8970 (zeroValue!1666 (_2!476 lt!8264)) lt!8971))))

(assert (=> b!24152 (contains!220 (+!45 lt!8959 (tuple2!947 lt!8970 (zeroValue!1666 (_2!476 lt!8264)))) lt!8971)))

(declare-fun lt!8968 () Unit!514)

(assert (=> b!24152 (= lt!8968 lt!8974)))

(declare-fun lt!8961 () ListLongMap!553)

(assert (=> b!24152 (= lt!8961 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8264)) (_values!1729 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264)) (extraKeys!1641 (_2!476 lt!8264)) (zeroValue!1666 (_2!476 lt!8264)) (minValue!1666 (_2!476 lt!8264)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8264))))))

(declare-fun lt!8957 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8957 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8964 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8964 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000))))

(declare-fun lt!8967 () Unit!514)

(assert (=> b!24152 (= lt!8967 (addApplyDifferent!14 lt!8961 lt!8957 (minValue!1666 (_2!476 lt!8264)) lt!8964))))

(assert (=> b!24152 (= (apply!29 (+!45 lt!8961 (tuple2!947 lt!8957 (minValue!1666 (_2!476 lt!8264)))) lt!8964) (apply!29 lt!8961 lt!8964))))

(declare-fun lt!8958 () Unit!514)

(assert (=> b!24152 (= lt!8958 lt!8967)))

(declare-fun lt!8962 () ListLongMap!553)

(assert (=> b!24152 (= lt!8962 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8264)) (_values!1729 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264)) (extraKeys!1641 (_2!476 lt!8264)) (zeroValue!1666 (_2!476 lt!8264)) (minValue!1666 (_2!476 lt!8264)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8264))))))

(declare-fun lt!8965 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8965 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8960 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8960 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000))))

(declare-fun lt!8966 () Unit!514)

(assert (=> b!24152 (= lt!8966 (addApplyDifferent!14 lt!8962 lt!8965 (zeroValue!1666 (_2!476 lt!8264)) lt!8960))))

(assert (=> b!24152 (= (apply!29 (+!45 lt!8962 (tuple2!947 lt!8965 (zeroValue!1666 (_2!476 lt!8264)))) lt!8960) (apply!29 lt!8962 lt!8960))))

(declare-fun lt!8975 () Unit!514)

(assert (=> b!24152 (= lt!8975 lt!8966)))

(declare-fun lt!8969 () ListLongMap!553)

(assert (=> b!24152 (= lt!8969 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8264)) (_values!1729 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264)) (extraKeys!1641 (_2!476 lt!8264)) (zeroValue!1666 (_2!476 lt!8264)) (minValue!1666 (_2!476 lt!8264)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8264))))))

(declare-fun lt!8955 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8955 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8973 () (_ BitVec 64))

(assert (=> b!24152 (= lt!8973 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000))))

(assert (=> b!24152 (= lt!8954 (addApplyDifferent!14 lt!8969 lt!8955 (minValue!1666 (_2!476 lt!8264)) lt!8973))))

(assert (=> b!24152 (= (apply!29 (+!45 lt!8969 (tuple2!947 lt!8955 (minValue!1666 (_2!476 lt!8264)))) lt!8973) (apply!29 lt!8969 lt!8973))))

(declare-fun bm!2067 () Bool)

(declare-fun call!2074 () ListLongMap!553)

(assert (=> bm!2067 (= call!2074 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8264)) (_values!1729 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264)) (extraKeys!1641 (_2!476 lt!8264)) (zeroValue!1666 (_2!476 lt!8264)) (minValue!1666 (_2!476 lt!8264)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8264))))))

(declare-fun b!24153 () Bool)

(declare-fun call!2072 () Bool)

(assert (=> b!24153 (= e!15628 (not call!2072))))

(declare-fun bm!2068 () Bool)

(declare-fun call!2069 () ListLongMap!553)

(declare-fun call!2073 () ListLongMap!553)

(assert (=> bm!2068 (= call!2069 call!2073)))

(declare-fun c!3228 () Bool)

(declare-fun call!2070 () ListLongMap!553)

(declare-fun c!3229 () Bool)

(declare-fun bm!2069 () Bool)

(assert (=> bm!2069 (= call!2073 (+!45 (ite c!3228 call!2074 (ite c!3229 call!2070 call!2075)) (ite (or c!3228 c!3229) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!476 lt!8264))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!476 lt!8264))))))))

(declare-fun b!24154 () Bool)

(declare-fun Unit!551 () Unit!514)

(assert (=> b!24154 (= e!15638 Unit!551)))

(declare-fun b!24155 () Bool)

(assert (=> b!24155 (= e!15626 (not call!2071))))

(declare-fun b!24156 () Bool)

(declare-fun c!3226 () Bool)

(assert (=> b!24156 (= c!3226 (and (not (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15636 () ListLongMap!553)

(assert (=> b!24156 (= e!15636 e!15630)))

(declare-fun b!24157 () Bool)

(declare-fun e!15632 () ListLongMap!553)

(assert (=> b!24157 (= e!15632 e!15636)))

(assert (=> b!24157 (= c!3229 (and (not (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2070 () Bool)

(assert (=> bm!2070 (= call!2075 call!2070)))

(declare-fun b!24158 () Bool)

(assert (=> b!24158 (= e!15634 (= (apply!29 lt!8963 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!476 lt!8264))))))

(declare-fun bm!2071 () Bool)

(assert (=> bm!2071 (= call!2070 call!2074)))

(declare-fun b!24159 () Bool)

(declare-fun e!15637 () Bool)

(assert (=> b!24159 (= e!15628 e!15637)))

(declare-fun res!14726 () Bool)

(assert (=> b!24159 (= res!14726 call!2072)))

(assert (=> b!24159 (=> (not res!14726) (not e!15637))))

(declare-fun d!4283 () Bool)

(assert (=> d!4283 e!15633))

(declare-fun res!14722 () Bool)

(assert (=> d!4283 (=> (not res!14722) (not e!15633))))

(assert (=> d!4283 (= res!14722 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))))

(declare-fun lt!8972 () ListLongMap!553)

(assert (=> d!4283 (= lt!8963 lt!8972)))

(declare-fun lt!8956 () Unit!514)

(assert (=> d!4283 (= lt!8956 e!15638)))

(declare-fun c!3230 () Bool)

(declare-fun e!15631 () Bool)

(assert (=> d!4283 (= c!3230 e!15631)))

(declare-fun res!14723 () Bool)

(assert (=> d!4283 (=> (not res!14723) (not e!15631))))

(assert (=> d!4283 (= res!14723 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(assert (=> d!4283 (= lt!8972 e!15632)))

(assert (=> d!4283 (= c!3228 (and (not (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4283 (validMask!0 (mask!4730 (_2!476 lt!8264)))))

(assert (=> d!4283 (= (getCurrentListMap!121 (_keys!3164 (_2!476 lt!8264)) (_values!1729 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264)) (extraKeys!1641 (_2!476 lt!8264)) (zeroValue!1666 (_2!476 lt!8264)) (minValue!1666 (_2!476 lt!8264)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8264))) lt!8963)))

(declare-fun bm!2066 () Bool)

(assert (=> bm!2066 (= call!2072 (contains!220 lt!8963 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2072 () Bool)

(assert (=> bm!2072 (= call!2071 (contains!220 lt!8963 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24160 () Bool)

(assert (=> b!24160 (= e!15637 (= (apply!29 lt!8963 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!476 lt!8264))))))

(declare-fun b!24161 () Bool)

(declare-fun res!14721 () Bool)

(assert (=> b!24161 (=> (not res!14721) (not e!15633))))

(assert (=> b!24161 (= res!14721 e!15627)))

(declare-fun res!14720 () Bool)

(assert (=> b!24161 (=> res!14720 e!15627)))

(declare-fun e!15629 () Bool)

(assert (=> b!24161 (= res!14720 (not e!15629))))

(declare-fun res!14725 () Bool)

(assert (=> b!24161 (=> (not res!14725) (not e!15629))))

(assert (=> b!24161 (= res!14725 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(declare-fun b!24162 () Bool)

(assert (=> b!24162 (= e!15631 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(declare-fun b!24163 () Bool)

(assert (=> b!24163 (= e!15633 e!15626)))

(declare-fun c!3227 () Bool)

(assert (=> b!24163 (= c!3227 (not (= (bvand (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24164 () Bool)

(assert (=> b!24164 (= e!15635 (= (apply!29 lt!8963 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 (_2!476 lt!8264))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!476 lt!8264)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24164 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 (_2!476 lt!8264)))))))

(assert (=> b!24164 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(declare-fun b!24165 () Bool)

(assert (=> b!24165 (= e!15630 call!2069)))

(declare-fun b!24166 () Bool)

(assert (=> b!24166 (= e!15632 (+!45 call!2073 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!476 lt!8264)))))))

(declare-fun b!24167 () Bool)

(assert (=> b!24167 (= e!15636 call!2069)))

(declare-fun b!24168 () Bool)

(assert (=> b!24168 (= e!15629 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(assert (= (and d!4283 c!3228) b!24166))

(assert (= (and d!4283 (not c!3228)) b!24157))

(assert (= (and b!24157 c!3229) b!24167))

(assert (= (and b!24157 (not c!3229)) b!24156))

(assert (= (and b!24156 c!3226) b!24165))

(assert (= (and b!24156 (not c!3226)) b!24148))

(assert (= (or b!24165 b!24148) bm!2070))

(assert (= (or b!24167 bm!2070) bm!2071))

(assert (= (or b!24167 b!24165) bm!2068))

(assert (= (or b!24166 bm!2071) bm!2067))

(assert (= (or b!24166 bm!2068) bm!2069))

(assert (= (and d!4283 res!14723) b!24162))

(assert (= (and d!4283 c!3230) b!24152))

(assert (= (and d!4283 (not c!3230)) b!24154))

(assert (= (and d!4283 res!14722) b!24161))

(assert (= (and b!24161 res!14725) b!24168))

(assert (= (and b!24161 (not res!14720)) b!24150))

(assert (= (and b!24150 res!14724) b!24164))

(assert (= (and b!24161 res!14721) b!24149))

(assert (= (and b!24149 c!3225) b!24159))

(assert (= (and b!24149 (not c!3225)) b!24153))

(assert (= (and b!24159 res!14726) b!24160))

(assert (= (or b!24159 b!24153) bm!2066))

(assert (= (and b!24149 res!14728) b!24163))

(assert (= (and b!24163 c!3227) b!24151))

(assert (= (and b!24163 (not c!3227)) b!24155))

(assert (= (and b!24151 res!14727) b!24158))

(assert (= (or b!24151 b!24155) bm!2072))

(declare-fun b_lambda!1611 () Bool)

(assert (=> (not b_lambda!1611) (not b!24164)))

(declare-fun t!3245 () Bool)

(declare-fun tb!665 () Bool)

(assert (=> (and b!23168 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!476 lt!8264))) t!3245) tb!665))

(declare-fun result!1105 () Bool)

(assert (=> tb!665 (= result!1105 tp_is_empty!1023)))

(assert (=> b!24164 t!3245))

(declare-fun b_and!1515 () Bool)

(assert (= b_and!1513 (and (=> t!3245 result!1105) b_and!1515)))

(declare-fun m!18165 () Bool)

(assert (=> bm!2066 m!18165))

(declare-fun m!18167 () Bool)

(assert (=> b!24158 m!18167))

(declare-fun m!18169 () Bool)

(assert (=> bm!2072 m!18169))

(declare-fun m!18171 () Bool)

(assert (=> bm!2069 m!18171))

(declare-fun m!18173 () Bool)

(assert (=> b!24166 m!18173))

(assert (=> b!24150 m!17857))

(assert (=> b!24150 m!17857))

(declare-fun m!18175 () Bool)

(assert (=> b!24150 m!18175))

(assert (=> b!24168 m!17857))

(assert (=> b!24168 m!17857))

(assert (=> b!24168 m!17859))

(assert (=> b!24162 m!17857))

(assert (=> b!24162 m!17857))

(assert (=> b!24162 m!17859))

(declare-fun m!18177 () Bool)

(assert (=> bm!2067 m!18177))

(declare-fun m!18179 () Bool)

(assert (=> b!24152 m!18179))

(declare-fun m!18181 () Bool)

(assert (=> b!24152 m!18181))

(declare-fun m!18183 () Bool)

(assert (=> b!24152 m!18183))

(declare-fun m!18185 () Bool)

(assert (=> b!24152 m!18185))

(assert (=> b!24152 m!18183))

(declare-fun m!18187 () Bool)

(assert (=> b!24152 m!18187))

(declare-fun m!18189 () Bool)

(assert (=> b!24152 m!18189))

(declare-fun m!18191 () Bool)

(assert (=> b!24152 m!18191))

(assert (=> b!24152 m!18177))

(declare-fun m!18193 () Bool)

(assert (=> b!24152 m!18193))

(declare-fun m!18195 () Bool)

(assert (=> b!24152 m!18195))

(declare-fun m!18197 () Bool)

(assert (=> b!24152 m!18197))

(declare-fun m!18199 () Bool)

(assert (=> b!24152 m!18199))

(declare-fun m!18201 () Bool)

(assert (=> b!24152 m!18201))

(assert (=> b!24152 m!18201))

(declare-fun m!18203 () Bool)

(assert (=> b!24152 m!18203))

(assert (=> b!24152 m!18191))

(declare-fun m!18205 () Bool)

(assert (=> b!24152 m!18205))

(assert (=> b!24152 m!17857))

(assert (=> b!24152 m!18199))

(declare-fun m!18207 () Bool)

(assert (=> b!24152 m!18207))

(declare-fun m!18209 () Bool)

(assert (=> b!24160 m!18209))

(declare-fun m!18211 () Bool)

(assert (=> b!24164 m!18211))

(declare-fun m!18213 () Bool)

(assert (=> b!24164 m!18213))

(assert (=> b!24164 m!18211))

(declare-fun m!18215 () Bool)

(assert (=> b!24164 m!18215))

(assert (=> b!24164 m!17857))

(declare-fun m!18217 () Bool)

(assert (=> b!24164 m!18217))

(assert (=> b!24164 m!18213))

(assert (=> b!24164 m!17857))

(declare-fun m!18219 () Bool)

(assert (=> d!4283 m!18219))

(assert (=> d!4051 d!4283))

(declare-fun d!4285 () Bool)

(assert (=> d!4285 (= (inRange!0 (index!2358 lt!8795) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (and (bvsge (index!2358 lt!8795) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8795) (bvadd (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001))))))

(assert (=> b!23865 d!4285))

(assert (=> bm!2017 d!4093))

(declare-fun b!24169 () Bool)

(declare-fun e!15639 () Bool)

(declare-fun call!2076 () Bool)

(assert (=> b!24169 (= e!15639 call!2076)))

(declare-fun b!24170 () Bool)

(declare-fun e!15640 () Bool)

(assert (=> b!24170 (= e!15640 e!15639)))

(declare-fun lt!8976 () (_ BitVec 64))

(assert (=> b!24170 (= lt!8976 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000))))

(declare-fun lt!8977 () Unit!514)

(assert (=> b!24170 (= lt!8977 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 lt!8355) lt!8976 #b00000000000000000000000000000000))))

(assert (=> b!24170 (arrayContainsKey!0 (_keys!3164 lt!8355) lt!8976 #b00000000000000000000000000000000)))

(declare-fun lt!8978 () Unit!514)

(assert (=> b!24170 (= lt!8978 lt!8977)))

(declare-fun res!14729 () Bool)

(assert (=> b!24170 (= res!14729 (= (seekEntryOrOpen!0 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000) (_keys!3164 lt!8355) (mask!4730 lt!8355)) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24170 (=> (not res!14729) (not e!15639))))

(declare-fun b!24171 () Bool)

(assert (=> b!24171 (= e!15640 call!2076)))

(declare-fun d!4287 () Bool)

(declare-fun res!14730 () Bool)

(declare-fun e!15641 () Bool)

(assert (=> d!4287 (=> res!14730 e!15641)))

(assert (=> d!4287 (= res!14730 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))

(assert (=> d!4287 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8355) (mask!4730 lt!8355)) e!15641)))

(declare-fun bm!2073 () Bool)

(assert (=> bm!2073 (= call!2076 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 lt!8355) (mask!4730 lt!8355)))))

(declare-fun b!24172 () Bool)

(assert (=> b!24172 (= e!15641 e!15640)))

(declare-fun c!3231 () Bool)

(assert (=> b!24172 (= c!3231 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(assert (= (and d!4287 (not res!14730)) b!24172))

(assert (= (and b!24172 c!3231) b!24170))

(assert (= (and b!24172 (not c!3231)) b!24171))

(assert (= (and b!24170 res!14729) b!24169))

(assert (= (or b!24169 b!24171) bm!2073))

(assert (=> b!24170 m!18051))

(declare-fun m!18221 () Bool)

(assert (=> b!24170 m!18221))

(declare-fun m!18223 () Bool)

(assert (=> b!24170 m!18223))

(assert (=> b!24170 m!18051))

(declare-fun m!18225 () Bool)

(assert (=> b!24170 m!18225))

(declare-fun m!18227 () Bool)

(assert (=> bm!2073 m!18227))

(assert (=> b!24172 m!18051))

(assert (=> b!24172 m!18051))

(assert (=> b!24172 m!18055))

(assert (=> b!23832 d!4287))

(declare-fun d!4289 () Bool)

(declare-fun e!15642 () Bool)

(assert (=> d!4289 e!15642))

(declare-fun res!14731 () Bool)

(assert (=> d!4289 (=> (not res!14731) (not e!15642))))

(declare-fun lt!8979 () ListLongMap!553)

(assert (=> d!4289 (= res!14731 (contains!220 lt!8979 (_1!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))))

(declare-fun lt!8982 () List!565)

(assert (=> d!4289 (= lt!8979 (ListLongMap!554 lt!8982))))

(declare-fun lt!8980 () Unit!514)

(declare-fun lt!8981 () Unit!514)

(assert (=> d!4289 (= lt!8980 lt!8981)))

(assert (=> d!4289 (= (getValueByKey!61 lt!8982 (_1!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))) (Some!66 (_2!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))))

(assert (=> d!4289 (= lt!8981 (lemmaContainsTupThenGetReturnValue!18 lt!8982 (_1!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (_2!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))))

(assert (=> d!4289 (= lt!8982 (insertStrictlySorted!18 (toList!292 (ite c!3067 call!1985 (ite c!3068 call!1981 call!1986))) (_1!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (_2!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))))

(assert (=> d!4289 (= (+!45 (ite c!3067 call!1985 (ite c!3068 call!1981 call!1986)) (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) lt!8979)))

(declare-fun b!24173 () Bool)

(declare-fun res!14732 () Bool)

(assert (=> b!24173 (=> (not res!14732) (not e!15642))))

(assert (=> b!24173 (= res!14732 (= (getValueByKey!61 (toList!292 lt!8979) (_1!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))) (Some!66 (_2!480 (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))))

(declare-fun b!24174 () Bool)

(assert (=> b!24174 (= e!15642 (contains!221 (toList!292 lt!8979) (ite (or c!3067 c!3068) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (= (and d!4289 res!14731) b!24173))

(assert (= (and b!24173 res!14732) b!24174))

(declare-fun m!18229 () Bool)

(assert (=> d!4289 m!18229))

(declare-fun m!18231 () Bool)

(assert (=> d!4289 m!18231))

(declare-fun m!18233 () Bool)

(assert (=> d!4289 m!18233))

(declare-fun m!18235 () Bool)

(assert (=> d!4289 m!18235))

(declare-fun m!18237 () Bool)

(assert (=> b!24173 m!18237))

(declare-fun m!18239 () Bool)

(assert (=> b!24174 m!18239))

(assert (=> bm!1980 d!4289))

(assert (=> d!4045 d!4261))

(assert (=> b!23850 d!4095))

(declare-fun d!4291 () Bool)

(assert (=> d!4291 (contains!220 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!8985 () Unit!514)

(declare-fun choose!216 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) (_ BitVec 32) Int) Unit!514)

(assert (=> d!4291 (= lt!8985 (choose!216 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4291 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4291 (= (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8985)))

(declare-fun bs!985 () Bool)

(assert (= bs!985 d!4291))

(assert (=> bs!985 m!16828))

(assert (=> bs!985 m!16828))

(assert (=> bs!985 m!17407))

(declare-fun m!18241 () Bool)

(assert (=> bs!985 m!18241))

(assert (=> bs!985 m!16948))

(assert (=> b!23721 d!4291))

(declare-fun d!4293 () Bool)

(declare-fun e!15643 () Bool)

(assert (=> d!4293 e!15643))

(declare-fun res!14733 () Bool)

(assert (=> d!4293 (=> res!14733 e!15643)))

(declare-fun lt!8987 () Bool)

(assert (=> d!4293 (= res!14733 (not lt!8987))))

(declare-fun lt!8988 () Bool)

(assert (=> d!4293 (= lt!8987 lt!8988)))

(declare-fun lt!8986 () Unit!514)

(declare-fun e!15644 () Unit!514)

(assert (=> d!4293 (= lt!8986 e!15644)))

(declare-fun c!3232 () Bool)

(assert (=> d!4293 (= c!3232 lt!8988)))

(assert (=> d!4293 (= lt!8988 (containsKey!25 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4293 (= (contains!220 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) lt!8987)))

(declare-fun b!24175 () Bool)

(declare-fun lt!8989 () Unit!514)

(assert (=> b!24175 (= e!15644 lt!8989)))

(assert (=> b!24175 (= lt!8989 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24175 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24176 () Bool)

(declare-fun Unit!552 () Unit!514)

(assert (=> b!24176 (= e!15644 Unit!552)))

(declare-fun b!24177 () Bool)

(assert (=> b!24177 (= e!15643 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!4293 c!3232) b!24175))

(assert (= (and d!4293 (not c!3232)) b!24176))

(assert (= (and d!4293 (not res!14733)) b!24177))

(declare-fun m!18243 () Bool)

(assert (=> d!4293 m!18243))

(declare-fun m!18245 () Bool)

(assert (=> b!24175 m!18245))

(declare-fun m!18247 () Bool)

(assert (=> b!24175 m!18247))

(assert (=> b!24175 m!18247))

(declare-fun m!18249 () Bool)

(assert (=> b!24175 m!18249))

(assert (=> b!24177 m!18247))

(assert (=> b!24177 m!18247))

(assert (=> b!24177 m!18249))

(assert (=> b!23721 d!4293))

(assert (=> b!23721 d!4053))

(assert (=> b!23794 d!4197))

(declare-fun d!4295 () Bool)

(declare-fun res!14738 () Bool)

(declare-fun e!15649 () Bool)

(assert (=> d!4295 (=> res!14738 e!15649)))

(assert (=> d!4295 (= res!14738 (and ((_ is Cons!561) (toList!292 e!15169)) (= (_1!480 (h!1127 (toList!292 e!15169))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!4295 (= (containsKey!25 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) e!15649)))

(declare-fun b!24182 () Bool)

(declare-fun e!15650 () Bool)

(assert (=> b!24182 (= e!15649 e!15650)))

(declare-fun res!14739 () Bool)

(assert (=> b!24182 (=> (not res!14739) (not e!15650))))

(assert (=> b!24182 (= res!14739 (and (or (not ((_ is Cons!561) (toList!292 e!15169))) (bvsle (_1!480 (h!1127 (toList!292 e!15169))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))) ((_ is Cons!561) (toList!292 e!15169)) (bvslt (_1!480 (h!1127 (toList!292 e!15169))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24183 () Bool)

(assert (=> b!24183 (= e!15650 (containsKey!25 (t!3238 (toList!292 e!15169)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4295 (not res!14738)) b!24182))

(assert (= (and b!24182 res!14739) b!24183))

(declare-fun m!18251 () Bool)

(assert (=> b!24183 m!18251))

(assert (=> d!4037 d!4295))

(declare-fun b!24186 () Bool)

(declare-fun res!14741 () Bool)

(declare-fun e!15651 () Bool)

(assert (=> b!24186 (=> (not res!14741) (not e!15651))))

(assert (=> b!24186 (= res!14741 (= (size!707 lt!8162) (bvadd (_size!150 lt!8162) (bvsdiv (bvadd (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4297 () Bool)

(declare-fun res!14742 () Bool)

(assert (=> d!4297 (=> (not res!14742) (not e!15651))))

(assert (=> d!4297 (= res!14742 (validMask!0 (mask!4730 lt!8162)))))

(assert (=> d!4297 (= (simpleValid!19 lt!8162) e!15651)))

(declare-fun b!24184 () Bool)

(declare-fun res!14743 () Bool)

(assert (=> b!24184 (=> (not res!14743) (not e!15651))))

(assert (=> b!24184 (= res!14743 (and (= (size!699 (_values!1729 lt!8162)) (bvadd (mask!4730 lt!8162) #b00000000000000000000000000000001)) (= (size!700 (_keys!3164 lt!8162)) (size!699 (_values!1729 lt!8162))) (bvsge (_size!150 lt!8162) #b00000000000000000000000000000000) (bvsle (_size!150 lt!8162) (bvadd (mask!4730 lt!8162) #b00000000000000000000000000000001))))))

(declare-fun b!24187 () Bool)

(assert (=> b!24187 (= e!15651 (and (bvsge (extraKeys!1641 lt!8162) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 lt!8162) #b00000000000000000000000000000011) (bvsge (_vacant!150 lt!8162) #b00000000000000000000000000000000)))))

(declare-fun b!24185 () Bool)

(declare-fun res!14740 () Bool)

(assert (=> b!24185 (=> (not res!14740) (not e!15651))))

(assert (=> b!24185 (= res!14740 (bvsge (size!707 lt!8162) (_size!150 lt!8162)))))

(assert (= (and d!4297 res!14742) b!24184))

(assert (= (and b!24184 res!14743) b!24185))

(assert (= (and b!24185 res!14740) b!24186))

(assert (= (and b!24186 res!14741) b!24187))

(declare-fun m!18253 () Bool)

(assert (=> b!24186 m!18253))

(assert (=> d!4297 m!17072))

(assert (=> b!24185 m!18253))

(assert (=> d!4059 d!4297))

(assert (=> d!4073 d!4061))

(declare-fun d!4299 () Bool)

(declare-fun e!15662 () Bool)

(assert (=> d!4299 e!15662))

(declare-fun c!3237 () Bool)

(declare-fun lt!8992 () SeekEntryResult!59)

(assert (=> d!4299 (= c!3237 ((_ is MissingZero!59) lt!8992))))

(assert (=> d!4299 (= lt!8992 (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(assert (=> d!4299 true))

(declare-fun _$34!747 () Unit!514)

(assert (=> d!4299 (= (choose!210 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)) _$34!747)))

(declare-fun b!24204 () Bool)

(declare-fun res!14755 () Bool)

(assert (=> b!24204 (= res!14755 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2357 lt!8992)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15661 () Bool)

(assert (=> b!24204 (=> (not res!14755) (not e!15661))))

(declare-fun b!24205 () Bool)

(declare-fun res!14753 () Bool)

(declare-fun e!15663 () Bool)

(assert (=> b!24205 (=> (not res!14753) (not e!15663))))

(declare-fun call!2082 () Bool)

(assert (=> b!24205 (= res!14753 call!2082)))

(declare-fun e!15660 () Bool)

(assert (=> b!24205 (= e!15660 e!15663)))

(declare-fun b!24206 () Bool)

(declare-fun call!2081 () Bool)

(assert (=> b!24206 (= e!15663 (not call!2081))))

(declare-fun bm!2078 () Bool)

(assert (=> bm!2078 (= call!2082 (inRange!0 (ite c!3237 (index!2357 lt!8992) (index!2360 lt!8992)) (mask!4730 lt!8162)))))

(declare-fun b!24207 () Bool)

(declare-fun res!14752 () Bool)

(assert (=> b!24207 (=> (not res!14752) (not e!15663))))

(assert (=> b!24207 (= res!14752 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2360 lt!8992)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24208 () Bool)

(assert (=> b!24208 (= e!15662 e!15660)))

(declare-fun c!3238 () Bool)

(assert (=> b!24208 (= c!3238 ((_ is MissingVacant!59) lt!8992))))

(declare-fun bm!2079 () Bool)

(assert (=> bm!2079 (= call!2081 (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun b!24209 () Bool)

(assert (=> b!24209 (= e!15662 e!15661)))

(declare-fun res!14754 () Bool)

(assert (=> b!24209 (= res!14754 call!2082)))

(assert (=> b!24209 (=> (not res!14754) (not e!15661))))

(declare-fun b!24210 () Bool)

(assert (=> b!24210 (= e!15661 (not call!2081))))

(declare-fun b!24211 () Bool)

(assert (=> b!24211 (= e!15660 ((_ is Undefined!59) lt!8992))))

(assert (= (and d!4299 c!3237) b!24209))

(assert (= (and d!4299 (not c!3237)) b!24208))

(assert (= (and b!24209 res!14754) b!24204))

(assert (= (and b!24204 res!14755) b!24210))

(assert (= (and b!24208 c!3238) b!24205))

(assert (= (and b!24208 (not c!3238)) b!24211))

(assert (= (and b!24205 res!14753) b!24207))

(assert (= (and b!24207 res!14752) b!24206))

(assert (= (or b!24209 b!24205) bm!2078))

(assert (= (or b!24210 b!24206) bm!2079))

(declare-fun m!18255 () Bool)

(assert (=> b!24204 m!18255))

(declare-fun m!18257 () Bool)

(assert (=> bm!2078 m!18257))

(declare-fun m!18259 () Bool)

(assert (=> b!24207 m!18259))

(assert (=> bm!2079 m!16904))

(assert (=> d!4299 m!16872))

(assert (=> d!4073 d!4299))

(assert (=> d!4073 d!4261))

(declare-fun d!4301 () Bool)

(declare-fun e!15664 () Bool)

(assert (=> d!4301 e!15664))

(declare-fun res!14756 () Bool)

(assert (=> d!4301 (=> res!14756 e!15664)))

(declare-fun lt!8994 () Bool)

(assert (=> d!4301 (= res!14756 (not lt!8994))))

(declare-fun lt!8995 () Bool)

(assert (=> d!4301 (= lt!8994 lt!8995)))

(declare-fun lt!8993 () Unit!514)

(declare-fun e!15665 () Unit!514)

(assert (=> d!4301 (= lt!8993 e!15665)))

(declare-fun c!3239 () Bool)

(assert (=> d!4301 (= c!3239 lt!8995)))

(assert (=> d!4301 (= lt!8995 (containsKey!25 (toList!292 lt!8512) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4301 (= (contains!220 lt!8512 #b1000000000000000000000000000000000000000000000000000000000000000) lt!8994)))

(declare-fun b!24212 () Bool)

(declare-fun lt!8996 () Unit!514)

(assert (=> b!24212 (= e!15665 lt!8996)))

(assert (=> b!24212 (= lt!8996 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8512) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24212 (isDefined!23 (getValueByKey!61 (toList!292 lt!8512) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24213 () Bool)

(declare-fun Unit!553 () Unit!514)

(assert (=> b!24213 (= e!15665 Unit!553)))

(declare-fun b!24214 () Bool)

(assert (=> b!24214 (= e!15664 (isDefined!23 (getValueByKey!61 (toList!292 lt!8512) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4301 c!3239) b!24212))

(assert (= (and d!4301 (not c!3239)) b!24213))

(assert (= (and d!4301 (not res!14756)) b!24214))

(declare-fun m!18261 () Bool)

(assert (=> d!4301 m!18261))

(declare-fun m!18263 () Bool)

(assert (=> b!24212 m!18263))

(declare-fun m!18265 () Bool)

(assert (=> b!24212 m!18265))

(assert (=> b!24212 m!18265))

(declare-fun m!18267 () Bool)

(assert (=> b!24212 m!18267))

(assert (=> b!24214 m!18265))

(assert (=> b!24214 m!18265))

(assert (=> b!24214 m!18267))

(assert (=> bm!1983 d!4301))

(declare-fun d!4303 () Bool)

(assert (=> d!4303 (= (apply!29 (+!45 lt!8720 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8723) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8720 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!8723)))))

(declare-fun bs!986 () Bool)

(assert (= bs!986 d!4303))

(declare-fun m!18269 () Bool)

(assert (=> bs!986 m!18269))

(assert (=> bs!986 m!18269))

(declare-fun m!18271 () Bool)

(assert (=> bs!986 m!18271))

(assert (=> b!23784 d!4303))

(declare-fun d!4305 () Bool)

(assert (=> d!4305 (= (apply!29 (+!45 lt!8728 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8732) (apply!29 lt!8728 lt!8732))))

(declare-fun lt!8997 () Unit!514)

(assert (=> d!4305 (= lt!8997 (choose!213 lt!8728 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8732))))

(declare-fun e!15666 () Bool)

(assert (=> d!4305 e!15666))

(declare-fun res!14757 () Bool)

(assert (=> d!4305 (=> (not res!14757) (not e!15666))))

(assert (=> d!4305 (= res!14757 (contains!220 lt!8728 lt!8732))))

(assert (=> d!4305 (= (addApplyDifferent!14 lt!8728 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8732) lt!8997)))

(declare-fun b!24215 () Bool)

(assert (=> b!24215 (= e!15666 (not (= lt!8732 lt!8714)))))

(assert (= (and d!4305 res!14757) b!24215))

(declare-fun m!18273 () Bool)

(assert (=> d!4305 m!18273))

(assert (=> d!4305 m!17545))

(assert (=> d!4305 m!17541))

(declare-fun m!18275 () Bool)

(assert (=> d!4305 m!18275))

(assert (=> d!4305 m!17545))

(assert (=> d!4305 m!17559))

(assert (=> b!23784 d!4305))

(declare-fun d!4307 () Bool)

(assert (=> d!4307 (= (apply!29 lt!8721 lt!8719) (get!391 (getValueByKey!61 (toList!292 lt!8721) lt!8719)))))

(declare-fun bs!987 () Bool)

(assert (= bs!987 d!4307))

(declare-fun m!18277 () Bool)

(assert (=> bs!987 m!18277))

(assert (=> bs!987 m!18277))

(declare-fun m!18279 () Bool)

(assert (=> bs!987 m!18279))

(assert (=> b!23784 d!4307))

(declare-fun d!4309 () Bool)

(assert (=> d!4309 (= (apply!29 lt!8720 lt!8723) (get!391 (getValueByKey!61 (toList!292 lt!8720) lt!8723)))))

(declare-fun bs!988 () Bool)

(assert (= bs!988 d!4309))

(declare-fun m!18281 () Bool)

(assert (=> bs!988 m!18281))

(assert (=> bs!988 m!18281))

(declare-fun m!18283 () Bool)

(assert (=> bs!988 m!18283))

(assert (=> b!23784 d!4309))

(declare-fun d!4311 () Bool)

(assert (=> d!4311 (= (apply!29 lt!8728 lt!8732) (get!391 (getValueByKey!61 (toList!292 lt!8728) lt!8732)))))

(declare-fun bs!989 () Bool)

(assert (= bs!989 d!4311))

(declare-fun m!18285 () Bool)

(assert (=> bs!989 m!18285))

(assert (=> bs!989 m!18285))

(declare-fun m!18287 () Bool)

(assert (=> bs!989 m!18287))

(assert (=> b!23784 d!4311))

(declare-fun d!4313 () Bool)

(assert (=> d!4313 (= (apply!29 (+!45 lt!8728 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8732) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8728 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!8732)))))

(declare-fun bs!990 () Bool)

(assert (= bs!990 d!4313))

(declare-fun m!18289 () Bool)

(assert (=> bs!990 m!18289))

(assert (=> bs!990 m!18289))

(declare-fun m!18291 () Bool)

(assert (=> bs!990 m!18291))

(assert (=> b!23784 d!4313))

(declare-fun d!4315 () Bool)

(declare-fun e!15667 () Bool)

(assert (=> d!4315 e!15667))

(declare-fun res!14758 () Bool)

(assert (=> d!4315 (=> (not res!14758) (not e!15667))))

(declare-fun lt!8998 () ListLongMap!553)

(assert (=> d!4315 (= res!14758 (contains!220 lt!8998 (_1!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9001 () List!565)

(assert (=> d!4315 (= lt!8998 (ListLongMap!554 lt!9001))))

(declare-fun lt!8999 () Unit!514)

(declare-fun lt!9000 () Unit!514)

(assert (=> d!4315 (= lt!8999 lt!9000)))

(assert (=> d!4315 (= (getValueByKey!61 lt!9001 (_1!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4315 (= lt!9000 (lemmaContainsTupThenGetReturnValue!18 lt!9001 (_1!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4315 (= lt!9001 (insertStrictlySorted!18 (toList!292 lt!8721) (_1!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4315 (= (+!45 lt!8721 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8998)))

(declare-fun b!24216 () Bool)

(declare-fun res!14759 () Bool)

(assert (=> b!24216 (=> (not res!14759) (not e!15667))))

(assert (=> b!24216 (= res!14759 (= (getValueByKey!61 (toList!292 lt!8998) (_1!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun b!24217 () Bool)

(assert (=> b!24217 (= e!15667 (contains!221 (toList!292 lt!8998) (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (= (and d!4315 res!14758) b!24216))

(assert (= (and b!24216 res!14759) b!24217))

(declare-fun m!18293 () Bool)

(assert (=> d!4315 m!18293))

(declare-fun m!18295 () Bool)

(assert (=> d!4315 m!18295))

(declare-fun m!18297 () Bool)

(assert (=> d!4315 m!18297))

(declare-fun m!18299 () Bool)

(assert (=> d!4315 m!18299))

(declare-fun m!18301 () Bool)

(assert (=> b!24216 m!18301))

(declare-fun m!18303 () Bool)

(assert (=> b!24217 m!18303))

(assert (=> b!23784 d!4315))

(assert (=> b!23784 d!4275))

(declare-fun d!4317 () Bool)

(assert (=> d!4317 (contains!220 (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8730)))

(declare-fun lt!9002 () Unit!514)

(assert (=> d!4317 (= lt!9002 (choose!214 lt!8718 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8730))))

(assert (=> d!4317 (contains!220 lt!8718 lt!8730)))

(assert (=> d!4317 (= (addStillContains!14 lt!8718 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8730) lt!9002)))

(declare-fun bs!991 () Bool)

(assert (= bs!991 d!4317))

(assert (=> bs!991 m!17537))

(assert (=> bs!991 m!17537))

(assert (=> bs!991 m!17539))

(declare-fun m!18305 () Bool)

(assert (=> bs!991 m!18305))

(declare-fun m!18307 () Bool)

(assert (=> bs!991 m!18307))

(assert (=> b!23784 d!4317))

(declare-fun d!4319 () Bool)

(declare-fun e!15668 () Bool)

(assert (=> d!4319 e!15668))

(declare-fun res!14760 () Bool)

(assert (=> d!4319 (=> (not res!14760) (not e!15668))))

(declare-fun lt!9003 () ListLongMap!553)

(assert (=> d!4319 (= res!14760 (contains!220 lt!9003 (_1!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9006 () List!565)

(assert (=> d!4319 (= lt!9003 (ListLongMap!554 lt!9006))))

(declare-fun lt!9004 () Unit!514)

(declare-fun lt!9005 () Unit!514)

(assert (=> d!4319 (= lt!9004 lt!9005)))

(assert (=> d!4319 (= (getValueByKey!61 lt!9006 (_1!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4319 (= lt!9005 (lemmaContainsTupThenGetReturnValue!18 lt!9006 (_1!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4319 (= lt!9006 (insertStrictlySorted!18 (toList!292 lt!8718) (_1!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4319 (= (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!9003)))

(declare-fun b!24218 () Bool)

(declare-fun res!14761 () Bool)

(assert (=> b!24218 (=> (not res!14761) (not e!15668))))

(assert (=> b!24218 (= res!14761 (= (getValueByKey!61 (toList!292 lt!9003) (_1!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun b!24219 () Bool)

(assert (=> b!24219 (= e!15668 (contains!221 (toList!292 lt!9003) (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (= (and d!4319 res!14760) b!24218))

(assert (= (and b!24218 res!14761) b!24219))

(declare-fun m!18309 () Bool)

(assert (=> d!4319 m!18309))

(declare-fun m!18311 () Bool)

(assert (=> d!4319 m!18311))

(declare-fun m!18313 () Bool)

(assert (=> d!4319 m!18313))

(declare-fun m!18315 () Bool)

(assert (=> d!4319 m!18315))

(declare-fun m!18317 () Bool)

(assert (=> b!24218 m!18317))

(declare-fun m!18319 () Bool)

(assert (=> b!24219 m!18319))

(assert (=> b!23784 d!4319))

(declare-fun d!4321 () Bool)

(declare-fun e!15669 () Bool)

(assert (=> d!4321 e!15669))

(declare-fun res!14762 () Bool)

(assert (=> d!4321 (=> (not res!14762) (not e!15669))))

(declare-fun lt!9007 () ListLongMap!553)

(assert (=> d!4321 (= res!14762 (contains!220 lt!9007 (_1!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9010 () List!565)

(assert (=> d!4321 (= lt!9007 (ListLongMap!554 lt!9010))))

(declare-fun lt!9008 () Unit!514)

(declare-fun lt!9009 () Unit!514)

(assert (=> d!4321 (= lt!9008 lt!9009)))

(assert (=> d!4321 (= (getValueByKey!61 lt!9010 (_1!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4321 (= lt!9009 (lemmaContainsTupThenGetReturnValue!18 lt!9010 (_1!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4321 (= lt!9010 (insertStrictlySorted!18 (toList!292 lt!8720) (_1!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4321 (= (+!45 lt!8720 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!9007)))

(declare-fun b!24220 () Bool)

(declare-fun res!14763 () Bool)

(assert (=> b!24220 (=> (not res!14763) (not e!15669))))

(assert (=> b!24220 (= res!14763 (= (getValueByKey!61 (toList!292 lt!9007) (_1!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun b!24221 () Bool)

(assert (=> b!24221 (= e!15669 (contains!221 (toList!292 lt!9007) (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (= (and d!4321 res!14762) b!24220))

(assert (= (and b!24220 res!14763) b!24221))

(declare-fun m!18321 () Bool)

(assert (=> d!4321 m!18321))

(declare-fun m!18323 () Bool)

(assert (=> d!4321 m!18323))

(declare-fun m!18325 () Bool)

(assert (=> d!4321 m!18325))

(declare-fun m!18327 () Bool)

(assert (=> d!4321 m!18327))

(declare-fun m!18329 () Bool)

(assert (=> b!24220 m!18329))

(declare-fun m!18331 () Bool)

(assert (=> b!24221 m!18331))

(assert (=> b!23784 d!4321))

(declare-fun d!4323 () Bool)

(assert (=> d!4323 (= (apply!29 (+!45 lt!8720 (tuple2!947 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8723) (apply!29 lt!8720 lt!8723))))

(declare-fun lt!9011 () Unit!514)

(assert (=> d!4323 (= lt!9011 (choose!213 lt!8720 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8723))))

(declare-fun e!15670 () Bool)

(assert (=> d!4323 e!15670))

(declare-fun res!14764 () Bool)

(assert (=> d!4323 (=> (not res!14764) (not e!15670))))

(assert (=> d!4323 (= res!14764 (contains!220 lt!8720 lt!8723))))

(assert (=> d!4323 (= (addApplyDifferent!14 lt!8720 lt!8716 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8723) lt!9011)))

(declare-fun b!24222 () Bool)

(assert (=> b!24222 (= e!15670 (not (= lt!8723 lt!8716)))))

(assert (= (and d!4323 res!14764) b!24222))

(declare-fun m!18333 () Bool)

(assert (=> d!4323 m!18333))

(assert (=> d!4323 m!17553))

(assert (=> d!4323 m!17551))

(declare-fun m!18335 () Bool)

(assert (=> d!4323 m!18335))

(assert (=> d!4323 m!17553))

(assert (=> d!4323 m!17561))

(assert (=> b!23784 d!4323))

(declare-fun d!4325 () Bool)

(declare-fun e!15671 () Bool)

(assert (=> d!4325 e!15671))

(declare-fun res!14765 () Bool)

(assert (=> d!4325 (=> (not res!14765) (not e!15671))))

(declare-fun lt!9012 () ListLongMap!553)

(assert (=> d!4325 (= res!14765 (contains!220 lt!9012 (_1!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9015 () List!565)

(assert (=> d!4325 (= lt!9012 (ListLongMap!554 lt!9015))))

(declare-fun lt!9013 () Unit!514)

(declare-fun lt!9014 () Unit!514)

(assert (=> d!4325 (= lt!9013 lt!9014)))

(assert (=> d!4325 (= (getValueByKey!61 lt!9015 (_1!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4325 (= lt!9014 (lemmaContainsTupThenGetReturnValue!18 lt!9015 (_1!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4325 (= lt!9015 (insertStrictlySorted!18 (toList!292 lt!8728) (_1!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4325 (= (+!45 lt!8728 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!9012)))

(declare-fun b!24223 () Bool)

(declare-fun res!14766 () Bool)

(assert (=> b!24223 (=> (not res!14766) (not e!15671))))

(assert (=> b!24223 (= res!14766 (= (getValueByKey!61 (toList!292 lt!9012) (_1!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun b!24224 () Bool)

(assert (=> b!24224 (= e!15671 (contains!221 (toList!292 lt!9012) (tuple2!947 lt!8714 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (= (and d!4325 res!14765) b!24223))

(assert (= (and b!24223 res!14766) b!24224))

(declare-fun m!18337 () Bool)

(assert (=> d!4325 m!18337))

(declare-fun m!18339 () Bool)

(assert (=> d!4325 m!18339))

(declare-fun m!18341 () Bool)

(assert (=> d!4325 m!18341))

(declare-fun m!18343 () Bool)

(assert (=> d!4325 m!18343))

(declare-fun m!18345 () Bool)

(assert (=> b!24223 m!18345))

(declare-fun m!18347 () Bool)

(assert (=> b!24224 m!18347))

(assert (=> b!23784 d!4325))

(declare-fun d!4327 () Bool)

(assert (=> d!4327 (= (apply!29 (+!45 lt!8721 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8719) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8721 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!8719)))))

(declare-fun bs!992 () Bool)

(assert (= bs!992 d!4327))

(declare-fun m!18349 () Bool)

(assert (=> bs!992 m!18349))

(assert (=> bs!992 m!18349))

(declare-fun m!18351 () Bool)

(assert (=> bs!992 m!18351))

(assert (=> b!23784 d!4327))

(declare-fun d!4329 () Bool)

(declare-fun e!15672 () Bool)

(assert (=> d!4329 e!15672))

(declare-fun res!14767 () Bool)

(assert (=> d!4329 (=> res!14767 e!15672)))

(declare-fun lt!9017 () Bool)

(assert (=> d!4329 (= res!14767 (not lt!9017))))

(declare-fun lt!9018 () Bool)

(assert (=> d!4329 (= lt!9017 lt!9018)))

(declare-fun lt!9016 () Unit!514)

(declare-fun e!15673 () Unit!514)

(assert (=> d!4329 (= lt!9016 e!15673)))

(declare-fun c!3240 () Bool)

(assert (=> d!4329 (= c!3240 lt!9018)))

(assert (=> d!4329 (= lt!9018 (containsKey!25 (toList!292 (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!8730))))

(assert (=> d!4329 (= (contains!220 (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8730) lt!9017)))

(declare-fun b!24225 () Bool)

(declare-fun lt!9019 () Unit!514)

(assert (=> b!24225 (= e!15673 lt!9019)))

(assert (=> b!24225 (= lt!9019 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!8730))))

(assert (=> b!24225 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!8730))))

(declare-fun b!24226 () Bool)

(declare-fun Unit!554 () Unit!514)

(assert (=> b!24226 (= e!15673 Unit!554)))

(declare-fun b!24227 () Bool)

(assert (=> b!24227 (= e!15672 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8718 (tuple2!947 lt!8729 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!8730)))))

(assert (= (and d!4329 c!3240) b!24225))

(assert (= (and d!4329 (not c!3240)) b!24226))

(assert (= (and d!4329 (not res!14767)) b!24227))

(declare-fun m!18353 () Bool)

(assert (=> d!4329 m!18353))

(declare-fun m!18355 () Bool)

(assert (=> b!24225 m!18355))

(declare-fun m!18357 () Bool)

(assert (=> b!24225 m!18357))

(assert (=> b!24225 m!18357))

(declare-fun m!18359 () Bool)

(assert (=> b!24225 m!18359))

(assert (=> b!24227 m!18357))

(assert (=> b!24227 m!18357))

(assert (=> b!24227 m!18359))

(assert (=> b!23784 d!4329))

(declare-fun d!4331 () Bool)

(assert (=> d!4331 (= (apply!29 (+!45 lt!8721 (tuple2!947 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8719) (apply!29 lt!8721 lt!8719))))

(declare-fun lt!9020 () Unit!514)

(assert (=> d!4331 (= lt!9020 (choose!213 lt!8721 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8719))))

(declare-fun e!15674 () Bool)

(assert (=> d!4331 e!15674))

(declare-fun res!14768 () Bool)

(assert (=> d!4331 (=> (not res!14768) (not e!15674))))

(assert (=> d!4331 (= res!14768 (contains!220 lt!8721 lt!8719))))

(assert (=> d!4331 (= (addApplyDifferent!14 lt!8721 lt!8724 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!8719) lt!9020)))

(declare-fun b!24228 () Bool)

(assert (=> b!24228 (= e!15674 (not (= lt!8719 lt!8724)))))

(assert (= (and d!4331 res!14768) b!24228))

(declare-fun m!18361 () Bool)

(assert (=> d!4331 m!18361))

(assert (=> d!4331 m!17555))

(assert (=> d!4331 m!17535))

(declare-fun m!18363 () Bool)

(assert (=> d!4331 m!18363))

(assert (=> d!4331 m!17555))

(assert (=> d!4331 m!17557))

(assert (=> b!23784 d!4331))

(declare-fun d!4333 () Bool)

(assert (=> d!4333 (= (validKeyInArray!0 (select (arr!604 lt!8350) lt!8353)) (and (not (= (select (arr!604 lt!8350) lt!8353) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!604 lt!8350) lt!8353) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23845 d!4333))

(declare-fun d!4335 () Bool)

(declare-fun e!15681 () Bool)

(assert (=> d!4335 e!15681))

(declare-fun res!14770 () Bool)

(assert (=> d!4335 (=> (not res!14770) (not e!15681))))

(declare-fun lt!9023 () ListLongMap!553)

(assert (=> d!4335 (= res!14770 (not (contains!220 lt!9023 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15679 () ListLongMap!553)

(assert (=> d!4335 (= lt!9023 e!15679)))

(declare-fun c!3242 () Bool)

(assert (=> d!4335 (= c!3242 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4335 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4335 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9023)))

(declare-fun b!24229 () Bool)

(declare-fun res!14771 () Bool)

(assert (=> b!24229 (=> (not res!14771) (not e!15681))))

(assert (=> b!24229 (= res!14771 (not (contains!220 lt!9023 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24230 () Bool)

(declare-fun e!15678 () Bool)

(declare-fun e!15677 () Bool)

(assert (=> b!24230 (= e!15678 e!15677)))

(declare-fun c!3244 () Bool)

(assert (=> b!24230 (= c!3244 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24231 () Bool)

(assert (=> b!24231 (= e!15677 (= lt!9023 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8162))))))

(declare-fun b!24232 () Bool)

(assert (=> b!24232 (= e!15679 (ListLongMap!554 Nil!562))))

(declare-fun b!24233 () Bool)

(declare-fun e!15676 () ListLongMap!553)

(declare-fun call!2083 () ListLongMap!553)

(assert (=> b!24233 (= e!15676 call!2083)))

(declare-fun bm!2080 () Bool)

(assert (=> bm!2080 (= call!2083 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8162)))))

(declare-fun b!24234 () Bool)

(assert (=> b!24234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> b!24234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 lt!8162))))))

(declare-fun e!15680 () Bool)

(assert (=> b!24234 (= e!15680 (= (apply!29 lt!9023 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24235 () Bool)

(declare-fun e!15675 () Bool)

(assert (=> b!24235 (= e!15675 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24235 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24236 () Bool)

(assert (=> b!24236 (= e!15679 e!15676)))

(declare-fun c!3241 () Bool)

(assert (=> b!24236 (= c!3241 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24237 () Bool)

(assert (=> b!24237 (= e!15678 e!15680)))

(assert (=> b!24237 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun res!14772 () Bool)

(assert (=> b!24237 (= res!14772 (contains!220 lt!9023 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24237 (=> (not res!14772) (not e!15680))))

(declare-fun b!24238 () Bool)

(assert (=> b!24238 (= e!15677 (isEmpty!173 lt!9023))))

(declare-fun b!24239 () Bool)

(declare-fun lt!9026 () Unit!514)

(declare-fun lt!9027 () Unit!514)

(assert (=> b!24239 (= lt!9026 lt!9027)))

(declare-fun lt!9022 () V!1189)

(declare-fun lt!9025 () ListLongMap!553)

(declare-fun lt!9024 () (_ BitVec 64))

(declare-fun lt!9021 () (_ BitVec 64))

(assert (=> b!24239 (not (contains!220 (+!45 lt!9025 (tuple2!947 lt!9021 lt!9022)) lt!9024))))

(assert (=> b!24239 (= lt!9027 (addStillNotContains!2 lt!9025 lt!9021 lt!9022 lt!9024))))

(assert (=> b!24239 (= lt!9024 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24239 (= lt!9022 (get!390 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24239 (= lt!9021 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!24239 (= lt!9025 call!2083)))

(assert (=> b!24239 (= e!15676 (+!45 call!2083 (tuple2!947 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) (get!390 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24240 () Bool)

(assert (=> b!24240 (= e!15681 e!15678)))

(declare-fun c!3243 () Bool)

(assert (=> b!24240 (= c!3243 e!15675)))

(declare-fun res!14769 () Bool)

(assert (=> b!24240 (=> (not res!14769) (not e!15675))))

(assert (=> b!24240 (= res!14769 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (= (and d!4335 c!3242) b!24232))

(assert (= (and d!4335 (not c!3242)) b!24236))

(assert (= (and b!24236 c!3241) b!24239))

(assert (= (and b!24236 (not c!3241)) b!24233))

(assert (= (or b!24239 b!24233) bm!2080))

(assert (= (and d!4335 res!14770) b!24229))

(assert (= (and b!24229 res!14771) b!24240))

(assert (= (and b!24240 res!14769) b!24235))

(assert (= (and b!24240 c!3243) b!24237))

(assert (= (and b!24240 (not c!3243)) b!24230))

(assert (= (and b!24237 res!14772) b!24234))

(assert (= (and b!24230 c!3244) b!24231))

(assert (= (and b!24230 (not c!3244)) b!24238))

(declare-fun b_lambda!1613 () Bool)

(assert (=> (not b_lambda!1613) (not b!24234)))

(assert (=> b!24234 t!3243))

(declare-fun b_and!1517 () Bool)

(assert (= b_and!1515 (and (=> t!3243 result!1103) b_and!1517)))

(declare-fun b_lambda!1615 () Bool)

(assert (=> (not b_lambda!1615) (not b!24239)))

(assert (=> b!24239 t!3243))

(declare-fun b_and!1519 () Bool)

(assert (= b_and!1517 (and (=> t!3243 result!1103) b_and!1519)))

(assert (=> b!24236 m!17154))

(assert (=> b!24236 m!17154))

(assert (=> b!24236 m!17158))

(declare-fun m!18365 () Bool)

(assert (=> b!24238 m!18365))

(declare-fun m!18367 () Bool)

(assert (=> b!24239 m!18367))

(declare-fun m!18369 () Bool)

(assert (=> b!24239 m!18369))

(assert (=> b!24239 m!17505))

(assert (=> b!24239 m!17194))

(assert (=> b!24239 m!17507))

(declare-fun m!18371 () Bool)

(assert (=> b!24239 m!18371))

(assert (=> b!24239 m!17194))

(assert (=> b!24239 m!17505))

(assert (=> b!24239 m!18367))

(declare-fun m!18373 () Bool)

(assert (=> b!24239 m!18373))

(assert (=> b!24239 m!17154))

(assert (=> b!24235 m!17154))

(assert (=> b!24235 m!17154))

(assert (=> b!24235 m!17158))

(declare-fun m!18375 () Bool)

(assert (=> bm!2080 m!18375))

(assert (=> b!24231 m!18375))

(declare-fun m!18377 () Bool)

(assert (=> b!24229 m!18377))

(assert (=> b!24237 m!17154))

(assert (=> b!24237 m!17154))

(declare-fun m!18379 () Bool)

(assert (=> b!24237 m!18379))

(declare-fun m!18381 () Bool)

(assert (=> d!4335 m!18381))

(assert (=> d!4335 m!17072))

(assert (=> b!24234 m!17505))

(assert (=> b!24234 m!17194))

(assert (=> b!24234 m!17507))

(assert (=> b!24234 m!17154))

(declare-fun m!18383 () Bool)

(assert (=> b!24234 m!18383))

(assert (=> b!24234 m!17154))

(assert (=> b!24234 m!17194))

(assert (=> b!24234 m!17505))

(assert (=> bm!2019 d!4335))

(declare-fun d!4337 () Bool)

(declare-fun e!15682 () Bool)

(assert (=> d!4337 e!15682))

(declare-fun res!14773 () Bool)

(assert (=> d!4337 (=> res!14773 e!15682)))

(declare-fun lt!9029 () Bool)

(assert (=> d!4337 (= res!14773 (not lt!9029))))

(declare-fun lt!9030 () Bool)

(assert (=> d!4337 (= lt!9029 lt!9030)))

(declare-fun lt!9028 () Unit!514)

(declare-fun e!15683 () Unit!514)

(assert (=> d!4337 (= lt!9028 e!15683)))

(declare-fun c!3245 () Bool)

(assert (=> d!4337 (= c!3245 lt!9030)))

(assert (=> d!4337 (= lt!9030 (containsKey!25 (toList!292 lt!8538) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4337 (= (contains!220 lt!8538 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9029)))

(declare-fun b!24241 () Bool)

(declare-fun lt!9031 () Unit!514)

(assert (=> b!24241 (= e!15683 lt!9031)))

(assert (=> b!24241 (= lt!9031 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8538) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24241 (isDefined!23 (getValueByKey!61 (toList!292 lt!8538) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24242 () Bool)

(declare-fun Unit!555 () Unit!514)

(assert (=> b!24242 (= e!15683 Unit!555)))

(declare-fun b!24243 () Bool)

(assert (=> b!24243 (= e!15682 (isDefined!23 (getValueByKey!61 (toList!292 lt!8538) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4337 c!3245) b!24241))

(assert (= (and d!4337 (not c!3245)) b!24242))

(assert (= (and d!4337 (not res!14773)) b!24243))

(declare-fun m!18385 () Bool)

(assert (=> d!4337 m!18385))

(declare-fun m!18387 () Bool)

(assert (=> b!24241 m!18387))

(declare-fun m!18389 () Bool)

(assert (=> b!24241 m!18389))

(assert (=> b!24241 m!18389))

(declare-fun m!18391 () Bool)

(assert (=> b!24241 m!18391))

(assert (=> b!24243 m!18389))

(assert (=> b!24243 m!18389))

(assert (=> b!24243 m!18391))

(assert (=> bm!1984 d!4337))

(assert (=> b!23728 d!4081))

(assert (=> d!4075 d!4089))

(assert (=> d!4075 d!4261))

(declare-fun d!4339 () Bool)

(declare-fun e!15684 () Bool)

(assert (=> d!4339 e!15684))

(declare-fun res!14774 () Bool)

(assert (=> d!4339 (=> (not res!14774) (not e!15684))))

(declare-fun lt!9032 () ListLongMap!553)

(assert (=> d!4339 (= res!14774 (contains!220 lt!9032 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!9035 () List!565)

(assert (=> d!4339 (= lt!9032 (ListLongMap!554 lt!9035))))

(declare-fun lt!9033 () Unit!514)

(declare-fun lt!9034 () Unit!514)

(assert (=> d!4339 (= lt!9033 lt!9034)))

(assert (=> d!4339 (= (getValueByKey!61 lt!9035 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4339 (= lt!9034 (lemmaContainsTupThenGetReturnValue!18 lt!9035 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4339 (= lt!9035 (insertStrictlySorted!18 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4339 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9032)))

(declare-fun b!24244 () Bool)

(declare-fun res!14775 () Bool)

(assert (=> b!24244 (=> (not res!14775) (not e!15684))))

(assert (=> b!24244 (= res!14775 (= (getValueByKey!61 (toList!292 lt!9032) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24245 () Bool)

(assert (=> b!24245 (= e!15684 (contains!221 (toList!292 lt!9032) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4339 res!14774) b!24244))

(assert (= (and b!24244 res!14775) b!24245))

(declare-fun m!18393 () Bool)

(assert (=> d!4339 m!18393))

(declare-fun m!18395 () Bool)

(assert (=> d!4339 m!18395))

(declare-fun m!18397 () Bool)

(assert (=> d!4339 m!18397))

(declare-fun m!18399 () Bool)

(assert (=> d!4339 m!18399))

(declare-fun m!18401 () Bool)

(assert (=> b!24244 m!18401))

(declare-fun m!18403 () Bool)

(assert (=> b!24245 m!18403))

(assert (=> d!4075 d!4339))

(declare-fun d!4341 () Bool)

(assert (=> d!4341 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> d!4341 true))

(declare-fun _$8!39 () Unit!514)

(assert (=> d!4341 (= (choose!211 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)) _$8!39)))

(declare-fun bs!993 () Bool)

(assert (= bs!993 d!4341))

(assert (=> bs!993 m!16888))

(assert (=> bs!993 m!16888))

(assert (=> bs!993 m!17369))

(assert (=> bs!993 m!17365))

(assert (=> d!4075 d!4341))

(declare-fun b!24246 () Bool)

(declare-fun e!15689 () ListLongMap!553)

(declare-fun call!2090 () ListLongMap!553)

(assert (=> b!24246 (= e!15689 call!2090)))

(declare-fun b!24247 () Bool)

(declare-fun res!14784 () Bool)

(declare-fun e!15692 () Bool)

(assert (=> b!24247 (=> (not res!14784) (not e!15692))))

(declare-fun e!15687 () Bool)

(assert (=> b!24247 (= res!14784 e!15687)))

(declare-fun c!3246 () Bool)

(assert (=> b!24247 (= c!3246 (not (= (bvand lt!8286 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24248 () Bool)

(declare-fun e!15686 () Bool)

(declare-fun e!15694 () Bool)

(assert (=> b!24248 (= e!15686 e!15694)))

(declare-fun res!14780 () Bool)

(assert (=> b!24248 (=> (not res!14780) (not e!15694))))

(declare-fun lt!9045 () ListLongMap!553)

(assert (=> b!24248 (= res!14780 (contains!220 lt!9045 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24248 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24249 () Bool)

(declare-fun e!15685 () Bool)

(declare-fun e!15693 () Bool)

(assert (=> b!24249 (= e!15685 e!15693)))

(declare-fun res!14783 () Bool)

(declare-fun call!2086 () Bool)

(assert (=> b!24249 (= res!14783 call!2086)))

(assert (=> b!24249 (=> (not res!14783) (not e!15693))))

(declare-fun b!24250 () Bool)

(declare-fun e!15697 () Unit!514)

(declare-fun lt!9036 () Unit!514)

(assert (=> b!24250 (= e!15697 lt!9036)))

(declare-fun lt!9041 () ListLongMap!553)

(assert (=> b!24250 (= lt!9041 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9052 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9052 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9053 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9053 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9056 () Unit!514)

(assert (=> b!24250 (= lt!9056 (addStillContains!14 lt!9041 lt!9052 (zeroValue!1666 lt!8162) lt!9053))))

(assert (=> b!24250 (contains!220 (+!45 lt!9041 (tuple2!947 lt!9052 (zeroValue!1666 lt!8162))) lt!9053)))

(declare-fun lt!9050 () Unit!514)

(assert (=> b!24250 (= lt!9050 lt!9056)))

(declare-fun lt!9043 () ListLongMap!553)

(assert (=> b!24250 (= lt!9043 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9039 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9039 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9046 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9046 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9049 () Unit!514)

(assert (=> b!24250 (= lt!9049 (addApplyDifferent!14 lt!9043 lt!9039 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9046))))

(assert (=> b!24250 (= (apply!29 (+!45 lt!9043 (tuple2!947 lt!9039 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9046) (apply!29 lt!9043 lt!9046))))

(declare-fun lt!9040 () Unit!514)

(assert (=> b!24250 (= lt!9040 lt!9049)))

(declare-fun lt!9044 () ListLongMap!553)

(assert (=> b!24250 (= lt!9044 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9047 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9047 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9042 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9042 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9048 () Unit!514)

(assert (=> b!24250 (= lt!9048 (addApplyDifferent!14 lt!9044 lt!9047 (zeroValue!1666 lt!8162) lt!9042))))

(assert (=> b!24250 (= (apply!29 (+!45 lt!9044 (tuple2!947 lt!9047 (zeroValue!1666 lt!8162))) lt!9042) (apply!29 lt!9044 lt!9042))))

(declare-fun lt!9057 () Unit!514)

(assert (=> b!24250 (= lt!9057 lt!9048)))

(declare-fun lt!9051 () ListLongMap!553)

(assert (=> b!24250 (= lt!9051 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9037 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9037 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9055 () (_ BitVec 64))

(assert (=> b!24250 (= lt!9055 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!24250 (= lt!9036 (addApplyDifferent!14 lt!9051 lt!9037 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9055))))

(assert (=> b!24250 (= (apply!29 (+!45 lt!9051 (tuple2!947 lt!9037 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9055) (apply!29 lt!9051 lt!9055))))

(declare-fun call!2089 () ListLongMap!553)

(declare-fun bm!2082 () Bool)

(assert (=> bm!2082 (= call!2089 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!24251 () Bool)

(declare-fun call!2087 () Bool)

(assert (=> b!24251 (= e!15687 (not call!2087))))

(declare-fun bm!2083 () Bool)

(declare-fun call!2084 () ListLongMap!553)

(declare-fun call!2088 () ListLongMap!553)

(assert (=> bm!2083 (= call!2084 call!2088)))

(declare-fun c!3250 () Bool)

(declare-fun bm!2084 () Bool)

(declare-fun c!3249 () Bool)

(declare-fun call!2085 () ListLongMap!553)

(assert (=> bm!2084 (= call!2088 (+!45 (ite c!3249 call!2089 (ite c!3250 call!2085 call!2090)) (ite (or c!3249 c!3250) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24252 () Bool)

(declare-fun Unit!556 () Unit!514)

(assert (=> b!24252 (= e!15697 Unit!556)))

(declare-fun b!24253 () Bool)

(assert (=> b!24253 (= e!15685 (not call!2086))))

(declare-fun b!24254 () Bool)

(declare-fun c!3247 () Bool)

(assert (=> b!24254 (= c!3247 (and (not (= (bvand lt!8286 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8286 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15695 () ListLongMap!553)

(assert (=> b!24254 (= e!15695 e!15689)))

(declare-fun b!24255 () Bool)

(declare-fun e!15691 () ListLongMap!553)

(assert (=> b!24255 (= e!15691 e!15695)))

(assert (=> b!24255 (= c!3250 (and (not (= (bvand lt!8286 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8286 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2085 () Bool)

(assert (=> bm!2085 (= call!2090 call!2085)))

(declare-fun b!24256 () Bool)

(assert (=> b!24256 (= e!15693 (= (apply!29 lt!9045 #b1000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun bm!2086 () Bool)

(assert (=> bm!2086 (= call!2085 call!2089)))

(declare-fun b!24257 () Bool)

(declare-fun e!15696 () Bool)

(assert (=> b!24257 (= e!15687 e!15696)))

(declare-fun res!14782 () Bool)

(assert (=> b!24257 (= res!14782 call!2087)))

(assert (=> b!24257 (=> (not res!14782) (not e!15696))))

(declare-fun d!4343 () Bool)

(assert (=> d!4343 e!15692))

(declare-fun res!14778 () Bool)

(assert (=> d!4343 (=> (not res!14778) (not e!15692))))

(assert (=> d!4343 (= res!14778 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))))

(declare-fun lt!9054 () ListLongMap!553)

(assert (=> d!4343 (= lt!9045 lt!9054)))

(declare-fun lt!9038 () Unit!514)

(assert (=> d!4343 (= lt!9038 e!15697)))

(declare-fun c!3251 () Bool)

(declare-fun e!15690 () Bool)

(assert (=> d!4343 (= c!3251 e!15690)))

(declare-fun res!14779 () Bool)

(assert (=> d!4343 (=> (not res!14779) (not e!15690))))

(assert (=> d!4343 (= res!14779 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4343 (= lt!9054 e!15691)))

(assert (=> d!4343 (= c!3249 (and (not (= (bvand lt!8286 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8286 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4343 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4343 (= (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8286 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9045)))

(declare-fun bm!2081 () Bool)

(assert (=> bm!2081 (= call!2087 (contains!220 lt!9045 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2087 () Bool)

(assert (=> bm!2087 (= call!2086 (contains!220 lt!9045 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24258 () Bool)

(assert (=> b!24258 (= e!15696 (= (apply!29 lt!9045 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8162)))))

(declare-fun b!24259 () Bool)

(declare-fun res!14777 () Bool)

(assert (=> b!24259 (=> (not res!14777) (not e!15692))))

(assert (=> b!24259 (= res!14777 e!15686)))

(declare-fun res!14776 () Bool)

(assert (=> b!24259 (=> res!14776 e!15686)))

(declare-fun e!15688 () Bool)

(assert (=> b!24259 (= res!14776 (not e!15688))))

(declare-fun res!14781 () Bool)

(assert (=> b!24259 (=> (not res!14781) (not e!15688))))

(assert (=> b!24259 (= res!14781 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24260 () Bool)

(assert (=> b!24260 (= e!15690 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24261 () Bool)

(assert (=> b!24261 (= e!15692 e!15685)))

(declare-fun c!3248 () Bool)

(assert (=> b!24261 (= c!3248 (not (= (bvand lt!8286 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24262 () Bool)

(assert (=> b!24262 (= e!15694 (= (apply!29 lt!9045 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24262 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 lt!8162))))))

(assert (=> b!24262 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24263 () Bool)

(assert (=> b!24263 (= e!15689 call!2084)))

(declare-fun b!24264 () Bool)

(assert (=> b!24264 (= e!15691 (+!45 call!2088 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24265 () Bool)

(assert (=> b!24265 (= e!15695 call!2084)))

(declare-fun b!24266 () Bool)

(assert (=> b!24266 (= e!15688 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4343 c!3249) b!24264))

(assert (= (and d!4343 (not c!3249)) b!24255))

(assert (= (and b!24255 c!3250) b!24265))

(assert (= (and b!24255 (not c!3250)) b!24254))

(assert (= (and b!24254 c!3247) b!24263))

(assert (= (and b!24254 (not c!3247)) b!24246))

(assert (= (or b!24263 b!24246) bm!2085))

(assert (= (or b!24265 bm!2085) bm!2086))

(assert (= (or b!24265 b!24263) bm!2083))

(assert (= (or b!24264 bm!2086) bm!2082))

(assert (= (or b!24264 bm!2083) bm!2084))

(assert (= (and d!4343 res!14779) b!24260))

(assert (= (and d!4343 c!3251) b!24250))

(assert (= (and d!4343 (not c!3251)) b!24252))

(assert (= (and d!4343 res!14778) b!24259))

(assert (= (and b!24259 res!14781) b!24266))

(assert (= (and b!24259 (not res!14776)) b!24248))

(assert (= (and b!24248 res!14780) b!24262))

(assert (= (and b!24259 res!14777) b!24247))

(assert (= (and b!24247 c!3246) b!24257))

(assert (= (and b!24247 (not c!3246)) b!24251))

(assert (= (and b!24257 res!14782) b!24258))

(assert (= (or b!24257 b!24251) bm!2081))

(assert (= (and b!24247 res!14784) b!24261))

(assert (= (and b!24261 c!3248) b!24249))

(assert (= (and b!24261 (not c!3248)) b!24253))

(assert (= (and b!24249 res!14783) b!24256))

(assert (= (or b!24249 b!24253) bm!2087))

(declare-fun b_lambda!1617 () Bool)

(assert (=> (not b_lambda!1617) (not b!24262)))

(assert (=> b!24262 t!3243))

(declare-fun b_and!1521 () Bool)

(assert (= b_and!1519 (and (=> t!3243 result!1103) b_and!1521)))

(declare-fun m!18405 () Bool)

(assert (=> bm!2081 m!18405))

(declare-fun m!18407 () Bool)

(assert (=> b!24256 m!18407))

(declare-fun m!18409 () Bool)

(assert (=> bm!2087 m!18409))

(declare-fun m!18411 () Bool)

(assert (=> bm!2084 m!18411))

(declare-fun m!18413 () Bool)

(assert (=> b!24264 m!18413))

(assert (=> b!24248 m!17154))

(assert (=> b!24248 m!17154))

(declare-fun m!18415 () Bool)

(assert (=> b!24248 m!18415))

(assert (=> b!24266 m!17154))

(assert (=> b!24266 m!17154))

(assert (=> b!24266 m!17158))

(assert (=> b!24260 m!17154))

(assert (=> b!24260 m!17154))

(assert (=> b!24260 m!17158))

(declare-fun m!18417 () Bool)

(assert (=> bm!2082 m!18417))

(declare-fun m!18419 () Bool)

(assert (=> b!24250 m!18419))

(declare-fun m!18421 () Bool)

(assert (=> b!24250 m!18421))

(declare-fun m!18423 () Bool)

(assert (=> b!24250 m!18423))

(declare-fun m!18425 () Bool)

(assert (=> b!24250 m!18425))

(assert (=> b!24250 m!18423))

(declare-fun m!18427 () Bool)

(assert (=> b!24250 m!18427))

(declare-fun m!18429 () Bool)

(assert (=> b!24250 m!18429))

(declare-fun m!18431 () Bool)

(assert (=> b!24250 m!18431))

(assert (=> b!24250 m!18417))

(declare-fun m!18433 () Bool)

(assert (=> b!24250 m!18433))

(declare-fun m!18435 () Bool)

(assert (=> b!24250 m!18435))

(declare-fun m!18437 () Bool)

(assert (=> b!24250 m!18437))

(declare-fun m!18439 () Bool)

(assert (=> b!24250 m!18439))

(declare-fun m!18441 () Bool)

(assert (=> b!24250 m!18441))

(assert (=> b!24250 m!18441))

(declare-fun m!18443 () Bool)

(assert (=> b!24250 m!18443))

(assert (=> b!24250 m!18431))

(declare-fun m!18445 () Bool)

(assert (=> b!24250 m!18445))

(assert (=> b!24250 m!17154))

(assert (=> b!24250 m!18439))

(declare-fun m!18447 () Bool)

(assert (=> b!24250 m!18447))

(declare-fun m!18449 () Bool)

(assert (=> b!24258 m!18449))

(assert (=> b!24262 m!17194))

(assert (=> b!24262 m!17505))

(assert (=> b!24262 m!17194))

(assert (=> b!24262 m!17507))

(assert (=> b!24262 m!17154))

(declare-fun m!18451 () Bool)

(assert (=> b!24262 m!18451))

(assert (=> b!24262 m!17505))

(assert (=> b!24262 m!17154))

(assert (=> d!4343 m!17072))

(assert (=> d!4075 d!4343))

(declare-fun d!4345 () Bool)

(declare-fun e!15698 () Bool)

(assert (=> d!4345 e!15698))

(declare-fun res!14785 () Bool)

(assert (=> d!4345 (=> (not res!14785) (not e!15698))))

(declare-fun lt!9058 () ListLongMap!553)

(assert (=> d!4345 (= res!14785 (contains!220 lt!9058 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!9061 () List!565)

(assert (=> d!4345 (= lt!9058 (ListLongMap!554 lt!9061))))

(declare-fun lt!9059 () Unit!514)

(declare-fun lt!9060 () Unit!514)

(assert (=> d!4345 (= lt!9059 lt!9060)))

(assert (=> d!4345 (= (getValueByKey!61 lt!9061 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4345 (= lt!9060 (lemmaContainsTupThenGetReturnValue!18 lt!9061 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4345 (= lt!9061 (insertStrictlySorted!18 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4345 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9058)))

(declare-fun b!24267 () Bool)

(declare-fun res!14786 () Bool)

(assert (=> b!24267 (=> (not res!14786) (not e!15698))))

(assert (=> b!24267 (= res!14786 (= (getValueByKey!61 (toList!292 lt!9058) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24268 () Bool)

(assert (=> b!24268 (= e!15698 (contains!221 (toList!292 lt!9058) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4345 res!14785) b!24267))

(assert (= (and b!24267 res!14786) b!24268))

(declare-fun m!18453 () Bool)

(assert (=> d!4345 m!18453))

(declare-fun m!18455 () Bool)

(assert (=> d!4345 m!18455))

(declare-fun m!18457 () Bool)

(assert (=> d!4345 m!18457))

(declare-fun m!18459 () Bool)

(assert (=> d!4345 m!18459))

(declare-fun m!18461 () Bool)

(assert (=> b!24267 m!18461))

(declare-fun m!18463 () Bool)

(assert (=> b!24268 m!18463))

(assert (=> b!23559 d!4345))

(assert (=> b!23559 d!4053))

(declare-fun b!24269 () Bool)

(declare-fun e!15703 () ListLongMap!553)

(declare-fun call!2097 () ListLongMap!553)

(assert (=> b!24269 (= e!15703 call!2097)))

(declare-fun b!24270 () Bool)

(declare-fun res!14795 () Bool)

(declare-fun e!15706 () Bool)

(assert (=> b!24270 (=> (not res!14795) (not e!15706))))

(declare-fun e!15701 () Bool)

(assert (=> b!24270 (= res!14795 e!15701)))

(declare-fun c!3252 () Bool)

(assert (=> b!24270 (= c!3252 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24271 () Bool)

(declare-fun e!15700 () Bool)

(declare-fun e!15708 () Bool)

(assert (=> b!24271 (= e!15700 e!15708)))

(declare-fun res!14791 () Bool)

(assert (=> b!24271 (=> (not res!14791) (not e!15708))))

(declare-fun lt!9071 () ListLongMap!553)

(assert (=> b!24271 (= res!14791 (contains!220 lt!9071 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24271 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24272 () Bool)

(declare-fun e!15699 () Bool)

(declare-fun e!15707 () Bool)

(assert (=> b!24272 (= e!15699 e!15707)))

(declare-fun res!14794 () Bool)

(declare-fun call!2093 () Bool)

(assert (=> b!24272 (= res!14794 call!2093)))

(assert (=> b!24272 (=> (not res!14794) (not e!15707))))

(declare-fun b!24273 () Bool)

(declare-fun e!15711 () Unit!514)

(declare-fun lt!9062 () Unit!514)

(assert (=> b!24273 (= e!15711 lt!9062)))

(declare-fun lt!9067 () ListLongMap!553)

(assert (=> b!24273 (= lt!9067 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9078 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9078 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9079 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9079 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9082 () Unit!514)

(assert (=> b!24273 (= lt!9082 (addStillContains!14 lt!9067 lt!9078 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9079))))

(assert (=> b!24273 (contains!220 (+!45 lt!9067 (tuple2!947 lt!9078 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9079)))

(declare-fun lt!9076 () Unit!514)

(assert (=> b!24273 (= lt!9076 lt!9082)))

(declare-fun lt!9069 () ListLongMap!553)

(assert (=> b!24273 (= lt!9069 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9065 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9065 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9072 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9072 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9075 () Unit!514)

(assert (=> b!24273 (= lt!9075 (addApplyDifferent!14 lt!9069 lt!9065 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9072))))

(assert (=> b!24273 (= (apply!29 (+!45 lt!9069 (tuple2!947 lt!9065 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9072) (apply!29 lt!9069 lt!9072))))

(declare-fun lt!9066 () Unit!514)

(assert (=> b!24273 (= lt!9066 lt!9075)))

(declare-fun lt!9070 () ListLongMap!553)

(assert (=> b!24273 (= lt!9070 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9073 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9073 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9068 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9068 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9074 () Unit!514)

(assert (=> b!24273 (= lt!9074 (addApplyDifferent!14 lt!9070 lt!9073 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9068))))

(assert (=> b!24273 (= (apply!29 (+!45 lt!9070 (tuple2!947 lt!9073 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9068) (apply!29 lt!9070 lt!9068))))

(declare-fun lt!9083 () Unit!514)

(assert (=> b!24273 (= lt!9083 lt!9074)))

(declare-fun lt!9077 () ListLongMap!553)

(assert (=> b!24273 (= lt!9077 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9063 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9063 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9081 () (_ BitVec 64))

(assert (=> b!24273 (= lt!9081 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!24273 (= lt!9062 (addApplyDifferent!14 lt!9077 lt!9063 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9081))))

(assert (=> b!24273 (= (apply!29 (+!45 lt!9077 (tuple2!947 lt!9063 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9081) (apply!29 lt!9077 lt!9081))))

(declare-fun bm!2089 () Bool)

(declare-fun call!2096 () ListLongMap!553)

(assert (=> bm!2089 (= call!2096 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24274 () Bool)

(declare-fun call!2094 () Bool)

(assert (=> b!24274 (= e!15701 (not call!2094))))

(declare-fun bm!2090 () Bool)

(declare-fun call!2091 () ListLongMap!553)

(declare-fun call!2095 () ListLongMap!553)

(assert (=> bm!2090 (= call!2091 call!2095)))

(declare-fun bm!2091 () Bool)

(declare-fun c!3255 () Bool)

(declare-fun c!3256 () Bool)

(declare-fun call!2092 () ListLongMap!553)

(assert (=> bm!2091 (= call!2095 (+!45 (ite c!3255 call!2096 (ite c!3256 call!2092 call!2097)) (ite (or c!3255 c!3256) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!24275 () Bool)

(declare-fun Unit!557 () Unit!514)

(assert (=> b!24275 (= e!15711 Unit!557)))

(declare-fun b!24276 () Bool)

(assert (=> b!24276 (= e!15699 (not call!2093))))

(declare-fun b!24277 () Bool)

(declare-fun c!3253 () Bool)

(assert (=> b!24277 (= c!3253 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15709 () ListLongMap!553)

(assert (=> b!24277 (= e!15709 e!15703)))

(declare-fun b!24278 () Bool)

(declare-fun e!15705 () ListLongMap!553)

(assert (=> b!24278 (= e!15705 e!15709)))

(assert (=> b!24278 (= c!3256 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2092 () Bool)

(assert (=> bm!2092 (= call!2097 call!2092)))

(declare-fun b!24279 () Bool)

(assert (=> b!24279 (= e!15707 (= (apply!29 lt!9071 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!2093 () Bool)

(assert (=> bm!2093 (= call!2092 call!2096)))

(declare-fun b!24280 () Bool)

(declare-fun e!15710 () Bool)

(assert (=> b!24280 (= e!15701 e!15710)))

(declare-fun res!14793 () Bool)

(assert (=> b!24280 (= res!14793 call!2094)))

(assert (=> b!24280 (=> (not res!14793) (not e!15710))))

(declare-fun d!4347 () Bool)

(assert (=> d!4347 e!15706))

(declare-fun res!14789 () Bool)

(assert (=> d!4347 (=> (not res!14789) (not e!15706))))

(assert (=> d!4347 (= res!14789 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9080 () ListLongMap!553)

(assert (=> d!4347 (= lt!9071 lt!9080)))

(declare-fun lt!9064 () Unit!514)

(assert (=> d!4347 (= lt!9064 e!15711)))

(declare-fun c!3257 () Bool)

(declare-fun e!15704 () Bool)

(assert (=> d!4347 (= c!3257 e!15704)))

(declare-fun res!14790 () Bool)

(assert (=> d!4347 (=> (not res!14790) (not e!15704))))

(assert (=> d!4347 (= res!14790 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4347 (= lt!9080 e!15705)))

(assert (=> d!4347 (= c!3255 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4347 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4347 (= (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9071)))

(declare-fun bm!2088 () Bool)

(assert (=> bm!2088 (= call!2094 (contains!220 lt!9071 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2094 () Bool)

(assert (=> bm!2094 (= call!2093 (contains!220 lt!9071 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24281 () Bool)

(assert (=> b!24281 (= e!15710 (= (apply!29 lt!9071 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24282 () Bool)

(declare-fun res!14788 () Bool)

(assert (=> b!24282 (=> (not res!14788) (not e!15706))))

(assert (=> b!24282 (= res!14788 e!15700)))

(declare-fun res!14787 () Bool)

(assert (=> b!24282 (=> res!14787 e!15700)))

(declare-fun e!15702 () Bool)

(assert (=> b!24282 (= res!14787 (not e!15702))))

(declare-fun res!14792 () Bool)

(assert (=> b!24282 (=> (not res!14792) (not e!15702))))

(assert (=> b!24282 (= res!14792 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24283 () Bool)

(assert (=> b!24283 (= e!15704 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24284 () Bool)

(assert (=> b!24284 (= e!15706 e!15699)))

(declare-fun c!3254 () Bool)

(assert (=> b!24284 (= c!3254 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24285 () Bool)

(assert (=> b!24285 (= e!15708 (= (apply!29 lt!9071 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24285 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> b!24285 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24286 () Bool)

(assert (=> b!24286 (= e!15703 call!2091)))

(declare-fun b!24287 () Bool)

(assert (=> b!24287 (= e!15705 (+!45 call!2095 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24288 () Bool)

(assert (=> b!24288 (= e!15709 call!2091)))

(declare-fun b!24289 () Bool)

(assert (=> b!24289 (= e!15702 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4347 c!3255) b!24287))

(assert (= (and d!4347 (not c!3255)) b!24278))

(assert (= (and b!24278 c!3256) b!24288))

(assert (= (and b!24278 (not c!3256)) b!24277))

(assert (= (and b!24277 c!3253) b!24286))

(assert (= (and b!24277 (not c!3253)) b!24269))

(assert (= (or b!24286 b!24269) bm!2092))

(assert (= (or b!24288 bm!2092) bm!2093))

(assert (= (or b!24288 b!24286) bm!2090))

(assert (= (or b!24287 bm!2093) bm!2089))

(assert (= (or b!24287 bm!2090) bm!2091))

(assert (= (and d!4347 res!14790) b!24283))

(assert (= (and d!4347 c!3257) b!24273))

(assert (= (and d!4347 (not c!3257)) b!24275))

(assert (= (and d!4347 res!14789) b!24282))

(assert (= (and b!24282 res!14792) b!24289))

(assert (= (and b!24282 (not res!14787)) b!24271))

(assert (= (and b!24271 res!14791) b!24285))

(assert (= (and b!24282 res!14788) b!24270))

(assert (= (and b!24270 c!3252) b!24280))

(assert (= (and b!24270 (not c!3252)) b!24274))

(assert (= (and b!24280 res!14793) b!24281))

(assert (= (or b!24280 b!24274) bm!2088))

(assert (= (and b!24270 res!14795) b!24284))

(assert (= (and b!24284 c!3254) b!24272))

(assert (= (and b!24284 (not c!3254)) b!24276))

(assert (= (and b!24272 res!14794) b!24279))

(assert (= (or b!24272 b!24276) bm!2094))

(declare-fun b_lambda!1619 () Bool)

(assert (=> (not b_lambda!1619) (not b!24285)))

(assert (=> b!24285 t!3241))

(declare-fun b_and!1523 () Bool)

(assert (= b_and!1521 (and (=> t!3241 result!1101) b_and!1523)))

(declare-fun m!18465 () Bool)

(assert (=> bm!2088 m!18465))

(declare-fun m!18467 () Bool)

(assert (=> b!24279 m!18467))

(declare-fun m!18469 () Bool)

(assert (=> bm!2094 m!18469))

(declare-fun m!18471 () Bool)

(assert (=> bm!2091 m!18471))

(declare-fun m!18473 () Bool)

(assert (=> b!24287 m!18473))

(assert (=> b!24271 m!16992))

(assert (=> b!24271 m!16992))

(declare-fun m!18475 () Bool)

(assert (=> b!24271 m!18475))

(assert (=> b!24289 m!16992))

(assert (=> b!24289 m!16992))

(assert (=> b!24289 m!16996))

(assert (=> b!24283 m!16992))

(assert (=> b!24283 m!16992))

(assert (=> b!24283 m!16996))

(declare-fun m!18477 () Bool)

(assert (=> bm!2089 m!18477))

(declare-fun m!18479 () Bool)

(assert (=> b!24273 m!18479))

(declare-fun m!18481 () Bool)

(assert (=> b!24273 m!18481))

(declare-fun m!18483 () Bool)

(assert (=> b!24273 m!18483))

(declare-fun m!18485 () Bool)

(assert (=> b!24273 m!18485))

(assert (=> b!24273 m!18483))

(declare-fun m!18487 () Bool)

(assert (=> b!24273 m!18487))

(declare-fun m!18489 () Bool)

(assert (=> b!24273 m!18489))

(declare-fun m!18491 () Bool)

(assert (=> b!24273 m!18491))

(assert (=> b!24273 m!18477))

(declare-fun m!18493 () Bool)

(assert (=> b!24273 m!18493))

(declare-fun m!18495 () Bool)

(assert (=> b!24273 m!18495))

(declare-fun m!18497 () Bool)

(assert (=> b!24273 m!18497))

(declare-fun m!18499 () Bool)

(assert (=> b!24273 m!18499))

(declare-fun m!18501 () Bool)

(assert (=> b!24273 m!18501))

(assert (=> b!24273 m!18501))

(declare-fun m!18503 () Bool)

(assert (=> b!24273 m!18503))

(assert (=> b!24273 m!18491))

(declare-fun m!18505 () Bool)

(assert (=> b!24273 m!18505))

(assert (=> b!24273 m!16992))

(assert (=> b!24273 m!18499))

(declare-fun m!18507 () Bool)

(assert (=> b!24273 m!18507))

(declare-fun m!18509 () Bool)

(assert (=> b!24281 m!18509))

(assert (=> b!24285 m!17032))

(declare-fun m!18511 () Bool)

(assert (=> b!24285 m!18511))

(assert (=> b!24285 m!17032))

(declare-fun m!18513 () Bool)

(assert (=> b!24285 m!18513))

(assert (=> b!24285 m!16992))

(declare-fun m!18515 () Bool)

(assert (=> b!24285 m!18515))

(assert (=> b!24285 m!18511))

(assert (=> b!24285 m!16992))

(assert (=> d!4347 m!16948))

(assert (=> b!23559 d!4347))

(declare-fun d!4349 () Bool)

(declare-fun e!15712 () Bool)

(assert (=> d!4349 e!15712))

(declare-fun res!14796 () Bool)

(assert (=> d!4349 (=> res!14796 e!15712)))

(declare-fun lt!9085 () Bool)

(assert (=> d!4349 (= res!14796 (not lt!9085))))

(declare-fun lt!9086 () Bool)

(assert (=> d!4349 (= lt!9085 lt!9086)))

(declare-fun lt!9084 () Unit!514)

(declare-fun e!15713 () Unit!514)

(assert (=> d!4349 (= lt!9084 e!15713)))

(declare-fun c!3258 () Bool)

(assert (=> d!4349 (= c!3258 lt!9086)))

(assert (=> d!4349 (= lt!9086 (containsKey!25 (toList!292 lt!8563) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4349 (= (contains!220 lt!8563 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9085)))

(declare-fun b!24290 () Bool)

(declare-fun lt!9087 () Unit!514)

(assert (=> b!24290 (= e!15713 lt!9087)))

(assert (=> b!24290 (= lt!9087 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8563) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24290 (isDefined!23 (getValueByKey!61 (toList!292 lt!8563) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24291 () Bool)

(declare-fun Unit!558 () Unit!514)

(assert (=> b!24291 (= e!15713 Unit!558)))

(declare-fun b!24292 () Bool)

(assert (=> b!24292 (= e!15712 (isDefined!23 (getValueByKey!61 (toList!292 lt!8563) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4349 c!3258) b!24290))

(assert (= (and d!4349 (not c!3258)) b!24291))

(assert (= (and d!4349 (not res!14796)) b!24292))

(declare-fun m!18517 () Bool)

(assert (=> d!4349 m!18517))

(declare-fun m!18519 () Bool)

(assert (=> b!24290 m!18519))

(declare-fun m!18521 () Bool)

(assert (=> b!24290 m!18521))

(assert (=> b!24290 m!18521))

(declare-fun m!18523 () Bool)

(assert (=> b!24290 m!18523))

(assert (=> b!24292 m!18521))

(assert (=> b!24292 m!18521))

(assert (=> b!24292 m!18523))

(assert (=> bm!1991 d!4349))

(declare-fun d!4351 () Bool)

(assert (=> d!4351 (isDefined!23 (getValueByKey!61 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!9090 () Unit!514)

(declare-fun choose!217 (List!565 (_ BitVec 64)) Unit!514)

(assert (=> d!4351 (= lt!9090 (choose!217 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15716 () Bool)

(assert (=> d!4351 e!15716))

(declare-fun res!14799 () Bool)

(assert (=> d!4351 (=> (not res!14799) (not e!15716))))

(assert (=> d!4351 (= res!14799 (isStrictlySorted!168 (toList!292 e!15169)))))

(assert (=> d!4351 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) lt!9090)))

(declare-fun b!24295 () Bool)

(assert (=> b!24295 (= e!15716 (containsKey!25 (toList!292 e!15169) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4351 res!14799) b!24295))

(assert (=> d!4351 m!17108))

(assert (=> d!4351 m!17108))

(assert (=> d!4351 m!17110))

(declare-fun m!18525 () Bool)

(assert (=> d!4351 m!18525))

(declare-fun m!18527 () Bool)

(assert (=> d!4351 m!18527))

(assert (=> b!24295 m!17104))

(assert (=> b!23560 d!4351))

(assert (=> b!23560 d!4199))

(assert (=> b!23560 d!4201))

(declare-fun b!24298 () Bool)

(declare-fun res!14801 () Bool)

(declare-fun e!15717 () Bool)

(assert (=> b!24298 (=> (not res!14801) (not e!15717))))

(assert (=> b!24298 (= res!14801 (= (size!707 (_2!476 lt!8291)) (bvadd (_size!150 (_2!476 lt!8291)) (bvsdiv (bvadd (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4353 () Bool)

(declare-fun res!14802 () Bool)

(assert (=> d!4353 (=> (not res!14802) (not e!15717))))

(assert (=> d!4353 (= res!14802 (validMask!0 (mask!4730 (_2!476 lt!8291))))))

(assert (=> d!4353 (= (simpleValid!19 (_2!476 lt!8291)) e!15717)))

(declare-fun b!24296 () Bool)

(declare-fun res!14803 () Bool)

(assert (=> b!24296 (=> (not res!14803) (not e!15717))))

(assert (=> b!24296 (= res!14803 (and (= (size!699 (_values!1729 (_2!476 lt!8291))) (bvadd (mask!4730 (_2!476 lt!8291)) #b00000000000000000000000000000001)) (= (size!700 (_keys!3164 (_2!476 lt!8291))) (size!699 (_values!1729 (_2!476 lt!8291)))) (bvsge (_size!150 (_2!476 lt!8291)) #b00000000000000000000000000000000) (bvsle (_size!150 (_2!476 lt!8291)) (bvadd (mask!4730 (_2!476 lt!8291)) #b00000000000000000000000000000001))))))

(declare-fun b!24299 () Bool)

(assert (=> b!24299 (= e!15717 (and (bvsge (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000011) (bvsge (_vacant!150 (_2!476 lt!8291)) #b00000000000000000000000000000000)))))

(declare-fun b!24297 () Bool)

(declare-fun res!14800 () Bool)

(assert (=> b!24297 (=> (not res!14800) (not e!15717))))

(assert (=> b!24297 (= res!14800 (bvsge (size!707 (_2!476 lt!8291)) (_size!150 (_2!476 lt!8291))))))

(assert (= (and d!4353 res!14802) b!24296))

(assert (= (and b!24296 res!14803) b!24297))

(assert (= (and b!24297 res!14800) b!24298))

(assert (= (and b!24298 res!14801) b!24299))

(declare-fun m!18529 () Bool)

(assert (=> b!24298 m!18529))

(declare-fun m!18531 () Bool)

(assert (=> d!4353 m!18531))

(assert (=> b!24297 m!18529))

(assert (=> d!4057 d!4353))

(declare-fun d!4355 () Bool)

(declare-fun res!14804 () Bool)

(declare-fun e!15718 () Bool)

(assert (=> d!4355 (=> (not res!14804) (not e!15718))))

(assert (=> d!4355 (= res!14804 (simpleValid!19 (_2!476 lt!8656)))))

(assert (=> d!4355 (= (valid!109 (_2!476 lt!8656)) e!15718)))

(declare-fun b!24300 () Bool)

(declare-fun res!14805 () Bool)

(assert (=> b!24300 (=> (not res!14805) (not e!15718))))

(assert (=> b!24300 (= res!14805 (= (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8656)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8656)))) (_size!150 (_2!476 lt!8656))))))

(declare-fun b!24301 () Bool)

(declare-fun res!14806 () Bool)

(assert (=> b!24301 (=> (not res!14806) (not e!15718))))

(assert (=> b!24301 (= res!14806 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!476 lt!8656)) (mask!4730 (_2!476 lt!8656))))))

(declare-fun b!24302 () Bool)

(assert (=> b!24302 (= e!15718 (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8656)) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4355 res!14804) b!24300))

(assert (= (and b!24300 res!14805) b!24301))

(assert (= (and b!24301 res!14806) b!24302))

(declare-fun m!18533 () Bool)

(assert (=> d!4355 m!18533))

(declare-fun m!18535 () Bool)

(assert (=> b!24300 m!18535))

(declare-fun m!18537 () Bool)

(assert (=> b!24301 m!18537))

(declare-fun m!18539 () Bool)

(assert (=> b!24302 m!18539))

(assert (=> b!23733 d!4355))

(declare-fun d!4357 () Bool)

(assert (=> d!4357 (= (inRange!0 (ite c!3134 (index!2358 lt!8786) (ite c!3136 (index!2357 lt!8777) (index!2360 lt!8777))) (mask!4730 lt!8162)) (and (bvsge (ite c!3134 (index!2358 lt!8786) (ite c!3136 (index!2357 lt!8777) (index!2360 lt!8777))) #b00000000000000000000000000000000) (bvslt (ite c!3134 (index!2358 lt!8786) (ite c!3136 (index!2357 lt!8777) (index!2360 lt!8777))) (bvadd (mask!4730 lt!8162) #b00000000000000000000000000000001))))))

(assert (=> bm!2041 d!4357))

(declare-fun b!24303 () Bool)

(declare-fun e!15720 () Bool)

(assert (=> b!24303 (= e!15720 (contains!222 Nil!563 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(declare-fun b!24304 () Bool)

(declare-fun e!15719 () Bool)

(declare-fun e!15722 () Bool)

(assert (=> b!24304 (= e!15719 e!15722)))

(declare-fun res!14809 () Bool)

(assert (=> b!24304 (=> (not res!14809) (not e!15722))))

(assert (=> b!24304 (= res!14809 (not e!15720))))

(declare-fun res!14808 () Bool)

(assert (=> b!24304 (=> (not res!14808) (not e!15720))))

(assert (=> b!24304 (= res!14808 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(declare-fun b!24306 () Bool)

(declare-fun e!15721 () Bool)

(assert (=> b!24306 (= e!15722 e!15721)))

(declare-fun c!3259 () Bool)

(assert (=> b!24306 (= c!3259 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(declare-fun bm!2095 () Bool)

(declare-fun call!2098 () Bool)

(assert (=> bm!2095 (= call!2098 (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8291)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3259 (Cons!562 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000) Nil!563) Nil!563)))))

(declare-fun b!24307 () Bool)

(assert (=> b!24307 (= e!15721 call!2098)))

(declare-fun b!24305 () Bool)

(assert (=> b!24305 (= e!15721 call!2098)))

(declare-fun d!4359 () Bool)

(declare-fun res!14807 () Bool)

(assert (=> d!4359 (=> res!14807 e!15719)))

(assert (=> d!4359 (= res!14807 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(assert (=> d!4359 (= (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8291)) #b00000000000000000000000000000000 Nil!563) e!15719)))

(assert (= (and d!4359 (not res!14807)) b!24304))

(assert (= (and b!24304 res!14808) b!24303))

(assert (= (and b!24304 res!14809) b!24306))

(assert (= (and b!24306 c!3259) b!24307))

(assert (= (and b!24306 (not c!3259)) b!24305))

(assert (= (or b!24307 b!24305) bm!2095))

(declare-fun m!18541 () Bool)

(assert (=> b!24303 m!18541))

(assert (=> b!24303 m!18541))

(declare-fun m!18543 () Bool)

(assert (=> b!24303 m!18543))

(assert (=> b!24304 m!18541))

(assert (=> b!24304 m!18541))

(declare-fun m!18545 () Bool)

(assert (=> b!24304 m!18545))

(assert (=> b!24306 m!18541))

(assert (=> b!24306 m!18541))

(assert (=> b!24306 m!18545))

(assert (=> bm!2095 m!18541))

(declare-fun m!18547 () Bool)

(assert (=> bm!2095 m!18547))

(assert (=> b!23625 d!4359))

(declare-fun d!4361 () Bool)

(assert (=> d!4361 (contains!220 (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))))

(assert (=> d!4361 true))

(declare-fun _$16!72 () Unit!514)

(assert (=> d!4361 (= (choose!208 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) (defaultEntry!1743 lt!8162)) _$16!72)))

(declare-fun bs!994 () Bool)

(assert (= bs!994 d!4361))

(assert (=> bs!994 m!17074))

(assert (=> bs!994 m!16874))

(assert (=> bs!994 m!17074))

(assert (=> bs!994 m!16874))

(assert (=> bs!994 m!17076))

(assert (=> d!4027 d!4361))

(assert (=> d!4027 d!4261))

(declare-fun d!4363 () Bool)

(declare-fun lt!9091 () (_ BitVec 32))

(assert (=> d!4363 (and (bvsge lt!9091 #b00000000000000000000000000000000) (bvsle lt!9091 (bvsub (size!700 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(declare-fun e!15724 () (_ BitVec 32))

(assert (=> d!4363 (= lt!9091 e!15724)))

(declare-fun c!3261 () Bool)

(assert (=> d!4363 (= c!3261 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))

(assert (=> d!4363 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 lt!8355)) (size!700 (_keys!3164 lt!8355))))))

(assert (=> d!4363 (= (arrayCountValidKeys!0 (_keys!3164 lt!8355) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))) lt!9091)))

(declare-fun bm!2096 () Bool)

(declare-fun call!2099 () (_ BitVec 32))

(assert (=> bm!2096 (= call!2099 (arrayCountValidKeys!0 (_keys!3164 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 lt!8355))))))

(declare-fun b!24308 () Bool)

(declare-fun e!15723 () (_ BitVec 32))

(assert (=> b!24308 (= e!15723 (bvadd #b00000000000000000000000000000001 call!2099))))

(declare-fun b!24309 () Bool)

(assert (=> b!24309 (= e!15723 call!2099)))

(declare-fun b!24310 () Bool)

(assert (=> b!24310 (= e!15724 #b00000000000000000000000000000000)))

(declare-fun b!24311 () Bool)

(assert (=> b!24311 (= e!15724 e!15723)))

(declare-fun c!3260 () Bool)

(assert (=> b!24311 (= c!3260 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(assert (= (and d!4363 c!3261) b!24310))

(assert (= (and d!4363 (not c!3261)) b!24311))

(assert (= (and b!24311 c!3260) b!24308))

(assert (= (and b!24311 (not c!3260)) b!24309))

(assert (= (or b!24308 b!24309) bm!2096))

(declare-fun m!18549 () Bool)

(assert (=> bm!2096 m!18549))

(assert (=> b!24311 m!18051))

(assert (=> b!24311 m!18051))

(assert (=> b!24311 m!18055))

(assert (=> b!23831 d!4363))

(assert (=> b!23622 d!4197))

(declare-fun d!4365 () Bool)

(assert (=> d!4365 (= (isDefined!23 (getValueByKey!61 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!174 (getValueByKey!61 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!995 () Bool)

(assert (= bs!995 d!4365))

(assert (=> bs!995 m!16978))

(declare-fun m!18551 () Bool)

(assert (=> bs!995 m!18551))

(assert (=> b!23464 d!4365))

(declare-fun d!4367 () Bool)

(declare-fun c!3262 () Bool)

(assert (=> d!4367 (= c!3262 (and ((_ is Cons!561) (toList!292 e!15191)) (= (_1!480 (h!1127 (toList!292 e!15191))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15725 () Option!67)

(assert (=> d!4367 (= (getValueByKey!61 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000) e!15725)))

(declare-fun b!24315 () Bool)

(declare-fun e!15726 () Option!67)

(assert (=> b!24315 (= e!15726 None!65)))

(declare-fun b!24314 () Bool)

(assert (=> b!24314 (= e!15726 (getValueByKey!61 (t!3238 (toList!292 e!15191)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24313 () Bool)

(assert (=> b!24313 (= e!15725 e!15726)))

(declare-fun c!3263 () Bool)

(assert (=> b!24313 (= c!3263 (and ((_ is Cons!561) (toList!292 e!15191)) (not (= (_1!480 (h!1127 (toList!292 e!15191))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24312 () Bool)

(assert (=> b!24312 (= e!15725 (Some!66 (_2!480 (h!1127 (toList!292 e!15191)))))))

(assert (= (and d!4367 c!3262) b!24312))

(assert (= (and d!4367 (not c!3262)) b!24313))

(assert (= (and b!24313 c!3263) b!24314))

(assert (= (and b!24313 (not c!3263)) b!24315))

(declare-fun m!18553 () Bool)

(assert (=> b!24314 m!18553))

(assert (=> b!23464 d!4367))

(assert (=> b!23765 d!4251))

(declare-fun d!4369 () Bool)

(declare-fun e!15727 () Bool)

(assert (=> d!4369 e!15727))

(declare-fun res!14810 () Bool)

(assert (=> d!4369 (=> res!14810 e!15727)))

(declare-fun lt!9093 () Bool)

(assert (=> d!4369 (= res!14810 (not lt!9093))))

(declare-fun lt!9094 () Bool)

(assert (=> d!4369 (= lt!9093 lt!9094)))

(declare-fun lt!9092 () Unit!514)

(declare-fun e!15728 () Unit!514)

(assert (=> d!4369 (= lt!9092 e!15728)))

(declare-fun c!3264 () Bool)

(assert (=> d!4369 (= c!3264 lt!9094)))

(assert (=> d!4369 (= lt!9094 (containsKey!25 (toList!292 lt!8563) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4369 (= (contains!220 lt!8563 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9093)))

(declare-fun b!24316 () Bool)

(declare-fun lt!9095 () Unit!514)

(assert (=> b!24316 (= e!15728 lt!9095)))

(assert (=> b!24316 (= lt!9095 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8563) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24316 (isDefined!23 (getValueByKey!61 (toList!292 lt!8563) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24317 () Bool)

(declare-fun Unit!559 () Unit!514)

(assert (=> b!24317 (= e!15728 Unit!559)))

(declare-fun b!24318 () Bool)

(assert (=> b!24318 (= e!15727 (isDefined!23 (getValueByKey!61 (toList!292 lt!8563) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4369 c!3264) b!24316))

(assert (= (and d!4369 (not c!3264)) b!24317))

(assert (= (and d!4369 (not res!14810)) b!24318))

(declare-fun m!18555 () Bool)

(assert (=> d!4369 m!18555))

(declare-fun m!18557 () Bool)

(assert (=> b!24316 m!18557))

(declare-fun m!18559 () Bool)

(assert (=> b!24316 m!18559))

(assert (=> b!24316 m!18559))

(declare-fun m!18561 () Bool)

(assert (=> b!24316 m!18561))

(assert (=> b!24318 m!18559))

(assert (=> b!24318 m!18559))

(assert (=> b!24318 m!18561))

(assert (=> bm!1997 d!4369))

(assert (=> bm!2044 d!4061))

(declare-fun d!4371 () Bool)

(assert (=> d!4371 (= (apply!29 lt!8444 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!292 lt!8444) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))))

(declare-fun bs!996 () Bool)

(assert (= bs!996 d!4371))

(assert (=> bs!996 m!16992))

(declare-fun m!18563 () Bool)

(assert (=> bs!996 m!18563))

(assert (=> bs!996 m!18563))

(declare-fun m!18565 () Bool)

(assert (=> bs!996 m!18565))

(assert (=> b!23523 d!4371))

(declare-fun d!4373 () Bool)

(declare-fun c!3265 () Bool)

(assert (=> d!4373 (= c!3265 ((_ is ValueCellFull!312) (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000)))))

(declare-fun e!15729 () V!1189)

(assert (=> d!4373 (= (get!390 (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15729)))

(declare-fun b!24319 () Bool)

(assert (=> b!24319 (= e!15729 (get!392 (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24320 () Bool)

(assert (=> b!24320 (= e!15729 (get!393 (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4373 c!3265) b!24319))

(assert (= (and d!4373 (not c!3265)) b!24320))

(assert (=> b!24319 m!17034))

(assert (=> b!24319 m!17032))

(declare-fun m!18567 () Bool)

(assert (=> b!24319 m!18567))

(assert (=> b!24320 m!17034))

(assert (=> b!24320 m!17032))

(declare-fun m!18569 () Bool)

(assert (=> b!24320 m!18569))

(assert (=> b!23523 d!4373))

(declare-fun d!4375 () Bool)

(assert (=> d!4375 (= (apply!29 lt!8538 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8538) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!997 () Bool)

(assert (= bs!997 d!4375))

(assert (=> bs!997 m!18389))

(assert (=> bs!997 m!18389))

(declare-fun m!18571 () Bool)

(assert (=> bs!997 m!18571))

(assert (=> b!23614 d!4375))

(declare-fun b!24321 () Bool)

(declare-fun e!15730 () Bool)

(declare-fun call!2100 () Bool)

(assert (=> b!24321 (= e!15730 call!2100)))

(declare-fun b!24322 () Bool)

(declare-fun e!15731 () Bool)

(assert (=> b!24322 (= e!15731 e!15730)))

(declare-fun lt!9096 () (_ BitVec 64))

(assert (=> b!24322 (= lt!9096 (select (arr!604 lt!8350) (bvadd lt!8353 #b00000000000000000000000000000001)))))

(declare-fun lt!9097 () Unit!514)

(assert (=> b!24322 (= lt!9097 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8350 lt!9096 (bvadd lt!8353 #b00000000000000000000000000000001)))))

(assert (=> b!24322 (arrayContainsKey!0 lt!8350 lt!9096 #b00000000000000000000000000000000)))

(declare-fun lt!9098 () Unit!514)

(assert (=> b!24322 (= lt!9098 lt!9097)))

(declare-fun res!14811 () Bool)

(assert (=> b!24322 (= res!14811 (= (seekEntryOrOpen!0 (select (arr!604 lt!8350) (bvadd lt!8353 #b00000000000000000000000000000001)) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (Found!59 (bvadd lt!8353 #b00000000000000000000000000000001))))))

(assert (=> b!24322 (=> (not res!14811) (not e!15730))))

(declare-fun b!24323 () Bool)

(assert (=> b!24323 (= e!15731 call!2100)))

(declare-fun d!4377 () Bool)

(declare-fun res!14812 () Bool)

(declare-fun e!15732 () Bool)

(assert (=> d!4377 (=> res!14812 e!15732)))

(assert (=> d!4377 (= res!14812 (bvsge (bvadd lt!8353 #b00000000000000000000000000000001) (size!700 lt!8350)))))

(assert (=> d!4377 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd lt!8353 #b00000000000000000000000000000001) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) e!15732)))

(declare-fun bm!2097 () Bool)

(assert (=> bm!2097 (= call!2100 (arrayForallSeekEntryOrOpenFound!0 (bvadd lt!8353 #b00000000000000000000000000000001 #b00000000000000000000000000000001) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24324 () Bool)

(assert (=> b!24324 (= e!15732 e!15731)))

(declare-fun c!3266 () Bool)

(assert (=> b!24324 (= c!3266 (validKeyInArray!0 (select (arr!604 lt!8350) (bvadd lt!8353 #b00000000000000000000000000000001))))))

(assert (= (and d!4377 (not res!14812)) b!24324))

(assert (= (and b!24324 c!3266) b!24322))

(assert (= (and b!24324 (not c!3266)) b!24323))

(assert (= (and b!24322 res!14811) b!24321))

(assert (= (or b!24321 b!24323) bm!2097))

(declare-fun m!18573 () Bool)

(assert (=> b!24322 m!18573))

(declare-fun m!18575 () Bool)

(assert (=> b!24322 m!18575))

(declare-fun m!18577 () Bool)

(assert (=> b!24322 m!18577))

(assert (=> b!24322 m!18573))

(assert (=> b!24322 m!16758))

(declare-fun m!18579 () Bool)

(assert (=> b!24322 m!18579))

(assert (=> bm!2097 m!16758))

(declare-fun m!18581 () Bool)

(assert (=> bm!2097 m!18581))

(assert (=> b!24324 m!18573))

(assert (=> b!24324 m!18573))

(declare-fun m!18583 () Bool)

(assert (=> b!24324 m!18583))

(assert (=> bm!2040 d!4377))

(declare-fun d!4379 () Bool)

(assert (=> d!4379 (= (apply!29 (+!45 lt!8700 (tuple2!947 lt!8686 (minValue!1666 lt!8162))) lt!8704) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8700 (tuple2!947 lt!8686 (minValue!1666 lt!8162)))) lt!8704)))))

(declare-fun bs!998 () Bool)

(assert (= bs!998 d!4379))

(declare-fun m!18585 () Bool)

(assert (=> bs!998 m!18585))

(assert (=> bs!998 m!18585))

(declare-fun m!18587 () Bool)

(assert (=> bs!998 m!18587))

(assert (=> b!23755 d!4379))

(assert (=> b!23755 d!4335))

(declare-fun d!4381 () Bool)

(declare-fun e!15733 () Bool)

(assert (=> d!4381 e!15733))

(declare-fun res!14813 () Bool)

(assert (=> d!4381 (=> (not res!14813) (not e!15733))))

(declare-fun lt!9099 () ListLongMap!553)

(assert (=> d!4381 (= res!14813 (contains!220 lt!9099 (_1!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162)))))))

(declare-fun lt!9102 () List!565)

(assert (=> d!4381 (= lt!9099 (ListLongMap!554 lt!9102))))

(declare-fun lt!9100 () Unit!514)

(declare-fun lt!9101 () Unit!514)

(assert (=> d!4381 (= lt!9100 lt!9101)))

(assert (=> d!4381 (= (getValueByKey!61 lt!9102 (_1!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162)))))))

(assert (=> d!4381 (= lt!9101 (lemmaContainsTupThenGetReturnValue!18 lt!9102 (_1!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162)))))))

(assert (=> d!4381 (= lt!9102 (insertStrictlySorted!18 (toList!292 lt!8700) (_1!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162)))))))

(assert (=> d!4381 (= (+!45 lt!8700 (tuple2!947 lt!8686 (minValue!1666 lt!8162))) lt!9099)))

(declare-fun b!24325 () Bool)

(declare-fun res!14814 () Bool)

(assert (=> b!24325 (=> (not res!14814) (not e!15733))))

(assert (=> b!24325 (= res!14814 (= (getValueByKey!61 (toList!292 lt!9099) (_1!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8686 (minValue!1666 lt!8162))))))))

(declare-fun b!24326 () Bool)

(assert (=> b!24326 (= e!15733 (contains!221 (toList!292 lt!9099) (tuple2!947 lt!8686 (minValue!1666 lt!8162))))))

(assert (= (and d!4381 res!14813) b!24325))

(assert (= (and b!24325 res!14814) b!24326))

(declare-fun m!18589 () Bool)

(assert (=> d!4381 m!18589))

(declare-fun m!18591 () Bool)

(assert (=> d!4381 m!18591))

(declare-fun m!18593 () Bool)

(assert (=> d!4381 m!18593))

(declare-fun m!18595 () Bool)

(assert (=> d!4381 m!18595))

(declare-fun m!18597 () Bool)

(assert (=> b!24325 m!18597))

(declare-fun m!18599 () Bool)

(assert (=> b!24326 m!18599))

(assert (=> b!23755 d!4381))

(declare-fun d!4383 () Bool)

(assert (=> d!4383 (= (apply!29 (+!45 lt!8693 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))) lt!8691) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8693 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162)))) lt!8691)))))

(declare-fun bs!999 () Bool)

(assert (= bs!999 d!4383))

(declare-fun m!18601 () Bool)

(assert (=> bs!999 m!18601))

(assert (=> bs!999 m!18601))

(declare-fun m!18603 () Bool)

(assert (=> bs!999 m!18603))

(assert (=> b!23755 d!4383))

(declare-fun d!4385 () Bool)

(declare-fun e!15734 () Bool)

(assert (=> d!4385 e!15734))

(declare-fun res!14815 () Bool)

(assert (=> d!4385 (=> (not res!14815) (not e!15734))))

(declare-fun lt!9103 () ListLongMap!553)

(assert (=> d!4385 (= res!14815 (contains!220 lt!9103 (_1!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162)))))))

(declare-fun lt!9106 () List!565)

(assert (=> d!4385 (= lt!9103 (ListLongMap!554 lt!9106))))

(declare-fun lt!9104 () Unit!514)

(declare-fun lt!9105 () Unit!514)

(assert (=> d!4385 (= lt!9104 lt!9105)))

(assert (=> d!4385 (= (getValueByKey!61 lt!9106 (_1!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4385 (= lt!9105 (lemmaContainsTupThenGetReturnValue!18 lt!9106 (_1!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4385 (= lt!9106 (insertStrictlySorted!18 (toList!292 lt!8693) (_1!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4385 (= (+!45 lt!8693 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))) lt!9103)))

(declare-fun b!24327 () Bool)

(declare-fun res!14816 () Bool)

(assert (=> b!24327 (=> (not res!14816) (not e!15734))))

(assert (=> b!24327 (= res!14816 (= (getValueByKey!61 (toList!292 lt!9103) (_1!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))))))))

(declare-fun b!24328 () Bool)

(assert (=> b!24328 (= e!15734 (contains!221 (toList!292 lt!9103) (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))))))

(assert (= (and d!4385 res!14815) b!24327))

(assert (= (and b!24327 res!14816) b!24328))

(declare-fun m!18605 () Bool)

(assert (=> d!4385 m!18605))

(declare-fun m!18607 () Bool)

(assert (=> d!4385 m!18607))

(declare-fun m!18609 () Bool)

(assert (=> d!4385 m!18609))

(declare-fun m!18611 () Bool)

(assert (=> d!4385 m!18611))

(declare-fun m!18613 () Bool)

(assert (=> b!24327 m!18613))

(declare-fun m!18615 () Bool)

(assert (=> b!24328 m!18615))

(assert (=> b!23755 d!4385))

(declare-fun d!4387 () Bool)

(assert (=> d!4387 (= (apply!29 (+!45 lt!8692 (tuple2!947 lt!8688 (minValue!1666 lt!8162))) lt!8695) (apply!29 lt!8692 lt!8695))))

(declare-fun lt!9107 () Unit!514)

(assert (=> d!4387 (= lt!9107 (choose!213 lt!8692 lt!8688 (minValue!1666 lt!8162) lt!8695))))

(declare-fun e!15735 () Bool)

(assert (=> d!4387 e!15735))

(declare-fun res!14817 () Bool)

(assert (=> d!4387 (=> (not res!14817) (not e!15735))))

(assert (=> d!4387 (= res!14817 (contains!220 lt!8692 lt!8695))))

(assert (=> d!4387 (= (addApplyDifferent!14 lt!8692 lt!8688 (minValue!1666 lt!8162) lt!8695) lt!9107)))

(declare-fun b!24329 () Bool)

(assert (=> b!24329 (= e!15735 (not (= lt!8695 lt!8688)))))

(assert (= (and d!4387 res!14817) b!24329))

(declare-fun m!18617 () Bool)

(assert (=> d!4387 m!18617))

(assert (=> d!4387 m!17493))

(assert (=> d!4387 m!17491))

(declare-fun m!18619 () Bool)

(assert (=> d!4387 m!18619))

(assert (=> d!4387 m!17493))

(assert (=> d!4387 m!17501))

(assert (=> b!23755 d!4387))

(declare-fun d!4389 () Bool)

(declare-fun e!15736 () Bool)

(assert (=> d!4389 e!15736))

(declare-fun res!14818 () Bool)

(assert (=> d!4389 (=> res!14818 e!15736)))

(declare-fun lt!9109 () Bool)

(assert (=> d!4389 (= res!14818 (not lt!9109))))

(declare-fun lt!9110 () Bool)

(assert (=> d!4389 (= lt!9109 lt!9110)))

(declare-fun lt!9108 () Unit!514)

(declare-fun e!15737 () Unit!514)

(assert (=> d!4389 (= lt!9108 e!15737)))

(declare-fun c!3267 () Bool)

(assert (=> d!4389 (= c!3267 lt!9110)))

(assert (=> d!4389 (= lt!9110 (containsKey!25 (toList!292 (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))) lt!8702))))

(assert (=> d!4389 (= (contains!220 (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))) lt!8702) lt!9109)))

(declare-fun b!24330 () Bool)

(declare-fun lt!9111 () Unit!514)

(assert (=> b!24330 (= e!15737 lt!9111)))

(assert (=> b!24330 (= lt!9111 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))) lt!8702))))

(assert (=> b!24330 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))) lt!8702))))

(declare-fun b!24331 () Bool)

(declare-fun Unit!560 () Unit!514)

(assert (=> b!24331 (= e!15737 Unit!560)))

(declare-fun b!24332 () Bool)

(assert (=> b!24332 (= e!15736 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))) lt!8702)))))

(assert (= (and d!4389 c!3267) b!24330))

(assert (= (and d!4389 (not c!3267)) b!24331))

(assert (= (and d!4389 (not res!14818)) b!24332))

(declare-fun m!18621 () Bool)

(assert (=> d!4389 m!18621))

(declare-fun m!18623 () Bool)

(assert (=> b!24330 m!18623))

(declare-fun m!18625 () Bool)

(assert (=> b!24330 m!18625))

(assert (=> b!24330 m!18625))

(declare-fun m!18627 () Bool)

(assert (=> b!24330 m!18627))

(assert (=> b!24332 m!18625))

(assert (=> b!24332 m!18625))

(assert (=> b!24332 m!18627))

(assert (=> b!23755 d!4389))

(declare-fun d!4391 () Bool)

(declare-fun e!15738 () Bool)

(assert (=> d!4391 e!15738))

(declare-fun res!14819 () Bool)

(assert (=> d!4391 (=> (not res!14819) (not e!15738))))

(declare-fun lt!9112 () ListLongMap!553)

(assert (=> d!4391 (= res!14819 (contains!220 lt!9112 (_1!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))))))

(declare-fun lt!9115 () List!565)

(assert (=> d!4391 (= lt!9112 (ListLongMap!554 lt!9115))))

(declare-fun lt!9113 () Unit!514)

(declare-fun lt!9114 () Unit!514)

(assert (=> d!4391 (= lt!9113 lt!9114)))

(assert (=> d!4391 (= (getValueByKey!61 lt!9115 (_1!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4391 (= lt!9114 (lemmaContainsTupThenGetReturnValue!18 lt!9115 (_1!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4391 (= lt!9115 (insertStrictlySorted!18 (toList!292 lt!8690) (_1!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))))))

(assert (=> d!4391 (= (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))) lt!9112)))

(declare-fun b!24333 () Bool)

(declare-fun res!14820 () Bool)

(assert (=> b!24333 (=> (not res!14820) (not e!15738))))

(assert (=> b!24333 (= res!14820 (= (getValueByKey!61 (toList!292 lt!9112) (_1!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))))))))

(declare-fun b!24334 () Bool)

(assert (=> b!24334 (= e!15738 (contains!221 (toList!292 lt!9112) (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))))))

(assert (= (and d!4391 res!14819) b!24333))

(assert (= (and b!24333 res!14820) b!24334))

(declare-fun m!18629 () Bool)

(assert (=> d!4391 m!18629))

(declare-fun m!18631 () Bool)

(assert (=> d!4391 m!18631))

(declare-fun m!18633 () Bool)

(assert (=> d!4391 m!18633))

(declare-fun m!18635 () Bool)

(assert (=> d!4391 m!18635))

(declare-fun m!18637 () Bool)

(assert (=> b!24333 m!18637))

(declare-fun m!18639 () Bool)

(assert (=> b!24334 m!18639))

(assert (=> b!23755 d!4391))

(declare-fun d!4393 () Bool)

(assert (=> d!4393 (= (apply!29 (+!45 lt!8692 (tuple2!947 lt!8688 (minValue!1666 lt!8162))) lt!8695) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8692 (tuple2!947 lt!8688 (minValue!1666 lt!8162)))) lt!8695)))))

(declare-fun bs!1000 () Bool)

(assert (= bs!1000 d!4393))

(declare-fun m!18641 () Bool)

(assert (=> bs!1000 m!18641))

(assert (=> bs!1000 m!18641))

(declare-fun m!18643 () Bool)

(assert (=> bs!1000 m!18643))

(assert (=> b!23755 d!4393))

(declare-fun d!4395 () Bool)

(assert (=> d!4395 (= (apply!29 lt!8693 lt!8691) (get!391 (getValueByKey!61 (toList!292 lt!8693) lt!8691)))))

(declare-fun bs!1001 () Bool)

(assert (= bs!1001 d!4395))

(declare-fun m!18645 () Bool)

(assert (=> bs!1001 m!18645))

(assert (=> bs!1001 m!18645))

(declare-fun m!18647 () Bool)

(assert (=> bs!1001 m!18647))

(assert (=> b!23755 d!4395))

(declare-fun d!4397 () Bool)

(assert (=> d!4397 (= (apply!29 (+!45 lt!8700 (tuple2!947 lt!8686 (minValue!1666 lt!8162))) lt!8704) (apply!29 lt!8700 lt!8704))))

(declare-fun lt!9116 () Unit!514)

(assert (=> d!4397 (= lt!9116 (choose!213 lt!8700 lt!8686 (minValue!1666 lt!8162) lt!8704))))

(declare-fun e!15739 () Bool)

(assert (=> d!4397 e!15739))

(declare-fun res!14821 () Bool)

(assert (=> d!4397 (=> (not res!14821) (not e!15739))))

(assert (=> d!4397 (= res!14821 (contains!220 lt!8700 lt!8704))))

(assert (=> d!4397 (= (addApplyDifferent!14 lt!8700 lt!8686 (minValue!1666 lt!8162) lt!8704) lt!9116)))

(declare-fun b!24335 () Bool)

(assert (=> b!24335 (= e!15739 (not (= lt!8704 lt!8686)))))

(assert (= (and d!4397 res!14821) b!24335))

(declare-fun m!18649 () Bool)

(assert (=> d!4397 m!18649))

(assert (=> d!4397 m!17485))

(assert (=> d!4397 m!17481))

(declare-fun m!18651 () Bool)

(assert (=> d!4397 m!18651))

(assert (=> d!4397 m!17485))

(assert (=> d!4397 m!17499))

(assert (=> b!23755 d!4397))

(declare-fun d!4399 () Bool)

(assert (=> d!4399 (= (apply!29 lt!8700 lt!8704) (get!391 (getValueByKey!61 (toList!292 lt!8700) lt!8704)))))

(declare-fun bs!1002 () Bool)

(assert (= bs!1002 d!4399))

(declare-fun m!18653 () Bool)

(assert (=> bs!1002 m!18653))

(assert (=> bs!1002 m!18653))

(declare-fun m!18655 () Bool)

(assert (=> bs!1002 m!18655))

(assert (=> b!23755 d!4399))

(declare-fun d!4401 () Bool)

(assert (=> d!4401 (contains!220 (+!45 lt!8690 (tuple2!947 lt!8701 (zeroValue!1666 lt!8162))) lt!8702)))

(declare-fun lt!9117 () Unit!514)

(assert (=> d!4401 (= lt!9117 (choose!214 lt!8690 lt!8701 (zeroValue!1666 lt!8162) lt!8702))))

(assert (=> d!4401 (contains!220 lt!8690 lt!8702)))

(assert (=> d!4401 (= (addStillContains!14 lt!8690 lt!8701 (zeroValue!1666 lt!8162) lt!8702) lt!9117)))

(declare-fun bs!1003 () Bool)

(assert (= bs!1003 d!4401))

(assert (=> bs!1003 m!17477))

(assert (=> bs!1003 m!17477))

(assert (=> bs!1003 m!17479))

(declare-fun m!18657 () Bool)

(assert (=> bs!1003 m!18657))

(declare-fun m!18659 () Bool)

(assert (=> bs!1003 m!18659))

(assert (=> b!23755 d!4401))

(declare-fun d!4403 () Bool)

(assert (=> d!4403 (= (apply!29 (+!45 lt!8693 (tuple2!947 lt!8696 (zeroValue!1666 lt!8162))) lt!8691) (apply!29 lt!8693 lt!8691))))

(declare-fun lt!9118 () Unit!514)

(assert (=> d!4403 (= lt!9118 (choose!213 lt!8693 lt!8696 (zeroValue!1666 lt!8162) lt!8691))))

(declare-fun e!15740 () Bool)

(assert (=> d!4403 e!15740))

(declare-fun res!14822 () Bool)

(assert (=> d!4403 (=> (not res!14822) (not e!15740))))

(assert (=> d!4403 (= res!14822 (contains!220 lt!8693 lt!8691))))

(assert (=> d!4403 (= (addApplyDifferent!14 lt!8693 lt!8696 (zeroValue!1666 lt!8162) lt!8691) lt!9118)))

(declare-fun b!24336 () Bool)

(assert (=> b!24336 (= e!15740 (not (= lt!8691 lt!8696)))))

(assert (= (and d!4403 res!14822) b!24336))

(declare-fun m!18661 () Bool)

(assert (=> d!4403 m!18661))

(assert (=> d!4403 m!17495))

(assert (=> d!4403 m!17475))

(declare-fun m!18663 () Bool)

(assert (=> d!4403 m!18663))

(assert (=> d!4403 m!17495))

(assert (=> d!4403 m!17497))

(assert (=> b!23755 d!4403))

(declare-fun d!4405 () Bool)

(declare-fun e!15741 () Bool)

(assert (=> d!4405 e!15741))

(declare-fun res!14823 () Bool)

(assert (=> d!4405 (=> (not res!14823) (not e!15741))))

(declare-fun lt!9119 () ListLongMap!553)

(assert (=> d!4405 (= res!14823 (contains!220 lt!9119 (_1!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162)))))))

(declare-fun lt!9122 () List!565)

(assert (=> d!4405 (= lt!9119 (ListLongMap!554 lt!9122))))

(declare-fun lt!9120 () Unit!514)

(declare-fun lt!9121 () Unit!514)

(assert (=> d!4405 (= lt!9120 lt!9121)))

(assert (=> d!4405 (= (getValueByKey!61 lt!9122 (_1!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162)))))))

(assert (=> d!4405 (= lt!9121 (lemmaContainsTupThenGetReturnValue!18 lt!9122 (_1!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162)))))))

(assert (=> d!4405 (= lt!9122 (insertStrictlySorted!18 (toList!292 lt!8692) (_1!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162)))))))

(assert (=> d!4405 (= (+!45 lt!8692 (tuple2!947 lt!8688 (minValue!1666 lt!8162))) lt!9119)))

(declare-fun b!24337 () Bool)

(declare-fun res!14824 () Bool)

(assert (=> b!24337 (=> (not res!14824) (not e!15741))))

(assert (=> b!24337 (= res!14824 (= (getValueByKey!61 (toList!292 lt!9119) (_1!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 lt!8688 (minValue!1666 lt!8162))))))))

(declare-fun b!24338 () Bool)

(assert (=> b!24338 (= e!15741 (contains!221 (toList!292 lt!9119) (tuple2!947 lt!8688 (minValue!1666 lt!8162))))))

(assert (= (and d!4405 res!14823) b!24337))

(assert (= (and b!24337 res!14824) b!24338))

(declare-fun m!18665 () Bool)

(assert (=> d!4405 m!18665))

(declare-fun m!18667 () Bool)

(assert (=> d!4405 m!18667))

(declare-fun m!18669 () Bool)

(assert (=> d!4405 m!18669))

(declare-fun m!18671 () Bool)

(assert (=> d!4405 m!18671))

(declare-fun m!18673 () Bool)

(assert (=> b!24337 m!18673))

(declare-fun m!18675 () Bool)

(assert (=> b!24338 m!18675))

(assert (=> b!23755 d!4405))

(declare-fun d!4407 () Bool)

(assert (=> d!4407 (= (apply!29 lt!8692 lt!8695) (get!391 (getValueByKey!61 (toList!292 lt!8692) lt!8695)))))

(declare-fun bs!1004 () Bool)

(assert (= bs!1004 d!4407))

(declare-fun m!18677 () Bool)

(assert (=> bs!1004 m!18677))

(assert (=> bs!1004 m!18677))

(declare-fun m!18679 () Bool)

(assert (=> bs!1004 m!18679))

(assert (=> b!23755 d!4407))

(declare-fun d!4409 () Bool)

(declare-fun e!15742 () Bool)

(assert (=> d!4409 e!15742))

(declare-fun res!14825 () Bool)

(assert (=> d!4409 (=> res!14825 e!15742)))

(declare-fun lt!9124 () Bool)

(assert (=> d!4409 (= res!14825 (not lt!9124))))

(declare-fun lt!9125 () Bool)

(assert (=> d!4409 (= lt!9124 lt!9125)))

(declare-fun lt!9123 () Unit!514)

(declare-fun e!15743 () Unit!514)

(assert (=> d!4409 (= lt!9123 e!15743)))

(declare-fun c!3268 () Bool)

(assert (=> d!4409 (= c!3268 lt!9125)))

(assert (=> d!4409 (= lt!9125 (containsKey!25 (toList!292 lt!8563) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> d!4409 (= (contains!220 lt!8563 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) lt!9124)))

(declare-fun b!24339 () Bool)

(declare-fun lt!9126 () Unit!514)

(assert (=> b!24339 (= e!15743 lt!9126)))

(assert (=> b!24339 (= lt!9126 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8563) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24339 (isDefined!23 (getValueByKey!61 (toList!292 lt!8563) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24340 () Bool)

(declare-fun Unit!561 () Unit!514)

(assert (=> b!24340 (= e!15743 Unit!561)))

(declare-fun b!24341 () Bool)

(assert (=> b!24341 (= e!15742 (isDefined!23 (getValueByKey!61 (toList!292 lt!8563) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))))

(assert (= (and d!4409 c!3268) b!24339))

(assert (= (and d!4409 (not c!3268)) b!24340))

(assert (= (and d!4409 (not res!14825)) b!24341))

(assert (=> d!4409 m!17154))

(declare-fun m!18681 () Bool)

(assert (=> d!4409 m!18681))

(assert (=> b!24339 m!17154))

(declare-fun m!18683 () Bool)

(assert (=> b!24339 m!18683))

(assert (=> b!24339 m!17154))

(declare-fun m!18685 () Bool)

(assert (=> b!24339 m!18685))

(assert (=> b!24339 m!18685))

(declare-fun m!18687 () Bool)

(assert (=> b!24339 m!18687))

(assert (=> b!24341 m!17154))

(assert (=> b!24341 m!18685))

(assert (=> b!24341 m!18685))

(assert (=> b!24341 m!18687))

(assert (=> b!23637 d!4409))

(declare-fun d!4411 () Bool)

(assert (=> d!4411 (= (apply!29 lt!8563 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8563) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1005 () Bool)

(assert (= bs!1005 d!4411))

(assert (=> bs!1005 m!18521))

(assert (=> bs!1005 m!18521))

(declare-fun m!18689 () Bool)

(assert (=> bs!1005 m!18689))

(assert (=> b!23647 d!4411))

(assert (=> b!23815 d!4279))

(assert (=> b!23655 d!4251))

(declare-fun d!4413 () Bool)

(assert (=> d!4413 (= (apply!29 lt!8444 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8444) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1006 () Bool)

(assert (= bs!1006 d!4413))

(assert (=> bs!1006 m!17699))

(assert (=> bs!1006 m!17699))

(declare-fun m!18691 () Bool)

(assert (=> bs!1006 m!18691))

(assert (=> b!23517 d!4413))

(declare-fun b!24342 () Bool)

(declare-fun e!15745 () Bool)

(assert (=> b!24342 (= e!15745 (contains!222 Nil!563 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24343 () Bool)

(declare-fun e!15744 () Bool)

(declare-fun e!15747 () Bool)

(assert (=> b!24343 (= e!15744 e!15747)))

(declare-fun res!14828 () Bool)

(assert (=> b!24343 (=> (not res!14828) (not e!15747))))

(assert (=> b!24343 (= res!14828 (not e!15745))))

(declare-fun res!14827 () Bool)

(assert (=> b!24343 (=> (not res!14827) (not e!15745))))

(assert (=> b!24343 (= res!14827 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24345 () Bool)

(declare-fun e!15746 () Bool)

(assert (=> b!24345 (= e!15747 e!15746)))

(declare-fun c!3269 () Bool)

(assert (=> b!24345 (= c!3269 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun bm!2098 () Bool)

(declare-fun call!2101 () Bool)

(assert (=> bm!2098 (= call!2101 (arrayNoDuplicates!0 (_keys!3164 lt!8162) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3269 (Cons!562 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) Nil!563) Nil!563)))))

(declare-fun b!24346 () Bool)

(assert (=> b!24346 (= e!15746 call!2101)))

(declare-fun b!24344 () Bool)

(assert (=> b!24344 (= e!15746 call!2101)))

(declare-fun d!4415 () Bool)

(declare-fun res!14826 () Bool)

(assert (=> d!4415 (=> res!14826 e!15744)))

(assert (=> d!4415 (= res!14826 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4415 (= (arrayNoDuplicates!0 (_keys!3164 lt!8162) #b00000000000000000000000000000000 Nil!563) e!15744)))

(assert (= (and d!4415 (not res!14826)) b!24343))

(assert (= (and b!24343 res!14827) b!24342))

(assert (= (and b!24343 res!14828) b!24345))

(assert (= (and b!24345 c!3269) b!24346))

(assert (= (and b!24345 (not c!3269)) b!24344))

(assert (= (or b!24346 b!24344) bm!2098))

(assert (=> b!24342 m!17154))

(assert (=> b!24342 m!17154))

(declare-fun m!18693 () Bool)

(assert (=> b!24342 m!18693))

(assert (=> b!24343 m!17154))

(assert (=> b!24343 m!17154))

(assert (=> b!24343 m!17158))

(assert (=> b!24345 m!17154))

(assert (=> b!24345 m!17154))

(assert (=> b!24345 m!17158))

(assert (=> bm!2098 m!17154))

(declare-fun m!18695 () Bool)

(assert (=> bm!2098 m!18695))

(assert (=> b!23628 d!4415))

(declare-fun d!4417 () Bool)

(declare-fun e!15748 () Bool)

(assert (=> d!4417 e!15748))

(declare-fun res!14829 () Bool)

(assert (=> d!4417 (=> (not res!14829) (not e!15748))))

(declare-fun lt!9127 () ListLongMap!553)

(assert (=> d!4417 (= res!14829 (contains!220 lt!9127 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(declare-fun lt!9130 () List!565)

(assert (=> d!4417 (= lt!9127 (ListLongMap!554 lt!9130))))

(declare-fun lt!9128 () Unit!514)

(declare-fun lt!9129 () Unit!514)

(assert (=> d!4417 (= lt!9128 lt!9129)))

(assert (=> d!4417 (= (getValueByKey!61 lt!9130 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4417 (= lt!9129 (lemmaContainsTupThenGetReturnValue!18 lt!9130 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4417 (= lt!9130 (insertStrictlySorted!18 (toList!292 call!1984) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4417 (= (+!45 call!1984 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!9127)))

(declare-fun b!24347 () Bool)

(declare-fun res!14830 () Bool)

(assert (=> b!24347 (=> (not res!14830) (not e!15748))))

(assert (=> b!24347 (= res!14830 (= (getValueByKey!61 (toList!292 lt!9127) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))))

(declare-fun b!24348 () Bool)

(assert (=> b!24348 (= e!15748 (contains!221 (toList!292 lt!9127) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))

(assert (= (and d!4417 res!14829) b!24347))

(assert (= (and b!24347 res!14830) b!24348))

(declare-fun m!18697 () Bool)

(assert (=> d!4417 m!18697))

(declare-fun m!18699 () Bool)

(assert (=> d!4417 m!18699))

(declare-fun m!18701 () Bool)

(assert (=> d!4417 m!18701))

(declare-fun m!18703 () Bool)

(assert (=> d!4417 m!18703))

(declare-fun m!18705 () Bool)

(assert (=> b!24347 m!18705))

(declare-fun m!18707 () Bool)

(assert (=> b!24348 m!18707))

(assert (=> b!23594 d!4417))

(declare-fun d!4419 () Bool)

(assert (=> d!4419 (= (isDefined!23 (getValueByKey!61 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))) (not (isEmpty!174 (getValueByKey!61 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))))

(declare-fun bs!1007 () Bool)

(assert (= bs!1007 d!4419))

(assert (=> bs!1007 m!17088))

(declare-fun m!18709 () Bool)

(assert (=> bs!1007 m!18709))

(assert (=> b!23557 d!4419))

(declare-fun d!4421 () Bool)

(declare-fun c!3270 () Bool)

(assert (=> d!4421 (= c!3270 (and ((_ is Cons!561) (toList!292 call!1922)) (= (_1!480 (h!1127 (toList!292 call!1922))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))))))

(declare-fun e!15749 () Option!67)

(assert (=> d!4421 (= (getValueByKey!61 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))) e!15749)))

(declare-fun b!24352 () Bool)

(declare-fun e!15750 () Option!67)

(assert (=> b!24352 (= e!15750 None!65)))

(declare-fun b!24351 () Bool)

(assert (=> b!24351 (= e!15750 (getValueByKey!61 (t!3238 (toList!292 call!1922)) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(declare-fun b!24350 () Bool)

(assert (=> b!24350 (= e!15749 e!15750)))

(declare-fun c!3271 () Bool)

(assert (=> b!24350 (= c!3271 (and ((_ is Cons!561) (toList!292 call!1922)) (not (= (_1!480 (h!1127 (toList!292 call!1922))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))))

(declare-fun b!24349 () Bool)

(assert (=> b!24349 (= e!15749 (Some!66 (_2!480 (h!1127 (toList!292 call!1922)))))))

(assert (= (and d!4421 c!3270) b!24349))

(assert (= (and d!4421 (not c!3270)) b!24350))

(assert (= (and b!24350 c!3271) b!24351))

(assert (= (and b!24350 (not c!3271)) b!24352))

(assert (=> b!24351 m!16814))

(declare-fun m!18711 () Bool)

(assert (=> b!24351 m!18711))

(assert (=> b!23557 d!4421))

(declare-fun d!4423 () Bool)

(assert (=> d!4423 (= (isDefined!23 (getValueByKey!61 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))) (not (isEmpty!174 (getValueByKey!61 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bs!1008 () Bool)

(assert (= bs!1008 d!4423))

(assert (=> bs!1008 m!17575))

(declare-fun m!18713 () Bool)

(assert (=> bs!1008 m!18713))

(assert (=> b!23803 d!4423))

(declare-fun d!4425 () Bool)

(declare-fun c!3272 () Bool)

(assert (=> d!4425 (= c!3272 (and ((_ is Cons!561) (toList!292 call!1927)) (= (_1!480 (h!1127 (toList!292 call!1927))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!15751 () Option!67)

(assert (=> d!4425 (= (getValueByKey!61 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) e!15751)))

(declare-fun b!24356 () Bool)

(declare-fun e!15752 () Option!67)

(assert (=> b!24356 (= e!15752 None!65)))

(declare-fun b!24355 () Bool)

(assert (=> b!24355 (= e!15752 (getValueByKey!61 (t!3238 (toList!292 call!1927)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24354 () Bool)

(assert (=> b!24354 (= e!15751 e!15752)))

(declare-fun c!3273 () Bool)

(assert (=> b!24354 (= c!3273 (and ((_ is Cons!561) (toList!292 call!1927)) (not (= (_1!480 (h!1127 (toList!292 call!1927))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!24353 () Bool)

(assert (=> b!24353 (= e!15751 (Some!66 (_2!480 (h!1127 (toList!292 call!1927)))))))

(assert (= (and d!4425 c!3272) b!24353))

(assert (= (and d!4425 (not c!3272)) b!24354))

(assert (= (and b!24354 c!3273) b!24355))

(assert (= (and b!24354 (not c!3273)) b!24356))

(declare-fun m!18715 () Bool)

(assert (=> b!24355 m!18715))

(assert (=> b!23803 d!4425))

(assert (=> d!4095 d!4061))

(declare-fun d!4427 () Bool)

(declare-fun e!15755 () Bool)

(assert (=> d!4427 e!15755))

(declare-fun res!14835 () Bool)

(assert (=> d!4427 (=> (not res!14835) (not e!15755))))

(declare-fun lt!9133 () SeekEntryResult!59)

(assert (=> d!4427 (= res!14835 ((_ is Found!59) lt!9133))))

(assert (=> d!4427 (= lt!9133 (seekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(assert (=> d!4427 true))

(declare-fun _$33!35 () Unit!514)

(assert (=> d!4427 (= (choose!212 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 lt!8162)) _$33!35)))

(declare-fun b!24361 () Bool)

(declare-fun res!14836 () Bool)

(assert (=> b!24361 (=> (not res!14836) (not e!15755))))

(assert (=> b!24361 (= res!14836 (inRange!0 (index!2358 lt!9133) (mask!4730 lt!8162)))))

(declare-fun b!24362 () Bool)

(assert (=> b!24362 (= e!15755 (= (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!9133)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4427 res!14835) b!24361))

(assert (= (and b!24361 res!14836) b!24362))

(assert (=> d!4427 m!16872))

(declare-fun m!18717 () Bool)

(assert (=> b!24361 m!18717))

(declare-fun m!18719 () Bool)

(assert (=> b!24362 m!18719))

(assert (=> d!4095 d!4427))

(assert (=> d!4095 d!4261))

(declare-fun d!4429 () Bool)

(declare-fun e!15756 () Bool)

(assert (=> d!4429 e!15756))

(declare-fun res!14837 () Bool)

(assert (=> d!4429 (=> res!14837 e!15756)))

(declare-fun lt!9135 () Bool)

(assert (=> d!4429 (= res!14837 (not lt!9135))))

(declare-fun lt!9136 () Bool)

(assert (=> d!4429 (= lt!9135 lt!9136)))

(declare-fun lt!9134 () Unit!514)

(declare-fun e!15757 () Unit!514)

(assert (=> d!4429 (= lt!9134 e!15757)))

(declare-fun c!3274 () Bool)

(assert (=> d!4429 (= c!3274 lt!9136)))

(assert (=> d!4429 (= lt!9136 (containsKey!25 (toList!292 lt!8538) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> d!4429 (= (contains!220 lt!8538 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) lt!9135)))

(declare-fun b!24363 () Bool)

(declare-fun lt!9137 () Unit!514)

(assert (=> b!24363 (= e!15757 lt!9137)))

(assert (=> b!24363 (= lt!9137 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8538) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24363 (isDefined!23 (getValueByKey!61 (toList!292 lt!8538) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24364 () Bool)

(declare-fun Unit!562 () Unit!514)

(assert (=> b!24364 (= e!15757 Unit!562)))

(declare-fun b!24365 () Bool)

(assert (=> b!24365 (= e!15756 (isDefined!23 (getValueByKey!61 (toList!292 lt!8538) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))))

(assert (= (and d!4429 c!3274) b!24363))

(assert (= (and d!4429 (not c!3274)) b!24364))

(assert (= (and d!4429 (not res!14837)) b!24365))

(assert (=> d!4429 m!16992))

(declare-fun m!18721 () Bool)

(assert (=> d!4429 m!18721))

(assert (=> b!24363 m!16992))

(declare-fun m!18723 () Bool)

(assert (=> b!24363 m!18723))

(assert (=> b!24363 m!16992))

(declare-fun m!18725 () Bool)

(assert (=> b!24363 m!18725))

(assert (=> b!24363 m!18725))

(declare-fun m!18727 () Bool)

(assert (=> b!24363 m!18727))

(assert (=> b!24365 m!16992))

(assert (=> b!24365 m!18725))

(assert (=> b!24365 m!18725))

(assert (=> b!24365 m!18727))

(assert (=> b!23604 d!4429))

(declare-fun b!24366 () Bool)

(declare-fun e!15758 () Bool)

(declare-fun call!2102 () Bool)

(assert (=> b!24366 (= e!15758 call!2102)))

(declare-fun b!24367 () Bool)

(declare-fun e!15759 () Bool)

(assert (=> b!24367 (= e!15759 e!15758)))

(declare-fun lt!9138 () (_ BitVec 64))

(assert (=> b!24367 (= lt!9138 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000))))

(declare-fun lt!9139 () Unit!514)

(assert (=> b!24367 (= lt!9139 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (_2!476 lt!8291)) lt!9138 #b00000000000000000000000000000000))))

(assert (=> b!24367 (arrayContainsKey!0 (_keys!3164 (_2!476 lt!8291)) lt!9138 #b00000000000000000000000000000000)))

(declare-fun lt!9140 () Unit!514)

(assert (=> b!24367 (= lt!9140 lt!9139)))

(declare-fun res!14838 () Bool)

(assert (=> b!24367 (= res!14838 (= (seekEntryOrOpen!0 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000) (_keys!3164 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291))) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24367 (=> (not res!14838) (not e!15758))))

(declare-fun b!24368 () Bool)

(assert (=> b!24368 (= e!15759 call!2102)))

(declare-fun d!4431 () Bool)

(declare-fun res!14839 () Bool)

(declare-fun e!15760 () Bool)

(assert (=> d!4431 (=> res!14839 e!15760)))

(assert (=> d!4431 (= res!14839 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(assert (=> d!4431 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291))) e!15760)))

(declare-fun bm!2099 () Bool)

(assert (=> bm!2099 (= call!2102 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291))))))

(declare-fun b!24369 () Bool)

(assert (=> b!24369 (= e!15760 e!15759)))

(declare-fun c!3275 () Bool)

(assert (=> b!24369 (= c!3275 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(assert (= (and d!4431 (not res!14839)) b!24369))

(assert (= (and b!24369 c!3275) b!24367))

(assert (= (and b!24369 (not c!3275)) b!24368))

(assert (= (and b!24367 res!14838) b!24366))

(assert (= (or b!24366 b!24368) bm!2099))

(assert (=> b!24367 m!18541))

(declare-fun m!18729 () Bool)

(assert (=> b!24367 m!18729))

(declare-fun m!18731 () Bool)

(assert (=> b!24367 m!18731))

(assert (=> b!24367 m!18541))

(declare-fun m!18733 () Bool)

(assert (=> b!24367 m!18733))

(declare-fun m!18735 () Bool)

(assert (=> bm!2099 m!18735))

(assert (=> b!24369 m!18541))

(assert (=> b!24369 m!18541))

(assert (=> b!24369 m!18545))

(assert (=> b!23624 d!4431))

(assert (=> d!4013 d!4181))

(declare-fun d!4433 () Bool)

(declare-fun e!15761 () Bool)

(assert (=> d!4433 e!15761))

(declare-fun res!14840 () Bool)

(assert (=> d!4433 (=> (not res!14840) (not e!15761))))

(declare-fun lt!9141 () ListLongMap!553)

(assert (=> d!4433 (= res!14840 (contains!220 lt!9141 (_1!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9144 () List!565)

(assert (=> d!4433 (= lt!9141 (ListLongMap!554 lt!9144))))

(declare-fun lt!9142 () Unit!514)

(declare-fun lt!9143 () Unit!514)

(assert (=> d!4433 (= lt!9142 lt!9143)))

(assert (=> d!4433 (= (getValueByKey!61 lt!9144 (_1!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4433 (= lt!9143 (lemmaContainsTupThenGetReturnValue!18 lt!9144 (_1!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4433 (= lt!9144 (insertStrictlySorted!18 (toList!292 (ite c!3074 call!1992 (ite c!3075 call!1988 call!1993))) (_1!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4433 (= (+!45 (ite c!3074 call!1992 (ite c!3075 call!1988 call!1993)) (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!9141)))

(declare-fun b!24370 () Bool)

(declare-fun res!14841 () Bool)

(assert (=> b!24370 (=> (not res!14841) (not e!15761))))

(assert (=> b!24370 (= res!14841 (= (getValueByKey!61 (toList!292 lt!9141) (_1!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun b!24371 () Bool)

(assert (=> b!24371 (= e!15761 (contains!221 (toList!292 lt!9141) (ite (or c!3074 c!3075) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (= (and d!4433 res!14840) b!24370))

(assert (= (and b!24370 res!14841) b!24371))

(declare-fun m!18737 () Bool)

(assert (=> d!4433 m!18737))

(declare-fun m!18739 () Bool)

(assert (=> d!4433 m!18739))

(declare-fun m!18741 () Bool)

(assert (=> d!4433 m!18741))

(declare-fun m!18743 () Bool)

(assert (=> d!4433 m!18743))

(declare-fun m!18745 () Bool)

(assert (=> b!24370 m!18745))

(declare-fun m!18747 () Bool)

(assert (=> b!24371 m!18747))

(assert (=> bm!1987 d!4433))

(declare-fun d!4435 () Bool)

(declare-fun e!15762 () Bool)

(assert (=> d!4435 e!15762))

(declare-fun res!14842 () Bool)

(assert (=> d!4435 (=> res!14842 e!15762)))

(declare-fun lt!9146 () Bool)

(assert (=> d!4435 (= res!14842 (not lt!9146))))

(declare-fun lt!9147 () Bool)

(assert (=> d!4435 (= lt!9146 lt!9147)))

(declare-fun lt!9145 () Unit!514)

(declare-fun e!15763 () Unit!514)

(assert (=> d!4435 (= lt!9145 e!15763)))

(declare-fun c!3276 () Bool)

(assert (=> d!4435 (= c!3276 lt!9147)))

(assert (=> d!4435 (= lt!9147 (containsKey!25 (toList!292 (map!410 (_2!476 lt!8764))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4435 (= (contains!220 (map!410 (_2!476 lt!8764)) #b0000000000000000000000000000000000000000000000000000000000000000) lt!9146)))

(declare-fun b!24372 () Bool)

(declare-fun lt!9148 () Unit!514)

(assert (=> b!24372 (= e!15763 lt!9148)))

(assert (=> b!24372 (= lt!9148 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (map!410 (_2!476 lt!8764))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24372 (isDefined!23 (getValueByKey!61 (toList!292 (map!410 (_2!476 lt!8764))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24373 () Bool)

(declare-fun Unit!563 () Unit!514)

(assert (=> b!24373 (= e!15763 Unit!563)))

(declare-fun b!24374 () Bool)

(assert (=> b!24374 (= e!15762 (isDefined!23 (getValueByKey!61 (toList!292 (map!410 (_2!476 lt!8764))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4435 c!3276) b!24372))

(assert (= (and d!4435 (not c!3276)) b!24373))

(assert (= (and d!4435 (not res!14842)) b!24374))

(declare-fun m!18749 () Bool)

(assert (=> d!4435 m!18749))

(declare-fun m!18751 () Bool)

(assert (=> b!24372 m!18751))

(declare-fun m!18753 () Bool)

(assert (=> b!24372 m!18753))

(assert (=> b!24372 m!18753))

(declare-fun m!18755 () Bool)

(assert (=> b!24372 m!18755))

(assert (=> b!24374 m!18753))

(assert (=> b!24374 m!18753))

(assert (=> b!24374 m!18755))

(assert (=> b!23849 d!4435))

(assert (=> b!23849 d!4247))

(declare-fun b!24375 () Bool)

(declare-fun e!15768 () ListLongMap!553)

(declare-fun call!2109 () ListLongMap!553)

(assert (=> b!24375 (= e!15768 call!2109)))

(declare-fun b!24376 () Bool)

(declare-fun res!14851 () Bool)

(declare-fun e!15771 () Bool)

(assert (=> b!24376 (=> (not res!14851) (not e!15771))))

(declare-fun e!15766 () Bool)

(assert (=> b!24376 (= res!14851 e!15766)))

(declare-fun c!3277 () Bool)

(assert (=> b!24376 (= c!3277 (not (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24377 () Bool)

(declare-fun e!15765 () Bool)

(declare-fun e!15773 () Bool)

(assert (=> b!24377 (= e!15765 e!15773)))

(declare-fun res!14847 () Bool)

(assert (=> b!24377 (=> (not res!14847) (not e!15773))))

(declare-fun lt!9158 () ListLongMap!553)

(assert (=> b!24377 (= res!14847 (contains!220 lt!9158 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(assert (=> b!24377 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(declare-fun b!24378 () Bool)

(declare-fun e!15764 () Bool)

(declare-fun e!15772 () Bool)

(assert (=> b!24378 (= e!15764 e!15772)))

(declare-fun res!14850 () Bool)

(declare-fun call!2105 () Bool)

(assert (=> b!24378 (= res!14850 call!2105)))

(assert (=> b!24378 (=> (not res!14850) (not e!15772))))

(declare-fun b!24379 () Bool)

(declare-fun e!15776 () Unit!514)

(declare-fun lt!9149 () Unit!514)

(assert (=> b!24379 (= e!15776 lt!9149)))

(declare-fun lt!9154 () ListLongMap!553)

(assert (=> b!24379 (= lt!9154 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8291)) (_values!1729 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291)) (extraKeys!1641 (_2!476 lt!8291)) (zeroValue!1666 (_2!476 lt!8291)) (minValue!1666 (_2!476 lt!8291)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8291))))))

(declare-fun lt!9165 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9165 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9166 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9166 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000))))

(declare-fun lt!9169 () Unit!514)

(assert (=> b!24379 (= lt!9169 (addStillContains!14 lt!9154 lt!9165 (zeroValue!1666 (_2!476 lt!8291)) lt!9166))))

(assert (=> b!24379 (contains!220 (+!45 lt!9154 (tuple2!947 lt!9165 (zeroValue!1666 (_2!476 lt!8291)))) lt!9166)))

(declare-fun lt!9163 () Unit!514)

(assert (=> b!24379 (= lt!9163 lt!9169)))

(declare-fun lt!9156 () ListLongMap!553)

(assert (=> b!24379 (= lt!9156 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8291)) (_values!1729 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291)) (extraKeys!1641 (_2!476 lt!8291)) (zeroValue!1666 (_2!476 lt!8291)) (minValue!1666 (_2!476 lt!8291)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8291))))))

(declare-fun lt!9152 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9152 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9159 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9159 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000))))

(declare-fun lt!9162 () Unit!514)

(assert (=> b!24379 (= lt!9162 (addApplyDifferent!14 lt!9156 lt!9152 (minValue!1666 (_2!476 lt!8291)) lt!9159))))

(assert (=> b!24379 (= (apply!29 (+!45 lt!9156 (tuple2!947 lt!9152 (minValue!1666 (_2!476 lt!8291)))) lt!9159) (apply!29 lt!9156 lt!9159))))

(declare-fun lt!9153 () Unit!514)

(assert (=> b!24379 (= lt!9153 lt!9162)))

(declare-fun lt!9157 () ListLongMap!553)

(assert (=> b!24379 (= lt!9157 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8291)) (_values!1729 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291)) (extraKeys!1641 (_2!476 lt!8291)) (zeroValue!1666 (_2!476 lt!8291)) (minValue!1666 (_2!476 lt!8291)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8291))))))

(declare-fun lt!9160 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9160 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9155 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9155 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000))))

(declare-fun lt!9161 () Unit!514)

(assert (=> b!24379 (= lt!9161 (addApplyDifferent!14 lt!9157 lt!9160 (zeroValue!1666 (_2!476 lt!8291)) lt!9155))))

(assert (=> b!24379 (= (apply!29 (+!45 lt!9157 (tuple2!947 lt!9160 (zeroValue!1666 (_2!476 lt!8291)))) lt!9155) (apply!29 lt!9157 lt!9155))))

(declare-fun lt!9170 () Unit!514)

(assert (=> b!24379 (= lt!9170 lt!9161)))

(declare-fun lt!9164 () ListLongMap!553)

(assert (=> b!24379 (= lt!9164 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8291)) (_values!1729 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291)) (extraKeys!1641 (_2!476 lt!8291)) (zeroValue!1666 (_2!476 lt!8291)) (minValue!1666 (_2!476 lt!8291)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8291))))))

(declare-fun lt!9150 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9150 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9168 () (_ BitVec 64))

(assert (=> b!24379 (= lt!9168 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000))))

(assert (=> b!24379 (= lt!9149 (addApplyDifferent!14 lt!9164 lt!9150 (minValue!1666 (_2!476 lt!8291)) lt!9168))))

(assert (=> b!24379 (= (apply!29 (+!45 lt!9164 (tuple2!947 lt!9150 (minValue!1666 (_2!476 lt!8291)))) lt!9168) (apply!29 lt!9164 lt!9168))))

(declare-fun bm!2101 () Bool)

(declare-fun call!2108 () ListLongMap!553)

(assert (=> bm!2101 (= call!2108 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!476 lt!8291)) (_values!1729 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291)) (extraKeys!1641 (_2!476 lt!8291)) (zeroValue!1666 (_2!476 lt!8291)) (minValue!1666 (_2!476 lt!8291)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8291))))))

(declare-fun b!24380 () Bool)

(declare-fun call!2106 () Bool)

(assert (=> b!24380 (= e!15766 (not call!2106))))

(declare-fun bm!2102 () Bool)

(declare-fun call!2103 () ListLongMap!553)

(declare-fun call!2107 () ListLongMap!553)

(assert (=> bm!2102 (= call!2103 call!2107)))

(declare-fun c!3281 () Bool)

(declare-fun c!3280 () Bool)

(declare-fun call!2104 () ListLongMap!553)

(declare-fun bm!2103 () Bool)

(assert (=> bm!2103 (= call!2107 (+!45 (ite c!3280 call!2108 (ite c!3281 call!2104 call!2109)) (ite (or c!3280 c!3281) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!476 lt!8291))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!476 lt!8291))))))))

(declare-fun b!24381 () Bool)

(declare-fun Unit!564 () Unit!514)

(assert (=> b!24381 (= e!15776 Unit!564)))

(declare-fun b!24382 () Bool)

(assert (=> b!24382 (= e!15764 (not call!2105))))

(declare-fun b!24383 () Bool)

(declare-fun c!3278 () Bool)

(assert (=> b!24383 (= c!3278 (and (not (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15774 () ListLongMap!553)

(assert (=> b!24383 (= e!15774 e!15768)))

(declare-fun b!24384 () Bool)

(declare-fun e!15770 () ListLongMap!553)

(assert (=> b!24384 (= e!15770 e!15774)))

(assert (=> b!24384 (= c!3281 (and (not (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2104 () Bool)

(assert (=> bm!2104 (= call!2109 call!2104)))

(declare-fun b!24385 () Bool)

(assert (=> b!24385 (= e!15772 (= (apply!29 lt!9158 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!476 lt!8291))))))

(declare-fun bm!2105 () Bool)

(assert (=> bm!2105 (= call!2104 call!2108)))

(declare-fun b!24386 () Bool)

(declare-fun e!15775 () Bool)

(assert (=> b!24386 (= e!15766 e!15775)))

(declare-fun res!14849 () Bool)

(assert (=> b!24386 (= res!14849 call!2106)))

(assert (=> b!24386 (=> (not res!14849) (not e!15775))))

(declare-fun d!4437 () Bool)

(assert (=> d!4437 e!15771))

(declare-fun res!14845 () Bool)

(assert (=> d!4437 (=> (not res!14845) (not e!15771))))

(assert (=> d!4437 (= res!14845 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))))

(declare-fun lt!9167 () ListLongMap!553)

(assert (=> d!4437 (= lt!9158 lt!9167)))

(declare-fun lt!9151 () Unit!514)

(assert (=> d!4437 (= lt!9151 e!15776)))

(declare-fun c!3282 () Bool)

(declare-fun e!15769 () Bool)

(assert (=> d!4437 (= c!3282 e!15769)))

(declare-fun res!14846 () Bool)

(assert (=> d!4437 (=> (not res!14846) (not e!15769))))

(assert (=> d!4437 (= res!14846 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(assert (=> d!4437 (= lt!9167 e!15770)))

(assert (=> d!4437 (= c!3280 (and (not (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4437 (validMask!0 (mask!4730 (_2!476 lt!8291)))))

(assert (=> d!4437 (= (getCurrentListMap!121 (_keys!3164 (_2!476 lt!8291)) (_values!1729 (_2!476 lt!8291)) (mask!4730 (_2!476 lt!8291)) (extraKeys!1641 (_2!476 lt!8291)) (zeroValue!1666 (_2!476 lt!8291)) (minValue!1666 (_2!476 lt!8291)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!476 lt!8291))) lt!9158)))

(declare-fun bm!2100 () Bool)

(assert (=> bm!2100 (= call!2106 (contains!220 lt!9158 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2106 () Bool)

(assert (=> bm!2106 (= call!2105 (contains!220 lt!9158 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24387 () Bool)

(assert (=> b!24387 (= e!15775 (= (apply!29 lt!9158 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!476 lt!8291))))))

(declare-fun b!24388 () Bool)

(declare-fun res!14844 () Bool)

(assert (=> b!24388 (=> (not res!14844) (not e!15771))))

(assert (=> b!24388 (= res!14844 e!15765)))

(declare-fun res!14843 () Bool)

(assert (=> b!24388 (=> res!14843 e!15765)))

(declare-fun e!15767 () Bool)

(assert (=> b!24388 (= res!14843 (not e!15767))))

(declare-fun res!14848 () Bool)

(assert (=> b!24388 (=> (not res!14848) (not e!15767))))

(assert (=> b!24388 (= res!14848 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(declare-fun b!24389 () Bool)

(assert (=> b!24389 (= e!15769 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(declare-fun b!24390 () Bool)

(assert (=> b!24390 (= e!15771 e!15764)))

(declare-fun c!3279 () Bool)

(assert (=> b!24390 (= c!3279 (not (= (bvand (extraKeys!1641 (_2!476 lt!8291)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24391 () Bool)

(assert (=> b!24391 (= e!15773 (= (apply!29 lt!9158 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 (_2!476 lt!8291))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!476 lt!8291)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24391 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 (_2!476 lt!8291)))))))

(assert (=> b!24391 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(declare-fun b!24392 () Bool)

(assert (=> b!24392 (= e!15768 call!2103)))

(declare-fun b!24393 () Bool)

(assert (=> b!24393 (= e!15770 (+!45 call!2107 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!476 lt!8291)))))))

(declare-fun b!24394 () Bool)

(assert (=> b!24394 (= e!15774 call!2103)))

(declare-fun b!24395 () Bool)

(assert (=> b!24395 (= e!15767 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(assert (= (and d!4437 c!3280) b!24393))

(assert (= (and d!4437 (not c!3280)) b!24384))

(assert (= (and b!24384 c!3281) b!24394))

(assert (= (and b!24384 (not c!3281)) b!24383))

(assert (= (and b!24383 c!3278) b!24392))

(assert (= (and b!24383 (not c!3278)) b!24375))

(assert (= (or b!24392 b!24375) bm!2104))

(assert (= (or b!24394 bm!2104) bm!2105))

(assert (= (or b!24394 b!24392) bm!2102))

(assert (= (or b!24393 bm!2105) bm!2101))

(assert (= (or b!24393 bm!2102) bm!2103))

(assert (= (and d!4437 res!14846) b!24389))

(assert (= (and d!4437 c!3282) b!24379))

(assert (= (and d!4437 (not c!3282)) b!24381))

(assert (= (and d!4437 res!14845) b!24388))

(assert (= (and b!24388 res!14848) b!24395))

(assert (= (and b!24388 (not res!14843)) b!24377))

(assert (= (and b!24377 res!14847) b!24391))

(assert (= (and b!24388 res!14844) b!24376))

(assert (= (and b!24376 c!3277) b!24386))

(assert (= (and b!24376 (not c!3277)) b!24380))

(assert (= (and b!24386 res!14849) b!24387))

(assert (= (or b!24386 b!24380) bm!2100))

(assert (= (and b!24376 res!14851) b!24390))

(assert (= (and b!24390 c!3279) b!24378))

(assert (= (and b!24390 (not c!3279)) b!24382))

(assert (= (and b!24378 res!14850) b!24385))

(assert (= (or b!24378 b!24382) bm!2106))

(declare-fun b_lambda!1621 () Bool)

(assert (=> (not b_lambda!1621) (not b!24391)))

(declare-fun tb!667 () Bool)

(declare-fun t!3247 () Bool)

(assert (=> (and b!23168 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!476 lt!8291))) t!3247) tb!667))

(declare-fun result!1107 () Bool)

(assert (=> tb!667 (= result!1107 tp_is_empty!1023)))

(assert (=> b!24391 t!3247))

(declare-fun b_and!1525 () Bool)

(assert (= b_and!1523 (and (=> t!3247 result!1107) b_and!1525)))

(declare-fun m!18757 () Bool)

(assert (=> bm!2100 m!18757))

(declare-fun m!18759 () Bool)

(assert (=> b!24385 m!18759))

(declare-fun m!18761 () Bool)

(assert (=> bm!2106 m!18761))

(declare-fun m!18763 () Bool)

(assert (=> bm!2103 m!18763))

(declare-fun m!18765 () Bool)

(assert (=> b!24393 m!18765))

(assert (=> b!24377 m!18541))

(assert (=> b!24377 m!18541))

(declare-fun m!18767 () Bool)

(assert (=> b!24377 m!18767))

(assert (=> b!24395 m!18541))

(assert (=> b!24395 m!18541))

(assert (=> b!24395 m!18545))

(assert (=> b!24389 m!18541))

(assert (=> b!24389 m!18541))

(assert (=> b!24389 m!18545))

(declare-fun m!18769 () Bool)

(assert (=> bm!2101 m!18769))

(declare-fun m!18771 () Bool)

(assert (=> b!24379 m!18771))

(declare-fun m!18773 () Bool)

(assert (=> b!24379 m!18773))

(declare-fun m!18775 () Bool)

(assert (=> b!24379 m!18775))

(declare-fun m!18777 () Bool)

(assert (=> b!24379 m!18777))

(assert (=> b!24379 m!18775))

(declare-fun m!18779 () Bool)

(assert (=> b!24379 m!18779))

(declare-fun m!18781 () Bool)

(assert (=> b!24379 m!18781))

(declare-fun m!18783 () Bool)

(assert (=> b!24379 m!18783))

(assert (=> b!24379 m!18769))

(declare-fun m!18785 () Bool)

(assert (=> b!24379 m!18785))

(declare-fun m!18787 () Bool)

(assert (=> b!24379 m!18787))

(declare-fun m!18789 () Bool)

(assert (=> b!24379 m!18789))

(declare-fun m!18791 () Bool)

(assert (=> b!24379 m!18791))

(declare-fun m!18793 () Bool)

(assert (=> b!24379 m!18793))

(assert (=> b!24379 m!18793))

(declare-fun m!18795 () Bool)

(assert (=> b!24379 m!18795))

(assert (=> b!24379 m!18783))

(declare-fun m!18797 () Bool)

(assert (=> b!24379 m!18797))

(assert (=> b!24379 m!18541))

(assert (=> b!24379 m!18791))

(declare-fun m!18799 () Bool)

(assert (=> b!24379 m!18799))

(declare-fun m!18801 () Bool)

(assert (=> b!24387 m!18801))

(declare-fun m!18803 () Bool)

(assert (=> b!24391 m!18803))

(declare-fun m!18805 () Bool)

(assert (=> b!24391 m!18805))

(assert (=> b!24391 m!18803))

(declare-fun m!18807 () Bool)

(assert (=> b!24391 m!18807))

(assert (=> b!24391 m!18541))

(declare-fun m!18809 () Bool)

(assert (=> b!24391 m!18809))

(assert (=> b!24391 m!18805))

(assert (=> b!24391 m!18541))

(assert (=> d!4437 m!18531))

(assert (=> d!4077 d!4437))

(declare-fun d!4439 () Bool)

(declare-fun e!15777 () Bool)

(assert (=> d!4439 e!15777))

(declare-fun res!14852 () Bool)

(assert (=> d!4439 (=> (not res!14852) (not e!15777))))

(declare-fun lt!9171 () ListLongMap!553)

(assert (=> d!4439 (= res!14852 (contains!220 lt!9171 (_1!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(declare-fun lt!9174 () List!565)

(assert (=> d!4439 (= lt!9171 (ListLongMap!554 lt!9174))))

(declare-fun lt!9172 () Unit!514)

(declare-fun lt!9173 () Unit!514)

(assert (=> d!4439 (= lt!9172 lt!9173)))

(assert (=> d!4439 (= (getValueByKey!61 lt!9174 (_1!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))) (Some!66 (_2!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(assert (=> d!4439 (= lt!9173 (lemmaContainsTupThenGetReturnValue!18 lt!9174 (_1!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (_2!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(assert (=> d!4439 (= lt!9174 (insertStrictlySorted!18 (toList!292 (ite c!3083 call!1999 (ite c!3084 call!1995 call!2000))) (_1!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (_2!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(assert (=> d!4439 (= (+!45 (ite c!3083 call!1999 (ite c!3084 call!1995 call!2000)) (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) lt!9171)))

(declare-fun b!24396 () Bool)

(declare-fun res!14853 () Bool)

(assert (=> b!24396 (=> (not res!14853) (not e!15777))))

(assert (=> b!24396 (= res!14853 (= (getValueByKey!61 (toList!292 lt!9171) (_1!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))) (Some!66 (_2!480 (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))))

(declare-fun b!24397 () Bool)

(assert (=> b!24397 (= e!15777 (contains!221 (toList!292 lt!9171) (ite (or c!3083 c!3084) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (= (and d!4439 res!14852) b!24396))

(assert (= (and b!24396 res!14853) b!24397))

(declare-fun m!18811 () Bool)

(assert (=> d!4439 m!18811))

(declare-fun m!18813 () Bool)

(assert (=> d!4439 m!18813))

(declare-fun m!18815 () Bool)

(assert (=> d!4439 m!18815))

(declare-fun m!18817 () Bool)

(assert (=> d!4439 m!18817))

(declare-fun m!18819 () Bool)

(assert (=> b!24396 m!18819))

(declare-fun m!18821 () Bool)

(assert (=> b!24397 m!18821))

(assert (=> bm!1994 d!4439))

(assert (=> d!4053 d!4181))

(assert (=> d!4109 d!4107))

(declare-fun d!4441 () Bool)

(assert (=> d!4441 (= (arrayCountValidKeys!0 lt!8356 lt!8358 lt!8338) #b00000000000000000000000000000000)))

(assert (=> d!4441 true))

(declare-fun _$88!16 () Unit!514)

(assert (=> d!4441 (= (choose!59 lt!8356 lt!8358 lt!8338) _$88!16)))

(declare-fun bs!1009 () Bool)

(assert (= bs!1009 d!4441))

(assert (=> bs!1009 m!16936))

(assert (=> d!4109 d!4441))

(declare-fun d!4443 () Bool)

(assert (=> d!4443 (= (apply!29 lt!8722 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8722) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1010 () Bool)

(assert (= bs!1010 d!4443))

(declare-fun m!18823 () Bool)

(assert (=> bs!1010 m!18823))

(assert (=> bs!1010 m!18823))

(declare-fun m!18825 () Bool)

(assert (=> bs!1010 m!18825))

(assert (=> b!23792 d!4443))

(assert (=> d!4119 d!4049))

(declare-fun b!24398 () Bool)

(declare-fun e!15782 () ListLongMap!553)

(declare-fun call!2116 () ListLongMap!553)

(assert (=> b!24398 (= e!15782 call!2116)))

(declare-fun b!24399 () Bool)

(declare-fun res!14862 () Bool)

(declare-fun e!15785 () Bool)

(assert (=> b!24399 (=> (not res!14862) (not e!15785))))

(declare-fun e!15780 () Bool)

(assert (=> b!24399 (= res!14862 e!15780)))

(declare-fun c!3283 () Bool)

(assert (=> b!24399 (= c!3283 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24400 () Bool)

(declare-fun e!15779 () Bool)

(declare-fun e!15787 () Bool)

(assert (=> b!24400 (= e!15779 e!15787)))

(declare-fun res!14858 () Bool)

(assert (=> b!24400 (=> (not res!14858) (not e!15787))))

(declare-fun lt!9184 () ListLongMap!553)

(assert (=> b!24400 (= res!14858 (contains!220 lt!9184 (select (arr!604 lt!8774) #b00000000000000000000000000000000)))))

(assert (=> b!24400 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 lt!8774)))))

(declare-fun b!24401 () Bool)

(declare-fun e!15778 () Bool)

(declare-fun e!15786 () Bool)

(assert (=> b!24401 (= e!15778 e!15786)))

(declare-fun res!14861 () Bool)

(declare-fun call!2112 () Bool)

(assert (=> b!24401 (= res!14861 call!2112)))

(assert (=> b!24401 (=> (not res!14861) (not e!15786))))

(declare-fun b!24402 () Bool)

(declare-fun e!15790 () Unit!514)

(declare-fun lt!9175 () Unit!514)

(assert (=> b!24402 (= e!15790 lt!9175)))

(declare-fun lt!9180 () ListLongMap!553)

(assert (=> b!24402 (= lt!9180 (getCurrentListMapNoExtraKeys!15 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9191 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9191 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9192 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9192 (select (arr!604 lt!8774) #b00000000000000000000000000000000))))

(declare-fun lt!9195 () Unit!514)

(assert (=> b!24402 (= lt!9195 (addStillContains!14 lt!9180 lt!9191 (zeroValue!1666 lt!8162) lt!9192))))

(assert (=> b!24402 (contains!220 (+!45 lt!9180 (tuple2!947 lt!9191 (zeroValue!1666 lt!8162))) lt!9192)))

(declare-fun lt!9189 () Unit!514)

(assert (=> b!24402 (= lt!9189 lt!9195)))

(declare-fun lt!9182 () ListLongMap!553)

(assert (=> b!24402 (= lt!9182 (getCurrentListMapNoExtraKeys!15 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9178 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9178 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9185 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9185 (select (arr!604 lt!8774) #b00000000000000000000000000000000))))

(declare-fun lt!9188 () Unit!514)

(assert (=> b!24402 (= lt!9188 (addApplyDifferent!14 lt!9182 lt!9178 (minValue!1666 lt!8162) lt!9185))))

(assert (=> b!24402 (= (apply!29 (+!45 lt!9182 (tuple2!947 lt!9178 (minValue!1666 lt!8162))) lt!9185) (apply!29 lt!9182 lt!9185))))

(declare-fun lt!9179 () Unit!514)

(assert (=> b!24402 (= lt!9179 lt!9188)))

(declare-fun lt!9183 () ListLongMap!553)

(assert (=> b!24402 (= lt!9183 (getCurrentListMapNoExtraKeys!15 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9186 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9186 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9181 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9181 (select (arr!604 lt!8774) #b00000000000000000000000000000000))))

(declare-fun lt!9187 () Unit!514)

(assert (=> b!24402 (= lt!9187 (addApplyDifferent!14 lt!9183 lt!9186 (zeroValue!1666 lt!8162) lt!9181))))

(assert (=> b!24402 (= (apply!29 (+!45 lt!9183 (tuple2!947 lt!9186 (zeroValue!1666 lt!8162))) lt!9181) (apply!29 lt!9183 lt!9181))))

(declare-fun lt!9196 () Unit!514)

(assert (=> b!24402 (= lt!9196 lt!9187)))

(declare-fun lt!9190 () ListLongMap!553)

(assert (=> b!24402 (= lt!9190 (getCurrentListMapNoExtraKeys!15 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9176 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9176 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9194 () (_ BitVec 64))

(assert (=> b!24402 (= lt!9194 (select (arr!604 lt!8774) #b00000000000000000000000000000000))))

(assert (=> b!24402 (= lt!9175 (addApplyDifferent!14 lt!9190 lt!9176 (minValue!1666 lt!8162) lt!9194))))

(assert (=> b!24402 (= (apply!29 (+!45 lt!9190 (tuple2!947 lt!9176 (minValue!1666 lt!8162))) lt!9194) (apply!29 lt!9190 lt!9194))))

(declare-fun call!2115 () ListLongMap!553)

(declare-fun bm!2108 () Bool)

(assert (=> bm!2108 (= call!2115 (getCurrentListMapNoExtraKeys!15 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!24403 () Bool)

(declare-fun call!2113 () Bool)

(assert (=> b!24403 (= e!15780 (not call!2113))))

(declare-fun bm!2109 () Bool)

(declare-fun call!2110 () ListLongMap!553)

(declare-fun call!2114 () ListLongMap!553)

(assert (=> bm!2109 (= call!2110 call!2114)))

(declare-fun c!3286 () Bool)

(declare-fun c!3287 () Bool)

(declare-fun call!2111 () ListLongMap!553)

(declare-fun bm!2110 () Bool)

(assert (=> bm!2110 (= call!2114 (+!45 (ite c!3286 call!2115 (ite c!3287 call!2111 call!2116)) (ite (or c!3286 c!3287) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun b!24404 () Bool)

(declare-fun Unit!565 () Unit!514)

(assert (=> b!24404 (= e!15790 Unit!565)))

(declare-fun b!24405 () Bool)

(assert (=> b!24405 (= e!15778 (not call!2112))))

(declare-fun b!24406 () Bool)

(declare-fun c!3284 () Bool)

(assert (=> b!24406 (= c!3284 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15788 () ListLongMap!553)

(assert (=> b!24406 (= e!15788 e!15782)))

(declare-fun b!24407 () Bool)

(declare-fun e!15784 () ListLongMap!553)

(assert (=> b!24407 (= e!15784 e!15788)))

(assert (=> b!24407 (= c!3287 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2111 () Bool)

(assert (=> bm!2111 (= call!2116 call!2111)))

(declare-fun b!24408 () Bool)

(assert (=> b!24408 (= e!15786 (= (apply!29 lt!9184 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8162)))))

(declare-fun bm!2112 () Bool)

(assert (=> bm!2112 (= call!2111 call!2115)))

(declare-fun b!24409 () Bool)

(declare-fun e!15789 () Bool)

(assert (=> b!24409 (= e!15780 e!15789)))

(declare-fun res!14860 () Bool)

(assert (=> b!24409 (= res!14860 call!2113)))

(assert (=> b!24409 (=> (not res!14860) (not e!15789))))

(declare-fun d!4445 () Bool)

(assert (=> d!4445 e!15785))

(declare-fun res!14856 () Bool)

(assert (=> d!4445 (=> (not res!14856) (not e!15785))))

(assert (=> d!4445 (= res!14856 (or (bvsge #b00000000000000000000000000000000 (size!700 lt!8774)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 lt!8774)))))))

(declare-fun lt!9193 () ListLongMap!553)

(assert (=> d!4445 (= lt!9184 lt!9193)))

(declare-fun lt!9177 () Unit!514)

(assert (=> d!4445 (= lt!9177 e!15790)))

(declare-fun c!3288 () Bool)

(declare-fun e!15783 () Bool)

(assert (=> d!4445 (= c!3288 e!15783)))

(declare-fun res!14857 () Bool)

(assert (=> d!4445 (=> (not res!14857) (not e!15783))))

(assert (=> d!4445 (= res!14857 (bvslt #b00000000000000000000000000000000 (size!700 lt!8774)))))

(assert (=> d!4445 (= lt!9193 e!15784)))

(assert (=> d!4445 (= c!3286 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4445 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4445 (= (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9184)))

(declare-fun bm!2107 () Bool)

(assert (=> bm!2107 (= call!2113 (contains!220 lt!9184 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2113 () Bool)

(assert (=> bm!2113 (= call!2112 (contains!220 lt!9184 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24410 () Bool)

(assert (=> b!24410 (= e!15789 (= (apply!29 lt!9184 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8162)))))

(declare-fun b!24411 () Bool)

(declare-fun res!14855 () Bool)

(assert (=> b!24411 (=> (not res!14855) (not e!15785))))

(assert (=> b!24411 (= res!14855 e!15779)))

(declare-fun res!14854 () Bool)

(assert (=> b!24411 (=> res!14854 e!15779)))

(declare-fun e!15781 () Bool)

(assert (=> b!24411 (= res!14854 (not e!15781))))

(declare-fun res!14859 () Bool)

(assert (=> b!24411 (=> (not res!14859) (not e!15781))))

(assert (=> b!24411 (= res!14859 (bvslt #b00000000000000000000000000000000 (size!700 lt!8774)))))

(declare-fun b!24412 () Bool)

(assert (=> b!24412 (= e!15783 (validKeyInArray!0 (select (arr!604 lt!8774) #b00000000000000000000000000000000)))))

(declare-fun b!24413 () Bool)

(assert (=> b!24413 (= e!15785 e!15778)))

(declare-fun c!3285 () Bool)

(assert (=> b!24413 (= c!3285 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24414 () Bool)

(assert (=> b!24414 (= e!15787 (= (apply!29 lt!9184 (select (arr!604 lt!8774) #b00000000000000000000000000000000)) (get!390 (select (arr!603 lt!8788) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24414 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 lt!8788)))))

(assert (=> b!24414 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 lt!8774)))))

(declare-fun b!24415 () Bool)

(assert (=> b!24415 (= e!15782 call!2110)))

(declare-fun b!24416 () Bool)

(assert (=> b!24416 (= e!15784 (+!45 call!2114 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(declare-fun b!24417 () Bool)

(assert (=> b!24417 (= e!15788 call!2110)))

(declare-fun b!24418 () Bool)

(assert (=> b!24418 (= e!15781 (validKeyInArray!0 (select (arr!604 lt!8774) #b00000000000000000000000000000000)))))

(assert (= (and d!4445 c!3286) b!24416))

(assert (= (and d!4445 (not c!3286)) b!24407))

(assert (= (and b!24407 c!3287) b!24417))

(assert (= (and b!24407 (not c!3287)) b!24406))

(assert (= (and b!24406 c!3284) b!24415))

(assert (= (and b!24406 (not c!3284)) b!24398))

(assert (= (or b!24415 b!24398) bm!2111))

(assert (= (or b!24417 bm!2111) bm!2112))

(assert (= (or b!24417 b!24415) bm!2109))

(assert (= (or b!24416 bm!2112) bm!2108))

(assert (= (or b!24416 bm!2109) bm!2110))

(assert (= (and d!4445 res!14857) b!24412))

(assert (= (and d!4445 c!3288) b!24402))

(assert (= (and d!4445 (not c!3288)) b!24404))

(assert (= (and d!4445 res!14856) b!24411))

(assert (= (and b!24411 res!14859) b!24418))

(assert (= (and b!24411 (not res!14854)) b!24400))

(assert (= (and b!24400 res!14858) b!24414))

(assert (= (and b!24411 res!14855) b!24399))

(assert (= (and b!24399 c!3283) b!24409))

(assert (= (and b!24399 (not c!3283)) b!24403))

(assert (= (and b!24409 res!14860) b!24410))

(assert (= (or b!24409 b!24403) bm!2107))

(assert (= (and b!24399 res!14862) b!24413))

(assert (= (and b!24413 c!3285) b!24401))

(assert (= (and b!24413 (not c!3285)) b!24405))

(assert (= (and b!24401 res!14861) b!24408))

(assert (= (or b!24401 b!24405) bm!2113))

(declare-fun b_lambda!1623 () Bool)

(assert (=> (not b_lambda!1623) (not b!24414)))

(assert (=> b!24414 t!3243))

(declare-fun b_and!1527 () Bool)

(assert (= b_and!1525 (and (=> t!3243 result!1103) b_and!1527)))

(declare-fun m!18827 () Bool)

(assert (=> bm!2107 m!18827))

(declare-fun m!18829 () Bool)

(assert (=> b!24408 m!18829))

(declare-fun m!18831 () Bool)

(assert (=> bm!2113 m!18831))

(declare-fun m!18833 () Bool)

(assert (=> bm!2110 m!18833))

(declare-fun m!18835 () Bool)

(assert (=> b!24416 m!18835))

(declare-fun m!18837 () Bool)

(assert (=> b!24400 m!18837))

(assert (=> b!24400 m!18837))

(declare-fun m!18839 () Bool)

(assert (=> b!24400 m!18839))

(assert (=> b!24418 m!18837))

(assert (=> b!24418 m!18837))

(declare-fun m!18841 () Bool)

(assert (=> b!24418 m!18841))

(assert (=> b!24412 m!18837))

(assert (=> b!24412 m!18837))

(assert (=> b!24412 m!18841))

(declare-fun m!18843 () Bool)

(assert (=> bm!2108 m!18843))

(declare-fun m!18845 () Bool)

(assert (=> b!24402 m!18845))

(declare-fun m!18847 () Bool)

(assert (=> b!24402 m!18847))

(declare-fun m!18849 () Bool)

(assert (=> b!24402 m!18849))

(declare-fun m!18851 () Bool)

(assert (=> b!24402 m!18851))

(assert (=> b!24402 m!18849))

(declare-fun m!18853 () Bool)

(assert (=> b!24402 m!18853))

(declare-fun m!18855 () Bool)

(assert (=> b!24402 m!18855))

(declare-fun m!18857 () Bool)

(assert (=> b!24402 m!18857))

(assert (=> b!24402 m!18843))

(declare-fun m!18859 () Bool)

(assert (=> b!24402 m!18859))

(declare-fun m!18861 () Bool)

(assert (=> b!24402 m!18861))

(declare-fun m!18863 () Bool)

(assert (=> b!24402 m!18863))

(declare-fun m!18865 () Bool)

(assert (=> b!24402 m!18865))

(declare-fun m!18867 () Bool)

(assert (=> b!24402 m!18867))

(assert (=> b!24402 m!18867))

(declare-fun m!18869 () Bool)

(assert (=> b!24402 m!18869))

(assert (=> b!24402 m!18857))

(declare-fun m!18871 () Bool)

(assert (=> b!24402 m!18871))

(assert (=> b!24402 m!18837))

(assert (=> b!24402 m!18865))

(declare-fun m!18873 () Bool)

(assert (=> b!24402 m!18873))

(declare-fun m!18875 () Bool)

(assert (=> b!24410 m!18875))

(assert (=> b!24414 m!17194))

(declare-fun m!18877 () Bool)

(assert (=> b!24414 m!18877))

(assert (=> b!24414 m!17194))

(declare-fun m!18879 () Bool)

(assert (=> b!24414 m!18879))

(assert (=> b!24414 m!18837))

(declare-fun m!18881 () Bool)

(assert (=> b!24414 m!18881))

(assert (=> b!24414 m!18877))

(assert (=> b!24414 m!18837))

(assert (=> d!4445 m!17072))

(assert (=> d!4119 d!4445))

(declare-fun d!4447 () Bool)

(declare-fun e!15791 () Bool)

(assert (=> d!4447 e!15791))

(declare-fun res!14863 () Bool)

(assert (=> d!4447 (=> res!14863 e!15791)))

(declare-fun lt!9198 () Bool)

(assert (=> d!4447 (= res!14863 (not lt!9198))))

(declare-fun lt!9199 () Bool)

(assert (=> d!4447 (= lt!9198 lt!9199)))

(declare-fun lt!9197 () Unit!514)

(declare-fun e!15792 () Unit!514)

(assert (=> d!4447 (= lt!9197 e!15792)))

(declare-fun c!3289 () Bool)

(assert (=> d!4447 (= c!3289 lt!9199)))

(assert (=> d!4447 (= lt!9199 (containsKey!25 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4447 (= (contains!220 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000) lt!9198)))

(declare-fun b!24419 () Bool)

(declare-fun lt!9200 () Unit!514)

(assert (=> b!24419 (= e!15792 lt!9200)))

(assert (=> b!24419 (= lt!9200 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24419 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24420 () Bool)

(declare-fun Unit!566 () Unit!514)

(assert (=> b!24420 (= e!15792 Unit!566)))

(declare-fun b!24421 () Bool)

(assert (=> b!24421 (= e!15791 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4447 c!3289) b!24419))

(assert (= (and d!4447 (not c!3289)) b!24420))

(assert (= (and d!4447 (not res!14863)) b!24421))

(declare-fun m!18883 () Bool)

(assert (=> d!4447 m!18883))

(declare-fun m!18885 () Bool)

(assert (=> b!24419 m!18885))

(declare-fun m!18887 () Bool)

(assert (=> b!24419 m!18887))

(assert (=> b!24419 m!18887))

(declare-fun m!18889 () Bool)

(assert (=> b!24419 m!18889))

(assert (=> b!24421 m!18887))

(assert (=> b!24421 m!18887))

(assert (=> b!24421 m!18889))

(assert (=> d!4119 d!4447))

(declare-fun b!24430 () Bool)

(declare-fun res!14872 () Bool)

(declare-fun e!15797 () Bool)

(assert (=> b!24430 (=> (not res!14872) (not e!15797))))

(assert (=> b!24430 (= res!14872 (not (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))))

(declare-fun d!4449 () Bool)

(declare-fun e!15798 () Bool)

(assert (=> d!4449 e!15798))

(declare-fun res!14875 () Bool)

(assert (=> d!4449 (=> (not res!14875) (not e!15798))))

(assert (=> d!4449 (= res!14875 (and (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!700 (_keys!3164 lt!8162)))))))

(declare-fun lt!9203 () Unit!514)

(declare-fun choose!1 (array!1277 (_ BitVec 32) (_ BitVec 64)) Unit!514)

(assert (=> d!4449 (= lt!9203 (choose!1 (_keys!3164 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4449 e!15797))

(declare-fun res!14874 () Bool)

(assert (=> d!4449 (=> (not res!14874) (not e!15797))))

(assert (=> d!4449 (= res!14874 (and (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!700 (_keys!3164 lt!8162)))))))

(assert (=> d!4449 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) lt!9203)))

(declare-fun b!24433 () Bool)

(assert (=> b!24433 (= e!15798 (= (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (bvadd (arrayCountValidKeys!0 (_keys!3164 lt!8162) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) #b00000000000000000000000000000001)))))

(declare-fun b!24432 () Bool)

(assert (=> b!24432 (= e!15797 (bvslt (size!700 (_keys!3164 lt!8162)) #b01111111111111111111111111111111))))

(declare-fun b!24431 () Bool)

(declare-fun res!14873 () Bool)

(assert (=> b!24431 (=> (not res!14873) (not e!15797))))

(assert (=> b!24431 (= res!14873 (validKeyInArray!0 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4449 res!14874) b!24430))

(assert (= (and b!24430 res!14872) b!24431))

(assert (= (and b!24431 res!14873) b!24432))

(assert (= (and d!4449 res!14875) b!24433))

(declare-fun m!18891 () Bool)

(assert (=> b!24430 m!18891))

(assert (=> b!24430 m!18891))

(declare-fun m!18893 () Bool)

(assert (=> b!24430 m!18893))

(declare-fun m!18895 () Bool)

(assert (=> d!4449 m!18895))

(assert (=> b!24433 m!17645))

(assert (=> b!24433 m!17633))

(assert (=> b!24433 m!17276))

(declare-fun m!18897 () Bool)

(assert (=> b!24431 m!18897))

(assert (=> d!4119 d!4449))

(declare-fun d!4451 () Bool)

(declare-fun e!15799 () Bool)

(assert (=> d!4451 e!15799))

(declare-fun res!14876 () Bool)

(assert (=> d!4451 (=> (not res!14876) (not e!15799))))

(assert (=> d!4451 (= res!14876 (and (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!700 lt!8774))))))

(declare-fun lt!9204 () Unit!514)

(assert (=> d!4451 (= lt!9204 (choose!208 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (defaultEntry!1743 lt!8162)))))

(assert (=> d!4451 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4451 (= (lemmaValidKeyInArrayIsInListMap!10 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (defaultEntry!1743 lt!8162)) lt!9204)))

(declare-fun b!24434 () Bool)

(assert (=> b!24434 (= e!15799 (contains!220 (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (select (arr!604 lt!8774) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))))))

(assert (= (and d!4451 res!14876) b!24434))

(declare-fun m!18899 () Bool)

(assert (=> d!4451 m!18899))

(assert (=> d!4451 m!17072))

(assert (=> b!24434 m!17621))

(declare-fun m!18901 () Bool)

(assert (=> b!24434 m!18901))

(assert (=> b!24434 m!17621))

(assert (=> b!24434 m!18901))

(declare-fun m!18903 () Bool)

(assert (=> b!24434 m!18903))

(assert (=> d!4119 d!4451))

(assert (=> d!4119 d!4089))

(declare-fun d!4453 () Bool)

(assert (=> d!4453 (arrayContainsKey!0 lt!8765 #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun lt!9207 () Unit!514)

(declare-fun choose!13 (array!1277 (_ BitVec 64) (_ BitVec 32)) Unit!514)

(assert (=> d!4453 (= lt!9207 (choose!13 lt!8765 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))

(assert (=> d!4453 (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000)))

(assert (=> d!4453 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8765 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))) lt!9207)))

(declare-fun bs!1011 () Bool)

(assert (= bs!1011 d!4453))

(assert (=> bs!1011 m!17641))

(declare-fun m!18905 () Bool)

(assert (=> bs!1011 m!18905))

(assert (=> d!4119 d!4453))

(declare-fun d!4455 () Bool)

(declare-fun lt!9208 () (_ BitVec 32))

(assert (=> d!4455 (and (bvsge lt!9208 #b00000000000000000000000000000000) (bvsle lt!9208 (bvsub (size!700 lt!8769) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))))))

(declare-fun e!15801 () (_ BitVec 32))

(assert (=> d!4455 (= lt!9208 e!15801)))

(declare-fun c!3291 () Bool)

(assert (=> d!4455 (= c!3291 (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001)))))

(assert (=> d!4455 (and (bvsle (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001)) (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001) (size!700 lt!8769)))))

(assert (=> d!4455 (= (arrayCountValidKeys!0 lt!8769 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001)) lt!9208)))

(declare-fun bm!2114 () Bool)

(declare-fun call!2117 () (_ BitVec 32))

(assert (=> bm!2114 (= call!2117 (arrayCountValidKeys!0 lt!8769 (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001) (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001)))))

(declare-fun b!24435 () Bool)

(declare-fun e!15800 () (_ BitVec 32))

(assert (=> b!24435 (= e!15800 (bvadd #b00000000000000000000000000000001 call!2117))))

(declare-fun b!24436 () Bool)

(assert (=> b!24436 (= e!15800 call!2117)))

(declare-fun b!24437 () Bool)

(assert (=> b!24437 (= e!15801 #b00000000000000000000000000000000)))

(declare-fun b!24438 () Bool)

(assert (=> b!24438 (= e!15801 e!15800)))

(declare-fun c!3290 () Bool)

(assert (=> b!24438 (= c!3290 (validKeyInArray!0 (select (arr!604 lt!8769) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))))))

(assert (= (and d!4455 c!3291) b!24437))

(assert (= (and d!4455 (not c!3291)) b!24438))

(assert (= (and b!24438 c!3290) b!24435))

(assert (= (and b!24438 (not c!3290)) b!24436))

(assert (= (or b!24435 b!24436) bm!2114))

(declare-fun m!18907 () Bool)

(assert (=> bm!2114 m!18907))

(declare-fun m!18909 () Bool)

(assert (=> b!24438 m!18909))

(assert (=> b!24438 m!18909))

(declare-fun m!18911 () Bool)

(assert (=> b!24438 m!18911))

(assert (=> d!4119 d!4455))

(declare-fun d!4457 () Bool)

(declare-fun e!15804 () Bool)

(assert (=> d!4457 e!15804))

(declare-fun res!14879 () Bool)

(assert (=> d!4457 (=> (not res!14879) (not e!15804))))

(assert (=> d!4457 (= res!14879 (and (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!700 (_keys!3164 lt!8162)))))))

(declare-fun lt!9211 () Unit!514)

(declare-fun choose!41 (array!1277 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!566) Unit!514)

(assert (=> d!4457 (= lt!9211 (choose!41 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) lt!8783 lt!8767))))

(assert (=> d!4457 (bvslt (size!700 (_keys!3164 lt!8162)) #b01111111111111111111111111111111)))

(assert (=> d!4457 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) lt!8783 lt!8767) lt!9211)))

(declare-fun b!24441 () Bool)

(assert (=> b!24441 (= e!15804 (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) lt!8783 lt!8767))))

(assert (= (and d!4457 res!14879) b!24441))

(declare-fun m!18913 () Bool)

(assert (=> d!4457 m!18913))

(assert (=> b!24441 m!17645))

(assert (=> b!24441 m!17635))

(assert (=> d!4119 d!4457))

(declare-fun b!24442 () Bool)

(declare-fun e!15809 () ListLongMap!553)

(declare-fun call!2124 () ListLongMap!553)

(assert (=> b!24442 (= e!15809 call!2124)))

(declare-fun b!24443 () Bool)

(declare-fun res!14888 () Bool)

(declare-fun e!15812 () Bool)

(assert (=> b!24443 (=> (not res!14888) (not e!15812))))

(declare-fun e!15807 () Bool)

(assert (=> b!24443 (= res!14888 e!15807)))

(declare-fun c!3292 () Bool)

(assert (=> b!24443 (= c!3292 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24444 () Bool)

(declare-fun e!15806 () Bool)

(declare-fun e!15814 () Bool)

(assert (=> b!24444 (= e!15806 e!15814)))

(declare-fun res!14884 () Bool)

(assert (=> b!24444 (=> (not res!14884) (not e!15814))))

(declare-fun lt!9221 () ListLongMap!553)

(assert (=> b!24444 (= res!14884 (contains!220 lt!9221 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000)))))

(assert (=> b!24444 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))

(declare-fun b!24445 () Bool)

(declare-fun e!15805 () Bool)

(declare-fun e!15813 () Bool)

(assert (=> b!24445 (= e!15805 e!15813)))

(declare-fun res!14887 () Bool)

(declare-fun call!2120 () Bool)

(assert (=> b!24445 (= res!14887 call!2120)))

(assert (=> b!24445 (=> (not res!14887) (not e!15813))))

(declare-fun b!24446 () Bool)

(declare-fun e!15817 () Unit!514)

(declare-fun lt!9212 () Unit!514)

(assert (=> b!24446 (= e!15817 lt!9212)))

(declare-fun lt!9217 () ListLongMap!553)

(assert (=> b!24446 (= lt!9217 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9228 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9228 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9229 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9229 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000))))

(declare-fun lt!9232 () Unit!514)

(assert (=> b!24446 (= lt!9232 (addStillContains!14 lt!9217 lt!9228 (zeroValue!1666 lt!8162) lt!9229))))

(assert (=> b!24446 (contains!220 (+!45 lt!9217 (tuple2!947 lt!9228 (zeroValue!1666 lt!8162))) lt!9229)))

(declare-fun lt!9226 () Unit!514)

(assert (=> b!24446 (= lt!9226 lt!9232)))

(declare-fun lt!9219 () ListLongMap!553)

(assert (=> b!24446 (= lt!9219 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9215 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9215 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9222 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9222 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000))))

(declare-fun lt!9225 () Unit!514)

(assert (=> b!24446 (= lt!9225 (addApplyDifferent!14 lt!9219 lt!9215 (minValue!1666 lt!8162) lt!9222))))

(assert (=> b!24446 (= (apply!29 (+!45 lt!9219 (tuple2!947 lt!9215 (minValue!1666 lt!8162))) lt!9222) (apply!29 lt!9219 lt!9222))))

(declare-fun lt!9216 () Unit!514)

(assert (=> b!24446 (= lt!9216 lt!9225)))

(declare-fun lt!9220 () ListLongMap!553)

(assert (=> b!24446 (= lt!9220 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9223 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9223 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9218 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9218 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000))))

(declare-fun lt!9224 () Unit!514)

(assert (=> b!24446 (= lt!9224 (addApplyDifferent!14 lt!9220 lt!9223 (zeroValue!1666 lt!8162) lt!9218))))

(assert (=> b!24446 (= (apply!29 (+!45 lt!9220 (tuple2!947 lt!9223 (zeroValue!1666 lt!8162))) lt!9218) (apply!29 lt!9220 lt!9218))))

(declare-fun lt!9233 () Unit!514)

(assert (=> b!24446 (= lt!9233 lt!9224)))

(declare-fun lt!9227 () ListLongMap!553)

(assert (=> b!24446 (= lt!9227 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9213 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9213 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9231 () (_ BitVec 64))

(assert (=> b!24446 (= lt!9231 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000))))

(assert (=> b!24446 (= lt!9212 (addApplyDifferent!14 lt!9227 lt!9213 (minValue!1666 lt!8162) lt!9231))))

(assert (=> b!24446 (= (apply!29 (+!45 lt!9227 (tuple2!947 lt!9213 (minValue!1666 lt!8162))) lt!9231) (apply!29 lt!9227 lt!9231))))

(declare-fun call!2123 () ListLongMap!553)

(declare-fun bm!2116 () Bool)

(assert (=> bm!2116 (= call!2123 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!24447 () Bool)

(declare-fun call!2121 () Bool)

(assert (=> b!24447 (= e!15807 (not call!2121))))

(declare-fun bm!2117 () Bool)

(declare-fun call!2118 () ListLongMap!553)

(declare-fun call!2122 () ListLongMap!553)

(assert (=> bm!2117 (= call!2118 call!2122)))

(declare-fun c!3295 () Bool)

(declare-fun c!3296 () Bool)

(declare-fun call!2119 () ListLongMap!553)

(declare-fun bm!2118 () Bool)

(assert (=> bm!2118 (= call!2122 (+!45 (ite c!3295 call!2123 (ite c!3296 call!2119 call!2124)) (ite (or c!3295 c!3296) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun b!24448 () Bool)

(declare-fun Unit!567 () Unit!514)

(assert (=> b!24448 (= e!15817 Unit!567)))

(declare-fun b!24449 () Bool)

(assert (=> b!24449 (= e!15805 (not call!2120))))

(declare-fun b!24450 () Bool)

(declare-fun c!3293 () Bool)

(assert (=> b!24450 (= c!3293 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15815 () ListLongMap!553)

(assert (=> b!24450 (= e!15815 e!15809)))

(declare-fun b!24451 () Bool)

(declare-fun e!15811 () ListLongMap!553)

(assert (=> b!24451 (= e!15811 e!15815)))

(assert (=> b!24451 (= c!3296 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2119 () Bool)

(assert (=> bm!2119 (= call!2124 call!2119)))

(declare-fun b!24452 () Bool)

(assert (=> b!24452 (= e!15813 (= (apply!29 lt!9221 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8162)))))

(declare-fun bm!2120 () Bool)

(assert (=> bm!2120 (= call!2119 call!2123)))

(declare-fun b!24453 () Bool)

(declare-fun e!15816 () Bool)

(assert (=> b!24453 (= e!15807 e!15816)))

(declare-fun res!14886 () Bool)

(assert (=> b!24453 (= res!14886 call!2121)))

(assert (=> b!24453 (=> (not res!14886) (not e!15816))))

(declare-fun d!4459 () Bool)

(assert (=> d!4459 e!15812))

(declare-fun res!14882 () Bool)

(assert (=> d!4459 (=> (not res!14882) (not e!15812))))

(assert (=> d!4459 (= res!14882 (or (bvsge #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))))

(declare-fun lt!9230 () ListLongMap!553)

(assert (=> d!4459 (= lt!9221 lt!9230)))

(declare-fun lt!9214 () Unit!514)

(assert (=> d!4459 (= lt!9214 e!15817)))

(declare-fun c!3297 () Bool)

(declare-fun e!15810 () Bool)

(assert (=> d!4459 (= c!3297 e!15810)))

(declare-fun res!14883 () Bool)

(assert (=> d!4459 (=> (not res!14883) (not e!15810))))

(assert (=> d!4459 (= res!14883 (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))

(assert (=> d!4459 (= lt!9230 e!15811)))

(assert (=> d!4459 (= c!3295 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4459 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4459 (= (getCurrentListMap!121 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9221)))

(declare-fun bm!2115 () Bool)

(assert (=> bm!2115 (= call!2121 (contains!220 lt!9221 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2121 () Bool)

(assert (=> bm!2121 (= call!2120 (contains!220 lt!9221 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24454 () Bool)

(assert (=> b!24454 (= e!15816 (= (apply!29 lt!9221 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8162)))))

(declare-fun b!24455 () Bool)

(declare-fun res!14881 () Bool)

(assert (=> b!24455 (=> (not res!14881) (not e!15812))))

(assert (=> b!24455 (= res!14881 e!15806)))

(declare-fun res!14880 () Bool)

(assert (=> b!24455 (=> res!14880 e!15806)))

(declare-fun e!15808 () Bool)

(assert (=> b!24455 (= res!14880 (not e!15808))))

(declare-fun res!14885 () Bool)

(assert (=> b!24455 (=> (not res!14885) (not e!15808))))

(assert (=> b!24455 (= res!14885 (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))

(declare-fun b!24456 () Bool)

(assert (=> b!24456 (= e!15810 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000)))))

(declare-fun b!24457 () Bool)

(assert (=> b!24457 (= e!15812 e!15805)))

(declare-fun c!3294 () Bool)

(assert (=> b!24457 (= c!3294 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24458 () Bool)

(assert (=> b!24458 (= e!15814 (= (apply!29 lt!9221 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24458 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))))))

(assert (=> b!24458 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))

(declare-fun b!24459 () Bool)

(assert (=> b!24459 (= e!15809 call!2118)))

(declare-fun b!24460 () Bool)

(assert (=> b!24460 (= e!15811 (+!45 call!2122 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(declare-fun b!24461 () Bool)

(assert (=> b!24461 (= e!15815 call!2118)))

(declare-fun b!24462 () Bool)

(assert (=> b!24462 (= e!15808 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000)))))

(assert (= (and d!4459 c!3295) b!24460))

(assert (= (and d!4459 (not c!3295)) b!24451))

(assert (= (and b!24451 c!3296) b!24461))

(assert (= (and b!24451 (not c!3296)) b!24450))

(assert (= (and b!24450 c!3293) b!24459))

(assert (= (and b!24450 (not c!3293)) b!24442))

(assert (= (or b!24459 b!24442) bm!2119))

(assert (= (or b!24461 bm!2119) bm!2120))

(assert (= (or b!24461 b!24459) bm!2117))

(assert (= (or b!24460 bm!2120) bm!2116))

(assert (= (or b!24460 bm!2117) bm!2118))

(assert (= (and d!4459 res!14883) b!24456))

(assert (= (and d!4459 c!3297) b!24446))

(assert (= (and d!4459 (not c!3297)) b!24448))

(assert (= (and d!4459 res!14882) b!24455))

(assert (= (and b!24455 res!14885) b!24462))

(assert (= (and b!24455 (not res!14880)) b!24444))

(assert (= (and b!24444 res!14884) b!24458))

(assert (= (and b!24455 res!14881) b!24443))

(assert (= (and b!24443 c!3292) b!24453))

(assert (= (and b!24443 (not c!3292)) b!24447))

(assert (= (and b!24453 res!14886) b!24454))

(assert (= (or b!24453 b!24447) bm!2115))

(assert (= (and b!24443 res!14888) b!24457))

(assert (= (and b!24457 c!3294) b!24445))

(assert (= (and b!24457 (not c!3294)) b!24449))

(assert (= (and b!24445 res!14887) b!24452))

(assert (= (or b!24445 b!24449) bm!2121))

(declare-fun b_lambda!1625 () Bool)

(assert (=> (not b_lambda!1625) (not b!24458)))

(assert (=> b!24458 t!3243))

(declare-fun b_and!1529 () Bool)

(assert (= b_and!1527 (and (=> t!3243 result!1103) b_and!1529)))

(declare-fun m!18915 () Bool)

(assert (=> bm!2115 m!18915))

(declare-fun m!18917 () Bool)

(assert (=> b!24452 m!18917))

(declare-fun m!18919 () Bool)

(assert (=> bm!2121 m!18919))

(declare-fun m!18921 () Bool)

(assert (=> bm!2118 m!18921))

(declare-fun m!18923 () Bool)

(assert (=> b!24460 m!18923))

(declare-fun m!18925 () Bool)

(assert (=> b!24444 m!18925))

(assert (=> b!24444 m!18925))

(declare-fun m!18927 () Bool)

(assert (=> b!24444 m!18927))

(assert (=> b!24462 m!18925))

(assert (=> b!24462 m!18925))

(declare-fun m!18929 () Bool)

(assert (=> b!24462 m!18929))

(assert (=> b!24456 m!18925))

(assert (=> b!24456 m!18925))

(assert (=> b!24456 m!18929))

(declare-fun m!18931 () Bool)

(assert (=> bm!2116 m!18931))

(declare-fun m!18933 () Bool)

(assert (=> b!24446 m!18933))

(declare-fun m!18935 () Bool)

(assert (=> b!24446 m!18935))

(declare-fun m!18937 () Bool)

(assert (=> b!24446 m!18937))

(declare-fun m!18939 () Bool)

(assert (=> b!24446 m!18939))

(assert (=> b!24446 m!18937))

(declare-fun m!18941 () Bool)

(assert (=> b!24446 m!18941))

(declare-fun m!18943 () Bool)

(assert (=> b!24446 m!18943))

(declare-fun m!18945 () Bool)

(assert (=> b!24446 m!18945))

(assert (=> b!24446 m!18931))

(declare-fun m!18947 () Bool)

(assert (=> b!24446 m!18947))

(declare-fun m!18949 () Bool)

(assert (=> b!24446 m!18949))

(declare-fun m!18951 () Bool)

(assert (=> b!24446 m!18951))

(declare-fun m!18953 () Bool)

(assert (=> b!24446 m!18953))

(declare-fun m!18955 () Bool)

(assert (=> b!24446 m!18955))

(assert (=> b!24446 m!18955))

(declare-fun m!18957 () Bool)

(assert (=> b!24446 m!18957))

(assert (=> b!24446 m!18945))

(declare-fun m!18959 () Bool)

(assert (=> b!24446 m!18959))

(assert (=> b!24446 m!18925))

(assert (=> b!24446 m!18953))

(declare-fun m!18961 () Bool)

(assert (=> b!24446 m!18961))

(declare-fun m!18963 () Bool)

(assert (=> b!24454 m!18963))

(assert (=> b!24458 m!17194))

(declare-fun m!18965 () Bool)

(assert (=> b!24458 m!18965))

(assert (=> b!24458 m!17194))

(declare-fun m!18967 () Bool)

(assert (=> b!24458 m!18967))

(assert (=> b!24458 m!18925))

(declare-fun m!18969 () Bool)

(assert (=> b!24458 m!18969))

(assert (=> b!24458 m!18965))

(assert (=> b!24458 m!18925))

(assert (=> d!4459 m!17072))

(assert (=> d!4119 d!4459))

(declare-fun d!4461 () Bool)

(declare-fun e!15820 () Bool)

(assert (=> d!4461 e!15820))

(declare-fun res!14891 () Bool)

(assert (=> d!4461 (=> (not res!14891) (not e!15820))))

(assert (=> d!4461 (= res!14891 (and (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!700 (_keys!3164 lt!8162)))))))

(declare-fun lt!9236 () Unit!514)

(declare-fun choose!102 ((_ BitVec 64) array!1277 (_ BitVec 32) (_ BitVec 32)) Unit!514)

(assert (=> d!4461 (= lt!9236 (choose!102 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (mask!4730 lt!8162)))))

(assert (=> d!4461 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4461 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (mask!4730 lt!8162)) lt!9236)))

(declare-fun b!24465 () Bool)

(assert (=> b!24465 (= e!15820 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (mask!4730 lt!8162)))))

(assert (= (and d!4461 res!14891) b!24465))

(declare-fun m!18971 () Bool)

(assert (=> d!4461 m!18971))

(assert (=> d!4461 m!17072))

(assert (=> b!24465 m!17645))

(assert (=> b!24465 m!17627))

(assert (=> d!4119 d!4461))

(declare-fun b!24466 () Bool)

(declare-fun e!15822 () Bool)

(assert (=> b!24466 (= e!15822 (contains!222 lt!8767 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) lt!8783)))))

(declare-fun b!24467 () Bool)

(declare-fun e!15821 () Bool)

(declare-fun e!15824 () Bool)

(assert (=> b!24467 (= e!15821 e!15824)))

(declare-fun res!14894 () Bool)

(assert (=> b!24467 (=> (not res!14894) (not e!15824))))

(assert (=> b!24467 (= res!14894 (not e!15822))))

(declare-fun res!14893 () Bool)

(assert (=> b!24467 (=> (not res!14893) (not e!15822))))

(assert (=> b!24467 (= res!14893 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) lt!8783)))))

(declare-fun b!24469 () Bool)

(declare-fun e!15823 () Bool)

(assert (=> b!24469 (= e!15824 e!15823)))

(declare-fun c!3298 () Bool)

(assert (=> b!24469 (= c!3298 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) lt!8783)))))

(declare-fun call!2125 () Bool)

(declare-fun bm!2122 () Bool)

(assert (=> bm!2122 (= call!2125 (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (bvadd lt!8783 #b00000000000000000000000000000001) (ite c!3298 (Cons!562 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) lt!8783) lt!8767) lt!8767)))))

(declare-fun b!24470 () Bool)

(assert (=> b!24470 (= e!15823 call!2125)))

(declare-fun b!24468 () Bool)

(assert (=> b!24468 (= e!15823 call!2125)))

(declare-fun d!4463 () Bool)

(declare-fun res!14892 () Bool)

(assert (=> d!4463 (=> res!14892 e!15821)))

(assert (=> d!4463 (= res!14892 (bvsge lt!8783 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))

(assert (=> d!4463 (= (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) lt!8783 lt!8767) e!15821)))

(assert (= (and d!4463 (not res!14892)) b!24467))

(assert (= (and b!24467 res!14893) b!24466))

(assert (= (and b!24467 res!14894) b!24469))

(assert (= (and b!24469 c!3298) b!24470))

(assert (= (and b!24469 (not c!3298)) b!24468))

(assert (= (or b!24470 b!24468) bm!2122))

(declare-fun m!18973 () Bool)

(assert (=> b!24466 m!18973))

(assert (=> b!24466 m!18973))

(declare-fun m!18975 () Bool)

(assert (=> b!24466 m!18975))

(assert (=> b!24467 m!18973))

(assert (=> b!24467 m!18973))

(declare-fun m!18977 () Bool)

(assert (=> b!24467 m!18977))

(assert (=> b!24469 m!18973))

(assert (=> b!24469 m!18973))

(assert (=> b!24469 m!18977))

(assert (=> bm!2122 m!18973))

(declare-fun m!18979 () Bool)

(assert (=> bm!2122 m!18979))

(assert (=> d!4119 d!4463))

(assert (=> d!4119 d!4059))

(declare-fun d!4465 () Bool)

(declare-fun e!15827 () Bool)

(assert (=> d!4465 e!15827))

(declare-fun res!14897 () Bool)

(assert (=> d!4465 (=> (not res!14897) (not e!15827))))

(assert (=> d!4465 (= res!14897 (and (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!700 (_keys!3164 lt!8162))) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!699 (_values!1729 lt!8162)))))))

(declare-fun lt!9239 () Unit!514)

(declare-fun choose!218 (array!1277 array!1275 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!514)

(assert (=> d!4465 (= lt!9239 (choose!218 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)))))

(assert (=> d!4465 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4465 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)) lt!9239)))

(declare-fun b!24473 () Bool)

(assert (=> b!24473 (= e!15827 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))))))

(assert (= (and d!4465 res!14897) b!24473))

(declare-fun m!18981 () Bool)

(assert (=> d!4465 m!18981))

(assert (=> d!4465 m!17072))

(assert (=> b!24473 m!17639))

(assert (=> b!24473 m!17647))

(assert (=> b!24473 m!16888))

(assert (=> b!24473 m!17080))

(assert (=> b!24473 m!17645))

(assert (=> b!24473 m!16888))

(assert (=> d!4119 d!4465))

(declare-fun d!4467 () Bool)

(declare-fun lt!9240 () (_ BitVec 32))

(assert (=> d!4467 (and (bvsge lt!9240 #b00000000000000000000000000000000) (bvsle lt!9240 (bvsub (size!700 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun e!15829 () (_ BitVec 32))

(assert (=> d!4467 (= lt!9240 e!15829)))

(declare-fun c!3300 () Bool)

(assert (=> d!4467 (= c!3300 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4467 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 lt!8162)) (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4467 (= (arrayCountValidKeys!0 (_keys!3164 lt!8162) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) lt!9240)))

(declare-fun bm!2123 () Bool)

(declare-fun call!2126 () (_ BitVec 32))

(assert (=> bm!2123 (= call!2126 (arrayCountValidKeys!0 (_keys!3164 lt!8162) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24474 () Bool)

(declare-fun e!15828 () (_ BitVec 32))

(assert (=> b!24474 (= e!15828 (bvadd #b00000000000000000000000000000001 call!2126))))

(declare-fun b!24475 () Bool)

(assert (=> b!24475 (= e!15828 call!2126)))

(declare-fun b!24476 () Bool)

(assert (=> b!24476 (= e!15829 #b00000000000000000000000000000000)))

(declare-fun b!24477 () Bool)

(assert (=> b!24477 (= e!15829 e!15828)))

(declare-fun c!3299 () Bool)

(assert (=> b!24477 (= c!3299 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4467 c!3300) b!24476))

(assert (= (and d!4467 (not c!3300)) b!24477))

(assert (= (and b!24477 c!3299) b!24474))

(assert (= (and b!24477 (not c!3299)) b!24475))

(assert (= (or b!24474 b!24475) bm!2123))

(declare-fun m!18983 () Bool)

(assert (=> bm!2123 m!18983))

(assert (=> b!24477 m!17154))

(assert (=> b!24477 m!17154))

(assert (=> b!24477 m!17158))

(assert (=> d!4119 d!4467))

(declare-fun d!4469 () Bool)

(assert (=> d!4469 (= (arrayCountValidKeys!0 lt!8769 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (bvadd (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!9243 () Unit!514)

(declare-fun choose!2 (array!1277 (_ BitVec 32)) Unit!514)

(assert (=> d!4469 (= lt!9243 (choose!2 lt!8769 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))

(declare-fun e!15832 () Bool)

(assert (=> d!4469 e!15832))

(declare-fun res!14902 () Bool)

(assert (=> d!4469 (=> (not res!14902) (not e!15832))))

(assert (=> d!4469 (= res!14902 (and (bvsge (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b00000000000000000000000000000000) (bvslt (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) (size!700 lt!8769))))))

(assert (=> d!4469 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8769 (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))) lt!9243)))

(declare-fun b!24482 () Bool)

(declare-fun res!14903 () Bool)

(assert (=> b!24482 (=> (not res!14903) (not e!15832))))

(assert (=> b!24482 (= res!14903 (validKeyInArray!0 (select (arr!604 lt!8769) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))))))

(declare-fun b!24483 () Bool)

(assert (=> b!24483 (= e!15832 (bvslt (size!700 lt!8769) #b01111111111111111111111111111111))))

(assert (= (and d!4469 res!14902) b!24482))

(assert (= (and b!24482 res!14903) b!24483))

(assert (=> d!4469 m!17631))

(declare-fun m!18985 () Bool)

(assert (=> d!4469 m!18985))

(assert (=> b!24482 m!18909))

(assert (=> b!24482 m!18909))

(assert (=> b!24482 m!18911))

(assert (=> d!4119 d!4469))

(declare-fun b!24484 () Bool)

(declare-fun e!15833 () Bool)

(declare-fun call!2127 () Bool)

(assert (=> b!24484 (= e!15833 call!2127)))

(declare-fun b!24485 () Bool)

(declare-fun e!15834 () Bool)

(assert (=> b!24485 (= e!15834 e!15833)))

(declare-fun lt!9244 () (_ BitVec 64))

(assert (=> b!24485 (= lt!9244 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000))))

(declare-fun lt!9245 () Unit!514)

(assert (=> b!24485 (= lt!9245 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) lt!9244 #b00000000000000000000000000000000))))

(assert (=> b!24485 (arrayContainsKey!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) lt!9244 #b00000000000000000000000000000000)))

(declare-fun lt!9246 () Unit!514)

(assert (=> b!24485 (= lt!9246 lt!9245)))

(declare-fun res!14904 () Bool)

(assert (=> b!24485 (= res!14904 (= (seekEntryOrOpen!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000) (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (mask!4730 lt!8162)) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24485 (=> (not res!14904) (not e!15833))))

(declare-fun b!24486 () Bool)

(assert (=> b!24486 (= e!15834 call!2127)))

(declare-fun d!4471 () Bool)

(declare-fun res!14905 () Bool)

(declare-fun e!15835 () Bool)

(assert (=> d!4471 (=> res!14905 e!15835)))

(assert (=> d!4471 (= res!14905 (bvsge #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))

(assert (=> d!4471 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (mask!4730 lt!8162)) e!15835)))

(declare-fun bm!2124 () Bool)

(assert (=> bm!2124 (= call!2127 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (mask!4730 lt!8162)))))

(declare-fun b!24487 () Bool)

(assert (=> b!24487 (= e!15835 e!15834)))

(declare-fun c!3301 () Bool)

(assert (=> b!24487 (= c!3301 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000)))))

(assert (= (and d!4471 (not res!14905)) b!24487))

(assert (= (and b!24487 c!3301) b!24485))

(assert (= (and b!24487 (not c!3301)) b!24486))

(assert (= (and b!24485 res!14904) b!24484))

(assert (= (or b!24484 b!24486) bm!2124))

(assert (=> b!24485 m!18925))

(declare-fun m!18987 () Bool)

(assert (=> b!24485 m!18987))

(declare-fun m!18989 () Bool)

(assert (=> b!24485 m!18989))

(assert (=> b!24485 m!18925))

(declare-fun m!18991 () Bool)

(assert (=> b!24485 m!18991))

(declare-fun m!18993 () Bool)

(assert (=> bm!2124 m!18993))

(assert (=> b!24487 m!18925))

(assert (=> b!24487 m!18925))

(assert (=> b!24487 m!18929))

(assert (=> d!4119 d!4471))

(declare-fun d!4473 () Bool)

(declare-fun lt!9247 () (_ BitVec 32))

(assert (=> d!4473 (and (bvsge lt!9247 #b00000000000000000000000000000000) (bvsle lt!9247 (bvsub (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000)))))

(declare-fun e!15837 () (_ BitVec 32))

(assert (=> d!4473 (= lt!9247 e!15837)))

(declare-fun c!3303 () Bool)

(assert (=> d!4473 (= c!3303 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4473 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 lt!8162)) (size!700 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))))))))

(assert (=> d!4473 (= (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) lt!9247)))

(declare-fun call!2128 () (_ BitVec 32))

(declare-fun bm!2125 () Bool)

(assert (=> bm!2125 (= call!2128 (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24488 () Bool)

(declare-fun e!15836 () (_ BitVec 32))

(assert (=> b!24488 (= e!15836 (bvadd #b00000000000000000000000000000001 call!2128))))

(declare-fun b!24489 () Bool)

(assert (=> b!24489 (= e!15836 call!2128)))

(declare-fun b!24490 () Bool)

(assert (=> b!24490 (= e!15837 #b00000000000000000000000000000000)))

(declare-fun b!24491 () Bool)

(assert (=> b!24491 (= e!15837 e!15836)))

(declare-fun c!3302 () Bool)

(assert (=> b!24491 (= c!3302 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (size!700 (_keys!3164 lt!8162)))) #b00000000000000000000000000000000)))))

(assert (= (and d!4473 c!3303) b!24490))

(assert (= (and d!4473 (not c!3303)) b!24491))

(assert (= (and b!24491 c!3302) b!24488))

(assert (= (and b!24491 (not c!3302)) b!24489))

(assert (= (or b!24488 b!24489) bm!2125))

(declare-fun m!18995 () Bool)

(assert (=> bm!2125 m!18995))

(assert (=> b!24491 m!18925))

(assert (=> b!24491 m!18925))

(assert (=> b!24491 m!18929))

(assert (=> d!4119 d!4473))

(declare-fun d!4475 () Bool)

(declare-fun e!15838 () Bool)

(assert (=> d!4475 e!15838))

(declare-fun res!14906 () Bool)

(assert (=> d!4475 (=> res!14906 e!15838)))

(declare-fun lt!9249 () Bool)

(assert (=> d!4475 (= res!14906 (not lt!9249))))

(declare-fun lt!9250 () Bool)

(assert (=> d!4475 (= lt!9249 lt!9250)))

(declare-fun lt!9248 () Unit!514)

(declare-fun e!15839 () Unit!514)

(assert (=> d!4475 (= lt!9248 e!15839)))

(declare-fun c!3304 () Bool)

(assert (=> d!4475 (= c!3304 lt!9250)))

(assert (=> d!4475 (= lt!9250 (containsKey!25 (toList!292 (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))))))

(assert (=> d!4475 (= (contains!220 (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (select (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))) lt!9249)))

(declare-fun b!24492 () Bool)

(declare-fun lt!9251 () Unit!514)

(assert (=> b!24492 (= e!15839 lt!9251)))

(assert (=> b!24492 (= lt!9251 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))))))

(assert (=> b!24492 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)))))))

(declare-fun b!24493 () Bool)

(declare-fun Unit!568 () Unit!514)

(assert (=> b!24493 (= e!15839 Unit!568)))

(declare-fun b!24494 () Bool)

(assert (=> b!24494 (= e!15838 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 lt!8774 lt!8788 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (store (arr!604 (_keys!3164 lt!8162)) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282)) #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!3005 (index!2360 lt!8282) (index!2357 lt!8282))))))))

(assert (= (and d!4475 c!3304) b!24492))

(assert (= (and d!4475 (not c!3304)) b!24493))

(assert (= (and d!4475 (not res!14906)) b!24494))

(assert (=> d!4475 m!17623))

(declare-fun m!18997 () Bool)

(assert (=> d!4475 m!18997))

(assert (=> b!24492 m!17623))

(declare-fun m!18999 () Bool)

(assert (=> b!24492 m!18999))

(assert (=> b!24492 m!17623))

(declare-fun m!19001 () Bool)

(assert (=> b!24492 m!19001))

(assert (=> b!24492 m!19001))

(declare-fun m!19003 () Bool)

(assert (=> b!24492 m!19003))

(assert (=> b!24494 m!17623))

(assert (=> b!24494 m!19001))

(assert (=> b!24494 m!19001))

(assert (=> b!24494 m!19003))

(assert (=> d!4119 d!4475))

(declare-fun d!4477 () Bool)

(declare-fun e!15840 () Bool)

(assert (=> d!4477 e!15840))

(declare-fun res!14907 () Bool)

(assert (=> d!4477 (=> (not res!14907) (not e!15840))))

(declare-fun lt!9252 () ListLongMap!553)

(assert (=> d!4477 (= res!14907 (contains!220 lt!9252 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!9255 () List!565)

(assert (=> d!4477 (= lt!9252 (ListLongMap!554 lt!9255))))

(declare-fun lt!9253 () Unit!514)

(declare-fun lt!9254 () Unit!514)

(assert (=> d!4477 (= lt!9253 lt!9254)))

(assert (=> d!4477 (= (getValueByKey!61 lt!9255 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4477 (= lt!9254 (lemmaContainsTupThenGetReturnValue!18 lt!9255 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4477 (= lt!9255 (insertStrictlySorted!18 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4477 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9252)))

(declare-fun b!24495 () Bool)

(declare-fun res!14908 () Bool)

(assert (=> b!24495 (=> (not res!14908) (not e!15840))))

(assert (=> b!24495 (= res!14908 (= (getValueByKey!61 (toList!292 lt!9252) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24496 () Bool)

(assert (=> b!24496 (= e!15840 (contains!221 (toList!292 lt!9252) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4477 res!14907) b!24495))

(assert (= (and b!24495 res!14908) b!24496))

(declare-fun m!19005 () Bool)

(assert (=> d!4477 m!19005))

(declare-fun m!19007 () Bool)

(assert (=> d!4477 m!19007))

(declare-fun m!19009 () Bool)

(assert (=> d!4477 m!19009))

(declare-fun m!19011 () Bool)

(assert (=> d!4477 m!19011))

(declare-fun m!19013 () Bool)

(assert (=> b!24495 m!19013))

(declare-fun m!19015 () Bool)

(assert (=> b!24496 m!19015))

(assert (=> d!4119 d!4477))

(declare-fun d!4479 () Bool)

(declare-fun res!14909 () Bool)

(declare-fun e!15841 () Bool)

(assert (=> d!4479 (=> res!14909 e!15841)))

(assert (=> d!4479 (= res!14909 (= (select (arr!604 lt!8765) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4479 (= (arrayContainsKey!0 lt!8765 #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000) e!15841)))

(declare-fun b!24497 () Bool)

(declare-fun e!15842 () Bool)

(assert (=> b!24497 (= e!15841 e!15842)))

(declare-fun res!14910 () Bool)

(assert (=> b!24497 (=> (not res!14910) (not e!15842))))

(assert (=> b!24497 (= res!14910 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 lt!8765)))))

(declare-fun b!24498 () Bool)

(assert (=> b!24498 (= e!15842 (arrayContainsKey!0 lt!8765 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4479 (not res!14909)) b!24497))

(assert (= (and b!24497 res!14910) b!24498))

(declare-fun m!19017 () Bool)

(assert (=> d!4479 m!19017))

(declare-fun m!19019 () Bool)

(assert (=> b!24498 m!19019))

(assert (=> d!4119 d!4479))

(declare-fun d!4481 () Bool)

(assert (=> d!4481 (arrayContainsKey!0 lt!8350 lt!8757 #b00000000000000000000000000000000)))

(declare-fun lt!9256 () Unit!514)

(assert (=> d!4481 (= lt!9256 (choose!13 lt!8350 lt!8757 lt!8353))))

(assert (=> d!4481 (bvsge lt!8353 #b00000000000000000000000000000000)))

(assert (=> d!4481 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8350 lt!8757 lt!8353) lt!9256)))

(declare-fun bs!1012 () Bool)

(assert (= bs!1012 d!4481))

(assert (=> bs!1012 m!17611))

(declare-fun m!19021 () Bool)

(assert (=> bs!1012 m!19021))

(assert (=> b!23843 d!4481))

(declare-fun d!4483 () Bool)

(declare-fun res!14911 () Bool)

(declare-fun e!15843 () Bool)

(assert (=> d!4483 (=> res!14911 e!15843)))

(assert (=> d!4483 (= res!14911 (= (select (arr!604 lt!8350) #b00000000000000000000000000000000) lt!8757))))

(assert (=> d!4483 (= (arrayContainsKey!0 lt!8350 lt!8757 #b00000000000000000000000000000000) e!15843)))

(declare-fun b!24499 () Bool)

(declare-fun e!15844 () Bool)

(assert (=> b!24499 (= e!15843 e!15844)))

(declare-fun res!14912 () Bool)

(assert (=> b!24499 (=> (not res!14912) (not e!15844))))

(assert (=> b!24499 (= res!14912 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 lt!8350)))))

(declare-fun b!24500 () Bool)

(assert (=> b!24500 (= e!15844 (arrayContainsKey!0 lt!8350 lt!8757 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4483 (not res!14911)) b!24499))

(assert (= (and b!24499 res!14912) b!24500))

(declare-fun m!19023 () Bool)

(assert (=> d!4483 m!19023))

(declare-fun m!19025 () Bool)

(assert (=> b!24500 m!19025))

(assert (=> b!23843 d!4483))

(declare-fun b!24501 () Bool)

(declare-fun e!15846 () SeekEntryResult!59)

(declare-fun lt!9257 () SeekEntryResult!59)

(assert (=> b!24501 (= e!15846 (MissingZero!59 (index!2359 lt!9257)))))

(declare-fun b!24502 () Bool)

(declare-fun e!15847 () SeekEntryResult!59)

(assert (=> b!24502 (= e!15847 Undefined!59)))

(declare-fun b!24504 () Bool)

(declare-fun e!15845 () SeekEntryResult!59)

(assert (=> b!24504 (= e!15845 (Found!59 (index!2359 lt!9257)))))

(declare-fun b!24503 () Bool)

(assert (=> b!24503 (= e!15846 (seekKeyOrZeroReturnVacant!0 (x!5581 lt!9257) (index!2359 lt!9257) (index!2359 lt!9257) (select (arr!604 lt!8350) lt!8353) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun d!4485 () Bool)

(declare-fun lt!9258 () SeekEntryResult!59)

(assert (=> d!4485 (and (or ((_ is Undefined!59) lt!9258) (not ((_ is Found!59) lt!9258)) (and (bvsge (index!2358 lt!9258) #b00000000000000000000000000000000) (bvslt (index!2358 lt!9258) (size!700 lt!8350)))) (or ((_ is Undefined!59) lt!9258) ((_ is Found!59) lt!9258) (not ((_ is MissingZero!59) lt!9258)) (and (bvsge (index!2357 lt!9258) #b00000000000000000000000000000000) (bvslt (index!2357 lt!9258) (size!700 lt!8350)))) (or ((_ is Undefined!59) lt!9258) ((_ is Found!59) lt!9258) ((_ is MissingZero!59) lt!9258) (not ((_ is MissingVacant!59) lt!9258)) (and (bvsge (index!2360 lt!9258) #b00000000000000000000000000000000) (bvslt (index!2360 lt!9258) (size!700 lt!8350)))) (or ((_ is Undefined!59) lt!9258) (ite ((_ is Found!59) lt!9258) (= (select (arr!604 lt!8350) (index!2358 lt!9258)) (select (arr!604 lt!8350) lt!8353)) (ite ((_ is MissingZero!59) lt!9258) (= (select (arr!604 lt!8350) (index!2357 lt!9258)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!59) lt!9258) (= (select (arr!604 lt!8350) (index!2360 lt!9258)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!4485 (= lt!9258 e!15847)))

(declare-fun c!3307 () Bool)

(assert (=> d!4485 (= c!3307 (and ((_ is Intermediate!59) lt!9257) (undefined!871 lt!9257)))))

(assert (=> d!4485 (= lt!9257 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!604 lt!8350) lt!8353) (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (select (arr!604 lt!8350) lt!8353) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4485 (validMask!0 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4485 (= (seekEntryOrOpen!0 (select (arr!604 lt!8350) lt!8353) lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) lt!9258)))

(declare-fun b!24505 () Bool)

(declare-fun c!3305 () Bool)

(declare-fun lt!9259 () (_ BitVec 64))

(assert (=> b!24505 (= c!3305 (= lt!9259 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24505 (= e!15845 e!15846)))

(declare-fun b!24506 () Bool)

(assert (=> b!24506 (= e!15847 e!15845)))

(assert (=> b!24506 (= lt!9259 (select (arr!604 lt!8350) (index!2359 lt!9257)))))

(declare-fun c!3306 () Bool)

(assert (=> b!24506 (= c!3306 (= lt!9259 (select (arr!604 lt!8350) lt!8353)))))

(assert (= (and d!4485 c!3307) b!24502))

(assert (= (and d!4485 (not c!3307)) b!24506))

(assert (= (and b!24506 c!3306) b!24504))

(assert (= (and b!24506 (not c!3306)) b!24505))

(assert (= (and b!24505 c!3305) b!24501))

(assert (= (and b!24505 (not c!3305)) b!24503))

(assert (=> b!24503 m!17607))

(assert (=> b!24503 m!16758))

(declare-fun m!19027 () Bool)

(assert (=> b!24503 m!19027))

(declare-fun m!19029 () Bool)

(assert (=> d!4485 m!19029))

(declare-fun m!19031 () Bool)

(assert (=> d!4485 m!19031))

(declare-fun m!19033 () Bool)

(assert (=> d!4485 m!19033))

(declare-fun m!19035 () Bool)

(assert (=> d!4485 m!19035))

(assert (=> d!4485 m!17607))

(assert (=> d!4485 m!16758))

(declare-fun m!19037 () Bool)

(assert (=> d!4485 m!19037))

(assert (=> d!4485 m!17607))

(assert (=> d!4485 m!16758))

(assert (=> d!4485 m!19035))

(assert (=> d!4485 m!16758))

(assert (=> d!4485 m!16930))

(declare-fun m!19039 () Bool)

(assert (=> b!24506 m!19039))

(assert (=> b!23843 d!4485))

(declare-fun d!4487 () Bool)

(declare-fun e!15848 () Bool)

(assert (=> d!4487 e!15848))

(declare-fun res!14913 () Bool)

(assert (=> d!4487 (=> res!14913 e!15848)))

(declare-fun lt!9261 () Bool)

(assert (=> d!4487 (= res!14913 (not lt!9261))))

(declare-fun lt!9262 () Bool)

(assert (=> d!4487 (= lt!9261 lt!9262)))

(declare-fun lt!9260 () Unit!514)

(declare-fun e!15849 () Unit!514)

(assert (=> d!4487 (= lt!9260 e!15849)))

(declare-fun c!3308 () Bool)

(assert (=> d!4487 (= c!3308 lt!9262)))

(assert (=> d!4487 (= lt!9262 (containsKey!25 (toList!292 lt!8694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4487 (= (contains!220 lt!8694 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9261)))

(declare-fun b!24507 () Bool)

(declare-fun lt!9263 () Unit!514)

(assert (=> b!24507 (= e!15849 lt!9263)))

(assert (=> b!24507 (= lt!9263 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24507 (isDefined!23 (getValueByKey!61 (toList!292 lt!8694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24508 () Bool)

(declare-fun Unit!569 () Unit!514)

(assert (=> b!24508 (= e!15849 Unit!569)))

(declare-fun b!24509 () Bool)

(assert (=> b!24509 (= e!15848 (isDefined!23 (getValueByKey!61 (toList!292 lt!8694) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4487 c!3308) b!24507))

(assert (= (and d!4487 (not c!3308)) b!24508))

(assert (= (and d!4487 (not res!14913)) b!24509))

(declare-fun m!19041 () Bool)

(assert (=> d!4487 m!19041))

(declare-fun m!19043 () Bool)

(assert (=> b!24507 m!19043))

(declare-fun m!19045 () Bool)

(assert (=> b!24507 m!19045))

(assert (=> b!24507 m!19045))

(declare-fun m!19047 () Bool)

(assert (=> b!24507 m!19047))

(assert (=> b!24509 m!19045))

(assert (=> b!24509 m!19045))

(assert (=> b!24509 m!19047))

(assert (=> bm!2018 d!4487))

(assert (=> bm!2043 d!4049))

(declare-fun d!4489 () Bool)

(declare-fun e!15850 () Bool)

(assert (=> d!4489 e!15850))

(declare-fun res!14914 () Bool)

(assert (=> d!4489 (=> res!14914 e!15850)))

(declare-fun lt!9265 () Bool)

(assert (=> d!4489 (= res!14914 (not lt!9265))))

(declare-fun lt!9266 () Bool)

(assert (=> d!4489 (= lt!9265 lt!9266)))

(declare-fun lt!9264 () Unit!514)

(declare-fun e!15851 () Unit!514)

(assert (=> d!4489 (= lt!9264 e!15851)))

(declare-fun c!3309 () Bool)

(assert (=> d!4489 (= c!3309 lt!9266)))

(assert (=> d!4489 (= lt!9266 (containsKey!25 (toList!292 lt!8722) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4489 (= (contains!220 lt!8722 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9265)))

(declare-fun b!24510 () Bool)

(declare-fun lt!9267 () Unit!514)

(assert (=> b!24510 (= e!15851 lt!9267)))

(assert (=> b!24510 (= lt!9267 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8722) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24510 (isDefined!23 (getValueByKey!61 (toList!292 lt!8722) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24511 () Bool)

(declare-fun Unit!570 () Unit!514)

(assert (=> b!24511 (= e!15851 Unit!570)))

(declare-fun b!24512 () Bool)

(assert (=> b!24512 (= e!15850 (isDefined!23 (getValueByKey!61 (toList!292 lt!8722) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4489 c!3309) b!24510))

(assert (= (and d!4489 (not c!3309)) b!24511))

(assert (= (and d!4489 (not res!14914)) b!24512))

(declare-fun m!19049 () Bool)

(assert (=> d!4489 m!19049))

(declare-fun m!19051 () Bool)

(assert (=> b!24510 m!19051))

(assert (=> b!24510 m!18823))

(assert (=> b!24510 m!18823))

(declare-fun m!19053 () Bool)

(assert (=> b!24510 m!19053))

(assert (=> b!24512 m!18823))

(assert (=> b!24512 m!18823))

(assert (=> b!24512 m!19053))

(assert (=> bm!2025 d!4489))

(declare-fun d!4491 () Bool)

(declare-fun e!15858 () Bool)

(assert (=> d!4491 e!15858))

(declare-fun res!14916 () Bool)

(assert (=> d!4491 (=> (not res!14916) (not e!15858))))

(declare-fun lt!9270 () ListLongMap!553)

(assert (=> d!4491 (= res!14916 (not (contains!220 lt!9270 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15856 () ListLongMap!553)

(assert (=> d!4491 (= lt!9270 e!15856)))

(declare-fun c!3311 () Bool)

(assert (=> d!4491 (= c!3311 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4491 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4491 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9270)))

(declare-fun b!24513 () Bool)

(declare-fun res!14917 () Bool)

(assert (=> b!24513 (=> (not res!14917) (not e!15858))))

(assert (=> b!24513 (= res!14917 (not (contains!220 lt!9270 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24514 () Bool)

(declare-fun e!15855 () Bool)

(declare-fun e!15854 () Bool)

(assert (=> b!24514 (= e!15855 e!15854)))

(declare-fun c!3313 () Bool)

(assert (=> b!24514 (= c!3313 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24515 () Bool)

(assert (=> b!24515 (= e!15854 (= lt!9270 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24516 () Bool)

(assert (=> b!24516 (= e!15856 (ListLongMap!554 Nil!562))))

(declare-fun b!24517 () Bool)

(declare-fun e!15853 () ListLongMap!553)

(declare-fun call!2129 () ListLongMap!553)

(assert (=> b!24517 (= e!15853 call!2129)))

(declare-fun bm!2126 () Bool)

(assert (=> bm!2126 (= call!2129 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24518 () Bool)

(assert (=> b!24518 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> b!24518 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261))))))

(declare-fun e!15857 () Bool)

(assert (=> b!24518 (= e!15857 (= (apply!29 lt!9270 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15852 () Bool)

(declare-fun b!24519 () Bool)

(assert (=> b!24519 (= e!15852 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24519 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24520 () Bool)

(assert (=> b!24520 (= e!15856 e!15853)))

(declare-fun c!3310 () Bool)

(assert (=> b!24520 (= c!3310 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24521 () Bool)

(assert (=> b!24521 (= e!15855 e!15857)))

(assert (=> b!24521 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun res!14918 () Bool)

(assert (=> b!24521 (= res!14918 (contains!220 lt!9270 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24521 (=> (not res!14918) (not e!15857))))

(declare-fun b!24522 () Bool)

(assert (=> b!24522 (= e!15854 (isEmpty!173 lt!9270))))

(declare-fun b!24523 () Bool)

(declare-fun lt!9273 () Unit!514)

(declare-fun lt!9274 () Unit!514)

(assert (=> b!24523 (= lt!9273 lt!9274)))

(declare-fun lt!9268 () (_ BitVec 64))

(declare-fun lt!9271 () (_ BitVec 64))

(declare-fun lt!9272 () ListLongMap!553)

(declare-fun lt!9269 () V!1189)

(assert (=> b!24523 (not (contains!220 (+!45 lt!9272 (tuple2!947 lt!9268 lt!9269)) lt!9271))))

(assert (=> b!24523 (= lt!9274 (addStillNotContains!2 lt!9272 lt!9268 lt!9269 lt!9271))))

(assert (=> b!24523 (= lt!9271 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24523 (= lt!9269 (get!390 (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24523 (= lt!9268 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!24523 (= lt!9272 call!2129)))

(assert (=> b!24523 (= e!15853 (+!45 call!2129 (tuple2!947 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (get!390 (select (arr!603 (ite c!2997 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24524 () Bool)

(assert (=> b!24524 (= e!15858 e!15855)))

(declare-fun c!3312 () Bool)

(assert (=> b!24524 (= c!3312 e!15852)))

(declare-fun res!14915 () Bool)

(assert (=> b!24524 (=> (not res!14915) (not e!15852))))

(assert (=> b!24524 (= res!14915 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4491 c!3311) b!24516))

(assert (= (and d!4491 (not c!3311)) b!24520))

(assert (= (and b!24520 c!3310) b!24523))

(assert (= (and b!24520 (not c!3310)) b!24517))

(assert (= (or b!24523 b!24517) bm!2126))

(assert (= (and d!4491 res!14916) b!24513))

(assert (= (and b!24513 res!14917) b!24524))

(assert (= (and b!24524 res!14915) b!24519))

(assert (= (and b!24524 c!3312) b!24521))

(assert (= (and b!24524 (not c!3312)) b!24514))

(assert (= (and b!24521 res!14918) b!24518))

(assert (= (and b!24514 c!3313) b!24515))

(assert (= (and b!24514 (not c!3313)) b!24522))

(declare-fun b_lambda!1627 () Bool)

(assert (=> (not b_lambda!1627) (not b!24518)))

(assert (=> b!24518 t!3241))

(declare-fun b_and!1531 () Bool)

(assert (= b_and!1529 (and (=> t!3241 result!1101) b_and!1531)))

(declare-fun b_lambda!1629 () Bool)

(assert (=> (not b_lambda!1629) (not b!24523)))

(assert (=> b!24523 t!3241))

(declare-fun b_and!1533 () Bool)

(assert (= b_and!1531 (and (=> t!3241 result!1101) b_and!1533)))

(assert (=> b!24520 m!16992))

(assert (=> b!24520 m!16992))

(assert (=> b!24520 m!16996))

(declare-fun m!19055 () Bool)

(assert (=> b!24522 m!19055))

(declare-fun m!19057 () Bool)

(assert (=> b!24523 m!19057))

(declare-fun m!19059 () Bool)

(assert (=> b!24523 m!19059))

(assert (=> b!24523 m!17034))

(assert (=> b!24523 m!17032))

(assert (=> b!24523 m!17036))

(declare-fun m!19061 () Bool)

(assert (=> b!24523 m!19061))

(assert (=> b!24523 m!17032))

(assert (=> b!24523 m!17034))

(assert (=> b!24523 m!19057))

(declare-fun m!19063 () Bool)

(assert (=> b!24523 m!19063))

(assert (=> b!24523 m!16992))

(assert (=> b!24519 m!16992))

(assert (=> b!24519 m!16992))

(assert (=> b!24519 m!16996))

(declare-fun m!19065 () Bool)

(assert (=> bm!2126 m!19065))

(assert (=> b!24515 m!19065))

(declare-fun m!19067 () Bool)

(assert (=> b!24513 m!19067))

(assert (=> b!24521 m!16992))

(assert (=> b!24521 m!16992))

(declare-fun m!19069 () Bool)

(assert (=> b!24521 m!19069))

(declare-fun m!19071 () Bool)

(assert (=> d!4491 m!19071))

(assert (=> d!4491 m!16948))

(assert (=> b!24518 m!17034))

(assert (=> b!24518 m!17032))

(assert (=> b!24518 m!17036))

(assert (=> b!24518 m!16992))

(declare-fun m!19073 () Bool)

(assert (=> b!24518 m!19073))

(assert (=> b!24518 m!16992))

(assert (=> b!24518 m!17032))

(assert (=> b!24518 m!17034))

(assert (=> bm!1971 d!4491))

(declare-fun d!4493 () Bool)

(declare-fun lt!9277 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!15 (List!566) (InoxSet (_ BitVec 64)))

(assert (=> d!4493 (= lt!9277 (select (content!15 lt!8339) (select (arr!604 lt!8357) lt!8340)))))

(declare-fun e!15864 () Bool)

(assert (=> d!4493 (= lt!9277 e!15864)))

(declare-fun res!14923 () Bool)

(assert (=> d!4493 (=> (not res!14923) (not e!15864))))

(assert (=> d!4493 (= res!14923 ((_ is Cons!562) lt!8339))))

(assert (=> d!4493 (= (contains!222 lt!8339 (select (arr!604 lt!8357) lt!8340)) lt!9277)))

(declare-fun b!24529 () Bool)

(declare-fun e!15863 () Bool)

(assert (=> b!24529 (= e!15864 e!15863)))

(declare-fun res!14924 () Bool)

(assert (=> b!24529 (=> res!14924 e!15863)))

(assert (=> b!24529 (= res!14924 (= (h!1128 lt!8339) (select (arr!604 lt!8357) lt!8340)))))

(declare-fun b!24530 () Bool)

(assert (=> b!24530 (= e!15863 (contains!222 (t!3239 lt!8339) (select (arr!604 lt!8357) lt!8340)))))

(assert (= (and d!4493 res!14923) b!24529))

(assert (= (and b!24529 (not res!14924)) b!24530))

(declare-fun m!19075 () Bool)

(assert (=> d!4493 m!19075))

(assert (=> d!4493 m!17579))

(declare-fun m!19077 () Bool)

(assert (=> d!4493 m!19077))

(assert (=> b!24530 m!17579))

(declare-fun m!19079 () Bool)

(assert (=> b!24530 m!19079))

(assert (=> b!23814 d!4493))

(assert (=> d!4065 d!4089))

(declare-fun d!4495 () Bool)

(assert (=> d!4495 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> d!4495 true))

(declare-fun _$7!37 () Unit!514)

(assert (=> d!4495 (= (choose!206 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) lt!8265 (zeroValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) (defaultEntry!1743 lt!8162)) _$7!37)))

(declare-fun bs!1013 () Bool)

(assert (= bs!1013 d!4495))

(assert (=> bs!1013 m!16888))

(assert (=> bs!1013 m!16888))

(assert (=> bs!1013 m!17080))

(assert (=> bs!1013 m!17348))

(assert (=> d!4065 d!4495))

(declare-fun b!24531 () Bool)

(declare-fun e!15869 () ListLongMap!553)

(declare-fun call!2136 () ListLongMap!553)

(assert (=> b!24531 (= e!15869 call!2136)))

(declare-fun b!24532 () Bool)

(declare-fun res!14933 () Bool)

(declare-fun e!15872 () Bool)

(assert (=> b!24532 (=> (not res!14933) (not e!15872))))

(declare-fun e!15867 () Bool)

(assert (=> b!24532 (= res!14933 e!15867)))

(declare-fun c!3314 () Bool)

(assert (=> b!24532 (= c!3314 (not (= (bvand lt!8265 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24533 () Bool)

(declare-fun e!15866 () Bool)

(declare-fun e!15874 () Bool)

(assert (=> b!24533 (= e!15866 e!15874)))

(declare-fun res!14929 () Bool)

(assert (=> b!24533 (=> (not res!14929) (not e!15874))))

(declare-fun lt!9287 () ListLongMap!553)

(assert (=> b!24533 (= res!14929 (contains!220 lt!9287 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24533 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24534 () Bool)

(declare-fun e!15865 () Bool)

(declare-fun e!15873 () Bool)

(assert (=> b!24534 (= e!15865 e!15873)))

(declare-fun res!14932 () Bool)

(declare-fun call!2132 () Bool)

(assert (=> b!24534 (= res!14932 call!2132)))

(assert (=> b!24534 (=> (not res!14932) (not e!15873))))

(declare-fun b!24535 () Bool)

(declare-fun e!15877 () Unit!514)

(declare-fun lt!9278 () Unit!514)

(assert (=> b!24535 (= e!15877 lt!9278)))

(declare-fun lt!9283 () ListLongMap!553)

(assert (=> b!24535 (= lt!9283 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9294 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9294 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9295 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9295 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9298 () Unit!514)

(assert (=> b!24535 (= lt!9298 (addStillContains!14 lt!9283 lt!9294 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9295))))

(assert (=> b!24535 (contains!220 (+!45 lt!9283 (tuple2!947 lt!9294 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9295)))

(declare-fun lt!9292 () Unit!514)

(assert (=> b!24535 (= lt!9292 lt!9298)))

(declare-fun lt!9285 () ListLongMap!553)

(assert (=> b!24535 (= lt!9285 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9281 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9281 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9288 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9288 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9291 () Unit!514)

(assert (=> b!24535 (= lt!9291 (addApplyDifferent!14 lt!9285 lt!9281 (minValue!1666 lt!8162) lt!9288))))

(assert (=> b!24535 (= (apply!29 (+!45 lt!9285 (tuple2!947 lt!9281 (minValue!1666 lt!8162))) lt!9288) (apply!29 lt!9285 lt!9288))))

(declare-fun lt!9282 () Unit!514)

(assert (=> b!24535 (= lt!9282 lt!9291)))

(declare-fun lt!9286 () ListLongMap!553)

(assert (=> b!24535 (= lt!9286 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9289 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9289 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9284 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9284 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9290 () Unit!514)

(assert (=> b!24535 (= lt!9290 (addApplyDifferent!14 lt!9286 lt!9289 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9284))))

(assert (=> b!24535 (= (apply!29 (+!45 lt!9286 (tuple2!947 lt!9289 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9284) (apply!29 lt!9286 lt!9284))))

(declare-fun lt!9299 () Unit!514)

(assert (=> b!24535 (= lt!9299 lt!9290)))

(declare-fun lt!9293 () ListLongMap!553)

(assert (=> b!24535 (= lt!9293 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9279 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9279 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9297 () (_ BitVec 64))

(assert (=> b!24535 (= lt!9297 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!24535 (= lt!9278 (addApplyDifferent!14 lt!9293 lt!9279 (minValue!1666 lt!8162) lt!9297))))

(assert (=> b!24535 (= (apply!29 (+!45 lt!9293 (tuple2!947 lt!9279 (minValue!1666 lt!8162))) lt!9297) (apply!29 lt!9293 lt!9297))))

(declare-fun call!2135 () ListLongMap!553)

(declare-fun bm!2128 () Bool)

(assert (=> bm!2128 (= call!2135 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!24536 () Bool)

(declare-fun call!2133 () Bool)

(assert (=> b!24536 (= e!15867 (not call!2133))))

(declare-fun bm!2129 () Bool)

(declare-fun call!2130 () ListLongMap!553)

(declare-fun call!2134 () ListLongMap!553)

(assert (=> bm!2129 (= call!2130 call!2134)))

(declare-fun call!2131 () ListLongMap!553)

(declare-fun c!3317 () Bool)

(declare-fun c!3318 () Bool)

(declare-fun bm!2130 () Bool)

(assert (=> bm!2130 (= call!2134 (+!45 (ite c!3317 call!2135 (ite c!3318 call!2131 call!2136)) (ite (or c!3317 c!3318) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun b!24537 () Bool)

(declare-fun Unit!571 () Unit!514)

(assert (=> b!24537 (= e!15877 Unit!571)))

(declare-fun b!24538 () Bool)

(assert (=> b!24538 (= e!15865 (not call!2132))))

(declare-fun b!24539 () Bool)

(declare-fun c!3315 () Bool)

(assert (=> b!24539 (= c!3315 (and (not (= (bvand lt!8265 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8265 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15875 () ListLongMap!553)

(assert (=> b!24539 (= e!15875 e!15869)))

(declare-fun b!24540 () Bool)

(declare-fun e!15871 () ListLongMap!553)

(assert (=> b!24540 (= e!15871 e!15875)))

(assert (=> b!24540 (= c!3318 (and (not (= (bvand lt!8265 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8265 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2131 () Bool)

(assert (=> bm!2131 (= call!2136 call!2131)))

(declare-fun b!24541 () Bool)

(assert (=> b!24541 (= e!15873 (= (apply!29 lt!9287 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8162)))))

(declare-fun bm!2132 () Bool)

(assert (=> bm!2132 (= call!2131 call!2135)))

(declare-fun b!24542 () Bool)

(declare-fun e!15876 () Bool)

(assert (=> b!24542 (= e!15867 e!15876)))

(declare-fun res!14931 () Bool)

(assert (=> b!24542 (= res!14931 call!2133)))

(assert (=> b!24542 (=> (not res!14931) (not e!15876))))

(declare-fun d!4497 () Bool)

(assert (=> d!4497 e!15872))

(declare-fun res!14927 () Bool)

(assert (=> d!4497 (=> (not res!14927) (not e!15872))))

(assert (=> d!4497 (= res!14927 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))))

(declare-fun lt!9296 () ListLongMap!553)

(assert (=> d!4497 (= lt!9287 lt!9296)))

(declare-fun lt!9280 () Unit!514)

(assert (=> d!4497 (= lt!9280 e!15877)))

(declare-fun c!3319 () Bool)

(declare-fun e!15870 () Bool)

(assert (=> d!4497 (= c!3319 e!15870)))

(declare-fun res!14928 () Bool)

(assert (=> d!4497 (=> (not res!14928) (not e!15870))))

(assert (=> d!4497 (= res!14928 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4497 (= lt!9296 e!15871)))

(assert (=> d!4497 (= c!3317 (and (not (= (bvand lt!8265 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8265 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4497 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4497 (= (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) lt!8265 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9287)))

(declare-fun bm!2127 () Bool)

(assert (=> bm!2127 (= call!2133 (contains!220 lt!9287 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2133 () Bool)

(assert (=> bm!2133 (= call!2132 (contains!220 lt!9287 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24543 () Bool)

(assert (=> b!24543 (= e!15876 (= (apply!29 lt!9287 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!24544 () Bool)

(declare-fun res!14926 () Bool)

(assert (=> b!24544 (=> (not res!14926) (not e!15872))))

(assert (=> b!24544 (= res!14926 e!15866)))

(declare-fun res!14925 () Bool)

(assert (=> b!24544 (=> res!14925 e!15866)))

(declare-fun e!15868 () Bool)

(assert (=> b!24544 (= res!14925 (not e!15868))))

(declare-fun res!14930 () Bool)

(assert (=> b!24544 (=> (not res!14930) (not e!15868))))

(assert (=> b!24544 (= res!14930 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24545 () Bool)

(assert (=> b!24545 (= e!15870 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24546 () Bool)

(assert (=> b!24546 (= e!15872 e!15865)))

(declare-fun c!3316 () Bool)

(assert (=> b!24546 (= c!3316 (not (= (bvand lt!8265 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24547 () Bool)

(assert (=> b!24547 (= e!15874 (= (apply!29 lt!9287 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 lt!8162)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24547 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 lt!8162))))))

(assert (=> b!24547 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24548 () Bool)

(assert (=> b!24548 (= e!15869 call!2130)))

(declare-fun b!24549 () Bool)

(assert (=> b!24549 (= e!15871 (+!45 call!2134 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(declare-fun b!24550 () Bool)

(assert (=> b!24550 (= e!15875 call!2130)))

(declare-fun b!24551 () Bool)

(assert (=> b!24551 (= e!15868 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4497 c!3317) b!24549))

(assert (= (and d!4497 (not c!3317)) b!24540))

(assert (= (and b!24540 c!3318) b!24550))

(assert (= (and b!24540 (not c!3318)) b!24539))

(assert (= (and b!24539 c!3315) b!24548))

(assert (= (and b!24539 (not c!3315)) b!24531))

(assert (= (or b!24548 b!24531) bm!2131))

(assert (= (or b!24550 bm!2131) bm!2132))

(assert (= (or b!24550 b!24548) bm!2129))

(assert (= (or b!24549 bm!2132) bm!2128))

(assert (= (or b!24549 bm!2129) bm!2130))

(assert (= (and d!4497 res!14928) b!24545))

(assert (= (and d!4497 c!3319) b!24535))

(assert (= (and d!4497 (not c!3319)) b!24537))

(assert (= (and d!4497 res!14927) b!24544))

(assert (= (and b!24544 res!14930) b!24551))

(assert (= (and b!24544 (not res!14925)) b!24533))

(assert (= (and b!24533 res!14929) b!24547))

(assert (= (and b!24544 res!14926) b!24532))

(assert (= (and b!24532 c!3314) b!24542))

(assert (= (and b!24532 (not c!3314)) b!24536))

(assert (= (and b!24542 res!14931) b!24543))

(assert (= (or b!24542 b!24536) bm!2127))

(assert (= (and b!24532 res!14933) b!24546))

(assert (= (and b!24546 c!3316) b!24534))

(assert (= (and b!24546 (not c!3316)) b!24538))

(assert (= (and b!24534 res!14932) b!24541))

(assert (= (or b!24534 b!24538) bm!2133))

(declare-fun b_lambda!1631 () Bool)

(assert (=> (not b_lambda!1631) (not b!24547)))

(assert (=> b!24547 t!3243))

(declare-fun b_and!1535 () Bool)

(assert (= b_and!1533 (and (=> t!3243 result!1103) b_and!1535)))

(declare-fun m!19081 () Bool)

(assert (=> bm!2127 m!19081))

(declare-fun m!19083 () Bool)

(assert (=> b!24541 m!19083))

(declare-fun m!19085 () Bool)

(assert (=> bm!2133 m!19085))

(declare-fun m!19087 () Bool)

(assert (=> bm!2130 m!19087))

(declare-fun m!19089 () Bool)

(assert (=> b!24549 m!19089))

(assert (=> b!24533 m!17154))

(assert (=> b!24533 m!17154))

(declare-fun m!19091 () Bool)

(assert (=> b!24533 m!19091))

(assert (=> b!24551 m!17154))

(assert (=> b!24551 m!17154))

(assert (=> b!24551 m!17158))

(assert (=> b!24545 m!17154))

(assert (=> b!24545 m!17154))

(assert (=> b!24545 m!17158))

(declare-fun m!19093 () Bool)

(assert (=> bm!2128 m!19093))

(declare-fun m!19095 () Bool)

(assert (=> b!24535 m!19095))

(declare-fun m!19097 () Bool)

(assert (=> b!24535 m!19097))

(declare-fun m!19099 () Bool)

(assert (=> b!24535 m!19099))

(declare-fun m!19101 () Bool)

(assert (=> b!24535 m!19101))

(assert (=> b!24535 m!19099))

(declare-fun m!19103 () Bool)

(assert (=> b!24535 m!19103))

(declare-fun m!19105 () Bool)

(assert (=> b!24535 m!19105))

(declare-fun m!19107 () Bool)

(assert (=> b!24535 m!19107))

(assert (=> b!24535 m!19093))

(declare-fun m!19109 () Bool)

(assert (=> b!24535 m!19109))

(declare-fun m!19111 () Bool)

(assert (=> b!24535 m!19111))

(declare-fun m!19113 () Bool)

(assert (=> b!24535 m!19113))

(declare-fun m!19115 () Bool)

(assert (=> b!24535 m!19115))

(declare-fun m!19117 () Bool)

(assert (=> b!24535 m!19117))

(assert (=> b!24535 m!19117))

(declare-fun m!19119 () Bool)

(assert (=> b!24535 m!19119))

(assert (=> b!24535 m!19107))

(declare-fun m!19121 () Bool)

(assert (=> b!24535 m!19121))

(assert (=> b!24535 m!17154))

(assert (=> b!24535 m!19115))

(declare-fun m!19123 () Bool)

(assert (=> b!24535 m!19123))

(declare-fun m!19125 () Bool)

(assert (=> b!24543 m!19125))

(assert (=> b!24547 m!17194))

(assert (=> b!24547 m!17505))

(assert (=> b!24547 m!17194))

(assert (=> b!24547 m!17507))

(assert (=> b!24547 m!17154))

(declare-fun m!19127 () Bool)

(assert (=> b!24547 m!19127))

(assert (=> b!24547 m!17505))

(assert (=> b!24547 m!17154))

(assert (=> d!4497 m!17072))

(assert (=> d!4065 d!4497))

(assert (=> d!4065 d!4261))

(assert (=> d!4065 d!4477))

(declare-fun d!4499 () Bool)

(declare-fun e!15878 () Bool)

(assert (=> d!4499 e!15878))

(declare-fun res!14934 () Bool)

(assert (=> d!4499 (=> res!14934 e!15878)))

(declare-fun lt!9301 () Bool)

(assert (=> d!4499 (= res!14934 (not lt!9301))))

(declare-fun lt!9302 () Bool)

(assert (=> d!4499 (= lt!9301 lt!9302)))

(declare-fun lt!9300 () Unit!514)

(declare-fun e!15879 () Unit!514)

(assert (=> d!4499 (= lt!9300 e!15879)))

(declare-fun c!3320 () Bool)

(assert (=> d!4499 (= c!3320 lt!9302)))

(assert (=> d!4499 (= lt!9302 (containsKey!25 (toList!292 lt!8538) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4499 (= (contains!220 lt!8538 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9301)))

(declare-fun b!24552 () Bool)

(declare-fun lt!9303 () Unit!514)

(assert (=> b!24552 (= e!15879 lt!9303)))

(assert (=> b!24552 (= lt!9303 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8538) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24552 (isDefined!23 (getValueByKey!61 (toList!292 lt!8538) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24553 () Bool)

(declare-fun Unit!572 () Unit!514)

(assert (=> b!24553 (= e!15879 Unit!572)))

(declare-fun b!24554 () Bool)

(assert (=> b!24554 (= e!15878 (isDefined!23 (getValueByKey!61 (toList!292 lt!8538) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4499 c!3320) b!24552))

(assert (= (and d!4499 (not c!3320)) b!24553))

(assert (= (and d!4499 (not res!14934)) b!24554))

(declare-fun m!19129 () Bool)

(assert (=> d!4499 m!19129))

(declare-fun m!19131 () Bool)

(assert (=> b!24552 m!19131))

(declare-fun m!19133 () Bool)

(assert (=> b!24552 m!19133))

(assert (=> b!24552 m!19133))

(declare-fun m!19135 () Bool)

(assert (=> b!24552 m!19135))

(assert (=> b!24554 m!19133))

(assert (=> b!24554 m!19133))

(assert (=> b!24554 m!19135))

(assert (=> bm!1990 d!4499))

(declare-fun d!4501 () Bool)

(assert (=> d!4501 (= (isDefined!23 (getValueByKey!61 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!174 (getValueByKey!61 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!1014 () Bool)

(assert (= bs!1014 d!4501))

(assert (=> bs!1014 m!17206))

(declare-fun m!19137 () Bool)

(assert (=> bs!1014 m!19137))

(assert (=> b!23599 d!4501))

(declare-fun d!4503 () Bool)

(declare-fun c!3321 () Bool)

(assert (=> d!4503 (= c!3321 (and ((_ is Cons!561) (toList!292 call!1951)) (= (_1!480 (h!1127 (toList!292 call!1951))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15880 () Option!67)

(assert (=> d!4503 (= (getValueByKey!61 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000) e!15880)))

(declare-fun b!24558 () Bool)

(declare-fun e!15881 () Option!67)

(assert (=> b!24558 (= e!15881 None!65)))

(declare-fun b!24557 () Bool)

(assert (=> b!24557 (= e!15881 (getValueByKey!61 (t!3238 (toList!292 call!1951)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24556 () Bool)

(assert (=> b!24556 (= e!15880 e!15881)))

(declare-fun c!3322 () Bool)

(assert (=> b!24556 (= c!3322 (and ((_ is Cons!561) (toList!292 call!1951)) (not (= (_1!480 (h!1127 (toList!292 call!1951))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24555 () Bool)

(assert (=> b!24555 (= e!15880 (Some!66 (_2!480 (h!1127 (toList!292 call!1951)))))))

(assert (= (and d!4503 c!3321) b!24555))

(assert (= (and d!4503 (not c!3321)) b!24556))

(assert (= (and b!24556 c!3322) b!24557))

(assert (= (and b!24556 (not c!3322)) b!24558))

(declare-fun m!19139 () Bool)

(assert (=> b!24557 m!19139))

(assert (=> b!23599 d!4503))

(declare-fun d!4505 () Bool)

(declare-fun e!15882 () Bool)

(assert (=> d!4505 e!15882))

(declare-fun res!14935 () Bool)

(assert (=> d!4505 (=> (not res!14935) (not e!15882))))

(declare-fun lt!9304 () ListLongMap!553)

(assert (=> d!4505 (= res!14935 (contains!220 lt!9304 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!9307 () List!565)

(assert (=> d!4505 (= lt!9304 (ListLongMap!554 lt!9307))))

(declare-fun lt!9305 () Unit!514)

(declare-fun lt!9306 () Unit!514)

(assert (=> d!4505 (= lt!9305 lt!9306)))

(assert (=> d!4505 (= (getValueByKey!61 lt!9307 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4505 (= lt!9306 (lemmaContainsTupThenGetReturnValue!18 lt!9307 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4505 (= lt!9307 (insertStrictlySorted!18 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4505 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9304)))

(declare-fun b!24559 () Bool)

(declare-fun res!14936 () Bool)

(assert (=> b!24559 (=> (not res!14936) (not e!15882))))

(assert (=> b!24559 (= res!14936 (= (getValueByKey!61 (toList!292 lt!9304) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24560 () Bool)

(assert (=> b!24560 (= e!15882 (contains!221 (toList!292 lt!9304) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4505 res!14935) b!24559))

(assert (= (and b!24559 res!14936) b!24560))

(declare-fun m!19141 () Bool)

(assert (=> d!4505 m!19141))

(declare-fun m!19143 () Bool)

(assert (=> d!4505 m!19143))

(declare-fun m!19145 () Bool)

(assert (=> d!4505 m!19145))

(declare-fun m!19147 () Bool)

(assert (=> d!4505 m!19147))

(declare-fun m!19149 () Bool)

(assert (=> b!24559 m!19149))

(declare-fun m!19151 () Bool)

(assert (=> b!24560 m!19151))

(assert (=> d!4003 d!4505))

(declare-fun d!4507 () Bool)

(assert (=> d!4507 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4507 true))

(declare-fun _$7!38 () Unit!514)

(assert (=> d!4507 (= (choose!206 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) _$7!38)))

(declare-fun bs!1015 () Bool)

(assert (= bs!1015 d!4507))

(assert (=> bs!1015 m!16828))

(assert (=> bs!1015 m!16828))

(assert (=> bs!1015 m!16952))

(assert (=> bs!1015 m!16950))

(assert (=> d!4003 d!4507))

(declare-fun b!24561 () Bool)

(declare-fun e!15887 () ListLongMap!553)

(declare-fun call!2143 () ListLongMap!553)

(assert (=> b!24561 (= e!15887 call!2143)))

(declare-fun b!24562 () Bool)

(declare-fun res!14945 () Bool)

(declare-fun e!15890 () Bool)

(assert (=> b!24562 (=> (not res!14945) (not e!15890))))

(declare-fun e!15885 () Bool)

(assert (=> b!24562 (= res!14945 e!15885)))

(declare-fun c!3323 () Bool)

(assert (=> b!24562 (= c!3323 (not (= (bvand lt!8238 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24563 () Bool)

(declare-fun e!15884 () Bool)

(declare-fun e!15892 () Bool)

(assert (=> b!24563 (= e!15884 e!15892)))

(declare-fun res!14941 () Bool)

(assert (=> b!24563 (=> (not res!14941) (not e!15892))))

(declare-fun lt!9317 () ListLongMap!553)

(assert (=> b!24563 (= res!14941 (contains!220 lt!9317 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24563 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24564 () Bool)

(declare-fun e!15883 () Bool)

(declare-fun e!15891 () Bool)

(assert (=> b!24564 (= e!15883 e!15891)))

(declare-fun res!14944 () Bool)

(declare-fun call!2139 () Bool)

(assert (=> b!24564 (= res!14944 call!2139)))

(assert (=> b!24564 (=> (not res!14944) (not e!15891))))

(declare-fun b!24565 () Bool)

(declare-fun e!15895 () Unit!514)

(declare-fun lt!9308 () Unit!514)

(assert (=> b!24565 (= e!15895 lt!9308)))

(declare-fun lt!9313 () ListLongMap!553)

(assert (=> b!24565 (= lt!9313 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9324 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9324 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9325 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9325 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9328 () Unit!514)

(assert (=> b!24565 (= lt!9328 (addStillContains!14 lt!9313 lt!9324 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9325))))

(assert (=> b!24565 (contains!220 (+!45 lt!9313 (tuple2!947 lt!9324 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9325)))

(declare-fun lt!9322 () Unit!514)

(assert (=> b!24565 (= lt!9322 lt!9328)))

(declare-fun lt!9315 () ListLongMap!553)

(assert (=> b!24565 (= lt!9315 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9311 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9311 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9318 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9318 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9321 () Unit!514)

(assert (=> b!24565 (= lt!9321 (addApplyDifferent!14 lt!9315 lt!9311 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9318))))

(assert (=> b!24565 (= (apply!29 (+!45 lt!9315 (tuple2!947 lt!9311 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9318) (apply!29 lt!9315 lt!9318))))

(declare-fun lt!9312 () Unit!514)

(assert (=> b!24565 (= lt!9312 lt!9321)))

(declare-fun lt!9316 () ListLongMap!553)

(assert (=> b!24565 (= lt!9316 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9319 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9319 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9314 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9314 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9320 () Unit!514)

(assert (=> b!24565 (= lt!9320 (addApplyDifferent!14 lt!9316 lt!9319 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9314))))

(assert (=> b!24565 (= (apply!29 (+!45 lt!9316 (tuple2!947 lt!9319 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9314) (apply!29 lt!9316 lt!9314))))

(declare-fun lt!9329 () Unit!514)

(assert (=> b!24565 (= lt!9329 lt!9320)))

(declare-fun lt!9323 () ListLongMap!553)

(assert (=> b!24565 (= lt!9323 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9309 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9309 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9327 () (_ BitVec 64))

(assert (=> b!24565 (= lt!9327 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!24565 (= lt!9308 (addApplyDifferent!14 lt!9323 lt!9309 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9327))))

(assert (=> b!24565 (= (apply!29 (+!45 lt!9323 (tuple2!947 lt!9309 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9327) (apply!29 lt!9323 lt!9327))))

(declare-fun call!2142 () ListLongMap!553)

(declare-fun bm!2135 () Bool)

(assert (=> bm!2135 (= call!2142 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24566 () Bool)

(declare-fun call!2140 () Bool)

(assert (=> b!24566 (= e!15885 (not call!2140))))

(declare-fun bm!2136 () Bool)

(declare-fun call!2137 () ListLongMap!553)

(declare-fun call!2141 () ListLongMap!553)

(assert (=> bm!2136 (= call!2137 call!2141)))

(declare-fun call!2138 () ListLongMap!553)

(declare-fun bm!2137 () Bool)

(declare-fun c!3326 () Bool)

(declare-fun c!3327 () Bool)

(assert (=> bm!2137 (= call!2141 (+!45 (ite c!3326 call!2142 (ite c!3327 call!2138 call!2143)) (ite (or c!3326 c!3327) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!24567 () Bool)

(declare-fun Unit!573 () Unit!514)

(assert (=> b!24567 (= e!15895 Unit!573)))

(declare-fun b!24568 () Bool)

(assert (=> b!24568 (= e!15883 (not call!2139))))

(declare-fun b!24569 () Bool)

(declare-fun c!3324 () Bool)

(assert (=> b!24569 (= c!3324 (and (not (= (bvand lt!8238 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8238 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15893 () ListLongMap!553)

(assert (=> b!24569 (= e!15893 e!15887)))

(declare-fun b!24570 () Bool)

(declare-fun e!15889 () ListLongMap!553)

(assert (=> b!24570 (= e!15889 e!15893)))

(assert (=> b!24570 (= c!3327 (and (not (= (bvand lt!8238 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8238 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2138 () Bool)

(assert (=> bm!2138 (= call!2143 call!2138)))

(declare-fun b!24571 () Bool)

(assert (=> b!24571 (= e!15891 (= (apply!29 lt!9317 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!2139 () Bool)

(assert (=> bm!2139 (= call!2138 call!2142)))

(declare-fun b!24572 () Bool)

(declare-fun e!15894 () Bool)

(assert (=> b!24572 (= e!15885 e!15894)))

(declare-fun res!14943 () Bool)

(assert (=> b!24572 (= res!14943 call!2140)))

(assert (=> b!24572 (=> (not res!14943) (not e!15894))))

(declare-fun d!4509 () Bool)

(assert (=> d!4509 e!15890))

(declare-fun res!14939 () Bool)

(assert (=> d!4509 (=> (not res!14939) (not e!15890))))

(assert (=> d!4509 (= res!14939 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9326 () ListLongMap!553)

(assert (=> d!4509 (= lt!9317 lt!9326)))

(declare-fun lt!9310 () Unit!514)

(assert (=> d!4509 (= lt!9310 e!15895)))

(declare-fun c!3328 () Bool)

(declare-fun e!15888 () Bool)

(assert (=> d!4509 (= c!3328 e!15888)))

(declare-fun res!14940 () Bool)

(assert (=> d!4509 (=> (not res!14940) (not e!15888))))

(assert (=> d!4509 (= res!14940 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4509 (= lt!9326 e!15889)))

(assert (=> d!4509 (= c!3326 (and (not (= (bvand lt!8238 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8238 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4509 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4509 (= (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8238 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9317)))

(declare-fun bm!2134 () Bool)

(assert (=> bm!2134 (= call!2140 (contains!220 lt!9317 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2140 () Bool)

(assert (=> bm!2140 (= call!2139 (contains!220 lt!9317 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24573 () Bool)

(assert (=> b!24573 (= e!15894 (= (apply!29 lt!9317 #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24574 () Bool)

(declare-fun res!14938 () Bool)

(assert (=> b!24574 (=> (not res!14938) (not e!15890))))

(assert (=> b!24574 (= res!14938 e!15884)))

(declare-fun res!14937 () Bool)

(assert (=> b!24574 (=> res!14937 e!15884)))

(declare-fun e!15886 () Bool)

(assert (=> b!24574 (= res!14937 (not e!15886))))

(declare-fun res!14942 () Bool)

(assert (=> b!24574 (=> (not res!14942) (not e!15886))))

(assert (=> b!24574 (= res!14942 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24575 () Bool)

(assert (=> b!24575 (= e!15888 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24576 () Bool)

(assert (=> b!24576 (= e!15890 e!15883)))

(declare-fun c!3325 () Bool)

(assert (=> b!24576 (= c!3325 (not (= (bvand lt!8238 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24577 () Bool)

(assert (=> b!24577 (= e!15892 (= (apply!29 lt!9317 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24577 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> b!24577 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24578 () Bool)

(assert (=> b!24578 (= e!15887 call!2137)))

(declare-fun b!24579 () Bool)

(assert (=> b!24579 (= e!15889 (+!45 call!2141 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24580 () Bool)

(assert (=> b!24580 (= e!15893 call!2137)))

(declare-fun b!24581 () Bool)

(assert (=> b!24581 (= e!15886 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4509 c!3326) b!24579))

(assert (= (and d!4509 (not c!3326)) b!24570))

(assert (= (and b!24570 c!3327) b!24580))

(assert (= (and b!24570 (not c!3327)) b!24569))

(assert (= (and b!24569 c!3324) b!24578))

(assert (= (and b!24569 (not c!3324)) b!24561))

(assert (= (or b!24578 b!24561) bm!2138))

(assert (= (or b!24580 bm!2138) bm!2139))

(assert (= (or b!24580 b!24578) bm!2136))

(assert (= (or b!24579 bm!2139) bm!2135))

(assert (= (or b!24579 bm!2136) bm!2137))

(assert (= (and d!4509 res!14940) b!24575))

(assert (= (and d!4509 c!3328) b!24565))

(assert (= (and d!4509 (not c!3328)) b!24567))

(assert (= (and d!4509 res!14939) b!24574))

(assert (= (and b!24574 res!14942) b!24581))

(assert (= (and b!24574 (not res!14937)) b!24563))

(assert (= (and b!24563 res!14941) b!24577))

(assert (= (and b!24574 res!14938) b!24562))

(assert (= (and b!24562 c!3323) b!24572))

(assert (= (and b!24562 (not c!3323)) b!24566))

(assert (= (and b!24572 res!14943) b!24573))

(assert (= (or b!24572 b!24566) bm!2134))

(assert (= (and b!24562 res!14945) b!24576))

(assert (= (and b!24576 c!3325) b!24564))

(assert (= (and b!24576 (not c!3325)) b!24568))

(assert (= (and b!24564 res!14944) b!24571))

(assert (= (or b!24564 b!24568) bm!2140))

(declare-fun b_lambda!1633 () Bool)

(assert (=> (not b_lambda!1633) (not b!24577)))

(assert (=> b!24577 t!3241))

(declare-fun b_and!1537 () Bool)

(assert (= b_and!1535 (and (=> t!3241 result!1101) b_and!1537)))

(declare-fun m!19153 () Bool)

(assert (=> bm!2134 m!19153))

(declare-fun m!19155 () Bool)

(assert (=> b!24571 m!19155))

(declare-fun m!19157 () Bool)

(assert (=> bm!2140 m!19157))

(declare-fun m!19159 () Bool)

(assert (=> bm!2137 m!19159))

(declare-fun m!19161 () Bool)

(assert (=> b!24579 m!19161))

(assert (=> b!24563 m!16992))

(assert (=> b!24563 m!16992))

(declare-fun m!19163 () Bool)

(assert (=> b!24563 m!19163))

(assert (=> b!24581 m!16992))

(assert (=> b!24581 m!16992))

(assert (=> b!24581 m!16996))

(assert (=> b!24575 m!16992))

(assert (=> b!24575 m!16992))

(assert (=> b!24575 m!16996))

(declare-fun m!19165 () Bool)

(assert (=> bm!2135 m!19165))

(declare-fun m!19167 () Bool)

(assert (=> b!24565 m!19167))

(declare-fun m!19169 () Bool)

(assert (=> b!24565 m!19169))

(declare-fun m!19171 () Bool)

(assert (=> b!24565 m!19171))

(declare-fun m!19173 () Bool)

(assert (=> b!24565 m!19173))

(assert (=> b!24565 m!19171))

(declare-fun m!19175 () Bool)

(assert (=> b!24565 m!19175))

(declare-fun m!19177 () Bool)

(assert (=> b!24565 m!19177))

(declare-fun m!19179 () Bool)

(assert (=> b!24565 m!19179))

(assert (=> b!24565 m!19165))

(declare-fun m!19181 () Bool)

(assert (=> b!24565 m!19181))

(declare-fun m!19183 () Bool)

(assert (=> b!24565 m!19183))

(declare-fun m!19185 () Bool)

(assert (=> b!24565 m!19185))

(declare-fun m!19187 () Bool)

(assert (=> b!24565 m!19187))

(declare-fun m!19189 () Bool)

(assert (=> b!24565 m!19189))

(assert (=> b!24565 m!19189))

(declare-fun m!19191 () Bool)

(assert (=> b!24565 m!19191))

(assert (=> b!24565 m!19179))

(declare-fun m!19193 () Bool)

(assert (=> b!24565 m!19193))

(assert (=> b!24565 m!16992))

(assert (=> b!24565 m!19187))

(declare-fun m!19195 () Bool)

(assert (=> b!24565 m!19195))

(declare-fun m!19197 () Bool)

(assert (=> b!24573 m!19197))

(assert (=> b!24577 m!17032))

(assert (=> b!24577 m!17260))

(assert (=> b!24577 m!17032))

(assert (=> b!24577 m!17262))

(assert (=> b!24577 m!16992))

(declare-fun m!19199 () Bool)

(assert (=> b!24577 m!19199))

(assert (=> b!24577 m!17260))

(assert (=> b!24577 m!16992))

(assert (=> d!4509 m!16948))

(assert (=> d!4003 d!4509))

(assert (=> d!4003 d!4181))

(assert (=> d!4003 d!4053))

(assert (=> d!4063 d!4261))

(declare-fun b!24582 () Bool)

(declare-fun e!15896 () Bool)

(declare-fun call!2144 () Bool)

(assert (=> b!24582 (= e!15896 call!2144)))

(declare-fun b!24583 () Bool)

(declare-fun e!15897 () Bool)

(assert (=> b!24583 (= e!15897 e!15896)))

(declare-fun lt!9330 () (_ BitVec 64))

(assert (=> b!24583 (= lt!9330 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9331 () Unit!514)

(assert (=> b!24583 (= lt!9331 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 lt!8162) lt!9330 #b00000000000000000000000000000000))))

(assert (=> b!24583 (arrayContainsKey!0 (_keys!3164 lt!8162) lt!9330 #b00000000000000000000000000000000)))

(declare-fun lt!9332 () Unit!514)

(assert (=> b!24583 (= lt!9332 lt!9331)))

(declare-fun res!14946 () Bool)

(assert (=> b!24583 (= res!14946 (= (seekEntryOrOpen!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) (_keys!3164 lt!8162) (mask!4730 lt!8162)) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24583 (=> (not res!14946) (not e!15896))))

(declare-fun b!24584 () Bool)

(assert (=> b!24584 (= e!15897 call!2144)))

(declare-fun d!4511 () Bool)

(declare-fun res!14947 () Bool)

(declare-fun e!15898 () Bool)

(assert (=> d!4511 (=> res!14947 e!15898)))

(assert (=> d!4511 (= res!14947 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4511 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)) e!15898)))

(declare-fun bm!2141 () Bool)

(assert (=> bm!2141 (= call!2144 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun b!24585 () Bool)

(assert (=> b!24585 (= e!15898 e!15897)))

(declare-fun c!3329 () Bool)

(assert (=> b!24585 (= c!3329 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4511 (not res!14947)) b!24585))

(assert (= (and b!24585 c!3329) b!24583))

(assert (= (and b!24585 (not c!3329)) b!24584))

(assert (= (and b!24583 res!14946) b!24582))

(assert (= (or b!24582 b!24584) bm!2141))

(assert (=> b!24583 m!17154))

(declare-fun m!19201 () Bool)

(assert (=> b!24583 m!19201))

(declare-fun m!19203 () Bool)

(assert (=> b!24583 m!19203))

(assert (=> b!24583 m!17154))

(declare-fun m!19205 () Bool)

(assert (=> b!24583 m!19205))

(declare-fun m!19207 () Bool)

(assert (=> bm!2141 m!19207))

(assert (=> b!24585 m!17154))

(assert (=> b!24585 m!17154))

(assert (=> b!24585 m!17158))

(assert (=> b!23627 d!4511))

(declare-fun d!4513 () Bool)

(assert (=> d!4513 (= (validKeyInArray!0 (select (arr!604 lt!8356) lt!8358)) (and (not (= (select (arr!604 lt!8356) lt!8358) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!604 lt!8356) lt!8358) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23830 d!4513))

(declare-fun d!4515 () Bool)

(declare-fun lt!9335 () Bool)

(declare-fun content!16 (List!565) (InoxSet tuple2!946))

(assert (=> d!4515 (= lt!9335 (select (content!16 (toList!292 lt!8790)) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!15904 () Bool)

(assert (=> d!4515 (= lt!9335 e!15904)))

(declare-fun res!14953 () Bool)

(assert (=> d!4515 (=> (not res!14953) (not e!15904))))

(assert (=> d!4515 (= res!14953 ((_ is Cons!561) (toList!292 lt!8790)))))

(assert (=> d!4515 (= (contains!221 (toList!292 lt!8790) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9335)))

(declare-fun b!24590 () Bool)

(declare-fun e!15903 () Bool)

(assert (=> b!24590 (= e!15904 e!15903)))

(declare-fun res!14952 () Bool)

(assert (=> b!24590 (=> res!14952 e!15903)))

(assert (=> b!24590 (= res!14952 (= (h!1127 (toList!292 lt!8790)) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24591 () Bool)

(assert (=> b!24591 (= e!15903 (contains!221 (t!3238 (toList!292 lt!8790)) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4515 res!14953) b!24590))

(assert (= (and b!24590 (not res!14952)) b!24591))

(declare-fun m!19209 () Bool)

(assert (=> d!4515 m!19209))

(declare-fun m!19211 () Bool)

(assert (=> d!4515 m!19211))

(declare-fun m!19213 () Bool)

(assert (=> b!24591 m!19213))

(assert (=> b!23864 d!4515))

(declare-fun b!24592 () Bool)

(declare-fun e!15909 () ListLongMap!553)

(declare-fun call!2151 () ListLongMap!553)

(assert (=> b!24592 (= e!15909 call!2151)))

(declare-fun b!24593 () Bool)

(declare-fun res!14962 () Bool)

(declare-fun e!15912 () Bool)

(assert (=> b!24593 (=> (not res!14962) (not e!15912))))

(declare-fun e!15907 () Bool)

(assert (=> b!24593 (= res!14962 e!15907)))

(declare-fun c!3330 () Bool)

(assert (=> b!24593 (= c!3330 (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24594 () Bool)

(declare-fun e!15906 () Bool)

(declare-fun e!15914 () Bool)

(assert (=> b!24594 (= e!15906 e!15914)))

(declare-fun res!14958 () Bool)

(assert (=> b!24594 (=> (not res!14958) (not e!15914))))

(declare-fun lt!9345 () ListLongMap!553)

(assert (=> b!24594 (= res!14958 (contains!220 lt!9345 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(assert (=> b!24594 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8345))))))

(declare-fun b!24595 () Bool)

(declare-fun e!15905 () Bool)

(declare-fun e!15913 () Bool)

(assert (=> b!24595 (= e!15905 e!15913)))

(declare-fun res!14961 () Bool)

(declare-fun call!2147 () Bool)

(assert (=> b!24595 (= res!14961 call!2147)))

(assert (=> b!24595 (=> (not res!14961) (not e!15913))))

(declare-fun b!24596 () Bool)

(declare-fun e!15917 () Unit!514)

(declare-fun lt!9336 () Unit!514)

(assert (=> b!24596 (= e!15917 lt!9336)))

(declare-fun lt!9341 () ListLongMap!553)

(assert (=> b!24596 (= lt!9341 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9352 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9352 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9353 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9353 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(declare-fun lt!9356 () Unit!514)

(assert (=> b!24596 (= lt!9356 (addStillContains!14 lt!9341 lt!9352 (zeroValue!1666 lt!8345) lt!9353))))

(assert (=> b!24596 (contains!220 (+!45 lt!9341 (tuple2!947 lt!9352 (zeroValue!1666 lt!8345))) lt!9353)))

(declare-fun lt!9350 () Unit!514)

(assert (=> b!24596 (= lt!9350 lt!9356)))

(declare-fun lt!9343 () ListLongMap!553)

(assert (=> b!24596 (= lt!9343 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9339 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9339 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9346 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9346 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(declare-fun lt!9349 () Unit!514)

(assert (=> b!24596 (= lt!9349 (addApplyDifferent!14 lt!9343 lt!9339 (minValue!1666 lt!8345) lt!9346))))

(assert (=> b!24596 (= (apply!29 (+!45 lt!9343 (tuple2!947 lt!9339 (minValue!1666 lt!8345))) lt!9346) (apply!29 lt!9343 lt!9346))))

(declare-fun lt!9340 () Unit!514)

(assert (=> b!24596 (= lt!9340 lt!9349)))

(declare-fun lt!9344 () ListLongMap!553)

(assert (=> b!24596 (= lt!9344 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9347 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9347 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9342 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9342 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(declare-fun lt!9348 () Unit!514)

(assert (=> b!24596 (= lt!9348 (addApplyDifferent!14 lt!9344 lt!9347 (zeroValue!1666 lt!8345) lt!9342))))

(assert (=> b!24596 (= (apply!29 (+!45 lt!9344 (tuple2!947 lt!9347 (zeroValue!1666 lt!8345))) lt!9342) (apply!29 lt!9344 lt!9342))))

(declare-fun lt!9357 () Unit!514)

(assert (=> b!24596 (= lt!9357 lt!9348)))

(declare-fun lt!9351 () ListLongMap!553)

(assert (=> b!24596 (= lt!9351 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9337 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9337 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9355 () (_ BitVec 64))

(assert (=> b!24596 (= lt!9355 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(assert (=> b!24596 (= lt!9336 (addApplyDifferent!14 lt!9351 lt!9337 (minValue!1666 lt!8345) lt!9355))))

(assert (=> b!24596 (= (apply!29 (+!45 lt!9351 (tuple2!947 lt!9337 (minValue!1666 lt!8345))) lt!9355) (apply!29 lt!9351 lt!9355))))

(declare-fun bm!2143 () Bool)

(declare-fun call!2150 () ListLongMap!553)

(assert (=> bm!2143 (= call!2150 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun b!24597 () Bool)

(declare-fun call!2148 () Bool)

(assert (=> b!24597 (= e!15907 (not call!2148))))

(declare-fun bm!2144 () Bool)

(declare-fun call!2145 () ListLongMap!553)

(declare-fun call!2149 () ListLongMap!553)

(assert (=> bm!2144 (= call!2145 call!2149)))

(declare-fun bm!2145 () Bool)

(declare-fun c!3333 () Bool)

(declare-fun call!2146 () ListLongMap!553)

(declare-fun c!3334 () Bool)

(assert (=> bm!2145 (= call!2149 (+!45 (ite c!3333 call!2150 (ite c!3334 call!2146 call!2151)) (ite (or c!3333 c!3334) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8345)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8345)))))))

(declare-fun b!24598 () Bool)

(declare-fun Unit!574 () Unit!514)

(assert (=> b!24598 (= e!15917 Unit!574)))

(declare-fun b!24599 () Bool)

(assert (=> b!24599 (= e!15905 (not call!2147))))

(declare-fun b!24600 () Bool)

(declare-fun c!3331 () Bool)

(assert (=> b!24600 (= c!3331 (and (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15915 () ListLongMap!553)

(assert (=> b!24600 (= e!15915 e!15909)))

(declare-fun b!24601 () Bool)

(declare-fun e!15911 () ListLongMap!553)

(assert (=> b!24601 (= e!15911 e!15915)))

(assert (=> b!24601 (= c!3334 (and (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2146 () Bool)

(assert (=> bm!2146 (= call!2151 call!2146)))

(declare-fun b!24602 () Bool)

(assert (=> b!24602 (= e!15913 (= (apply!29 lt!9345 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8345)))))

(declare-fun bm!2147 () Bool)

(assert (=> bm!2147 (= call!2146 call!2150)))

(declare-fun b!24603 () Bool)

(declare-fun e!15916 () Bool)

(assert (=> b!24603 (= e!15907 e!15916)))

(declare-fun res!14960 () Bool)

(assert (=> b!24603 (= res!14960 call!2148)))

(assert (=> b!24603 (=> (not res!14960) (not e!15916))))

(declare-fun d!4517 () Bool)

(assert (=> d!4517 e!15912))

(declare-fun res!14956 () Bool)

(assert (=> d!4517 (=> (not res!14956) (not e!15912))))

(assert (=> d!4517 (= res!14956 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8345))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8345))))))))

(declare-fun lt!9354 () ListLongMap!553)

(assert (=> d!4517 (= lt!9345 lt!9354)))

(declare-fun lt!9338 () Unit!514)

(assert (=> d!4517 (= lt!9338 e!15917)))

(declare-fun c!3335 () Bool)

(declare-fun e!15910 () Bool)

(assert (=> d!4517 (= c!3335 e!15910)))

(declare-fun res!14957 () Bool)

(assert (=> d!4517 (=> (not res!14957) (not e!15910))))

(assert (=> d!4517 (= res!14957 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8345))))))

(assert (=> d!4517 (= lt!9354 e!15911)))

(assert (=> d!4517 (= c!3333 (and (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4517 (validMask!0 (mask!4730 lt!8345))))

(assert (=> d!4517 (= (getCurrentListMap!121 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)) lt!9345)))

(declare-fun bm!2142 () Bool)

(assert (=> bm!2142 (= call!2148 (contains!220 lt!9345 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2148 () Bool)

(assert (=> bm!2148 (= call!2147 (contains!220 lt!9345 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24604 () Bool)

(assert (=> b!24604 (= e!15916 (= (apply!29 lt!9345 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8345)))))

(declare-fun b!24605 () Bool)

(declare-fun res!14955 () Bool)

(assert (=> b!24605 (=> (not res!14955) (not e!15912))))

(assert (=> b!24605 (= res!14955 e!15906)))

(declare-fun res!14954 () Bool)

(assert (=> b!24605 (=> res!14954 e!15906)))

(declare-fun e!15908 () Bool)

(assert (=> b!24605 (= res!14954 (not e!15908))))

(declare-fun res!14959 () Bool)

(assert (=> b!24605 (=> (not res!14959) (not e!15908))))

(assert (=> b!24605 (= res!14959 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8345))))))

(declare-fun b!24606 () Bool)

(assert (=> b!24606 (= e!15910 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(declare-fun b!24607 () Bool)

(assert (=> b!24607 (= e!15912 e!15905)))

(declare-fun c!3332 () Bool)

(assert (=> b!24607 (= c!3332 (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24608 () Bool)

(assert (=> b!24608 (= e!15914 (= (apply!29 lt!9345 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 lt!8345)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8345) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24608 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 lt!8345))))))

(assert (=> b!24608 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8345))))))

(declare-fun b!24609 () Bool)

(assert (=> b!24609 (= e!15909 call!2145)))

(declare-fun b!24610 () Bool)

(assert (=> b!24610 (= e!15911 (+!45 call!2149 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8345))))))

(declare-fun b!24611 () Bool)

(assert (=> b!24611 (= e!15915 call!2145)))

(declare-fun b!24612 () Bool)

(assert (=> b!24612 (= e!15908 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(assert (= (and d!4517 c!3333) b!24610))

(assert (= (and d!4517 (not c!3333)) b!24601))

(assert (= (and b!24601 c!3334) b!24611))

(assert (= (and b!24601 (not c!3334)) b!24600))

(assert (= (and b!24600 c!3331) b!24609))

(assert (= (and b!24600 (not c!3331)) b!24592))

(assert (= (or b!24609 b!24592) bm!2146))

(assert (= (or b!24611 bm!2146) bm!2147))

(assert (= (or b!24611 b!24609) bm!2144))

(assert (= (or b!24610 bm!2147) bm!2143))

(assert (= (or b!24610 bm!2144) bm!2145))

(assert (= (and d!4517 res!14957) b!24606))

(assert (= (and d!4517 c!3335) b!24596))

(assert (= (and d!4517 (not c!3335)) b!24598))

(assert (= (and d!4517 res!14956) b!24605))

(assert (= (and b!24605 res!14959) b!24612))

(assert (= (and b!24605 (not res!14954)) b!24594))

(assert (= (and b!24594 res!14958) b!24608))

(assert (= (and b!24605 res!14955) b!24593))

(assert (= (and b!24593 c!3330) b!24603))

(assert (= (and b!24593 (not c!3330)) b!24597))

(assert (= (and b!24603 res!14960) b!24604))

(assert (= (or b!24603 b!24597) bm!2142))

(assert (= (and b!24593 res!14962) b!24607))

(assert (= (and b!24607 c!3332) b!24595))

(assert (= (and b!24607 (not c!3332)) b!24599))

(assert (= (and b!24595 res!14961) b!24602))

(assert (= (or b!24595 b!24599) bm!2148))

(declare-fun b_lambda!1635 () Bool)

(assert (=> (not b_lambda!1635) (not b!24608)))

(declare-fun tb!669 () Bool)

(declare-fun t!3249 () Bool)

(assert (=> (and b!23168 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8345)) t!3249) tb!669))

(declare-fun result!1109 () Bool)

(assert (=> tb!669 (= result!1109 tp_is_empty!1023)))

(assert (=> b!24608 t!3249))

(declare-fun b_and!1539 () Bool)

(assert (= b_and!1537 (and (=> t!3249 result!1109) b_and!1539)))

(declare-fun m!19215 () Bool)

(assert (=> bm!2142 m!19215))

(declare-fun m!19217 () Bool)

(assert (=> b!24602 m!19217))

(declare-fun m!19219 () Bool)

(assert (=> bm!2148 m!19219))

(declare-fun m!19221 () Bool)

(assert (=> bm!2145 m!19221))

(declare-fun m!19223 () Bool)

(assert (=> b!24610 m!19223))

(declare-fun m!19225 () Bool)

(assert (=> b!24594 m!19225))

(assert (=> b!24594 m!19225))

(declare-fun m!19227 () Bool)

(assert (=> b!24594 m!19227))

(assert (=> b!24612 m!19225))

(assert (=> b!24612 m!19225))

(declare-fun m!19229 () Bool)

(assert (=> b!24612 m!19229))

(assert (=> b!24606 m!19225))

(assert (=> b!24606 m!19225))

(assert (=> b!24606 m!19229))

(declare-fun m!19231 () Bool)

(assert (=> bm!2143 m!19231))

(declare-fun m!19233 () Bool)

(assert (=> b!24596 m!19233))

(declare-fun m!19235 () Bool)

(assert (=> b!24596 m!19235))

(declare-fun m!19237 () Bool)

(assert (=> b!24596 m!19237))

(declare-fun m!19239 () Bool)

(assert (=> b!24596 m!19239))

(assert (=> b!24596 m!19237))

(declare-fun m!19241 () Bool)

(assert (=> b!24596 m!19241))

(declare-fun m!19243 () Bool)

(assert (=> b!24596 m!19243))

(declare-fun m!19245 () Bool)

(assert (=> b!24596 m!19245))

(assert (=> b!24596 m!19231))

(declare-fun m!19247 () Bool)

(assert (=> b!24596 m!19247))

(declare-fun m!19249 () Bool)

(assert (=> b!24596 m!19249))

(declare-fun m!19251 () Bool)

(assert (=> b!24596 m!19251))

(declare-fun m!19253 () Bool)

(assert (=> b!24596 m!19253))

(declare-fun m!19255 () Bool)

(assert (=> b!24596 m!19255))

(assert (=> b!24596 m!19255))

(declare-fun m!19257 () Bool)

(assert (=> b!24596 m!19257))

(assert (=> b!24596 m!19245))

(declare-fun m!19259 () Bool)

(assert (=> b!24596 m!19259))

(assert (=> b!24596 m!19225))

(assert (=> b!24596 m!19253))

(declare-fun m!19261 () Bool)

(assert (=> b!24596 m!19261))

(declare-fun m!19263 () Bool)

(assert (=> b!24604 m!19263))

(declare-fun m!19265 () Bool)

(assert (=> b!24608 m!19265))

(declare-fun m!19267 () Bool)

(assert (=> b!24608 m!19267))

(assert (=> b!24608 m!19265))

(declare-fun m!19269 () Bool)

(assert (=> b!24608 m!19269))

(assert (=> b!24608 m!19225))

(declare-fun m!19271 () Bool)

(assert (=> b!24608 m!19271))

(assert (=> b!24608 m!19267))

(assert (=> b!24608 m!19225))

(declare-fun m!19273 () Bool)

(assert (=> d!4517 m!19273))

(assert (=> d!4019 d!4517))

(declare-fun d!4519 () Bool)

(assert (=> d!4519 (= (apply!29 lt!8694 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8694) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1016 () Bool)

(assert (= bs!1016 d!4519))

(assert (=> bs!1016 m!19045))

(assert (=> bs!1016 m!19045))

(declare-fun m!19275 () Bool)

(assert (=> bs!1016 m!19275))

(assert (=> b!23763 d!4519))

(declare-fun d!4521 () Bool)

(declare-fun lt!9358 () (_ BitVec 32))

(assert (=> d!4521 (and (bvsge lt!9358 #b00000000000000000000000000000000) (bvsle lt!9358 (bvsub (size!700 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(declare-fun e!15919 () (_ BitVec 32))

(assert (=> d!4521 (= lt!9358 e!15919)))

(declare-fun c!3337 () Bool)

(assert (=> d!4521 (= c!3337 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(assert (=> d!4521 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 (_2!476 lt!8291))) (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(assert (=> d!4521 (= (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8291)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8291)))) lt!9358)))

(declare-fun bm!2149 () Bool)

(declare-fun call!2152 () (_ BitVec 32))

(assert (=> bm!2149 (= call!2152 (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8291)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 (_2!476 lt!8291)))))))

(declare-fun b!24613 () Bool)

(declare-fun e!15918 () (_ BitVec 32))

(assert (=> b!24613 (= e!15918 (bvadd #b00000000000000000000000000000001 call!2152))))

(declare-fun b!24614 () Bool)

(assert (=> b!24614 (= e!15918 call!2152)))

(declare-fun b!24615 () Bool)

(assert (=> b!24615 (= e!15919 #b00000000000000000000000000000000)))

(declare-fun b!24616 () Bool)

(assert (=> b!24616 (= e!15919 e!15918)))

(declare-fun c!3336 () Bool)

(assert (=> b!24616 (= c!3336 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8291))) #b00000000000000000000000000000000)))))

(assert (= (and d!4521 c!3337) b!24615))

(assert (= (and d!4521 (not c!3337)) b!24616))

(assert (= (and b!24616 c!3336) b!24613))

(assert (= (and b!24616 (not c!3336)) b!24614))

(assert (= (or b!24613 b!24614) bm!2149))

(declare-fun m!19277 () Bool)

(assert (=> bm!2149 m!19277))

(assert (=> b!24616 m!18541))

(assert (=> b!24616 m!18541))

(assert (=> b!24616 m!18545))

(assert (=> b!23623 d!4521))

(declare-fun d!4523 () Bool)

(declare-fun e!15926 () Bool)

(assert (=> d!4523 e!15926))

(declare-fun res!14964 () Bool)

(assert (=> d!4523 (=> (not res!14964) (not e!15926))))

(declare-fun lt!9361 () ListLongMap!553)

(assert (=> d!4523 (= res!14964 (not (contains!220 lt!9361 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15924 () ListLongMap!553)

(assert (=> d!4523 (= lt!9361 e!15924)))

(declare-fun c!3339 () Bool)

(assert (=> d!4523 (= c!3339 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4523 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4523 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9361)))

(declare-fun b!24617 () Bool)

(declare-fun res!14965 () Bool)

(assert (=> b!24617 (=> (not res!14965) (not e!15926))))

(assert (=> b!24617 (= res!14965 (not (contains!220 lt!9361 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24618 () Bool)

(declare-fun e!15923 () Bool)

(declare-fun e!15922 () Bool)

(assert (=> b!24618 (= e!15923 e!15922)))

(declare-fun c!3341 () Bool)

(assert (=> b!24618 (= c!3341 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24619 () Bool)

(assert (=> b!24619 (= e!15922 (= lt!9361 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8162))))))

(declare-fun b!24620 () Bool)

(assert (=> b!24620 (= e!15924 (ListLongMap!554 Nil!562))))

(declare-fun b!24621 () Bool)

(declare-fun e!15921 () ListLongMap!553)

(declare-fun call!2153 () ListLongMap!553)

(assert (=> b!24621 (= e!15921 call!2153)))

(declare-fun bm!2150 () Bool)

(assert (=> bm!2150 (= call!2153 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) (mask!4730 lt!8162) (ite c!3011 (ite c!3015 lt!8265 lt!8286) (extraKeys!1641 lt!8162)) (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8162)))))

(declare-fun b!24622 () Bool)

(assert (=> b!24622 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> b!24622 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))))))))

(declare-fun e!15925 () Bool)

(assert (=> b!24622 (= e!15925 (= (apply!29 lt!9361 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24623 () Bool)

(declare-fun e!15920 () Bool)

(assert (=> b!24623 (= e!15920 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24623 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24624 () Bool)

(assert (=> b!24624 (= e!15924 e!15921)))

(declare-fun c!3338 () Bool)

(assert (=> b!24624 (= c!3338 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24625 () Bool)

(assert (=> b!24625 (= e!15923 e!15925)))

(assert (=> b!24625 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun res!14966 () Bool)

(assert (=> b!24625 (= res!14966 (contains!220 lt!9361 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24625 (=> (not res!14966) (not e!15925))))

(declare-fun b!24626 () Bool)

(assert (=> b!24626 (= e!15922 (isEmpty!173 lt!9361))))

(declare-fun b!24627 () Bool)

(declare-fun lt!9364 () Unit!514)

(declare-fun lt!9365 () Unit!514)

(assert (=> b!24627 (= lt!9364 lt!9365)))

(declare-fun lt!9359 () (_ BitVec 64))

(declare-fun lt!9363 () ListLongMap!553)

(declare-fun lt!9362 () (_ BitVec 64))

(declare-fun lt!9360 () V!1189)

(assert (=> b!24627 (not (contains!220 (+!45 lt!9363 (tuple2!947 lt!9359 lt!9360)) lt!9362))))

(assert (=> b!24627 (= lt!9365 (addStillNotContains!2 lt!9363 lt!9359 lt!9360 lt!9362))))

(assert (=> b!24627 (= lt!9362 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24627 (= lt!9360 (get!390 (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24627 (= lt!9359 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!24627 (= lt!9363 call!2153)))

(assert (=> b!24627 (= e!15921 (+!45 call!2153 (tuple2!947 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000) (get!390 (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24628 () Bool)

(assert (=> b!24628 (= e!15926 e!15923)))

(declare-fun c!3340 () Bool)

(assert (=> b!24628 (= c!3340 e!15920)))

(declare-fun res!14963 () Bool)

(assert (=> b!24628 (=> (not res!14963) (not e!15920))))

(assert (=> b!24628 (= res!14963 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (= (and d!4523 c!3339) b!24620))

(assert (= (and d!4523 (not c!3339)) b!24624))

(assert (= (and b!24624 c!3338) b!24627))

(assert (= (and b!24624 (not c!3338)) b!24621))

(assert (= (or b!24627 b!24621) bm!2150))

(assert (= (and d!4523 res!14964) b!24617))

(assert (= (and b!24617 res!14965) b!24628))

(assert (= (and b!24628 res!14963) b!24623))

(assert (= (and b!24628 c!3340) b!24625))

(assert (= (and b!24628 (not c!3340)) b!24618))

(assert (= (and b!24625 res!14966) b!24622))

(assert (= (and b!24618 c!3341) b!24619))

(assert (= (and b!24618 (not c!3341)) b!24626))

(declare-fun b_lambda!1637 () Bool)

(assert (=> (not b_lambda!1637) (not b!24622)))

(assert (=> b!24622 t!3243))

(declare-fun b_and!1541 () Bool)

(assert (= b_and!1539 (and (=> t!3243 result!1103) b_and!1541)))

(declare-fun b_lambda!1639 () Bool)

(assert (=> (not b_lambda!1639) (not b!24627)))

(assert (=> b!24627 t!3243))

(declare-fun b_and!1543 () Bool)

(assert (= b_and!1541 (and (=> t!3243 result!1103) b_and!1543)))

(assert (=> b!24624 m!17154))

(assert (=> b!24624 m!17154))

(assert (=> b!24624 m!17158))

(declare-fun m!19279 () Bool)

(assert (=> b!24626 m!19279))

(declare-fun m!19281 () Bool)

(assert (=> b!24627 m!19281))

(declare-fun m!19283 () Bool)

(assert (=> b!24627 m!19283))

(assert (=> b!24627 m!17196))

(assert (=> b!24627 m!17194))

(assert (=> b!24627 m!17198))

(declare-fun m!19285 () Bool)

(assert (=> b!24627 m!19285))

(assert (=> b!24627 m!17194))

(assert (=> b!24627 m!17196))

(assert (=> b!24627 m!19281))

(declare-fun m!19287 () Bool)

(assert (=> b!24627 m!19287))

(assert (=> b!24627 m!17154))

(assert (=> b!24623 m!17154))

(assert (=> b!24623 m!17154))

(assert (=> b!24623 m!17158))

(declare-fun m!19289 () Bool)

(assert (=> bm!2150 m!19289))

(assert (=> b!24619 m!19289))

(declare-fun m!19291 () Bool)

(assert (=> b!24617 m!19291))

(assert (=> b!24625 m!17154))

(assert (=> b!24625 m!17154))

(declare-fun m!19293 () Bool)

(assert (=> b!24625 m!19293))

(declare-fun m!19295 () Bool)

(assert (=> d!4523 m!19295))

(assert (=> d!4523 m!17072))

(assert (=> b!24622 m!17196))

(assert (=> b!24622 m!17194))

(assert (=> b!24622 m!17198))

(assert (=> b!24622 m!17154))

(declare-fun m!19297 () Bool)

(assert (=> b!24622 m!19297))

(assert (=> b!24622 m!17154))

(assert (=> b!24622 m!17194))

(assert (=> b!24622 m!17196))

(assert (=> bm!1978 d!4523))

(declare-fun b!24631 () Bool)

(declare-fun res!14968 () Bool)

(declare-fun e!15927 () Bool)

(assert (=> b!24631 (=> (not res!14968) (not e!15927))))

(assert (=> b!24631 (= res!14968 (= (size!707 (_2!476 lt!8264)) (bvadd (_size!150 (_2!476 lt!8264)) (bvsdiv (bvadd (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4525 () Bool)

(declare-fun res!14969 () Bool)

(assert (=> d!4525 (=> (not res!14969) (not e!15927))))

(assert (=> d!4525 (= res!14969 (validMask!0 (mask!4730 (_2!476 lt!8264))))))

(assert (=> d!4525 (= (simpleValid!19 (_2!476 lt!8264)) e!15927)))

(declare-fun b!24629 () Bool)

(declare-fun res!14970 () Bool)

(assert (=> b!24629 (=> (not res!14970) (not e!15927))))

(assert (=> b!24629 (= res!14970 (and (= (size!699 (_values!1729 (_2!476 lt!8264))) (bvadd (mask!4730 (_2!476 lt!8264)) #b00000000000000000000000000000001)) (= (size!700 (_keys!3164 (_2!476 lt!8264))) (size!699 (_values!1729 (_2!476 lt!8264)))) (bvsge (_size!150 (_2!476 lt!8264)) #b00000000000000000000000000000000) (bvsle (_size!150 (_2!476 lt!8264)) (bvadd (mask!4730 (_2!476 lt!8264)) #b00000000000000000000000000000001))))))

(declare-fun b!24632 () Bool)

(assert (=> b!24632 (= e!15927 (and (bvsge (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (_2!476 lt!8264)) #b00000000000000000000000000000011) (bvsge (_vacant!150 (_2!476 lt!8264)) #b00000000000000000000000000000000)))))

(declare-fun b!24630 () Bool)

(declare-fun res!14967 () Bool)

(assert (=> b!24630 (=> (not res!14967) (not e!15927))))

(assert (=> b!24630 (= res!14967 (bvsge (size!707 (_2!476 lt!8264)) (_size!150 (_2!476 lt!8264))))))

(assert (= (and d!4525 res!14969) b!24629))

(assert (= (and b!24629 res!14970) b!24630))

(assert (= (and b!24630 res!14967) b!24631))

(assert (= (and b!24631 res!14968) b!24632))

(declare-fun m!19299 () Bool)

(assert (=> b!24631 m!19299))

(assert (=> d!4525 m!18219))

(assert (=> b!24630 m!19299))

(assert (=> d!4085 d!4525))

(assert (=> d!4105 d!4103))

(declare-fun d!4527 () Bool)

(assert (=> d!4527 (arrayNoDuplicates!0 lt!8357 lt!8340 lt!8339)))

(assert (=> d!4527 true))

(declare-fun res!14973 () Unit!514)

(assert (=> d!4527 (= (choose!111 lt!8357 lt!8340 (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8339) res!14973)))

(declare-fun bs!1017 () Bool)

(assert (= bs!1017 d!4527))

(assert (=> bs!1017 m!16928))

(assert (=> d!4105 d!4527))

(assert (=> bm!2003 d!4049))

(declare-fun d!4529 () Bool)

(declare-fun e!15928 () Bool)

(assert (=> d!4529 e!15928))

(declare-fun res!14974 () Bool)

(assert (=> d!4529 (=> res!14974 e!15928)))

(declare-fun lt!9367 () Bool)

(assert (=> d!4529 (= res!14974 (not lt!9367))))

(declare-fun lt!9368 () Bool)

(assert (=> d!4529 (= lt!9367 lt!9368)))

(declare-fun lt!9366 () Unit!514)

(declare-fun e!15929 () Unit!514)

(assert (=> d!4529 (= lt!9366 e!15929)))

(declare-fun c!3342 () Bool)

(assert (=> d!4529 (= c!3342 lt!9368)))

(assert (=> d!4529 (= lt!9368 (containsKey!25 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(assert (=> d!4529 (= (contains!220 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))) lt!9367)))

(declare-fun b!24633 () Bool)

(declare-fun lt!9369 () Unit!514)

(assert (=> b!24633 (= e!15929 lt!9369)))

(assert (=> b!24633 (= lt!9369 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(assert (=> b!24633 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(declare-fun b!24634 () Bool)

(declare-fun Unit!575 () Unit!514)

(assert (=> b!24634 (= e!15929 Unit!575)))

(declare-fun b!24635 () Bool)

(assert (=> b!24635 (= e!15928 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))))))

(assert (= (and d!4529 c!3342) b!24633))

(assert (= (and d!4529 (not c!3342)) b!24634))

(assert (= (and d!4529 (not res!14974)) b!24635))

(assert (=> d!4529 m!16814))

(declare-fun m!19301 () Bool)

(assert (=> d!4529 m!19301))

(assert (=> b!24633 m!16814))

(declare-fun m!19303 () Bool)

(assert (=> b!24633 m!19303))

(assert (=> b!24633 m!16814))

(declare-fun m!19305 () Bool)

(assert (=> b!24633 m!19305))

(assert (=> b!24633 m!19305))

(declare-fun m!19307 () Bool)

(assert (=> b!24633 m!19307))

(assert (=> b!24635 m!16814))

(assert (=> b!24635 m!19305))

(assert (=> b!24635 m!19305))

(assert (=> b!24635 m!19307))

(assert (=> b!23558 d!4529))

(declare-fun b!24636 () Bool)

(declare-fun e!15934 () ListLongMap!553)

(declare-fun call!2160 () ListLongMap!553)

(assert (=> b!24636 (= e!15934 call!2160)))

(declare-fun b!24637 () Bool)

(declare-fun res!14983 () Bool)

(declare-fun e!15937 () Bool)

(assert (=> b!24637 (=> (not res!14983) (not e!15937))))

(declare-fun e!15932 () Bool)

(assert (=> b!24637 (= res!14983 e!15932)))

(declare-fun c!3343 () Bool)

(assert (=> b!24637 (= c!3343 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24638 () Bool)

(declare-fun e!15931 () Bool)

(declare-fun e!15939 () Bool)

(assert (=> b!24638 (= e!15931 e!15939)))

(declare-fun res!14979 () Bool)

(assert (=> b!24638 (=> (not res!14979) (not e!15939))))

(declare-fun lt!9379 () ListLongMap!553)

(assert (=> b!24638 (= res!14979 (contains!220 lt!9379 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24638 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24639 () Bool)

(declare-fun e!15930 () Bool)

(declare-fun e!15938 () Bool)

(assert (=> b!24639 (= e!15930 e!15938)))

(declare-fun res!14982 () Bool)

(declare-fun call!2156 () Bool)

(assert (=> b!24639 (= res!14982 call!2156)))

(assert (=> b!24639 (=> (not res!14982) (not e!15938))))

(declare-fun b!24640 () Bool)

(declare-fun e!15942 () Unit!514)

(declare-fun lt!9370 () Unit!514)

(assert (=> b!24640 (= e!15942 lt!9370)))

(declare-fun lt!9375 () ListLongMap!553)

(assert (=> b!24640 (= lt!9375 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9386 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9386 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9387 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9387 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9390 () Unit!514)

(assert (=> b!24640 (= lt!9390 (addStillContains!14 lt!9375 lt!9386 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9387))))

(assert (=> b!24640 (contains!220 (+!45 lt!9375 (tuple2!947 lt!9386 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9387)))

(declare-fun lt!9384 () Unit!514)

(assert (=> b!24640 (= lt!9384 lt!9390)))

(declare-fun lt!9377 () ListLongMap!553)

(assert (=> b!24640 (= lt!9377 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9373 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9373 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9380 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9380 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9383 () Unit!514)

(assert (=> b!24640 (= lt!9383 (addApplyDifferent!14 lt!9377 lt!9373 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9380))))

(assert (=> b!24640 (= (apply!29 (+!45 lt!9377 (tuple2!947 lt!9373 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9380) (apply!29 lt!9377 lt!9380))))

(declare-fun lt!9374 () Unit!514)

(assert (=> b!24640 (= lt!9374 lt!9383)))

(declare-fun lt!9378 () ListLongMap!553)

(assert (=> b!24640 (= lt!9378 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9381 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9381 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9376 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9376 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9382 () Unit!514)

(assert (=> b!24640 (= lt!9382 (addApplyDifferent!14 lt!9378 lt!9381 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9376))))

(assert (=> b!24640 (= (apply!29 (+!45 lt!9378 (tuple2!947 lt!9381 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9376) (apply!29 lt!9378 lt!9376))))

(declare-fun lt!9391 () Unit!514)

(assert (=> b!24640 (= lt!9391 lt!9382)))

(declare-fun lt!9385 () ListLongMap!553)

(assert (=> b!24640 (= lt!9385 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9371 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9371 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9389 () (_ BitVec 64))

(assert (=> b!24640 (= lt!9389 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!24640 (= lt!9370 (addApplyDifferent!14 lt!9385 lt!9371 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9389))))

(assert (=> b!24640 (= (apply!29 (+!45 lt!9385 (tuple2!947 lt!9371 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9389) (apply!29 lt!9385 lt!9389))))

(declare-fun call!2159 () ListLongMap!553)

(declare-fun bm!2152 () Bool)

(assert (=> bm!2152 (= call!2159 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24641 () Bool)

(declare-fun call!2157 () Bool)

(assert (=> b!24641 (= e!15932 (not call!2157))))

(declare-fun bm!2153 () Bool)

(declare-fun call!2154 () ListLongMap!553)

(declare-fun call!2158 () ListLongMap!553)

(assert (=> bm!2153 (= call!2154 call!2158)))

(declare-fun call!2155 () ListLongMap!553)

(declare-fun bm!2154 () Bool)

(declare-fun c!3347 () Bool)

(declare-fun c!3346 () Bool)

(assert (=> bm!2154 (= call!2158 (+!45 (ite c!3346 call!2159 (ite c!3347 call!2155 call!2160)) (ite (or c!3346 c!3347) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!24642 () Bool)

(declare-fun Unit!576 () Unit!514)

(assert (=> b!24642 (= e!15942 Unit!576)))

(declare-fun b!24643 () Bool)

(assert (=> b!24643 (= e!15930 (not call!2156))))

(declare-fun b!24644 () Bool)

(declare-fun c!3344 () Bool)

(assert (=> b!24644 (= c!3344 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15940 () ListLongMap!553)

(assert (=> b!24644 (= e!15940 e!15934)))

(declare-fun b!24645 () Bool)

(declare-fun e!15936 () ListLongMap!553)

(assert (=> b!24645 (= e!15936 e!15940)))

(assert (=> b!24645 (= c!3347 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2155 () Bool)

(assert (=> bm!2155 (= call!2160 call!2155)))

(declare-fun b!24646 () Bool)

(assert (=> b!24646 (= e!15938 (= (apply!29 lt!9379 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!2156 () Bool)

(assert (=> bm!2156 (= call!2155 call!2159)))

(declare-fun b!24647 () Bool)

(declare-fun e!15941 () Bool)

(assert (=> b!24647 (= e!15932 e!15941)))

(declare-fun res!14981 () Bool)

(assert (=> b!24647 (= res!14981 call!2157)))

(assert (=> b!24647 (=> (not res!14981) (not e!15941))))

(declare-fun d!4531 () Bool)

(assert (=> d!4531 e!15937))

(declare-fun res!14977 () Bool)

(assert (=> d!4531 (=> (not res!14977) (not e!15937))))

(assert (=> d!4531 (= res!14977 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9388 () ListLongMap!553)

(assert (=> d!4531 (= lt!9379 lt!9388)))

(declare-fun lt!9372 () Unit!514)

(assert (=> d!4531 (= lt!9372 e!15942)))

(declare-fun c!3348 () Bool)

(declare-fun e!15935 () Bool)

(assert (=> d!4531 (= c!3348 e!15935)))

(declare-fun res!14978 () Bool)

(assert (=> d!4531 (=> (not res!14978) (not e!15935))))

(assert (=> d!4531 (= res!14978 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4531 (= lt!9388 e!15936)))

(assert (=> d!4531 (= c!3346 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4531 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4531 (= (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8261 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9379)))

(declare-fun bm!2151 () Bool)

(assert (=> bm!2151 (= call!2157 (contains!220 lt!9379 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2157 () Bool)

(assert (=> bm!2157 (= call!2156 (contains!220 lt!9379 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24648 () Bool)

(assert (=> b!24648 (= e!15941 (= (apply!29 lt!9379 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24649 () Bool)

(declare-fun res!14976 () Bool)

(assert (=> b!24649 (=> (not res!14976) (not e!15937))))

(assert (=> b!24649 (= res!14976 e!15931)))

(declare-fun res!14975 () Bool)

(assert (=> b!24649 (=> res!14975 e!15931)))

(declare-fun e!15933 () Bool)

(assert (=> b!24649 (= res!14975 (not e!15933))))

(declare-fun res!14980 () Bool)

(assert (=> b!24649 (=> (not res!14980) (not e!15933))))

(assert (=> b!24649 (= res!14980 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24650 () Bool)

(assert (=> b!24650 (= e!15935 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24651 () Bool)

(assert (=> b!24651 (= e!15937 e!15930)))

(declare-fun c!3345 () Bool)

(assert (=> b!24651 (= c!3345 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24652 () Bool)

(assert (=> b!24652 (= e!15939 (= (apply!29 lt!9379 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 lt!8261) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24652 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 lt!8261)))))

(assert (=> b!24652 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24653 () Bool)

(assert (=> b!24653 (= e!15934 call!2154)))

(declare-fun b!24654 () Bool)

(assert (=> b!24654 (= e!15936 (+!45 call!2158 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24655 () Bool)

(assert (=> b!24655 (= e!15940 call!2154)))

(declare-fun b!24656 () Bool)

(assert (=> b!24656 (= e!15933 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4531 c!3346) b!24654))

(assert (= (and d!4531 (not c!3346)) b!24645))

(assert (= (and b!24645 c!3347) b!24655))

(assert (= (and b!24645 (not c!3347)) b!24644))

(assert (= (and b!24644 c!3344) b!24653))

(assert (= (and b!24644 (not c!3344)) b!24636))

(assert (= (or b!24653 b!24636) bm!2155))

(assert (= (or b!24655 bm!2155) bm!2156))

(assert (= (or b!24655 b!24653) bm!2153))

(assert (= (or b!24654 bm!2156) bm!2152))

(assert (= (or b!24654 bm!2153) bm!2154))

(assert (= (and d!4531 res!14978) b!24650))

(assert (= (and d!4531 c!3348) b!24640))

(assert (= (and d!4531 (not c!3348)) b!24642))

(assert (= (and d!4531 res!14977) b!24649))

(assert (= (and b!24649 res!14980) b!24656))

(assert (= (and b!24649 (not res!14975)) b!24638))

(assert (= (and b!24638 res!14979) b!24652))

(assert (= (and b!24649 res!14976) b!24637))

(assert (= (and b!24637 c!3343) b!24647))

(assert (= (and b!24637 (not c!3343)) b!24641))

(assert (= (and b!24647 res!14981) b!24648))

(assert (= (or b!24647 b!24641) bm!2151))

(assert (= (and b!24637 res!14983) b!24651))

(assert (= (and b!24651 c!3345) b!24639))

(assert (= (and b!24651 (not c!3345)) b!24643))

(assert (= (and b!24639 res!14982) b!24646))

(assert (= (or b!24639 b!24643) bm!2157))

(declare-fun b_lambda!1641 () Bool)

(assert (=> (not b_lambda!1641) (not b!24652)))

(assert (=> b!24652 t!3241))

(declare-fun b_and!1545 () Bool)

(assert (= b_and!1543 (and (=> t!3241 result!1101) b_and!1545)))

(declare-fun m!19309 () Bool)

(assert (=> bm!2151 m!19309))

(declare-fun m!19311 () Bool)

(assert (=> b!24646 m!19311))

(declare-fun m!19313 () Bool)

(assert (=> bm!2157 m!19313))

(declare-fun m!19315 () Bool)

(assert (=> bm!2154 m!19315))

(declare-fun m!19317 () Bool)

(assert (=> b!24654 m!19317))

(assert (=> b!24638 m!16992))

(assert (=> b!24638 m!16992))

(declare-fun m!19319 () Bool)

(assert (=> b!24638 m!19319))

(assert (=> b!24656 m!16992))

(assert (=> b!24656 m!16992))

(assert (=> b!24656 m!16996))

(assert (=> b!24650 m!16992))

(assert (=> b!24650 m!16992))

(assert (=> b!24650 m!16996))

(declare-fun m!19321 () Bool)

(assert (=> bm!2152 m!19321))

(declare-fun m!19323 () Bool)

(assert (=> b!24640 m!19323))

(declare-fun m!19325 () Bool)

(assert (=> b!24640 m!19325))

(declare-fun m!19327 () Bool)

(assert (=> b!24640 m!19327))

(declare-fun m!19329 () Bool)

(assert (=> b!24640 m!19329))

(assert (=> b!24640 m!19327))

(declare-fun m!19331 () Bool)

(assert (=> b!24640 m!19331))

(declare-fun m!19333 () Bool)

(assert (=> b!24640 m!19333))

(declare-fun m!19335 () Bool)

(assert (=> b!24640 m!19335))

(assert (=> b!24640 m!19321))

(declare-fun m!19337 () Bool)

(assert (=> b!24640 m!19337))

(declare-fun m!19339 () Bool)

(assert (=> b!24640 m!19339))

(declare-fun m!19341 () Bool)

(assert (=> b!24640 m!19341))

(declare-fun m!19343 () Bool)

(assert (=> b!24640 m!19343))

(declare-fun m!19345 () Bool)

(assert (=> b!24640 m!19345))

(assert (=> b!24640 m!19345))

(declare-fun m!19347 () Bool)

(assert (=> b!24640 m!19347))

(assert (=> b!24640 m!19335))

(declare-fun m!19349 () Bool)

(assert (=> b!24640 m!19349))

(assert (=> b!24640 m!16992))

(assert (=> b!24640 m!19343))

(declare-fun m!19351 () Bool)

(assert (=> b!24640 m!19351))

(declare-fun m!19353 () Bool)

(assert (=> b!24648 m!19353))

(assert (=> b!24652 m!17032))

(declare-fun m!19355 () Bool)

(assert (=> b!24652 m!19355))

(assert (=> b!24652 m!17032))

(declare-fun m!19357 () Bool)

(assert (=> b!24652 m!19357))

(assert (=> b!24652 m!16992))

(declare-fun m!19359 () Bool)

(assert (=> b!24652 m!19359))

(assert (=> b!24652 m!19355))

(assert (=> b!24652 m!16992))

(assert (=> d!4531 m!16948))

(assert (=> b!23558 d!4531))

(declare-fun d!4533 () Bool)

(declare-fun e!15943 () Bool)

(assert (=> d!4533 e!15943))

(declare-fun res!14984 () Bool)

(assert (=> d!4533 (=> res!14984 e!15943)))

(declare-fun lt!9393 () Bool)

(assert (=> d!4533 (= res!14984 (not lt!9393))))

(declare-fun lt!9394 () Bool)

(assert (=> d!4533 (= lt!9393 lt!9394)))

(declare-fun lt!9392 () Unit!514)

(declare-fun e!15944 () Unit!514)

(assert (=> d!4533 (= lt!9392 e!15944)))

(declare-fun c!3349 () Bool)

(assert (=> d!4533 (= c!3349 lt!9394)))

(assert (=> d!4533 (= lt!9394 (containsKey!25 (toList!292 lt!8722) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4533 (= (contains!220 lt!8722 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9393)))

(declare-fun b!24657 () Bool)

(declare-fun lt!9395 () Unit!514)

(assert (=> b!24657 (= e!15944 lt!9395)))

(assert (=> b!24657 (= lt!9395 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8722) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24657 (isDefined!23 (getValueByKey!61 (toList!292 lt!8722) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24658 () Bool)

(declare-fun Unit!577 () Unit!514)

(assert (=> b!24658 (= e!15944 Unit!577)))

(declare-fun b!24659 () Bool)

(assert (=> b!24659 (= e!15943 (isDefined!23 (getValueByKey!61 (toList!292 lt!8722) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4533 c!3349) b!24657))

(assert (= (and d!4533 (not c!3349)) b!24658))

(assert (= (and d!4533 (not res!14984)) b!24659))

(declare-fun m!19361 () Bool)

(assert (=> d!4533 m!19361))

(declare-fun m!19363 () Bool)

(assert (=> b!24657 m!19363))

(assert (=> b!24657 m!17851))

(assert (=> b!24657 m!17851))

(declare-fun m!19365 () Bool)

(assert (=> b!24657 m!19365))

(assert (=> b!24659 m!17851))

(assert (=> b!24659 m!17851))

(assert (=> b!24659 m!19365))

(assert (=> bm!2031 d!4533))

(assert (=> b!23521 d!4197))

(declare-fun d!4535 () Bool)

(declare-fun res!14985 () Bool)

(declare-fun e!15945 () Bool)

(assert (=> d!4535 (=> res!14985 e!15945)))

(assert (=> d!4535 (= res!14985 (and ((_ is Cons!561) (toList!292 call!1922)) (= (_1!480 (h!1127 (toList!292 call!1922))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))))))

(assert (=> d!4535 (= (containsKey!25 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))) e!15945)))

(declare-fun b!24660 () Bool)

(declare-fun e!15946 () Bool)

(assert (=> b!24660 (= e!15945 e!15946)))

(declare-fun res!14986 () Bool)

(assert (=> b!24660 (=> (not res!14986) (not e!15946))))

(assert (=> b!24660 (= res!14986 (and (or (not ((_ is Cons!561) (toList!292 call!1922))) (bvsle (_1!480 (h!1127 (toList!292 call!1922))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))) ((_ is Cons!561) (toList!292 call!1922)) (bvslt (_1!480 (h!1127 (toList!292 call!1922))) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255)))))))

(declare-fun b!24661 () Bool)

(assert (=> b!24661 (= e!15946 (containsKey!25 (t!3238 (toList!292 call!1922)) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(assert (= (and d!4535 (not res!14985)) b!24660))

(assert (= (and b!24660 res!14986) b!24661))

(assert (=> b!24661 m!16814))

(declare-fun m!19367 () Bool)

(assert (=> b!24661 m!19367))

(assert (=> d!4031 d!4535))

(declare-fun d!4537 () Bool)

(assert (=> d!4537 (isDefined!23 (getValueByKey!61 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!9396 () Unit!514)

(assert (=> d!4537 (= lt!9396 (choose!217 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15947 () Bool)

(assert (=> d!4537 e!15947))

(declare-fun res!14987 () Bool)

(assert (=> d!4537 (=> (not res!14987) (not e!15947))))

(assert (=> d!4537 (= res!14987 (isStrictlySorted!168 (toList!292 e!15191)))))

(assert (=> d!4537 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000) lt!9396)))

(declare-fun b!24662 () Bool)

(assert (=> b!24662 (= e!15947 (containsKey!25 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4537 res!14987) b!24662))

(assert (=> d!4537 m!16978))

(assert (=> d!4537 m!16978))

(assert (=> d!4537 m!16980))

(declare-fun m!19369 () Bool)

(assert (=> d!4537 m!19369))

(declare-fun m!19371 () Bool)

(assert (=> d!4537 m!19371))

(assert (=> b!24662 m!16974))

(assert (=> b!23462 d!4537))

(assert (=> b!23462 d!4365))

(assert (=> b!23462 d!4367))

(declare-fun d!4539 () Bool)

(declare-fun e!15948 () Bool)

(assert (=> d!4539 e!15948))

(declare-fun res!14988 () Bool)

(assert (=> d!4539 (=> res!14988 e!15948)))

(declare-fun lt!9398 () Bool)

(assert (=> d!4539 (= res!14988 (not lt!9398))))

(declare-fun lt!9399 () Bool)

(assert (=> d!4539 (= lt!9398 lt!9399)))

(declare-fun lt!9397 () Unit!514)

(declare-fun e!15949 () Unit!514)

(assert (=> d!4539 (= lt!9397 e!15949)))

(declare-fun c!3350 () Bool)

(assert (=> d!4539 (= c!3350 lt!9399)))

(assert (=> d!4539 (= lt!9399 (containsKey!25 (toList!292 lt!8694) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> d!4539 (= (contains!220 lt!8694 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) lt!9398)))

(declare-fun b!24663 () Bool)

(declare-fun lt!9400 () Unit!514)

(assert (=> b!24663 (= e!15949 lt!9400)))

(assert (=> b!24663 (= lt!9400 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8694) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24663 (isDefined!23 (getValueByKey!61 (toList!292 lt!8694) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24664 () Bool)

(declare-fun Unit!578 () Unit!514)

(assert (=> b!24664 (= e!15949 Unit!578)))

(declare-fun b!24665 () Bool)

(assert (=> b!24665 (= e!15948 (isDefined!23 (getValueByKey!61 (toList!292 lt!8694) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))))

(assert (= (and d!4539 c!3350) b!24663))

(assert (= (and d!4539 (not c!3350)) b!24664))

(assert (= (and d!4539 (not res!14988)) b!24665))

(assert (=> d!4539 m!17154))

(declare-fun m!19373 () Bool)

(assert (=> d!4539 m!19373))

(assert (=> b!24663 m!17154))

(declare-fun m!19375 () Bool)

(assert (=> b!24663 m!19375))

(assert (=> b!24663 m!17154))

(assert (=> b!24663 m!18099))

(assert (=> b!24663 m!18099))

(declare-fun m!19377 () Bool)

(assert (=> b!24663 m!19377))

(assert (=> b!24665 m!17154))

(assert (=> b!24665 m!18099))

(assert (=> b!24665 m!18099))

(assert (=> b!24665 m!19377))

(assert (=> b!23753 d!4539))

(declare-fun d!4541 () Bool)

(declare-fun res!14989 () Bool)

(declare-fun e!15950 () Bool)

(assert (=> d!4541 (=> res!14989 e!15950)))

(assert (=> d!4541 (= res!14989 (and ((_ is Cons!561) (toList!292 call!1927)) (= (_1!480 (h!1127 (toList!292 call!1927))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!4541 (= (containsKey!25 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) e!15950)))

(declare-fun b!24666 () Bool)

(declare-fun e!15951 () Bool)

(assert (=> b!24666 (= e!15950 e!15951)))

(declare-fun res!14990 () Bool)

(assert (=> b!24666 (=> (not res!14990) (not e!15951))))

(assert (=> b!24666 (= res!14990 (and (or (not ((_ is Cons!561) (toList!292 call!1927))) (bvsle (_1!480 (h!1127 (toList!292 call!1927))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))) ((_ is Cons!561) (toList!292 call!1927)) (bvslt (_1!480 (h!1127 (toList!292 call!1927))) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24667 () Bool)

(assert (=> b!24667 (= e!15951 (containsKey!25 (t!3238 (toList!292 call!1927)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4541 (not res!14989)) b!24666))

(assert (= (and b!24666 res!14990) b!24667))

(declare-fun m!19379 () Bool)

(assert (=> b!24667 m!19379))

(assert (=> d!4099 d!4541))

(declare-fun d!4543 () Bool)

(declare-fun lt!9401 () Bool)

(assert (=> d!4543 (= lt!9401 (select (content!16 (toList!292 lt!8495)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun e!15953 () Bool)

(assert (=> d!4543 (= lt!9401 e!15953)))

(declare-fun res!14992 () Bool)

(assert (=> d!4543 (=> (not res!14992) (not e!15953))))

(assert (=> d!4543 (= res!14992 ((_ is Cons!561) (toList!292 lt!8495)))))

(assert (=> d!4543 (= (contains!221 (toList!292 lt!8495) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9401)))

(declare-fun b!24668 () Bool)

(declare-fun e!15952 () Bool)

(assert (=> b!24668 (= e!15953 e!15952)))

(declare-fun res!14991 () Bool)

(assert (=> b!24668 (=> res!14991 e!15952)))

(assert (=> b!24668 (= res!14991 (= (h!1127 (toList!292 lt!8495)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24669 () Bool)

(assert (=> b!24669 (= e!15952 (contains!221 (t!3238 (toList!292 lt!8495)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4543 res!14992) b!24668))

(assert (= (and b!24668 (not res!14991)) b!24669))

(declare-fun m!19381 () Bool)

(assert (=> d!4543 m!19381))

(declare-fun m!19383 () Bool)

(assert (=> d!4543 m!19383))

(declare-fun m!19385 () Bool)

(assert (=> b!24669 m!19385))

(assert (=> b!23573 d!4543))

(assert (=> b!23854 d!4073))

(declare-fun d!4545 () Bool)

(declare-fun res!14993 () Bool)

(declare-fun e!15954 () Bool)

(assert (=> d!4545 (=> res!14993 e!15954)))

(assert (=> d!4545 (= res!14993 (= (select (arr!604 (_keys!3164 lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4545 (= (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!15954)))

(declare-fun b!24670 () Bool)

(declare-fun e!15955 () Bool)

(assert (=> b!24670 (= e!15954 e!15955)))

(declare-fun res!14994 () Bool)

(assert (=> b!24670 (=> (not res!14994) (not e!15955))))

(assert (=> b!24670 (= res!14994 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24671 () Bool)

(assert (=> b!24671 (= e!15955 (arrayContainsKey!0 (_keys!3164 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4545 (not res!14993)) b!24670))

(assert (= (and b!24670 res!14994) b!24671))

(declare-fun m!19387 () Bool)

(assert (=> d!4545 m!19387))

(declare-fun m!19389 () Bool)

(assert (=> b!24671 m!19389))

(assert (=> b!23601 d!4545))

(declare-fun d!4547 () Bool)

(declare-fun e!15956 () Bool)

(assert (=> d!4547 e!15956))

(declare-fun res!14995 () Bool)

(assert (=> d!4547 (=> res!14995 e!15956)))

(declare-fun lt!9403 () Bool)

(assert (=> d!4547 (= res!14995 (not lt!9403))))

(declare-fun lt!9404 () Bool)

(assert (=> d!4547 (= lt!9403 lt!9404)))

(declare-fun lt!9402 () Unit!514)

(declare-fun e!15957 () Unit!514)

(assert (=> d!4547 (= lt!9402 e!15957)))

(declare-fun c!3351 () Bool)

(assert (=> d!4547 (= c!3351 lt!9404)))

(assert (=> d!4547 (= lt!9404 (containsKey!25 (toList!292 lt!8790) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4547 (= (contains!220 lt!8790 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!9403)))

(declare-fun b!24672 () Bool)

(declare-fun lt!9405 () Unit!514)

(assert (=> b!24672 (= e!15957 lt!9405)))

(assert (=> b!24672 (= lt!9405 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8790) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> b!24672 (isDefined!23 (getValueByKey!61 (toList!292 lt!8790) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24673 () Bool)

(declare-fun Unit!579 () Unit!514)

(assert (=> b!24673 (= e!15957 Unit!579)))

(declare-fun b!24674 () Bool)

(assert (=> b!24674 (= e!15956 (isDefined!23 (getValueByKey!61 (toList!292 lt!8790) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (= (and d!4547 c!3351) b!24672))

(assert (= (and d!4547 (not c!3351)) b!24673))

(assert (= (and d!4547 (not res!14995)) b!24674))

(declare-fun m!19391 () Bool)

(assert (=> d!4547 m!19391))

(declare-fun m!19393 () Bool)

(assert (=> b!24672 m!19393))

(assert (=> b!24672 m!17683))

(assert (=> b!24672 m!17683))

(declare-fun m!19395 () Bool)

(assert (=> b!24672 m!19395))

(assert (=> b!24674 m!17683))

(assert (=> b!24674 m!17683))

(assert (=> b!24674 m!19395))

(assert (=> d!4121 d!4547))

(declare-fun d!4549 () Bool)

(declare-fun c!3352 () Bool)

(assert (=> d!4549 (= c!3352 (and ((_ is Cons!561) lt!8793) (= (_1!480 (h!1127 lt!8793)) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun e!15958 () Option!67)

(assert (=> d!4549 (= (getValueByKey!61 lt!8793 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) e!15958)))

(declare-fun b!24678 () Bool)

(declare-fun e!15959 () Option!67)

(assert (=> b!24678 (= e!15959 None!65)))

(declare-fun b!24677 () Bool)

(assert (=> b!24677 (= e!15959 (getValueByKey!61 (t!3238 lt!8793) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24676 () Bool)

(assert (=> b!24676 (= e!15958 e!15959)))

(declare-fun c!3353 () Bool)

(assert (=> b!24676 (= c!3353 (and ((_ is Cons!561) lt!8793) (not (= (_1!480 (h!1127 lt!8793)) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun b!24675 () Bool)

(assert (=> b!24675 (= e!15958 (Some!66 (_2!480 (h!1127 lt!8793))))))

(assert (= (and d!4549 c!3352) b!24675))

(assert (= (and d!4549 (not c!3352)) b!24676))

(assert (= (and b!24676 c!3353) b!24677))

(assert (= (and b!24676 (not c!3353)) b!24678))

(declare-fun m!19397 () Bool)

(assert (=> b!24677 m!19397))

(assert (=> d!4121 d!4549))

(declare-fun d!4551 () Bool)

(assert (=> d!4551 (= (getValueByKey!61 lt!8793 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!9406 () Unit!514)

(assert (=> d!4551 (= lt!9406 (choose!215 lt!8793 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!15960 () Bool)

(assert (=> d!4551 e!15960))

(declare-fun res!14996 () Bool)

(assert (=> d!4551 (=> (not res!14996) (not e!15960))))

(assert (=> d!4551 (= res!14996 (isStrictlySorted!168 lt!8793))))

(assert (=> d!4551 (= (lemmaContainsTupThenGetReturnValue!18 lt!8793 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!9406)))

(declare-fun b!24679 () Bool)

(declare-fun res!14997 () Bool)

(assert (=> b!24679 (=> (not res!14997) (not e!15960))))

(assert (=> b!24679 (= res!14997 (containsKey!25 lt!8793 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24680 () Bool)

(assert (=> b!24680 (= e!15960 (contains!221 lt!8793 (tuple2!947 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (= (and d!4551 res!14996) b!24679))

(assert (= (and b!24679 res!14997) b!24680))

(assert (=> d!4551 m!17677))

(declare-fun m!19399 () Bool)

(assert (=> d!4551 m!19399))

(declare-fun m!19401 () Bool)

(assert (=> d!4551 m!19401))

(declare-fun m!19403 () Bool)

(assert (=> b!24679 m!19403))

(declare-fun m!19405 () Bool)

(assert (=> b!24680 m!19405))

(assert (=> d!4121 d!4551))

(declare-fun bm!2158 () Bool)

(declare-fun call!2163 () List!565)

(declare-fun call!2162 () List!565)

(assert (=> bm!2158 (= call!2163 call!2162)))

(declare-fun bm!2159 () Bool)

(declare-fun call!2161 () List!565)

(assert (=> bm!2159 (= call!2161 call!2163)))

(declare-fun b!24682 () Bool)

(declare-fun e!15961 () List!565)

(assert (=> b!24682 (= e!15961 call!2163)))

(declare-fun b!24683 () Bool)

(declare-fun c!3356 () Bool)

(assert (=> b!24683 (= c!3356 (and ((_ is Cons!561) (toList!292 call!1914)) (bvsgt (_1!480 (h!1127 (toList!292 call!1914))) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun e!15964 () List!565)

(assert (=> b!24683 (= e!15961 e!15964)))

(declare-fun b!24684 () Bool)

(declare-fun e!15963 () List!565)

(declare-fun c!3354 () Bool)

(assert (=> b!24684 (= e!15963 (ite c!3354 (t!3238 (toList!292 call!1914)) (ite c!3356 (Cons!561 (h!1127 (toList!292 call!1914)) (t!3238 (toList!292 call!1914))) Nil!562)))))

(declare-fun b!24685 () Bool)

(assert (=> b!24685 (= e!15963 (insertStrictlySorted!18 (t!3238 (toList!292 call!1914)) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24686 () Bool)

(assert (=> b!24686 (= e!15964 call!2161)))

(declare-fun b!24687 () Bool)

(declare-fun e!15965 () List!565)

(assert (=> b!24687 (= e!15965 e!15961)))

(assert (=> b!24687 (= c!3354 (and ((_ is Cons!561) (toList!292 call!1914)) (= (_1!480 (h!1127 (toList!292 call!1914))) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun d!4553 () Bool)

(declare-fun e!15962 () Bool)

(assert (=> d!4553 e!15962))

(declare-fun res!14999 () Bool)

(assert (=> d!4553 (=> (not res!14999) (not e!15962))))

(declare-fun lt!9407 () List!565)

(assert (=> d!4553 (= res!14999 (isStrictlySorted!168 lt!9407))))

(assert (=> d!4553 (= lt!9407 e!15965)))

(declare-fun c!3355 () Bool)

(assert (=> d!4553 (= c!3355 (and ((_ is Cons!561) (toList!292 call!1914)) (bvslt (_1!480 (h!1127 (toList!292 call!1914))) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> d!4553 (isStrictlySorted!168 (toList!292 call!1914))))

(assert (=> d!4553 (= (insertStrictlySorted!18 (toList!292 call!1914) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!9407)))

(declare-fun b!24681 () Bool)

(assert (=> b!24681 (= e!15962 (contains!221 lt!9407 (tuple2!947 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24688 () Bool)

(assert (=> b!24688 (= e!15965 call!2162)))

(declare-fun bm!2160 () Bool)

(assert (=> bm!2160 (= call!2162 ($colon$colon!30 e!15963 (ite c!3355 (h!1127 (toList!292 call!1914)) (tuple2!947 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun c!3357 () Bool)

(assert (=> bm!2160 (= c!3357 c!3355)))

(declare-fun b!24689 () Bool)

(assert (=> b!24689 (= e!15964 call!2161)))

(declare-fun b!24690 () Bool)

(declare-fun res!14998 () Bool)

(assert (=> b!24690 (=> (not res!14998) (not e!15962))))

(assert (=> b!24690 (= res!14998 (containsKey!25 lt!9407 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4553 c!3355) b!24688))

(assert (= (and d!4553 (not c!3355)) b!24687))

(assert (= (and b!24687 c!3354) b!24682))

(assert (= (and b!24687 (not c!3354)) b!24683))

(assert (= (and b!24683 c!3356) b!24686))

(assert (= (and b!24683 (not c!3356)) b!24689))

(assert (= (or b!24686 b!24689) bm!2159))

(assert (= (or b!24682 bm!2159) bm!2158))

(assert (= (or b!24688 bm!2158) bm!2160))

(assert (= (and bm!2160 c!3357) b!24685))

(assert (= (and bm!2160 (not c!3357)) b!24684))

(assert (= (and d!4553 res!14999) b!24690))

(assert (= (and b!24690 res!14998) b!24681))

(declare-fun m!19407 () Bool)

(assert (=> bm!2160 m!19407))

(declare-fun m!19409 () Bool)

(assert (=> b!24681 m!19409))

(declare-fun m!19411 () Bool)

(assert (=> b!24690 m!19411))

(declare-fun m!19413 () Bool)

(assert (=> b!24685 m!19413))

(declare-fun m!19415 () Bool)

(assert (=> d!4553 m!19415))

(declare-fun m!19417 () Bool)

(assert (=> d!4553 m!19417))

(assert (=> d!4121 d!4553))

(declare-fun d!4555 () Bool)

(assert (=> d!4555 (isDefined!23 (getValueByKey!61 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(declare-fun lt!9408 () Unit!514)

(assert (=> d!4555 (= lt!9408 (choose!217 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(declare-fun e!15966 () Bool)

(assert (=> d!4555 e!15966))

(declare-fun res!15000 () Bool)

(assert (=> d!4555 (=> (not res!15000) (not e!15966))))

(assert (=> d!4555 (= res!15000 (isStrictlySorted!168 (toList!292 call!1922)))))

(assert (=> d!4555 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))) lt!9408)))

(declare-fun b!24691 () Bool)

(assert (=> b!24691 (= e!15966 (containsKey!25 (toList!292 call!1922) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255))))))

(assert (= (and d!4555 res!15000) b!24691))

(assert (=> d!4555 m!16814))

(assert (=> d!4555 m!17088))

(assert (=> d!4555 m!17088))

(assert (=> d!4555 m!17090))

(assert (=> d!4555 m!16814))

(declare-fun m!19419 () Bool)

(assert (=> d!4555 m!19419))

(declare-fun m!19421 () Bool)

(assert (=> d!4555 m!19421))

(assert (=> b!24691 m!16814))

(assert (=> b!24691 m!17084))

(assert (=> b!23555 d!4555))

(assert (=> b!23555 d!4419))

(assert (=> b!23555 d!4421))

(declare-fun d!4557 () Bool)

(assert (=> d!4557 (= (+!45 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!121 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> d!4557 true))

(declare-fun _$5!55 () Unit!514)

(assert (=> d!4557 (= (choose!209 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) (index!2358 lt!8282) #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162)) _$5!55)))

(declare-fun bs!1018 () Bool)

(assert (= bs!1018 d!4557))

(assert (=> bs!1018 m!16888))

(assert (=> bs!1018 m!16888))

(assert (=> bs!1018 m!17080))

(assert (=> bs!1018 m!16852))

(assert (=> bs!1018 m!17082))

(assert (=> d!4029 d!4557))

(assert (=> d!4029 d!4261))

(declare-fun d!4559 () Bool)

(declare-fun e!15967 () Bool)

(assert (=> d!4559 e!15967))

(declare-fun res!15001 () Bool)

(assert (=> d!4559 (=> res!15001 e!15967)))

(declare-fun lt!9410 () Bool)

(assert (=> d!4559 (= res!15001 (not lt!9410))))

(declare-fun lt!9411 () Bool)

(assert (=> d!4559 (= lt!9410 lt!9411)))

(declare-fun lt!9409 () Unit!514)

(declare-fun e!15968 () Unit!514)

(assert (=> d!4559 (= lt!9409 e!15968)))

(declare-fun c!3358 () Bool)

(assert (=> d!4559 (= c!3358 lt!9411)))

(assert (=> d!4559 (= lt!9411 (containsKey!25 (toList!292 lt!8722) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> d!4559 (= (contains!220 lt!8722 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) lt!9410)))

(declare-fun b!24692 () Bool)

(declare-fun lt!9412 () Unit!514)

(assert (=> b!24692 (= e!15968 lt!9412)))

(assert (=> b!24692 (= lt!9412 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8722) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24692 (isDefined!23 (getValueByKey!61 (toList!292 lt!8722) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24693 () Bool)

(declare-fun Unit!580 () Unit!514)

(assert (=> b!24693 (= e!15968 Unit!580)))

(declare-fun b!24694 () Bool)

(assert (=> b!24694 (= e!15967 (isDefined!23 (getValueByKey!61 (toList!292 lt!8722) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))))

(assert (= (and d!4559 c!3358) b!24692))

(assert (= (and d!4559 (not c!3358)) b!24693))

(assert (= (and d!4559 (not res!15001)) b!24694))

(assert (=> d!4559 m!16992))

(declare-fun m!19423 () Bool)

(assert (=> d!4559 m!19423))

(assert (=> b!24692 m!16992))

(declare-fun m!19425 () Bool)

(assert (=> b!24692 m!19425))

(assert (=> b!24692 m!16992))

(assert (=> b!24692 m!18121))

(assert (=> b!24692 m!18121))

(declare-fun m!19427 () Bool)

(assert (=> b!24692 m!19427))

(assert (=> b!24694 m!16992))

(assert (=> b!24694 m!18121))

(assert (=> b!24694 m!18121))

(assert (=> b!24694 m!19427))

(assert (=> b!23782 d!4559))

(declare-fun d!4561 () Bool)

(assert (=> d!4561 (= (isDefined!23 (getValueByKey!61 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))) (not (isEmpty!174 (getValueByKey!61 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))))

(declare-fun bs!1019 () Bool)

(assert (= bs!1019 d!4561))

(assert (=> bs!1019 m!17066))

(declare-fun m!19429 () Bool)

(assert (=> bs!1019 m!19429))

(assert (=> b!23548 d!4561))

(declare-fun d!4563 () Bool)

(declare-fun c!3359 () Bool)

(assert (=> d!4563 (= c!3359 (and ((_ is Cons!561) (toList!292 call!1946)) (= (_1!480 (h!1127 (toList!292 call!1946))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))))))

(declare-fun e!15969 () Option!67)

(assert (=> d!4563 (= (getValueByKey!61 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))) e!15969)))

(declare-fun b!24698 () Bool)

(declare-fun e!15970 () Option!67)

(assert (=> b!24698 (= e!15970 None!65)))

(declare-fun b!24697 () Bool)

(assert (=> b!24697 (= e!15970 (getValueByKey!61 (t!3238 (toList!292 call!1946)) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(declare-fun b!24696 () Bool)

(assert (=> b!24696 (= e!15969 e!15970)))

(declare-fun c!3360 () Bool)

(assert (=> b!24696 (= c!3360 (and ((_ is Cons!561) (toList!292 call!1946)) (not (= (_1!480 (h!1127 (toList!292 call!1946))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))))

(declare-fun b!24695 () Bool)

(assert (=> b!24695 (= e!15969 (Some!66 (_2!480 (h!1127 (toList!292 call!1946)))))))

(assert (= (and d!4563 c!3359) b!24695))

(assert (= (and d!4563 (not c!3359)) b!24696))

(assert (= (and b!24696 c!3360) b!24697))

(assert (= (and b!24696 (not c!3360)) b!24698))

(assert (=> b!24697 m!16874))

(declare-fun m!19431 () Bool)

(assert (=> b!24697 m!19431))

(assert (=> b!23548 d!4563))

(declare-fun d!4565 () Bool)

(assert (=> d!4565 (= (apply!29 (+!45 lt!8450 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8454) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8450 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8454)))))

(declare-fun bs!1020 () Bool)

(assert (= bs!1020 d!4565))

(declare-fun m!19433 () Bool)

(assert (=> bs!1020 m!19433))

(assert (=> bs!1020 m!19433))

(declare-fun m!19435 () Bool)

(assert (=> bs!1020 m!19435))

(assert (=> b!23511 d!4565))

(declare-fun d!4567 () Bool)

(declare-fun e!15971 () Bool)

(assert (=> d!4567 e!15971))

(declare-fun res!15002 () Bool)

(assert (=> d!4567 (=> (not res!15002) (not e!15971))))

(declare-fun lt!9413 () ListLongMap!553)

(assert (=> d!4567 (= res!15002 (contains!220 lt!9413 (_1!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9416 () List!565)

(assert (=> d!4567 (= lt!9413 (ListLongMap!554 lt!9416))))

(declare-fun lt!9414 () Unit!514)

(declare-fun lt!9415 () Unit!514)

(assert (=> d!4567 (= lt!9414 lt!9415)))

(assert (=> d!4567 (= (getValueByKey!61 lt!9416 (_1!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4567 (= lt!9415 (lemmaContainsTupThenGetReturnValue!18 lt!9416 (_1!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4567 (= lt!9416 (insertStrictlySorted!18 (toList!292 lt!8440) (_1!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4567 (= (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9413)))

(declare-fun b!24699 () Bool)

(declare-fun res!15003 () Bool)

(assert (=> b!24699 (=> (not res!15003) (not e!15971))))

(assert (=> b!24699 (= res!15003 (= (getValueByKey!61 (toList!292 lt!9413) (_1!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24700 () Bool)

(assert (=> b!24700 (= e!15971 (contains!221 (toList!292 lt!9413) (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4567 res!15002) b!24699))

(assert (= (and b!24699 res!15003) b!24700))

(declare-fun m!19437 () Bool)

(assert (=> d!4567 m!19437))

(declare-fun m!19439 () Bool)

(assert (=> d!4567 m!19439))

(declare-fun m!19441 () Bool)

(assert (=> d!4567 m!19441))

(declare-fun m!19443 () Bool)

(assert (=> d!4567 m!19443))

(declare-fun m!19445 () Bool)

(assert (=> b!24699 m!19445))

(declare-fun m!19447 () Bool)

(assert (=> b!24700 m!19447))

(assert (=> b!23511 d!4567))

(declare-fun d!4569 () Bool)

(assert (=> d!4569 (= (apply!29 lt!8450 lt!8454) (get!391 (getValueByKey!61 (toList!292 lt!8450) lt!8454)))))

(declare-fun bs!1021 () Bool)

(assert (= bs!1021 d!4569))

(declare-fun m!19449 () Bool)

(assert (=> bs!1021 m!19449))

(assert (=> bs!1021 m!19449))

(declare-fun m!19451 () Bool)

(assert (=> bs!1021 m!19451))

(assert (=> b!23511 d!4569))

(declare-fun d!4571 () Bool)

(assert (=> d!4571 (= (apply!29 (+!45 lt!8442 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8445) (apply!29 lt!8442 lt!8445))))

(declare-fun lt!9417 () Unit!514)

(assert (=> d!4571 (= lt!9417 (choose!213 lt!8442 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8445))))

(declare-fun e!15972 () Bool)

(assert (=> d!4571 e!15972))

(declare-fun res!15004 () Bool)

(assert (=> d!4571 (=> (not res!15004) (not e!15972))))

(assert (=> d!4571 (= res!15004 (contains!220 lt!8442 lt!8445))))

(assert (=> d!4571 (= (addApplyDifferent!14 lt!8442 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8445) lt!9417)))

(declare-fun b!24701 () Bool)

(assert (=> b!24701 (= e!15972 (not (= lt!8445 lt!8438)))))

(assert (= (and d!4571 res!15004) b!24701))

(declare-fun m!19453 () Bool)

(assert (=> d!4571 m!19453))

(assert (=> d!4571 m!17020))

(assert (=> d!4571 m!17018))

(declare-fun m!19455 () Bool)

(assert (=> d!4571 m!19455))

(assert (=> d!4571 m!17020))

(assert (=> d!4571 m!17028))

(assert (=> b!23511 d!4571))

(declare-fun d!4573 () Bool)

(assert (=> d!4573 (= (apply!29 lt!8442 lt!8445) (get!391 (getValueByKey!61 (toList!292 lt!8442) lt!8445)))))

(declare-fun bs!1022 () Bool)

(assert (= bs!1022 d!4573))

(declare-fun m!19457 () Bool)

(assert (=> bs!1022 m!19457))

(assert (=> bs!1022 m!19457))

(declare-fun m!19459 () Bool)

(assert (=> bs!1022 m!19459))

(assert (=> b!23511 d!4573))

(declare-fun d!4575 () Bool)

(assert (=> d!4575 (= (apply!29 (+!45 lt!8442 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8445) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8442 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8445)))))

(declare-fun bs!1023 () Bool)

(assert (= bs!1023 d!4575))

(declare-fun m!19461 () Bool)

(assert (=> bs!1023 m!19461))

(assert (=> bs!1023 m!19461))

(declare-fun m!19463 () Bool)

(assert (=> bs!1023 m!19463))

(assert (=> b!23511 d!4575))

(declare-fun d!4577 () Bool)

(assert (=> d!4577 (= (apply!29 (+!45 lt!8443 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8441) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8443 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8441)))))

(declare-fun bs!1024 () Bool)

(assert (= bs!1024 d!4577))

(declare-fun m!19465 () Bool)

(assert (=> bs!1024 m!19465))

(assert (=> bs!1024 m!19465))

(declare-fun m!19467 () Bool)

(assert (=> bs!1024 m!19467))

(assert (=> b!23511 d!4577))

(declare-fun d!4579 () Bool)

(declare-fun e!15973 () Bool)

(assert (=> d!4579 e!15973))

(declare-fun res!15005 () Bool)

(assert (=> d!4579 (=> (not res!15005) (not e!15973))))

(declare-fun lt!9418 () ListLongMap!553)

(assert (=> d!4579 (= res!15005 (contains!220 lt!9418 (_1!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9421 () List!565)

(assert (=> d!4579 (= lt!9418 (ListLongMap!554 lt!9421))))

(declare-fun lt!9419 () Unit!514)

(declare-fun lt!9420 () Unit!514)

(assert (=> d!4579 (= lt!9419 lt!9420)))

(assert (=> d!4579 (= (getValueByKey!61 lt!9421 (_1!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4579 (= lt!9420 (lemmaContainsTupThenGetReturnValue!18 lt!9421 (_1!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4579 (= lt!9421 (insertStrictlySorted!18 (toList!292 lt!8450) (_1!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4579 (= (+!45 lt!8450 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9418)))

(declare-fun b!24702 () Bool)

(declare-fun res!15006 () Bool)

(assert (=> b!24702 (=> (not res!15006) (not e!15973))))

(assert (=> b!24702 (= res!15006 (= (getValueByKey!61 (toList!292 lt!9418) (_1!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24703 () Bool)

(assert (=> b!24703 (= e!15973 (contains!221 (toList!292 lt!9418) (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4579 res!15005) b!24702))

(assert (= (and b!24702 res!15006) b!24703))

(declare-fun m!19469 () Bool)

(assert (=> d!4579 m!19469))

(declare-fun m!19471 () Bool)

(assert (=> d!4579 m!19471))

(declare-fun m!19473 () Bool)

(assert (=> d!4579 m!19473))

(declare-fun m!19475 () Bool)

(assert (=> d!4579 m!19475))

(declare-fun m!19477 () Bool)

(assert (=> b!24702 m!19477))

(declare-fun m!19479 () Bool)

(assert (=> b!24703 m!19479))

(assert (=> b!23511 d!4579))

(declare-fun d!4581 () Bool)

(declare-fun e!15974 () Bool)

(assert (=> d!4581 e!15974))

(declare-fun res!15007 () Bool)

(assert (=> d!4581 (=> (not res!15007) (not e!15974))))

(declare-fun lt!9422 () ListLongMap!553)

(assert (=> d!4581 (= res!15007 (contains!220 lt!9422 (_1!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9425 () List!565)

(assert (=> d!4581 (= lt!9422 (ListLongMap!554 lt!9425))))

(declare-fun lt!9423 () Unit!514)

(declare-fun lt!9424 () Unit!514)

(assert (=> d!4581 (= lt!9423 lt!9424)))

(assert (=> d!4581 (= (getValueByKey!61 lt!9425 (_1!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4581 (= lt!9424 (lemmaContainsTupThenGetReturnValue!18 lt!9425 (_1!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4581 (= lt!9425 (insertStrictlySorted!18 (toList!292 lt!8442) (_1!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4581 (= (+!45 lt!8442 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9422)))

(declare-fun b!24704 () Bool)

(declare-fun res!15008 () Bool)

(assert (=> b!24704 (=> (not res!15008) (not e!15974))))

(assert (=> b!24704 (= res!15008 (= (getValueByKey!61 (toList!292 lt!9422) (_1!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24705 () Bool)

(assert (=> b!24705 (= e!15974 (contains!221 (toList!292 lt!9422) (tuple2!947 lt!8438 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4581 res!15007) b!24704))

(assert (= (and b!24704 res!15008) b!24705))

(declare-fun m!19481 () Bool)

(assert (=> d!4581 m!19481))

(declare-fun m!19483 () Bool)

(assert (=> d!4581 m!19483))

(declare-fun m!19485 () Bool)

(assert (=> d!4581 m!19485))

(declare-fun m!19487 () Bool)

(assert (=> d!4581 m!19487))

(declare-fun m!19489 () Bool)

(assert (=> b!24704 m!19489))

(declare-fun m!19491 () Bool)

(assert (=> b!24705 m!19491))

(assert (=> b!23511 d!4581))

(declare-fun d!4583 () Bool)

(declare-fun e!15975 () Bool)

(assert (=> d!4583 e!15975))

(declare-fun res!15009 () Bool)

(assert (=> d!4583 (=> (not res!15009) (not e!15975))))

(declare-fun lt!9426 () ListLongMap!553)

(assert (=> d!4583 (= res!15009 (contains!220 lt!9426 (_1!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9429 () List!565)

(assert (=> d!4583 (= lt!9426 (ListLongMap!554 lt!9429))))

(declare-fun lt!9427 () Unit!514)

(declare-fun lt!9428 () Unit!514)

(assert (=> d!4583 (= lt!9427 lt!9428)))

(assert (=> d!4583 (= (getValueByKey!61 lt!9429 (_1!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4583 (= lt!9428 (lemmaContainsTupThenGetReturnValue!18 lt!9429 (_1!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4583 (= lt!9429 (insertStrictlySorted!18 (toList!292 lt!8443) (_1!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4583 (= (+!45 lt!8443 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9426)))

(declare-fun b!24706 () Bool)

(declare-fun res!15010 () Bool)

(assert (=> b!24706 (=> (not res!15010) (not e!15975))))

(assert (=> b!24706 (= res!15010 (= (getValueByKey!61 (toList!292 lt!9426) (_1!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24707 () Bool)

(assert (=> b!24707 (= e!15975 (contains!221 (toList!292 lt!9426) (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4583 res!15009) b!24706))

(assert (= (and b!24706 res!15010) b!24707))

(declare-fun m!19493 () Bool)

(assert (=> d!4583 m!19493))

(declare-fun m!19495 () Bool)

(assert (=> d!4583 m!19495))

(declare-fun m!19497 () Bool)

(assert (=> d!4583 m!19497))

(declare-fun m!19499 () Bool)

(assert (=> d!4583 m!19499))

(declare-fun m!19501 () Bool)

(assert (=> b!24706 m!19501))

(declare-fun m!19503 () Bool)

(assert (=> b!24707 m!19503))

(assert (=> b!23511 d!4583))

(declare-fun d!4585 () Bool)

(assert (=> d!4585 (= (apply!29 lt!8443 lt!8441) (get!391 (getValueByKey!61 (toList!292 lt!8443) lt!8441)))))

(declare-fun bs!1025 () Bool)

(assert (= bs!1025 d!4585))

(declare-fun m!19505 () Bool)

(assert (=> bs!1025 m!19505))

(assert (=> bs!1025 m!19505))

(declare-fun m!19507 () Bool)

(assert (=> bs!1025 m!19507))

(assert (=> b!23511 d!4585))

(declare-fun d!4587 () Bool)

(assert (=> d!4587 (= (apply!29 (+!45 lt!8450 (tuple2!947 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8454) (apply!29 lt!8450 lt!8454))))

(declare-fun lt!9430 () Unit!514)

(assert (=> d!4587 (= lt!9430 (choose!213 lt!8450 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8454))))

(declare-fun e!15976 () Bool)

(assert (=> d!4587 e!15976))

(declare-fun res!15011 () Bool)

(assert (=> d!4587 (=> (not res!15011) (not e!15976))))

(assert (=> d!4587 (= res!15011 (contains!220 lt!8450 lt!8454))))

(assert (=> d!4587 (= (addApplyDifferent!14 lt!8450 lt!8436 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8454) lt!9430)))

(declare-fun b!24708 () Bool)

(assert (=> b!24708 (= e!15976 (not (= lt!8454 lt!8436)))))

(assert (= (and d!4587 res!15011) b!24708))

(declare-fun m!19509 () Bool)

(assert (=> d!4587 m!19509))

(assert (=> d!4587 m!17012))

(assert (=> d!4587 m!17008))

(declare-fun m!19511 () Bool)

(assert (=> d!4587 m!19511))

(assert (=> d!4587 m!17012))

(assert (=> d!4587 m!17026))

(assert (=> b!23511 d!4587))

(declare-fun d!4589 () Bool)

(assert (=> d!4589 (= (apply!29 (+!45 lt!8443 (tuple2!947 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8441) (apply!29 lt!8443 lt!8441))))

(declare-fun lt!9431 () Unit!514)

(assert (=> d!4589 (= lt!9431 (choose!213 lt!8443 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8441))))

(declare-fun e!15977 () Bool)

(assert (=> d!4589 e!15977))

(declare-fun res!15012 () Bool)

(assert (=> d!4589 (=> (not res!15012) (not e!15977))))

(assert (=> d!4589 (= res!15012 (contains!220 lt!8443 lt!8441))))

(assert (=> d!4589 (= (addApplyDifferent!14 lt!8443 lt!8446 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8441) lt!9431)))

(declare-fun b!24709 () Bool)

(assert (=> b!24709 (= e!15977 (not (= lt!8441 lt!8446)))))

(assert (= (and d!4589 res!15012) b!24709))

(declare-fun m!19513 () Bool)

(assert (=> d!4589 m!19513))

(assert (=> d!4589 m!17022))

(assert (=> d!4589 m!17002))

(declare-fun m!19515 () Bool)

(assert (=> d!4589 m!19515))

(assert (=> d!4589 m!17022))

(assert (=> d!4589 m!17024))

(assert (=> b!23511 d!4589))

(declare-fun d!4591 () Bool)

(assert (=> d!4591 (contains!220 (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8452)))

(declare-fun lt!9432 () Unit!514)

(assert (=> d!4591 (= lt!9432 (choose!214 lt!8440 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8452))))

(assert (=> d!4591 (contains!220 lt!8440 lt!8452)))

(assert (=> d!4591 (= (addStillContains!14 lt!8440 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8452) lt!9432)))

(declare-fun bs!1026 () Bool)

(assert (= bs!1026 d!4591))

(assert (=> bs!1026 m!17004))

(assert (=> bs!1026 m!17004))

(assert (=> bs!1026 m!17006))

(declare-fun m!19517 () Bool)

(assert (=> bs!1026 m!19517))

(declare-fun m!19519 () Bool)

(assert (=> bs!1026 m!19519))

(assert (=> b!23511 d!4591))

(declare-fun d!4593 () Bool)

(declare-fun e!15978 () Bool)

(assert (=> d!4593 e!15978))

(declare-fun res!15013 () Bool)

(assert (=> d!4593 (=> res!15013 e!15978)))

(declare-fun lt!9434 () Bool)

(assert (=> d!4593 (= res!15013 (not lt!9434))))

(declare-fun lt!9435 () Bool)

(assert (=> d!4593 (= lt!9434 lt!9435)))

(declare-fun lt!9433 () Unit!514)

(declare-fun e!15979 () Unit!514)

(assert (=> d!4593 (= lt!9433 e!15979)))

(declare-fun c!3361 () Bool)

(assert (=> d!4593 (= c!3361 lt!9435)))

(assert (=> d!4593 (= lt!9435 (containsKey!25 (toList!292 (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8452))))

(assert (=> d!4593 (= (contains!220 (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8452) lt!9434)))

(declare-fun b!24710 () Bool)

(declare-fun lt!9436 () Unit!514)

(assert (=> b!24710 (= e!15979 lt!9436)))

(assert (=> b!24710 (= lt!9436 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8452))))

(assert (=> b!24710 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8452))))

(declare-fun b!24711 () Bool)

(declare-fun Unit!581 () Unit!514)

(assert (=> b!24711 (= e!15979 Unit!581)))

(declare-fun b!24712 () Bool)

(assert (=> b!24712 (= e!15978 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8440 (tuple2!947 lt!8451 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8452)))))

(assert (= (and d!4593 c!3361) b!24710))

(assert (= (and d!4593 (not c!3361)) b!24711))

(assert (= (and d!4593 (not res!15013)) b!24712))

(declare-fun m!19521 () Bool)

(assert (=> d!4593 m!19521))

(declare-fun m!19523 () Bool)

(assert (=> b!24710 m!19523))

(declare-fun m!19525 () Bool)

(assert (=> b!24710 m!19525))

(assert (=> b!24710 m!19525))

(declare-fun m!19527 () Bool)

(assert (=> b!24710 m!19527))

(assert (=> b!24712 m!19525))

(assert (=> b!24712 m!19525))

(assert (=> b!24712 m!19527))

(assert (=> b!23511 d!4593))

(assert (=> b!23511 d!4491))

(declare-fun d!4595 () Bool)

(assert (=> d!4595 (= (apply!29 lt!8512 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8512) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1027 () Bool)

(assert (= bs!1027 d!4595))

(assert (=> bs!1027 m!18265))

(assert (=> bs!1027 m!18265))

(declare-fun m!19529 () Bool)

(assert (=> bs!1027 m!19529))

(assert (=> b!23586 d!4595))

(assert (=> b!23800 d!4197))

(assert (=> b!23626 d!4467))

(assert (=> b!23554 d!4477))

(assert (=> b!23554 d!4089))

(declare-fun b!24713 () Bool)

(declare-fun e!15984 () ListLongMap!553)

(declare-fun call!2170 () ListLongMap!553)

(assert (=> b!24713 (= e!15984 call!2170)))

(declare-fun b!24714 () Bool)

(declare-fun res!15022 () Bool)

(declare-fun e!15987 () Bool)

(assert (=> b!24714 (=> (not res!15022) (not e!15987))))

(declare-fun e!15982 () Bool)

(assert (=> b!24714 (= res!15022 e!15982)))

(declare-fun c!3362 () Bool)

(assert (=> b!24714 (= c!3362 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24715 () Bool)

(declare-fun e!15981 () Bool)

(declare-fun e!15989 () Bool)

(assert (=> b!24715 (= e!15981 e!15989)))

(declare-fun res!15018 () Bool)

(assert (=> b!24715 (=> (not res!15018) (not e!15989))))

(declare-fun lt!9446 () ListLongMap!553)

(assert (=> b!24715 (= res!15018 (contains!220 lt!9446 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24715 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24716 () Bool)

(declare-fun e!15980 () Bool)

(declare-fun e!15988 () Bool)

(assert (=> b!24716 (= e!15980 e!15988)))

(declare-fun res!15021 () Bool)

(declare-fun call!2166 () Bool)

(assert (=> b!24716 (= res!15021 call!2166)))

(assert (=> b!24716 (=> (not res!15021) (not e!15988))))

(declare-fun b!24717 () Bool)

(declare-fun e!15992 () Unit!514)

(declare-fun lt!9437 () Unit!514)

(assert (=> b!24717 (= e!15992 lt!9437)))

(declare-fun lt!9442 () ListLongMap!553)

(assert (=> b!24717 (= lt!9442 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9453 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9453 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9454 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9454 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9457 () Unit!514)

(assert (=> b!24717 (= lt!9457 (addStillContains!14 lt!9442 lt!9453 (zeroValue!1666 lt!8162) lt!9454))))

(assert (=> b!24717 (contains!220 (+!45 lt!9442 (tuple2!947 lt!9453 (zeroValue!1666 lt!8162))) lt!9454)))

(declare-fun lt!9451 () Unit!514)

(assert (=> b!24717 (= lt!9451 lt!9457)))

(declare-fun lt!9444 () ListLongMap!553)

(assert (=> b!24717 (= lt!9444 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9440 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9440 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9447 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9447 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9450 () Unit!514)

(assert (=> b!24717 (= lt!9450 (addApplyDifferent!14 lt!9444 lt!9440 (minValue!1666 lt!8162) lt!9447))))

(assert (=> b!24717 (= (apply!29 (+!45 lt!9444 (tuple2!947 lt!9440 (minValue!1666 lt!8162))) lt!9447) (apply!29 lt!9444 lt!9447))))

(declare-fun lt!9441 () Unit!514)

(assert (=> b!24717 (= lt!9441 lt!9450)))

(declare-fun lt!9445 () ListLongMap!553)

(assert (=> b!24717 (= lt!9445 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9448 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9448 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9443 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9443 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9449 () Unit!514)

(assert (=> b!24717 (= lt!9449 (addApplyDifferent!14 lt!9445 lt!9448 (zeroValue!1666 lt!8162) lt!9443))))

(assert (=> b!24717 (= (apply!29 (+!45 lt!9445 (tuple2!947 lt!9448 (zeroValue!1666 lt!8162))) lt!9443) (apply!29 lt!9445 lt!9443))))

(declare-fun lt!9458 () Unit!514)

(assert (=> b!24717 (= lt!9458 lt!9449)))

(declare-fun lt!9452 () ListLongMap!553)

(assert (=> b!24717 (= lt!9452 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9438 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9438 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9456 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9456 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!24717 (= lt!9437 (addApplyDifferent!14 lt!9452 lt!9438 (minValue!1666 lt!8162) lt!9456))))

(assert (=> b!24717 (= (apply!29 (+!45 lt!9452 (tuple2!947 lt!9438 (minValue!1666 lt!8162))) lt!9456) (apply!29 lt!9452 lt!9456))))

(declare-fun call!2169 () ListLongMap!553)

(declare-fun bm!2162 () Bool)

(assert (=> bm!2162 (= call!2169 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!24718 () Bool)

(declare-fun call!2167 () Bool)

(assert (=> b!24718 (= e!15982 (not call!2167))))

(declare-fun bm!2163 () Bool)

(declare-fun call!2164 () ListLongMap!553)

(declare-fun call!2168 () ListLongMap!553)

(assert (=> bm!2163 (= call!2164 call!2168)))

(declare-fun bm!2164 () Bool)

(declare-fun call!2165 () ListLongMap!553)

(declare-fun c!3366 () Bool)

(declare-fun c!3365 () Bool)

(assert (=> bm!2164 (= call!2168 (+!45 (ite c!3365 call!2169 (ite c!3366 call!2165 call!2170)) (ite (or c!3365 c!3366) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun b!24719 () Bool)

(declare-fun Unit!582 () Unit!514)

(assert (=> b!24719 (= e!15992 Unit!582)))

(declare-fun b!24720 () Bool)

(assert (=> b!24720 (= e!15980 (not call!2166))))

(declare-fun b!24721 () Bool)

(declare-fun c!3363 () Bool)

(assert (=> b!24721 (= c!3363 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!15990 () ListLongMap!553)

(assert (=> b!24721 (= e!15990 e!15984)))

(declare-fun b!24722 () Bool)

(declare-fun e!15986 () ListLongMap!553)

(assert (=> b!24722 (= e!15986 e!15990)))

(assert (=> b!24722 (= c!3366 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2165 () Bool)

(assert (=> bm!2165 (= call!2170 call!2165)))

(declare-fun b!24723 () Bool)

(assert (=> b!24723 (= e!15988 (= (apply!29 lt!9446 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8162)))))

(declare-fun bm!2166 () Bool)

(assert (=> bm!2166 (= call!2165 call!2169)))

(declare-fun b!24724 () Bool)

(declare-fun e!15991 () Bool)

(assert (=> b!24724 (= e!15982 e!15991)))

(declare-fun res!15020 () Bool)

(assert (=> b!24724 (= res!15020 call!2167)))

(assert (=> b!24724 (=> (not res!15020) (not e!15991))))

(declare-fun d!4597 () Bool)

(assert (=> d!4597 e!15987))

(declare-fun res!15016 () Bool)

(assert (=> d!4597 (=> (not res!15016) (not e!15987))))

(assert (=> d!4597 (= res!15016 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))))

(declare-fun lt!9455 () ListLongMap!553)

(assert (=> d!4597 (= lt!9446 lt!9455)))

(declare-fun lt!9439 () Unit!514)

(assert (=> d!4597 (= lt!9439 e!15992)))

(declare-fun c!3367 () Bool)

(declare-fun e!15985 () Bool)

(assert (=> d!4597 (= c!3367 e!15985)))

(declare-fun res!15017 () Bool)

(assert (=> d!4597 (=> (not res!15017) (not e!15985))))

(assert (=> d!4597 (= res!15017 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4597 (= lt!9455 e!15986)))

(assert (=> d!4597 (= c!3365 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4597 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4597 (= (getCurrentListMap!121 (_keys!3164 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9446)))

(declare-fun bm!2161 () Bool)

(assert (=> bm!2161 (= call!2167 (contains!220 lt!9446 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2167 () Bool)

(assert (=> bm!2167 (= call!2166 (contains!220 lt!9446 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24725 () Bool)

(assert (=> b!24725 (= e!15991 (= (apply!29 lt!9446 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8162)))))

(declare-fun b!24726 () Bool)

(declare-fun res!15015 () Bool)

(assert (=> b!24726 (=> (not res!15015) (not e!15987))))

(assert (=> b!24726 (= res!15015 e!15981)))

(declare-fun res!15014 () Bool)

(assert (=> b!24726 (=> res!15014 e!15981)))

(declare-fun e!15983 () Bool)

(assert (=> b!24726 (= res!15014 (not e!15983))))

(declare-fun res!15019 () Bool)

(assert (=> b!24726 (=> (not res!15019) (not e!15983))))

(assert (=> b!24726 (= res!15019 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24727 () Bool)

(assert (=> b!24727 (= e!15985 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24728 () Bool)

(assert (=> b!24728 (= e!15987 e!15980)))

(declare-fun c!3364 () Bool)

(assert (=> b!24728 (= c!3364 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24729 () Bool)

(assert (=> b!24729 (= e!15989 (= (apply!29 lt!9446 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162)))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24729 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))))))

(assert (=> b!24729 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24730 () Bool)

(assert (=> b!24730 (= e!15984 call!2164)))

(declare-fun b!24731 () Bool)

(assert (=> b!24731 (= e!15986 (+!45 call!2168 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(declare-fun b!24732 () Bool)

(assert (=> b!24732 (= e!15990 call!2164)))

(declare-fun b!24733 () Bool)

(assert (=> b!24733 (= e!15983 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4597 c!3365) b!24731))

(assert (= (and d!4597 (not c!3365)) b!24722))

(assert (= (and b!24722 c!3366) b!24732))

(assert (= (and b!24722 (not c!3366)) b!24721))

(assert (= (and b!24721 c!3363) b!24730))

(assert (= (and b!24721 (not c!3363)) b!24713))

(assert (= (or b!24730 b!24713) bm!2165))

(assert (= (or b!24732 bm!2165) bm!2166))

(assert (= (or b!24732 b!24730) bm!2163))

(assert (= (or b!24731 bm!2166) bm!2162))

(assert (= (or b!24731 bm!2163) bm!2164))

(assert (= (and d!4597 res!15017) b!24727))

(assert (= (and d!4597 c!3367) b!24717))

(assert (= (and d!4597 (not c!3367)) b!24719))

(assert (= (and d!4597 res!15016) b!24726))

(assert (= (and b!24726 res!15019) b!24733))

(assert (= (and b!24726 (not res!15014)) b!24715))

(assert (= (and b!24715 res!15018) b!24729))

(assert (= (and b!24726 res!15015) b!24714))

(assert (= (and b!24714 c!3362) b!24724))

(assert (= (and b!24714 (not c!3362)) b!24718))

(assert (= (and b!24724 res!15020) b!24725))

(assert (= (or b!24724 b!24718) bm!2161))

(assert (= (and b!24714 res!15022) b!24728))

(assert (= (and b!24728 c!3364) b!24716))

(assert (= (and b!24728 (not c!3364)) b!24720))

(assert (= (and b!24716 res!15021) b!24723))

(assert (= (or b!24716 b!24720) bm!2167))

(declare-fun b_lambda!1643 () Bool)

(assert (=> (not b_lambda!1643) (not b!24729)))

(assert (=> b!24729 t!3243))

(declare-fun b_and!1547 () Bool)

(assert (= b_and!1545 (and (=> t!3243 result!1103) b_and!1547)))

(declare-fun m!19531 () Bool)

(assert (=> bm!2161 m!19531))

(declare-fun m!19533 () Bool)

(assert (=> b!24723 m!19533))

(declare-fun m!19535 () Bool)

(assert (=> bm!2167 m!19535))

(declare-fun m!19537 () Bool)

(assert (=> bm!2164 m!19537))

(declare-fun m!19539 () Bool)

(assert (=> b!24731 m!19539))

(assert (=> b!24715 m!17154))

(assert (=> b!24715 m!17154))

(declare-fun m!19541 () Bool)

(assert (=> b!24715 m!19541))

(assert (=> b!24733 m!17154))

(assert (=> b!24733 m!17154))

(assert (=> b!24733 m!17158))

(assert (=> b!24727 m!17154))

(assert (=> b!24727 m!17154))

(assert (=> b!24727 m!17158))

(declare-fun m!19543 () Bool)

(assert (=> bm!2162 m!19543))

(declare-fun m!19545 () Bool)

(assert (=> b!24717 m!19545))

(declare-fun m!19547 () Bool)

(assert (=> b!24717 m!19547))

(declare-fun m!19549 () Bool)

(assert (=> b!24717 m!19549))

(declare-fun m!19551 () Bool)

(assert (=> b!24717 m!19551))

(assert (=> b!24717 m!19549))

(declare-fun m!19553 () Bool)

(assert (=> b!24717 m!19553))

(declare-fun m!19555 () Bool)

(assert (=> b!24717 m!19555))

(declare-fun m!19557 () Bool)

(assert (=> b!24717 m!19557))

(assert (=> b!24717 m!19543))

(declare-fun m!19559 () Bool)

(assert (=> b!24717 m!19559))

(declare-fun m!19561 () Bool)

(assert (=> b!24717 m!19561))

(declare-fun m!19563 () Bool)

(assert (=> b!24717 m!19563))

(declare-fun m!19565 () Bool)

(assert (=> b!24717 m!19565))

(declare-fun m!19567 () Bool)

(assert (=> b!24717 m!19567))

(assert (=> b!24717 m!19567))

(declare-fun m!19569 () Bool)

(assert (=> b!24717 m!19569))

(assert (=> b!24717 m!19557))

(declare-fun m!19571 () Bool)

(assert (=> b!24717 m!19571))

(assert (=> b!24717 m!17154))

(assert (=> b!24717 m!19565))

(declare-fun m!19573 () Bool)

(assert (=> b!24717 m!19573))

(declare-fun m!19575 () Bool)

(assert (=> b!24725 m!19575))

(assert (=> b!24729 m!17194))

(declare-fun m!19577 () Bool)

(assert (=> b!24729 m!19577))

(assert (=> b!24729 m!17194))

(declare-fun m!19579 () Bool)

(assert (=> b!24729 m!19579))

(assert (=> b!24729 m!17154))

(declare-fun m!19581 () Bool)

(assert (=> b!24729 m!19581))

(assert (=> b!24729 m!19577))

(assert (=> b!24729 m!17154))

(assert (=> d!4597 m!17072))

(assert (=> b!23554 d!4597))

(declare-fun d!4599 () Bool)

(assert (=> d!4599 (= (apply!29 lt!8512 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!292 lt!8512) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))))

(declare-fun bs!1028 () Bool)

(assert (= bs!1028 d!4599))

(assert (=> bs!1028 m!17154))

(assert (=> bs!1028 m!18153))

(assert (=> bs!1028 m!18153))

(declare-fun m!19583 () Bool)

(assert (=> bs!1028 m!19583))

(assert (=> b!23592 d!4599))

(declare-fun d!4601 () Bool)

(declare-fun c!3368 () Bool)

(assert (=> d!4601 (= c!3368 ((_ is ValueCellFull!312) (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000)))))

(declare-fun e!15993 () V!1189)

(assert (=> d!4601 (= (get!390 (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15993)))

(declare-fun b!24734 () Bool)

(assert (=> b!24734 (= e!15993 (get!392 (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24735 () Bool)

(assert (=> b!24735 (= e!15993 (get!393 (select (arr!603 (ite (or c!3011 c!3007) (_values!1729 lt!8162) (array!1276 (store (arr!603 (_values!1729 lt!8162)) (index!2358 lt!8282) (ValueCellFull!312 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!699 (_values!1729 lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4601 c!3368) b!24734))

(assert (= (and d!4601 (not c!3368)) b!24735))

(assert (=> b!24734 m!17196))

(assert (=> b!24734 m!17194))

(declare-fun m!19585 () Bool)

(assert (=> b!24734 m!19585))

(assert (=> b!24735 m!17196))

(assert (=> b!24735 m!17194))

(declare-fun m!19587 () Bool)

(assert (=> b!24735 m!19587))

(assert (=> b!23592 d!4601))

(declare-fun d!4603 () Bool)

(assert (=> d!4603 (isDefined!23 (getValueByKey!61 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!9459 () Unit!514)

(assert (=> d!4603 (= lt!9459 (choose!217 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15994 () Bool)

(assert (=> d!4603 e!15994))

(declare-fun res!15023 () Bool)

(assert (=> d!4603 (=> (not res!15023) (not e!15994))))

(assert (=> d!4603 (= res!15023 (isStrictlySorted!168 (toList!292 call!1927)))))

(assert (=> d!4603 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) lt!9459)))

(declare-fun b!24736 () Bool)

(assert (=> b!24736 (= e!15994 (containsKey!25 (toList!292 call!1927) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4603 res!15023) b!24736))

(assert (=> d!4603 m!17575))

(assert (=> d!4603 m!17575))

(assert (=> d!4603 m!17577))

(declare-fun m!19589 () Bool)

(assert (=> d!4603 m!19589))

(declare-fun m!19591 () Bool)

(assert (=> d!4603 m!19591))

(assert (=> b!24736 m!17571))

(assert (=> b!23801 d!4603))

(assert (=> b!23801 d!4423))

(assert (=> b!23801 d!4425))

(declare-fun d!4605 () Bool)

(declare-fun e!15995 () Bool)

(assert (=> d!4605 e!15995))

(declare-fun res!15024 () Bool)

(assert (=> d!4605 (=> (not res!15024) (not e!15995))))

(declare-fun lt!9460 () ListLongMap!553)

(assert (=> d!4605 (= res!15024 (contains!220 lt!9460 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9463 () List!565)

(assert (=> d!4605 (= lt!9460 (ListLongMap!554 lt!9463))))

(declare-fun lt!9461 () Unit!514)

(declare-fun lt!9462 () Unit!514)

(assert (=> d!4605 (= lt!9461 lt!9462)))

(assert (=> d!4605 (= (getValueByKey!61 lt!9463 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4605 (= lt!9462 (lemmaContainsTupThenGetReturnValue!18 lt!9463 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4605 (= lt!9463 (insertStrictlySorted!18 (toList!292 call!1991) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4605 (= (+!45 call!1991 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9460)))

(declare-fun b!24737 () Bool)

(declare-fun res!15025 () Bool)

(assert (=> b!24737 (=> (not res!15025) (not e!15995))))

(assert (=> b!24737 (= res!15025 (= (getValueByKey!61 (toList!292 lt!9460) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24738 () Bool)

(assert (=> b!24738 (= e!15995 (contains!221 (toList!292 lt!9460) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4605 res!15024) b!24737))

(assert (= (and b!24737 res!15025) b!24738))

(declare-fun m!19593 () Bool)

(assert (=> d!4605 m!19593))

(declare-fun m!19595 () Bool)

(assert (=> d!4605 m!19595))

(declare-fun m!19597 () Bool)

(assert (=> d!4605 m!19597))

(declare-fun m!19599 () Bool)

(assert (=> d!4605 m!19599))

(declare-fun m!19601 () Bool)

(assert (=> b!24737 m!19601))

(declare-fun m!19603 () Bool)

(assert (=> b!24738 m!19603))

(assert (=> b!23620 d!4605))

(declare-fun d!4607 () Bool)

(declare-fun e!15996 () Bool)

(assert (=> d!4607 e!15996))

(declare-fun res!15026 () Bool)

(assert (=> d!4607 (=> (not res!15026) (not e!15996))))

(declare-fun lt!9464 () ListLongMap!553)

(assert (=> d!4607 (= res!15026 (contains!220 lt!9464 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun lt!9467 () List!565)

(assert (=> d!4607 (= lt!9464 (ListLongMap!554 lt!9467))))

(declare-fun lt!9465 () Unit!514)

(declare-fun lt!9466 () Unit!514)

(assert (=> d!4607 (= lt!9465 lt!9466)))

(assert (=> d!4607 (= (getValueByKey!61 lt!9467 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (=> d!4607 (= lt!9466 (lemmaContainsTupThenGetReturnValue!18 lt!9467 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (=> d!4607 (= lt!9467 (insertStrictlySorted!18 (toList!292 call!1998) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (=> d!4607 (= (+!45 call!1998 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))) lt!9464)))

(declare-fun b!24739 () Bool)

(declare-fun res!15027 () Bool)

(assert (=> b!24739 (=> (not res!15027) (not e!15996))))

(assert (=> b!24739 (= res!15027 (= (getValueByKey!61 (toList!292 lt!9464) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(declare-fun b!24740 () Bool)

(assert (=> b!24740 (= e!15996 (contains!221 (toList!292 lt!9464) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(assert (= (and d!4607 res!15026) b!24739))

(assert (= (and b!24739 res!15027) b!24740))

(declare-fun m!19605 () Bool)

(assert (=> d!4607 m!19605))

(declare-fun m!19607 () Bool)

(assert (=> d!4607 m!19607))

(declare-fun m!19609 () Bool)

(assert (=> d!4607 m!19609))

(declare-fun m!19611 () Bool)

(assert (=> d!4607 m!19611))

(declare-fun m!19613 () Bool)

(assert (=> b!24739 m!19613))

(declare-fun m!19615 () Bool)

(assert (=> b!24740 m!19615))

(assert (=> b!23653 d!4607))

(declare-fun d!4609 () Bool)

(assert (=> d!4609 (= (inRange!0 (ite c!3107 (index!2357 lt!8682) (index!2360 lt!8682)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (and (bvsge (ite c!3107 (index!2357 lt!8682) (index!2360 lt!8682)) #b00000000000000000000000000000000) (bvslt (ite c!3107 (index!2357 lt!8682) (index!2360 lt!8682)) (bvadd (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001))))))

(assert (=> bm!2016 d!4609))

(declare-fun c!3369 () Bool)

(declare-fun d!4611 () Bool)

(assert (=> d!4611 (= c!3369 (and ((_ is Cons!561) (toList!292 lt!8790)) (= (_1!480 (h!1127 (toList!292 lt!8790))) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun e!15997 () Option!67)

(assert (=> d!4611 (= (getValueByKey!61 (toList!292 lt!8790) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) e!15997)))

(declare-fun b!24744 () Bool)

(declare-fun e!15998 () Option!67)

(assert (=> b!24744 (= e!15998 None!65)))

(declare-fun b!24743 () Bool)

(assert (=> b!24743 (= e!15998 (getValueByKey!61 (t!3238 (toList!292 lt!8790)) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24742 () Bool)

(assert (=> b!24742 (= e!15997 e!15998)))

(declare-fun c!3370 () Bool)

(assert (=> b!24742 (= c!3370 (and ((_ is Cons!561) (toList!292 lt!8790)) (not (= (_1!480 (h!1127 (toList!292 lt!8790))) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun b!24741 () Bool)

(assert (=> b!24741 (= e!15997 (Some!66 (_2!480 (h!1127 (toList!292 lt!8790)))))))

(assert (= (and d!4611 c!3369) b!24741))

(assert (= (and d!4611 (not c!3369)) b!24742))

(assert (= (and b!24742 c!3370) b!24743))

(assert (= (and b!24742 (not c!3370)) b!24744))

(declare-fun m!19617 () Bool)

(assert (=> b!24743 m!19617))

(assert (=> b!23863 d!4611))

(declare-fun b!24747 () Bool)

(declare-fun res!15029 () Bool)

(declare-fun e!15999 () Bool)

(assert (=> b!24747 (=> (not res!15029) (not e!15999))))

(assert (=> b!24747 (= res!15029 (= (size!707 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvsdiv (bvadd (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4613 () Bool)

(declare-fun res!15030 () Bool)

(assert (=> d!4613 (=> (not res!15030) (not e!15999))))

(assert (=> d!4613 (= res!15030 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4613 (= (simpleValid!19 (ite c!2948 (_2!476 lt!8164) lt!8162)) e!15999)))

(declare-fun b!24745 () Bool)

(declare-fun res!15031 () Bool)

(assert (=> b!24745 (=> (not res!15031) (not e!15999))))

(assert (=> b!24745 (= res!15031 (and (= (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (bvadd (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001)) (= (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvsge (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000) (bvsle (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001))))))

(declare-fun b!24748 () Bool)

(assert (=> b!24748 (= e!15999 (and (bvsge (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000011) (bvsge (_vacant!150 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24746 () Bool)

(declare-fun res!15028 () Bool)

(assert (=> b!24746 (=> (not res!15028) (not e!15999))))

(assert (=> b!24746 (= res!15028 (bvsge (size!707 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_size!150 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (= (and d!4613 res!15030) b!24745))

(assert (= (and b!24745 res!15031) b!24746))

(assert (= (and b!24746 res!15028) b!24747))

(assert (= (and b!24747 res!15029) b!24748))

(declare-fun m!19619 () Bool)

(assert (=> b!24747 m!19619))

(assert (=> d!4613 m!16948))

(assert (=> b!24746 m!19619))

(assert (=> d!4087 d!4613))

(declare-fun d!4615 () Bool)

(declare-fun e!16000 () Bool)

(assert (=> d!4615 e!16000))

(declare-fun res!15032 () Bool)

(assert (=> d!4615 (=> res!15032 e!16000)))

(declare-fun lt!9469 () Bool)

(assert (=> d!4615 (= res!15032 (not lt!9469))))

(declare-fun lt!9470 () Bool)

(assert (=> d!4615 (= lt!9469 lt!9470)))

(declare-fun lt!9468 () Unit!514)

(declare-fun e!16001 () Unit!514)

(assert (=> d!4615 (= lt!9468 e!16001)))

(declare-fun c!3371 () Bool)

(assert (=> d!4615 (= c!3371 lt!9470)))

(assert (=> d!4615 (= lt!9470 (containsKey!25 (toList!292 lt!8465) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4615 (= (contains!220 lt!8465 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9469)))

(declare-fun b!24749 () Bool)

(declare-fun lt!9471 () Unit!514)

(assert (=> b!24749 (= e!16001 lt!9471)))

(assert (=> b!24749 (= lt!9471 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8465) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> b!24749 (isDefined!23 (getValueByKey!61 (toList!292 lt!8465) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24750 () Bool)

(declare-fun Unit!583 () Unit!514)

(assert (=> b!24750 (= e!16001 Unit!583)))

(declare-fun b!24751 () Bool)

(assert (=> b!24751 (= e!16000 (isDefined!23 (getValueByKey!61 (toList!292 lt!8465) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4615 c!3371) b!24749))

(assert (= (and d!4615 (not c!3371)) b!24750))

(assert (= (and d!4615 (not res!15032)) b!24751))

(declare-fun m!19621 () Bool)

(assert (=> d!4615 m!19621))

(declare-fun m!19623 () Bool)

(assert (=> b!24749 m!19623))

(assert (=> b!24749 m!17048))

(assert (=> b!24749 m!17048))

(declare-fun m!19625 () Bool)

(assert (=> b!24749 m!19625))

(assert (=> b!24751 m!17048))

(assert (=> b!24751 m!17048))

(assert (=> b!24751 m!19625))

(assert (=> d!4015 d!4615))

(declare-fun d!4617 () Bool)

(declare-fun c!3372 () Bool)

(assert (=> d!4617 (= c!3372 (and ((_ is Cons!561) lt!8468) (= (_1!480 (h!1127 lt!8468)) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!16002 () Option!67)

(assert (=> d!4617 (= (getValueByKey!61 lt!8468 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) e!16002)))

(declare-fun b!24755 () Bool)

(declare-fun e!16003 () Option!67)

(assert (=> b!24755 (= e!16003 None!65)))

(declare-fun b!24754 () Bool)

(assert (=> b!24754 (= e!16003 (getValueByKey!61 (t!3238 lt!8468) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24753 () Bool)

(assert (=> b!24753 (= e!16002 e!16003)))

(declare-fun c!3373 () Bool)

(assert (=> b!24753 (= c!3373 (and ((_ is Cons!561) lt!8468) (not (= (_1!480 (h!1127 lt!8468)) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24752 () Bool)

(assert (=> b!24752 (= e!16002 (Some!66 (_2!480 (h!1127 lt!8468))))))

(assert (= (and d!4617 c!3372) b!24752))

(assert (= (and d!4617 (not c!3372)) b!24753))

(assert (= (and b!24753 c!3373) b!24754))

(assert (= (and b!24753 (not c!3373)) b!24755))

(declare-fun m!19627 () Bool)

(assert (=> b!24754 m!19627))

(assert (=> d!4015 d!4617))

(declare-fun d!4619 () Bool)

(assert (=> d!4619 (= (getValueByKey!61 lt!8468 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!9472 () Unit!514)

(assert (=> d!4619 (= lt!9472 (choose!215 lt!8468 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!16004 () Bool)

(assert (=> d!4619 e!16004))

(declare-fun res!15033 () Bool)

(assert (=> d!4619 (=> (not res!15033) (not e!16004))))

(assert (=> d!4619 (= res!15033 (isStrictlySorted!168 lt!8468))))

(assert (=> d!4619 (= (lemmaContainsTupThenGetReturnValue!18 lt!8468 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9472)))

(declare-fun b!24756 () Bool)

(declare-fun res!15034 () Bool)

(assert (=> b!24756 (=> (not res!15034) (not e!16004))))

(assert (=> b!24756 (= res!15034 (containsKey!25 lt!8468 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24757 () Bool)

(assert (=> b!24757 (= e!16004 (contains!221 lt!8468 (tuple2!947 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4619 res!15033) b!24756))

(assert (= (and b!24756 res!15034) b!24757))

(assert (=> d!4619 m!17042))

(declare-fun m!19629 () Bool)

(assert (=> d!4619 m!19629))

(declare-fun m!19631 () Bool)

(assert (=> d!4619 m!19631))

(declare-fun m!19633 () Bool)

(assert (=> b!24756 m!19633))

(declare-fun m!19635 () Bool)

(assert (=> b!24757 m!19635))

(assert (=> d!4015 d!4619))

(declare-fun bm!2168 () Bool)

(declare-fun call!2173 () List!565)

(declare-fun call!2172 () List!565)

(assert (=> bm!2168 (= call!2173 call!2172)))

(declare-fun bm!2169 () Bool)

(declare-fun call!2171 () List!565)

(assert (=> bm!2169 (= call!2171 call!2173)))

(declare-fun b!24759 () Bool)

(declare-fun e!16005 () List!565)

(assert (=> b!24759 (= e!16005 call!2173)))

(declare-fun b!24760 () Bool)

(declare-fun c!3376 () Bool)

(assert (=> b!24760 (= c!3376 (and ((_ is Cons!561) (toList!292 e!15175)) (bvsgt (_1!480 (h!1127 (toList!292 e!15175))) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!16008 () List!565)

(assert (=> b!24760 (= e!16005 e!16008)))

(declare-fun e!16007 () List!565)

(declare-fun c!3374 () Bool)

(declare-fun b!24761 () Bool)

(assert (=> b!24761 (= e!16007 (ite c!3374 (t!3238 (toList!292 e!15175)) (ite c!3376 (Cons!561 (h!1127 (toList!292 e!15175)) (t!3238 (toList!292 e!15175))) Nil!562)))))

(declare-fun b!24762 () Bool)

(assert (=> b!24762 (= e!16007 (insertStrictlySorted!18 (t!3238 (toList!292 e!15175)) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24763 () Bool)

(assert (=> b!24763 (= e!16008 call!2171)))

(declare-fun b!24764 () Bool)

(declare-fun e!16009 () List!565)

(assert (=> b!24764 (= e!16009 e!16005)))

(assert (=> b!24764 (= c!3374 (and ((_ is Cons!561) (toList!292 e!15175)) (= (_1!480 (h!1127 (toList!292 e!15175))) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun d!4621 () Bool)

(declare-fun e!16006 () Bool)

(assert (=> d!4621 e!16006))

(declare-fun res!15036 () Bool)

(assert (=> d!4621 (=> (not res!15036) (not e!16006))))

(declare-fun lt!9473 () List!565)

(assert (=> d!4621 (= res!15036 (isStrictlySorted!168 lt!9473))))

(assert (=> d!4621 (= lt!9473 e!16009)))

(declare-fun c!3375 () Bool)

(assert (=> d!4621 (= c!3375 (and ((_ is Cons!561) (toList!292 e!15175)) (bvslt (_1!480 (h!1127 (toList!292 e!15175))) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4621 (isStrictlySorted!168 (toList!292 e!15175))))

(assert (=> d!4621 (= (insertStrictlySorted!18 (toList!292 e!15175) (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9473)))

(declare-fun b!24758 () Bool)

(assert (=> b!24758 (= e!16006 (contains!221 lt!9473 (tuple2!947 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24765 () Bool)

(assert (=> b!24765 (= e!16009 call!2172)))

(declare-fun bm!2170 () Bool)

(assert (=> bm!2170 (= call!2172 ($colon$colon!30 e!16007 (ite c!3375 (h!1127 (toList!292 e!15175)) (tuple2!947 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun c!3377 () Bool)

(assert (=> bm!2170 (= c!3377 c!3375)))

(declare-fun b!24766 () Bool)

(assert (=> b!24766 (= e!16008 call!2171)))

(declare-fun b!24767 () Bool)

(declare-fun res!15035 () Bool)

(assert (=> b!24767 (=> (not res!15035) (not e!16006))))

(assert (=> b!24767 (= res!15035 (containsKey!25 lt!9473 (_1!480 (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4621 c!3375) b!24765))

(assert (= (and d!4621 (not c!3375)) b!24764))

(assert (= (and b!24764 c!3374) b!24759))

(assert (= (and b!24764 (not c!3374)) b!24760))

(assert (= (and b!24760 c!3376) b!24763))

(assert (= (and b!24760 (not c!3376)) b!24766))

(assert (= (or b!24763 b!24766) bm!2169))

(assert (= (or b!24759 bm!2169) bm!2168))

(assert (= (or b!24765 bm!2168) bm!2170))

(assert (= (and bm!2170 c!3377) b!24762))

(assert (= (and bm!2170 (not c!3377)) b!24761))

(assert (= (and d!4621 res!15036) b!24767))

(assert (= (and b!24767 res!15035) b!24758))

(declare-fun m!19637 () Bool)

(assert (=> bm!2170 m!19637))

(declare-fun m!19639 () Bool)

(assert (=> b!24758 m!19639))

(declare-fun m!19641 () Bool)

(assert (=> b!24767 m!19641))

(declare-fun m!19643 () Bool)

(assert (=> b!24762 m!19643))

(declare-fun m!19645 () Bool)

(assert (=> d!4621 m!19645))

(declare-fun m!19647 () Bool)

(assert (=> d!4621 m!19647))

(assert (=> d!4015 d!4621))

(declare-fun d!4623 () Bool)

(declare-fun res!15037 () Bool)

(declare-fun e!16010 () Bool)

(assert (=> d!4623 (=> res!15037 e!16010)))

(assert (=> d!4623 (= res!15037 (= (select (arr!604 lt!8346) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_1!480 lt!8342)))))

(assert (=> d!4623 (= (arrayContainsKey!0 lt!8346 (_1!480 lt!8342) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!16010)))

(declare-fun b!24768 () Bool)

(declare-fun e!16011 () Bool)

(assert (=> b!24768 (= e!16010 e!16011)))

(declare-fun res!15038 () Bool)

(assert (=> b!24768 (=> (not res!15038) (not e!16011))))

(assert (=> b!24768 (= res!15038 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!700 lt!8346)))))

(declare-fun b!24769 () Bool)

(assert (=> b!24769 (= e!16011 (arrayContainsKey!0 lt!8346 (_1!480 lt!8342) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4623 (not res!15037)) b!24768))

(assert (= (and b!24768 res!15038) b!24769))

(declare-fun m!19649 () Bool)

(assert (=> d!4623 m!19649))

(declare-fun m!19651 () Bool)

(assert (=> b!24769 m!19651))

(assert (=> b!23437 d!4623))

(declare-fun d!4625 () Bool)

(declare-fun e!16012 () Bool)

(assert (=> d!4625 e!16012))

(declare-fun res!15039 () Bool)

(assert (=> d!4625 (=> res!15039 e!16012)))

(declare-fun lt!9475 () Bool)

(assert (=> d!4625 (= res!15039 (not lt!9475))))

(declare-fun lt!9476 () Bool)

(assert (=> d!4625 (= lt!9475 lt!9476)))

(declare-fun lt!9474 () Unit!514)

(declare-fun e!16013 () Unit!514)

(assert (=> d!4625 (= lt!9474 e!16013)))

(declare-fun c!3378 () Bool)

(assert (=> d!4625 (= c!3378 lt!9476)))

(assert (=> d!4625 (= lt!9476 (containsKey!25 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(assert (=> d!4625 (= (contains!220 (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))) lt!9475)))

(declare-fun b!24770 () Bool)

(declare-fun lt!9477 () Unit!514)

(assert (=> b!24770 (= e!16013 lt!9477)))

(assert (=> b!24770 (= lt!9477 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(assert (=> b!24770 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(declare-fun b!24771 () Bool)

(declare-fun Unit!584 () Unit!514)

(assert (=> b!24771 (= e!16013 Unit!584)))

(declare-fun b!24772 () Bool)

(assert (=> b!24772 (= e!16012 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))))))

(assert (= (and d!4625 c!3378) b!24770))

(assert (= (and d!4625 (not c!3378)) b!24771))

(assert (= (and d!4625 (not res!15039)) b!24772))

(assert (=> d!4625 m!16874))

(declare-fun m!19653 () Bool)

(assert (=> d!4625 m!19653))

(assert (=> b!24770 m!16874))

(declare-fun m!19655 () Bool)

(assert (=> b!24770 m!19655))

(assert (=> b!24770 m!16874))

(declare-fun m!19657 () Bool)

(assert (=> b!24770 m!19657))

(assert (=> b!24770 m!19657))

(declare-fun m!19659 () Bool)

(assert (=> b!24770 m!19659))

(assert (=> b!24772 m!16874))

(assert (=> b!24772 m!19657))

(assert (=> b!24772 m!19657))

(assert (=> b!24772 m!19659))

(assert (=> b!23551 d!4625))

(declare-fun b!24773 () Bool)

(declare-fun e!16018 () ListLongMap!553)

(declare-fun call!2180 () ListLongMap!553)

(assert (=> b!24773 (= e!16018 call!2180)))

(declare-fun b!24774 () Bool)

(declare-fun res!15048 () Bool)

(declare-fun e!16021 () Bool)

(assert (=> b!24774 (=> (not res!15048) (not e!16021))))

(declare-fun e!16016 () Bool)

(assert (=> b!24774 (= res!15048 e!16016)))

(declare-fun c!3379 () Bool)

(assert (=> b!24774 (= c!3379 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24775 () Bool)

(declare-fun e!16015 () Bool)

(declare-fun e!16023 () Bool)

(assert (=> b!24775 (= e!16015 e!16023)))

(declare-fun res!15044 () Bool)

(assert (=> b!24775 (=> (not res!15044) (not e!16023))))

(declare-fun lt!9487 () ListLongMap!553)

(assert (=> b!24775 (= res!15044 (contains!220 lt!9487 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (=> b!24775 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24776 () Bool)

(declare-fun e!16014 () Bool)

(declare-fun e!16022 () Bool)

(assert (=> b!24776 (= e!16014 e!16022)))

(declare-fun res!15047 () Bool)

(declare-fun call!2176 () Bool)

(assert (=> b!24776 (= res!15047 call!2176)))

(assert (=> b!24776 (=> (not res!15047) (not e!16022))))

(declare-fun b!24777 () Bool)

(declare-fun e!16026 () Unit!514)

(declare-fun lt!9478 () Unit!514)

(assert (=> b!24777 (= e!16026 lt!9478)))

(declare-fun lt!9483 () ListLongMap!553)

(assert (=> b!24777 (= lt!9483 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9494 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9494 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9495 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9495 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9498 () Unit!514)

(assert (=> b!24777 (= lt!9498 (addStillContains!14 lt!9483 lt!9494 (zeroValue!1666 lt!8162) lt!9495))))

(assert (=> b!24777 (contains!220 (+!45 lt!9483 (tuple2!947 lt!9494 (zeroValue!1666 lt!8162))) lt!9495)))

(declare-fun lt!9492 () Unit!514)

(assert (=> b!24777 (= lt!9492 lt!9498)))

(declare-fun lt!9485 () ListLongMap!553)

(assert (=> b!24777 (= lt!9485 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9481 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9481 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9488 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9488 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9491 () Unit!514)

(assert (=> b!24777 (= lt!9491 (addApplyDifferent!14 lt!9485 lt!9481 (minValue!1666 lt!8162) lt!9488))))

(assert (=> b!24777 (= (apply!29 (+!45 lt!9485 (tuple2!947 lt!9481 (minValue!1666 lt!8162))) lt!9488) (apply!29 lt!9485 lt!9488))))

(declare-fun lt!9482 () Unit!514)

(assert (=> b!24777 (= lt!9482 lt!9491)))

(declare-fun lt!9486 () ListLongMap!553)

(assert (=> b!24777 (= lt!9486 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9489 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9489 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9484 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9484 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(declare-fun lt!9490 () Unit!514)

(assert (=> b!24777 (= lt!9490 (addApplyDifferent!14 lt!9486 lt!9489 (zeroValue!1666 lt!8162) lt!9484))))

(assert (=> b!24777 (= (apply!29 (+!45 lt!9486 (tuple2!947 lt!9489 (zeroValue!1666 lt!8162))) lt!9484) (apply!29 lt!9486 lt!9484))))

(declare-fun lt!9499 () Unit!514)

(assert (=> b!24777 (= lt!9499 lt!9490)))

(declare-fun lt!9493 () ListLongMap!553)

(assert (=> b!24777 (= lt!9493 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun lt!9479 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9479 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9497 () (_ BitVec 64))

(assert (=> b!24777 (= lt!9497 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))

(assert (=> b!24777 (= lt!9478 (addApplyDifferent!14 lt!9493 lt!9479 (minValue!1666 lt!8162) lt!9497))))

(assert (=> b!24777 (= (apply!29 (+!45 lt!9493 (tuple2!947 lt!9479 (minValue!1666 lt!8162))) lt!9497) (apply!29 lt!9493 lt!9497))))

(declare-fun bm!2172 () Bool)

(declare-fun call!2179 () ListLongMap!553)

(assert (=> bm!2172 (= call!2179 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(declare-fun b!24778 () Bool)

(declare-fun call!2177 () Bool)

(assert (=> b!24778 (= e!16016 (not call!2177))))

(declare-fun bm!2173 () Bool)

(declare-fun call!2174 () ListLongMap!553)

(declare-fun call!2178 () ListLongMap!553)

(assert (=> bm!2173 (= call!2174 call!2178)))

(declare-fun c!3382 () Bool)

(declare-fun c!3383 () Bool)

(declare-fun bm!2174 () Bool)

(declare-fun call!2175 () ListLongMap!553)

(assert (=> bm!2174 (= call!2178 (+!45 (ite c!3382 call!2179 (ite c!3383 call!2175 call!2180)) (ite (or c!3382 c!3383) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(declare-fun b!24779 () Bool)

(declare-fun Unit!585 () Unit!514)

(assert (=> b!24779 (= e!16026 Unit!585)))

(declare-fun b!24780 () Bool)

(assert (=> b!24780 (= e!16014 (not call!2176))))

(declare-fun b!24781 () Bool)

(declare-fun c!3380 () Bool)

(assert (=> b!24781 (= c!3380 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!16024 () ListLongMap!553)

(assert (=> b!24781 (= e!16024 e!16018)))

(declare-fun b!24782 () Bool)

(declare-fun e!16020 () ListLongMap!553)

(assert (=> b!24782 (= e!16020 e!16024)))

(assert (=> b!24782 (= c!3383 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2175 () Bool)

(assert (=> bm!2175 (= call!2180 call!2175)))

(declare-fun b!24783 () Bool)

(assert (=> b!24783 (= e!16022 (= (apply!29 lt!9487 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8162)))))

(declare-fun bm!2176 () Bool)

(assert (=> bm!2176 (= call!2175 call!2179)))

(declare-fun b!24784 () Bool)

(declare-fun e!16025 () Bool)

(assert (=> b!24784 (= e!16016 e!16025)))

(declare-fun res!15046 () Bool)

(assert (=> b!24784 (= res!15046 call!2177)))

(assert (=> b!24784 (=> (not res!15046) (not e!16025))))

(declare-fun d!4627 () Bool)

(assert (=> d!4627 e!16021))

(declare-fun res!15042 () Bool)

(assert (=> d!4627 (=> (not res!15042) (not e!16021))))

(assert (=> d!4627 (= res!15042 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))))

(declare-fun lt!9496 () ListLongMap!553)

(assert (=> d!4627 (= lt!9487 lt!9496)))

(declare-fun lt!9480 () Unit!514)

(assert (=> d!4627 (= lt!9480 e!16026)))

(declare-fun c!3384 () Bool)

(declare-fun e!16019 () Bool)

(assert (=> d!4627 (= c!3384 e!16019)))

(declare-fun res!15043 () Bool)

(assert (=> d!4627 (=> (not res!15043) (not e!16019))))

(assert (=> d!4627 (= res!15043 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(assert (=> d!4627 (= lt!9496 e!16020)))

(assert (=> d!4627 (= c!3382 (and (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4627 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4627 (= (getCurrentListMap!121 (_keys!3164 lt!8162) lt!8288 (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9487)))

(declare-fun bm!2171 () Bool)

(assert (=> bm!2171 (= call!2177 (contains!220 lt!9487 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2177 () Bool)

(assert (=> bm!2177 (= call!2176 (contains!220 lt!9487 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24785 () Bool)

(assert (=> b!24785 (= e!16025 (= (apply!29 lt!9487 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8162)))))

(declare-fun b!24786 () Bool)

(declare-fun res!15041 () Bool)

(assert (=> b!24786 (=> (not res!15041) (not e!16021))))

(assert (=> b!24786 (= res!15041 e!16015)))

(declare-fun res!15040 () Bool)

(assert (=> b!24786 (=> res!15040 e!16015)))

(declare-fun e!16017 () Bool)

(assert (=> b!24786 (= res!15040 (not e!16017))))

(declare-fun res!15045 () Bool)

(assert (=> b!24786 (=> (not res!15045) (not e!16017))))

(assert (=> b!24786 (= res!15045 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24787 () Bool)

(assert (=> b!24787 (= e!16019 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(declare-fun b!24788 () Bool)

(assert (=> b!24788 (= e!16021 e!16014)))

(declare-fun c!3381 () Bool)

(assert (=> b!24788 (= c!3381 (not (= (bvand (extraKeys!1641 lt!8162) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24789 () Bool)

(assert (=> b!24789 (= e!16023 (= (apply!29 lt!9487 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 lt!8288) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24789 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 lt!8288)))))

(assert (=> b!24789 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8162))))))

(declare-fun b!24790 () Bool)

(assert (=> b!24790 (= e!16018 call!2174)))

(declare-fun b!24791 () Bool)

(assert (=> b!24791 (= e!16020 (+!45 call!2178 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))

(declare-fun b!24792 () Bool)

(assert (=> b!24792 (= e!16024 call!2174)))

(declare-fun b!24793 () Bool)

(assert (=> b!24793 (= e!16017 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)))))

(assert (= (and d!4627 c!3382) b!24791))

(assert (= (and d!4627 (not c!3382)) b!24782))

(assert (= (and b!24782 c!3383) b!24792))

(assert (= (and b!24782 (not c!3383)) b!24781))

(assert (= (and b!24781 c!3380) b!24790))

(assert (= (and b!24781 (not c!3380)) b!24773))

(assert (= (or b!24790 b!24773) bm!2175))

(assert (= (or b!24792 bm!2175) bm!2176))

(assert (= (or b!24792 b!24790) bm!2173))

(assert (= (or b!24791 bm!2176) bm!2172))

(assert (= (or b!24791 bm!2173) bm!2174))

(assert (= (and d!4627 res!15043) b!24787))

(assert (= (and d!4627 c!3384) b!24777))

(assert (= (and d!4627 (not c!3384)) b!24779))

(assert (= (and d!4627 res!15042) b!24786))

(assert (= (and b!24786 res!15045) b!24793))

(assert (= (and b!24786 (not res!15040)) b!24775))

(assert (= (and b!24775 res!15044) b!24789))

(assert (= (and b!24786 res!15041) b!24774))

(assert (= (and b!24774 c!3379) b!24784))

(assert (= (and b!24774 (not c!3379)) b!24778))

(assert (= (and b!24784 res!15046) b!24785))

(assert (= (or b!24784 b!24778) bm!2171))

(assert (= (and b!24774 res!15048) b!24788))

(assert (= (and b!24788 c!3381) b!24776))

(assert (= (and b!24788 (not c!3381)) b!24780))

(assert (= (and b!24776 res!15047) b!24783))

(assert (= (or b!24776 b!24780) bm!2177))

(declare-fun b_lambda!1645 () Bool)

(assert (=> (not b_lambda!1645) (not b!24789)))

(assert (=> b!24789 t!3243))

(declare-fun b_and!1549 () Bool)

(assert (= b_and!1547 (and (=> t!3243 result!1103) b_and!1549)))

(declare-fun m!19661 () Bool)

(assert (=> bm!2171 m!19661))

(declare-fun m!19663 () Bool)

(assert (=> b!24783 m!19663))

(declare-fun m!19665 () Bool)

(assert (=> bm!2177 m!19665))

(declare-fun m!19667 () Bool)

(assert (=> bm!2174 m!19667))

(declare-fun m!19669 () Bool)

(assert (=> b!24791 m!19669))

(assert (=> b!24775 m!17154))

(assert (=> b!24775 m!17154))

(declare-fun m!19671 () Bool)

(assert (=> b!24775 m!19671))

(assert (=> b!24793 m!17154))

(assert (=> b!24793 m!17154))

(assert (=> b!24793 m!17158))

(assert (=> b!24787 m!17154))

(assert (=> b!24787 m!17154))

(assert (=> b!24787 m!17158))

(declare-fun m!19673 () Bool)

(assert (=> bm!2172 m!19673))

(declare-fun m!19675 () Bool)

(assert (=> b!24777 m!19675))

(declare-fun m!19677 () Bool)

(assert (=> b!24777 m!19677))

(declare-fun m!19679 () Bool)

(assert (=> b!24777 m!19679))

(declare-fun m!19681 () Bool)

(assert (=> b!24777 m!19681))

(assert (=> b!24777 m!19679))

(declare-fun m!19683 () Bool)

(assert (=> b!24777 m!19683))

(declare-fun m!19685 () Bool)

(assert (=> b!24777 m!19685))

(declare-fun m!19687 () Bool)

(assert (=> b!24777 m!19687))

(assert (=> b!24777 m!19673))

(declare-fun m!19689 () Bool)

(assert (=> b!24777 m!19689))

(declare-fun m!19691 () Bool)

(assert (=> b!24777 m!19691))

(declare-fun m!19693 () Bool)

(assert (=> b!24777 m!19693))

(declare-fun m!19695 () Bool)

(assert (=> b!24777 m!19695))

(declare-fun m!19697 () Bool)

(assert (=> b!24777 m!19697))

(assert (=> b!24777 m!19697))

(declare-fun m!19699 () Bool)

(assert (=> b!24777 m!19699))

(assert (=> b!24777 m!19687))

(declare-fun m!19701 () Bool)

(assert (=> b!24777 m!19701))

(assert (=> b!24777 m!17154))

(assert (=> b!24777 m!19695))

(declare-fun m!19703 () Bool)

(assert (=> b!24777 m!19703))

(declare-fun m!19705 () Bool)

(assert (=> b!24785 m!19705))

(assert (=> b!24789 m!17194))

(declare-fun m!19707 () Bool)

(assert (=> b!24789 m!19707))

(assert (=> b!24789 m!17194))

(declare-fun m!19709 () Bool)

(assert (=> b!24789 m!19709))

(assert (=> b!24789 m!17154))

(declare-fun m!19711 () Bool)

(assert (=> b!24789 m!19711))

(assert (=> b!24789 m!19707))

(assert (=> b!24789 m!17154))

(assert (=> d!4627 m!17072))

(assert (=> b!23551 d!4627))

(declare-fun b!24794 () Bool)

(declare-fun e!16028 () SeekEntryResult!59)

(assert (=> b!24794 (= e!16028 (seekKeyOrZeroReturnVacant!0 (bvadd (x!5581 lt!8551) #b00000000000000000000000000000001) (nextIndex!0 (index!2359 lt!8551) (x!5581 lt!8551) (mask!4730 lt!8162)) (index!2359 lt!8551) #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)))))

(declare-fun b!24795 () Bool)

(declare-fun e!16027 () SeekEntryResult!59)

(assert (=> b!24795 (= e!16027 (Found!59 (index!2359 lt!8551)))))

(declare-fun b!24796 () Bool)

(declare-fun e!16029 () SeekEntryResult!59)

(assert (=> b!24796 (= e!16029 e!16027)))

(declare-fun c!3385 () Bool)

(declare-fun lt!9500 () (_ BitVec 64))

(assert (=> b!24796 (= c!3385 (= lt!9500 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24797 () Bool)

(assert (=> b!24797 (= e!16029 Undefined!59)))

(declare-fun b!24798 () Bool)

(declare-fun c!3387 () Bool)

(assert (=> b!24798 (= c!3387 (= lt!9500 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24798 (= e!16027 e!16028)))

(declare-fun b!24799 () Bool)

(assert (=> b!24799 (= e!16028 (MissingVacant!59 (index!2359 lt!8551)))))

(declare-fun d!4629 () Bool)

(declare-fun lt!9501 () SeekEntryResult!59)

(assert (=> d!4629 (and (or ((_ is Undefined!59) lt!9501) (not ((_ is Found!59) lt!9501)) (and (bvsge (index!2358 lt!9501) #b00000000000000000000000000000000) (bvslt (index!2358 lt!9501) (size!700 (_keys!3164 lt!8162))))) (or ((_ is Undefined!59) lt!9501) ((_ is Found!59) lt!9501) (not ((_ is MissingVacant!59) lt!9501)) (not (= (index!2360 lt!9501) (index!2359 lt!8551))) (and (bvsge (index!2360 lt!9501) #b00000000000000000000000000000000) (bvslt (index!2360 lt!9501) (size!700 (_keys!3164 lt!8162))))) (or ((_ is Undefined!59) lt!9501) (ite ((_ is Found!59) lt!9501) (= (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!9501)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!59) lt!9501) (= (index!2360 lt!9501) (index!2359 lt!8551)) (= (select (arr!604 (_keys!3164 lt!8162)) (index!2360 lt!9501)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!4629 (= lt!9501 e!16029)))

(declare-fun c!3386 () Bool)

(assert (=> d!4629 (= c!3386 (bvsge (x!5581 lt!8551) #b01111111111111111111111111111110))))

(assert (=> d!4629 (= lt!9500 (select (arr!604 (_keys!3164 lt!8162)) (index!2359 lt!8551)))))

(assert (=> d!4629 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4629 (= (seekKeyOrZeroReturnVacant!0 (x!5581 lt!8551) (index!2359 lt!8551) (index!2359 lt!8551) #b0000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 lt!8162) (mask!4730 lt!8162)) lt!9501)))

(assert (= (and d!4629 c!3386) b!24797))

(assert (= (and d!4629 (not c!3386)) b!24796))

(assert (= (and b!24796 c!3385) b!24795))

(assert (= (and b!24796 (not c!3385)) b!24798))

(assert (= (and b!24798 c!3387) b!24799))

(assert (= (and b!24798 (not c!3387)) b!24794))

(declare-fun m!19713 () Bool)

(assert (=> b!24794 m!19713))

(assert (=> b!24794 m!19713))

(declare-fun m!19715 () Bool)

(assert (=> b!24794 m!19715))

(declare-fun m!19717 () Bool)

(assert (=> d!4629 m!19717))

(declare-fun m!19719 () Bool)

(assert (=> d!4629 m!19719))

(assert (=> d!4629 m!17294))

(assert (=> d!4629 m!17072))

(assert (=> b!23631 d!4629))

(declare-fun d!4631 () Bool)

(declare-fun lt!9502 () tuple2!948)

(assert (=> d!4631 (or (bvsle (_2!481 lt!9502) #b00000000000000000000000000001000) (bvsge (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!481 lt!9502)) (bvslt (bvadd (bvand (bvashr (_2!481 lt!9502) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun e!16030 () tuple2!948)

(assert (=> d!4631 (= lt!9502 e!16030)))

(declare-fun c!3388 () Bool)

(declare-fun lt!9503 () (_ BitVec 32))

(assert (=> d!4631 (= c!3388 (and (bvsgt lt!9503 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!9503) (bvsge (bvadd (bvand (bvashr lt!9503 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4631 (= lt!9503 (bvlshr lt!8582 #b00000000000000000000000000000001))))

(assert (=> d!4631 (and (bvsgt lt!8582 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8582) (bvsge (bvadd (bvand (bvashr lt!8582 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4631 (= (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) lt!8582) lt!9502)))

(declare-fun b!24800 () Bool)

(assert (=> b!24800 (= e!16030 (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) lt!9503))))

(declare-fun b!24801 () Bool)

(declare-fun Unit!586 () Unit!514)

(assert (=> b!24801 (= e!16030 (tuple2!949 Unit!586 lt!9503))))

(assert (= (and d!4631 c!3388) b!24800))

(assert (= (and d!4631 (not c!3388)) b!24801))

(declare-fun m!19721 () Bool)

(assert (=> b!24800 m!19721))

(assert (=> b!23660 d!4631))

(declare-fun d!4633 () Bool)

(assert (=> d!4633 (contains!220 (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!8520)))

(declare-fun lt!9504 () Unit!514)

(assert (=> d!4633 (= lt!9504 (choose!214 lt!8508 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) lt!8520))))

(assert (=> d!4633 (contains!220 lt!8508 lt!8520)))

(assert (=> d!4633 (= (addStillContains!14 lt!8508 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) lt!8520) lt!9504)))

(declare-fun bs!1029 () Bool)

(assert (= bs!1029 d!4633))

(assert (=> bs!1029 m!17166))

(assert (=> bs!1029 m!17166))

(assert (=> bs!1029 m!17168))

(declare-fun m!19723 () Bool)

(assert (=> bs!1029 m!19723))

(declare-fun m!19725 () Bool)

(assert (=> bs!1029 m!19725))

(assert (=> b!23580 d!4633))

(declare-fun d!4635 () Bool)

(declare-fun e!16031 () Bool)

(assert (=> d!4635 e!16031))

(declare-fun res!15049 () Bool)

(assert (=> d!4635 (=> res!15049 e!16031)))

(declare-fun lt!9506 () Bool)

(assert (=> d!4635 (= res!15049 (not lt!9506))))

(declare-fun lt!9507 () Bool)

(assert (=> d!4635 (= lt!9506 lt!9507)))

(declare-fun lt!9505 () Unit!514)

(declare-fun e!16032 () Unit!514)

(assert (=> d!4635 (= lt!9505 e!16032)))

(declare-fun c!3389 () Bool)

(assert (=> d!4635 (= c!3389 lt!9507)))

(assert (=> d!4635 (= lt!9507 (containsKey!25 (toList!292 (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) lt!8520))))

(assert (=> d!4635 (= (contains!220 (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!8520) lt!9506)))

(declare-fun b!24802 () Bool)

(declare-fun lt!9508 () Unit!514)

(assert (=> b!24802 (= e!16032 lt!9508)))

(assert (=> b!24802 (= lt!9508 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) lt!8520))))

(assert (=> b!24802 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) lt!8520))))

(declare-fun b!24803 () Bool)

(declare-fun Unit!587 () Unit!514)

(assert (=> b!24803 (= e!16032 Unit!587)))

(declare-fun b!24804 () Bool)

(assert (=> b!24804 (= e!16031 (isDefined!23 (getValueByKey!61 (toList!292 (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) lt!8520)))))

(assert (= (and d!4635 c!3389) b!24802))

(assert (= (and d!4635 (not c!3389)) b!24803))

(assert (= (and d!4635 (not res!15049)) b!24804))

(declare-fun m!19727 () Bool)

(assert (=> d!4635 m!19727))

(declare-fun m!19729 () Bool)

(assert (=> b!24802 m!19729))

(declare-fun m!19731 () Bool)

(assert (=> b!24802 m!19731))

(assert (=> b!24802 m!19731))

(declare-fun m!19733 () Bool)

(assert (=> b!24802 m!19733))

(assert (=> b!24804 m!19731))

(assert (=> b!24804 m!19731))

(assert (=> b!24804 m!19733))

(assert (=> b!23580 d!4635))

(declare-fun d!4637 () Bool)

(declare-fun e!16033 () Bool)

(assert (=> d!4637 e!16033))

(declare-fun res!15050 () Bool)

(assert (=> d!4637 (=> (not res!15050) (not e!16033))))

(declare-fun lt!9509 () ListLongMap!553)

(assert (=> d!4637 (= res!15050 (contains!220 lt!9509 (_1!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(declare-fun lt!9512 () List!565)

(assert (=> d!4637 (= lt!9509 (ListLongMap!554 lt!9512))))

(declare-fun lt!9510 () Unit!514)

(declare-fun lt!9511 () Unit!514)

(assert (=> d!4637 (= lt!9510 lt!9511)))

(assert (=> d!4637 (= (getValueByKey!61 lt!9512 (_1!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(assert (=> d!4637 (= lt!9511 (lemmaContainsTupThenGetReturnValue!18 lt!9512 (_1!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(assert (=> d!4637 (= lt!9512 (insertStrictlySorted!18 (toList!292 lt!8511) (_1!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(assert (=> d!4637 (= (+!45 lt!8511 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!9509)))

(declare-fun b!24805 () Bool)

(declare-fun res!15051 () Bool)

(assert (=> b!24805 (=> (not res!15051) (not e!16033))))

(assert (=> b!24805 (= res!15051 (= (getValueByKey!61 (toList!292 lt!9509) (_1!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))))))))

(declare-fun b!24806 () Bool)

(assert (=> b!24806 (= e!16033 (contains!221 (toList!292 lt!9509) (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))))))

(assert (= (and d!4637 res!15050) b!24805))

(assert (= (and b!24805 res!15051) b!24806))

(declare-fun m!19735 () Bool)

(assert (=> d!4637 m!19735))

(declare-fun m!19737 () Bool)

(assert (=> d!4637 m!19737))

(declare-fun m!19739 () Bool)

(assert (=> d!4637 m!19739))

(declare-fun m!19741 () Bool)

(assert (=> d!4637 m!19741))

(declare-fun m!19743 () Bool)

(assert (=> b!24805 m!19743))

(declare-fun m!19745 () Bool)

(assert (=> b!24806 m!19745))

(assert (=> b!23580 d!4637))

(assert (=> b!23580 d!4523))

(declare-fun d!4639 () Bool)

(assert (=> d!4639 (= (apply!29 (+!45 lt!8510 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!8513) (apply!29 lt!8510 lt!8513))))

(declare-fun lt!9513 () Unit!514)

(assert (=> d!4639 (= lt!9513 (choose!213 lt!8510 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) lt!8513))))

(declare-fun e!16034 () Bool)

(assert (=> d!4639 e!16034))

(declare-fun res!15052 () Bool)

(assert (=> d!4639 (=> (not res!15052) (not e!16034))))

(assert (=> d!4639 (= res!15052 (contains!220 lt!8510 lt!8513))))

(assert (=> d!4639 (= (addApplyDifferent!14 lt!8510 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) lt!8513) lt!9513)))

(declare-fun b!24807 () Bool)

(assert (=> b!24807 (= e!16034 (not (= lt!8513 lt!8506)))))

(assert (= (and d!4639 res!15052) b!24807))

(declare-fun m!19747 () Bool)

(assert (=> d!4639 m!19747))

(assert (=> d!4639 m!17182))

(assert (=> d!4639 m!17180))

(declare-fun m!19749 () Bool)

(assert (=> d!4639 m!19749))

(assert (=> d!4639 m!17182))

(assert (=> d!4639 m!17190))

(assert (=> b!23580 d!4639))

(declare-fun d!4641 () Bool)

(assert (=> d!4641 (= (apply!29 lt!8511 lt!8509) (get!391 (getValueByKey!61 (toList!292 lt!8511) lt!8509)))))

(declare-fun bs!1030 () Bool)

(assert (= bs!1030 d!4641))

(declare-fun m!19751 () Bool)

(assert (=> bs!1030 m!19751))

(assert (=> bs!1030 m!19751))

(declare-fun m!19753 () Bool)

(assert (=> bs!1030 m!19753))

(assert (=> b!23580 d!4641))

(declare-fun d!4643 () Bool)

(declare-fun e!16035 () Bool)

(assert (=> d!4643 e!16035))

(declare-fun res!15053 () Bool)

(assert (=> d!4643 (=> (not res!15053) (not e!16035))))

(declare-fun lt!9514 () ListLongMap!553)

(assert (=> d!4643 (= res!15053 (contains!220 lt!9514 (_1!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(declare-fun lt!9517 () List!565)

(assert (=> d!4643 (= lt!9514 (ListLongMap!554 lt!9517))))

(declare-fun lt!9515 () Unit!514)

(declare-fun lt!9516 () Unit!514)

(assert (=> d!4643 (= lt!9515 lt!9516)))

(assert (=> d!4643 (= (getValueByKey!61 lt!9517 (_1!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4643 (= lt!9516 (lemmaContainsTupThenGetReturnValue!18 lt!9517 (_1!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4643 (= lt!9517 (insertStrictlySorted!18 (toList!292 lt!8510) (_1!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4643 (= (+!45 lt!8510 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!9514)))

(declare-fun b!24808 () Bool)

(declare-fun res!15054 () Bool)

(assert (=> b!24808 (=> (not res!15054) (not e!16035))))

(assert (=> b!24808 (= res!15054 (= (getValueByKey!61 (toList!292 lt!9514) (_1!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))))

(declare-fun b!24809 () Bool)

(assert (=> b!24809 (= e!16035 (contains!221 (toList!292 lt!9514) (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))

(assert (= (and d!4643 res!15053) b!24808))

(assert (= (and b!24808 res!15054) b!24809))

(declare-fun m!19755 () Bool)

(assert (=> d!4643 m!19755))

(declare-fun m!19757 () Bool)

(assert (=> d!4643 m!19757))

(declare-fun m!19759 () Bool)

(assert (=> d!4643 m!19759))

(declare-fun m!19761 () Bool)

(assert (=> d!4643 m!19761))

(declare-fun m!19763 () Bool)

(assert (=> b!24808 m!19763))

(declare-fun m!19765 () Bool)

(assert (=> b!24809 m!19765))

(assert (=> b!23580 d!4643))

(declare-fun d!4645 () Bool)

(assert (=> d!4645 (= (apply!29 lt!8518 lt!8522) (get!391 (getValueByKey!61 (toList!292 lt!8518) lt!8522)))))

(declare-fun bs!1031 () Bool)

(assert (= bs!1031 d!4645))

(declare-fun m!19767 () Bool)

(assert (=> bs!1031 m!19767))

(assert (=> bs!1031 m!19767))

(declare-fun m!19769 () Bool)

(assert (=> bs!1031 m!19769))

(assert (=> b!23580 d!4645))

(declare-fun d!4647 () Bool)

(assert (=> d!4647 (= (apply!29 (+!45 lt!8511 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!8509) (apply!29 lt!8511 lt!8509))))

(declare-fun lt!9518 () Unit!514)

(assert (=> d!4647 (= lt!9518 (choose!213 lt!8511 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) lt!8509))))

(declare-fun e!16036 () Bool)

(assert (=> d!4647 e!16036))

(declare-fun res!15055 () Bool)

(assert (=> d!4647 (=> (not res!15055) (not e!16036))))

(assert (=> d!4647 (= res!15055 (contains!220 lt!8511 lt!8509))))

(assert (=> d!4647 (= (addApplyDifferent!14 lt!8511 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)) lt!8509) lt!9518)))

(declare-fun b!24810 () Bool)

(assert (=> b!24810 (= e!16036 (not (= lt!8509 lt!8514)))))

(assert (= (and d!4647 res!15055) b!24810))

(declare-fun m!19771 () Bool)

(assert (=> d!4647 m!19771))

(assert (=> d!4647 m!17184))

(assert (=> d!4647 m!17164))

(declare-fun m!19773 () Bool)

(assert (=> d!4647 m!19773))

(assert (=> d!4647 m!17184))

(assert (=> d!4647 m!17186))

(assert (=> b!23580 d!4647))

(declare-fun d!4649 () Bool)

(assert (=> d!4649 (= (apply!29 (+!45 lt!8511 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!8509) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8511 (tuple2!947 lt!8514 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) lt!8509)))))

(declare-fun bs!1032 () Bool)

(assert (= bs!1032 d!4649))

(declare-fun m!19775 () Bool)

(assert (=> bs!1032 m!19775))

(assert (=> bs!1032 m!19775))

(declare-fun m!19777 () Bool)

(assert (=> bs!1032 m!19777))

(assert (=> b!23580 d!4649))

(declare-fun d!4651 () Bool)

(assert (=> d!4651 (= (apply!29 (+!45 lt!8518 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!8522) (apply!29 lt!8518 lt!8522))))

(declare-fun lt!9519 () Unit!514)

(assert (=> d!4651 (= lt!9519 (choose!213 lt!8518 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) lt!8522))))

(declare-fun e!16037 () Bool)

(assert (=> d!4651 e!16037))

(declare-fun res!15056 () Bool)

(assert (=> d!4651 (=> (not res!15056) (not e!16037))))

(assert (=> d!4651 (= res!15056 (contains!220 lt!8518 lt!8522))))

(assert (=> d!4651 (= (addApplyDifferent!14 lt!8518 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)) lt!8522) lt!9519)))

(declare-fun b!24811 () Bool)

(assert (=> b!24811 (= e!16037 (not (= lt!8522 lt!8504)))))

(assert (= (and d!4651 res!15056) b!24811))

(declare-fun m!19779 () Bool)

(assert (=> d!4651 m!19779))

(assert (=> d!4651 m!17174))

(assert (=> d!4651 m!17170))

(declare-fun m!19781 () Bool)

(assert (=> d!4651 m!19781))

(assert (=> d!4651 m!17174))

(assert (=> d!4651 m!17188))

(assert (=> b!23580 d!4651))

(declare-fun d!4653 () Bool)

(declare-fun e!16038 () Bool)

(assert (=> d!4653 e!16038))

(declare-fun res!15057 () Bool)

(assert (=> d!4653 (=> (not res!15057) (not e!16038))))

(declare-fun lt!9520 () ListLongMap!553)

(assert (=> d!4653 (= res!15057 (contains!220 lt!9520 (_1!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(declare-fun lt!9523 () List!565)

(assert (=> d!4653 (= lt!9520 (ListLongMap!554 lt!9523))))

(declare-fun lt!9521 () Unit!514)

(declare-fun lt!9522 () Unit!514)

(assert (=> d!4653 (= lt!9521 lt!9522)))

(assert (=> d!4653 (= (getValueByKey!61 lt!9523 (_1!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(assert (=> d!4653 (= lt!9522 (lemmaContainsTupThenGetReturnValue!18 lt!9523 (_1!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(assert (=> d!4653 (= lt!9523 (insertStrictlySorted!18 (toList!292 lt!8508) (_1!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))))))

(assert (=> d!4653 (= (+!45 lt!8508 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))) lt!9520)))

(declare-fun b!24812 () Bool)

(declare-fun res!15058 () Bool)

(assert (=> b!24812 (=> (not res!15058) (not e!16038))))

(assert (=> b!24812 (= res!15058 (= (getValueByKey!61 (toList!292 lt!9520) (_1!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))))))))

(declare-fun b!24813 () Bool)

(assert (=> b!24813 (= e!16038 (contains!221 (toList!292 lt!9520) (tuple2!947 lt!8519 (ite (and c!3011 c!3015) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 lt!8162)))))))

(assert (= (and d!4653 res!15057) b!24812))

(assert (= (and b!24812 res!15058) b!24813))

(declare-fun m!19783 () Bool)

(assert (=> d!4653 m!19783))

(declare-fun m!19785 () Bool)

(assert (=> d!4653 m!19785))

(declare-fun m!19787 () Bool)

(assert (=> d!4653 m!19787))

(declare-fun m!19789 () Bool)

(assert (=> d!4653 m!19789))

(declare-fun m!19791 () Bool)

(assert (=> b!24812 m!19791))

(declare-fun m!19793 () Bool)

(assert (=> b!24813 m!19793))

(assert (=> b!23580 d!4653))

(declare-fun d!4655 () Bool)

(declare-fun e!16039 () Bool)

(assert (=> d!4655 e!16039))

(declare-fun res!15059 () Bool)

(assert (=> d!4655 (=> (not res!15059) (not e!16039))))

(declare-fun lt!9524 () ListLongMap!553)

(assert (=> d!4655 (= res!15059 (contains!220 lt!9524 (_1!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(declare-fun lt!9527 () List!565)

(assert (=> d!4655 (= lt!9524 (ListLongMap!554 lt!9527))))

(declare-fun lt!9525 () Unit!514)

(declare-fun lt!9526 () Unit!514)

(assert (=> d!4655 (= lt!9525 lt!9526)))

(assert (=> d!4655 (= (getValueByKey!61 lt!9527 (_1!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4655 (= lt!9526 (lemmaContainsTupThenGetReturnValue!18 lt!9527 (_1!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4655 (= lt!9527 (insertStrictlySorted!18 (toList!292 lt!8518) (_1!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) (_2!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))))))

(assert (=> d!4655 (= (+!45 lt!8518 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!9524)))

(declare-fun b!24814 () Bool)

(declare-fun res!15060 () Bool)

(assert (=> b!24814 (=> (not res!15060) (not e!16039))))

(assert (=> b!24814 (= res!15060 (= (getValueByKey!61 (toList!292 lt!9524) (_1!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) (Some!66 (_2!480 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))))

(declare-fun b!24815 () Bool)

(assert (=> b!24815 (= e!16039 (contains!221 (toList!292 lt!9524) (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))))))

(assert (= (and d!4655 res!15059) b!24814))

(assert (= (and b!24814 res!15060) b!24815))

(declare-fun m!19795 () Bool)

(assert (=> d!4655 m!19795))

(declare-fun m!19797 () Bool)

(assert (=> d!4655 m!19797))

(declare-fun m!19799 () Bool)

(assert (=> d!4655 m!19799))

(declare-fun m!19801 () Bool)

(assert (=> d!4655 m!19801))

(declare-fun m!19803 () Bool)

(assert (=> b!24814 m!19803))

(declare-fun m!19805 () Bool)

(assert (=> b!24815 m!19805))

(assert (=> b!23580 d!4655))

(declare-fun d!4657 () Bool)

(assert (=> d!4657 (= (apply!29 (+!45 lt!8510 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!8513) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8510 (tuple2!947 lt!8506 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) lt!8513)))))

(declare-fun bs!1033 () Bool)

(assert (= bs!1033 d!4657))

(declare-fun m!19807 () Bool)

(assert (=> bs!1033 m!19807))

(assert (=> bs!1033 m!19807))

(declare-fun m!19809 () Bool)

(assert (=> bs!1033 m!19809))

(assert (=> b!23580 d!4657))

(declare-fun d!4659 () Bool)

(assert (=> d!4659 (= (apply!29 lt!8510 lt!8513) (get!391 (getValueByKey!61 (toList!292 lt!8510) lt!8513)))))

(declare-fun bs!1034 () Bool)

(assert (= bs!1034 d!4659))

(declare-fun m!19811 () Bool)

(assert (=> bs!1034 m!19811))

(assert (=> bs!1034 m!19811))

(declare-fun m!19813 () Bool)

(assert (=> bs!1034 m!19813))

(assert (=> b!23580 d!4659))

(declare-fun d!4661 () Bool)

(assert (=> d!4661 (= (apply!29 (+!45 lt!8518 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162)))) lt!8522) (get!391 (getValueByKey!61 (toList!292 (+!45 lt!8518 (tuple2!947 lt!8504 (ite c!3011 (ite c!3015 (minValue!1666 lt!8162) (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8162))))) lt!8522)))))

(declare-fun bs!1035 () Bool)

(assert (= bs!1035 d!4661))

(declare-fun m!19815 () Bool)

(assert (=> bs!1035 m!19815))

(assert (=> bs!1035 m!19815))

(declare-fun m!19817 () Bool)

(assert (=> bs!1035 m!19817))

(assert (=> b!23580 d!4661))

(declare-fun d!4663 () Bool)

(declare-fun e!16040 () Bool)

(assert (=> d!4663 e!16040))

(declare-fun res!15061 () Bool)

(assert (=> d!4663 (=> res!15061 e!16040)))

(declare-fun lt!9529 () Bool)

(assert (=> d!4663 (= res!15061 (not lt!9529))))

(declare-fun lt!9530 () Bool)

(assert (=> d!4663 (= lt!9529 lt!9530)))

(declare-fun lt!9528 () Unit!514)

(declare-fun e!16041 () Unit!514)

(assert (=> d!4663 (= lt!9528 e!16041)))

(declare-fun c!3390 () Bool)

(assert (=> d!4663 (= c!3390 lt!9530)))

(assert (=> d!4663 (= lt!9530 (containsKey!25 (toList!292 lt!8694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4663 (= (contains!220 lt!8694 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9529)))

(declare-fun b!24816 () Bool)

(declare-fun lt!9531 () Unit!514)

(assert (=> b!24816 (= e!16041 lt!9531)))

(assert (=> b!24816 (= lt!9531 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24816 (isDefined!23 (getValueByKey!61 (toList!292 lt!8694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24817 () Bool)

(declare-fun Unit!588 () Unit!514)

(assert (=> b!24817 (= e!16041 Unit!588)))

(declare-fun b!24818 () Bool)

(assert (=> b!24818 (= e!16040 (isDefined!23 (getValueByKey!61 (toList!292 lt!8694) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4663 c!3390) b!24816))

(assert (= (and d!4663 (not c!3390)) b!24817))

(assert (= (and d!4663 (not res!15061)) b!24818))

(declare-fun m!19819 () Bool)

(assert (=> d!4663 m!19819))

(declare-fun m!19821 () Bool)

(assert (=> b!24816 m!19821))

(assert (=> b!24816 m!18059))

(assert (=> b!24816 m!18059))

(declare-fun m!19823 () Bool)

(assert (=> b!24816 m!19823))

(assert (=> b!24818 m!18059))

(assert (=> b!24818 m!18059))

(assert (=> b!24818 m!19823))

(assert (=> bm!2024 d!4663))

(declare-fun d!4665 () Bool)

(declare-fun e!16042 () Bool)

(assert (=> d!4665 e!16042))

(declare-fun res!15062 () Bool)

(assert (=> d!4665 (=> res!15062 e!16042)))

(declare-fun lt!9533 () Bool)

(assert (=> d!4665 (= res!15062 (not lt!9533))))

(declare-fun lt!9534 () Bool)

(assert (=> d!4665 (= lt!9533 lt!9534)))

(declare-fun lt!9532 () Unit!514)

(declare-fun e!16043 () Unit!514)

(assert (=> d!4665 (= lt!9532 e!16043)))

(declare-fun c!3391 () Bool)

(assert (=> d!4665 (= c!3391 lt!9534)))

(assert (=> d!4665 (= lt!9534 (containsKey!25 (toList!292 lt!8444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4665 (= (contains!220 lt!8444 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9533)))

(declare-fun b!24819 () Bool)

(declare-fun lt!9535 () Unit!514)

(assert (=> b!24819 (= e!16043 lt!9535)))

(assert (=> b!24819 (= lt!9535 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24819 (isDefined!23 (getValueByKey!61 (toList!292 lt!8444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24820 () Bool)

(declare-fun Unit!589 () Unit!514)

(assert (=> b!24820 (= e!16043 Unit!589)))

(declare-fun b!24821 () Bool)

(assert (=> b!24821 (= e!16042 (isDefined!23 (getValueByKey!61 (toList!292 lt!8444) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4665 c!3391) b!24819))

(assert (= (and d!4665 (not c!3391)) b!24820))

(assert (= (and d!4665 (not res!15062)) b!24821))

(declare-fun m!19825 () Bool)

(assert (=> d!4665 m!19825))

(declare-fun m!19827 () Bool)

(assert (=> b!24819 m!19827))

(declare-fun m!19829 () Bool)

(assert (=> b!24819 m!19829))

(assert (=> b!24819 m!19829))

(declare-fun m!19831 () Bool)

(assert (=> b!24819 m!19831))

(assert (=> b!24821 m!19829))

(assert (=> b!24821 m!19829))

(assert (=> b!24821 m!19831))

(assert (=> bm!1970 d!4665))

(declare-fun b!24822 () Bool)

(declare-fun e!16048 () ListLongMap!553)

(declare-fun call!2187 () ListLongMap!553)

(assert (=> b!24822 (= e!16048 call!2187)))

(declare-fun b!24823 () Bool)

(declare-fun res!15071 () Bool)

(declare-fun e!16051 () Bool)

(assert (=> b!24823 (=> (not res!15071) (not e!16051))))

(declare-fun e!16046 () Bool)

(assert (=> b!24823 (= res!15071 e!16046)))

(declare-fun c!3392 () Bool)

(assert (=> b!24823 (= c!3392 (not (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24824 () Bool)

(declare-fun e!16045 () Bool)

(declare-fun e!16053 () Bool)

(assert (=> b!24824 (= e!16045 e!16053)))

(declare-fun res!15067 () Bool)

(assert (=> b!24824 (=> (not res!15067) (not e!16053))))

(declare-fun lt!9545 () ListLongMap!553)

(assert (=> b!24824 (= res!15067 (contains!220 lt!9545 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(assert (=> b!24824 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))

(declare-fun b!24825 () Bool)

(declare-fun e!16044 () Bool)

(declare-fun e!16052 () Bool)

(assert (=> b!24825 (= e!16044 e!16052)))

(declare-fun res!15070 () Bool)

(declare-fun call!2183 () Bool)

(assert (=> b!24825 (= res!15070 call!2183)))

(assert (=> b!24825 (=> (not res!15070) (not e!16052))))

(declare-fun b!24826 () Bool)

(declare-fun e!16056 () Unit!514)

(declare-fun lt!9536 () Unit!514)

(assert (=> b!24826 (= e!16056 lt!9536)))

(declare-fun lt!9541 () ListLongMap!553)

(assert (=> b!24826 (= lt!9541 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8355) (_values!1729 lt!8355) (mask!4730 lt!8355) (extraKeys!1641 lt!8355) (zeroValue!1666 lt!8355) (minValue!1666 lt!8355) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8355)))))

(declare-fun lt!9552 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9552 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9553 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9553 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000))))

(declare-fun lt!9556 () Unit!514)

(assert (=> b!24826 (= lt!9556 (addStillContains!14 lt!9541 lt!9552 (zeroValue!1666 lt!8355) lt!9553))))

(assert (=> b!24826 (contains!220 (+!45 lt!9541 (tuple2!947 lt!9552 (zeroValue!1666 lt!8355))) lt!9553)))

(declare-fun lt!9550 () Unit!514)

(assert (=> b!24826 (= lt!9550 lt!9556)))

(declare-fun lt!9543 () ListLongMap!553)

(assert (=> b!24826 (= lt!9543 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8355) (_values!1729 lt!8355) (mask!4730 lt!8355) (extraKeys!1641 lt!8355) (zeroValue!1666 lt!8355) (minValue!1666 lt!8355) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8355)))))

(declare-fun lt!9539 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9539 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9546 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9546 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000))))

(declare-fun lt!9549 () Unit!514)

(assert (=> b!24826 (= lt!9549 (addApplyDifferent!14 lt!9543 lt!9539 (minValue!1666 lt!8355) lt!9546))))

(assert (=> b!24826 (= (apply!29 (+!45 lt!9543 (tuple2!947 lt!9539 (minValue!1666 lt!8355))) lt!9546) (apply!29 lt!9543 lt!9546))))

(declare-fun lt!9540 () Unit!514)

(assert (=> b!24826 (= lt!9540 lt!9549)))

(declare-fun lt!9544 () ListLongMap!553)

(assert (=> b!24826 (= lt!9544 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8355) (_values!1729 lt!8355) (mask!4730 lt!8355) (extraKeys!1641 lt!8355) (zeroValue!1666 lt!8355) (minValue!1666 lt!8355) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8355)))))

(declare-fun lt!9547 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9547 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9542 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9542 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000))))

(declare-fun lt!9548 () Unit!514)

(assert (=> b!24826 (= lt!9548 (addApplyDifferent!14 lt!9544 lt!9547 (zeroValue!1666 lt!8355) lt!9542))))

(assert (=> b!24826 (= (apply!29 (+!45 lt!9544 (tuple2!947 lt!9547 (zeroValue!1666 lt!8355))) lt!9542) (apply!29 lt!9544 lt!9542))))

(declare-fun lt!9557 () Unit!514)

(assert (=> b!24826 (= lt!9557 lt!9548)))

(declare-fun lt!9551 () ListLongMap!553)

(assert (=> b!24826 (= lt!9551 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8355) (_values!1729 lt!8355) (mask!4730 lt!8355) (extraKeys!1641 lt!8355) (zeroValue!1666 lt!8355) (minValue!1666 lt!8355) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8355)))))

(declare-fun lt!9537 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9537 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9555 () (_ BitVec 64))

(assert (=> b!24826 (= lt!9555 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000))))

(assert (=> b!24826 (= lt!9536 (addApplyDifferent!14 lt!9551 lt!9537 (minValue!1666 lt!8355) lt!9555))))

(assert (=> b!24826 (= (apply!29 (+!45 lt!9551 (tuple2!947 lt!9537 (minValue!1666 lt!8355))) lt!9555) (apply!29 lt!9551 lt!9555))))

(declare-fun bm!2179 () Bool)

(declare-fun call!2186 () ListLongMap!553)

(assert (=> bm!2179 (= call!2186 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8355) (_values!1729 lt!8355) (mask!4730 lt!8355) (extraKeys!1641 lt!8355) (zeroValue!1666 lt!8355) (minValue!1666 lt!8355) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8355)))))

(declare-fun b!24827 () Bool)

(declare-fun call!2184 () Bool)

(assert (=> b!24827 (= e!16046 (not call!2184))))

(declare-fun bm!2180 () Bool)

(declare-fun call!2181 () ListLongMap!553)

(declare-fun call!2185 () ListLongMap!553)

(assert (=> bm!2180 (= call!2181 call!2185)))

(declare-fun bm!2181 () Bool)

(declare-fun c!3396 () Bool)

(declare-fun call!2182 () ListLongMap!553)

(declare-fun c!3395 () Bool)

(assert (=> bm!2181 (= call!2185 (+!45 (ite c!3395 call!2186 (ite c!3396 call!2182 call!2187)) (ite (or c!3395 c!3396) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8355)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8355)))))))

(declare-fun b!24828 () Bool)

(declare-fun Unit!590 () Unit!514)

(assert (=> b!24828 (= e!16056 Unit!590)))

(declare-fun b!24829 () Bool)

(assert (=> b!24829 (= e!16044 (not call!2183))))

(declare-fun b!24830 () Bool)

(declare-fun c!3393 () Bool)

(assert (=> b!24830 (= c!3393 (and (not (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!16054 () ListLongMap!553)

(assert (=> b!24830 (= e!16054 e!16048)))

(declare-fun b!24831 () Bool)

(declare-fun e!16050 () ListLongMap!553)

(assert (=> b!24831 (= e!16050 e!16054)))

(assert (=> b!24831 (= c!3396 (and (not (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2182 () Bool)

(assert (=> bm!2182 (= call!2187 call!2182)))

(declare-fun b!24832 () Bool)

(assert (=> b!24832 (= e!16052 (= (apply!29 lt!9545 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8355)))))

(declare-fun bm!2183 () Bool)

(assert (=> bm!2183 (= call!2182 call!2186)))

(declare-fun b!24833 () Bool)

(declare-fun e!16055 () Bool)

(assert (=> b!24833 (= e!16046 e!16055)))

(declare-fun res!15069 () Bool)

(assert (=> b!24833 (= res!15069 call!2184)))

(assert (=> b!24833 (=> (not res!15069) (not e!16055))))

(declare-fun d!4667 () Bool)

(assert (=> d!4667 e!16051))

(declare-fun res!15065 () Bool)

(assert (=> d!4667 (=> (not res!15065) (not e!16051))))

(assert (=> d!4667 (= res!15065 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))))

(declare-fun lt!9554 () ListLongMap!553)

(assert (=> d!4667 (= lt!9545 lt!9554)))

(declare-fun lt!9538 () Unit!514)

(assert (=> d!4667 (= lt!9538 e!16056)))

(declare-fun c!3397 () Bool)

(declare-fun e!16049 () Bool)

(assert (=> d!4667 (= c!3397 e!16049)))

(declare-fun res!15066 () Bool)

(assert (=> d!4667 (=> (not res!15066) (not e!16049))))

(assert (=> d!4667 (= res!15066 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))

(assert (=> d!4667 (= lt!9554 e!16050)))

(assert (=> d!4667 (= c!3395 (and (not (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4667 (validMask!0 (mask!4730 lt!8355))))

(assert (=> d!4667 (= (getCurrentListMap!121 (_keys!3164 lt!8355) (_values!1729 lt!8355) (mask!4730 lt!8355) (extraKeys!1641 lt!8355) (zeroValue!1666 lt!8355) (minValue!1666 lt!8355) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8355)) lt!9545)))

(declare-fun bm!2178 () Bool)

(assert (=> bm!2178 (= call!2184 (contains!220 lt!9545 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2184 () Bool)

(assert (=> bm!2184 (= call!2183 (contains!220 lt!9545 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24834 () Bool)

(assert (=> b!24834 (= e!16055 (= (apply!29 lt!9545 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8355)))))

(declare-fun b!24835 () Bool)

(declare-fun res!15064 () Bool)

(assert (=> b!24835 (=> (not res!15064) (not e!16051))))

(assert (=> b!24835 (= res!15064 e!16045)))

(declare-fun res!15063 () Bool)

(assert (=> b!24835 (=> res!15063 e!16045)))

(declare-fun e!16047 () Bool)

(assert (=> b!24835 (= res!15063 (not e!16047))))

(declare-fun res!15068 () Bool)

(assert (=> b!24835 (=> (not res!15068) (not e!16047))))

(assert (=> b!24835 (= res!15068 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))

(declare-fun b!24836 () Bool)

(assert (=> b!24836 (= e!16049 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(declare-fun b!24837 () Bool)

(assert (=> b!24837 (= e!16051 e!16044)))

(declare-fun c!3394 () Bool)

(assert (=> b!24837 (= c!3394 (not (= (bvand (extraKeys!1641 lt!8355) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24838 () Bool)

(assert (=> b!24838 (= e!16053 (= (apply!29 lt!9545 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 lt!8355)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8355) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 lt!8355))))))

(assert (=> b!24838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 lt!8355))))))

(declare-fun b!24839 () Bool)

(assert (=> b!24839 (= e!16048 call!2181)))

(declare-fun b!24840 () Bool)

(assert (=> b!24840 (= e!16050 (+!45 call!2185 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8355))))))

(declare-fun b!24841 () Bool)

(assert (=> b!24841 (= e!16054 call!2181)))

(declare-fun b!24842 () Bool)

(assert (=> b!24842 (= e!16047 (validKeyInArray!0 (select (arr!604 (_keys!3164 lt!8355)) #b00000000000000000000000000000000)))))

(assert (= (and d!4667 c!3395) b!24840))

(assert (= (and d!4667 (not c!3395)) b!24831))

(assert (= (and b!24831 c!3396) b!24841))

(assert (= (and b!24831 (not c!3396)) b!24830))

(assert (= (and b!24830 c!3393) b!24839))

(assert (= (and b!24830 (not c!3393)) b!24822))

(assert (= (or b!24839 b!24822) bm!2182))

(assert (= (or b!24841 bm!2182) bm!2183))

(assert (= (or b!24841 b!24839) bm!2180))

(assert (= (or b!24840 bm!2183) bm!2179))

(assert (= (or b!24840 bm!2180) bm!2181))

(assert (= (and d!4667 res!15066) b!24836))

(assert (= (and d!4667 c!3397) b!24826))

(assert (= (and d!4667 (not c!3397)) b!24828))

(assert (= (and d!4667 res!15065) b!24835))

(assert (= (and b!24835 res!15068) b!24842))

(assert (= (and b!24835 (not res!15063)) b!24824))

(assert (= (and b!24824 res!15067) b!24838))

(assert (= (and b!24835 res!15064) b!24823))

(assert (= (and b!24823 c!3392) b!24833))

(assert (= (and b!24823 (not c!3392)) b!24827))

(assert (= (and b!24833 res!15069) b!24834))

(assert (= (or b!24833 b!24827) bm!2178))

(assert (= (and b!24823 res!15071) b!24837))

(assert (= (and b!24837 c!3394) b!24825))

(assert (= (and b!24837 (not c!3394)) b!24829))

(assert (= (and b!24825 res!15070) b!24832))

(assert (= (or b!24825 b!24829) bm!2184))

(declare-fun b_lambda!1647 () Bool)

(assert (=> (not b_lambda!1647) (not b!24838)))

(declare-fun t!3251 () Bool)

(declare-fun tb!671 () Bool)

(assert (=> (and b!23168 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8355)) t!3251) tb!671))

(declare-fun result!1111 () Bool)

(assert (=> tb!671 (= result!1111 tp_is_empty!1023)))

(assert (=> b!24838 t!3251))

(declare-fun b_and!1551 () Bool)

(assert (= b_and!1549 (and (=> t!3251 result!1111) b_and!1551)))

(declare-fun m!19833 () Bool)

(assert (=> bm!2178 m!19833))

(declare-fun m!19835 () Bool)

(assert (=> b!24832 m!19835))

(declare-fun m!19837 () Bool)

(assert (=> bm!2184 m!19837))

(declare-fun m!19839 () Bool)

(assert (=> bm!2181 m!19839))

(declare-fun m!19841 () Bool)

(assert (=> b!24840 m!19841))

(assert (=> b!24824 m!18051))

(assert (=> b!24824 m!18051))

(declare-fun m!19843 () Bool)

(assert (=> b!24824 m!19843))

(assert (=> b!24842 m!18051))

(assert (=> b!24842 m!18051))

(assert (=> b!24842 m!18055))

(assert (=> b!24836 m!18051))

(assert (=> b!24836 m!18051))

(assert (=> b!24836 m!18055))

(declare-fun m!19845 () Bool)

(assert (=> bm!2179 m!19845))

(declare-fun m!19847 () Bool)

(assert (=> b!24826 m!19847))

(declare-fun m!19849 () Bool)

(assert (=> b!24826 m!19849))

(declare-fun m!19851 () Bool)

(assert (=> b!24826 m!19851))

(declare-fun m!19853 () Bool)

(assert (=> b!24826 m!19853))

(assert (=> b!24826 m!19851))

(declare-fun m!19855 () Bool)

(assert (=> b!24826 m!19855))

(declare-fun m!19857 () Bool)

(assert (=> b!24826 m!19857))

(declare-fun m!19859 () Bool)

(assert (=> b!24826 m!19859))

(assert (=> b!24826 m!19845))

(declare-fun m!19861 () Bool)

(assert (=> b!24826 m!19861))

(declare-fun m!19863 () Bool)

(assert (=> b!24826 m!19863))

(declare-fun m!19865 () Bool)

(assert (=> b!24826 m!19865))

(declare-fun m!19867 () Bool)

(assert (=> b!24826 m!19867))

(declare-fun m!19869 () Bool)

(assert (=> b!24826 m!19869))

(assert (=> b!24826 m!19869))

(declare-fun m!19871 () Bool)

(assert (=> b!24826 m!19871))

(assert (=> b!24826 m!19859))

(declare-fun m!19873 () Bool)

(assert (=> b!24826 m!19873))

(assert (=> b!24826 m!18051))

(assert (=> b!24826 m!19867))

(declare-fun m!19875 () Bool)

(assert (=> b!24826 m!19875))

(declare-fun m!19877 () Bool)

(assert (=> b!24834 m!19877))

(declare-fun m!19879 () Bool)

(assert (=> b!24838 m!19879))

(declare-fun m!19881 () Bool)

(assert (=> b!24838 m!19881))

(assert (=> b!24838 m!19879))

(declare-fun m!19883 () Bool)

(assert (=> b!24838 m!19883))

(assert (=> b!24838 m!18051))

(declare-fun m!19885 () Bool)

(assert (=> b!24838 m!19885))

(assert (=> b!24838 m!19881))

(assert (=> b!24838 m!18051))

(assert (=> d!4667 m!17933))

(assert (=> d!4071 d!4667))

(declare-fun d!4669 () Bool)

(assert (=> d!4669 (= (inRange!0 (index!2358 lt!8712) (mask!4730 lt!8162)) (and (bvsge (index!2358 lt!8712) #b00000000000000000000000000000000) (bvslt (index!2358 lt!8712) (bvadd (mask!4730 lt!8162) #b00000000000000000000000000000001))))))

(assert (=> b!23778 d!4669))

(declare-fun d!4671 () Bool)

(assert (=> d!4671 (= (apply!29 lt!8538 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8538) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1036 () Bool)

(assert (= bs!1036 d!4671))

(assert (=> bs!1036 m!19133))

(assert (=> bs!1036 m!19133))

(declare-fun m!19887 () Bool)

(assert (=> bs!1036 m!19887))

(assert (=> b!23612 d!4671))

(declare-fun e!16058 () Bool)

(declare-fun b!24843 () Bool)

(assert (=> b!24843 (= e!16058 (contains!222 Nil!563 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24844 () Bool)

(declare-fun e!16057 () Bool)

(declare-fun e!16060 () Bool)

(assert (=> b!24844 (= e!16057 e!16060)))

(declare-fun res!15074 () Bool)

(assert (=> b!24844 (=> (not res!15074) (not e!16060))))

(assert (=> b!24844 (= res!15074 (not e!16058))))

(declare-fun res!15073 () Bool)

(assert (=> b!24844 (=> (not res!15073) (not e!16058))))

(assert (=> b!24844 (= res!15073 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24846 () Bool)

(declare-fun e!16059 () Bool)

(assert (=> b!24846 (= e!16060 e!16059)))

(declare-fun c!3398 () Bool)

(assert (=> b!24846 (= c!3398 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun bm!2185 () Bool)

(declare-fun call!2188 () Bool)

(assert (=> bm!2185 (= call!2188 (arrayNoDuplicates!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3398 (Cons!562 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) Nil!563) Nil!563)))))

(declare-fun b!24847 () Bool)

(assert (=> b!24847 (= e!16059 call!2188)))

(declare-fun b!24845 () Bool)

(assert (=> b!24845 (= e!16059 call!2188)))

(declare-fun d!4673 () Bool)

(declare-fun res!15072 () Bool)

(assert (=> d!4673 (=> res!15072 e!16057)))

(assert (=> d!4673 (= res!15072 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4673 (= (arrayNoDuplicates!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 Nil!563) e!16057)))

(assert (= (and d!4673 (not res!15072)) b!24844))

(assert (= (and b!24844 res!15073) b!24843))

(assert (= (and b!24844 res!15074) b!24846))

(assert (= (and b!24846 c!3398) b!24847))

(assert (= (and b!24846 (not c!3398)) b!24845))

(assert (= (or b!24847 b!24845) bm!2185))

(assert (=> b!24843 m!16992))

(assert (=> b!24843 m!16992))

(declare-fun m!19889 () Bool)

(assert (=> b!24843 m!19889))

(assert (=> b!24844 m!16992))

(assert (=> b!24844 m!16992))

(assert (=> b!24844 m!16996))

(assert (=> b!24846 m!16992))

(assert (=> b!24846 m!16992))

(assert (=> b!24846 m!16996))

(assert (=> bm!2185 m!16992))

(declare-fun m!19891 () Bool)

(assert (=> bm!2185 m!19891))

(assert (=> b!23750 d!4673))

(declare-fun b!24848 () Bool)

(declare-fun e!16062 () Bool)

(assert (=> b!24848 (= e!16062 (contains!222 Nil!563 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(declare-fun b!24849 () Bool)

(declare-fun e!16061 () Bool)

(declare-fun e!16064 () Bool)

(assert (=> b!24849 (= e!16061 e!16064)))

(declare-fun res!15077 () Bool)

(assert (=> b!24849 (=> (not res!15077) (not e!16064))))

(assert (=> b!24849 (= res!15077 (not e!16062))))

(declare-fun res!15076 () Bool)

(assert (=> b!24849 (=> (not res!15076) (not e!16062))))

(assert (=> b!24849 (= res!15076 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(declare-fun b!24851 () Bool)

(declare-fun e!16063 () Bool)

(assert (=> b!24851 (= e!16064 e!16063)))

(declare-fun c!3399 () Bool)

(assert (=> b!24851 (= c!3399 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(declare-fun bm!2186 () Bool)

(declare-fun call!2189 () Bool)

(assert (=> bm!2186 (= call!2189 (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8264)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3399 (Cons!562 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000) Nil!563) Nil!563)))))

(declare-fun b!24852 () Bool)

(assert (=> b!24852 (= e!16063 call!2189)))

(declare-fun b!24850 () Bool)

(assert (=> b!24850 (= e!16063 call!2189)))

(declare-fun d!4675 () Bool)

(declare-fun res!15075 () Bool)

(assert (=> d!4675 (=> res!15075 e!16061)))

(assert (=> d!4675 (= res!15075 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(assert (=> d!4675 (= (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8264)) #b00000000000000000000000000000000 Nil!563) e!16061)))

(assert (= (and d!4675 (not res!15075)) b!24849))

(assert (= (and b!24849 res!15076) b!24848))

(assert (= (and b!24849 res!15077) b!24851))

(assert (= (and b!24851 c!3399) b!24852))

(assert (= (and b!24851 (not c!3399)) b!24850))

(assert (= (or b!24852 b!24850) bm!2186))

(assert (=> b!24848 m!17857))

(assert (=> b!24848 m!17857))

(declare-fun m!19893 () Bool)

(assert (=> b!24848 m!19893))

(assert (=> b!24849 m!17857))

(assert (=> b!24849 m!17857))

(assert (=> b!24849 m!17859))

(assert (=> b!24851 m!17857))

(assert (=> b!24851 m!17857))

(assert (=> b!24851 m!17859))

(assert (=> bm!2186 m!17857))

(declare-fun m!19895 () Bool)

(assert (=> bm!2186 m!19895))

(assert (=> b!23747 d!4675))

(declare-fun d!4677 () Bool)

(assert (=> d!4677 (= (apply!29 lt!8563 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8563) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1037 () Bool)

(assert (= bs!1037 d!4677))

(assert (=> bs!1037 m!18559))

(assert (=> bs!1037 m!18559))

(declare-fun m!19897 () Bool)

(assert (=> bs!1037 m!19897))

(assert (=> b!23645 d!4677))

(declare-fun d!4679 () Bool)

(declare-fun c!3400 () Bool)

(assert (=> d!4679 (= c!3400 (and ((_ is Cons!561) (toList!292 lt!8495)) (= (_1!480 (h!1127 (toList!292 lt!8495))) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!16065 () Option!67)

(assert (=> d!4679 (= (getValueByKey!61 (toList!292 lt!8495) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) e!16065)))

(declare-fun b!24856 () Bool)

(declare-fun e!16066 () Option!67)

(assert (=> b!24856 (= e!16066 None!65)))

(declare-fun b!24855 () Bool)

(assert (=> b!24855 (= e!16066 (getValueByKey!61 (t!3238 (toList!292 lt!8495)) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24854 () Bool)

(assert (=> b!24854 (= e!16065 e!16066)))

(declare-fun c!3401 () Bool)

(assert (=> b!24854 (= c!3401 (and ((_ is Cons!561) (toList!292 lt!8495)) (not (= (_1!480 (h!1127 (toList!292 lt!8495))) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24853 () Bool)

(assert (=> b!24853 (= e!16065 (Some!66 (_2!480 (h!1127 (toList!292 lt!8495)))))))

(assert (= (and d!4679 c!3400) b!24853))

(assert (= (and d!4679 (not c!3400)) b!24854))

(assert (= (and b!24854 c!3401) b!24855))

(assert (= (and b!24854 (not c!3401)) b!24856))

(declare-fun m!19899 () Bool)

(assert (=> b!24855 m!19899))

(assert (=> b!23572 d!4679))

(declare-fun b!24859 () Bool)

(declare-fun res!15079 () Bool)

(declare-fun e!16067 () Bool)

(assert (=> b!24859 (=> (not res!15079) (not e!16067))))

(assert (=> b!24859 (= res!15079 (= (size!707 (v!1604 (underlying!116 thiss!938))) (bvadd (_size!150 (v!1604 (underlying!116 thiss!938))) (bvsdiv (bvadd (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4681 () Bool)

(declare-fun res!15080 () Bool)

(assert (=> d!4681 (=> (not res!15080) (not e!16067))))

(assert (=> d!4681 (= res!15080 (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4681 (= (simpleValid!19 (v!1604 (underlying!116 thiss!938))) e!16067)))

(declare-fun b!24857 () Bool)

(declare-fun res!15081 () Bool)

(assert (=> b!24857 (=> (not res!15081) (not e!16067))))

(assert (=> b!24857 (= res!15081 (and (= (size!699 (_values!1729 (v!1604 (underlying!116 thiss!938)))) (bvadd (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001)) (= (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (size!699 (_values!1729 (v!1604 (underlying!116 thiss!938))))) (bvsge (_size!150 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000) (bvsle (_size!150 (v!1604 (underlying!116 thiss!938))) (bvadd (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001))))))

(declare-fun b!24860 () Bool)

(assert (=> b!24860 (= e!16067 (and (bvsge (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000011) (bvsge (_vacant!150 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000)))))

(declare-fun b!24858 () Bool)

(declare-fun res!15078 () Bool)

(assert (=> b!24858 (=> (not res!15078) (not e!16067))))

(assert (=> b!24858 (= res!15078 (bvsge (size!707 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (= (and d!4681 res!15080) b!24857))

(assert (= (and b!24857 res!15081) b!24858))

(assert (= (and b!24858 res!15078) b!24859))

(assert (= (and b!24859 res!15079) b!24860))

(declare-fun m!19901 () Bool)

(assert (=> b!24859 m!19901))

(assert (=> d!4681 m!16770))

(assert (=> b!24858 m!19901))

(assert (=> d!4039 d!4681))

(declare-fun d!4683 () Bool)

(declare-fun res!15082 () Bool)

(declare-fun e!16068 () Bool)

(assert (=> d!4683 (=> res!15082 e!16068)))

(assert (=> d!4683 (= res!15082 (and ((_ is Cons!561) (toList!292 call!1951)) (= (_1!480 (h!1127 (toList!292 call!1951))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4683 (= (containsKey!25 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000) e!16068)))

(declare-fun b!24861 () Bool)

(declare-fun e!16069 () Bool)

(assert (=> b!24861 (= e!16068 e!16069)))

(declare-fun res!15083 () Bool)

(assert (=> b!24861 (=> (not res!15083) (not e!16069))))

(assert (=> b!24861 (= res!15083 (and (or (not ((_ is Cons!561) (toList!292 call!1951))) (bvsle (_1!480 (h!1127 (toList!292 call!1951))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!561) (toList!292 call!1951)) (bvslt (_1!480 (h!1127 (toList!292 call!1951))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24862 () Bool)

(assert (=> b!24862 (= e!16069 (containsKey!25 (t!3238 (toList!292 call!1951)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4683 (not res!15082)) b!24861))

(assert (= (and b!24861 res!15083) b!24862))

(declare-fun m!19903 () Bool)

(assert (=> b!24862 m!19903))

(assert (=> d!4047 d!4683))

(assert (=> b!23771 d!4251))

(assert (=> b!23725 d!4189))

(declare-fun d!4685 () Bool)

(declare-fun e!16070 () Bool)

(assert (=> d!4685 e!16070))

(declare-fun res!15084 () Bool)

(assert (=> d!4685 (=> (not res!15084) (not e!16070))))

(declare-fun lt!9558 () ListLongMap!553)

(assert (=> d!4685 (= res!15084 (contains!220 lt!9558 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!9561 () List!565)

(assert (=> d!4685 (= lt!9558 (ListLongMap!554 lt!9561))))

(declare-fun lt!9559 () Unit!514)

(declare-fun lt!9560 () Unit!514)

(assert (=> d!4685 (= lt!9559 lt!9560)))

(assert (=> d!4685 (= (getValueByKey!61 lt!9561 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4685 (= lt!9560 (lemmaContainsTupThenGetReturnValue!18 lt!9561 (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4685 (= lt!9561 (insertStrictlySorted!18 (toList!292 (map!410 (ite c!2948 (_2!476 lt!8164) lt!8162))) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4685 (= (+!45 (map!410 (ite c!2948 (_2!476 lt!8164) lt!8162)) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9558)))

(declare-fun b!24863 () Bool)

(declare-fun res!15085 () Bool)

(assert (=> b!24863 (=> (not res!15085) (not e!16070))))

(assert (=> b!24863 (= res!15085 (= (getValueByKey!61 (toList!292 lt!9558) (_1!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24864 () Bool)

(assert (=> b!24864 (= e!16070 (contains!221 (toList!292 lt!9558) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4685 res!15084) b!24863))

(assert (= (and b!24863 res!15085) b!24864))

(declare-fun m!19905 () Bool)

(assert (=> d!4685 m!19905))

(declare-fun m!19907 () Bool)

(assert (=> d!4685 m!19907))

(declare-fun m!19909 () Bool)

(assert (=> d!4685 m!19909))

(declare-fun m!19911 () Bool)

(assert (=> d!4685 m!19911))

(declare-fun m!19913 () Bool)

(assert (=> b!24863 m!19913))

(declare-fun m!19915 () Bool)

(assert (=> b!24864 m!19915))

(assert (=> b!23725 d!4685))

(assert (=> b!23725 d!4069))

(assert (=> d!4097 d!4181))

(declare-fun d!4687 () Bool)

(declare-fun e!16073 () Bool)

(assert (=> d!4687 e!16073))

(declare-fun c!3404 () Bool)

(assert (=> d!4687 (= c!3404 (and (not (= (_1!480 lt!8342) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (_1!480 lt!8342) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4687 true))

(declare-fun _$15!77 () Unit!514)

(assert (=> d!4687 (= (choose!207 lt!8346 (array!1276 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8347 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!480 lt!8342) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) _$15!77)))

(declare-fun b!24869 () Bool)

(assert (=> b!24869 (= e!16073 (arrayContainsKey!0 lt!8346 (_1!480 lt!8342) #b00000000000000000000000000000000))))

(declare-fun b!24870 () Bool)

(assert (=> b!24870 (= e!16073 (ite (= (_1!480 lt!8342) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand lt!8347 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8347 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!4687 c!3404) b!24869))

(assert (= (and d!4687 (not c!3404)) b!24870))

(assert (=> b!24869 m!16922))

(assert (=> d!4021 d!4687))

(assert (=> d!4021 d!4113))

(assert (=> d!4115 d!4117))

(declare-fun d!4689 () Bool)

(assert (=> d!4689 (arrayForallSeekEntryOrOpenFound!0 lt!8353 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4689 true))

(declare-fun _$30!30 () Unit!514)

(assert (=> d!4689 (= (choose!34 lt!8350 (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8353) _$30!30)))

(declare-fun bs!1038 () Bool)

(assert (= bs!1038 d!4689))

(assert (=> bs!1038 m!16758))

(assert (=> bs!1038 m!16926))

(assert (=> d!4115 d!4689))

(assert (=> d!4115 d!4113))

(declare-fun d!4691 () Bool)

(declare-fun e!16074 () Bool)

(assert (=> d!4691 e!16074))

(declare-fun res!15086 () Bool)

(assert (=> d!4691 (=> (not res!15086) (not e!16074))))

(declare-fun lt!9562 () ListLongMap!553)

(assert (=> d!4691 (= res!15086 (contains!220 lt!9562 (_1!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun lt!9565 () List!565)

(assert (=> d!4691 (= lt!9562 (ListLongMap!554 lt!9565))))

(declare-fun lt!9563 () Unit!514)

(declare-fun lt!9564 () Unit!514)

(assert (=> d!4691 (= lt!9563 lt!9564)))

(assert (=> d!4691 (= (getValueByKey!61 lt!9565 (_1!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))) (Some!66 (_2!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(assert (=> d!4691 (= lt!9564 (lemmaContainsTupThenGetReturnValue!18 lt!9565 (_1!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (_2!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(assert (=> d!4691 (= lt!9565 (insertStrictlySorted!18 (toList!292 (ite c!3118 call!2033 (ite c!3119 call!2029 call!2034))) (_1!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (_2!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(assert (=> d!4691 (= (+!45 (ite c!3118 call!2033 (ite c!3119 call!2029 call!2034)) (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) lt!9562)))

(declare-fun b!24871 () Bool)

(declare-fun res!15087 () Bool)

(assert (=> b!24871 (=> (not res!15087) (not e!16074))))

(assert (=> b!24871 (= res!15087 (= (getValueByKey!61 (toList!292 lt!9562) (_1!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))) (Some!66 (_2!480 (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))))

(declare-fun b!24872 () Bool)

(assert (=> b!24872 (= e!16074 (contains!221 (toList!292 lt!9562) (ite (or c!3118 c!3119) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2997 c!3001) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (= (and d!4691 res!15086) b!24871))

(assert (= (and b!24871 res!15087) b!24872))

(declare-fun m!19917 () Bool)

(assert (=> d!4691 m!19917))

(declare-fun m!19919 () Bool)

(assert (=> d!4691 m!19919))

(declare-fun m!19921 () Bool)

(assert (=> d!4691 m!19921))

(declare-fun m!19923 () Bool)

(assert (=> d!4691 m!19923))

(declare-fun m!19925 () Bool)

(assert (=> b!24871 m!19925))

(declare-fun m!19927 () Bool)

(assert (=> b!24872 m!19927))

(assert (=> bm!2028 d!4691))

(declare-fun d!4693 () Bool)

(declare-fun e!16075 () Bool)

(assert (=> d!4693 e!16075))

(declare-fun res!15088 () Bool)

(assert (=> d!4693 (=> res!15088 e!16075)))

(declare-fun lt!9567 () Bool)

(assert (=> d!4693 (= res!15088 (not lt!9567))))

(declare-fun lt!9568 () Bool)

(assert (=> d!4693 (= lt!9567 lt!9568)))

(declare-fun lt!9566 () Unit!514)

(declare-fun e!16076 () Unit!514)

(assert (=> d!4693 (= lt!9566 e!16076)))

(declare-fun c!3405 () Bool)

(assert (=> d!4693 (= c!3405 lt!9568)))

(assert (=> d!4693 (= lt!9568 (containsKey!25 (toList!292 lt!8495) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4693 (= (contains!220 lt!8495 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9567)))

(declare-fun b!24873 () Bool)

(declare-fun lt!9569 () Unit!514)

(assert (=> b!24873 (= e!16076 lt!9569)))

(assert (=> b!24873 (= lt!9569 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8495) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> b!24873 (isDefined!23 (getValueByKey!61 (toList!292 lt!8495) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24874 () Bool)

(declare-fun Unit!591 () Unit!514)

(assert (=> b!24874 (= e!16076 Unit!591)))

(declare-fun b!24875 () Bool)

(assert (=> b!24875 (= e!16075 (isDefined!23 (getValueByKey!61 (toList!292 lt!8495) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4693 c!3405) b!24873))

(assert (= (and d!4693 (not c!3405)) b!24874))

(assert (= (and d!4693 (not res!15088)) b!24875))

(declare-fun m!19929 () Bool)

(assert (=> d!4693 m!19929))

(declare-fun m!19931 () Bool)

(assert (=> b!24873 m!19931))

(assert (=> b!24873 m!17128))

(assert (=> b!24873 m!17128))

(declare-fun m!19933 () Bool)

(assert (=> b!24873 m!19933))

(assert (=> b!24875 m!17128))

(assert (=> b!24875 m!17128))

(assert (=> b!24875 m!19933))

(assert (=> d!4041 d!4693))

(declare-fun d!4695 () Bool)

(declare-fun c!3406 () Bool)

(assert (=> d!4695 (= c!3406 (and ((_ is Cons!561) lt!8498) (= (_1!480 (h!1127 lt!8498)) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!16077 () Option!67)

(assert (=> d!4695 (= (getValueByKey!61 lt!8498 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) e!16077)))

(declare-fun b!24879 () Bool)

(declare-fun e!16078 () Option!67)

(assert (=> b!24879 (= e!16078 None!65)))

(declare-fun b!24878 () Bool)

(assert (=> b!24878 (= e!16078 (getValueByKey!61 (t!3238 lt!8498) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24877 () Bool)

(assert (=> b!24877 (= e!16077 e!16078)))

(declare-fun c!3407 () Bool)

(assert (=> b!24877 (= c!3407 (and ((_ is Cons!561) lt!8498) (not (= (_1!480 (h!1127 lt!8498)) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24876 () Bool)

(assert (=> b!24876 (= e!16077 (Some!66 (_2!480 (h!1127 lt!8498))))))

(assert (= (and d!4695 c!3406) b!24876))

(assert (= (and d!4695 (not c!3406)) b!24877))

(assert (= (and b!24877 c!3407) b!24878))

(assert (= (and b!24877 (not c!3407)) b!24879))

(declare-fun m!19935 () Bool)

(assert (=> b!24878 m!19935))

(assert (=> d!4041 d!4695))

(declare-fun d!4697 () Bool)

(assert (=> d!4697 (= (getValueByKey!61 lt!8498 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!9570 () Unit!514)

(assert (=> d!4697 (= lt!9570 (choose!215 lt!8498 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun e!16079 () Bool)

(assert (=> d!4697 e!16079))

(declare-fun res!15089 () Bool)

(assert (=> d!4697 (=> (not res!15089) (not e!16079))))

(assert (=> d!4697 (= res!15089 (isStrictlySorted!168 lt!8498))))

(assert (=> d!4697 (= (lemmaContainsTupThenGetReturnValue!18 lt!8498 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9570)))

(declare-fun b!24880 () Bool)

(declare-fun res!15090 () Bool)

(assert (=> b!24880 (=> (not res!15090) (not e!16079))))

(assert (=> b!24880 (= res!15090 (containsKey!25 lt!8498 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24881 () Bool)

(assert (=> b!24881 (= e!16079 (contains!221 lt!8498 (tuple2!947 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4697 res!15089) b!24880))

(assert (= (and b!24880 res!15090) b!24881))

(assert (=> d!4697 m!17122))

(declare-fun m!19937 () Bool)

(assert (=> d!4697 m!19937))

(declare-fun m!19939 () Bool)

(assert (=> d!4697 m!19939))

(declare-fun m!19941 () Bool)

(assert (=> b!24880 m!19941))

(declare-fun m!19943 () Bool)

(assert (=> b!24881 m!19943))

(assert (=> d!4041 d!4697))

(declare-fun bm!2187 () Bool)

(declare-fun call!2192 () List!565)

(declare-fun call!2191 () List!565)

(assert (=> bm!2187 (= call!2192 call!2191)))

(declare-fun bm!2188 () Bool)

(declare-fun call!2190 () List!565)

(assert (=> bm!2188 (= call!2190 call!2192)))

(declare-fun b!24883 () Bool)

(declare-fun e!16080 () List!565)

(assert (=> b!24883 (= e!16080 call!2192)))

(declare-fun b!24884 () Bool)

(declare-fun c!3410 () Bool)

(assert (=> b!24884 (= c!3410 (and ((_ is Cons!561) (toList!292 call!1938)) (bvsgt (_1!480 (h!1127 (toList!292 call!1938))) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!16083 () List!565)

(assert (=> b!24884 (= e!16080 e!16083)))

(declare-fun b!24885 () Bool)

(declare-fun e!16082 () List!565)

(declare-fun c!3408 () Bool)

(assert (=> b!24885 (= e!16082 (ite c!3408 (t!3238 (toList!292 call!1938)) (ite c!3410 (Cons!561 (h!1127 (toList!292 call!1938)) (t!3238 (toList!292 call!1938))) Nil!562)))))

(declare-fun b!24886 () Bool)

(assert (=> b!24886 (= e!16082 (insertStrictlySorted!18 (t!3238 (toList!292 call!1938)) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24887 () Bool)

(assert (=> b!24887 (= e!16083 call!2190)))

(declare-fun b!24888 () Bool)

(declare-fun e!16084 () List!565)

(assert (=> b!24888 (= e!16084 e!16080)))

(assert (=> b!24888 (= c!3408 (and ((_ is Cons!561) (toList!292 call!1938)) (= (_1!480 (h!1127 (toList!292 call!1938))) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun d!4699 () Bool)

(declare-fun e!16081 () Bool)

(assert (=> d!4699 e!16081))

(declare-fun res!15092 () Bool)

(assert (=> d!4699 (=> (not res!15092) (not e!16081))))

(declare-fun lt!9571 () List!565)

(assert (=> d!4699 (= res!15092 (isStrictlySorted!168 lt!9571))))

(assert (=> d!4699 (= lt!9571 e!16084)))

(declare-fun c!3409 () Bool)

(assert (=> d!4699 (= c!3409 (and ((_ is Cons!561) (toList!292 call!1938)) (bvslt (_1!480 (h!1127 (toList!292 call!1938))) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4699 (isStrictlySorted!168 (toList!292 call!1938))))

(assert (=> d!4699 (= (insertStrictlySorted!18 (toList!292 call!1938) (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9571)))

(declare-fun b!24882 () Bool)

(assert (=> b!24882 (= e!16081 (contains!221 lt!9571 (tuple2!947 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24889 () Bool)

(assert (=> b!24889 (= e!16084 call!2191)))

(declare-fun bm!2189 () Bool)

(assert (=> bm!2189 (= call!2191 ($colon$colon!30 e!16082 (ite c!3409 (h!1127 (toList!292 call!1938)) (tuple2!947 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun c!3411 () Bool)

(assert (=> bm!2189 (= c!3411 c!3409)))

(declare-fun b!24890 () Bool)

(assert (=> b!24890 (= e!16083 call!2190)))

(declare-fun b!24891 () Bool)

(declare-fun res!15091 () Bool)

(assert (=> b!24891 (=> (not res!15091) (not e!16081))))

(assert (=> b!24891 (= res!15091 (containsKey!25 lt!9571 (_1!480 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4699 c!3409) b!24889))

(assert (= (and d!4699 (not c!3409)) b!24888))

(assert (= (and b!24888 c!3408) b!24883))

(assert (= (and b!24888 (not c!3408)) b!24884))

(assert (= (and b!24884 c!3410) b!24887))

(assert (= (and b!24884 (not c!3410)) b!24890))

(assert (= (or b!24887 b!24890) bm!2188))

(assert (= (or b!24883 bm!2188) bm!2187))

(assert (= (or b!24889 bm!2187) bm!2189))

(assert (= (and bm!2189 c!3411) b!24886))

(assert (= (and bm!2189 (not c!3411)) b!24885))

(assert (= (and d!4699 res!15092) b!24891))

(assert (= (and b!24891 res!15091) b!24882))

(declare-fun m!19945 () Bool)

(assert (=> bm!2189 m!19945))

(declare-fun m!19947 () Bool)

(assert (=> b!24882 m!19947))

(declare-fun m!19949 () Bool)

(assert (=> b!24891 m!19949))

(declare-fun m!19951 () Bool)

(assert (=> b!24886 m!19951))

(declare-fun m!19953 () Bool)

(assert (=> d!4699 m!19953))

(declare-fun m!19955 () Bool)

(assert (=> d!4699 m!19955))

(assert (=> d!4041 d!4699))

(declare-fun d!4701 () Bool)

(assert (=> d!4701 (isDefined!23 (getValueByKey!61 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!9572 () Unit!514)

(assert (=> d!4701 (= lt!9572 (choose!217 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!16085 () Bool)

(assert (=> d!4701 e!16085))

(declare-fun res!15093 () Bool)

(assert (=> d!4701 (=> (not res!15093) (not e!16085))))

(assert (=> d!4701 (= res!15093 (isStrictlySorted!168 (toList!292 call!1951)))))

(assert (=> d!4701 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000) lt!9572)))

(declare-fun b!24892 () Bool)

(assert (=> b!24892 (= e!16085 (containsKey!25 (toList!292 call!1951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4701 res!15093) b!24892))

(assert (=> d!4701 m!17206))

(assert (=> d!4701 m!17206))

(assert (=> d!4701 m!17208))

(declare-fun m!19957 () Bool)

(assert (=> d!4701 m!19957))

(declare-fun m!19959 () Bool)

(assert (=> d!4701 m!19959))

(assert (=> b!24892 m!17202))

(assert (=> b!23597 d!4701))

(assert (=> b!23597 d!4501))

(assert (=> b!23597 d!4503))

(declare-fun d!4703 () Bool)

(assert (=> d!4703 (contains!220 (getCurrentListMap!121 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9573 () Unit!514)

(assert (=> d!4703 (= lt!9573 (choose!216 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)))))

(assert (=> d!4703 (validMask!0 (mask!4730 lt!8162))))

(assert (=> d!4703 (= (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 lt!8162) (_values!1729 lt!8162) (mask!4730 lt!8162) (extraKeys!1641 lt!8162) (zeroValue!1666 lt!8162) (minValue!1666 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000 (defaultEntry!1743 lt!8162)) lt!9573)))

(declare-fun bs!1039 () Bool)

(assert (= bs!1039 d!4703))

(assert (=> bs!1039 m!16888))

(assert (=> bs!1039 m!16888))

(assert (=> bs!1039 m!17651))

(declare-fun m!19961 () Bool)

(assert (=> bs!1039 m!19961))

(assert (=> bs!1039 m!17072))

(assert (=> b!23847 d!4703))

(assert (=> b!23847 d!4447))

(assert (=> b!23847 d!4089))

(declare-fun d!4705 () Bool)

(assert (=> d!4705 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!8255) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4705 true))

(declare-fun _$5!56 () Unit!514)

(assert (=> d!4705 (= (choose!209 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (index!2358 lt!8255) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) _$5!56)))

(declare-fun bs!1040 () Bool)

(assert (= bs!1040 d!4705))

(assert (=> bs!1040 m!16828))

(assert (=> bs!1040 m!16828))

(assert (=> bs!1040 m!17100))

(assert (=> bs!1040 m!16792))

(assert (=> bs!1040 m!17102))

(assert (=> d!4035 d!4705))

(assert (=> d!4035 d!4181))

(declare-fun d!4707 () Bool)

(assert (=> d!4707 (= (apply!29 lt!8444 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!292 lt!8444) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1041 () Bool)

(assert (= bs!1041 d!4707))

(assert (=> bs!1041 m!19829))

(assert (=> bs!1041 m!19829))

(declare-fun m!19963 () Bool)

(assert (=> bs!1041 m!19963))

(assert (=> b!23519 d!4707))

(assert (=> d!4081 d!4007))

(declare-fun d!4709 () Bool)

(declare-fun e!16088 () Bool)

(assert (=> d!4709 e!16088))

(declare-fun c!3412 () Bool)

(declare-fun lt!9574 () SeekEntryResult!59)

(assert (=> d!4709 (= c!3412 ((_ is MissingZero!59) lt!9574))))

(assert (=> d!4709 (= lt!9574 (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4709 true))

(declare-fun _$34!748 () Unit!514)

(assert (=> d!4709 (= (choose!210 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) _$34!748)))

(declare-fun b!24893 () Bool)

(declare-fun res!15097 () Bool)

(assert (=> b!24893 (= res!15097 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2357 lt!9574)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!16087 () Bool)

(assert (=> b!24893 (=> (not res!15097) (not e!16087))))

(declare-fun b!24894 () Bool)

(declare-fun res!15095 () Bool)

(declare-fun e!16089 () Bool)

(assert (=> b!24894 (=> (not res!15095) (not e!16089))))

(declare-fun call!2194 () Bool)

(assert (=> b!24894 (= res!15095 call!2194)))

(declare-fun e!16086 () Bool)

(assert (=> b!24894 (= e!16086 e!16089)))

(declare-fun b!24895 () Bool)

(declare-fun call!2193 () Bool)

(assert (=> b!24895 (= e!16089 (not call!2193))))

(declare-fun bm!2190 () Bool)

(assert (=> bm!2190 (= call!2194 (inRange!0 (ite c!3412 (index!2357 lt!9574) (index!2360 lt!9574)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24896 () Bool)

(declare-fun res!15094 () Bool)

(assert (=> b!24896 (=> (not res!15094) (not e!16089))))

(assert (=> b!24896 (= res!15094 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2360 lt!9574)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24897 () Bool)

(assert (=> b!24897 (= e!16088 e!16086)))

(declare-fun c!3413 () Bool)

(assert (=> b!24897 (= c!3413 ((_ is MissingVacant!59) lt!9574))))

(declare-fun bm!2191 () Bool)

(assert (=> bm!2191 (= call!2193 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000))))

(declare-fun b!24898 () Bool)

(assert (=> b!24898 (= e!16088 e!16087)))

(declare-fun res!15096 () Bool)

(assert (=> b!24898 (= res!15096 call!2194)))

(assert (=> b!24898 (=> (not res!15096) (not e!16087))))

(declare-fun b!24899 () Bool)

(assert (=> b!24899 (= e!16087 (not call!2193))))

(declare-fun b!24900 () Bool)

(assert (=> b!24900 (= e!16086 ((_ is Undefined!59) lt!9574))))

(assert (= (and d!4709 c!3412) b!24898))

(assert (= (and d!4709 (not c!3412)) b!24897))

(assert (= (and b!24898 res!15096) b!24893))

(assert (= (and b!24893 res!15097) b!24899))

(assert (= (and b!24897 c!3413) b!24894))

(assert (= (and b!24897 (not c!3413)) b!24900))

(assert (= (and b!24894 res!15095) b!24896))

(assert (= (and b!24896 res!15094) b!24895))

(assert (= (or b!24898 b!24894) bm!2190))

(assert (= (or b!24899 b!24895) bm!2191))

(declare-fun m!19965 () Bool)

(assert (=> b!24893 m!19965))

(declare-fun m!19967 () Bool)

(assert (=> bm!2190 m!19967))

(declare-fun m!19969 () Bool)

(assert (=> b!24896 m!19969))

(assert (=> bm!2191 m!16844))

(assert (=> d!4709 m!16812))

(assert (=> d!4081 d!4709))

(assert (=> d!4081 d!4181))

(declare-fun d!4711 () Bool)

(declare-fun res!15098 () Bool)

(declare-fun e!16090 () Bool)

(assert (=> d!4711 (=> res!15098 e!16090)))

(assert (=> d!4711 (= res!15098 (and ((_ is Cons!561) (toList!292 call!1946)) (= (_1!480 (h!1127 (toList!292 call!1946))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))))))

(assert (=> d!4711 (= (containsKey!25 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))) e!16090)))

(declare-fun b!24901 () Bool)

(declare-fun e!16091 () Bool)

(assert (=> b!24901 (= e!16090 e!16091)))

(declare-fun res!15099 () Bool)

(assert (=> b!24901 (=> (not res!15099) (not e!16091))))

(assert (=> b!24901 (= res!15099 (and (or (not ((_ is Cons!561) (toList!292 call!1946))) (bvsle (_1!480 (h!1127 (toList!292 call!1946))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))) ((_ is Cons!561) (toList!292 call!1946)) (bvslt (_1!480 (h!1127 (toList!292 call!1946))) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282)))))))

(declare-fun b!24902 () Bool)

(assert (=> b!24902 (= e!16091 (containsKey!25 (t!3238 (toList!292 call!1946)) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(assert (= (and d!4711 (not res!15098)) b!24901))

(assert (= (and b!24901 res!15099) b!24902))

(assert (=> b!24902 m!16874))

(declare-fun m!19971 () Bool)

(assert (=> b!24902 m!19971))

(assert (=> d!4025 d!4711))

(declare-fun b!24903 () Bool)

(declare-fun e!16092 () Bool)

(declare-fun call!2195 () Bool)

(assert (=> b!24903 (= e!16092 call!2195)))

(declare-fun b!24904 () Bool)

(declare-fun e!16093 () Bool)

(assert (=> b!24904 (= e!16093 e!16092)))

(declare-fun lt!9575 () (_ BitVec 64))

(assert (=> b!24904 (= lt!9575 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9576 () Unit!514)

(assert (=> b!24904 (= lt!9576 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9575 #b00000000000000000000000000000000))))

(assert (=> b!24904 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9575 #b00000000000000000000000000000000)))

(declare-fun lt!9577 () Unit!514)

(assert (=> b!24904 (= lt!9577 lt!9576)))

(declare-fun res!15100 () Bool)

(assert (=> b!24904 (= res!15100 (= (seekEntryOrOpen!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24904 (=> (not res!15100) (not e!16092))))

(declare-fun b!24905 () Bool)

(assert (=> b!24905 (= e!16093 call!2195)))

(declare-fun d!4713 () Bool)

(declare-fun res!15101 () Bool)

(declare-fun e!16094 () Bool)

(assert (=> d!4713 (=> res!15101 e!16094)))

(assert (=> d!4713 (= res!15101 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4713 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) e!16094)))

(declare-fun bm!2192 () Bool)

(assert (=> bm!2192 (= call!2195 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24906 () Bool)

(assert (=> b!24906 (= e!16094 e!16093)))

(declare-fun c!3414 () Bool)

(assert (=> b!24906 (= c!3414 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4713 (not res!15101)) b!24906))

(assert (= (and b!24906 c!3414) b!24904))

(assert (= (and b!24906 (not c!3414)) b!24905))

(assert (= (and b!24904 res!15100) b!24903))

(assert (= (or b!24903 b!24905) bm!2192))

(assert (=> b!24904 m!16992))

(declare-fun m!19973 () Bool)

(assert (=> b!24904 m!19973))

(declare-fun m!19975 () Bool)

(assert (=> b!24904 m!19975))

(assert (=> b!24904 m!16992))

(declare-fun m!19977 () Bool)

(assert (=> b!24904 m!19977))

(declare-fun m!19979 () Bool)

(assert (=> bm!2192 m!19979))

(assert (=> b!24906 m!16992))

(assert (=> b!24906 m!16992))

(assert (=> b!24906 m!16996))

(assert (=> b!23749 d!4713))

(assert (=> bm!1985 d!4139))

(declare-fun d!4715 () Bool)

(declare-fun e!16095 () Bool)

(assert (=> d!4715 e!16095))

(declare-fun res!15102 () Bool)

(assert (=> d!4715 (=> res!15102 e!16095)))

(declare-fun lt!9579 () Bool)

(assert (=> d!4715 (= res!15102 (not lt!9579))))

(declare-fun lt!9580 () Bool)

(assert (=> d!4715 (= lt!9579 lt!9580)))

(declare-fun lt!9578 () Unit!514)

(declare-fun e!16096 () Unit!514)

(assert (=> d!4715 (= lt!9578 e!16096)))

(declare-fun c!3415 () Bool)

(assert (=> d!4715 (= c!3415 lt!9580)))

(assert (=> d!4715 (= lt!9580 (containsKey!25 (toList!292 lt!8444) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> d!4715 (= (contains!220 lt!8444 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) lt!9579)))

(declare-fun b!24907 () Bool)

(declare-fun lt!9581 () Unit!514)

(assert (=> b!24907 (= e!16096 lt!9581)))

(assert (=> b!24907 (= lt!9581 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 lt!8444) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!24907 (isDefined!23 (getValueByKey!61 (toList!292 lt!8444) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!24908 () Bool)

(declare-fun Unit!592 () Unit!514)

(assert (=> b!24908 (= e!16096 Unit!592)))

(declare-fun b!24909 () Bool)

(assert (=> b!24909 (= e!16095 (isDefined!23 (getValueByKey!61 (toList!292 lt!8444) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))))

(assert (= (and d!4715 c!3415) b!24907))

(assert (= (and d!4715 (not c!3415)) b!24908))

(assert (= (and d!4715 (not res!15102)) b!24909))

(assert (=> d!4715 m!16992))

(declare-fun m!19981 () Bool)

(assert (=> d!4715 m!19981))

(assert (=> b!24907 m!16992))

(declare-fun m!19983 () Bool)

(assert (=> b!24907 m!19983))

(assert (=> b!24907 m!16992))

(assert (=> b!24907 m!18563))

(assert (=> b!24907 m!18563))

(declare-fun m!19985 () Bool)

(assert (=> b!24907 m!19985))

(assert (=> b!24909 m!16992))

(assert (=> b!24909 m!18563))

(assert (=> b!24909 m!18563))

(assert (=> b!24909 m!19985))

(assert (=> b!23509 d!4715))

(declare-fun d!4717 () Bool)

(declare-fun lt!9582 () Bool)

(assert (=> d!4717 (= lt!9582 (select (content!16 (toList!292 lt!8499)) (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!16098 () Bool)

(assert (=> d!4717 (= lt!9582 e!16098)))

(declare-fun res!15104 () Bool)

(assert (=> d!4717 (=> (not res!15104) (not e!16098))))

(assert (=> d!4717 (= res!15104 ((_ is Cons!561) (toList!292 lt!8499)))))

(assert (=> d!4717 (= (contains!221 (toList!292 lt!8499) (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!9582)))

(declare-fun b!24910 () Bool)

(declare-fun e!16097 () Bool)

(assert (=> b!24910 (= e!16098 e!16097)))

(declare-fun res!15103 () Bool)

(assert (=> b!24910 (=> res!15103 e!16097)))

(assert (=> b!24910 (= res!15103 (= (h!1127 (toList!292 lt!8499)) (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24911 () Bool)

(assert (=> b!24911 (= e!16097 (contains!221 (t!3238 (toList!292 lt!8499)) (ite c!2997 (ite c!3001 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4717 res!15104) b!24910))

(assert (= (and b!24910 (not res!15103)) b!24911))

(declare-fun m!19987 () Bool)

(assert (=> d!4717 m!19987))

(declare-fun m!19989 () Bool)

(assert (=> d!4717 m!19989))

(declare-fun m!19991 () Bool)

(assert (=> b!24911 m!19991))

(assert (=> b!23575 d!4717))

(assert (=> d!4079 d!4087))

(declare-fun d!4719 () Bool)

(assert (=> d!4719 (= (arrayCountValidKeys!0 lt!8661 (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!9583 () Unit!514)

(assert (=> d!4719 (= lt!9583 (choose!2 lt!8661 (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))

(declare-fun e!16099 () Bool)

(assert (=> d!4719 e!16099))

(declare-fun res!15105 () Bool)

(assert (=> d!4719 (=> (not res!15105) (not e!16099))))

(assert (=> d!4719 (= res!15105 (and (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!700 lt!8661))))))

(assert (=> d!4719 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8661 (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))) lt!9583)))

(declare-fun b!24912 () Bool)

(declare-fun res!15106 () Bool)

(assert (=> b!24912 (=> (not res!15106) (not e!16099))))

(assert (=> b!24912 (= res!15106 (validKeyInArray!0 (select (arr!604 lt!8661) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))))))

(declare-fun b!24913 () Bool)

(assert (=> b!24913 (= e!16099 (bvslt (size!700 lt!8661) #b01111111111111111111111111111111))))

(assert (= (and d!4719 res!15105) b!24912))

(assert (= (and b!24912 res!15106) b!24913))

(assert (=> d!4719 m!17385))

(declare-fun m!19993 () Bool)

(assert (=> d!4719 m!19993))

(declare-fun m!19995 () Bool)

(assert (=> b!24912 m!19995))

(assert (=> b!24912 m!19995))

(declare-fun m!19997 () Bool)

(assert (=> b!24912 m!19997))

(assert (=> d!4079 d!4719))

(assert (=> d!4079 d!4345))

(assert (=> d!4079 d!4293))

(declare-fun d!4721 () Bool)

(declare-fun e!16100 () Bool)

(assert (=> d!4721 e!16100))

(declare-fun res!15107 () Bool)

(assert (=> d!4721 (=> res!15107 e!16100)))

(declare-fun lt!9585 () Bool)

(assert (=> d!4721 (= res!15107 (not lt!9585))))

(declare-fun lt!9586 () Bool)

(assert (=> d!4721 (= lt!9585 lt!9586)))

(declare-fun lt!9584 () Unit!514)

(declare-fun e!16101 () Unit!514)

(assert (=> d!4721 (= lt!9584 e!16101)))

(declare-fun c!3416 () Bool)

(assert (=> d!4721 (= c!3416 lt!9586)))

(assert (=> d!4721 (= lt!9586 (containsKey!25 (toList!292 (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))))))

(assert (=> d!4721 (= (contains!220 (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (select (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))) lt!9585)))

(declare-fun b!24914 () Bool)

(declare-fun lt!9587 () Unit!514)

(assert (=> b!24914 (= e!16101 lt!9587)))

(assert (=> b!24914 (= lt!9587 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))))))

(assert (=> b!24914 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))))))

(declare-fun b!24915 () Bool)

(declare-fun Unit!593 () Unit!514)

(assert (=> b!24915 (= e!16101 Unit!593)))

(declare-fun b!24916 () Bool)

(assert (=> b!24916 (= e!16100 (isDefined!23 (getValueByKey!61 (toList!292 (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (select (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))))

(assert (= (and d!4721 c!3416) b!24914))

(assert (= (and d!4721 (not c!3416)) b!24915))

(assert (= (and d!4721 (not res!15107)) b!24916))

(assert (=> d!4721 m!17377))

(declare-fun m!19999 () Bool)

(assert (=> d!4721 m!19999))

(assert (=> b!24914 m!17377))

(declare-fun m!20001 () Bool)

(assert (=> b!24914 m!20001))

(assert (=> b!24914 m!17377))

(declare-fun m!20003 () Bool)

(assert (=> b!24914 m!20003))

(assert (=> b!24914 m!20003))

(declare-fun m!20005 () Bool)

(assert (=> b!24914 m!20005))

(assert (=> b!24916 m!17377))

(assert (=> b!24916 m!20003))

(assert (=> b!24916 m!20003))

(assert (=> b!24916 m!20005))

(assert (=> d!4079 d!4721))

(declare-fun lt!9588 () (_ BitVec 32))

(declare-fun d!4723 () Bool)

(assert (=> d!4723 (and (bvsge lt!9588 #b00000000000000000000000000000000) (bvsle lt!9588 (bvsub (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000)))))

(declare-fun e!16103 () (_ BitVec 32))

(assert (=> d!4723 (= lt!9588 e!16103)))

(declare-fun c!3418 () Bool)

(assert (=> d!4723 (= c!3418 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4723 (and (bvsle #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4723 (= (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9588)))

(declare-fun bm!2193 () Bool)

(declare-fun call!2196 () (_ BitVec 32))

(assert (=> bm!2193 (= call!2196 (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24917 () Bool)

(declare-fun e!16102 () (_ BitVec 32))

(assert (=> b!24917 (= e!16102 (bvadd #b00000000000000000000000000000001 call!2196))))

(declare-fun b!24918 () Bool)

(assert (=> b!24918 (= e!16102 call!2196)))

(declare-fun b!24919 () Bool)

(assert (=> b!24919 (= e!16103 #b00000000000000000000000000000000)))

(declare-fun b!24920 () Bool)

(assert (=> b!24920 (= e!16103 e!16102)))

(declare-fun c!3417 () Bool)

(assert (=> b!24920 (= c!3417 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000)))))

(assert (= (and d!4723 c!3418) b!24919))

(assert (= (and d!4723 (not c!3418)) b!24920))

(assert (= (and b!24920 c!3417) b!24917))

(assert (= (and b!24920 (not c!3417)) b!24918))

(assert (= (or b!24917 b!24918) bm!2193))

(declare-fun m!20007 () Bool)

(assert (=> bm!2193 m!20007))

(declare-fun m!20009 () Bool)

(assert (=> b!24920 m!20009))

(assert (=> b!24920 m!20009))

(declare-fun m!20011 () Bool)

(assert (=> b!24920 m!20011))

(assert (=> d!4079 d!4723))

(declare-fun d!4725 () Bool)

(declare-fun e!16104 () Bool)

(assert (=> d!4725 e!16104))

(declare-fun res!15108 () Bool)

(assert (=> d!4725 (=> (not res!15108) (not e!16104))))

(assert (=> d!4725 (= res!15108 (and (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9589 () Unit!514)

(assert (=> d!4725 (= lt!9589 (choose!218 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4725 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4725 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9589)))

(declare-fun b!24921 () Bool)

(assert (=> b!24921 (= e!16104 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (= (and d!4725 res!15108) b!24921))

(declare-fun m!20013 () Bool)

(assert (=> d!4725 m!20013))

(assert (=> d!4725 m!16948))

(assert (=> b!24921 m!17395))

(assert (=> b!24921 m!17403))

(assert (=> b!24921 m!16828))

(assert (=> b!24921 m!17100))

(assert (=> b!24921 m!17401))

(assert (=> b!24921 m!16828))

(assert (=> d!4079 d!4725))

(declare-fun b!24922 () Bool)

(declare-fun e!16105 () Bool)

(declare-fun call!2197 () Bool)

(assert (=> b!24922 (= e!16105 call!2197)))

(declare-fun b!24923 () Bool)

(declare-fun e!16106 () Bool)

(assert (=> b!24923 (= e!16106 e!16105)))

(declare-fun lt!9590 () (_ BitVec 64))

(assert (=> b!24923 (= lt!9590 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000))))

(declare-fun lt!9591 () Unit!514)

(assert (=> b!24923 (= lt!9591 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9590 #b00000000000000000000000000000000))))

(assert (=> b!24923 (arrayContainsKey!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9590 #b00000000000000000000000000000000)))

(declare-fun lt!9592 () Unit!514)

(assert (=> b!24923 (= lt!9592 lt!9591)))

(declare-fun res!15109 () Bool)

(assert (=> b!24923 (= res!15109 (= (seekEntryOrOpen!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000) (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24923 (=> (not res!15109) (not e!16105))))

(declare-fun b!24924 () Bool)

(assert (=> b!24924 (= e!16106 call!2197)))

(declare-fun d!4727 () Bool)

(declare-fun res!15110 () Bool)

(declare-fun e!16107 () Bool)

(assert (=> d!4727 (=> res!15110 e!16107)))

(assert (=> d!4727 (= res!15110 (bvsge #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4727 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) e!16107)))

(declare-fun bm!2194 () Bool)

(assert (=> bm!2194 (= call!2197 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24925 () Bool)

(assert (=> b!24925 (= e!16107 e!16106)))

(declare-fun c!3419 () Bool)

(assert (=> b!24925 (= c!3419 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000)))))

(assert (= (and d!4727 (not res!15110)) b!24925))

(assert (= (and b!24925 c!3419) b!24923))

(assert (= (and b!24925 (not c!3419)) b!24924))

(assert (= (and b!24923 res!15109) b!24922))

(assert (= (or b!24922 b!24924) bm!2194))

(assert (=> b!24923 m!20009))

(declare-fun m!20015 () Bool)

(assert (=> b!24923 m!20015))

(declare-fun m!20017 () Bool)

(assert (=> b!24923 m!20017))

(assert (=> b!24923 m!20009))

(declare-fun m!20019 () Bool)

(assert (=> b!24923 m!20019))

(declare-fun m!20021 () Bool)

(assert (=> bm!2194 m!20021))

(assert (=> b!24925 m!20009))

(assert (=> b!24925 m!20009))

(assert (=> b!24925 m!20011))

(assert (=> d!4079 d!4727))

(declare-fun d!4729 () Bool)

(declare-fun e!16108 () Bool)

(assert (=> d!4729 e!16108))

(declare-fun res!15111 () Bool)

(assert (=> d!4729 (=> (not res!15111) (not e!16108))))

(assert (=> d!4729 (= res!15111 (and (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!700 lt!8666))))))

(declare-fun lt!9593 () Unit!514)

(assert (=> d!4729 (= lt!9593 (choose!208 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4729 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4729 (= (lemmaValidKeyInArrayIsInListMap!10 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9593)))

(declare-fun b!24926 () Bool)

(assert (=> b!24926 (= e!16108 (contains!220 (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (select (arr!604 lt!8666) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))))))

(assert (= (and d!4729 res!15111) b!24926))

(declare-fun m!20023 () Bool)

(assert (=> d!4729 m!20023))

(assert (=> d!4729 m!16948))

(assert (=> b!24926 m!17375))

(declare-fun m!20025 () Bool)

(assert (=> b!24926 m!20025))

(assert (=> b!24926 m!17375))

(assert (=> b!24926 m!20025))

(declare-fun m!20027 () Bool)

(assert (=> b!24926 m!20027))

(assert (=> d!4079 d!4729))

(declare-fun b!24927 () Bool)

(declare-fun e!16110 () Bool)

(assert (=> b!24927 (= e!16110 (contains!222 lt!8659 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8675)))))

(declare-fun b!24928 () Bool)

(declare-fun e!16109 () Bool)

(declare-fun e!16112 () Bool)

(assert (=> b!24928 (= e!16109 e!16112)))

(declare-fun res!15114 () Bool)

(assert (=> b!24928 (=> (not res!15114) (not e!16112))))

(assert (=> b!24928 (= res!15114 (not e!16110))))

(declare-fun res!15113 () Bool)

(assert (=> b!24928 (=> (not res!15113) (not e!16110))))

(assert (=> b!24928 (= res!15113 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8675)))))

(declare-fun b!24930 () Bool)

(declare-fun e!16111 () Bool)

(assert (=> b!24930 (= e!16112 e!16111)))

(declare-fun c!3420 () Bool)

(assert (=> b!24930 (= c!3420 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8675)))))

(declare-fun bm!2195 () Bool)

(declare-fun call!2198 () Bool)

(assert (=> bm!2195 (= call!2198 (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvadd lt!8675 #b00000000000000000000000000000001) (ite c!3420 (Cons!562 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!8675) lt!8659) lt!8659)))))

(declare-fun b!24931 () Bool)

(assert (=> b!24931 (= e!16111 call!2198)))

(declare-fun b!24929 () Bool)

(assert (=> b!24929 (= e!16111 call!2198)))

(declare-fun d!4731 () Bool)

(declare-fun res!15112 () Bool)

(assert (=> d!4731 (=> res!15112 e!16109)))

(assert (=> d!4731 (= res!15112 (bvsge lt!8675 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4731 (= (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8675 lt!8659) e!16109)))

(assert (= (and d!4731 (not res!15112)) b!24928))

(assert (= (and b!24928 res!15113) b!24927))

(assert (= (and b!24928 res!15114) b!24930))

(assert (= (and b!24930 c!3420) b!24931))

(assert (= (and b!24930 (not c!3420)) b!24929))

(assert (= (or b!24931 b!24929) bm!2195))

(declare-fun m!20029 () Bool)

(assert (=> b!24927 m!20029))

(assert (=> b!24927 m!20029))

(declare-fun m!20031 () Bool)

(assert (=> b!24927 m!20031))

(assert (=> b!24928 m!20029))

(assert (=> b!24928 m!20029))

(declare-fun m!20033 () Bool)

(assert (=> b!24928 m!20033))

(assert (=> b!24930 m!20029))

(assert (=> b!24930 m!20029))

(assert (=> b!24930 m!20033))

(assert (=> bm!2195 m!20029))

(declare-fun m!20035 () Bool)

(assert (=> bm!2195 m!20035))

(assert (=> d!4079 d!4731))

(declare-fun d!4733 () Bool)

(declare-fun lt!9594 () (_ BitVec 32))

(assert (=> d!4733 (and (bvsge lt!9594 #b00000000000000000000000000000000) (bvsle lt!9594 (bvsub (size!700 lt!8661) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))))))

(declare-fun e!16114 () (_ BitVec 32))

(assert (=> d!4733 (= lt!9594 e!16114)))

(declare-fun c!3422 () Bool)

(assert (=> d!4733 (= c!3422 (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001)))))

(assert (=> d!4733 (and (bvsle (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001)) (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001) (size!700 lt!8661)))))

(assert (=> d!4733 (= (arrayCountValidKeys!0 lt!8661 (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001)) lt!9594)))

(declare-fun bm!2196 () Bool)

(declare-fun call!2199 () (_ BitVec 32))

(assert (=> bm!2196 (= call!2199 (arrayCountValidKeys!0 lt!8661 (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001) (bvadd (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000001)))))

(declare-fun b!24932 () Bool)

(declare-fun e!16113 () (_ BitVec 32))

(assert (=> b!24932 (= e!16113 (bvadd #b00000000000000000000000000000001 call!2199))))

(declare-fun b!24933 () Bool)

(assert (=> b!24933 (= e!16113 call!2199)))

(declare-fun b!24934 () Bool)

(assert (=> b!24934 (= e!16114 #b00000000000000000000000000000000)))

(declare-fun b!24935 () Bool)

(assert (=> b!24935 (= e!16114 e!16113)))

(declare-fun c!3421 () Bool)

(assert (=> b!24935 (= c!3421 (validKeyInArray!0 (select (arr!604 lt!8661) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)))))))

(assert (= (and d!4733 c!3422) b!24934))

(assert (= (and d!4733 (not c!3422)) b!24935))

(assert (= (and b!24935 c!3421) b!24932))

(assert (= (and b!24935 (not c!3421)) b!24933))

(assert (= (or b!24932 b!24933) bm!2196))

(declare-fun m!20037 () Bool)

(assert (=> bm!2196 m!20037))

(assert (=> b!24935 m!19995))

(assert (=> b!24935 m!19995))

(assert (=> b!24935 m!19997))

(assert (=> d!4079 d!4733))

(assert (=> d!4079 d!4169))

(declare-fun d!4735 () Bool)

(declare-fun res!15115 () Bool)

(declare-fun e!16115 () Bool)

(assert (=> d!4735 (=> res!15115 e!16115)))

(assert (=> d!4735 (= res!15115 (= (select (arr!604 lt!8657) #b00000000000000000000000000000000) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4735 (= (arrayContainsKey!0 lt!8657 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000) e!16115)))

(declare-fun b!24936 () Bool)

(declare-fun e!16116 () Bool)

(assert (=> b!24936 (= e!16115 e!16116)))

(declare-fun res!15116 () Bool)

(assert (=> b!24936 (=> (not res!15116) (not e!16116))))

(assert (=> b!24936 (= res!15116 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 lt!8657)))))

(declare-fun b!24937 () Bool)

(assert (=> b!24937 (= e!16116 (arrayContainsKey!0 lt!8657 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4735 (not res!15115)) b!24936))

(assert (= (and b!24936 res!15116) b!24937))

(declare-fun m!20039 () Bool)

(assert (=> d!4735 m!20039))

(declare-fun m!20041 () Bool)

(assert (=> b!24937 m!20041))

(assert (=> d!4079 d!4735))

(declare-fun b!24938 () Bool)

(declare-fun e!16121 () ListLongMap!553)

(declare-fun call!2206 () ListLongMap!553)

(assert (=> b!24938 (= e!16121 call!2206)))

(declare-fun b!24939 () Bool)

(declare-fun res!15125 () Bool)

(declare-fun e!16124 () Bool)

(assert (=> b!24939 (=> (not res!15125) (not e!16124))))

(declare-fun e!16119 () Bool)

(assert (=> b!24939 (= res!15125 e!16119)))

(declare-fun c!3423 () Bool)

(assert (=> b!24939 (= c!3423 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24940 () Bool)

(declare-fun e!16118 () Bool)

(declare-fun e!16126 () Bool)

(assert (=> b!24940 (= e!16118 e!16126)))

(declare-fun res!15121 () Bool)

(assert (=> b!24940 (=> (not res!15121) (not e!16126))))

(declare-fun lt!9604 () ListLongMap!553)

(assert (=> b!24940 (= res!15121 (contains!220 lt!9604 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000)))))

(assert (=> b!24940 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24941 () Bool)

(declare-fun e!16117 () Bool)

(declare-fun e!16125 () Bool)

(assert (=> b!24941 (= e!16117 e!16125)))

(declare-fun res!15124 () Bool)

(declare-fun call!2202 () Bool)

(assert (=> b!24941 (= res!15124 call!2202)))

(assert (=> b!24941 (=> (not res!15124) (not e!16125))))

(declare-fun b!24942 () Bool)

(declare-fun e!16129 () Unit!514)

(declare-fun lt!9595 () Unit!514)

(assert (=> b!24942 (= e!16129 lt!9595)))

(declare-fun lt!9600 () ListLongMap!553)

(assert (=> b!24942 (= lt!9600 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9611 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9611 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9612 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9612 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000))))

(declare-fun lt!9615 () Unit!514)

(assert (=> b!24942 (= lt!9615 (addStillContains!14 lt!9600 lt!9611 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9612))))

(assert (=> b!24942 (contains!220 (+!45 lt!9600 (tuple2!947 lt!9611 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9612)))

(declare-fun lt!9609 () Unit!514)

(assert (=> b!24942 (= lt!9609 lt!9615)))

(declare-fun lt!9602 () ListLongMap!553)

(assert (=> b!24942 (= lt!9602 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9598 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9598 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9605 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9605 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000))))

(declare-fun lt!9608 () Unit!514)

(assert (=> b!24942 (= lt!9608 (addApplyDifferent!14 lt!9602 lt!9598 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9605))))

(assert (=> b!24942 (= (apply!29 (+!45 lt!9602 (tuple2!947 lt!9598 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9605) (apply!29 lt!9602 lt!9605))))

(declare-fun lt!9599 () Unit!514)

(assert (=> b!24942 (= lt!9599 lt!9608)))

(declare-fun lt!9603 () ListLongMap!553)

(assert (=> b!24942 (= lt!9603 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9606 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9606 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9601 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9601 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000))))

(declare-fun lt!9607 () Unit!514)

(assert (=> b!24942 (= lt!9607 (addApplyDifferent!14 lt!9603 lt!9606 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9601))))

(assert (=> b!24942 (= (apply!29 (+!45 lt!9603 (tuple2!947 lt!9606 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9601) (apply!29 lt!9603 lt!9601))))

(declare-fun lt!9616 () Unit!514)

(assert (=> b!24942 (= lt!9616 lt!9607)))

(declare-fun lt!9610 () ListLongMap!553)

(assert (=> b!24942 (= lt!9610 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9596 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9596 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9614 () (_ BitVec 64))

(assert (=> b!24942 (= lt!9614 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000))))

(assert (=> b!24942 (= lt!9595 (addApplyDifferent!14 lt!9610 lt!9596 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9614))))

(assert (=> b!24942 (= (apply!29 (+!45 lt!9610 (tuple2!947 lt!9596 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9614) (apply!29 lt!9610 lt!9614))))

(declare-fun call!2205 () ListLongMap!553)

(declare-fun bm!2198 () Bool)

(assert (=> bm!2198 (= call!2205 (getCurrentListMapNoExtraKeys!15 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24943 () Bool)

(declare-fun call!2203 () Bool)

(assert (=> b!24943 (= e!16119 (not call!2203))))

(declare-fun bm!2199 () Bool)

(declare-fun call!2200 () ListLongMap!553)

(declare-fun call!2204 () ListLongMap!553)

(assert (=> bm!2199 (= call!2200 call!2204)))

(declare-fun c!3426 () Bool)

(declare-fun c!3427 () Bool)

(declare-fun call!2201 () ListLongMap!553)

(declare-fun bm!2200 () Bool)

(assert (=> bm!2200 (= call!2204 (+!45 (ite c!3426 call!2205 (ite c!3427 call!2201 call!2206)) (ite (or c!3426 c!3427) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!24944 () Bool)

(declare-fun Unit!594 () Unit!514)

(assert (=> b!24944 (= e!16129 Unit!594)))

(declare-fun b!24945 () Bool)

(assert (=> b!24945 (= e!16117 (not call!2202))))

(declare-fun c!3424 () Bool)

(declare-fun b!24946 () Bool)

(assert (=> b!24946 (= c!3424 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!16127 () ListLongMap!553)

(assert (=> b!24946 (= e!16127 e!16121)))

(declare-fun b!24947 () Bool)

(declare-fun e!16123 () ListLongMap!553)

(assert (=> b!24947 (= e!16123 e!16127)))

(assert (=> b!24947 (= c!3427 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2201 () Bool)

(assert (=> bm!2201 (= call!2206 call!2201)))

(declare-fun b!24948 () Bool)

(assert (=> b!24948 (= e!16125 (= (apply!29 lt!9604 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!2202 () Bool)

(assert (=> bm!2202 (= call!2201 call!2205)))

(declare-fun b!24949 () Bool)

(declare-fun e!16128 () Bool)

(assert (=> b!24949 (= e!16119 e!16128)))

(declare-fun res!15123 () Bool)

(assert (=> b!24949 (= res!15123 call!2203)))

(assert (=> b!24949 (=> (not res!15123) (not e!16128))))

(declare-fun d!4737 () Bool)

(assert (=> d!4737 e!16124))

(declare-fun res!15119 () Bool)

(assert (=> d!4737 (=> (not res!15119) (not e!16124))))

(assert (=> d!4737 (= res!15119 (or (bvsge #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))))

(declare-fun lt!9613 () ListLongMap!553)

(assert (=> d!4737 (= lt!9604 lt!9613)))

(declare-fun lt!9597 () Unit!514)

(assert (=> d!4737 (= lt!9597 e!16129)))

(declare-fun c!3428 () Bool)

(declare-fun e!16122 () Bool)

(assert (=> d!4737 (= c!3428 e!16122)))

(declare-fun res!15120 () Bool)

(assert (=> d!4737 (=> (not res!15120) (not e!16122))))

(assert (=> d!4737 (= res!15120 (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4737 (= lt!9613 e!16123)))

(assert (=> d!4737 (= c!3426 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4737 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4737 (= (getCurrentListMap!121 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9604)))

(declare-fun bm!2197 () Bool)

(assert (=> bm!2197 (= call!2203 (contains!220 lt!9604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2203 () Bool)

(assert (=> bm!2203 (= call!2202 (contains!220 lt!9604 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24950 () Bool)

(assert (=> b!24950 (= e!16128 (= (apply!29 lt!9604 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24951 () Bool)

(declare-fun res!15118 () Bool)

(assert (=> b!24951 (=> (not res!15118) (not e!16124))))

(assert (=> b!24951 (= res!15118 e!16118)))

(declare-fun res!15117 () Bool)

(assert (=> b!24951 (=> res!15117 e!16118)))

(declare-fun e!16120 () Bool)

(assert (=> b!24951 (= res!15117 (not e!16120))))

(declare-fun res!15122 () Bool)

(assert (=> b!24951 (=> (not res!15122) (not e!16120))))

(assert (=> b!24951 (= res!15122 (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24952 () Bool)

(assert (=> b!24952 (= e!16122 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000)))))

(declare-fun b!24953 () Bool)

(assert (=> b!24953 (= e!16124 e!16117)))

(declare-fun c!3425 () Bool)

(assert (=> b!24953 (= c!3425 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24954 () Bool)

(assert (=> b!24954 (= e!16126 (= (apply!29 lt!9604 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24954 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (array!1276 (store (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ValueCellFull!312 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> b!24954 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun b!24955 () Bool)

(assert (=> b!24955 (= e!16121 call!2200)))

(declare-fun b!24956 () Bool)

(assert (=> b!24956 (= e!16123 (+!45 call!2204 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24957 () Bool)

(assert (=> b!24957 (= e!16127 call!2200)))

(declare-fun b!24958 () Bool)

(assert (=> b!24958 (= e!16120 (validKeyInArray!0 (select (arr!604 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))) #b00000000000000000000000000000000)))))

(assert (= (and d!4737 c!3426) b!24956))

(assert (= (and d!4737 (not c!3426)) b!24947))

(assert (= (and b!24947 c!3427) b!24957))

(assert (= (and b!24947 (not c!3427)) b!24946))

(assert (= (and b!24946 c!3424) b!24955))

(assert (= (and b!24946 (not c!3424)) b!24938))

(assert (= (or b!24955 b!24938) bm!2201))

(assert (= (or b!24957 bm!2201) bm!2202))

(assert (= (or b!24957 b!24955) bm!2199))

(assert (= (or b!24956 bm!2202) bm!2198))

(assert (= (or b!24956 bm!2199) bm!2200))

(assert (= (and d!4737 res!15120) b!24952))

(assert (= (and d!4737 c!3428) b!24942))

(assert (= (and d!4737 (not c!3428)) b!24944))

(assert (= (and d!4737 res!15119) b!24951))

(assert (= (and b!24951 res!15122) b!24958))

(assert (= (and b!24951 (not res!15117)) b!24940))

(assert (= (and b!24940 res!15121) b!24954))

(assert (= (and b!24951 res!15118) b!24939))

(assert (= (and b!24939 c!3423) b!24949))

(assert (= (and b!24939 (not c!3423)) b!24943))

(assert (= (and b!24949 res!15123) b!24950))

(assert (= (or b!24949 b!24943) bm!2197))

(assert (= (and b!24939 res!15125) b!24953))

(assert (= (and b!24953 c!3425) b!24941))

(assert (= (and b!24953 (not c!3425)) b!24945))

(assert (= (and b!24941 res!15124) b!24948))

(assert (= (or b!24941 b!24945) bm!2203))

(declare-fun b_lambda!1649 () Bool)

(assert (=> (not b_lambda!1649) (not b!24954)))

(assert (=> b!24954 t!3241))

(declare-fun b_and!1553 () Bool)

(assert (= b_and!1551 (and (=> t!3241 result!1101) b_and!1553)))

(declare-fun m!20043 () Bool)

(assert (=> bm!2197 m!20043))

(declare-fun m!20045 () Bool)

(assert (=> b!24948 m!20045))

(declare-fun m!20047 () Bool)

(assert (=> bm!2203 m!20047))

(declare-fun m!20049 () Bool)

(assert (=> bm!2200 m!20049))

(declare-fun m!20051 () Bool)

(assert (=> b!24956 m!20051))

(assert (=> b!24940 m!20009))

(assert (=> b!24940 m!20009))

(declare-fun m!20053 () Bool)

(assert (=> b!24940 m!20053))

(assert (=> b!24958 m!20009))

(assert (=> b!24958 m!20009))

(assert (=> b!24958 m!20011))

(assert (=> b!24952 m!20009))

(assert (=> b!24952 m!20009))

(assert (=> b!24952 m!20011))

(declare-fun m!20055 () Bool)

(assert (=> bm!2198 m!20055))

(declare-fun m!20057 () Bool)

(assert (=> b!24942 m!20057))

(declare-fun m!20059 () Bool)

(assert (=> b!24942 m!20059))

(declare-fun m!20061 () Bool)

(assert (=> b!24942 m!20061))

(declare-fun m!20063 () Bool)

(assert (=> b!24942 m!20063))

(assert (=> b!24942 m!20061))

(declare-fun m!20065 () Bool)

(assert (=> b!24942 m!20065))

(declare-fun m!20067 () Bool)

(assert (=> b!24942 m!20067))

(declare-fun m!20069 () Bool)

(assert (=> b!24942 m!20069))

(assert (=> b!24942 m!20055))

(declare-fun m!20071 () Bool)

(assert (=> b!24942 m!20071))

(declare-fun m!20073 () Bool)

(assert (=> b!24942 m!20073))

(declare-fun m!20075 () Bool)

(assert (=> b!24942 m!20075))

(declare-fun m!20077 () Bool)

(assert (=> b!24942 m!20077))

(declare-fun m!20079 () Bool)

(assert (=> b!24942 m!20079))

(assert (=> b!24942 m!20079))

(declare-fun m!20081 () Bool)

(assert (=> b!24942 m!20081))

(assert (=> b!24942 m!20069))

(declare-fun m!20083 () Bool)

(assert (=> b!24942 m!20083))

(assert (=> b!24942 m!20009))

(assert (=> b!24942 m!20077))

(declare-fun m!20085 () Bool)

(assert (=> b!24942 m!20085))

(declare-fun m!20087 () Bool)

(assert (=> b!24950 m!20087))

(assert (=> b!24954 m!17032))

(declare-fun m!20089 () Bool)

(assert (=> b!24954 m!20089))

(assert (=> b!24954 m!17032))

(declare-fun m!20091 () Bool)

(assert (=> b!24954 m!20091))

(assert (=> b!24954 m!20009))

(declare-fun m!20093 () Bool)

(assert (=> b!24954 m!20093))

(assert (=> b!24954 m!20089))

(assert (=> b!24954 m!20009))

(assert (=> d!4737 m!16948))

(assert (=> d!4079 d!4737))

(assert (=> d!4079 d!4053))

(declare-fun b!24959 () Bool)

(declare-fun res!15126 () Bool)

(declare-fun e!16130 () Bool)

(assert (=> b!24959 (=> (not res!15126) (not e!16130))))

(assert (=> b!24959 (= res!15126 (not (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))))

(declare-fun d!4739 () Bool)

(declare-fun e!16131 () Bool)

(assert (=> d!4739 e!16131))

(declare-fun res!15129 () Bool)

(assert (=> d!4739 (=> (not res!15129) (not e!16131))))

(assert (=> d!4739 (= res!15129 (and (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9617 () Unit!514)

(assert (=> d!4739 (= lt!9617 (choose!1 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4739 e!16130))

(declare-fun res!15128 () Bool)

(assert (=> d!4739 (=> (not res!15128) (not e!16130))))

(assert (=> d!4739 (= res!15128 (and (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (=> d!4739 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) lt!9617)))

(declare-fun b!24962 () Bool)

(assert (=> b!24962 (= e!16131 (= (arrayCountValidKeys!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (bvadd (arrayCountValidKeys!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) #b00000000000000000000000000000001)))))

(declare-fun b!24961 () Bool)

(assert (=> b!24961 (= e!16130 (bvslt (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b01111111111111111111111111111111))))

(declare-fun b!24960 () Bool)

(declare-fun res!15127 () Bool)

(assert (=> b!24960 (=> (not res!15127) (not e!16130))))

(assert (=> b!24960 (= res!15127 (validKeyInArray!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4739 res!15128) b!24959))

(assert (= (and b!24959 res!15126) b!24960))

(assert (= (and b!24960 res!15127) b!24961))

(assert (= (and d!4739 res!15129) b!24962))

(declare-fun m!20095 () Bool)

(assert (=> b!24959 m!20095))

(assert (=> b!24959 m!20095))

(declare-fun m!20097 () Bool)

(assert (=> b!24959 m!20097))

(declare-fun m!20099 () Bool)

(assert (=> d!4739 m!20099))

(assert (=> b!24962 m!17401))

(assert (=> b!24962 m!17387))

(assert (=> b!24962 m!17391))

(declare-fun m!20101 () Bool)

(assert (=> b!24960 m!20101))

(assert (=> d!4079 d!4739))

(declare-fun b!24963 () Bool)

(declare-fun e!16136 () ListLongMap!553)

(declare-fun call!2213 () ListLongMap!553)

(assert (=> b!24963 (= e!16136 call!2213)))

(declare-fun b!24964 () Bool)

(declare-fun res!15138 () Bool)

(declare-fun e!16139 () Bool)

(assert (=> b!24964 (=> (not res!15138) (not e!16139))))

(declare-fun e!16134 () Bool)

(assert (=> b!24964 (= res!15138 e!16134)))

(declare-fun c!3429 () Bool)

(assert (=> b!24964 (= c!3429 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24965 () Bool)

(declare-fun e!16133 () Bool)

(declare-fun e!16141 () Bool)

(assert (=> b!24965 (= e!16133 e!16141)))

(declare-fun res!15134 () Bool)

(assert (=> b!24965 (=> (not res!15134) (not e!16141))))

(declare-fun lt!9627 () ListLongMap!553)

(assert (=> b!24965 (= res!15134 (contains!220 lt!9627 (select (arr!604 lt!8666) #b00000000000000000000000000000000)))))

(assert (=> b!24965 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 lt!8666)))))

(declare-fun b!24966 () Bool)

(declare-fun e!16132 () Bool)

(declare-fun e!16140 () Bool)

(assert (=> b!24966 (= e!16132 e!16140)))

(declare-fun res!15137 () Bool)

(declare-fun call!2209 () Bool)

(assert (=> b!24966 (= res!15137 call!2209)))

(assert (=> b!24966 (=> (not res!15137) (not e!16140))))

(declare-fun b!24967 () Bool)

(declare-fun e!16144 () Unit!514)

(declare-fun lt!9618 () Unit!514)

(assert (=> b!24967 (= e!16144 lt!9618)))

(declare-fun lt!9623 () ListLongMap!553)

(assert (=> b!24967 (= lt!9623 (getCurrentListMapNoExtraKeys!15 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9634 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9634 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9635 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9635 (select (arr!604 lt!8666) #b00000000000000000000000000000000))))

(declare-fun lt!9638 () Unit!514)

(assert (=> b!24967 (= lt!9638 (addStillContains!14 lt!9623 lt!9634 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9635))))

(assert (=> b!24967 (contains!220 (+!45 lt!9623 (tuple2!947 lt!9634 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9635)))

(declare-fun lt!9632 () Unit!514)

(assert (=> b!24967 (= lt!9632 lt!9638)))

(declare-fun lt!9625 () ListLongMap!553)

(assert (=> b!24967 (= lt!9625 (getCurrentListMapNoExtraKeys!15 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9621 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9621 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9628 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9628 (select (arr!604 lt!8666) #b00000000000000000000000000000000))))

(declare-fun lt!9631 () Unit!514)

(assert (=> b!24967 (= lt!9631 (addApplyDifferent!14 lt!9625 lt!9621 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9628))))

(assert (=> b!24967 (= (apply!29 (+!45 lt!9625 (tuple2!947 lt!9621 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9628) (apply!29 lt!9625 lt!9628))))

(declare-fun lt!9622 () Unit!514)

(assert (=> b!24967 (= lt!9622 lt!9631)))

(declare-fun lt!9626 () ListLongMap!553)

(assert (=> b!24967 (= lt!9626 (getCurrentListMapNoExtraKeys!15 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9629 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9629 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9624 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9624 (select (arr!604 lt!8666) #b00000000000000000000000000000000))))

(declare-fun lt!9630 () Unit!514)

(assert (=> b!24967 (= lt!9630 (addApplyDifferent!14 lt!9626 lt!9629 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9624))))

(assert (=> b!24967 (= (apply!29 (+!45 lt!9626 (tuple2!947 lt!9629 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9624) (apply!29 lt!9626 lt!9624))))

(declare-fun lt!9639 () Unit!514)

(assert (=> b!24967 (= lt!9639 lt!9630)))

(declare-fun lt!9633 () ListLongMap!553)

(assert (=> b!24967 (= lt!9633 (getCurrentListMapNoExtraKeys!15 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9619 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9619 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9637 () (_ BitVec 64))

(assert (=> b!24967 (= lt!9637 (select (arr!604 lt!8666) #b00000000000000000000000000000000))))

(assert (=> b!24967 (= lt!9618 (addApplyDifferent!14 lt!9633 lt!9619 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9637))))

(assert (=> b!24967 (= (apply!29 (+!45 lt!9633 (tuple2!947 lt!9619 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9637) (apply!29 lt!9633 lt!9637))))

(declare-fun call!2212 () ListLongMap!553)

(declare-fun bm!2205 () Bool)

(assert (=> bm!2205 (= call!2212 (getCurrentListMapNoExtraKeys!15 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24968 () Bool)

(declare-fun call!2210 () Bool)

(assert (=> b!24968 (= e!16134 (not call!2210))))

(declare-fun bm!2206 () Bool)

(declare-fun call!2207 () ListLongMap!553)

(declare-fun call!2211 () ListLongMap!553)

(assert (=> bm!2206 (= call!2207 call!2211)))

(declare-fun c!3433 () Bool)

(declare-fun call!2208 () ListLongMap!553)

(declare-fun c!3432 () Bool)

(declare-fun bm!2207 () Bool)

(assert (=> bm!2207 (= call!2211 (+!45 (ite c!3432 call!2212 (ite c!3433 call!2208 call!2213)) (ite (or c!3432 c!3433) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun b!24969 () Bool)

(declare-fun Unit!595 () Unit!514)

(assert (=> b!24969 (= e!16144 Unit!595)))

(declare-fun b!24970 () Bool)

(assert (=> b!24970 (= e!16132 (not call!2209))))

(declare-fun c!3430 () Bool)

(declare-fun b!24971 () Bool)

(assert (=> b!24971 (= c!3430 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!16142 () ListLongMap!553)

(assert (=> b!24971 (= e!16142 e!16136)))

(declare-fun b!24972 () Bool)

(declare-fun e!16138 () ListLongMap!553)

(assert (=> b!24972 (= e!16138 e!16142)))

(assert (=> b!24972 (= c!3433 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2208 () Bool)

(assert (=> bm!2208 (= call!2213 call!2208)))

(declare-fun b!24973 () Bool)

(assert (=> b!24973 (= e!16140 (= (apply!29 lt!9627 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun bm!2209 () Bool)

(assert (=> bm!2209 (= call!2208 call!2212)))

(declare-fun b!24974 () Bool)

(declare-fun e!16143 () Bool)

(assert (=> b!24974 (= e!16134 e!16143)))

(declare-fun res!15136 () Bool)

(assert (=> b!24974 (= res!15136 call!2210)))

(assert (=> b!24974 (=> (not res!15136) (not e!16143))))

(declare-fun d!4741 () Bool)

(assert (=> d!4741 e!16139))

(declare-fun res!15132 () Bool)

(assert (=> d!4741 (=> (not res!15132) (not e!16139))))

(assert (=> d!4741 (= res!15132 (or (bvsge #b00000000000000000000000000000000 (size!700 lt!8666)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 lt!8666)))))))

(declare-fun lt!9636 () ListLongMap!553)

(assert (=> d!4741 (= lt!9627 lt!9636)))

(declare-fun lt!9620 () Unit!514)

(assert (=> d!4741 (= lt!9620 e!16144)))

(declare-fun c!3434 () Bool)

(declare-fun e!16137 () Bool)

(assert (=> d!4741 (= c!3434 e!16137)))

(declare-fun res!15133 () Bool)

(assert (=> d!4741 (=> (not res!15133) (not e!16137))))

(assert (=> d!4741 (= res!15133 (bvslt #b00000000000000000000000000000000 (size!700 lt!8666)))))

(assert (=> d!4741 (= lt!9636 e!16138)))

(assert (=> d!4741 (= c!3432 (and (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4741 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4741 (= (getCurrentListMap!121 lt!8666 lt!8680 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9627)))

(declare-fun bm!2204 () Bool)

(assert (=> bm!2204 (= call!2210 (contains!220 lt!9627 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2210 () Bool)

(assert (=> bm!2210 (= call!2209 (contains!220 lt!9627 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24975 () Bool)

(assert (=> b!24975 (= e!16143 (= (apply!29 lt!9627 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!24976 () Bool)

(declare-fun res!15131 () Bool)

(assert (=> b!24976 (=> (not res!15131) (not e!16139))))

(assert (=> b!24976 (= res!15131 e!16133)))

(declare-fun res!15130 () Bool)

(assert (=> b!24976 (=> res!15130 e!16133)))

(declare-fun e!16135 () Bool)

(assert (=> b!24976 (= res!15130 (not e!16135))))

(declare-fun res!15135 () Bool)

(assert (=> b!24976 (=> (not res!15135) (not e!16135))))

(assert (=> b!24976 (= res!15135 (bvslt #b00000000000000000000000000000000 (size!700 lt!8666)))))

(declare-fun b!24977 () Bool)

(assert (=> b!24977 (= e!16137 (validKeyInArray!0 (select (arr!604 lt!8666) #b00000000000000000000000000000000)))))

(declare-fun b!24978 () Bool)

(assert (=> b!24978 (= e!16139 e!16132)))

(declare-fun c!3431 () Bool)

(assert (=> b!24978 (= c!3431 (not (= (bvand (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24979 () Bool)

(assert (=> b!24979 (= e!16141 (= (apply!29 lt!9627 (select (arr!604 lt!8666) #b00000000000000000000000000000000)) (get!390 (select (arr!603 lt!8680) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24979 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 lt!8680)))))

(assert (=> b!24979 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 lt!8666)))))

(declare-fun b!24980 () Bool)

(assert (=> b!24980 (= e!16136 call!2207)))

(declare-fun b!24981 () Bool)

(assert (=> b!24981 (= e!16138 (+!45 call!2211 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!24982 () Bool)

(assert (=> b!24982 (= e!16142 call!2207)))

(declare-fun b!24983 () Bool)

(assert (=> b!24983 (= e!16135 (validKeyInArray!0 (select (arr!604 lt!8666) #b00000000000000000000000000000000)))))

(assert (= (and d!4741 c!3432) b!24981))

(assert (= (and d!4741 (not c!3432)) b!24972))

(assert (= (and b!24972 c!3433) b!24982))

(assert (= (and b!24972 (not c!3433)) b!24971))

(assert (= (and b!24971 c!3430) b!24980))

(assert (= (and b!24971 (not c!3430)) b!24963))

(assert (= (or b!24980 b!24963) bm!2208))

(assert (= (or b!24982 bm!2208) bm!2209))

(assert (= (or b!24982 b!24980) bm!2206))

(assert (= (or b!24981 bm!2209) bm!2205))

(assert (= (or b!24981 bm!2206) bm!2207))

(assert (= (and d!4741 res!15133) b!24977))

(assert (= (and d!4741 c!3434) b!24967))

(assert (= (and d!4741 (not c!3434)) b!24969))

(assert (= (and d!4741 res!15132) b!24976))

(assert (= (and b!24976 res!15135) b!24983))

(assert (= (and b!24976 (not res!15130)) b!24965))

(assert (= (and b!24965 res!15134) b!24979))

(assert (= (and b!24976 res!15131) b!24964))

(assert (= (and b!24964 c!3429) b!24974))

(assert (= (and b!24964 (not c!3429)) b!24968))

(assert (= (and b!24974 res!15136) b!24975))

(assert (= (or b!24974 b!24968) bm!2204))

(assert (= (and b!24964 res!15138) b!24978))

(assert (= (and b!24978 c!3431) b!24966))

(assert (= (and b!24978 (not c!3431)) b!24970))

(assert (= (and b!24966 res!15137) b!24973))

(assert (= (or b!24966 b!24970) bm!2210))

(declare-fun b_lambda!1651 () Bool)

(assert (=> (not b_lambda!1651) (not b!24979)))

(assert (=> b!24979 t!3241))

(declare-fun b_and!1555 () Bool)

(assert (= b_and!1553 (and (=> t!3241 result!1101) b_and!1555)))

(declare-fun m!20103 () Bool)

(assert (=> bm!2204 m!20103))

(declare-fun m!20105 () Bool)

(assert (=> b!24973 m!20105))

(declare-fun m!20107 () Bool)

(assert (=> bm!2210 m!20107))

(declare-fun m!20109 () Bool)

(assert (=> bm!2207 m!20109))

(declare-fun m!20111 () Bool)

(assert (=> b!24981 m!20111))

(declare-fun m!20113 () Bool)

(assert (=> b!24965 m!20113))

(assert (=> b!24965 m!20113))

(declare-fun m!20115 () Bool)

(assert (=> b!24965 m!20115))

(assert (=> b!24983 m!20113))

(assert (=> b!24983 m!20113))

(declare-fun m!20117 () Bool)

(assert (=> b!24983 m!20117))

(assert (=> b!24977 m!20113))

(assert (=> b!24977 m!20113))

(assert (=> b!24977 m!20117))

(declare-fun m!20119 () Bool)

(assert (=> bm!2205 m!20119))

(declare-fun m!20121 () Bool)

(assert (=> b!24967 m!20121))

(declare-fun m!20123 () Bool)

(assert (=> b!24967 m!20123))

(declare-fun m!20125 () Bool)

(assert (=> b!24967 m!20125))

(declare-fun m!20127 () Bool)

(assert (=> b!24967 m!20127))

(assert (=> b!24967 m!20125))

(declare-fun m!20129 () Bool)

(assert (=> b!24967 m!20129))

(declare-fun m!20131 () Bool)

(assert (=> b!24967 m!20131))

(declare-fun m!20133 () Bool)

(assert (=> b!24967 m!20133))

(assert (=> b!24967 m!20119))

(declare-fun m!20135 () Bool)

(assert (=> b!24967 m!20135))

(declare-fun m!20137 () Bool)

(assert (=> b!24967 m!20137))

(declare-fun m!20139 () Bool)

(assert (=> b!24967 m!20139))

(declare-fun m!20141 () Bool)

(assert (=> b!24967 m!20141))

(declare-fun m!20143 () Bool)

(assert (=> b!24967 m!20143))

(assert (=> b!24967 m!20143))

(declare-fun m!20145 () Bool)

(assert (=> b!24967 m!20145))

(assert (=> b!24967 m!20133))

(declare-fun m!20147 () Bool)

(assert (=> b!24967 m!20147))

(assert (=> b!24967 m!20113))

(assert (=> b!24967 m!20141))

(declare-fun m!20149 () Bool)

(assert (=> b!24967 m!20149))

(declare-fun m!20151 () Bool)

(assert (=> b!24975 m!20151))

(assert (=> b!24979 m!17032))

(declare-fun m!20153 () Bool)

(assert (=> b!24979 m!20153))

(assert (=> b!24979 m!17032))

(declare-fun m!20155 () Bool)

(assert (=> b!24979 m!20155))

(assert (=> b!24979 m!20113))

(declare-fun m!20157 () Bool)

(assert (=> b!24979 m!20157))

(assert (=> b!24979 m!20153))

(assert (=> b!24979 m!20113))

(assert (=> d!4741 m!16948))

(assert (=> d!4079 d!4741))

(declare-fun d!4743 () Bool)

(declare-fun e!16145 () Bool)

(assert (=> d!4743 e!16145))

(declare-fun res!15139 () Bool)

(assert (=> d!4743 (=> (not res!15139) (not e!16145))))

(assert (=> d!4743 (= res!15139 (and (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9640 () Unit!514)

(assert (=> d!4743 (= lt!9640 (choose!41 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) lt!8675 lt!8659))))

(assert (=> d!4743 (bvslt (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b01111111111111111111111111111111)))

(assert (=> d!4743 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) lt!8675 lt!8659) lt!9640)))

(declare-fun b!24984 () Bool)

(assert (=> b!24984 (= e!16145 (arrayNoDuplicates!0 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!8675 lt!8659))))

(assert (= (and d!4743 res!15139) b!24984))

(declare-fun m!20159 () Bool)

(assert (=> d!4743 m!20159))

(assert (=> b!24984 m!17401))

(assert (=> b!24984 m!17389))

(assert (=> d!4079 d!4743))

(assert (=> d!4079 d!4093))

(declare-fun d!4745 () Bool)

(assert (=> d!4745 (arrayContainsKey!0 lt!8657 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000)))

(declare-fun lt!9641 () Unit!514)

(assert (=> d!4745 (= lt!9641 (choose!13 lt!8657 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))))))

(assert (=> d!4745 (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000)))

(assert (=> d!4745 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8657 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255))) lt!9641)))

(declare-fun bs!1042 () Bool)

(assert (= bs!1042 d!4745))

(assert (=> bs!1042 m!17397))

(declare-fun m!20161 () Bool)

(assert (=> bs!1042 m!20161))

(assert (=> d!4079 d!4745))

(declare-fun d!4747 () Bool)

(declare-fun e!16146 () Bool)

(assert (=> d!4747 e!16146))

(declare-fun res!15140 () Bool)

(assert (=> d!4747 (=> (not res!15140) (not e!16146))))

(assert (=> d!4747 (= res!15140 (and (bvsge (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) #b00000000000000000000000000000000) (bvslt (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(declare-fun lt!9642 () Unit!514)

(assert (=> d!4747 (= lt!9642 (choose!102 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4747 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4747 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9642)))

(declare-fun b!24985 () Bool)

(assert (=> b!24985 (= e!16146 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1278 (store (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (ite c!2991 (index!2360 lt!8255) (index!2357 lt!8255)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (= (and d!4747 res!15140) b!24985))

(declare-fun m!20163 () Bool)

(assert (=> d!4747 m!20163))

(assert (=> d!4747 m!16948))

(assert (=> b!24985 m!17401))

(assert (=> b!24985 m!17381))

(assert (=> d!4079 d!4747))

(declare-fun b!24986 () Bool)

(declare-fun e!16148 () Bool)

(assert (=> b!24986 (= e!16148 (contains!222 Nil!563 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun b!24987 () Bool)

(declare-fun e!16147 () Bool)

(declare-fun e!16150 () Bool)

(assert (=> b!24987 (= e!16147 e!16150)))

(declare-fun res!15143 () Bool)

(assert (=> b!24987 (=> (not res!15143) (not e!16150))))

(assert (=> b!24987 (= res!15143 (not e!16148))))

(declare-fun res!15142 () Bool)

(assert (=> b!24987 (=> (not res!15142) (not e!16148))))

(assert (=> b!24987 (= res!15142 (validKeyInArray!0 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun b!24989 () Bool)

(declare-fun e!16149 () Bool)

(assert (=> b!24989 (= e!16150 e!16149)))

(declare-fun c!3435 () Bool)

(assert (=> b!24989 (= c!3435 (validKeyInArray!0 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun bm!2211 () Bool)

(declare-fun call!2214 () Bool)

(assert (=> bm!2211 (= call!2214 (arrayNoDuplicates!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3435 (Cons!562 (select (arr!604 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000) Nil!563) Nil!563)))))

(declare-fun b!24990 () Bool)

(assert (=> b!24990 (= e!16149 call!2214)))

(declare-fun b!24988 () Bool)

(assert (=> b!24988 (= e!16149 call!2214)))

(declare-fun d!4749 () Bool)

(declare-fun res!15141 () Bool)

(assert (=> d!4749 (=> res!15141 e!16147)))

(assert (=> d!4749 (= res!15141 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4749 (= (arrayNoDuplicates!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 Nil!563) e!16147)))

(assert (= (and d!4749 (not res!15141)) b!24987))

(assert (= (and b!24987 res!15142) b!24986))

(assert (= (and b!24987 res!15143) b!24989))

(assert (= (and b!24989 c!3435) b!24990))

(assert (= (and b!24989 (not c!3435)) b!24988))

(assert (= (or b!24990 b!24988) bm!2211))

(assert (=> b!24986 m!17871))

(assert (=> b!24986 m!17871))

(declare-fun m!20165 () Bool)

(assert (=> b!24986 m!20165))

(assert (=> b!24987 m!17871))

(assert (=> b!24987 m!17871))

(assert (=> b!24987 m!17881))

(assert (=> b!24989 m!17871))

(assert (=> b!24989 m!17871))

(assert (=> b!24989 m!17881))

(assert (=> bm!2211 m!17871))

(declare-fun m!20167 () Bool)

(assert (=> bm!2211 m!20167))

(assert (=> b!23571 d!4749))

(declare-fun d!4751 () Bool)

(declare-fun lt!9643 () Bool)

(assert (=> d!4751 (= lt!9643 (select (content!16 (toList!292 lt!8465)) (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun e!16152 () Bool)

(assert (=> d!4751 (= lt!9643 e!16152)))

(declare-fun res!15145 () Bool)

(assert (=> d!4751 (=> (not res!15145) (not e!16152))))

(assert (=> d!4751 (= res!15145 ((_ is Cons!561) (toList!292 lt!8465)))))

(assert (=> d!4751 (= (contains!221 (toList!292 lt!8465) (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9643)))

(declare-fun b!24991 () Bool)

(declare-fun e!16151 () Bool)

(assert (=> b!24991 (= e!16152 e!16151)))

(declare-fun res!15144 () Bool)

(assert (=> b!24991 (=> res!15144 e!16151)))

(assert (=> b!24991 (= res!15144 (= (h!1127 (toList!292 lt!8465)) (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24992 () Bool)

(assert (=> b!24992 (= e!16151 (contains!221 (t!3238 (toList!292 lt!8465)) (ite c!3011 (ite c!3015 (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4751 res!15145) b!24991))

(assert (= (and b!24991 (not res!15144)) b!24992))

(declare-fun m!20169 () Bool)

(assert (=> d!4751 m!20169))

(declare-fun m!20171 () Bool)

(assert (=> d!4751 m!20171))

(declare-fun m!20173 () Bool)

(assert (=> b!24992 m!20173))

(assert (=> b!23533 d!4751))

(declare-fun b!24993 () Bool)

(declare-fun e!16153 () Bool)

(declare-fun call!2215 () Bool)

(assert (=> b!24993 (= e!16153 call!2215)))

(declare-fun b!24994 () Bool)

(declare-fun e!16154 () Bool)

(assert (=> b!24994 (= e!16154 e!16153)))

(declare-fun lt!9644 () (_ BitVec 64))

(assert (=> b!24994 (= lt!9644 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000))))

(declare-fun lt!9645 () Unit!514)

(assert (=> b!24994 (= lt!9645 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (_2!476 lt!8264)) lt!9644 #b00000000000000000000000000000000))))

(assert (=> b!24994 (arrayContainsKey!0 (_keys!3164 (_2!476 lt!8264)) lt!9644 #b00000000000000000000000000000000)))

(declare-fun lt!9646 () Unit!514)

(assert (=> b!24994 (= lt!9646 lt!9645)))

(declare-fun res!15146 () Bool)

(assert (=> b!24994 (= res!15146 (= (seekEntryOrOpen!0 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000) (_keys!3164 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264))) (Found!59 #b00000000000000000000000000000000)))))

(assert (=> b!24994 (=> (not res!15146) (not e!16153))))

(declare-fun b!24995 () Bool)

(assert (=> b!24995 (= e!16154 call!2215)))

(declare-fun d!4753 () Bool)

(declare-fun res!15147 () Bool)

(declare-fun e!16155 () Bool)

(assert (=> d!4753 (=> res!15147 e!16155)))

(assert (=> d!4753 (= res!15147 (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8264)))))))

(assert (=> d!4753 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264))) e!16155)))

(declare-fun bm!2212 () Bool)

(assert (=> bm!2212 (= call!2215 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (_2!476 lt!8264)) (mask!4730 (_2!476 lt!8264))))))

(declare-fun b!24996 () Bool)

(assert (=> b!24996 (= e!16155 e!16154)))

(declare-fun c!3436 () Bool)

(assert (=> b!24996 (= c!3436 (validKeyInArray!0 (select (arr!604 (_keys!3164 (_2!476 lt!8264))) #b00000000000000000000000000000000)))))

(assert (= (and d!4753 (not res!15147)) b!24996))

(assert (= (and b!24996 c!3436) b!24994))

(assert (= (and b!24996 (not c!3436)) b!24995))

(assert (= (and b!24994 res!15146) b!24993))

(assert (= (or b!24993 b!24995) bm!2212))

(assert (=> b!24994 m!17857))

(declare-fun m!20175 () Bool)

(assert (=> b!24994 m!20175))

(declare-fun m!20177 () Bool)

(assert (=> b!24994 m!20177))

(assert (=> b!24994 m!17857))

(declare-fun m!20179 () Bool)

(assert (=> b!24994 m!20179))

(declare-fun m!20181 () Bool)

(assert (=> bm!2212 m!20181))

(assert (=> b!24996 m!17857))

(assert (=> b!24996 m!17857))

(assert (=> b!24996 m!17859))

(assert (=> b!23746 d!4753))

(declare-fun d!4755 () Bool)

(declare-fun res!15148 () Bool)

(declare-fun e!16156 () Bool)

(assert (=> d!4755 (=> res!15148 e!16156)))

(assert (=> d!4755 (= res!15148 (and ((_ is Cons!561) (toList!292 e!15191)) (= (_1!480 (h!1127 (toList!292 e!15191))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4755 (= (containsKey!25 (toList!292 e!15191) #b0000000000000000000000000000000000000000000000000000000000000000) e!16156)))

(declare-fun b!24997 () Bool)

(declare-fun e!16157 () Bool)

(assert (=> b!24997 (= e!16156 e!16157)))

(declare-fun res!15149 () Bool)

(assert (=> b!24997 (=> (not res!15149) (not e!16157))))

(assert (=> b!24997 (= res!15149 (and (or (not ((_ is Cons!561) (toList!292 e!15191))) (bvsle (_1!480 (h!1127 (toList!292 e!15191))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!561) (toList!292 e!15191)) (bvslt (_1!480 (h!1127 (toList!292 e!15191))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24998 () Bool)

(assert (=> b!24998 (= e!16157 (containsKey!25 (t!3238 (toList!292 e!15191)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4755 (not res!15148)) b!24997))

(assert (= (and b!24997 res!15149) b!24998))

(declare-fun m!20183 () Bool)

(assert (=> b!24998 m!20183))

(assert (=> d!4009 d!4755))

(declare-fun d!4757 () Bool)

(declare-fun e!16158 () Bool)

(assert (=> d!4757 e!16158))

(declare-fun res!15150 () Bool)

(assert (=> d!4757 (=> (not res!15150) (not e!16158))))

(declare-fun lt!9647 () ListLongMap!553)

(assert (=> d!4757 (= res!15150 (contains!220 lt!9647 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9650 () List!565)

(assert (=> d!4757 (= lt!9647 (ListLongMap!554 lt!9650))))

(declare-fun lt!9648 () Unit!514)

(declare-fun lt!9649 () Unit!514)

(assert (=> d!4757 (= lt!9648 lt!9649)))

(assert (=> d!4757 (= (getValueByKey!61 lt!9650 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4757 (= lt!9649 (lemmaContainsTupThenGetReturnValue!18 lt!9650 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4757 (= lt!9650 (insertStrictlySorted!18 (toList!292 call!2032) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(assert (=> d!4757 (= (+!45 call!2032 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))) lt!9647)))

(declare-fun b!24999 () Bool)

(declare-fun res!15151 () Bool)

(assert (=> b!24999 (=> (not res!15151) (not e!16158))))

(assert (=> b!24999 (= res!15151 (= (getValueByKey!61 (toList!292 lt!9647) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))))

(declare-fun b!25000 () Bool)

(assert (=> b!25000 (= e!16158 (contains!221 (toList!292 lt!9647) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2997 (ite c!3001 (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))))

(assert (= (and d!4757 res!15150) b!24999))

(assert (= (and b!24999 res!15151) b!25000))

(declare-fun m!20185 () Bool)

(assert (=> d!4757 m!20185))

(declare-fun m!20187 () Bool)

(assert (=> d!4757 m!20187))

(declare-fun m!20189 () Bool)

(assert (=> d!4757 m!20189))

(declare-fun m!20191 () Bool)

(assert (=> d!4757 m!20191))

(declare-fun m!20193 () Bool)

(assert (=> b!24999 m!20193))

(declare-fun m!20195 () Bool)

(assert (=> b!25000 m!20195))

(assert (=> b!23798 d!4757))

(declare-fun d!4759 () Bool)

(assert (=> d!4759 (isDefined!23 (getValueByKey!61 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(declare-fun lt!9651 () Unit!514)

(assert (=> d!4759 (= lt!9651 (choose!217 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(declare-fun e!16159 () Bool)

(assert (=> d!4759 e!16159))

(declare-fun res!15152 () Bool)

(assert (=> d!4759 (=> (not res!15152) (not e!16159))))

(assert (=> d!4759 (= res!15152 (isStrictlySorted!168 (toList!292 call!1946)))))

(assert (=> d!4759 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))) lt!9651)))

(declare-fun b!25001 () Bool)

(assert (=> b!25001 (= e!16159 (containsKey!25 (toList!292 call!1946) (select (arr!604 (_keys!3164 lt!8162)) (index!2358 lt!8282))))))

(assert (= (and d!4759 res!15152) b!25001))

(assert (=> d!4759 m!16874))

(assert (=> d!4759 m!17066))

(assert (=> d!4759 m!17066))

(assert (=> d!4759 m!17068))

(assert (=> d!4759 m!16874))

(declare-fun m!20197 () Bool)

(assert (=> d!4759 m!20197))

(declare-fun m!20199 () Bool)

(assert (=> d!4759 m!20199))

(assert (=> b!25001 m!16874))

(assert (=> b!25001 m!17062))

(assert (=> b!23546 d!4759))

(assert (=> b!23546 d!4561))

(assert (=> b!23546 d!4563))

(assert (=> b!23538 d!4005))

(declare-fun d!4761 () Bool)

(assert (=> d!4761 (= (apply!29 lt!8563 (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!292 lt!8563) (select (arr!604 (_keys!3164 lt!8162)) #b00000000000000000000000000000000))))))

(declare-fun bs!1043 () Bool)

(assert (= bs!1043 d!4761))

(assert (=> bs!1043 m!17154))

(assert (=> bs!1043 m!18685))

(assert (=> bs!1043 m!18685))

(declare-fun m!20201 () Bool)

(assert (=> bs!1043 m!20201))

(assert (=> b!23651 d!4761))

(declare-fun c!3437 () Bool)

(declare-fun d!4763 () Bool)

(assert (=> d!4763 (= c!3437 ((_ is ValueCellFull!312) (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000)))))

(declare-fun e!16160 () V!1189)

(assert (=> d!4763 (= (get!390 (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)) e!16160)))

(declare-fun b!25002 () Bool)

(assert (=> b!25002 (= e!16160 (get!392 (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!25003 () Bool)

(assert (=> b!25003 (= e!16160 (get!393 (select (arr!603 (ite c!3011 (_values!1729 lt!8162) lt!8288)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8162) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4763 c!3437) b!25002))

(assert (= (and d!4763 (not c!3437)) b!25003))

(assert (=> b!25002 m!17342))

(assert (=> b!25002 m!17194))

(declare-fun m!20203 () Bool)

(assert (=> b!25002 m!20203))

(assert (=> b!25003 m!17342))

(assert (=> b!25003 m!17194))

(declare-fun m!20205 () Bool)

(assert (=> b!25003 m!20205))

(assert (=> b!23651 d!4763))

(assert (=> b!23724 d!4123))

(declare-fun d!4765 () Bool)

(declare-fun res!15153 () Bool)

(declare-fun e!16161 () Bool)

(assert (=> d!4765 (=> (not res!15153) (not e!16161))))

(assert (=> d!4765 (= res!15153 (simpleValid!19 (_2!476 lt!8764)))))

(assert (=> d!4765 (= (valid!109 (_2!476 lt!8764)) e!16161)))

(declare-fun b!25004 () Bool)

(declare-fun res!15154 () Bool)

(assert (=> b!25004 (=> (not res!15154) (not e!16161))))

(assert (=> b!25004 (= res!15154 (= (arrayCountValidKeys!0 (_keys!3164 (_2!476 lt!8764)) #b00000000000000000000000000000000 (size!700 (_keys!3164 (_2!476 lt!8764)))) (_size!150 (_2!476 lt!8764))))))

(declare-fun b!25005 () Bool)

(declare-fun res!15155 () Bool)

(assert (=> b!25005 (=> (not res!15155) (not e!16161))))

(assert (=> b!25005 (= res!15155 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!476 lt!8764)) (mask!4730 (_2!476 lt!8764))))))

(declare-fun b!25006 () Bool)

(assert (=> b!25006 (= e!16161 (arrayNoDuplicates!0 (_keys!3164 (_2!476 lt!8764)) #b00000000000000000000000000000000 Nil!563))))

(assert (= (and d!4765 res!15153) b!25004))

(assert (= (and b!25004 res!15154) b!25005))

(assert (= (and b!25005 res!15155) b!25006))

(declare-fun m!20207 () Bool)

(assert (=> d!4765 m!20207))

(declare-fun m!20209 () Bool)

(assert (=> b!25004 m!20209))

(declare-fun m!20211 () Bool)

(assert (=> b!25005 m!20211))

(declare-fun m!20213 () Bool)

(assert (=> b!25006 m!20213))

(assert (=> b!23859 d!4765))

(declare-fun d!4767 () Bool)

(declare-fun res!15156 () Bool)

(declare-fun e!16162 () Bool)

(assert (=> d!4767 (=> res!15156 e!16162)))

(assert (=> d!4767 (= res!15156 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4767 (= (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!16162)))

(declare-fun b!25007 () Bool)

(declare-fun e!16163 () Bool)

(assert (=> b!25007 (= e!16162 e!16163)))

(declare-fun res!15157 () Bool)

(assert (=> b!25007 (=> (not res!15157) (not e!16163))))

(assert (=> b!25007 (= res!15157 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!25008 () Bool)

(assert (=> b!25008 (= e!16163 (arrayContainsKey!0 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4767 (not res!15156)) b!25007))

(assert (= (and b!25007 res!15157) b!25008))

(declare-fun m!20215 () Bool)

(assert (=> d!4767 m!20215))

(declare-fun m!20217 () Bool)

(assert (=> b!25008 m!20217))

(assert (=> b!23773 d!4767))

(declare-fun b!25009 () Bool)

(declare-fun e!16168 () ListLongMap!553)

(declare-fun call!2222 () ListLongMap!553)

(assert (=> b!25009 (= e!16168 call!2222)))

(declare-fun b!25010 () Bool)

(declare-fun res!15166 () Bool)

(declare-fun e!16171 () Bool)

(assert (=> b!25010 (=> (not res!15166) (not e!16171))))

(declare-fun e!16166 () Bool)

(assert (=> b!25010 (= res!15166 e!16166)))

(declare-fun c!3438 () Bool)

(assert (=> b!25010 (= c!3438 (not (= (bvand lt!8259 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!25011 () Bool)

(declare-fun e!16165 () Bool)

(declare-fun e!16173 () Bool)

(assert (=> b!25011 (= e!16165 e!16173)))

(declare-fun res!15162 () Bool)

(assert (=> b!25011 (=> (not res!15162) (not e!16173))))

(declare-fun lt!9661 () ListLongMap!553)

(assert (=> b!25011 (= res!15162 (contains!220 lt!9661 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (=> b!25011 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!25012 () Bool)

(declare-fun e!16164 () Bool)

(declare-fun e!16172 () Bool)

(assert (=> b!25012 (= e!16164 e!16172)))

(declare-fun res!15165 () Bool)

(declare-fun call!2218 () Bool)

(assert (=> b!25012 (= res!15165 call!2218)))

(assert (=> b!25012 (=> (not res!15165) (not e!16172))))

(declare-fun b!25013 () Bool)

(declare-fun e!16176 () Unit!514)

(declare-fun lt!9652 () Unit!514)

(assert (=> b!25013 (= e!16176 lt!9652)))

(declare-fun lt!9657 () ListLongMap!553)

(assert (=> b!25013 (= lt!9657 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9668 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9668 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9669 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9669 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9672 () Unit!514)

(assert (=> b!25013 (= lt!9672 (addStillContains!14 lt!9657 lt!9668 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9669))))

(assert (=> b!25013 (contains!220 (+!45 lt!9657 (tuple2!947 lt!9668 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9669)))

(declare-fun lt!9666 () Unit!514)

(assert (=> b!25013 (= lt!9666 lt!9672)))

(declare-fun lt!9659 () ListLongMap!553)

(assert (=> b!25013 (= lt!9659 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9655 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9655 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9662 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9662 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9665 () Unit!514)

(assert (=> b!25013 (= lt!9665 (addApplyDifferent!14 lt!9659 lt!9655 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9662))))

(assert (=> b!25013 (= (apply!29 (+!45 lt!9659 (tuple2!947 lt!9655 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9662) (apply!29 lt!9659 lt!9662))))

(declare-fun lt!9656 () Unit!514)

(assert (=> b!25013 (= lt!9656 lt!9665)))

(declare-fun lt!9660 () ListLongMap!553)

(assert (=> b!25013 (= lt!9660 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9663 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9663 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9658 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9658 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(declare-fun lt!9664 () Unit!514)

(assert (=> b!25013 (= lt!9664 (addApplyDifferent!14 lt!9660 lt!9663 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!9658))))

(assert (=> b!25013 (= (apply!29 (+!45 lt!9660 (tuple2!947 lt!9663 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)))) lt!9658) (apply!29 lt!9660 lt!9658))))

(declare-fun lt!9673 () Unit!514)

(assert (=> b!25013 (= lt!9673 lt!9664)))

(declare-fun lt!9667 () ListLongMap!553)

(assert (=> b!25013 (= lt!9667 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun lt!9653 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9653 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9671 () (_ BitVec 64))

(assert (=> b!25013 (= lt!9671 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))

(assert (=> b!25013 (= lt!9652 (addApplyDifferent!14 lt!9667 lt!9653 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9671))))

(assert (=> b!25013 (= (apply!29 (+!45 lt!9667 (tuple2!947 lt!9653 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9671) (apply!29 lt!9667 lt!9671))))

(declare-fun call!2221 () ListLongMap!553)

(declare-fun bm!2214 () Bool)

(assert (=> bm!2214 (= call!2221 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!25014 () Bool)

(declare-fun call!2219 () Bool)

(assert (=> b!25014 (= e!16166 (not call!2219))))

(declare-fun bm!2215 () Bool)

(declare-fun call!2216 () ListLongMap!553)

(declare-fun call!2220 () ListLongMap!553)

(assert (=> bm!2215 (= call!2216 call!2220)))

(declare-fun bm!2216 () Bool)

(declare-fun call!2217 () ListLongMap!553)

(declare-fun c!3441 () Bool)

(declare-fun c!3442 () Bool)

(assert (=> bm!2216 (= call!2220 (+!45 (ite c!3441 call!2221 (ite c!3442 call!2217 call!2222)) (ite (or c!3441 c!3442) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!25015 () Bool)

(declare-fun Unit!596 () Unit!514)

(assert (=> b!25015 (= e!16176 Unit!596)))

(declare-fun b!25016 () Bool)

(assert (=> b!25016 (= e!16164 (not call!2218))))

(declare-fun b!25017 () Bool)

(declare-fun c!3439 () Bool)

(assert (=> b!25017 (= c!3439 (and (not (= (bvand lt!8259 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8259 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!16174 () ListLongMap!553)

(assert (=> b!25017 (= e!16174 e!16168)))

(declare-fun b!25018 () Bool)

(declare-fun e!16170 () ListLongMap!553)

(assert (=> b!25018 (= e!16170 e!16174)))

(assert (=> b!25018 (= c!3442 (and (not (= (bvand lt!8259 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8259 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2217 () Bool)

(assert (=> bm!2217 (= call!2222 call!2217)))

(declare-fun b!25019 () Bool)

(assert (=> b!25019 (= e!16172 (= (apply!29 lt!9661 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun bm!2218 () Bool)

(assert (=> bm!2218 (= call!2217 call!2221)))

(declare-fun b!25020 () Bool)

(declare-fun e!16175 () Bool)

(assert (=> b!25020 (= e!16166 e!16175)))

(declare-fun res!15164 () Bool)

(assert (=> b!25020 (= res!15164 call!2219)))

(assert (=> b!25020 (=> (not res!15164) (not e!16175))))

(declare-fun d!4769 () Bool)

(assert (=> d!4769 e!16171))

(declare-fun res!15160 () Bool)

(assert (=> d!4769 (=> (not res!15160) (not e!16171))))

(assert (=> d!4769 (= res!15160 (or (bvsge #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))))

(declare-fun lt!9670 () ListLongMap!553)

(assert (=> d!4769 (= lt!9661 lt!9670)))

(declare-fun lt!9654 () Unit!514)

(assert (=> d!4769 (= lt!9654 e!16176)))

(declare-fun c!3443 () Bool)

(declare-fun e!16169 () Bool)

(assert (=> d!4769 (= c!3443 e!16169)))

(declare-fun res!15161 () Bool)

(assert (=> d!4769 (=> (not res!15161) (not e!16169))))

(assert (=> d!4769 (= res!15161 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> d!4769 (= lt!9670 e!16170)))

(assert (=> d!4769 (= c!3441 (and (not (= (bvand lt!8259 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8259 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4769 (validMask!0 (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)))))

(assert (=> d!4769 (= (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) lt!9661)))

(declare-fun bm!2213 () Bool)

(assert (=> bm!2213 (= call!2219 (contains!220 lt!9661 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2219 () Bool)

(assert (=> bm!2219 (= call!2218 (contains!220 lt!9661 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!25021 () Bool)

(assert (=> b!25021 (= e!16175 (= (apply!29 lt!9661 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!25022 () Bool)

(declare-fun res!15159 () Bool)

(assert (=> b!25022 (=> (not res!15159) (not e!16171))))

(assert (=> b!25022 (= res!15159 e!16165)))

(declare-fun res!15158 () Bool)

(assert (=> b!25022 (=> res!15158 e!16165)))

(declare-fun e!16167 () Bool)

(assert (=> b!25022 (= res!15158 (not e!16167))))

(declare-fun res!15163 () Bool)

(assert (=> b!25022 (=> (not res!15163) (not e!16167))))

(assert (=> b!25022 (= res!15163 (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!25023 () Bool)

(assert (=> b!25023 (= e!16169 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun b!25024 () Bool)

(assert (=> b!25024 (= e!16171 e!16164)))

(declare-fun c!3440 () Bool)

(assert (=> b!25024 (= c!3440 (not (= (bvand lt!8259 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!25025 () Bool)

(assert (=> b!25025 (= e!16173 (= (apply!29 lt!9661 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!390 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!25025 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!699 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(assert (=> b!25025 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!700 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)))))))

(declare-fun b!25026 () Bool)

(assert (=> b!25026 (= e!16168 call!2216)))

(declare-fun b!25027 () Bool)

(assert (=> b!25027 (= e!16170 (+!45 call!2220 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!25028 () Bool)

(assert (=> b!25028 (= e!16174 call!2216)))

(declare-fun b!25029 () Bool)

(assert (=> b!25029 (= e!16167 (validKeyInArray!0 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(assert (= (and d!4769 c!3441) b!25027))

(assert (= (and d!4769 (not c!3441)) b!25018))

(assert (= (and b!25018 c!3442) b!25028))

(assert (= (and b!25018 (not c!3442)) b!25017))

(assert (= (and b!25017 c!3439) b!25026))

(assert (= (and b!25017 (not c!3439)) b!25009))

(assert (= (or b!25026 b!25009) bm!2217))

(assert (= (or b!25028 bm!2217) bm!2218))

(assert (= (or b!25028 b!25026) bm!2215))

(assert (= (or b!25027 bm!2218) bm!2214))

(assert (= (or b!25027 bm!2215) bm!2216))

(assert (= (and d!4769 res!15161) b!25023))

(assert (= (and d!4769 c!3443) b!25013))

(assert (= (and d!4769 (not c!3443)) b!25015))

(assert (= (and d!4769 res!15160) b!25022))

(assert (= (and b!25022 res!15163) b!25029))

(assert (= (and b!25022 (not res!15158)) b!25011))

(assert (= (and b!25011 res!15162) b!25025))

(assert (= (and b!25022 res!15159) b!25010))

(assert (= (and b!25010 c!3438) b!25020))

(assert (= (and b!25010 (not c!3438)) b!25014))

(assert (= (and b!25020 res!15164) b!25021))

(assert (= (or b!25020 b!25014) bm!2213))

(assert (= (and b!25010 res!15166) b!25024))

(assert (= (and b!25024 c!3440) b!25012))

(assert (= (and b!25024 (not c!3440)) b!25016))

(assert (= (and b!25012 res!15165) b!25019))

(assert (= (or b!25012 b!25016) bm!2219))

(declare-fun b_lambda!1653 () Bool)

(assert (=> (not b_lambda!1653) (not b!25025)))

(assert (=> b!25025 t!3241))

(declare-fun b_and!1557 () Bool)

(assert (= b_and!1555 (and (=> t!3241 result!1101) b_and!1557)))

(declare-fun m!20219 () Bool)

(assert (=> bm!2213 m!20219))

(declare-fun m!20221 () Bool)

(assert (=> b!25019 m!20221))

(declare-fun m!20223 () Bool)

(assert (=> bm!2219 m!20223))

(declare-fun m!20225 () Bool)

(assert (=> bm!2216 m!20225))

(declare-fun m!20227 () Bool)

(assert (=> b!25027 m!20227))

(assert (=> b!25011 m!16992))

(assert (=> b!25011 m!16992))

(declare-fun m!20229 () Bool)

(assert (=> b!25011 m!20229))

(assert (=> b!25029 m!16992))

(assert (=> b!25029 m!16992))

(assert (=> b!25029 m!16996))

(assert (=> b!25023 m!16992))

(assert (=> b!25023 m!16992))

(assert (=> b!25023 m!16996))

(declare-fun m!20231 () Bool)

(assert (=> bm!2214 m!20231))

(declare-fun m!20233 () Bool)

(assert (=> b!25013 m!20233))

(declare-fun m!20235 () Bool)

(assert (=> b!25013 m!20235))

(declare-fun m!20237 () Bool)

(assert (=> b!25013 m!20237))

(declare-fun m!20239 () Bool)

(assert (=> b!25013 m!20239))

(assert (=> b!25013 m!20237))

(declare-fun m!20241 () Bool)

(assert (=> b!25013 m!20241))

(declare-fun m!20243 () Bool)

(assert (=> b!25013 m!20243))

(declare-fun m!20245 () Bool)

(assert (=> b!25013 m!20245))

(assert (=> b!25013 m!20231))

(declare-fun m!20247 () Bool)

(assert (=> b!25013 m!20247))

(declare-fun m!20249 () Bool)

(assert (=> b!25013 m!20249))

(declare-fun m!20251 () Bool)

(assert (=> b!25013 m!20251))

(declare-fun m!20253 () Bool)

(assert (=> b!25013 m!20253))

(declare-fun m!20255 () Bool)

(assert (=> b!25013 m!20255))

(assert (=> b!25013 m!20255))

(declare-fun m!20257 () Bool)

(assert (=> b!25013 m!20257))

(assert (=> b!25013 m!20245))

(declare-fun m!20259 () Bool)

(assert (=> b!25013 m!20259))

(assert (=> b!25013 m!16992))

(assert (=> b!25013 m!20253))

(declare-fun m!20261 () Bool)

(assert (=> b!25013 m!20261))

(declare-fun m!20263 () Bool)

(assert (=> b!25021 m!20263))

(assert (=> b!25025 m!17032))

(assert (=> b!25025 m!17260))

(assert (=> b!25025 m!17032))

(assert (=> b!25025 m!17262))

(assert (=> b!25025 m!16992))

(declare-fun m!20265 () Bool)

(assert (=> b!25025 m!20265))

(assert (=> b!25025 m!17260))

(assert (=> b!25025 m!16992))

(assert (=> d!4769 m!16948))

(assert (=> d!4083 d!4769))

(declare-fun d!4771 () Bool)

(declare-fun e!16177 () Bool)

(assert (=> d!4771 e!16177))

(declare-fun res!15167 () Bool)

(assert (=> d!4771 (=> (not res!15167) (not e!16177))))

(declare-fun lt!9674 () ListLongMap!553)

(assert (=> d!4771 (= res!15167 (contains!220 lt!9674 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!9677 () List!565)

(assert (=> d!4771 (= lt!9674 (ListLongMap!554 lt!9677))))

(declare-fun lt!9675 () Unit!514)

(declare-fun lt!9676 () Unit!514)

(assert (=> d!4771 (= lt!9675 lt!9676)))

(assert (=> d!4771 (= (getValueByKey!61 lt!9677 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4771 (= lt!9676 (lemmaContainsTupThenGetReturnValue!18 lt!9677 (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4771 (= lt!9677 (insertStrictlySorted!18 (toList!292 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4771 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9674)))

(declare-fun b!25030 () Bool)

(declare-fun res!15168 () Bool)

(assert (=> b!25030 (=> (not res!15168) (not e!16177))))

(assert (=> b!25030 (= res!15168 (= (getValueByKey!61 (toList!292 lt!9674) (_1!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!480 (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!25031 () Bool)

(assert (=> b!25031 (= e!16177 (contains!221 (toList!292 lt!9674) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4771 res!15167) b!25030))

(assert (= (and b!25030 res!15168) b!25031))

(declare-fun m!20267 () Bool)

(assert (=> d!4771 m!20267))

(declare-fun m!20269 () Bool)

(assert (=> d!4771 m!20269))

(declare-fun m!20271 () Bool)

(assert (=> d!4771 m!20271))

(declare-fun m!20273 () Bool)

(assert (=> d!4771 m!20273))

(declare-fun m!20275 () Bool)

(assert (=> b!25030 m!20275))

(declare-fun m!20277 () Bool)

(assert (=> b!25031 m!20277))

(assert (=> d!4083 d!4771))

(declare-fun d!4773 () Bool)

(assert (=> d!4773 (= (+!45 (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (getCurrentListMap!121 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) #b00000000000000000000000000000000 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4773 true))

(declare-fun _$8!40 () Unit!514)

(assert (=> d!4773 (= (choose!211 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) lt!8259 (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2949 (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) _$8!40)))

(declare-fun bs!1044 () Bool)

(assert (= bs!1044 d!4773))

(assert (=> bs!1044 m!16828))

(assert (=> bs!1044 m!16828))

(assert (=> bs!1044 m!17443))

(assert (=> bs!1044 m!17439))

(assert (=> d!4083 d!4773))

(assert (=> d!4083 d!4181))

(assert (=> d!4083 d!4053))

(assert (=> d!4089 d!4261))

(assert (=> d!4123 d!4007))

(declare-fun d!4775 () Bool)

(declare-fun e!16178 () Bool)

(assert (=> d!4775 e!16178))

(declare-fun res!15169 () Bool)

(assert (=> d!4775 (=> (not res!15169) (not e!16178))))

(declare-fun lt!9678 () SeekEntryResult!59)

(assert (=> d!4775 (= res!15169 ((_ is Found!59) lt!9678))))

(assert (=> d!4775 (= lt!9678 (seekEntryOrOpen!0 (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(assert (=> d!4775 true))

(declare-fun _$33!36 () Unit!514)

(assert (=> d!4775 (= (choose!212 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162)) (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162)) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162)) (extraKeys!1641 (ite c!2948 (_2!476 lt!8164) lt!8162)) (zeroValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (minValue!1666 (ite c!2948 (_2!476 lt!8164) lt!8162)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162))) _$33!36)))

(declare-fun b!25032 () Bool)

(declare-fun res!15170 () Bool)

(assert (=> b!25032 (=> (not res!15170) (not e!16178))))

(assert (=> b!25032 (= res!15170 (inRange!0 (index!2358 lt!9678) (mask!4730 (ite c!2948 (_2!476 lt!8164) lt!8162))))))

(declare-fun b!25033 () Bool)

(assert (=> b!25033 (= e!16178 (= (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) (index!2358 lt!9678)) (ite c!2948 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2949 #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4775 res!15169) b!25032))

(assert (= (and b!25032 res!15170) b!25033))

(assert (=> d!4775 m!16812))

(declare-fun m!20279 () Bool)

(assert (=> b!25032 m!20279))

(declare-fun m!20281 () Bool)

(assert (=> b!25033 m!20281))

(assert (=> d!4123 d!4775))

(assert (=> d!4123 d!4181))

(assert (=> bm!1992 d!4235))

(declare-fun d!4777 () Bool)

(declare-fun e!16179 () Bool)

(assert (=> d!4777 e!16179))

(declare-fun res!15171 () Bool)

(assert (=> d!4777 (=> (not res!15171) (not e!16179))))

(declare-fun lt!9679 () ListLongMap!553)

(assert (=> d!4777 (= res!15171 (contains!220 lt!9679 (_1!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(declare-fun lt!9682 () List!565)

(assert (=> d!4777 (= lt!9679 (ListLongMap!554 lt!9682))))

(declare-fun lt!9680 () Unit!514)

(declare-fun lt!9681 () Unit!514)

(assert (=> d!4777 (= lt!9680 lt!9681)))

(assert (=> d!4777 (= (getValueByKey!61 lt!9682 (_1!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))) (Some!66 (_2!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(assert (=> d!4777 (= lt!9681 (lemmaContainsTupThenGetReturnValue!18 lt!9682 (_1!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (_2!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(assert (=> d!4777 (= lt!9682 (insertStrictlySorted!18 (toList!292 (ite c!3112 call!2026 (ite c!3113 call!2022 call!2027))) (_1!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) (_2!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))))))

(assert (=> d!4777 (= (+!45 (ite c!3112 call!2026 (ite c!3113 call!2022 call!2027)) (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))) lt!9679)))

(declare-fun b!25034 () Bool)

(declare-fun res!15172 () Bool)

(assert (=> b!25034 (=> (not res!15172) (not e!16179))))

(assert (=> b!25034 (= res!15172 (= (getValueByKey!61 (toList!292 lt!9679) (_1!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162))))) (Some!66 (_2!480 (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))))

(declare-fun b!25035 () Bool)

(assert (=> b!25035 (= e!16179 (contains!221 (toList!292 lt!9679) (ite (or c!3112 c!3113) (tuple2!947 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8162)) (tuple2!947 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8162)))))))

(assert (= (and d!4777 res!15171) b!25034))

(assert (= (and b!25034 res!15172) b!25035))

(declare-fun m!20283 () Bool)

(assert (=> d!4777 m!20283))

(declare-fun m!20285 () Bool)

(assert (=> d!4777 m!20285))

(declare-fun m!20287 () Bool)

(assert (=> d!4777 m!20287))

(declare-fun m!20289 () Bool)

(assert (=> d!4777 m!20289))

(declare-fun m!20291 () Bool)

(assert (=> b!25034 m!20291))

(declare-fun m!20293 () Bool)

(assert (=> b!25035 m!20293))

(assert (=> bm!2021 d!4777))

(assert (=> b!23590 d!4251))

(declare-fun d!4779 () Bool)

(assert (=> d!4779 (= (apply!29 lt!8538 (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!292 lt!8538) (select (arr!604 (_keys!3164 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000))))))

(declare-fun bs!1045 () Bool)

(assert (= bs!1045 d!4779))

(assert (=> bs!1045 m!16992))

(assert (=> bs!1045 m!18725))

(assert (=> bs!1045 m!18725))

(declare-fun m!20295 () Bool)

(assert (=> bs!1045 m!20295))

(assert (=> b!23618 d!4779))

(declare-fun d!4781 () Bool)

(declare-fun c!3444 () Bool)

(assert (=> d!4781 (= c!3444 ((_ is ValueCellFull!312) (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000)))))

(declare-fun e!16180 () V!1189)

(assert (=> d!4781 (= (get!390 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!16180)))

(declare-fun b!25036 () Bool)

(assert (=> b!25036 (= e!16180 (get!392 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!25037 () Bool)

(assert (=> b!25037 (= e!16180 (get!393 (select (arr!603 (_values!1729 (ite c!2948 (_2!476 lt!8164) lt!8162))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4781 c!3444) b!25036))

(assert (= (and d!4781 (not c!3444)) b!25037))

(assert (=> b!25036 m!17260))

(assert (=> b!25036 m!17032))

(declare-fun m!20297 () Bool)

(assert (=> b!25036 m!20297))

(assert (=> b!25037 m!17260))

(assert (=> b!25037 m!17032))

(declare-fun m!20299 () Bool)

(assert (=> b!25037 m!20299))

(assert (=> b!23618 d!4781))

(declare-fun d!4783 () Bool)

(declare-fun lt!9683 () (_ BitVec 32))

(assert (=> d!4783 (and (or (bvslt lt!9683 #b00000000000000000000000000000000) (bvsge lt!9683 (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (and (bvsge lt!9683 #b00000000000000000000000000000000) (bvslt lt!9683 (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))) (bvsge lt!9683 #b00000000000000000000000000000000) (bvslt lt!9683 (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (= (select (arr!604 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) lt!9683) (_1!480 lt!8342)))))

(declare-fun e!16181 () (_ BitVec 32))

(assert (=> d!4783 (= lt!9683 e!16181)))

(declare-fun c!3445 () Bool)

(assert (=> d!4783 (= c!3445 (= (select (arr!604 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_1!480 lt!8342)))))

(assert (=> d!4783 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (bvslt (size!700 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) #b01111111111111111111111111111111))))

(assert (=> d!4783 (= (arrayScanForKey!0 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!480 lt!8342) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!9683)))

(declare-fun b!25038 () Bool)

(assert (=> b!25038 (= e!16181 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))

(declare-fun b!25039 () Bool)

(assert (=> b!25039 (= e!16181 (arrayScanForKey!0 (array!1278 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!28 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!480 lt!8342) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4783 c!3445) b!25038))

(assert (= (and d!4783 (not c!3445)) b!25039))

(declare-fun m!20301 () Bool)

(assert (=> d!4783 m!20301))

(declare-fun m!20303 () Bool)

(assert (=> d!4783 m!20303))

(declare-fun m!20305 () Bool)

(assert (=> b!25039 m!20305))

(assert (=> b!23545 d!4783))

(declare-fun condMapEmpty!1033 () Bool)

(declare-fun mapDefault!1033 () ValueCell!312)

(assert (=> mapNonEmpty!1032 (= condMapEmpty!1033 (= mapRest!1032 ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1033)))))

(declare-fun e!16183 () Bool)

(declare-fun mapRes!1033 () Bool)

(assert (=> mapNonEmpty!1032 (= tp!3534 (and e!16183 mapRes!1033))))

(declare-fun mapNonEmpty!1033 () Bool)

(declare-fun tp!3535 () Bool)

(declare-fun e!16182 () Bool)

(assert (=> mapNonEmpty!1033 (= mapRes!1033 (and tp!3535 e!16182))))

(declare-fun mapRest!1033 () (Array (_ BitVec 32) ValueCell!312))

(declare-fun mapKey!1033 () (_ BitVec 32))

(declare-fun mapValue!1033 () ValueCell!312)

(assert (=> mapNonEmpty!1033 (= mapRest!1032 (store mapRest!1033 mapKey!1033 mapValue!1033))))

(declare-fun mapIsEmpty!1033 () Bool)

(assert (=> mapIsEmpty!1033 mapRes!1033))

(declare-fun b!25041 () Bool)

(assert (=> b!25041 (= e!16183 tp_is_empty!1023)))

(declare-fun b!25040 () Bool)

(assert (=> b!25040 (= e!16182 tp_is_empty!1023)))

(assert (= (and mapNonEmpty!1032 condMapEmpty!1033) mapIsEmpty!1033))

(assert (= (and mapNonEmpty!1032 (not condMapEmpty!1033)) mapNonEmpty!1033))

(assert (= (and mapNonEmpty!1033 ((_ is ValueCellFull!312) mapValue!1033)) b!25040))

(assert (= (and mapNonEmpty!1032 ((_ is ValueCellFull!312) mapDefault!1033)) b!25041))

(declare-fun m!20307 () Bool)

(assert (=> mapNonEmpty!1033 m!20307))

(declare-fun b_lambda!1655 () Bool)

(assert (= b_lambda!1591 (or (and b!23168 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) b_lambda!1655)))

(declare-fun b_lambda!1657 () Bool)

(assert (= b_lambda!1593 (or (and b!23168 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162))) b_lambda!1657)))

(declare-fun b_lambda!1659 () Bool)

(assert (= b_lambda!1595 (or (and b!23168 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162))) b_lambda!1659)))

(declare-fun b_lambda!1661 () Bool)

(assert (= b_lambda!1589 (or (and b!23168 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8162))) b_lambda!1661)))

(declare-fun b_lambda!1663 () Bool)

(assert (= b_lambda!1597 (or (and b!23168 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) b_lambda!1663)))

(declare-fun b_lambda!1665 () Bool)

(assert (= b_lambda!1587 (or (and b!23168 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (ite c!2948 (_2!476 lt!8164) lt!8162)))) b_lambda!1665)))

(check-sat (not b_lambda!1629) (not b!24158) (not b_lambda!1633) (not b!24838) (not b!24882) (not d!4229) (not b!24654) (not b!24369) (not d!4281) (not b!24746) (not d!4693) (not b!24094) (not d!4509) (not b!24591) (not b!24925) (not b!24063) (not b!24812) (not b!24821) (not b!24958) (not d!4497) (not b!24533) (not b!24965) (not b!24813) (not d!4219) (not d!4629) (not d!4659) (not b!24994) (not d!4567) (not b!24571) (not bm!2064) (not b!24738) (not b!24074) (not d!4149) (not b!24512) (not b!24035) (not d!4267) (not d!4489) (not b!24518) (not b!24743) (not b!24904) (not b!24581) (not b!24834) (not d!4339) (not d!4389) (not b!25032) (not b_lambda!1585) (not d!4721) (not b!24575) (not d!4575) (not b!24372) (not d!4751) (not bm!2067) (not b!23943) (not d!4293) (not d!4559) (not b!24446) (not b!24327) (not b!24320) (not d!4667) (not bm!2069) (not d!4427) (not b!24739) (not b!24225) (not b!24749) (not d!4271) (not b!24129) (not b!24996) (not b!24523) (not b!24452) (not d!4129) (not b!24433) (not b!24487) (not d!4651) (not bm!2172) (not b!25008) (not b!24271) (not b!24303) (not b!24909) (not bm!2073) (not b!24740) (not bm!2097) (not d!4457) (not d!4213) (not bm!2213) (not b_lambda!1655) (not b!24227) (not b!24948) (not b!24040) (not bm!2204) (not d!4583) (not d!4499) (not d!4155) (not b_lambda!1583) (not d!4135) (not d!4379) (not b!24289) (not b!24691) (not b!24530) (not d!4661) (not d!4493) (not b!24115) (not b!24956) (not b!24545) (not b!24727) (not b!25027) (not d!4477) (not b_next!759) (not b!24412) (not b!24560) (not b_lambda!1605) (not d!4745) (not b!24998) (not d!4177) (not b!24365) (not b!24702) (not bm!2110) (not b!24238) (not bm!2063) (not d!4283) (not b!24031) (not b_lambda!1635) (not d!4239) (not b!24173) (not bm!2134) (not b!24456) (not d!4643) (not b!25019) (not d!4519) (not b!24371) (not b!24355) (not b!23932) (not d!4263) (not b!24859) (not b!24808) (not d!4305) (not b!24677) (not b!24061) (not b!25029) (not b!24912) (not b!24554) (not b!24393) (not b!24891) (not b!24152) (not d!4413) (not b!24659) (not b!24262) (not bm!2179) (not d!4677) (not d!4657) (not b!25035) (not b!24281) (not b!24842) (not d!4571) (not bm!2145) (not b!24777) (not bm!2126) (not b_lambda!1665) (not b!24619) (not bm!2059) (not b!24977) (not d!4459) (not bm!2099) (not b!24737) (not d!4605) (not d!4395) (not d!4409) (not bm!2205) (not b!24075) (not d!4561) (not bm!2196) (not d!4147) (not b!24914) (not b!24633) (not bm!2116) (not d!4533) (not b!24122) (not b!24954) (not b!24273) (not d!4705) (not bm!2143) (not d!4199) (not b!24775) (not bm!2095) (not d!4445) (not b!24231) (not b!23916) (not d!4757) (not b!24324) (not b!24563) (not b!24606) (not b!23931) (not b!24635) (not d!4543) (not d!4703) (not b!24667) (not d!4613) (not bm!2212) (not b!24616) (not b!24819) (not d!4137) (not b!23935) (not d!4205) (not d!4355) (not b!24906) (not d!4581) (not d!4165) (not d!4517) (not d!4453) (not bm!2056) (not d!4235) (not b!24466) (not d!4527) (not b!24185) (not b!25025) (not b!24248) (not d!4407) (not d!4715) (not b!24892) (not b!24111) (not d!4653) (not b!24507) (not b!24120) (not b!24685) (not b!23971) (not b!24361) (not b!25011) (not b!24816) (not d!4737) (not b!25031) (not d!4297) (not b!24960) (not b!24347) (not b!24671) (not d!4635) (not b!24338) (not bm!2195) (not b!24237) (not b!24862) (not d!4417) (not b!24042) (not bm!2122) (not b!24279) (not bm!2098) (not b!24880) (not d!4249) (not d!4465) (not b!24699) (not d!4145) (not d!4167) (not b!24304) (not d!4299) (not d!4345) (not b!24959) (not d!4125) (not b!24674) (not b!24224) (not bm!2189) (not b!24625) (not d!4437) (not d!4381) (not b!24920) (not b_lambda!1609) (not bm!2198) (not b!24690) (not bm!2088) (not b!24806) (not b!24219) (not d!4133) (not d!4569) (not b!24454) (not b!24073) (not b!24245) (not b!23938) (not b!24661) (not b!24498) (not bm!2167) (not bm!2214) (not d!4771) (not b!24754) (not d!4401) (not d!4725) (not bm!2061) (not d!4289) (not bm!2127) (not b!24325) (not d!4557) (not b!23929) (not d!4449) (not bm!2057) (not b!25001) (not d!4397) (not b!24077) (not b!24962) (not b!24565) (not b!23936) (not b!24414) (not b!24244) (not b!24065) (not d!4523) (not b!24482) (not d!4729) (not d!4243) (not b!24758) (not b!24300) (not d!4739) (not b!24496) (not bm!2151) (not b!24104) (not b!24805) (not b!24218) (not d!4587) (not b!24665) (not b!24747) (not d!4311) (not b!24164) (not d!4707) (not d!4627) (not b!24573) (not bm!2113) (not b!24095) (not b!24640) (not b!24421) (not d!4315) (not b!24921) (not b!25000) (not b!24596) (not b!25002) (not b_lambda!1619) (not b!24055) (not d!4697) (not d!4211) (not d!4491) (not d!4717) (not b!24070) (not d!4371) (not b!24114) (not b_lambda!1613) (not b!24330) (not b!24292) (not bm!2130) (not d!4291) (not b!24295) (not bm!2115) (not b!24984) (not bm!2210) (not d!4615) (not b!24836) (not b!24385) (not b!23930) (not bm!2150) (not b!24467) (not b!24940) (not d!4773) (not b!24395) (not bm!2135) (not d!4301) (not bm!2101) (not bm!2141) (not d!4391) (not d!4325) (not b!24290) (not d!4151) (not b_lambda!1647) (not d!4217) (not bm!2154) (not b!24175) (not b!24657) (not b!24509) (not b!24935) (not d!4769) (not b!24460) (not b!24541) (not b!24521) (not bm!2216) (not b!24477) (not d!4143) (not d!4343) (not b!24334) (not d!4599) (not bm!2157) (not b!24626) (not bm!2107) (not b!24669) (not bm!2171) (not b!24519) (not d!4141) (not d!4525) (not d!4595) (not b!24243) (not d!4607) (not b!24311) (not b!24341) (not d!4475) (not b!24697) (not d!4709) (not b!24715) (not b!24875) (not d!4639) (not bm!2190) (not b!24342) (not bm!2161) (not b!24032) (not b!24999) (not b!24444) (not d!4419) (not b!24710) (not b!24707) (not b!24285) (not b!24297) (not bm!2211) (not b!24458) (not b!24652) (not d!4621) (not bm!2174) (not b!23937) (not d!4619) (not d!4647) (not bm!2193) (not b!24911) (not d!4487) (not b!24858) (not b!25006) (not bm!2160) (not b!24379) (not b!24416) (not b!24217) (not b!24236) (not bm!2149) (not d!4555) (not b!23871) (not b!24703) (not b!24522) (not b!24767) (not b!24826) (not d!4663) (not d!4227) (not b!24681) (not bm!2162) (not b!24731) (not b!24952) (not b!24672) (not d!4209) (not b!24510) (not b!24142) (not b!24513) (not b!24770) (not b!25004) (not d!4335) (not b!24235) (not b_lambda!1603) (not b_lambda!1621) (not b!24706) (not b!24942) (not b!24172) (not b!24694) (not b!24849) (not b!24332) (not bm!2072) (not b!24377) (not b!24062) (not d!4321) (not b!24579) (not d!4553) (not b!24419) (not b!24117) (not b!24408) (not bm!2177) (not d!4351) (not b!24794) (not b!24370) (not b!24168) (not b!24733) (not b!24663) (not b!24021) (not d!4383) (not b!24617) (not b_lambda!1625) (not b!24832) (not b!24624) (not b!24623) (not b!24791) (not b!24337) (not b!24367) (not b!24183) (not d!4245) (not b!24824) (not b!24410) (not b!24793) (not b!24089) (not b!24855) (not b!24785) (not b!24712) (not b!24127) (not b!24363) (not b!24345) (not b!24110) (not b_lambda!1637) (not bm!2124) (not b!24469) (not b!24434) (not b!24985) (not b!24239) (not b_lambda!1641) (not b!24298) (not d!4645) (not b!24515) (not b!25037) (not b!24431) (not b!24656) (not b!24441) (not b!24863) (not b!24495) (not b!24044) (not b!24024) (not b!24322) (not d!4231) (not d!4403) (not b!24058) (not mapNonEmpty!1033) (not b!24646) (not d!4247) (not b!24559) (not b!24769) (not b!23940) (not b!25003) (not b_lambda!1639) (not b!24260) (not b!24700) (not d!4625) (not b!24815) (not b!24234) (not b!23984) (not b!25005) (not b!24019) (not b!24387) (not b!24630) (not d!4469) (not d!4187) (not b!24843) (not b!24258) (not b_lambda!1657) (not d!4323) (not b!23988) (not b!24638) (not b!24551) (not d!4225) (not d!4461) (not d!4341) (not b!23980) b_and!1557 (not d!4385) (not d!4435) (not b!23991) (not b!24396) (not b!24610) (not b!24229) (not b!23922) (not d!4207) (not bm!2128) (not b!24283) (not d!4641) (not bm!2192) (not b!24241) (not b!24535) (not bm!2164) (not d!4665) (not d!4699) (not b!24214) (not b!24465) (not b!24086) (not d!4441) (not d!4331) (not bm!2087) (not d!4649) (not b!24783) (not bm!2082) (not b!24076) (not b!23924) (not d!4681) (not b!24717) (not b!24602) (not b!24543) (not b!24851) (not d!4327) (not b!24170) (not d!4369) (not bm!2114) (not b!24979) (not bm!2084) (not b!24351) (not d!4223) (not d!4393) (not d!4741) (not d!4585) (not b!23933) (not b!24549) (not d!4303) (not bm!2219) (not b!24864) (not b!24871) (not bm!2140) (not d!4529) (not b!24348) (not b!25036) (not b!24160) (not d!4747) (not b_lambda!1661) (not d!4573) (not bm!2203) (not b!24057) (not bm!2123) (not b!24705) (not d!4531) tp_is_empty!1023 (not d!4447) (not b!24418) (not d!4591) (not bm!2066) (not b!24081) (not d!4337) (not b!23925) (not bm!2103) (not b!24343) (not b!24987) (not b!23869) (not b!24212) (not d!4671) (not b!23950) (not b!24680) (not d!4313) (not b_lambda!1601) (not b!24577) (not b!24873) (not d!4539) (not b!24319) (not b!23949) (not d!4547) (not b!24789) (not bm!2181) (not d!4347) (not b!24928) (not b!24814) (not b!25030) (not b!24583) (not d!4443) (not b!24391) (not b!24491) (not b!24326) (not b!23889) (not b!24840) (not b!24109) (not b_lambda!1607) (not b!24937) (not bm!2142) (not d!4597) (not b!24287) (not b!24973) (not b_lambda!1645) (not bm!2137) (not b!24983) (not d!4387) (not b!24374) (not b!23923) (not d!4505) (not bm!2106) (not bm!2184) (not b!24438) (not b!24318) (not b!25034) (not d!4361) (not b!24268) (not b!24916) (not bm!2197) (not bm!2108) (not d!4257) (not b!24756) (not b!23882) (not d!4655) (not b!24250) (not b!24772) (not b!24751) (not b!24757) (not d!4317) (not d!4423) (not b!24216) (not d!4691) (not b!24704) (not b!23918) (not b!24800) (not b!24878) (not b!24809) (not b!24612) (not bm!2096) (not b!24650) (not b_lambda!1651) (not b!24648) (not bm!2091) (not d!4779) (not d!4685) (not b!24264) (not b_lambda!1631) (not d!4131) (not d!4761) (not b!24967) (not bm!2100) (not d!4193) (not d!4589) (not b!24162) (not b_lambda!1617) (not b!24124) (not b!24113) (not b!24400) (not d!4233) (not b!24059) (not b!24256) (not d!4593) (not d!4507) (not b!24112) (not b!24333) (not d!4551) (not d!4515) (not b!23975) (not d!4485) (not b!24316) (not b!23921) (not b!24662) (not b!24123) (not b!24930) (not b!24220) (not b_lambda!1659) (not bm!2178) (not bm!2191) (not d!4577) (not bm!2148) (not b!24084) (not bm!2170) (not d!4405) (not b_lambda!1611) (not d!4603) (not d!4309) (not b!24339) (not d!4579) (not bm!2125) (not b!24402) (not bm!2089) (not b!24037) (not d!4743) (not b!23890) (not d!4689) (not b!24078) (not d!4633) (not b!24389) (not bm!2200) (not b!24306) (not b!24177) (not b!24729) (not b!24844) (not d!4189) (not d!4775) (not b!24692) (not b!24503) (not b!24068) (not b!24927) (not b!24818) (not d!4221) (not b!24627) (not b!24622) (not b!24060) (not d!4215) (not b!25039) (not b!23926) (not b!24907) (not d!4375) (not b!24054) (not b!24088) (not d!4451) (not b_lambda!1663) (not b!24328) (not b!24174) (not b!24520) (not d!4777) (not b!24430) (not bm!2121) (not bm!2094) (not b!24492) (not b!24604) (not b!24594) (not bm!2060) (not d!4161) (not d!4277) (not bm!2133) (not b!24872) (not b!24093) (not b!24986) (not b!24950) (not b!24473) (not b!24989) (not b!24314) (not b!24023) (not d!4481) (not b!24557) (not b!24992) (not b!24267) (not d!4399) (not d!4701) (not bm!2080) (not b!24846) (not b!24734) (not d!4171) (not d!4349) (not d!4157) (not b!24150) (not d!4501) (not b!25023) (not b!24762) (not d!4153) (not d!4537) (not b!24462) (not b!24221) (not b_lambda!1649) (not b!24926) (not b!24494) (not b!24723) (not b_lambda!1627) (not b!24736) (not d!4307) (not b!24547) (not d!4439) (not bm!2047) (not b!24121) (not b_lambda!1653) (not d!4433) (not b!24302) (not bm!2065) (not d!4275) (not bm!2078) (not bm!2058) (not bm!2185) (not b!24026) (not b!24083) (not b_lambda!1615) (not b!25021) (not d!4495) (not b!24802) (not d!4759) (not d!4329) (not b!25013) (not bm!2207) (not b!24787) (not b!24975) (not d!4139) (not b_lambda!1599) (not d!4637) (not bm!2186) (not b!24166) (not b!24902) (not b!24869) (not bm!2062) (not d!4365) (not bm!2194) (not b!24923) (not b!24804) (not b!24082) (not d!4269) (not b!24125) (not d!4319) (not b!24679) (not b!24735) (not b_lambda!1643) (not b!24848) (not d!4255) (not b!24485) (not b!24585) (not b!24223) (not b!24631) (not b!24500) (not d!4429) (not bm!2079) (not d!4411) (not d!4765) (not d!4237) (not bm!2081) (not b!24552) (not b!24608) (not b!24881) (not b!24038) (not bm!2152) (not b!24301) (not b!24266) (not d!4719) (not b_lambda!1623) (not bm!2118) (not b!24186) (not d!4353) (not d!4565) (not b!24981) (not d!4159) (not b!24397) (not b!24886) (not b!24725) (not b!24030))
(check-sat b_and!1557 (not b_next!759))
