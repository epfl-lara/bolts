; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9604 () Bool)

(assert start!9604)

(declare-fun b!70764 () Bool)

(declare-fun b_free!2105 () Bool)

(declare-fun b_next!2105 () Bool)

(assert (=> b!70764 (= b_free!2105 (not b_next!2105))))

(declare-fun tp!8483 () Bool)

(declare-fun b_and!4357 () Bool)

(assert (=> b!70764 (= tp!8483 b_and!4357)))

(declare-fun b!70778 () Bool)

(declare-fun b_free!2107 () Bool)

(declare-fun b_next!2107 () Bool)

(assert (=> b!70778 (= b_free!2107 (not b_next!2107))))

(declare-fun tp!8485 () Bool)

(declare-fun b_and!4359 () Bool)

(assert (=> b!70778 (= tp!8485 b_and!4359)))

(declare-fun b!70759 () Bool)

(declare-datatypes ((Unit!2006 0))(
  ( (Unit!2007) )
))
(declare-fun e!46364 () Unit!2006)

(declare-fun Unit!2008 () Unit!2006)

(assert (=> b!70759 (= e!46364 Unit!2008)))

(declare-fun lt!31202 () Unit!2006)

(declare-datatypes ((V!2939 0))(
  ( (V!2940 (val!1279 Int)) )
))
(declare-datatypes ((array!3880 0))(
  ( (array!3881 (arr!1852 (Array (_ BitVec 32) (_ BitVec 64))) (size!2089 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!891 0))(
  ( (ValueCellFull!891 (v!2516 V!2939)) (EmptyCell!891) )
))
(declare-datatypes ((array!3882 0))(
  ( (array!3883 (arr!1853 (Array (_ BitVec 32) ValueCell!891)) (size!2090 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!690 0))(
  ( (LongMapFixedSize!691 (defaultEntry!2192 Int) (mask!6149 (_ BitVec 32)) (extraKeys!2055 (_ BitVec 32)) (zeroValue!2096 V!2939) (minValue!2096 V!2939) (_size!394 (_ BitVec 32)) (_keys!3840 array!3880) (_values!2175 array!3882) (_vacant!394 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!500 0))(
  ( (Cell!501 (v!2517 LongMapFixedSize!690)) )
))
(declare-datatypes ((LongMap!500 0))(
  ( (LongMap!501 (underlying!261 Cell!500)) )
))
(declare-fun thiss!992 () LongMap!500)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!50 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2006)

(assert (=> b!70759 (= lt!31202 (lemmaListMapContainsThenArrayContainsFrom!50 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3880 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!70759 (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!31207 () Unit!2006)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3880 (_ BitVec 32) (_ BitVec 32)) Unit!2006)

(assert (=> b!70759 (= lt!31207 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1503 0))(
  ( (Nil!1500) (Cons!1499 (h!2085 (_ BitVec 64)) (t!5043 List!1503)) )
))
(declare-fun arrayNoDuplicates!0 (array!3880 (_ BitVec 32) List!1503) Bool)

(assert (=> b!70759 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) from!355 Nil!1500)))

(declare-fun lt!31209 () Unit!2006)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3880 (_ BitVec 32) (_ BitVec 64) List!1503) Unit!2006)

(assert (=> b!70759 (= lt!31209 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500)))))

(assert (=> b!70759 false))

(declare-fun b!70760 () Bool)

(declare-fun res!37800 () Bool)

(declare-fun e!46362 () Bool)

(assert (=> b!70760 (=> (not res!37800) (not e!46362))))

(declare-fun newMap!16 () LongMapFixedSize!690)

(assert (=> b!70760 (= res!37800 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6149 newMap!16)) (_size!394 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!70761 () Bool)

(declare-fun e!46370 () Bool)

(assert (=> b!70761 (= e!46362 e!46370)))

(declare-fun res!37799 () Bool)

(assert (=> b!70761 (=> (not res!37799) (not e!46370))))

(declare-datatypes ((tuple2!2138 0))(
  ( (tuple2!2139 (_1!1079 (_ BitVec 64)) (_2!1079 V!2939)) )
))
(declare-datatypes ((List!1504 0))(
  ( (Nil!1501) (Cons!1500 (h!2086 tuple2!2138) (t!5044 List!1504)) )
))
(declare-datatypes ((ListLongMap!1433 0))(
  ( (ListLongMap!1434 (toList!732 List!1504)) )
))
(declare-fun lt!31203 () ListLongMap!1433)

(declare-fun lt!31199 () ListLongMap!1433)

(assert (=> b!70761 (= res!37799 (= lt!31203 lt!31199))))

(declare-fun map!1155 (LongMapFixedSize!690) ListLongMap!1433)

(assert (=> b!70761 (= lt!31199 (map!1155 newMap!16))))

(declare-fun getCurrentListMap!425 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) ListLongMap!1433)

(assert (=> b!70761 (= lt!31203 (getCurrentListMap!425 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!70762 () Bool)

(declare-fun Unit!2009 () Unit!2006)

(assert (=> b!70762 (= e!46364 Unit!2009)))

(declare-fun b!70763 () Bool)

(declare-fun e!46371 () Bool)

(declare-fun e!46368 () Bool)

(declare-fun mapRes!3145 () Bool)

(assert (=> b!70763 (= e!46371 (and e!46368 mapRes!3145))))

(declare-fun condMapEmpty!3145 () Bool)

(declare-fun mapDefault!3145 () ValueCell!891)

(assert (=> b!70763 (= condMapEmpty!3145 (= (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3145)))))

(declare-fun mapNonEmpty!3145 () Bool)

(declare-fun tp!8486 () Bool)

(declare-fun e!46369 () Bool)

(assert (=> mapNonEmpty!3145 (= mapRes!3145 (and tp!8486 e!46369))))

(declare-fun mapRest!3145 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapValue!3145 () ValueCell!891)

(declare-fun mapKey!3146 () (_ BitVec 32))

(assert (=> mapNonEmpty!3145 (= (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (store mapRest!3145 mapKey!3146 mapValue!3145))))

(declare-fun b!70765 () Bool)

(declare-fun e!46366 () Bool)

(declare-fun e!46358 () Bool)

(declare-fun mapRes!3146 () Bool)

(assert (=> b!70765 (= e!46366 (and e!46358 mapRes!3146))))

(declare-fun condMapEmpty!3146 () Bool)

(declare-fun mapDefault!3146 () ValueCell!891)

(assert (=> b!70765 (= condMapEmpty!3146 (= (arr!1853 (_values!2175 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3146)))))

(declare-fun b!70766 () Bool)

(declare-fun tp_is_empty!2469 () Bool)

(assert (=> b!70766 (= e!46369 tp_is_empty!2469)))

(declare-fun b!70767 () Bool)

(declare-fun e!46372 () Bool)

(declare-fun e!46365 () Bool)

(assert (=> b!70767 (= e!46372 e!46365)))

(declare-fun b!70768 () Bool)

(declare-fun res!37797 () Bool)

(assert (=> b!70768 (=> (not res!37797) (not e!46362))))

(declare-fun valid!288 (LongMapFixedSize!690) Bool)

(assert (=> b!70768 (= res!37797 (valid!288 newMap!16))))

(declare-fun b!70769 () Bool)

(declare-fun e!46357 () Bool)

(assert (=> b!70769 (= e!46365 e!46357)))

(declare-fun b!70770 () Bool)

(declare-fun e!46363 () Bool)

(assert (=> b!70770 (= e!46363 (or (not (= (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6149 (v!2517 (underlying!261 thiss!992)))))) (not (= (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992)))))) (bvslt (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!70771 () Bool)

(declare-fun e!46360 () Bool)

(declare-fun e!46367 () Bool)

(assert (=> b!70771 (= e!46360 e!46367)))

(declare-fun res!37798 () Bool)

(assert (=> b!70771 (=> (not res!37798) (not e!46367))))

(declare-datatypes ((tuple2!2140 0))(
  ( (tuple2!2141 (_1!1080 Bool) (_2!1080 LongMapFixedSize!690)) )
))
(declare-fun lt!31201 () tuple2!2140)

(assert (=> b!70771 (= res!37798 (and (_1!1080 lt!31201) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!31206 () Unit!2006)

(assert (=> b!70771 (= lt!31206 e!46364)))

(declare-fun c!10244 () Bool)

(declare-fun contains!726 (ListLongMap!1433 (_ BitVec 64)) Bool)

(assert (=> b!70771 (= c!10244 (contains!726 lt!31199 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun lt!31204 () V!2939)

(declare-fun update!102 (LongMapFixedSize!690 (_ BitVec 64) V!2939) tuple2!2140)

(assert (=> b!70771 (= lt!31201 (update!102 newMap!16 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))

(declare-fun mapIsEmpty!3145 () Bool)

(assert (=> mapIsEmpty!3145 mapRes!3146))

(declare-fun mapIsEmpty!3146 () Bool)

(assert (=> mapIsEmpty!3146 mapRes!3145))

(declare-fun b!70772 () Bool)

(declare-fun e!46373 () Bool)

(assert (=> b!70772 (= e!46373 tp_is_empty!2469)))

(declare-fun b!70773 () Bool)

(assert (=> b!70773 (= e!46370 e!46360)))

(declare-fun res!37796 () Bool)

(assert (=> b!70773 (=> (not res!37796) (not e!46360))))

(assert (=> b!70773 (= res!37796 (and (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1146 (ValueCell!891 V!2939) V!2939)

(declare-fun dynLambda!331 (Int (_ BitVec 64)) V!2939)

(assert (=> b!70773 (= lt!31204 (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70774 () Bool)

(assert (=> b!70774 (= e!46358 tp_is_empty!2469)))

(declare-fun b!70775 () Bool)

(declare-fun res!37801 () Bool)

(assert (=> b!70775 (=> (not res!37801) (not e!46362))))

(assert (=> b!70775 (= res!37801 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!70776 () Bool)

(assert (=> b!70776 (= e!46367 (not e!46363))))

(declare-fun res!37795 () Bool)

(assert (=> b!70776 (=> res!37795 e!46363)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!70776 (= res!37795 (not (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun lt!31210 () ListLongMap!1433)

(declare-fun lt!31200 () tuple2!2138)

(declare-fun lt!31205 () tuple2!2138)

(declare-fun +!95 (ListLongMap!1433 tuple2!2138) ListLongMap!1433)

(assert (=> b!70776 (= (+!95 (+!95 lt!31210 lt!31200) lt!31205) (+!95 (+!95 lt!31210 lt!31205) lt!31200))))

(assert (=> b!70776 (= lt!31205 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))

(assert (=> b!70776 (= lt!31200 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))

(declare-fun lt!31208 () Unit!2006)

(declare-fun addCommutativeForDiffKeys!14 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64) V!2939) Unit!2006)

(assert (=> b!70776 (= lt!31208 (addCommutativeForDiffKeys!14 lt!31210 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!59 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) ListLongMap!1433)

(assert (=> b!70776 (= lt!31210 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun mapNonEmpty!3146 () Bool)

(declare-fun tp!8484 () Bool)

(assert (=> mapNonEmpty!3146 (= mapRes!3146 (and tp!8484 e!46373))))

(declare-fun mapRest!3146 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapKey!3145 () (_ BitVec 32))

(declare-fun mapValue!3146 () ValueCell!891)

(assert (=> mapNonEmpty!3146 (= (arr!1853 (_values!2175 newMap!16)) (store mapRest!3146 mapKey!3145 mapValue!3146))))

(declare-fun array_inv!1097 (array!3880) Bool)

(declare-fun array_inv!1098 (array!3882) Bool)

(assert (=> b!70764 (= e!46357 (and tp!8483 tp_is_empty!2469 (array_inv!1097 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (array_inv!1098 (_values!2175 (v!2517 (underlying!261 thiss!992)))) e!46371))))

(declare-fun res!37794 () Bool)

(assert (=> start!9604 (=> (not res!37794) (not e!46362))))

(declare-fun valid!289 (LongMap!500) Bool)

(assert (=> start!9604 (= res!37794 (valid!289 thiss!992))))

(assert (=> start!9604 e!46362))

(assert (=> start!9604 e!46372))

(assert (=> start!9604 true))

(declare-fun e!46361 () Bool)

(assert (=> start!9604 e!46361))

(declare-fun b!70777 () Bool)

(assert (=> b!70777 (= e!46368 tp_is_empty!2469)))

(assert (=> b!70778 (= e!46361 (and tp!8485 tp_is_empty!2469 (array_inv!1097 (_keys!3840 newMap!16)) (array_inv!1098 (_values!2175 newMap!16)) e!46366))))

(assert (= (and start!9604 res!37794) b!70775))

(assert (= (and b!70775 res!37801) b!70768))

(assert (= (and b!70768 res!37797) b!70760))

(assert (= (and b!70760 res!37800) b!70761))

(assert (= (and b!70761 res!37799) b!70773))

(assert (= (and b!70773 res!37796) b!70771))

(assert (= (and b!70771 c!10244) b!70759))

(assert (= (and b!70771 (not c!10244)) b!70762))

(assert (= (and b!70771 res!37798) b!70776))

(assert (= (and b!70776 (not res!37795)) b!70770))

(assert (= (and b!70763 condMapEmpty!3145) mapIsEmpty!3146))

(assert (= (and b!70763 (not condMapEmpty!3145)) mapNonEmpty!3145))

(get-info :version)

(assert (= (and mapNonEmpty!3145 ((_ is ValueCellFull!891) mapValue!3145)) b!70766))

(assert (= (and b!70763 ((_ is ValueCellFull!891) mapDefault!3145)) b!70777))

(assert (= b!70764 b!70763))

(assert (= b!70769 b!70764))

(assert (= b!70767 b!70769))

(assert (= start!9604 b!70767))

(assert (= (and b!70765 condMapEmpty!3146) mapIsEmpty!3145))

(assert (= (and b!70765 (not condMapEmpty!3146)) mapNonEmpty!3146))

(assert (= (and mapNonEmpty!3146 ((_ is ValueCellFull!891) mapValue!3146)) b!70772))

(assert (= (and b!70765 ((_ is ValueCellFull!891) mapDefault!3146)) b!70774))

(assert (= b!70778 b!70765))

(assert (= start!9604 b!70778))

(declare-fun b_lambda!3187 () Bool)

(assert (=> (not b_lambda!3187) (not b!70773)))

(declare-fun t!5040 () Bool)

(declare-fun tb!1513 () Bool)

(assert (=> (and b!70764 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) t!5040) tb!1513))

(declare-fun result!2655 () Bool)

(assert (=> tb!1513 (= result!2655 tp_is_empty!2469)))

(assert (=> b!70773 t!5040))

(declare-fun b_and!4361 () Bool)

(assert (= b_and!4357 (and (=> t!5040 result!2655) b_and!4361)))

(declare-fun tb!1515 () Bool)

(declare-fun t!5042 () Bool)

(assert (=> (and b!70778 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) t!5042) tb!1515))

(declare-fun result!2659 () Bool)

(assert (= result!2659 result!2655))

(assert (=> b!70773 t!5042))

(declare-fun b_and!4363 () Bool)

(assert (= b_and!4359 (and (=> t!5042 result!2659) b_and!4363)))

(declare-fun m!67711 () Bool)

(assert (=> start!9604 m!67711))

(declare-fun m!67713 () Bool)

(assert (=> b!70773 m!67713))

(declare-fun m!67715 () Bool)

(assert (=> b!70773 m!67715))

(declare-fun m!67717 () Bool)

(assert (=> b!70773 m!67717))

(assert (=> b!70773 m!67715))

(assert (=> b!70773 m!67717))

(declare-fun m!67719 () Bool)

(assert (=> b!70773 m!67719))

(declare-fun m!67721 () Bool)

(assert (=> b!70764 m!67721))

(declare-fun m!67723 () Bool)

(assert (=> b!70764 m!67723))

(declare-fun m!67725 () Bool)

(assert (=> b!70759 m!67725))

(declare-fun m!67727 () Bool)

(assert (=> b!70759 m!67727))

(assert (=> b!70759 m!67713))

(declare-fun m!67729 () Bool)

(assert (=> b!70759 m!67729))

(assert (=> b!70759 m!67713))

(assert (=> b!70759 m!67713))

(declare-fun m!67731 () Bool)

(assert (=> b!70759 m!67731))

(assert (=> b!70759 m!67713))

(declare-fun m!67733 () Bool)

(assert (=> b!70759 m!67733))

(declare-fun m!67735 () Bool)

(assert (=> b!70776 m!67735))

(declare-fun m!67737 () Bool)

(assert (=> b!70776 m!67737))

(declare-fun m!67739 () Bool)

(assert (=> b!70776 m!67739))

(declare-fun m!67741 () Bool)

(assert (=> b!70776 m!67741))

(declare-fun m!67743 () Bool)

(assert (=> b!70776 m!67743))

(assert (=> b!70776 m!67713))

(declare-fun m!67745 () Bool)

(assert (=> b!70776 m!67745))

(assert (=> b!70776 m!67735))

(assert (=> b!70776 m!67713))

(assert (=> b!70776 m!67741))

(declare-fun m!67747 () Bool)

(assert (=> b!70776 m!67747))

(declare-fun m!67749 () Bool)

(assert (=> b!70768 m!67749))

(declare-fun m!67751 () Bool)

(assert (=> mapNonEmpty!3145 m!67751))

(declare-fun m!67753 () Bool)

(assert (=> b!70778 m!67753))

(declare-fun m!67755 () Bool)

(assert (=> b!70778 m!67755))

(assert (=> b!70771 m!67713))

(assert (=> b!70771 m!67713))

(declare-fun m!67757 () Bool)

(assert (=> b!70771 m!67757))

(assert (=> b!70771 m!67713))

(declare-fun m!67759 () Bool)

(assert (=> b!70771 m!67759))

(declare-fun m!67761 () Bool)

(assert (=> mapNonEmpty!3146 m!67761))

(declare-fun m!67763 () Bool)

(assert (=> b!70761 m!67763))

(declare-fun m!67765 () Bool)

(assert (=> b!70761 m!67765))

(check-sat tp_is_empty!2469 (not mapNonEmpty!3145) (not mapNonEmpty!3146) (not b!70764) (not b!70768) (not b!70771) (not b_next!2105) b_and!4361 (not b!70773) (not b!70778) (not b_lambda!3187) (not b!70776) (not b!70761) b_and!4363 (not start!9604) (not b!70759) (not b_next!2107))
(check-sat b_and!4361 b_and!4363 (not b_next!2105) (not b_next!2107))
(get-model)

(declare-fun b_lambda!3191 () Bool)

(assert (= b_lambda!3187 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3191)))

(check-sat tp_is_empty!2469 (not mapNonEmpty!3145) (not b!70778) (not mapNonEmpty!3146) (not b!70764) (not b!70768) (not b!70771) (not b_lambda!3191) (not b_next!2105) b_and!4361 (not b!70773) (not b!70776) (not b!70761) b_and!4363 (not start!9604) (not b!70759) (not b_next!2107))
(check-sat b_and!4361 b_and!4363 (not b_next!2105) (not b_next!2107))
(get-model)

(declare-fun d!15779 () Bool)

(assert (=> d!15779 (not (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31249 () Unit!2006)

(declare-fun choose!68 (array!3880 (_ BitVec 32) (_ BitVec 64) List!1503) Unit!2006)

(assert (=> d!15779 (= lt!31249 (choose!68 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500)))))

(assert (=> d!15779 (bvslt (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15779 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500)) lt!31249)))

(declare-fun bs!3039 () Bool)

(assert (= bs!3039 d!15779))

(assert (=> bs!3039 m!67713))

(assert (=> bs!3039 m!67731))

(assert (=> bs!3039 m!67713))

(declare-fun m!67823 () Bool)

(assert (=> bs!3039 m!67823))

(assert (=> b!70759 d!15779))

(declare-fun d!15781 () Bool)

(assert (=> d!15781 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) from!355 Nil!1500)))

(declare-fun lt!31252 () Unit!2006)

(declare-fun choose!39 (array!3880 (_ BitVec 32) (_ BitVec 32)) Unit!2006)

(assert (=> d!15781 (= lt!31252 (choose!39 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!15781 (bvslt (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15781 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 from!355) lt!31252)))

(declare-fun bs!3040 () Bool)

(assert (= bs!3040 d!15781))

(assert (=> bs!3040 m!67727))

(declare-fun m!67825 () Bool)

(assert (=> bs!3040 m!67825))

(assert (=> b!70759 d!15781))

(declare-fun d!15783 () Bool)

(declare-fun res!37830 () Bool)

(declare-fun e!46433 () Bool)

(assert (=> d!15783 (=> res!37830 e!46433)))

(assert (=> d!15783 (= res!37830 (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!15783 (= (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!46433)))

(declare-fun b!70847 () Bool)

(declare-fun e!46434 () Bool)

(assert (=> b!70847 (= e!46433 e!46434)))

(declare-fun res!37831 () Bool)

(assert (=> b!70847 (=> (not res!37831) (not e!46434))))

(assert (=> b!70847 (= res!37831 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!70848 () Bool)

(assert (=> b!70848 (= e!46434 (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!15783 (not res!37830)) b!70847))

(assert (= (and b!70847 res!37831) b!70848))

(declare-fun m!67827 () Bool)

(assert (=> d!15783 m!67827))

(assert (=> b!70848 m!67713))

(declare-fun m!67829 () Bool)

(assert (=> b!70848 m!67829))

(assert (=> b!70759 d!15783))

(declare-fun d!15785 () Bool)

(declare-fun e!46437 () Bool)

(assert (=> d!15785 e!46437))

(declare-fun c!10250 () Bool)

(assert (=> d!15785 (= c!10250 (and (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!31255 () Unit!2006)

(declare-fun choose!403 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2006)

(assert (=> d!15785 (= lt!31255 (choose!403 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(assert (=> d!15785 (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992))))))

(assert (=> d!15785 (= (lemmaListMapContainsThenArrayContainsFrom!50 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) lt!31255)))

(declare-fun b!70853 () Bool)

(assert (=> b!70853 (= e!46437 (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!70854 () Bool)

(assert (=> b!70854 (= e!46437 (ite (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!15785 c!10250) b!70853))

(assert (= (and d!15785 (not c!10250)) b!70854))

(assert (=> d!15785 m!67713))

(declare-fun m!67831 () Bool)

(assert (=> d!15785 m!67831))

(assert (=> d!15785 m!67739))

(assert (=> b!70853 m!67713))

(assert (=> b!70853 m!67731))

(assert (=> b!70759 d!15785))

(declare-fun d!15787 () Bool)

(declare-fun res!37839 () Bool)

(declare-fun e!46448 () Bool)

(assert (=> d!15787 (=> res!37839 e!46448)))

(assert (=> d!15787 (= res!37839 (bvsge from!355 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!15787 (= (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) from!355 Nil!1500) e!46448)))

(declare-fun b!70865 () Bool)

(declare-fun e!46447 () Bool)

(declare-fun contains!727 (List!1503 (_ BitVec 64)) Bool)

(assert (=> b!70865 (= e!46447 (contains!727 Nil!1500 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!70866 () Bool)

(declare-fun e!46446 () Bool)

(declare-fun call!6056 () Bool)

(assert (=> b!70866 (= e!46446 call!6056)))

(declare-fun bm!6053 () Bool)

(declare-fun c!10253 () Bool)

(assert (=> bm!6053 (= call!6056 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)))))

(declare-fun b!70867 () Bool)

(declare-fun e!46449 () Bool)

(assert (=> b!70867 (= e!46448 e!46449)))

(declare-fun res!37840 () Bool)

(assert (=> b!70867 (=> (not res!37840) (not e!46449))))

(assert (=> b!70867 (= res!37840 (not e!46447))))

(declare-fun res!37838 () Bool)

(assert (=> b!70867 (=> (not res!37838) (not e!46447))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!70867 (= res!37838 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!70868 () Bool)

(assert (=> b!70868 (= e!46446 call!6056)))

(declare-fun b!70869 () Bool)

(assert (=> b!70869 (= e!46449 e!46446)))

(assert (=> b!70869 (= c!10253 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!15787 (not res!37839)) b!70867))

(assert (= (and b!70867 res!37838) b!70865))

(assert (= (and b!70867 res!37840) b!70869))

(assert (= (and b!70869 c!10253) b!70868))

(assert (= (and b!70869 (not c!10253)) b!70866))

(assert (= (or b!70868 b!70866) bm!6053))

(assert (=> b!70865 m!67713))

(assert (=> b!70865 m!67713))

(declare-fun m!67833 () Bool)

(assert (=> b!70865 m!67833))

(assert (=> bm!6053 m!67713))

(declare-fun m!67835 () Bool)

(assert (=> bm!6053 m!67835))

(assert (=> b!70867 m!67713))

(assert (=> b!70867 m!67713))

(declare-fun m!67837 () Bool)

(assert (=> b!70867 m!67837))

(assert (=> b!70869 m!67713))

(assert (=> b!70869 m!67713))

(assert (=> b!70869 m!67837))

(assert (=> b!70759 d!15787))

(declare-fun d!15789 () Bool)

(declare-fun res!37847 () Bool)

(declare-fun e!46452 () Bool)

(assert (=> d!15789 (=> (not res!37847) (not e!46452))))

(declare-fun simpleValid!49 (LongMapFixedSize!690) Bool)

(assert (=> d!15789 (= res!37847 (simpleValid!49 newMap!16))))

(assert (=> d!15789 (= (valid!288 newMap!16) e!46452)))

(declare-fun b!70876 () Bool)

(declare-fun res!37848 () Bool)

(assert (=> b!70876 (=> (not res!37848) (not e!46452))))

(declare-fun arrayCountValidKeys!0 (array!3880 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!70876 (= res!37848 (= (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (_size!394 newMap!16)))))

(declare-fun b!70877 () Bool)

(declare-fun res!37849 () Bool)

(assert (=> b!70877 (=> (not res!37849) (not e!46452))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3880 (_ BitVec 32)) Bool)

(assert (=> b!70877 (= res!37849 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!70878 () Bool)

(assert (=> b!70878 (= e!46452 (arrayNoDuplicates!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 Nil!1500))))

(assert (= (and d!15789 res!37847) b!70876))

(assert (= (and b!70876 res!37848) b!70877))

(assert (= (and b!70877 res!37849) b!70878))

(declare-fun m!67839 () Bool)

(assert (=> d!15789 m!67839))

(declare-fun m!67841 () Bool)

(assert (=> b!70876 m!67841))

(declare-fun m!67843 () Bool)

(assert (=> b!70877 m!67843))

(declare-fun m!67845 () Bool)

(assert (=> b!70878 m!67845))

(assert (=> b!70768 d!15789))

(declare-fun d!15791 () Bool)

(declare-fun c!10256 () Bool)

(assert (=> d!15791 (= c!10256 ((_ is ValueCellFull!891) (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun e!46455 () V!2939)

(assert (=> d!15791 (= (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46455)))

(declare-fun b!70883 () Bool)

(declare-fun get!1148 (ValueCell!891 V!2939) V!2939)

(assert (=> b!70883 (= e!46455 (get!1148 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70884 () Bool)

(declare-fun get!1149 (ValueCell!891 V!2939) V!2939)

(assert (=> b!70884 (= e!46455 (get!1149 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15791 c!10256) b!70883))

(assert (= (and d!15791 (not c!10256)) b!70884))

(assert (=> b!70883 m!67715))

(assert (=> b!70883 m!67717))

(declare-fun m!67847 () Bool)

(assert (=> b!70883 m!67847))

(assert (=> b!70884 m!67715))

(assert (=> b!70884 m!67717))

(declare-fun m!67849 () Bool)

(assert (=> b!70884 m!67849))

(assert (=> b!70773 d!15791))

(declare-fun d!15793 () Bool)

(assert (=> d!15793 (= (array_inv!1097 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvsge (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70764 d!15793))

(declare-fun d!15795 () Bool)

(assert (=> d!15795 (= (array_inv!1098 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvsge (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70764 d!15795))

(declare-fun d!15797 () Bool)

(assert (=> d!15797 (= (valid!289 thiss!992) (valid!288 (v!2517 (underlying!261 thiss!992))))))

(declare-fun bs!3041 () Bool)

(assert (= bs!3041 d!15797))

(declare-fun m!67851 () Bool)

(assert (=> bs!3041 m!67851))

(assert (=> start!9604 d!15797))

(declare-fun d!15799 () Bool)

(declare-fun e!46460 () Bool)

(assert (=> d!15799 e!46460))

(declare-fun res!37852 () Bool)

(assert (=> d!15799 (=> res!37852 e!46460)))

(declare-fun lt!31266 () Bool)

(assert (=> d!15799 (= res!37852 (not lt!31266))))

(declare-fun lt!31264 () Bool)

(assert (=> d!15799 (= lt!31266 lt!31264)))

(declare-fun lt!31265 () Unit!2006)

(declare-fun e!46461 () Unit!2006)

(assert (=> d!15799 (= lt!31265 e!46461)))

(declare-fun c!10259 () Bool)

(assert (=> d!15799 (= c!10259 lt!31264)))

(declare-fun containsKey!135 (List!1504 (_ BitVec 64)) Bool)

(assert (=> d!15799 (= lt!31264 (containsKey!135 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!15799 (= (contains!726 lt!31199 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31266)))

(declare-fun b!70891 () Bool)

(declare-fun lt!31267 () Unit!2006)

(assert (=> b!70891 (= e!46461 lt!31267)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!84 (List!1504 (_ BitVec 64)) Unit!2006)

(assert (=> b!70891 (= lt!31267 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-datatypes ((Option!137 0))(
  ( (Some!136 (v!2521 V!2939)) (None!135) )
))
(declare-fun isDefined!85 (Option!137) Bool)

(declare-fun getValueByKey!131 (List!1504 (_ BitVec 64)) Option!137)

(assert (=> b!70891 (isDefined!85 (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!70892 () Bool)

(declare-fun Unit!2013 () Unit!2006)

(assert (=> b!70892 (= e!46461 Unit!2013)))

(declare-fun b!70893 () Bool)

(assert (=> b!70893 (= e!46460 (isDefined!85 (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (= (and d!15799 c!10259) b!70891))

(assert (= (and d!15799 (not c!10259)) b!70892))

(assert (= (and d!15799 (not res!37852)) b!70893))

(assert (=> d!15799 m!67713))

(declare-fun m!67853 () Bool)

(assert (=> d!15799 m!67853))

(assert (=> b!70891 m!67713))

(declare-fun m!67855 () Bool)

(assert (=> b!70891 m!67855))

(assert (=> b!70891 m!67713))

(declare-fun m!67857 () Bool)

(assert (=> b!70891 m!67857))

(assert (=> b!70891 m!67857))

(declare-fun m!67859 () Bool)

(assert (=> b!70891 m!67859))

(assert (=> b!70893 m!67713))

(assert (=> b!70893 m!67857))

(assert (=> b!70893 m!67857))

(assert (=> b!70893 m!67859))

(assert (=> b!70771 d!15799))

(declare-fun bm!6102 () Bool)

(declare-fun call!6118 () ListLongMap!1433)

(declare-fun call!6114 () ListLongMap!1433)

(assert (=> bm!6102 (= call!6118 call!6114)))

(declare-fun call!6123 () Bool)

(declare-datatypes ((SeekEntryResult!245 0))(
  ( (MissingZero!245 (index!3110 (_ BitVec 32))) (Found!245 (index!3111 (_ BitVec 32))) (Intermediate!245 (undefined!1057 Bool) (index!3112 (_ BitVec 32)) (x!11017 (_ BitVec 32))) (Undefined!245) (MissingVacant!245 (index!3113 (_ BitVec 32))) )
))
(declare-fun lt!31338 () SeekEntryResult!245)

(declare-fun c!10290 () Bool)

(declare-fun bm!6103 () Bool)

(declare-fun lt!31331 () SeekEntryResult!245)

(declare-fun lt!31334 () SeekEntryResult!245)

(declare-fun c!10299 () Bool)

(declare-fun c!10289 () Bool)

(declare-fun c!10300 () Bool)

(declare-fun lt!31335 () SeekEntryResult!245)

(declare-fun c!10294 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6103 (= call!6123 (inRange!0 (ite c!10289 (ite c!10299 (index!3111 lt!31334) (ite c!10294 (index!3110 lt!31335) (index!3113 lt!31335))) (ite c!10300 (index!3111 lt!31338) (ite c!10290 (index!3110 lt!31331) (index!3113 lt!31331)))) (mask!6149 newMap!16)))))

(declare-fun b!70978 () Bool)

(declare-fun e!46519 () Bool)

(declare-fun e!46512 () Bool)

(assert (=> b!70978 (= e!46519 e!46512)))

(declare-fun res!37891 () Bool)

(declare-fun call!6111 () ListLongMap!1433)

(assert (=> b!70978 (= res!37891 (contains!726 call!6111 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!70978 (=> (not res!37891) (not e!46512))))

(declare-fun bm!6104 () Bool)

(declare-fun call!6124 () SeekEntryResult!245)

(declare-fun call!6119 () SeekEntryResult!245)

(assert (=> bm!6104 (= call!6124 call!6119)))

(declare-fun lt!31339 () SeekEntryResult!245)

(declare-fun bm!6105 () Bool)

(declare-fun lt!31324 () (_ BitVec 32))

(declare-fun lt!31328 () (_ BitVec 32))

(declare-fun c!10296 () Bool)

(declare-fun c!10291 () Bool)

(assert (=> bm!6105 (= call!6114 (getCurrentListMap!425 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!70979 () Bool)

(declare-fun e!46521 () Bool)

(declare-fun e!46527 () Bool)

(assert (=> b!70979 (= e!46521 e!46527)))

(declare-fun res!37882 () Bool)

(declare-fun call!6115 () Bool)

(assert (=> b!70979 (= res!37882 call!6115)))

(assert (=> b!70979 (=> (not res!37882) (not e!46527))))

(declare-fun b!70980 () Bool)

(declare-fun e!46524 () Unit!2006)

(declare-fun Unit!2014 () Unit!2006)

(assert (=> b!70980 (= e!46524 Unit!2014)))

(declare-fun lt!31342 () Unit!2006)

(declare-fun call!6116 () Unit!2006)

(assert (=> b!70980 (= lt!31342 call!6116)))

(assert (=> b!70980 (= lt!31334 call!6124)))

(declare-fun res!37885 () Bool)

(assert (=> b!70980 (= res!37885 ((_ is Found!245) lt!31334))))

(declare-fun e!46526 () Bool)

(assert (=> b!70980 (=> (not res!37885) (not e!46526))))

(assert (=> b!70980 e!46526))

(declare-fun lt!31322 () Unit!2006)

(assert (=> b!70980 (= lt!31322 lt!31342)))

(assert (=> b!70980 false))

(declare-fun b!70981 () Bool)

(declare-fun e!46518 () tuple2!2140)

(declare-fun e!46511 () tuple2!2140)

(assert (=> b!70981 (= e!46518 e!46511)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3880 (_ BitVec 32)) SeekEntryResult!245)

(assert (=> b!70981 (= lt!31339 (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> b!70981 (= c!10289 ((_ is Undefined!245) lt!31339))))

(declare-fun b!70982 () Bool)

(declare-fun res!37893 () Bool)

(declare-fun call!6113 () Bool)

(assert (=> b!70982 (= res!37893 call!6113)))

(assert (=> b!70982 (=> (not res!37893) (not e!46526))))

(declare-fun b!70983 () Bool)

(declare-fun res!37889 () Bool)

(assert (=> b!70983 (= res!37889 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!31335)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70983 (=> (not res!37889) (not e!46527))))

(declare-fun bm!6106 () Bool)

(declare-fun c!10298 () Bool)

(assert (=> bm!6106 (= c!10298 c!10289)))

(declare-fun call!6108 () Bool)

(declare-fun e!46520 () ListLongMap!1433)

(assert (=> bm!6106 (= call!6108 (contains!726 e!46520 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!70984 () Bool)

(declare-fun e!46516 () Bool)

(declare-fun call!6126 () Bool)

(assert (=> b!70984 (= e!46516 (not call!6126))))

(declare-fun b!70985 () Bool)

(declare-fun call!6125 () ListLongMap!1433)

(assert (=> b!70985 (= e!46520 call!6125)))

(declare-fun d!15801 () Bool)

(declare-fun e!46517 () Bool)

(assert (=> d!15801 e!46517))

(declare-fun res!37886 () Bool)

(assert (=> d!15801 (=> (not res!37886) (not e!46517))))

(declare-fun lt!31329 () tuple2!2140)

(assert (=> d!15801 (= res!37886 (valid!288 (_2!1080 lt!31329)))))

(assert (=> d!15801 (= lt!31329 e!46518)))

(assert (=> d!15801 (= c!10291 (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvneg (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (=> d!15801 (valid!288 newMap!16)))

(assert (=> d!15801 (= (update!102 newMap!16 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204) lt!31329)))

(declare-fun bm!6107 () Bool)

(declare-fun call!6117 () Bool)

(declare-fun call!6127 () Bool)

(assert (=> bm!6107 (= call!6117 call!6127)))

(declare-fun b!70986 () Bool)

(assert (=> b!70986 (= e!46527 (not call!6126))))

(declare-fun b!70987 () Bool)

(declare-fun c!10292 () Bool)

(assert (=> b!70987 (= c!10292 ((_ is MissingVacant!245) lt!31335))))

(declare-fun e!46506 () Bool)

(assert (=> b!70987 (= e!46506 e!46521)))

(declare-fun bm!6108 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2006)

(assert (=> bm!6108 (= call!6116 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(declare-fun b!70988 () Bool)

(declare-fun res!37894 () Bool)

(declare-fun e!46513 () Bool)

(assert (=> b!70988 (=> (not res!37894) (not e!46513))))

(assert (=> b!70988 (= res!37894 call!6117)))

(declare-fun e!46510 () Bool)

(assert (=> b!70988 (= e!46510 e!46513)))

(declare-fun b!70989 () Bool)

(declare-fun e!46515 () Bool)

(declare-fun e!46523 () Bool)

(assert (=> b!70989 (= e!46515 e!46523)))

(declare-fun res!37884 () Bool)

(assert (=> b!70989 (= res!37884 call!6117)))

(assert (=> b!70989 (=> (not res!37884) (not e!46523))))

(declare-fun b!70990 () Bool)

(declare-fun lt!31340 () Unit!2006)

(assert (=> b!70990 (= lt!31340 e!46524)))

(assert (=> b!70990 (= c!10299 call!6108)))

(assert (=> b!70990 (= e!46511 (tuple2!2141 false newMap!16))))

(declare-fun b!70991 () Bool)

(assert (=> b!70991 (= e!46520 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun bm!6109 () Bool)

(declare-fun call!6122 () ListLongMap!1433)

(declare-fun e!46509 () ListLongMap!1433)

(assert (=> bm!6109 (= call!6122 (+!95 e!46509 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun c!10288 () Bool)

(assert (=> bm!6109 (= c!10288 c!10291)))

(declare-fun b!70992 () Bool)

(declare-fun res!37883 () Bool)

(assert (=> b!70992 (= res!37883 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!31331)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70992 (=> (not res!37883) (not e!46523))))

(declare-fun bm!6110 () Bool)

(assert (=> bm!6110 (= call!6119 (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!70993 () Bool)

(declare-fun lt!31345 () Unit!2006)

(declare-fun lt!31336 () Unit!2006)

(assert (=> b!70993 (= lt!31345 lt!31336)))

(declare-fun call!6110 () ListLongMap!1433)

(assert (=> b!70993 (= call!6110 call!6118)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2006)

(assert (=> b!70993 (= lt!31336 (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31328 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31204 (defaultEntry!2192 newMap!16)))))

(assert (=> b!70993 (= lt!31328 (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!46507 () tuple2!2140)

(assert (=> b!70993 (= e!46507 (tuple2!2141 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) (zeroValue!2096 newMap!16) lt!31204 (_size!394 newMap!16) (_keys!3840 newMap!16) (_values!2175 newMap!16) (_vacant!394 newMap!16))))))

(declare-fun bm!6111 () Bool)

(declare-fun call!6106 () SeekEntryResult!245)

(assert (=> bm!6111 (= call!6106 call!6119)))

(declare-fun b!70994 () Bool)

(declare-fun e!46522 () Bool)

(assert (=> b!70994 (= e!46522 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31338)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!70995 () Bool)

(declare-fun call!6112 () ListLongMap!1433)

(assert (=> b!70995 (= e!46512 (= call!6111 (+!95 call!6112 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun c!10293 () Bool)

(declare-fun bm!6112 () Bool)

(declare-fun call!6128 () tuple2!2140)

(declare-fun updateHelperNewKey!23 (LongMapFixedSize!690 (_ BitVec 64) V!2939 (_ BitVec 32)) tuple2!2140)

(assert (=> bm!6112 (= call!6128 (updateHelperNewKey!23 newMap!16 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))

(declare-fun bm!6113 () Bool)

(assert (=> bm!6113 (= call!6115 call!6113)))

(declare-fun bm!6114 () Bool)

(assert (=> bm!6114 (= call!6113 call!6123)))

(declare-fun b!70996 () Bool)

(declare-fun e!46514 () tuple2!2140)

(declare-fun e!46508 () tuple2!2140)

(assert (=> b!70996 (= e!46514 e!46508)))

(declare-fun c!10297 () Bool)

(assert (=> b!70996 (= c!10297 ((_ is MissingZero!245) lt!31339))))

(declare-fun b!70997 () Bool)

(assert (=> b!70997 (= e!46518 e!46507)))

(assert (=> b!70997 (= c!10296 (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70998 () Bool)

(declare-fun call!6109 () Bool)

(assert (=> b!70998 (= e!46523 (not call!6109))))

(declare-fun bm!6115 () Bool)

(declare-fun call!6105 () ListLongMap!1433)

(assert (=> bm!6115 (= call!6125 call!6105)))

(declare-fun b!70999 () Bool)

(assert (=> b!70999 (= e!46517 e!46519)))

(declare-fun c!10295 () Bool)

(assert (=> b!70999 (= c!10295 (_1!1080 lt!31329))))

(declare-fun bm!6116 () Bool)

(assert (=> bm!6116 (= call!6111 (map!1155 (_2!1080 lt!31329)))))

(declare-fun b!71000 () Bool)

(assert (=> b!71000 (= e!46509 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun bm!6117 () Bool)

(declare-fun call!6121 () Bool)

(assert (=> bm!6117 (= call!6126 call!6121)))

(declare-fun bm!6118 () Bool)

(assert (=> bm!6118 (= call!6110 call!6122)))

(declare-fun b!71001 () Bool)

(assert (=> b!71001 (= e!46519 (= call!6111 call!6112))))

(declare-fun b!71002 () Bool)

(declare-fun res!37887 () Bool)

(assert (=> b!71002 (= res!37887 call!6127)))

(assert (=> b!71002 (=> (not res!37887) (not e!46522))))

(declare-fun b!71003 () Bool)

(assert (=> b!71003 (= e!46526 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31334)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71004 () Bool)

(declare-fun e!46525 () Unit!2006)

(declare-fun Unit!2015 () Unit!2006)

(assert (=> b!71004 (= e!46525 Unit!2015)))

(declare-fun lt!31343 () Unit!2006)

(declare-fun call!6107 () Unit!2006)

(assert (=> b!71004 (= lt!31343 call!6107)))

(assert (=> b!71004 (= lt!31331 call!6106)))

(assert (=> b!71004 (= c!10290 ((_ is MissingZero!245) lt!31331))))

(assert (=> b!71004 e!46510))

(declare-fun lt!31332 () Unit!2006)

(assert (=> b!71004 (= lt!31332 lt!31343)))

(assert (=> b!71004 false))

(declare-fun bm!6119 () Bool)

(assert (=> bm!6119 (= call!6121 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6120 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2006)

(assert (=> bm!6120 (= call!6107 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(declare-fun bm!6121 () Bool)

(assert (=> bm!6121 (= call!6109 call!6121)))

(declare-fun b!71005 () Bool)

(declare-fun res!37892 () Bool)

(assert (=> b!71005 (=> (not res!37892) (not e!46516))))

(assert (=> b!71005 (= res!37892 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3110 lt!31335)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71006 () Bool)

(declare-fun res!37888 () Bool)

(assert (=> b!71006 (=> (not res!37888) (not e!46513))))

(assert (=> b!71006 (= res!37888 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3110 lt!31331)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71007 () Bool)

(declare-fun lt!31347 () Unit!2006)

(declare-fun lt!31323 () Unit!2006)

(assert (=> b!71007 (= lt!31347 lt!31323)))

(assert (=> b!71007 (contains!726 call!6125 (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))))

(declare-fun lt!31326 () array!3882)

(declare-fun lemmaValidKeyInArrayIsInListMap!81 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) Unit!2006)

(assert (=> b!71007 (= lt!31323 (lemmaValidKeyInArrayIsInListMap!81 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (defaultEntry!2192 newMap!16)))))

(assert (=> b!71007 (= lt!31326 (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))))

(declare-fun lt!31337 () Unit!2006)

(declare-fun lt!31344 () Unit!2006)

(assert (=> b!71007 (= lt!31337 lt!31344)))

(assert (=> b!71007 (= call!6122 call!6114)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2006)

(assert (=> b!71007 (= lt!31344 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31341 () Unit!2006)

(assert (=> b!71007 (= lt!31341 e!46525)))

(assert (=> b!71007 (= c!10300 call!6108)))

(assert (=> b!71007 (= e!46508 (tuple2!2141 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (_size!394 newMap!16) (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (_vacant!394 newMap!16))))))

(declare-fun bm!6122 () Bool)

(assert (=> bm!6122 (= call!6105 (getCurrentListMap!425 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun bm!6123 () Bool)

(assert (=> bm!6123 (= call!6127 call!6123)))

(declare-fun b!71008 () Bool)

(declare-fun call!6120 () ListLongMap!1433)

(assert (=> b!71008 (= e!46509 call!6120)))

(declare-fun b!71009 () Bool)

(declare-fun lt!31325 () Unit!2006)

(declare-fun lt!31346 () Unit!2006)

(assert (=> b!71009 (= lt!31325 lt!31346)))

(assert (=> b!71009 (= call!6110 call!6118)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!23 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2006)

(assert (=> b!71009 (= lt!31346 (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31324 (zeroValue!2096 newMap!16) lt!31204 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)))))

(assert (=> b!71009 (= lt!31324 (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!71009 (= e!46507 (tuple2!2141 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) lt!31204 (minValue!2096 newMap!16) (_size!394 newMap!16) (_keys!3840 newMap!16) (_values!2175 newMap!16) (_vacant!394 newMap!16))))))

(declare-fun bm!6124 () Bool)

(assert (=> bm!6124 (= call!6120 call!6105)))

(declare-fun b!71010 () Bool)

(declare-fun res!37881 () Bool)

(assert (=> b!71010 (=> (not res!37881) (not e!46516))))

(assert (=> b!71010 (= res!37881 call!6115)))

(assert (=> b!71010 (= e!46506 e!46516)))

(declare-fun b!71011 () Bool)

(assert (=> b!71011 (= c!10293 ((_ is MissingVacant!245) lt!31339))))

(assert (=> b!71011 (= e!46511 e!46514)))

(declare-fun b!71012 () Bool)

(declare-fun lt!31327 () tuple2!2140)

(assert (=> b!71012 (= e!46514 (tuple2!2141 (_1!1080 lt!31327) (_2!1080 lt!31327)))))

(assert (=> b!71012 (= lt!31327 call!6128)))

(declare-fun b!71013 () Bool)

(assert (=> b!71013 (= e!46513 (not call!6109))))

(declare-fun bm!6125 () Bool)

(assert (=> bm!6125 (= call!6112 (map!1155 newMap!16))))

(declare-fun b!71014 () Bool)

(declare-fun lt!31330 () Unit!2006)

(assert (=> b!71014 (= e!46525 lt!31330)))

(assert (=> b!71014 (= lt!31330 call!6116)))

(assert (=> b!71014 (= lt!31338 call!6106)))

(declare-fun res!37890 () Bool)

(assert (=> b!71014 (= res!37890 ((_ is Found!245) lt!31338))))

(assert (=> b!71014 (=> (not res!37890) (not e!46522))))

(assert (=> b!71014 e!46522))

(declare-fun b!71015 () Bool)

(declare-fun lt!31333 () tuple2!2140)

(assert (=> b!71015 (= lt!31333 call!6128)))

(assert (=> b!71015 (= e!46508 (tuple2!2141 (_1!1080 lt!31333) (_2!1080 lt!31333)))))

(declare-fun b!71016 () Bool)

(assert (=> b!71016 (= e!46521 ((_ is Undefined!245) lt!31335))))

(declare-fun b!71017 () Bool)

(declare-fun c!10301 () Bool)

(assert (=> b!71017 (= c!10301 ((_ is MissingVacant!245) lt!31331))))

(assert (=> b!71017 (= e!46510 e!46515)))

(declare-fun b!71018 () Bool)

(declare-fun lt!31348 () Unit!2006)

(assert (=> b!71018 (= e!46524 lt!31348)))

(assert (=> b!71018 (= lt!31348 call!6107)))

(assert (=> b!71018 (= lt!31335 call!6124)))

(assert (=> b!71018 (= c!10294 ((_ is MissingZero!245) lt!31335))))

(assert (=> b!71018 e!46506))

(declare-fun b!71019 () Bool)

(assert (=> b!71019 (= e!46515 ((_ is Undefined!245) lt!31331))))

(assert (= (and d!15801 c!10291) b!70997))

(assert (= (and d!15801 (not c!10291)) b!70981))

(assert (= (and b!70997 c!10296) b!71009))

(assert (= (and b!70997 (not c!10296)) b!70993))

(assert (= (or b!71009 b!70993) bm!6102))

(assert (= (or b!71009 b!70993) bm!6124))

(assert (= (or b!71009 b!70993) bm!6118))

(assert (= (and b!70981 c!10289) b!70990))

(assert (= (and b!70981 (not c!10289)) b!71011))

(assert (= (and b!70990 c!10299) b!70980))

(assert (= (and b!70990 (not c!10299)) b!71018))

(assert (= (and b!70980 res!37885) b!70982))

(assert (= (and b!70982 res!37893) b!71003))

(assert (= (and b!71018 c!10294) b!71010))

(assert (= (and b!71018 (not c!10294)) b!70987))

(assert (= (and b!71010 res!37881) b!71005))

(assert (= (and b!71005 res!37892) b!70984))

(assert (= (and b!70987 c!10292) b!70979))

(assert (= (and b!70987 (not c!10292)) b!71016))

(assert (= (and b!70979 res!37882) b!70983))

(assert (= (and b!70983 res!37889) b!70986))

(assert (= (or b!71010 b!70979) bm!6113))

(assert (= (or b!70984 b!70986) bm!6117))

(assert (= (or b!70982 bm!6113) bm!6114))

(assert (= (or b!70980 b!71018) bm!6104))

(assert (= (and b!71011 c!10293) b!71012))

(assert (= (and b!71011 (not c!10293)) b!70996))

(assert (= (and b!70996 c!10297) b!71015))

(assert (= (and b!70996 (not c!10297)) b!71007))

(assert (= (and b!71007 c!10300) b!71014))

(assert (= (and b!71007 (not c!10300)) b!71004))

(assert (= (and b!71014 res!37890) b!71002))

(assert (= (and b!71002 res!37887) b!70994))

(assert (= (and b!71004 c!10290) b!70988))

(assert (= (and b!71004 (not c!10290)) b!71017))

(assert (= (and b!70988 res!37894) b!71006))

(assert (= (and b!71006 res!37888) b!71013))

(assert (= (and b!71017 c!10301) b!70989))

(assert (= (and b!71017 (not c!10301)) b!71019))

(assert (= (and b!70989 res!37884) b!70992))

(assert (= (and b!70992 res!37883) b!70998))

(assert (= (or b!70988 b!70989) bm!6107))

(assert (= (or b!71013 b!70998) bm!6121))

(assert (= (or b!71002 bm!6107) bm!6123))

(assert (= (or b!71014 b!71004) bm!6111))

(assert (= (or b!71012 b!71015) bm!6112))

(assert (= (or bm!6114 bm!6123) bm!6103))

(assert (= (or b!71018 b!71004) bm!6120))

(assert (= (or bm!6104 bm!6111) bm!6110))

(assert (= (or bm!6117 bm!6121) bm!6119))

(assert (= (or b!70980 b!71014) bm!6108))

(assert (= (or b!70990 b!71007) bm!6115))

(assert (= (or b!70990 b!71007) bm!6106))

(assert (= (and bm!6106 c!10298) b!70985))

(assert (= (and bm!6106 (not c!10298)) b!70991))

(assert (= (or bm!6124 bm!6115) bm!6122))

(assert (= (or bm!6102 b!71007) bm!6105))

(assert (= (or bm!6118 b!71007) bm!6109))

(assert (= (and bm!6109 c!10288) b!71008))

(assert (= (and bm!6109 (not c!10288)) b!71000))

(assert (= (and d!15801 res!37886) b!70999))

(assert (= (and b!70999 c!10295) b!70978))

(assert (= (and b!70999 (not c!10295)) b!71001))

(assert (= (and b!70978 res!37891) b!70995))

(assert (= (or b!70978 b!70995 b!71001) bm!6116))

(assert (= (or b!70995 b!71001) bm!6125))

(declare-fun m!67861 () Bool)

(assert (=> b!70983 m!67861))

(declare-fun m!67863 () Bool)

(assert (=> d!15801 m!67863))

(assert (=> d!15801 m!67749))

(assert (=> b!70981 m!67713))

(declare-fun m!67865 () Bool)

(assert (=> b!70981 m!67865))

(declare-fun m!67867 () Bool)

(assert (=> b!71009 m!67867))

(declare-fun m!67869 () Bool)

(assert (=> b!71003 m!67869))

(assert (=> b!70978 m!67713))

(declare-fun m!67871 () Bool)

(assert (=> b!70978 m!67871))

(assert (=> bm!6119 m!67713))

(declare-fun m!67873 () Bool)

(assert (=> bm!6119 m!67873))

(declare-fun m!67875 () Bool)

(assert (=> b!70994 m!67875))

(assert (=> bm!6110 m!67713))

(assert (=> bm!6110 m!67865))

(declare-fun m!67877 () Bool)

(assert (=> bm!6103 m!67877))

(declare-fun m!67879 () Bool)

(assert (=> b!71006 m!67879))

(declare-fun m!67881 () Bool)

(assert (=> b!70992 m!67881))

(declare-fun m!67883 () Bool)

(assert (=> bm!6122 m!67883))

(declare-fun m!67885 () Bool)

(assert (=> b!71005 m!67885))

(declare-fun m!67887 () Bool)

(assert (=> bm!6105 m!67887))

(declare-fun m!67889 () Bool)

(assert (=> bm!6105 m!67889))

(declare-fun m!67891 () Bool)

(assert (=> bm!6116 m!67891))

(assert (=> bm!6108 m!67713))

(declare-fun m!67893 () Bool)

(assert (=> bm!6108 m!67893))

(assert (=> bm!6125 m!67763))

(declare-fun m!67895 () Bool)

(assert (=> b!70995 m!67895))

(assert (=> bm!6120 m!67713))

(declare-fun m!67897 () Bool)

(assert (=> bm!6120 m!67897))

(assert (=> bm!6112 m!67713))

(declare-fun m!67899 () Bool)

(assert (=> bm!6112 m!67899))

(declare-fun m!67901 () Bool)

(assert (=> b!71007 m!67901))

(declare-fun m!67903 () Bool)

(assert (=> b!71007 m!67903))

(assert (=> b!71007 m!67713))

(declare-fun m!67905 () Bool)

(assert (=> b!71007 m!67905))

(assert (=> b!71007 m!67903))

(declare-fun m!67907 () Bool)

(assert (=> b!71007 m!67907))

(assert (=> b!71007 m!67887))

(declare-fun m!67909 () Bool)

(assert (=> b!70991 m!67909))

(assert (=> bm!6106 m!67713))

(declare-fun m!67911 () Bool)

(assert (=> bm!6106 m!67911))

(declare-fun m!67913 () Bool)

(assert (=> bm!6109 m!67913))

(assert (=> b!71000 m!67909))

(declare-fun m!67915 () Bool)

(assert (=> b!70993 m!67915))

(assert (=> b!70771 d!15801))

(declare-fun d!15803 () Bool)

(assert (=> d!15803 (= (array_inv!1097 (_keys!3840 newMap!16)) (bvsge (size!2089 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70778 d!15803))

(declare-fun d!15805 () Bool)

(assert (=> d!15805 (= (array_inv!1098 (_values!2175 newMap!16)) (bvsge (size!2090 (_values!2175 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70778 d!15805))

(declare-fun d!15807 () Bool)

(assert (=> d!15807 (= (map!1155 newMap!16) (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun bs!3042 () Bool)

(assert (= bs!3042 d!15807))

(assert (=> bs!3042 m!67909))

(assert (=> b!70761 d!15807))

(declare-fun b!71062 () Bool)

(declare-fun e!46563 () Bool)

(declare-fun e!46554 () Bool)

(assert (=> b!71062 (= e!46563 e!46554)))

(declare-fun res!37914 () Bool)

(declare-fun call!6147 () Bool)

(assert (=> b!71062 (= res!37914 call!6147)))

(assert (=> b!71062 (=> (not res!37914) (not e!46554))))

(declare-fun b!71063 () Bool)

(declare-fun e!46565 () ListLongMap!1433)

(declare-fun call!6143 () ListLongMap!1433)

(assert (=> b!71063 (= e!46565 (+!95 call!6143 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71064 () Bool)

(declare-fun e!46562 () ListLongMap!1433)

(declare-fun call!6148 () ListLongMap!1433)

(assert (=> b!71064 (= e!46562 call!6148)))

(declare-fun b!71065 () Bool)

(declare-fun e!46556 () Unit!2006)

(declare-fun Unit!2016 () Unit!2006)

(assert (=> b!71065 (= e!46556 Unit!2016)))

(declare-fun b!71066 () Bool)

(declare-fun call!6145 () ListLongMap!1433)

(assert (=> b!71066 (= e!46562 call!6145)))

(declare-fun b!71067 () Bool)

(declare-fun e!46558 () Bool)

(assert (=> b!71067 (= e!46558 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!6140 () Bool)

(declare-fun call!6144 () ListLongMap!1433)

(assert (=> bm!6140 (= call!6148 call!6144)))

(declare-fun b!71068 () Bool)

(assert (=> b!71068 (= e!46563 (not call!6147))))

(declare-fun bm!6142 () Bool)

(assert (=> bm!6142 (= call!6145 call!6143)))

(declare-fun bm!6143 () Bool)

(declare-fun call!6149 () ListLongMap!1433)

(assert (=> bm!6143 (= call!6144 call!6149)))

(declare-fun b!71069 () Bool)

(declare-fun e!46561 () Bool)

(declare-fun e!46560 () Bool)

(assert (=> b!71069 (= e!46561 e!46560)))

(declare-fun c!10317 () Bool)

(assert (=> b!71069 (= c!10317 (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6144 () Bool)

(declare-fun lt!31396 () ListLongMap!1433)

(assert (=> bm!6144 (= call!6147 (contains!726 lt!31396 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71070 () Bool)

(declare-fun e!46559 () Bool)

(declare-fun apply!74 (ListLongMap!1433 (_ BitVec 64)) V!2939)

(assert (=> b!71070 (= e!46559 (= (apply!74 lt!31396 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71071 () Bool)

(declare-fun e!46557 () ListLongMap!1433)

(assert (=> b!71071 (= e!46565 e!46557)))

(declare-fun c!10314 () Bool)

(assert (=> b!71071 (= c!10314 (and (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71072 () Bool)

(declare-fun e!46566 () Bool)

(declare-fun e!46555 () Bool)

(assert (=> b!71072 (= e!46566 e!46555)))

(declare-fun res!37915 () Bool)

(assert (=> b!71072 (=> (not res!37915) (not e!46555))))

(assert (=> b!71072 (= res!37915 (contains!726 lt!31396 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71072 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71073 () Bool)

(assert (=> b!71073 (= e!46560 e!46559)))

(declare-fun res!37916 () Bool)

(declare-fun call!6146 () Bool)

(assert (=> b!71073 (= res!37916 call!6146)))

(assert (=> b!71073 (=> (not res!37916) (not e!46559))))

(declare-fun bm!6145 () Bool)

(assert (=> bm!6145 (= call!6146 (contains!726 lt!31396 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71074 () Bool)

(assert (=> b!71074 (= e!46557 call!6145)))

(declare-fun b!71075 () Bool)

(assert (=> b!71075 (= e!46555 (= (apply!74 lt!31396 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71075 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> b!71075 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71076 () Bool)

(declare-fun lt!31406 () Unit!2006)

(assert (=> b!71076 (= e!46556 lt!31406)))

(declare-fun lt!31397 () ListLongMap!1433)

(assert (=> b!71076 (= lt!31397 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun lt!31414 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31414 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31409 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31409 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31410 () Unit!2006)

(declare-fun addStillContains!50 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2006)

(assert (=> b!71076 (= lt!31410 (addStillContains!50 lt!31397 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31409))))

(assert (=> b!71076 (contains!726 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31409)))

(declare-fun lt!31402 () Unit!2006)

(assert (=> b!71076 (= lt!31402 lt!31410)))

(declare-fun lt!31399 () ListLongMap!1433)

(assert (=> b!71076 (= lt!31399 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun lt!31400 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31400 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31401 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31401 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31413 () Unit!2006)

(declare-fun addApplyDifferent!50 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2006)

(assert (=> b!71076 (= lt!31413 (addApplyDifferent!50 lt!31399 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31401))))

(assert (=> b!71076 (= (apply!74 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31401) (apply!74 lt!31399 lt!31401))))

(declare-fun lt!31405 () Unit!2006)

(assert (=> b!71076 (= lt!31405 lt!31413)))

(declare-fun lt!31408 () ListLongMap!1433)

(assert (=> b!71076 (= lt!31408 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun lt!31404 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31404 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31411 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31411 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31403 () Unit!2006)

(assert (=> b!71076 (= lt!31403 (addApplyDifferent!50 lt!31408 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31411))))

(assert (=> b!71076 (= (apply!74 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31411) (apply!74 lt!31408 lt!31411))))

(declare-fun lt!31407 () Unit!2006)

(assert (=> b!71076 (= lt!31407 lt!31403)))

(declare-fun lt!31398 () ListLongMap!1433)

(assert (=> b!71076 (= lt!31398 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun lt!31394 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31394 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31395 () (_ BitVec 64))

(assert (=> b!71076 (= lt!31395 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!71076 (= lt!31406 (addApplyDifferent!50 lt!31398 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31395))))

(assert (=> b!71076 (= (apply!74 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31395) (apply!74 lt!31398 lt!31395))))

(declare-fun b!71077 () Bool)

(assert (=> b!71077 (= e!46560 (not call!6146))))

(declare-fun b!71078 () Bool)

(declare-fun res!37919 () Bool)

(assert (=> b!71078 (=> (not res!37919) (not e!46561))))

(assert (=> b!71078 (= res!37919 e!46566)))

(declare-fun res!37920 () Bool)

(assert (=> b!71078 (=> res!37920 e!46566)))

(assert (=> b!71078 (= res!37920 (not e!46558))))

(declare-fun res!37918 () Bool)

(assert (=> b!71078 (=> (not res!37918) (not e!46558))))

(assert (=> b!71078 (= res!37918 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun bm!6146 () Bool)

(assert (=> bm!6146 (= call!6149 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71079 () Bool)

(declare-fun e!46564 () Bool)

(assert (=> b!71079 (= e!46564 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71080 () Bool)

(declare-fun res!37913 () Bool)

(assert (=> b!71080 (=> (not res!37913) (not e!46561))))

(assert (=> b!71080 (= res!37913 e!46563)))

(declare-fun c!10316 () Bool)

(assert (=> b!71080 (= c!10316 (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!10318 () Bool)

(declare-fun bm!6141 () Bool)

(assert (=> bm!6141 (= call!6143 (+!95 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)) (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun d!15809 () Bool)

(assert (=> d!15809 e!46561))

(declare-fun res!37917 () Bool)

(assert (=> d!15809 (=> (not res!37917) (not e!46561))))

(assert (=> d!15809 (= res!37917 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun lt!31393 () ListLongMap!1433)

(assert (=> d!15809 (= lt!31396 lt!31393)))

(declare-fun lt!31412 () Unit!2006)

(assert (=> d!15809 (= lt!31412 e!46556)))

(declare-fun c!10315 () Bool)

(assert (=> d!15809 (= c!10315 e!46564)))

(declare-fun res!37921 () Bool)

(assert (=> d!15809 (=> (not res!37921) (not e!46564))))

(assert (=> d!15809 (= res!37921 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!15809 (= lt!31393 e!46565)))

(assert (=> d!15809 (= c!10318 (and (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15809 (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992))))))

(assert (=> d!15809 (= (getCurrentListMap!425 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) lt!31396)))

(declare-fun b!71081 () Bool)

(assert (=> b!71081 (= e!46554 (= (apply!74 lt!31396 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71082 () Bool)

(declare-fun c!10319 () Bool)

(assert (=> b!71082 (= c!10319 (and (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!71082 (= e!46557 e!46562)))

(assert (= (and d!15809 c!10318) b!71063))

(assert (= (and d!15809 (not c!10318)) b!71071))

(assert (= (and b!71071 c!10314) b!71074))

(assert (= (and b!71071 (not c!10314)) b!71082))

(assert (= (and b!71082 c!10319) b!71066))

(assert (= (and b!71082 (not c!10319)) b!71064))

(assert (= (or b!71066 b!71064) bm!6140))

(assert (= (or b!71074 bm!6140) bm!6143))

(assert (= (or b!71074 b!71066) bm!6142))

(assert (= (or b!71063 bm!6143) bm!6146))

(assert (= (or b!71063 bm!6142) bm!6141))

(assert (= (and d!15809 res!37921) b!71079))

(assert (= (and d!15809 c!10315) b!71076))

(assert (= (and d!15809 (not c!10315)) b!71065))

(assert (= (and d!15809 res!37917) b!71078))

(assert (= (and b!71078 res!37918) b!71067))

(assert (= (and b!71078 (not res!37920)) b!71072))

(assert (= (and b!71072 res!37915) b!71075))

(assert (= (and b!71078 res!37919) b!71080))

(assert (= (and b!71080 c!10316) b!71062))

(assert (= (and b!71080 (not c!10316)) b!71068))

(assert (= (and b!71062 res!37914) b!71081))

(assert (= (or b!71062 b!71068) bm!6144))

(assert (= (and b!71080 res!37913) b!71069))

(assert (= (and b!71069 c!10317) b!71073))

(assert (= (and b!71069 (not c!10317)) b!71077))

(assert (= (and b!71073 res!37916) b!71070))

(assert (= (or b!71073 b!71077) bm!6145))

(declare-fun b_lambda!3193 () Bool)

(assert (=> (not b_lambda!3193) (not b!71075)))

(assert (=> b!71075 t!5040))

(declare-fun b_and!4373 () Bool)

(assert (= b_and!4361 (and (=> t!5040 result!2655) b_and!4373)))

(assert (=> b!71075 t!5042))

(declare-fun b_and!4375 () Bool)

(assert (= b_and!4363 (and (=> t!5042 result!2659) b_and!4375)))

(assert (=> b!71072 m!67827))

(assert (=> b!71072 m!67827))

(declare-fun m!67917 () Bool)

(assert (=> b!71072 m!67917))

(declare-fun m!67919 () Bool)

(assert (=> bm!6144 m!67919))

(declare-fun m!67921 () Bool)

(assert (=> bm!6145 m!67921))

(assert (=> b!71067 m!67827))

(assert (=> b!71067 m!67827))

(declare-fun m!67923 () Bool)

(assert (=> b!71067 m!67923))

(assert (=> b!71076 m!67827))

(declare-fun m!67925 () Bool)

(assert (=> b!71076 m!67925))

(declare-fun m!67927 () Bool)

(assert (=> b!71076 m!67927))

(declare-fun m!67929 () Bool)

(assert (=> b!71076 m!67929))

(declare-fun m!67931 () Bool)

(assert (=> b!71076 m!67931))

(declare-fun m!67933 () Bool)

(assert (=> b!71076 m!67933))

(declare-fun m!67935 () Bool)

(assert (=> b!71076 m!67935))

(assert (=> b!71076 m!67929))

(declare-fun m!67937 () Bool)

(assert (=> b!71076 m!67937))

(declare-fun m!67939 () Bool)

(assert (=> b!71076 m!67939))

(assert (=> b!71076 m!67935))

(declare-fun m!67941 () Bool)

(assert (=> b!71076 m!67941))

(declare-fun m!67943 () Bool)

(assert (=> b!71076 m!67943))

(declare-fun m!67945 () Bool)

(assert (=> b!71076 m!67945))

(assert (=> b!71076 m!67943))

(declare-fun m!67947 () Bool)

(assert (=> b!71076 m!67947))

(declare-fun m!67949 () Bool)

(assert (=> b!71076 m!67949))

(declare-fun m!67951 () Bool)

(assert (=> b!71076 m!67951))

(declare-fun m!67953 () Bool)

(assert (=> b!71076 m!67953))

(assert (=> b!71076 m!67747))

(assert (=> b!71076 m!67947))

(assert (=> bm!6146 m!67747))

(declare-fun m!67955 () Bool)

(assert (=> bm!6141 m!67955))

(declare-fun m!67957 () Bool)

(assert (=> b!71081 m!67957))

(declare-fun m!67959 () Bool)

(assert (=> b!71070 m!67959))

(declare-fun m!67961 () Bool)

(assert (=> b!71075 m!67961))

(assert (=> b!71075 m!67961))

(assert (=> b!71075 m!67717))

(declare-fun m!67963 () Bool)

(assert (=> b!71075 m!67963))

(assert (=> b!71075 m!67717))

(assert (=> b!71075 m!67827))

(assert (=> b!71075 m!67827))

(declare-fun m!67965 () Bool)

(assert (=> b!71075 m!67965))

(assert (=> b!71079 m!67827))

(assert (=> b!71079 m!67827))

(assert (=> b!71079 m!67923))

(assert (=> d!15809 m!67739))

(declare-fun m!67967 () Bool)

(assert (=> b!71063 m!67967))

(assert (=> b!70761 d!15809))

(declare-fun d!15811 () Bool)

(declare-fun e!46569 () Bool)

(assert (=> d!15811 e!46569))

(declare-fun res!37927 () Bool)

(assert (=> d!15811 (=> (not res!37927) (not e!46569))))

(declare-fun lt!31426 () ListLongMap!1433)

(assert (=> d!15811 (= res!37927 (contains!726 lt!31426 (_1!1079 lt!31205)))))

(declare-fun lt!31425 () List!1504)

(assert (=> d!15811 (= lt!31426 (ListLongMap!1434 lt!31425))))

(declare-fun lt!31424 () Unit!2006)

(declare-fun lt!31423 () Unit!2006)

(assert (=> d!15811 (= lt!31424 lt!31423)))

(assert (=> d!15811 (= (getValueByKey!131 lt!31425 (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205)))))

(declare-fun lemmaContainsTupThenGetReturnValue!50 (List!1504 (_ BitVec 64) V!2939) Unit!2006)

(assert (=> d!15811 (= lt!31423 (lemmaContainsTupThenGetReturnValue!50 lt!31425 (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(declare-fun insertStrictlySorted!52 (List!1504 (_ BitVec 64) V!2939) List!1504)

(assert (=> d!15811 (= lt!31425 (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 lt!31200)) (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(assert (=> d!15811 (= (+!95 (+!95 lt!31210 lt!31200) lt!31205) lt!31426)))

(declare-fun b!71087 () Bool)

(declare-fun res!37926 () Bool)

(assert (=> b!71087 (=> (not res!37926) (not e!46569))))

(assert (=> b!71087 (= res!37926 (= (getValueByKey!131 (toList!732 lt!31426) (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205))))))

(declare-fun b!71088 () Bool)

(declare-fun contains!728 (List!1504 tuple2!2138) Bool)

(assert (=> b!71088 (= e!46569 (contains!728 (toList!732 lt!31426) lt!31205))))

(assert (= (and d!15811 res!37927) b!71087))

(assert (= (and b!71087 res!37926) b!71088))

(declare-fun m!67969 () Bool)

(assert (=> d!15811 m!67969))

(declare-fun m!67971 () Bool)

(assert (=> d!15811 m!67971))

(declare-fun m!67973 () Bool)

(assert (=> d!15811 m!67973))

(declare-fun m!67975 () Bool)

(assert (=> d!15811 m!67975))

(declare-fun m!67977 () Bool)

(assert (=> b!71087 m!67977))

(declare-fun m!67979 () Bool)

(assert (=> b!71088 m!67979))

(assert (=> b!70776 d!15811))

(declare-fun b!71113 () Bool)

(declare-fun e!46588 () ListLongMap!1433)

(declare-fun call!6152 () ListLongMap!1433)

(assert (=> b!71113 (= e!46588 call!6152)))

(declare-fun b!71114 () Bool)

(declare-fun e!46590 () Bool)

(declare-fun e!46585 () Bool)

(assert (=> b!71114 (= e!46590 e!46585)))

(assert (=> b!71114 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun res!37937 () Bool)

(declare-fun lt!31442 () ListLongMap!1433)

(assert (=> b!71114 (= res!37937 (contains!726 lt!31442 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71114 (=> (not res!37937) (not e!46585))))

(declare-fun b!71116 () Bool)

(assert (=> b!71116 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> b!71116 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> b!71116 (= e!46585 (= (apply!74 lt!31442 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71117 () Bool)

(declare-fun e!46584 () Bool)

(assert (=> b!71117 (= e!46584 (= lt!31442 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun bm!6149 () Bool)

(assert (=> bm!6149 (= call!6152 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71118 () Bool)

(declare-fun e!46589 () ListLongMap!1433)

(assert (=> b!71118 (= e!46589 (ListLongMap!1434 Nil!1501))))

(declare-fun b!71119 () Bool)

(declare-fun isEmpty!318 (ListLongMap!1433) Bool)

(assert (=> b!71119 (= e!46584 (isEmpty!318 lt!31442))))

(declare-fun b!71120 () Bool)

(assert (=> b!71120 (= e!46590 e!46584)))

(declare-fun c!10329 () Bool)

(assert (=> b!71120 (= c!10329 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71121 () Bool)

(declare-fun e!46587 () Bool)

(assert (=> b!71121 (= e!46587 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71121 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!71122 () Bool)

(declare-fun lt!31447 () Unit!2006)

(declare-fun lt!31445 () Unit!2006)

(assert (=> b!71122 (= lt!31447 lt!31445)))

(declare-fun lt!31446 () ListLongMap!1433)

(declare-fun lt!31443 () (_ BitVec 64))

(declare-fun lt!31444 () (_ BitVec 64))

(declare-fun lt!31441 () V!2939)

(assert (=> b!71122 (not (contains!726 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)) lt!31443))))

(declare-fun addStillNotContains!25 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2006)

(assert (=> b!71122 (= lt!31445 (addStillNotContains!25 lt!31446 lt!31444 lt!31441 lt!31443))))

(assert (=> b!71122 (= lt!31443 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71122 (= lt!31441 (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71122 (= lt!31444 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!71122 (= lt!31446 call!6152)))

(assert (=> b!71122 (= e!46588 (+!95 call!6152 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71123 () Bool)

(assert (=> b!71123 (= e!46589 e!46588)))

(declare-fun c!10331 () Bool)

(assert (=> b!71123 (= c!10331 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71124 () Bool)

(declare-fun e!46586 () Bool)

(assert (=> b!71124 (= e!46586 e!46590)))

(declare-fun c!10330 () Bool)

(assert (=> b!71124 (= c!10330 e!46587)))

(declare-fun res!37936 () Bool)

(assert (=> b!71124 (=> (not res!37936) (not e!46587))))

(assert (=> b!71124 (= res!37936 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71115 () Bool)

(declare-fun res!37939 () Bool)

(assert (=> b!71115 (=> (not res!37939) (not e!46586))))

(assert (=> b!71115 (= res!37939 (not (contains!726 lt!31442 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!15813 () Bool)

(assert (=> d!15813 e!46586))

(declare-fun res!37938 () Bool)

(assert (=> d!15813 (=> (not res!37938) (not e!46586))))

(assert (=> d!15813 (= res!37938 (not (contains!726 lt!31442 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15813 (= lt!31442 e!46589)))

(declare-fun c!10328 () Bool)

(assert (=> d!15813 (= c!10328 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!15813 (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992))))))

(assert (=> d!15813 (= (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) lt!31442)))

(assert (= (and d!15813 c!10328) b!71118))

(assert (= (and d!15813 (not c!10328)) b!71123))

(assert (= (and b!71123 c!10331) b!71122))

(assert (= (and b!71123 (not c!10331)) b!71113))

(assert (= (or b!71122 b!71113) bm!6149))

(assert (= (and d!15813 res!37938) b!71115))

(assert (= (and b!71115 res!37939) b!71124))

(assert (= (and b!71124 res!37936) b!71121))

(assert (= (and b!71124 c!10330) b!71114))

(assert (= (and b!71124 (not c!10330)) b!71120))

(assert (= (and b!71114 res!37937) b!71116))

(assert (= (and b!71120 c!10329) b!71117))

(assert (= (and b!71120 (not c!10329)) b!71119))

(declare-fun b_lambda!3195 () Bool)

(assert (=> (not b_lambda!3195) (not b!71116)))

(assert (=> b!71116 t!5040))

(declare-fun b_and!4377 () Bool)

(assert (= b_and!4373 (and (=> t!5040 result!2655) b_and!4377)))

(assert (=> b!71116 t!5042))

(declare-fun b_and!4379 () Bool)

(assert (= b_and!4375 (and (=> t!5042 result!2659) b_and!4379)))

(declare-fun b_lambda!3197 () Bool)

(assert (=> (not b_lambda!3197) (not b!71122)))

(assert (=> b!71122 t!5040))

(declare-fun b_and!4381 () Bool)

(assert (= b_and!4377 (and (=> t!5040 result!2655) b_and!4381)))

(assert (=> b!71122 t!5042))

(declare-fun b_and!4383 () Bool)

(assert (= b_and!4379 (and (=> t!5042 result!2659) b_and!4383)))

(declare-fun m!67981 () Bool)

(assert (=> b!71117 m!67981))

(assert (=> b!71123 m!67827))

(assert (=> b!71123 m!67827))

(assert (=> b!71123 m!67923))

(assert (=> b!71116 m!67827))

(assert (=> b!71116 m!67717))

(assert (=> b!71116 m!67827))

(declare-fun m!67983 () Bool)

(assert (=> b!71116 m!67983))

(assert (=> b!71116 m!67961))

(assert (=> b!71116 m!67717))

(assert (=> b!71116 m!67963))

(assert (=> b!71116 m!67961))

(declare-fun m!67985 () Bool)

(assert (=> d!15813 m!67985))

(assert (=> d!15813 m!67739))

(assert (=> b!71114 m!67827))

(assert (=> b!71114 m!67827))

(declare-fun m!67987 () Bool)

(assert (=> b!71114 m!67987))

(assert (=> b!71121 m!67827))

(assert (=> b!71121 m!67827))

(assert (=> b!71121 m!67923))

(assert (=> bm!6149 m!67981))

(declare-fun m!67989 () Bool)

(assert (=> b!71115 m!67989))

(declare-fun m!67991 () Bool)

(assert (=> b!71119 m!67991))

(assert (=> b!71122 m!67827))

(assert (=> b!71122 m!67717))

(declare-fun m!67993 () Bool)

(assert (=> b!71122 m!67993))

(declare-fun m!67995 () Bool)

(assert (=> b!71122 m!67995))

(assert (=> b!71122 m!67961))

(assert (=> b!71122 m!67717))

(assert (=> b!71122 m!67963))

(assert (=> b!71122 m!67961))

(declare-fun m!67997 () Bool)

(assert (=> b!71122 m!67997))

(assert (=> b!71122 m!67993))

(declare-fun m!67999 () Bool)

(assert (=> b!71122 m!67999))

(assert (=> b!70776 d!15813))

(declare-fun d!15815 () Bool)

(declare-fun e!46591 () Bool)

(assert (=> d!15815 e!46591))

(declare-fun res!37941 () Bool)

(assert (=> d!15815 (=> (not res!37941) (not e!46591))))

(declare-fun lt!31451 () ListLongMap!1433)

(assert (=> d!15815 (= res!37941 (contains!726 lt!31451 (_1!1079 lt!31200)))))

(declare-fun lt!31450 () List!1504)

(assert (=> d!15815 (= lt!31451 (ListLongMap!1434 lt!31450))))

(declare-fun lt!31449 () Unit!2006)

(declare-fun lt!31448 () Unit!2006)

(assert (=> d!15815 (= lt!31449 lt!31448)))

(assert (=> d!15815 (= (getValueByKey!131 lt!31450 (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200)))))

(assert (=> d!15815 (= lt!31448 (lemmaContainsTupThenGetReturnValue!50 lt!31450 (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(assert (=> d!15815 (= lt!31450 (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 lt!31205)) (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(assert (=> d!15815 (= (+!95 (+!95 lt!31210 lt!31205) lt!31200) lt!31451)))

(declare-fun b!71125 () Bool)

(declare-fun res!37940 () Bool)

(assert (=> b!71125 (=> (not res!37940) (not e!46591))))

(assert (=> b!71125 (= res!37940 (= (getValueByKey!131 (toList!732 lt!31451) (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200))))))

(declare-fun b!71126 () Bool)

(assert (=> b!71126 (= e!46591 (contains!728 (toList!732 lt!31451) lt!31200))))

(assert (= (and d!15815 res!37941) b!71125))

(assert (= (and b!71125 res!37940) b!71126))

(declare-fun m!68001 () Bool)

(assert (=> d!15815 m!68001))

(declare-fun m!68003 () Bool)

(assert (=> d!15815 m!68003))

(declare-fun m!68005 () Bool)

(assert (=> d!15815 m!68005))

(declare-fun m!68007 () Bool)

(assert (=> d!15815 m!68007))

(declare-fun m!68009 () Bool)

(assert (=> b!71125 m!68009))

(declare-fun m!68011 () Bool)

(assert (=> b!71126 m!68011))

(assert (=> b!70776 d!15815))

(declare-fun d!15817 () Bool)

(assert (=> d!15817 (= (+!95 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (+!95 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(declare-fun lt!31454 () Unit!2006)

(declare-fun choose!404 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64) V!2939) Unit!2006)

(assert (=> d!15817 (= lt!31454 (choose!404 lt!31210 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))

(assert (=> d!15817 (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15817 (= (addCommutativeForDiffKeys!14 lt!31210 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) lt!31454)))

(declare-fun bs!3043 () Bool)

(assert (= bs!3043 d!15817))

(declare-fun m!68013 () Bool)

(assert (=> bs!3043 m!68013))

(declare-fun m!68015 () Bool)

(assert (=> bs!3043 m!68015))

(assert (=> bs!3043 m!67713))

(declare-fun m!68017 () Bool)

(assert (=> bs!3043 m!68017))

(assert (=> bs!3043 m!68013))

(declare-fun m!68019 () Bool)

(assert (=> bs!3043 m!68019))

(declare-fun m!68021 () Bool)

(assert (=> bs!3043 m!68021))

(assert (=> bs!3043 m!68019))

(assert (=> b!70776 d!15817))

(declare-fun d!15819 () Bool)

(declare-fun e!46592 () Bool)

(assert (=> d!15819 e!46592))

(declare-fun res!37943 () Bool)

(assert (=> d!15819 (=> (not res!37943) (not e!46592))))

(declare-fun lt!31458 () ListLongMap!1433)

(assert (=> d!15819 (= res!37943 (contains!726 lt!31458 (_1!1079 lt!31205)))))

(declare-fun lt!31457 () List!1504)

(assert (=> d!15819 (= lt!31458 (ListLongMap!1434 lt!31457))))

(declare-fun lt!31456 () Unit!2006)

(declare-fun lt!31455 () Unit!2006)

(assert (=> d!15819 (= lt!31456 lt!31455)))

(assert (=> d!15819 (= (getValueByKey!131 lt!31457 (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205)))))

(assert (=> d!15819 (= lt!31455 (lemmaContainsTupThenGetReturnValue!50 lt!31457 (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(assert (=> d!15819 (= lt!31457 (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(assert (=> d!15819 (= (+!95 lt!31210 lt!31205) lt!31458)))

(declare-fun b!71127 () Bool)

(declare-fun res!37942 () Bool)

(assert (=> b!71127 (=> (not res!37942) (not e!46592))))

(assert (=> b!71127 (= res!37942 (= (getValueByKey!131 (toList!732 lt!31458) (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205))))))

(declare-fun b!71128 () Bool)

(assert (=> b!71128 (= e!46592 (contains!728 (toList!732 lt!31458) lt!31205))))

(assert (= (and d!15819 res!37943) b!71127))

(assert (= (and b!71127 res!37942) b!71128))

(declare-fun m!68023 () Bool)

(assert (=> d!15819 m!68023))

(declare-fun m!68025 () Bool)

(assert (=> d!15819 m!68025))

(declare-fun m!68027 () Bool)

(assert (=> d!15819 m!68027))

(declare-fun m!68029 () Bool)

(assert (=> d!15819 m!68029))

(declare-fun m!68031 () Bool)

(assert (=> b!71127 m!68031))

(declare-fun m!68033 () Bool)

(assert (=> b!71128 m!68033))

(assert (=> b!70776 d!15819))

(declare-fun d!15821 () Bool)

(declare-fun e!46593 () Bool)

(assert (=> d!15821 e!46593))

(declare-fun res!37945 () Bool)

(assert (=> d!15821 (=> (not res!37945) (not e!46593))))

(declare-fun lt!31462 () ListLongMap!1433)

(assert (=> d!15821 (= res!37945 (contains!726 lt!31462 (_1!1079 lt!31200)))))

(declare-fun lt!31461 () List!1504)

(assert (=> d!15821 (= lt!31462 (ListLongMap!1434 lt!31461))))

(declare-fun lt!31460 () Unit!2006)

(declare-fun lt!31459 () Unit!2006)

(assert (=> d!15821 (= lt!31460 lt!31459)))

(assert (=> d!15821 (= (getValueByKey!131 lt!31461 (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200)))))

(assert (=> d!15821 (= lt!31459 (lemmaContainsTupThenGetReturnValue!50 lt!31461 (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(assert (=> d!15821 (= lt!31461 (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(assert (=> d!15821 (= (+!95 lt!31210 lt!31200) lt!31462)))

(declare-fun b!71129 () Bool)

(declare-fun res!37944 () Bool)

(assert (=> b!71129 (=> (not res!37944) (not e!46593))))

(assert (=> b!71129 (= res!37944 (= (getValueByKey!131 (toList!732 lt!31462) (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200))))))

(declare-fun b!71130 () Bool)

(assert (=> b!71130 (= e!46593 (contains!728 (toList!732 lt!31462) lt!31200))))

(assert (= (and d!15821 res!37945) b!71129))

(assert (= (and b!71129 res!37944) b!71130))

(declare-fun m!68035 () Bool)

(assert (=> d!15821 m!68035))

(declare-fun m!68037 () Bool)

(assert (=> d!15821 m!68037))

(declare-fun m!68039 () Bool)

(assert (=> d!15821 m!68039))

(declare-fun m!68041 () Bool)

(assert (=> d!15821 m!68041))

(declare-fun m!68043 () Bool)

(assert (=> b!71129 m!68043))

(declare-fun m!68045 () Bool)

(assert (=> b!71130 m!68045))

(assert (=> b!70776 d!15821))

(declare-fun d!15823 () Bool)

(assert (=> d!15823 (= (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992)))) (and (or (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000001111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000011111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000001111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000011111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000001111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000011111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000001111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000011111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000001111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000011111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000001111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000011111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000001111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000011111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000111111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000001111111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000011111111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000111111111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00001111111111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00011111111111111111111111111111) (= (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!70776 d!15823))

(declare-fun condMapEmpty!3155 () Bool)

(declare-fun mapDefault!3155 () ValueCell!891)

(assert (=> mapNonEmpty!3145 (= condMapEmpty!3155 (= mapRest!3145 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3155)))))

(declare-fun e!46598 () Bool)

(declare-fun mapRes!3155 () Bool)

(assert (=> mapNonEmpty!3145 (= tp!8486 (and e!46598 mapRes!3155))))

(declare-fun b!71138 () Bool)

(assert (=> b!71138 (= e!46598 tp_is_empty!2469)))

(declare-fun b!71137 () Bool)

(declare-fun e!46599 () Bool)

(assert (=> b!71137 (= e!46599 tp_is_empty!2469)))

(declare-fun mapIsEmpty!3155 () Bool)

(assert (=> mapIsEmpty!3155 mapRes!3155))

(declare-fun mapNonEmpty!3155 () Bool)

(declare-fun tp!8501 () Bool)

(assert (=> mapNonEmpty!3155 (= mapRes!3155 (and tp!8501 e!46599))))

(declare-fun mapKey!3155 () (_ BitVec 32))

(declare-fun mapValue!3155 () ValueCell!891)

(declare-fun mapRest!3155 () (Array (_ BitVec 32) ValueCell!891))

(assert (=> mapNonEmpty!3155 (= mapRest!3145 (store mapRest!3155 mapKey!3155 mapValue!3155))))

(assert (= (and mapNonEmpty!3145 condMapEmpty!3155) mapIsEmpty!3155))

(assert (= (and mapNonEmpty!3145 (not condMapEmpty!3155)) mapNonEmpty!3155))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!891) mapValue!3155)) b!71137))

(assert (= (and mapNonEmpty!3145 ((_ is ValueCellFull!891) mapDefault!3155)) b!71138))

(declare-fun m!68047 () Bool)

(assert (=> mapNonEmpty!3155 m!68047))

(declare-fun condMapEmpty!3156 () Bool)

(declare-fun mapDefault!3156 () ValueCell!891)

(assert (=> mapNonEmpty!3146 (= condMapEmpty!3156 (= mapRest!3146 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3156)))))

(declare-fun e!46600 () Bool)

(declare-fun mapRes!3156 () Bool)

(assert (=> mapNonEmpty!3146 (= tp!8484 (and e!46600 mapRes!3156))))

(declare-fun b!71140 () Bool)

(assert (=> b!71140 (= e!46600 tp_is_empty!2469)))

(declare-fun b!71139 () Bool)

(declare-fun e!46601 () Bool)

(assert (=> b!71139 (= e!46601 tp_is_empty!2469)))

(declare-fun mapIsEmpty!3156 () Bool)

(assert (=> mapIsEmpty!3156 mapRes!3156))

(declare-fun mapNonEmpty!3156 () Bool)

(declare-fun tp!8502 () Bool)

(assert (=> mapNonEmpty!3156 (= mapRes!3156 (and tp!8502 e!46601))))

(declare-fun mapKey!3156 () (_ BitVec 32))

(declare-fun mapRest!3156 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapValue!3156 () ValueCell!891)

(assert (=> mapNonEmpty!3156 (= mapRest!3146 (store mapRest!3156 mapKey!3156 mapValue!3156))))

(assert (= (and mapNonEmpty!3146 condMapEmpty!3156) mapIsEmpty!3156))

(assert (= (and mapNonEmpty!3146 (not condMapEmpty!3156)) mapNonEmpty!3156))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!891) mapValue!3156)) b!71139))

(assert (= (and mapNonEmpty!3146 ((_ is ValueCellFull!891) mapDefault!3156)) b!71140))

(declare-fun m!68049 () Bool)

(assert (=> mapNonEmpty!3156 m!68049))

(declare-fun b_lambda!3199 () Bool)

(assert (= b_lambda!3195 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3199)))

(declare-fun b_lambda!3201 () Bool)

(assert (= b_lambda!3197 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3201)))

(declare-fun b_lambda!3203 () Bool)

(assert (= b_lambda!3193 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3203)))

(check-sat tp_is_empty!2469 (not b!70877) (not b!70867) (not b!71072) (not b!71126) (not bm!6109) (not bm!6125) (not d!15807) (not b!71130) (not b!70869) (not b!71123) (not b!71070) (not d!15813) (not b!71114) (not bm!6141) (not d!15809) (not b!70883) (not b!70981) (not bm!6146) (not mapNonEmpty!3156) (not bm!6103) (not b!70991) (not b!71079) (not bm!6106) (not d!15821) (not b!71009) (not b!71116) (not d!15799) (not d!15819) b_and!4381 (not b!71127) (not b!71081) (not bm!6053) (not bm!6120) (not b!70995) (not b!71121) (not d!15801) b_and!4383 (not d!15815) (not b!70884) (not b!70893) (not b!71119) (not b!70993) (not d!15797) (not d!15811) (not bm!6112) (not b_lambda!3203) (not b!71007) (not b!70853) (not b!71075) (not b_lambda!3201) (not bm!6105) (not b!71117) (not b!71088) (not bm!6122) (not b!71115) (not b!71128) (not b!71000) (not bm!6119) (not d!15779) (not b!70978) (not bm!6149) (not bm!6145) (not d!15785) (not bm!6144) (not b_lambda!3199) (not b!70891) (not b!71122) (not d!15817) (not bm!6116) (not b!71125) (not d!15781) (not b!70878) (not b_lambda!3191) (not bm!6108) (not b!71067) (not b!71087) (not b_next!2105) (not d!15789) (not b!71129) (not b!71076) (not b_next!2107) (not b!71063) (not bm!6110) (not b!70848) (not b!70865) (not mapNonEmpty!3155) (not b!70876))
(check-sat b_and!4381 b_and!4383 (not b_next!2105) (not b_next!2107))
(get-model)

(declare-fun d!15825 () Bool)

(assert (=> d!15825 (isDefined!85 (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun lt!31465 () Unit!2006)

(declare-fun choose!405 (List!1504 (_ BitVec 64)) Unit!2006)

(assert (=> d!15825 (= lt!31465 (choose!405 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun e!46604 () Bool)

(assert (=> d!15825 e!46604))

(declare-fun res!37948 () Bool)

(assert (=> d!15825 (=> (not res!37948) (not e!46604))))

(declare-fun isStrictlySorted!286 (List!1504) Bool)

(assert (=> d!15825 (= res!37948 (isStrictlySorted!286 (toList!732 lt!31199)))))

(assert (=> d!15825 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31465)))

(declare-fun b!71143 () Bool)

(assert (=> b!71143 (= e!46604 (containsKey!135 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!15825 res!37948) b!71143))

(assert (=> d!15825 m!67713))

(assert (=> d!15825 m!67857))

(assert (=> d!15825 m!67857))

(assert (=> d!15825 m!67859))

(assert (=> d!15825 m!67713))

(declare-fun m!68051 () Bool)

(assert (=> d!15825 m!68051))

(declare-fun m!68053 () Bool)

(assert (=> d!15825 m!68053))

(assert (=> b!71143 m!67713))

(assert (=> b!71143 m!67853))

(assert (=> b!70891 d!15825))

(declare-fun d!15827 () Bool)

(declare-fun isEmpty!319 (Option!137) Bool)

(assert (=> d!15827 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(declare-fun bs!3044 () Bool)

(assert (= bs!3044 d!15827))

(assert (=> bs!3044 m!67857))

(declare-fun m!68055 () Bool)

(assert (=> bs!3044 m!68055))

(assert (=> b!70891 d!15827))

(declare-fun c!10336 () Bool)

(declare-fun d!15829 () Bool)

(assert (=> d!15829 (= c!10336 (and ((_ is Cons!1500) (toList!732 lt!31199)) (= (_1!1079 (h!2086 (toList!732 lt!31199))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun e!46609 () Option!137)

(assert (=> d!15829 (= (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!46609)))

(declare-fun b!71152 () Bool)

(assert (=> b!71152 (= e!46609 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31199)))))))

(declare-fun e!46610 () Option!137)

(declare-fun b!71154 () Bool)

(assert (=> b!71154 (= e!46610 (getValueByKey!131 (t!5044 (toList!732 lt!31199)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71153 () Bool)

(assert (=> b!71153 (= e!46609 e!46610)))

(declare-fun c!10337 () Bool)

(assert (=> b!71153 (= c!10337 (and ((_ is Cons!1500) (toList!732 lt!31199)) (not (= (_1!1079 (h!2086 (toList!732 lt!31199))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(declare-fun b!71155 () Bool)

(assert (=> b!71155 (= e!46610 None!135)))

(assert (= (and d!15829 c!10336) b!71152))

(assert (= (and d!15829 (not c!10336)) b!71153))

(assert (= (and b!71153 c!10337) b!71154))

(assert (= (and b!71153 (not c!10337)) b!71155))

(assert (=> b!71154 m!67713))

(declare-fun m!68057 () Bool)

(assert (=> b!71154 m!68057))

(assert (=> b!70891 d!15829))

(declare-fun d!15831 () Bool)

(declare-fun get!1150 (Option!137) V!2939)

(assert (=> d!15831 (= (apply!74 lt!31442 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1150 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3045 () Bool)

(assert (= bs!3045 d!15831))

(assert (=> bs!3045 m!67827))

(declare-fun m!68059 () Bool)

(assert (=> bs!3045 m!68059))

(assert (=> bs!3045 m!68059))

(declare-fun m!68061 () Bool)

(assert (=> bs!3045 m!68061))

(assert (=> b!71116 d!15831))

(declare-fun d!15833 () Bool)

(declare-fun c!10338 () Bool)

(assert (=> d!15833 (= c!10338 ((_ is ValueCellFull!891) (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!46611 () V!2939)

(assert (=> d!15833 (= (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46611)))

(declare-fun b!71156 () Bool)

(assert (=> b!71156 (= e!46611 (get!1148 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71157 () Bool)

(assert (=> b!71157 (= e!46611 (get!1149 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15833 c!10338) b!71156))

(assert (= (and d!15833 (not c!10338)) b!71157))

(assert (=> b!71156 m!67961))

(assert (=> b!71156 m!67717))

(declare-fun m!68063 () Bool)

(assert (=> b!71156 m!68063))

(assert (=> b!71157 m!67961))

(assert (=> b!71157 m!67717))

(declare-fun m!68065 () Bool)

(assert (=> b!71157 m!68065))

(assert (=> b!71116 d!15833))

(declare-fun b!71166 () Bool)

(declare-fun e!46618 () Bool)

(declare-fun call!6155 () Bool)

(assert (=> b!71166 (= e!46618 call!6155)))

(declare-fun b!71167 () Bool)

(declare-fun e!46620 () Bool)

(assert (=> b!71167 (= e!46620 call!6155)))

(declare-fun b!71168 () Bool)

(assert (=> b!71168 (= e!46620 e!46618)))

(declare-fun lt!31473 () (_ BitVec 64))

(assert (=> b!71168 (= lt!31473 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31474 () Unit!2006)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3880 (_ BitVec 64) (_ BitVec 32)) Unit!2006)

(assert (=> b!71168 (= lt!31474 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 newMap!16) lt!31473 #b00000000000000000000000000000000))))

(assert (=> b!71168 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31473 #b00000000000000000000000000000000)))

(declare-fun lt!31472 () Unit!2006)

(assert (=> b!71168 (= lt!31472 lt!31474)))

(declare-fun res!37954 () Bool)

(assert (=> b!71168 (= res!37954 (= (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!71168 (=> (not res!37954) (not e!46618))))

(declare-fun bm!6152 () Bool)

(assert (=> bm!6152 (= call!6155 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun d!15835 () Bool)

(declare-fun res!37953 () Bool)

(declare-fun e!46619 () Bool)

(assert (=> d!15835 (=> res!37953 e!46619)))

(assert (=> d!15835 (= res!37953 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!15835 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 newMap!16) (mask!6149 newMap!16)) e!46619)))

(declare-fun b!71169 () Bool)

(assert (=> b!71169 (= e!46619 e!46620)))

(declare-fun c!10341 () Bool)

(assert (=> b!71169 (= c!10341 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15835 (not res!37953)) b!71169))

(assert (= (and b!71169 c!10341) b!71168))

(assert (= (and b!71169 (not c!10341)) b!71167))

(assert (= (and b!71168 res!37954) b!71166))

(assert (= (or b!71166 b!71167) bm!6152))

(declare-fun m!68067 () Bool)

(assert (=> b!71168 m!68067))

(declare-fun m!68069 () Bool)

(assert (=> b!71168 m!68069))

(declare-fun m!68071 () Bool)

(assert (=> b!71168 m!68071))

(assert (=> b!71168 m!68067))

(declare-fun m!68073 () Bool)

(assert (=> b!71168 m!68073))

(declare-fun m!68075 () Bool)

(assert (=> bm!6152 m!68075))

(assert (=> b!71169 m!68067))

(assert (=> b!71169 m!68067))

(declare-fun m!68077 () Bool)

(assert (=> b!71169 m!68077))

(assert (=> b!70877 d!15835))

(assert (=> bm!6125 d!15807))

(declare-fun b!71170 () Bool)

(declare-fun e!46625 () ListLongMap!1433)

(declare-fun call!6156 () ListLongMap!1433)

(assert (=> b!71170 (= e!46625 call!6156)))

(declare-fun b!71171 () Bool)

(declare-fun e!46627 () Bool)

(declare-fun e!46622 () Bool)

(assert (=> b!71171 (= e!46627 e!46622)))

(assert (=> b!71171 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun res!37956 () Bool)

(declare-fun lt!31476 () ListLongMap!1433)

(assert (=> b!71171 (= res!37956 (contains!726 lt!31476 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71171 (=> (not res!37956) (not e!46622))))

(declare-fun b!71173 () Bool)

(assert (=> b!71173 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> b!71173 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> b!71173 (= e!46622 (= (apply!74 lt!31476 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71174 () Bool)

(declare-fun e!46621 () Bool)

(assert (=> b!71174 (= e!46621 (= lt!31476 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun bm!6153 () Bool)

(assert (=> bm!6153 (= call!6156 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71175 () Bool)

(declare-fun e!46626 () ListLongMap!1433)

(assert (=> b!71175 (= e!46626 (ListLongMap!1434 Nil!1501))))

(declare-fun b!71176 () Bool)

(assert (=> b!71176 (= e!46621 (isEmpty!318 lt!31476))))

(declare-fun b!71177 () Bool)

(assert (=> b!71177 (= e!46627 e!46621)))

(declare-fun c!10343 () Bool)

(assert (=> b!71177 (= c!10343 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71178 () Bool)

(declare-fun e!46624 () Bool)

(assert (=> b!71178 (= e!46624 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71178 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!71179 () Bool)

(declare-fun lt!31481 () Unit!2006)

(declare-fun lt!31479 () Unit!2006)

(assert (=> b!71179 (= lt!31481 lt!31479)))

(declare-fun lt!31477 () (_ BitVec 64))

(declare-fun lt!31478 () (_ BitVec 64))

(declare-fun lt!31480 () ListLongMap!1433)

(declare-fun lt!31475 () V!2939)

(assert (=> b!71179 (not (contains!726 (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475)) lt!31477))))

(assert (=> b!71179 (= lt!31479 (addStillNotContains!25 lt!31480 lt!31478 lt!31475 lt!31477))))

(assert (=> b!71179 (= lt!31477 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71179 (= lt!31475 (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71179 (= lt!31478 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!71179 (= lt!31480 call!6156)))

(assert (=> b!71179 (= e!46625 (+!95 call!6156 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71180 () Bool)

(assert (=> b!71180 (= e!46626 e!46625)))

(declare-fun c!10345 () Bool)

(assert (=> b!71180 (= c!10345 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71181 () Bool)

(declare-fun e!46623 () Bool)

(assert (=> b!71181 (= e!46623 e!46627)))

(declare-fun c!10344 () Bool)

(assert (=> b!71181 (= c!10344 e!46624)))

(declare-fun res!37955 () Bool)

(assert (=> b!71181 (=> (not res!37955) (not e!46624))))

(assert (=> b!71181 (= res!37955 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71172 () Bool)

(declare-fun res!37958 () Bool)

(assert (=> b!71172 (=> (not res!37958) (not e!46623))))

(assert (=> b!71172 (= res!37958 (not (contains!726 lt!31476 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!15837 () Bool)

(assert (=> d!15837 e!46623))

(declare-fun res!37957 () Bool)

(assert (=> d!15837 (=> (not res!37957) (not e!46623))))

(assert (=> d!15837 (= res!37957 (not (contains!726 lt!31476 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15837 (= lt!31476 e!46626)))

(declare-fun c!10342 () Bool)

(assert (=> d!15837 (= c!10342 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!15837 (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992))))))

(assert (=> d!15837 (= (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) lt!31476)))

(assert (= (and d!15837 c!10342) b!71175))

(assert (= (and d!15837 (not c!10342)) b!71180))

(assert (= (and b!71180 c!10345) b!71179))

(assert (= (and b!71180 (not c!10345)) b!71170))

(assert (= (or b!71179 b!71170) bm!6153))

(assert (= (and d!15837 res!37957) b!71172))

(assert (= (and b!71172 res!37958) b!71181))

(assert (= (and b!71181 res!37955) b!71178))

(assert (= (and b!71181 c!10344) b!71171))

(assert (= (and b!71181 (not c!10344)) b!71177))

(assert (= (and b!71171 res!37956) b!71173))

(assert (= (and b!71177 c!10343) b!71174))

(assert (= (and b!71177 (not c!10343)) b!71176))

(declare-fun b_lambda!3205 () Bool)

(assert (=> (not b_lambda!3205) (not b!71173)))

(assert (=> b!71173 t!5040))

(declare-fun b_and!4385 () Bool)

(assert (= b_and!4381 (and (=> t!5040 result!2655) b_and!4385)))

(assert (=> b!71173 t!5042))

(declare-fun b_and!4387 () Bool)

(assert (= b_and!4383 (and (=> t!5042 result!2659) b_and!4387)))

(declare-fun b_lambda!3207 () Bool)

(assert (=> (not b_lambda!3207) (not b!71179)))

(assert (=> b!71179 t!5040))

(declare-fun b_and!4389 () Bool)

(assert (= b_and!4385 (and (=> t!5040 result!2655) b_and!4389)))

(assert (=> b!71179 t!5042))

(declare-fun b_and!4391 () Bool)

(assert (= b_and!4387 (and (=> t!5042 result!2659) b_and!4391)))

(declare-fun m!68079 () Bool)

(assert (=> b!71174 m!68079))

(declare-fun m!68081 () Bool)

(assert (=> b!71180 m!68081))

(assert (=> b!71180 m!68081))

(declare-fun m!68083 () Bool)

(assert (=> b!71180 m!68083))

(assert (=> b!71173 m!68081))

(assert (=> b!71173 m!67717))

(assert (=> b!71173 m!68081))

(declare-fun m!68085 () Bool)

(assert (=> b!71173 m!68085))

(declare-fun m!68087 () Bool)

(assert (=> b!71173 m!68087))

(assert (=> b!71173 m!67717))

(declare-fun m!68089 () Bool)

(assert (=> b!71173 m!68089))

(assert (=> b!71173 m!68087))

(declare-fun m!68091 () Bool)

(assert (=> d!15837 m!68091))

(assert (=> d!15837 m!67739))

(assert (=> b!71171 m!68081))

(assert (=> b!71171 m!68081))

(declare-fun m!68093 () Bool)

(assert (=> b!71171 m!68093))

(assert (=> b!71178 m!68081))

(assert (=> b!71178 m!68081))

(assert (=> b!71178 m!68083))

(assert (=> bm!6153 m!68079))

(declare-fun m!68095 () Bool)

(assert (=> b!71172 m!68095))

(declare-fun m!68097 () Bool)

(assert (=> b!71176 m!68097))

(assert (=> b!71179 m!68081))

(assert (=> b!71179 m!67717))

(declare-fun m!68099 () Bool)

(assert (=> b!71179 m!68099))

(declare-fun m!68101 () Bool)

(assert (=> b!71179 m!68101))

(assert (=> b!71179 m!68087))

(assert (=> b!71179 m!67717))

(assert (=> b!71179 m!68089))

(assert (=> b!71179 m!68087))

(declare-fun m!68103 () Bool)

(assert (=> b!71179 m!68103))

(assert (=> b!71179 m!68099))

(declare-fun m!68105 () Bool)

(assert (=> b!71179 m!68105))

(assert (=> bm!6149 d!15837))

(declare-fun d!15839 () Bool)

(assert (=> d!15839 (= (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71067 d!15839))

(declare-fun d!15841 () Bool)

(declare-fun res!37968 () Bool)

(declare-fun e!46630 () Bool)

(assert (=> d!15841 (=> (not res!37968) (not e!46630))))

(assert (=> d!15841 (= res!37968 (validMask!0 (mask!6149 newMap!16)))))

(assert (=> d!15841 (= (simpleValid!49 newMap!16) e!46630)))

(declare-fun b!71193 () Bool)

(assert (=> b!71193 (= e!46630 (and (bvsge (extraKeys!2055 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2055 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!394 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!71191 () Bool)

(declare-fun res!37969 () Bool)

(assert (=> b!71191 (=> (not res!37969) (not e!46630))))

(declare-fun size!2093 (LongMapFixedSize!690) (_ BitVec 32))

(assert (=> b!71191 (= res!37969 (bvsge (size!2093 newMap!16) (_size!394 newMap!16)))))

(declare-fun b!71190 () Bool)

(declare-fun res!37970 () Bool)

(assert (=> b!71190 (=> (not res!37970) (not e!46630))))

(assert (=> b!71190 (= res!37970 (and (= (size!2090 (_values!2175 newMap!16)) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001)) (= (size!2089 (_keys!3840 newMap!16)) (size!2090 (_values!2175 newMap!16))) (bvsge (_size!394 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!394 newMap!16) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!71192 () Bool)

(declare-fun res!37967 () Bool)

(assert (=> b!71192 (=> (not res!37967) (not e!46630))))

(assert (=> b!71192 (= res!37967 (= (size!2093 newMap!16) (bvadd (_size!394 newMap!16) (bvsdiv (bvadd (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!15841 res!37968) b!71190))

(assert (= (and b!71190 res!37970) b!71191))

(assert (= (and b!71191 res!37969) b!71192))

(assert (= (and b!71192 res!37967) b!71193))

(declare-fun m!68107 () Bool)

(assert (=> d!15841 m!68107))

(declare-fun m!68109 () Bool)

(assert (=> b!71191 m!68109))

(assert (=> b!71192 m!68109))

(assert (=> d!15789 d!15841))

(declare-fun d!15843 () Bool)

(assert (=> d!15843 (= (apply!74 lt!31396 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3046 () Bool)

(assert (= bs!3046 d!15843))

(declare-fun m!68111 () Bool)

(assert (=> bs!3046 m!68111))

(assert (=> bs!3046 m!68111))

(declare-fun m!68113 () Bool)

(assert (=> bs!3046 m!68113))

(assert (=> b!71081 d!15843))

(declare-fun d!15845 () Bool)

(declare-fun e!46631 () Bool)

(assert (=> d!15845 e!46631))

(declare-fun res!37971 () Bool)

(assert (=> d!15845 (=> res!37971 e!46631)))

(declare-fun lt!31484 () Bool)

(assert (=> d!15845 (= res!37971 (not lt!31484))))

(declare-fun lt!31482 () Bool)

(assert (=> d!15845 (= lt!31484 lt!31482)))

(declare-fun lt!31483 () Unit!2006)

(declare-fun e!46632 () Unit!2006)

(assert (=> d!15845 (= lt!31483 e!46632)))

(declare-fun c!10346 () Bool)

(assert (=> d!15845 (= c!10346 lt!31482)))

(assert (=> d!15845 (= lt!31482 (containsKey!135 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!15845 (= (contains!726 lt!31442 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31484)))

(declare-fun b!71194 () Bool)

(declare-fun lt!31485 () Unit!2006)

(assert (=> b!71194 (= e!46632 lt!31485)))

(assert (=> b!71194 (= lt!31485 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71194 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71195 () Bool)

(declare-fun Unit!2017 () Unit!2006)

(assert (=> b!71195 (= e!46632 Unit!2017)))

(declare-fun b!71196 () Bool)

(assert (=> b!71196 (= e!46631 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!15845 c!10346) b!71194))

(assert (= (and d!15845 (not c!10346)) b!71195))

(assert (= (and d!15845 (not res!37971)) b!71196))

(assert (=> d!15845 m!67827))

(declare-fun m!68115 () Bool)

(assert (=> d!15845 m!68115))

(assert (=> b!71194 m!67827))

(declare-fun m!68117 () Bool)

(assert (=> b!71194 m!68117))

(assert (=> b!71194 m!67827))

(assert (=> b!71194 m!68059))

(assert (=> b!71194 m!68059))

(declare-fun m!68119 () Bool)

(assert (=> b!71194 m!68119))

(assert (=> b!71196 m!67827))

(assert (=> b!71196 m!68059))

(assert (=> b!71196 m!68059))

(assert (=> b!71196 m!68119))

(assert (=> b!71114 d!15845))

(assert (=> b!70853 d!15783))

(declare-fun d!15847 () Bool)

(assert (=> d!15847 (= (map!1155 (_2!1080 lt!31329)) (getCurrentListMap!425 (_keys!3840 (_2!1080 lt!31329)) (_values!2175 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329)) (extraKeys!2055 (_2!1080 lt!31329)) (zeroValue!2096 (_2!1080 lt!31329)) (minValue!2096 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31329))))))

(declare-fun bs!3047 () Bool)

(assert (= bs!3047 d!15847))

(declare-fun m!68121 () Bool)

(assert (=> bs!3047 m!68121))

(assert (=> bm!6116 d!15847))

(declare-fun d!15849 () Bool)

(declare-fun e!46633 () Bool)

(assert (=> d!15849 e!46633))

(declare-fun res!37973 () Bool)

(assert (=> d!15849 (=> (not res!37973) (not e!46633))))

(declare-fun lt!31489 () ListLongMap!1433)

(assert (=> d!15849 (= res!37973 (contains!726 lt!31489 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun lt!31488 () List!1504)

(assert (=> d!15849 (= lt!31489 (ListLongMap!1434 lt!31488))))

(declare-fun lt!31487 () Unit!2006)

(declare-fun lt!31486 () Unit!2006)

(assert (=> d!15849 (= lt!31487 lt!31486)))

(assert (=> d!15849 (= (getValueByKey!131 lt!31488 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) (Some!136 (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!15849 (= lt!31486 (lemmaContainsTupThenGetReturnValue!50 lt!31488 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!15849 (= lt!31488 (insertStrictlySorted!52 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!15849 (= (+!95 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)) (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31489)))

(declare-fun b!71197 () Bool)

(declare-fun res!37972 () Bool)

(assert (=> b!71197 (=> (not res!37972) (not e!46633))))

(assert (=> b!71197 (= res!37972 (= (getValueByKey!131 (toList!732 lt!31489) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) (Some!136 (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!71198 () Bool)

(assert (=> b!71198 (= e!46633 (contains!728 (toList!732 lt!31489) (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (= (and d!15849 res!37973) b!71197))

(assert (= (and b!71197 res!37972) b!71198))

(declare-fun m!68123 () Bool)

(assert (=> d!15849 m!68123))

(declare-fun m!68125 () Bool)

(assert (=> d!15849 m!68125))

(declare-fun m!68127 () Bool)

(assert (=> d!15849 m!68127))

(declare-fun m!68129 () Bool)

(assert (=> d!15849 m!68129))

(declare-fun m!68131 () Bool)

(assert (=> b!71197 m!68131))

(declare-fun m!68133 () Bool)

(assert (=> b!71198 m!68133))

(assert (=> bm!6141 d!15849))

(declare-fun d!15851 () Bool)

(declare-fun e!46636 () Bool)

(assert (=> d!15851 e!46636))

(declare-fun c!10349 () Bool)

(assert (=> d!15851 (= c!10349 (and (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!15851 true))

(declare-fun _$29!87 () Unit!2006)

(assert (=> d!15851 (= (choose!403 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) _$29!87)))

(declare-fun b!71203 () Bool)

(assert (=> b!71203 (= e!46636 (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!71204 () Bool)

(assert (=> b!71204 (= e!46636 (ite (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!15851 c!10349) b!71203))

(assert (= (and d!15851 (not c!10349)) b!71204))

(assert (=> b!71203 m!67713))

(assert (=> b!71203 m!67731))

(assert (=> d!15785 d!15851))

(assert (=> d!15785 d!15823))

(declare-fun d!15853 () Bool)

(assert (=> d!15853 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31492 () Unit!2006)

(declare-fun choose!406 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2006)

(assert (=> d!15853 (= lt!31492 (choose!406 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31324 (zeroValue!2096 newMap!16) lt!31204 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15853 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15853 (= (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31324 (zeroValue!2096 newMap!16) lt!31204 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)) lt!31492)))

(declare-fun bs!3048 () Bool)

(assert (= bs!3048 d!15853))

(declare-fun m!68135 () Bool)

(assert (=> bs!3048 m!68135))

(assert (=> bs!3048 m!68107))

(declare-fun m!68137 () Bool)

(assert (=> bs!3048 m!68137))

(assert (=> bs!3048 m!67909))

(assert (=> bs!3048 m!67909))

(declare-fun m!68139 () Bool)

(assert (=> bs!3048 m!68139))

(assert (=> b!71009 d!15853))

(assert (=> b!71079 d!15839))

(assert (=> d!15781 d!15787))

(declare-fun d!15855 () Bool)

(assert (=> d!15855 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) from!355 Nil!1500)))

(assert (=> d!15855 true))

(declare-fun _$71!93 () Unit!2006)

(assert (=> d!15855 (= (choose!39 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!93)))

(declare-fun bs!3049 () Bool)

(assert (= bs!3049 d!15855))

(assert (=> bs!3049 m!67727))

(assert (=> d!15781 d!15855))

(declare-fun d!15857 () Bool)

(declare-fun c!10350 () Bool)

(assert (=> d!15857 (= c!10350 (and ((_ is Cons!1500) (toList!732 lt!31462)) (= (_1!1079 (h!2086 (toList!732 lt!31462))) (_1!1079 lt!31200))))))

(declare-fun e!46637 () Option!137)

(assert (=> d!15857 (= (getValueByKey!131 (toList!732 lt!31462) (_1!1079 lt!31200)) e!46637)))

(declare-fun b!71205 () Bool)

(assert (=> b!71205 (= e!46637 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31462)))))))

(declare-fun b!71207 () Bool)

(declare-fun e!46638 () Option!137)

(assert (=> b!71207 (= e!46638 (getValueByKey!131 (t!5044 (toList!732 lt!31462)) (_1!1079 lt!31200)))))

(declare-fun b!71206 () Bool)

(assert (=> b!71206 (= e!46637 e!46638)))

(declare-fun c!10351 () Bool)

(assert (=> b!71206 (= c!10351 (and ((_ is Cons!1500) (toList!732 lt!31462)) (not (= (_1!1079 (h!2086 (toList!732 lt!31462))) (_1!1079 lt!31200)))))))

(declare-fun b!71208 () Bool)

(assert (=> b!71208 (= e!46638 None!135)))

(assert (= (and d!15857 c!10350) b!71205))

(assert (= (and d!15857 (not c!10350)) b!71206))

(assert (= (and b!71206 c!10351) b!71207))

(assert (= (and b!71206 (not c!10351)) b!71208))

(declare-fun m!68141 () Bool)

(assert (=> b!71207 m!68141))

(assert (=> b!71129 d!15857))

(declare-fun d!15859 () Bool)

(declare-fun e!46639 () Bool)

(assert (=> d!15859 e!46639))

(declare-fun res!37975 () Bool)

(assert (=> d!15859 (=> (not res!37975) (not e!46639))))

(declare-fun lt!31496 () ListLongMap!1433)

(assert (=> d!15859 (= res!37975 (contains!726 lt!31496 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31495 () List!1504)

(assert (=> d!15859 (= lt!31496 (ListLongMap!1434 lt!31495))))

(declare-fun lt!31494 () Unit!2006)

(declare-fun lt!31493 () Unit!2006)

(assert (=> d!15859 (= lt!31494 lt!31493)))

(assert (=> d!15859 (= (getValueByKey!131 lt!31495 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15859 (= lt!31493 (lemmaContainsTupThenGetReturnValue!50 lt!31495 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15859 (= lt!31495 (insertStrictlySorted!52 (toList!732 call!6143) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15859 (= (+!95 call!6143 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31496)))

(declare-fun b!71209 () Bool)

(declare-fun res!37974 () Bool)

(assert (=> b!71209 (=> (not res!37974) (not e!46639))))

(assert (=> b!71209 (= res!37974 (= (getValueByKey!131 (toList!732 lt!31496) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71210 () Bool)

(assert (=> b!71210 (= e!46639 (contains!728 (toList!732 lt!31496) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!15859 res!37975) b!71209))

(assert (= (and b!71209 res!37974) b!71210))

(declare-fun m!68143 () Bool)

(assert (=> d!15859 m!68143))

(declare-fun m!68145 () Bool)

(assert (=> d!15859 m!68145))

(declare-fun m!68147 () Bool)

(assert (=> d!15859 m!68147))

(declare-fun m!68149 () Bool)

(assert (=> d!15859 m!68149))

(declare-fun m!68151 () Bool)

(assert (=> b!71209 m!68151))

(declare-fun m!68153 () Bool)

(assert (=> b!71210 m!68153))

(assert (=> b!71063 d!15859))

(declare-fun d!15861 () Bool)

(declare-fun e!46640 () Bool)

(assert (=> d!15861 e!46640))

(declare-fun res!37976 () Bool)

(assert (=> d!15861 (=> res!37976 e!46640)))

(declare-fun lt!31499 () Bool)

(assert (=> d!15861 (= res!37976 (not lt!31499))))

(declare-fun lt!31497 () Bool)

(assert (=> d!15861 (= lt!31499 lt!31497)))

(declare-fun lt!31498 () Unit!2006)

(declare-fun e!46641 () Unit!2006)

(assert (=> d!15861 (= lt!31498 e!46641)))

(declare-fun c!10352 () Bool)

(assert (=> d!15861 (= c!10352 lt!31497)))

(assert (=> d!15861 (= lt!31497 (containsKey!135 (toList!732 lt!31426) (_1!1079 lt!31205)))))

(assert (=> d!15861 (= (contains!726 lt!31426 (_1!1079 lt!31205)) lt!31499)))

(declare-fun b!71211 () Bool)

(declare-fun lt!31500 () Unit!2006)

(assert (=> b!71211 (= e!46641 lt!31500)))

(assert (=> b!71211 (= lt!31500 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31426) (_1!1079 lt!31205)))))

(assert (=> b!71211 (isDefined!85 (getValueByKey!131 (toList!732 lt!31426) (_1!1079 lt!31205)))))

(declare-fun b!71212 () Bool)

(declare-fun Unit!2018 () Unit!2006)

(assert (=> b!71212 (= e!46641 Unit!2018)))

(declare-fun b!71213 () Bool)

(assert (=> b!71213 (= e!46640 (isDefined!85 (getValueByKey!131 (toList!732 lt!31426) (_1!1079 lt!31205))))))

(assert (= (and d!15861 c!10352) b!71211))

(assert (= (and d!15861 (not c!10352)) b!71212))

(assert (= (and d!15861 (not res!37976)) b!71213))

(declare-fun m!68155 () Bool)

(assert (=> d!15861 m!68155))

(declare-fun m!68157 () Bool)

(assert (=> b!71211 m!68157))

(assert (=> b!71211 m!67977))

(assert (=> b!71211 m!67977))

(declare-fun m!68159 () Bool)

(assert (=> b!71211 m!68159))

(assert (=> b!71213 m!67977))

(assert (=> b!71213 m!67977))

(assert (=> b!71213 m!68159))

(assert (=> d!15811 d!15861))

(declare-fun d!15863 () Bool)

(declare-fun c!10353 () Bool)

(assert (=> d!15863 (= c!10353 (and ((_ is Cons!1500) lt!31425) (= (_1!1079 (h!2086 lt!31425)) (_1!1079 lt!31205))))))

(declare-fun e!46642 () Option!137)

(assert (=> d!15863 (= (getValueByKey!131 lt!31425 (_1!1079 lt!31205)) e!46642)))

(declare-fun b!71214 () Bool)

(assert (=> b!71214 (= e!46642 (Some!136 (_2!1079 (h!2086 lt!31425))))))

(declare-fun b!71216 () Bool)

(declare-fun e!46643 () Option!137)

(assert (=> b!71216 (= e!46643 (getValueByKey!131 (t!5044 lt!31425) (_1!1079 lt!31205)))))

(declare-fun b!71215 () Bool)

(assert (=> b!71215 (= e!46642 e!46643)))

(declare-fun c!10354 () Bool)

(assert (=> b!71215 (= c!10354 (and ((_ is Cons!1500) lt!31425) (not (= (_1!1079 (h!2086 lt!31425)) (_1!1079 lt!31205)))))))

(declare-fun b!71217 () Bool)

(assert (=> b!71217 (= e!46643 None!135)))

(assert (= (and d!15863 c!10353) b!71214))

(assert (= (and d!15863 (not c!10353)) b!71215))

(assert (= (and b!71215 c!10354) b!71216))

(assert (= (and b!71215 (not c!10354)) b!71217))

(declare-fun m!68161 () Bool)

(assert (=> b!71216 m!68161))

(assert (=> d!15811 d!15863))

(declare-fun d!15865 () Bool)

(assert (=> d!15865 (= (getValueByKey!131 lt!31425 (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205)))))

(declare-fun lt!31503 () Unit!2006)

(declare-fun choose!407 (List!1504 (_ BitVec 64) V!2939) Unit!2006)

(assert (=> d!15865 (= lt!31503 (choose!407 lt!31425 (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(declare-fun e!46646 () Bool)

(assert (=> d!15865 e!46646))

(declare-fun res!37981 () Bool)

(assert (=> d!15865 (=> (not res!37981) (not e!46646))))

(assert (=> d!15865 (= res!37981 (isStrictlySorted!286 lt!31425))))

(assert (=> d!15865 (= (lemmaContainsTupThenGetReturnValue!50 lt!31425 (_1!1079 lt!31205) (_2!1079 lt!31205)) lt!31503)))

(declare-fun b!71222 () Bool)

(declare-fun res!37982 () Bool)

(assert (=> b!71222 (=> (not res!37982) (not e!46646))))

(assert (=> b!71222 (= res!37982 (containsKey!135 lt!31425 (_1!1079 lt!31205)))))

(declare-fun b!71223 () Bool)

(assert (=> b!71223 (= e!46646 (contains!728 lt!31425 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(assert (= (and d!15865 res!37981) b!71222))

(assert (= (and b!71222 res!37982) b!71223))

(assert (=> d!15865 m!67971))

(declare-fun m!68163 () Bool)

(assert (=> d!15865 m!68163))

(declare-fun m!68165 () Bool)

(assert (=> d!15865 m!68165))

(declare-fun m!68167 () Bool)

(assert (=> b!71222 m!68167))

(declare-fun m!68169 () Bool)

(assert (=> b!71223 m!68169))

(assert (=> d!15811 d!15865))

(declare-fun b!71244 () Bool)

(declare-fun e!46658 () List!1504)

(declare-fun call!6164 () List!1504)

(assert (=> b!71244 (= e!46658 call!6164)))

(declare-fun b!71245 () Bool)

(declare-fun res!37987 () Bool)

(declare-fun e!46657 () Bool)

(assert (=> b!71245 (=> (not res!37987) (not e!46657))))

(declare-fun lt!31506 () List!1504)

(assert (=> b!71245 (= res!37987 (containsKey!135 lt!31506 (_1!1079 lt!31205)))))

(declare-fun b!71246 () Bool)

(declare-fun c!10364 () Bool)

(assert (=> b!71246 (= c!10364 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 lt!31200))) (bvsgt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31200)))) (_1!1079 lt!31205))))))

(declare-fun e!46660 () List!1504)

(declare-fun e!46659 () List!1504)

(assert (=> b!71246 (= e!46660 e!46659)))

(declare-fun b!71248 () Bool)

(declare-fun call!6165 () List!1504)

(assert (=> b!71248 (= e!46660 call!6165)))

(declare-fun b!71249 () Bool)

(declare-fun call!6163 () List!1504)

(assert (=> b!71249 (= e!46659 call!6163)))

(declare-fun e!46661 () List!1504)

(declare-fun b!71250 () Bool)

(assert (=> b!71250 (= e!46661 (insertStrictlySorted!52 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))) (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(declare-fun bm!6160 () Bool)

(assert (=> bm!6160 (= call!6163 call!6165)))

(declare-fun bm!6161 () Bool)

(assert (=> bm!6161 (= call!6165 call!6164)))

(declare-fun c!10363 () Bool)

(declare-fun bm!6162 () Bool)

(declare-fun $colon$colon!64 (List!1504 tuple2!2138) List!1504)

(assert (=> bm!6162 (= call!6164 ($colon$colon!64 e!46661 (ite c!10363 (h!2086 (toList!732 (+!95 lt!31210 lt!31200))) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205)))))))

(declare-fun c!10365 () Bool)

(assert (=> bm!6162 (= c!10365 c!10363)))

(declare-fun c!10366 () Bool)

(declare-fun b!71251 () Bool)

(assert (=> b!71251 (= e!46661 (ite c!10366 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))) (ite c!10364 (Cons!1500 (h!2086 (toList!732 (+!95 lt!31210 lt!31200))) (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) Nil!1501)))))

(declare-fun b!71247 () Bool)

(assert (=> b!71247 (= e!46659 call!6163)))

(declare-fun d!15867 () Bool)

(assert (=> d!15867 e!46657))

(declare-fun res!37988 () Bool)

(assert (=> d!15867 (=> (not res!37988) (not e!46657))))

(assert (=> d!15867 (= res!37988 (isStrictlySorted!286 lt!31506))))

(assert (=> d!15867 (= lt!31506 e!46658)))

(assert (=> d!15867 (= c!10363 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 lt!31200))) (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31200)))) (_1!1079 lt!31205))))))

(assert (=> d!15867 (isStrictlySorted!286 (toList!732 (+!95 lt!31210 lt!31200)))))

(assert (=> d!15867 (= (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 lt!31200)) (_1!1079 lt!31205) (_2!1079 lt!31205)) lt!31506)))

(declare-fun b!71252 () Bool)

(assert (=> b!71252 (= e!46657 (contains!728 lt!31506 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!71253 () Bool)

(assert (=> b!71253 (= e!46658 e!46660)))

(assert (=> b!71253 (= c!10366 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 lt!31200))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31200)))) (_1!1079 lt!31205))))))

(assert (= (and d!15867 c!10363) b!71244))

(assert (= (and d!15867 (not c!10363)) b!71253))

(assert (= (and b!71253 c!10366) b!71248))

(assert (= (and b!71253 (not c!10366)) b!71246))

(assert (= (and b!71246 c!10364) b!71247))

(assert (= (and b!71246 (not c!10364)) b!71249))

(assert (= (or b!71247 b!71249) bm!6160))

(assert (= (or b!71248 bm!6160) bm!6161))

(assert (= (or b!71244 bm!6161) bm!6162))

(assert (= (and bm!6162 c!10365) b!71250))

(assert (= (and bm!6162 (not c!10365)) b!71251))

(assert (= (and d!15867 res!37988) b!71245))

(assert (= (and b!71245 res!37987) b!71252))

(declare-fun m!68171 () Bool)

(assert (=> bm!6162 m!68171))

(declare-fun m!68173 () Bool)

(assert (=> b!71250 m!68173))

(declare-fun m!68175 () Bool)

(assert (=> b!71245 m!68175))

(declare-fun m!68177 () Bool)

(assert (=> b!71252 m!68177))

(declare-fun m!68179 () Bool)

(assert (=> d!15867 m!68179))

(declare-fun m!68181 () Bool)

(assert (=> d!15867 m!68181))

(assert (=> d!15811 d!15867))

(declare-fun d!15869 () Bool)

(assert (=> d!15869 (= (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (and (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70869 d!15869))

(assert (=> d!15809 d!15823))

(declare-fun d!15871 () Bool)

(declare-fun c!10367 () Bool)

(assert (=> d!15871 (= c!10367 (and ((_ is Cons!1500) (toList!732 lt!31458)) (= (_1!1079 (h!2086 (toList!732 lt!31458))) (_1!1079 lt!31205))))))

(declare-fun e!46662 () Option!137)

(assert (=> d!15871 (= (getValueByKey!131 (toList!732 lt!31458) (_1!1079 lt!31205)) e!46662)))

(declare-fun b!71254 () Bool)

(assert (=> b!71254 (= e!46662 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31458)))))))

(declare-fun b!71256 () Bool)

(declare-fun e!46663 () Option!137)

(assert (=> b!71256 (= e!46663 (getValueByKey!131 (t!5044 (toList!732 lt!31458)) (_1!1079 lt!31205)))))

(declare-fun b!71255 () Bool)

(assert (=> b!71255 (= e!46662 e!46663)))

(declare-fun c!10368 () Bool)

(assert (=> b!71255 (= c!10368 (and ((_ is Cons!1500) (toList!732 lt!31458)) (not (= (_1!1079 (h!2086 (toList!732 lt!31458))) (_1!1079 lt!31205)))))))

(declare-fun b!71257 () Bool)

(assert (=> b!71257 (= e!46663 None!135)))

(assert (= (and d!15871 c!10367) b!71254))

(assert (= (and d!15871 (not c!10367)) b!71255))

(assert (= (and b!71255 c!10368) b!71256))

(assert (= (and b!71255 (not c!10368)) b!71257))

(declare-fun m!68183 () Bool)

(assert (=> b!71256 m!68183))

(assert (=> b!71127 d!15871))

(declare-fun d!15873 () Bool)

(declare-fun res!37989 () Bool)

(declare-fun e!46664 () Bool)

(assert (=> d!15873 (=> res!37989 e!46664)))

(assert (=> d!15873 (= res!37989 (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!15873 (= (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!46664)))

(declare-fun b!71258 () Bool)

(declare-fun e!46665 () Bool)

(assert (=> b!71258 (= e!46664 e!46665)))

(declare-fun res!37990 () Bool)

(assert (=> b!71258 (=> (not res!37990) (not e!46665))))

(assert (=> b!71258 (= res!37990 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71259 () Bool)

(assert (=> b!71259 (= e!46665 (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15873 (not res!37989)) b!71258))

(assert (= (and b!71258 res!37990) b!71259))

(assert (=> d!15873 m!68081))

(assert (=> b!71259 m!67713))

(declare-fun m!68185 () Bool)

(assert (=> b!71259 m!68185))

(assert (=> b!70848 d!15873))

(declare-fun b!71294 () Bool)

(declare-fun e!46683 () Bool)

(declare-fun e!46687 () Bool)

(assert (=> b!71294 (= e!46683 e!46687)))

(declare-fun res!38012 () Bool)

(declare-fun call!6176 () Bool)

(assert (=> b!71294 (= res!38012 call!6176)))

(assert (=> b!71294 (=> (not res!38012) (not e!46687))))

(declare-fun b!71295 () Bool)

(declare-fun call!6174 () Bool)

(assert (=> b!71295 (= e!46687 (not call!6174))))

(declare-fun b!71296 () Bool)

(declare-fun e!46689 () Bool)

(declare-fun lt!31580 () SeekEntryResult!245)

(assert (=> b!71296 (= e!46689 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31580)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun bm!6171 () Bool)

(declare-fun call!6177 () SeekEntryResult!245)

(assert (=> bm!6171 (= call!6177 (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!71297 () Bool)

(declare-fun res!38016 () Bool)

(declare-fun e!46688 () Bool)

(assert (=> b!71297 (=> (not res!38016) (not e!46688))))

(declare-fun lt!31596 () tuple2!2140)

(assert (=> b!71297 (= res!38016 (contains!726 (map!1155 (_2!1080 lt!31596)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71298 () Bool)

(declare-fun res!38013 () Bool)

(declare-fun call!6175 () Bool)

(assert (=> b!71298 (= res!38013 call!6175)))

(assert (=> b!71298 (=> (not res!38013) (not e!46689))))

(declare-fun b!71299 () Bool)

(declare-fun lt!31590 () SeekEntryResult!245)

(assert (=> b!71299 (= e!46683 ((_ is Undefined!245) lt!31590))))

(declare-fun b!71300 () Bool)

(declare-fun e!46686 () Unit!2006)

(declare-fun Unit!2019 () Unit!2006)

(assert (=> b!71300 (= e!46686 Unit!2019)))

(declare-fun b!71301 () Bool)

(declare-fun e!46682 () Bool)

(assert (=> b!71301 (= e!46682 (not call!6174))))

(declare-fun b!71302 () Bool)

(declare-fun res!38015 () Bool)

(assert (=> b!71302 (=> (not res!38015) (not e!46688))))

(assert (=> b!71302 (= res!38015 (valid!288 (_2!1080 lt!31596)))))

(declare-fun b!71303 () Bool)

(declare-fun e!46684 () Unit!2006)

(declare-fun lt!31579 () Unit!2006)

(assert (=> b!71303 (= e!46684 lt!31579)))

(assert (=> b!71303 (= lt!31579 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(assert (=> b!71303 (= lt!31590 call!6177)))

(declare-fun c!10378 () Bool)

(assert (=> b!71303 (= c!10378 ((_ is MissingZero!245) lt!31590))))

(declare-fun e!46685 () Bool)

(assert (=> b!71303 e!46685))

(declare-fun b!71304 () Bool)

(declare-fun Unit!2020 () Unit!2006)

(assert (=> b!71304 (= e!46686 Unit!2020)))

(declare-fun lt!31570 () Unit!2006)

(declare-fun lemmaArrayContainsKeyThenInListMap!12 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2006)

(assert (=> b!71304 (= lt!31570 (lemmaArrayContainsKeyThenInListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> b!71304 (contains!726 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))

(declare-fun lt!31575 () Unit!2006)

(assert (=> b!71304 (= lt!31575 lt!31570)))

(assert (=> b!71304 false))

(declare-fun b!71305 () Bool)

(assert (=> b!71305 (= e!46688 (= (map!1155 (_2!1080 lt!31596)) (+!95 (map!1155 newMap!16) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71306 () Bool)

(declare-fun Unit!2021 () Unit!2006)

(assert (=> b!71306 (= e!46684 Unit!2021)))

(declare-fun lt!31592 () Unit!2006)

(assert (=> b!71306 (= lt!31592 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(assert (=> b!71306 (= lt!31580 call!6177)))

(declare-fun res!38009 () Bool)

(assert (=> b!71306 (= res!38009 ((_ is Found!245) lt!31580))))

(assert (=> b!71306 (=> (not res!38009) (not e!46689))))

(assert (=> b!71306 e!46689))

(declare-fun lt!31571 () Unit!2006)

(assert (=> b!71306 (= lt!31571 lt!31592)))

(assert (=> b!71306 false))

(declare-fun c!10377 () Bool)

(declare-fun bm!6172 () Bool)

(assert (=> bm!6172 (= call!6175 (inRange!0 (ite c!10377 (index!3111 lt!31580) (ite c!10378 (index!3110 lt!31590) (index!3113 lt!31590))) (mask!6149 newMap!16)))))

(declare-fun b!71307 () Bool)

(declare-fun res!38011 () Bool)

(assert (=> b!71307 (=> (not res!38011) (not e!46682))))

(assert (=> b!71307 (= res!38011 call!6176)))

(assert (=> b!71307 (= e!46685 e!46682)))

(declare-fun b!71308 () Bool)

(declare-fun c!10380 () Bool)

(assert (=> b!71308 (= c!10380 ((_ is MissingVacant!245) lt!31590))))

(assert (=> b!71308 (= e!46685 e!46683)))

(declare-fun b!71309 () Bool)

(declare-fun res!38014 () Bool)

(assert (=> b!71309 (= res!38014 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!31590)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71309 (=> (not res!38014) (not e!46687))))

(declare-fun bm!6173 () Bool)

(assert (=> bm!6173 (= call!6174 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!15875 () Bool)

(assert (=> d!15875 e!46688))

(declare-fun res!38010 () Bool)

(assert (=> d!15875 (=> (not res!38010) (not e!46688))))

(assert (=> d!15875 (= res!38010 (_1!1080 lt!31596))))

(assert (=> d!15875 (= lt!31596 (tuple2!2141 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd (_size!394 newMap!16) #b00000000000000000000000000000001) (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (_vacant!394 newMap!16))))))

(declare-fun lt!31585 () Unit!2006)

(declare-fun lt!31583 () Unit!2006)

(assert (=> d!15875 (= lt!31585 lt!31583)))

(declare-fun lt!31581 () array!3882)

(declare-fun lt!31569 () array!3880)

(assert (=> d!15875 (contains!726 (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))

(assert (=> d!15875 (= lt!31583 (lemmaValidKeyInArrayIsInListMap!81 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15875 (= lt!31581 (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))))

(assert (=> d!15875 (= lt!31569 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun lt!31574 () Unit!2006)

(declare-fun lt!31578 () Unit!2006)

(assert (=> d!15875 (= lt!31574 lt!31578)))

(declare-fun lt!31586 () array!3880)

(assert (=> d!15875 (= (arrayCountValidKeys!0 lt!31586 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3880 (_ BitVec 32)) Unit!2006)

(assert (=> d!15875 (= lt!31578 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31586 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))

(assert (=> d!15875 (= lt!31586 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun lt!31587 () Unit!2006)

(declare-fun lt!31577 () Unit!2006)

(assert (=> d!15875 (= lt!31587 lt!31577)))

(declare-fun lt!31582 () array!3880)

(assert (=> d!15875 (arrayContainsKey!0 lt!31582 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!15875 (= lt!31577 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31582 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))

(assert (=> d!15875 (= lt!31582 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun lt!31593 () Unit!2006)

(declare-fun lt!31568 () Unit!2006)

(assert (=> d!15875 (= lt!31593 lt!31568)))

(assert (=> d!15875 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (getCurrentListMap!425 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!12 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2006)

(assert (=> d!15875 (= lt!31568 (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31573 () Unit!2006)

(declare-fun lt!31595 () Unit!2006)

(assert (=> d!15875 (= lt!31573 lt!31595)))

(assert (=> d!15875 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (mask!6149 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3880 (_ BitVec 32) (_ BitVec 32)) Unit!2006)

(assert (=> d!15875 (= lt!31595 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (mask!6149 newMap!16)))))

(declare-fun lt!31591 () Unit!2006)

(declare-fun lt!31594 () Unit!2006)

(assert (=> d!15875 (= lt!31591 lt!31594)))

(assert (=> d!15875 (= (arrayCountValidKeys!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3880 (_ BitVec 32) (_ BitVec 64)) Unit!2006)

(assert (=> d!15875 (= lt!31594 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3840 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun lt!31567 () Unit!2006)

(declare-fun lt!31584 () Unit!2006)

(assert (=> d!15875 (= lt!31567 lt!31584)))

(declare-fun lt!31589 () List!1503)

(declare-fun lt!31572 () (_ BitVec 32))

(assert (=> d!15875 (arrayNoDuplicates!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) lt!31572 lt!31589)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3880 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1503) Unit!2006)

(assert (=> d!15875 (= lt!31584 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) lt!31572 lt!31589))))

(assert (=> d!15875 (= lt!31589 Nil!1500)))

(assert (=> d!15875 (= lt!31572 #b00000000000000000000000000000000)))

(declare-fun lt!31576 () Unit!2006)

(assert (=> d!15875 (= lt!31576 e!46686)))

(declare-fun c!10379 () Bool)

(assert (=> d!15875 (= c!10379 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!31588 () Unit!2006)

(assert (=> d!15875 (= lt!31588 e!46684)))

(assert (=> d!15875 (= c!10377 (contains!726 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!15875 (valid!288 newMap!16)))

(assert (=> d!15875 (= (updateHelperNewKey!23 newMap!16 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))) lt!31596)))

(declare-fun b!71310 () Bool)

(declare-fun res!38017 () Bool)

(assert (=> b!71310 (=> (not res!38017) (not e!46682))))

(assert (=> b!71310 (= res!38017 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3110 lt!31590)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6174 () Bool)

(assert (=> bm!6174 (= call!6176 call!6175)))

(assert (= (and d!15875 c!10377) b!71306))

(assert (= (and d!15875 (not c!10377)) b!71303))

(assert (= (and b!71306 res!38009) b!71298))

(assert (= (and b!71298 res!38013) b!71296))

(assert (= (and b!71303 c!10378) b!71307))

(assert (= (and b!71303 (not c!10378)) b!71308))

(assert (= (and b!71307 res!38011) b!71310))

(assert (= (and b!71310 res!38017) b!71301))

(assert (= (and b!71308 c!10380) b!71294))

(assert (= (and b!71308 (not c!10380)) b!71299))

(assert (= (and b!71294 res!38012) b!71309))

(assert (= (and b!71309 res!38014) b!71295))

(assert (= (or b!71307 b!71294) bm!6174))

(assert (= (or b!71301 b!71295) bm!6173))

(assert (= (or b!71298 bm!6174) bm!6172))

(assert (= (or b!71306 b!71303) bm!6171))

(assert (= (and d!15875 c!10379) b!71304))

(assert (= (and d!15875 (not c!10379)) b!71300))

(assert (= (and d!15875 res!38010) b!71302))

(assert (= (and b!71302 res!38015) b!71297))

(assert (= (and b!71297 res!38016) b!71305))

(assert (=> b!71306 m!67713))

(assert (=> b!71306 m!67893))

(assert (=> bm!6171 m!67713))

(assert (=> bm!6171 m!67865))

(declare-fun m!68187 () Bool)

(assert (=> b!71310 m!68187))

(assert (=> b!71304 m!67713))

(declare-fun m!68189 () Bool)

(assert (=> b!71304 m!68189))

(assert (=> b!71304 m!67909))

(assert (=> b!71304 m!67909))

(assert (=> b!71304 m!67713))

(declare-fun m!68191 () Bool)

(assert (=> b!71304 m!68191))

(declare-fun m!68193 () Bool)

(assert (=> b!71297 m!68193))

(assert (=> b!71297 m!68193))

(assert (=> b!71297 m!67713))

(declare-fun m!68195 () Bool)

(assert (=> b!71297 m!68195))

(declare-fun m!68197 () Bool)

(assert (=> d!15875 m!68197))

(assert (=> d!15875 m!67909))

(assert (=> d!15875 m!67713))

(declare-fun m!68199 () Bool)

(assert (=> d!15875 m!68199))

(assert (=> d!15875 m!68197))

(declare-fun m!68201 () Bool)

(assert (=> d!15875 m!68201))

(declare-fun m!68203 () Bool)

(assert (=> d!15875 m!68203))

(assert (=> d!15875 m!67713))

(declare-fun m!68205 () Bool)

(assert (=> d!15875 m!68205))

(declare-fun m!68207 () Bool)

(assert (=> d!15875 m!68207))

(declare-fun m!68209 () Bool)

(assert (=> d!15875 m!68209))

(assert (=> d!15875 m!67713))

(declare-fun m!68211 () Bool)

(assert (=> d!15875 m!68211))

(assert (=> d!15875 m!67841))

(assert (=> d!15875 m!68201))

(assert (=> d!15875 m!67749))

(assert (=> d!15875 m!67909))

(declare-fun m!68213 () Bool)

(assert (=> d!15875 m!68213))

(declare-fun m!68215 () Bool)

(assert (=> d!15875 m!68215))

(assert (=> d!15875 m!67909))

(assert (=> d!15875 m!67713))

(assert (=> d!15875 m!68191))

(declare-fun m!68217 () Bool)

(assert (=> d!15875 m!68217))

(declare-fun m!68219 () Bool)

(assert (=> d!15875 m!68219))

(assert (=> d!15875 m!67713))

(declare-fun m!68221 () Bool)

(assert (=> d!15875 m!68221))

(assert (=> d!15875 m!67713))

(declare-fun m!68223 () Bool)

(assert (=> d!15875 m!68223))

(declare-fun m!68225 () Bool)

(assert (=> d!15875 m!68225))

(declare-fun m!68227 () Bool)

(assert (=> d!15875 m!68227))

(declare-fun m!68229 () Bool)

(assert (=> d!15875 m!68229))

(assert (=> d!15875 m!67713))

(declare-fun m!68231 () Bool)

(assert (=> d!15875 m!68231))

(declare-fun m!68233 () Bool)

(assert (=> d!15875 m!68233))

(assert (=> d!15875 m!67713))

(assert (=> d!15875 m!67873))

(declare-fun m!68235 () Bool)

(assert (=> b!71296 m!68235))

(declare-fun m!68237 () Bool)

(assert (=> bm!6172 m!68237))

(assert (=> b!71303 m!67713))

(assert (=> b!71303 m!67897))

(declare-fun m!68239 () Bool)

(assert (=> b!71309 m!68239))

(assert (=> b!71305 m!68193))

(assert (=> b!71305 m!67763))

(assert (=> b!71305 m!67763))

(declare-fun m!68241 () Bool)

(assert (=> b!71305 m!68241))

(assert (=> bm!6173 m!67713))

(assert (=> bm!6173 m!67873))

(declare-fun m!68243 () Bool)

(assert (=> b!71302 m!68243))

(assert (=> bm!6112 d!15875))

(declare-fun d!15877 () Bool)

(declare-fun e!46690 () Bool)

(assert (=> d!15877 e!46690))

(declare-fun res!38018 () Bool)

(assert (=> d!15877 (=> res!38018 e!46690)))

(declare-fun lt!31599 () Bool)

(assert (=> d!15877 (= res!38018 (not lt!31599))))

(declare-fun lt!31597 () Bool)

(assert (=> d!15877 (= lt!31599 lt!31597)))

(declare-fun lt!31598 () Unit!2006)

(declare-fun e!46691 () Unit!2006)

(assert (=> d!15877 (= lt!31598 e!46691)))

(declare-fun c!10381 () Bool)

(assert (=> d!15877 (= c!10381 lt!31597)))

(assert (=> d!15877 (= lt!31597 (containsKey!135 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(assert (=> d!15877 (= (contains!726 call!6125 (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))) lt!31599)))

(declare-fun b!71311 () Bool)

(declare-fun lt!31600 () Unit!2006)

(assert (=> b!71311 (= e!46691 lt!31600)))

(assert (=> b!71311 (= lt!31600 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(assert (=> b!71311 (isDefined!85 (getValueByKey!131 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(declare-fun b!71312 () Bool)

(declare-fun Unit!2022 () Unit!2006)

(assert (=> b!71312 (= e!46691 Unit!2022)))

(declare-fun b!71313 () Bool)

(assert (=> b!71313 (= e!46690 (isDefined!85 (getValueByKey!131 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))))))

(assert (= (and d!15877 c!10381) b!71311))

(assert (= (and d!15877 (not c!10381)) b!71312))

(assert (= (and d!15877 (not res!38018)) b!71313))

(assert (=> d!15877 m!67903))

(declare-fun m!68245 () Bool)

(assert (=> d!15877 m!68245))

(assert (=> b!71311 m!67903))

(declare-fun m!68247 () Bool)

(assert (=> b!71311 m!68247))

(assert (=> b!71311 m!67903))

(declare-fun m!68249 () Bool)

(assert (=> b!71311 m!68249))

(assert (=> b!71311 m!68249))

(declare-fun m!68251 () Bool)

(assert (=> b!71311 m!68251))

(assert (=> b!71313 m!67903))

(assert (=> b!71313 m!68249))

(assert (=> b!71313 m!68249))

(assert (=> b!71313 m!68251))

(assert (=> b!71007 d!15877))

(declare-fun d!15879 () Bool)

(declare-fun e!46694 () Bool)

(assert (=> d!15879 e!46694))

(declare-fun res!38021 () Bool)

(assert (=> d!15879 (=> (not res!38021) (not e!46694))))

(assert (=> d!15879 (= res!38021 (and (bvsge (index!3111 lt!31339) #b00000000000000000000000000000000) (bvslt (index!3111 lt!31339) (size!2089 (_keys!3840 newMap!16)))))))

(declare-fun lt!31603 () Unit!2006)

(declare-fun choose!408 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) Unit!2006)

(assert (=> d!15879 (= lt!31603 (choose!408 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15879 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15879 (= (lemmaValidKeyInArrayIsInListMap!81 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (defaultEntry!2192 newMap!16)) lt!31603)))

(declare-fun b!71316 () Bool)

(assert (=> b!71316 (= e!46694 (contains!726 (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(assert (= (and d!15879 res!38021) b!71316))

(declare-fun m!68253 () Bool)

(assert (=> d!15879 m!68253))

(assert (=> d!15879 m!68107))

(declare-fun m!68255 () Bool)

(assert (=> b!71316 m!68255))

(assert (=> b!71316 m!67903))

(assert (=> b!71316 m!68255))

(assert (=> b!71316 m!67903))

(declare-fun m!68257 () Bool)

(assert (=> b!71316 m!68257))

(assert (=> b!71007 d!15879))

(declare-fun d!15881 () Bool)

(declare-fun e!46697 () Bool)

(assert (=> d!15881 e!46697))

(declare-fun res!38024 () Bool)

(assert (=> d!15881 (=> (not res!38024) (not e!46697))))

(assert (=> d!15881 (= res!38024 (and (bvsge (index!3111 lt!31339) #b00000000000000000000000000000000) (bvslt (index!3111 lt!31339) (size!2090 (_values!2175 newMap!16)))))))

(declare-fun lt!31606 () Unit!2006)

(declare-fun choose!409 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2006)

(assert (=> d!15881 (= lt!31606 (choose!409 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (defaultEntry!2192 newMap!16)))))

(assert (=> d!15881 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15881 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (defaultEntry!2192 newMap!16)) lt!31606)))

(declare-fun b!71319 () Bool)

(assert (=> b!71319 (= e!46697 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (getCurrentListMap!425 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))))

(assert (= (and d!15881 res!38024) b!71319))

(assert (=> d!15881 m!67713))

(declare-fun m!68259 () Bool)

(assert (=> d!15881 m!68259))

(assert (=> d!15881 m!68107))

(assert (=> b!71319 m!67909))

(assert (=> b!71319 m!67909))

(assert (=> b!71319 m!68213))

(assert (=> b!71319 m!67887))

(declare-fun m!68261 () Bool)

(assert (=> b!71319 m!68261))

(assert (=> b!71007 d!15881))

(declare-fun d!15883 () Bool)

(assert (=> d!15883 (= (apply!74 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31411) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31411)))))

(declare-fun bs!3050 () Bool)

(assert (= bs!3050 d!15883))

(declare-fun m!68263 () Bool)

(assert (=> bs!3050 m!68263))

(assert (=> bs!3050 m!68263))

(declare-fun m!68265 () Bool)

(assert (=> bs!3050 m!68265))

(assert (=> b!71076 d!15883))

(declare-fun d!15885 () Bool)

(declare-fun e!46698 () Bool)

(assert (=> d!15885 e!46698))

(declare-fun res!38025 () Bool)

(assert (=> d!15885 (=> res!38025 e!46698)))

(declare-fun lt!31609 () Bool)

(assert (=> d!15885 (= res!38025 (not lt!31609))))

(declare-fun lt!31607 () Bool)

(assert (=> d!15885 (= lt!31609 lt!31607)))

(declare-fun lt!31608 () Unit!2006)

(declare-fun e!46699 () Unit!2006)

(assert (=> d!15885 (= lt!31608 e!46699)))

(declare-fun c!10382 () Bool)

(assert (=> d!15885 (= c!10382 lt!31607)))

(assert (=> d!15885 (= lt!31607 (containsKey!135 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409))))

(assert (=> d!15885 (= (contains!726 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31409) lt!31609)))

(declare-fun b!71320 () Bool)

(declare-fun lt!31610 () Unit!2006)

(assert (=> b!71320 (= e!46699 lt!31610)))

(assert (=> b!71320 (= lt!31610 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409))))

(assert (=> b!71320 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409))))

(declare-fun b!71321 () Bool)

(declare-fun Unit!2023 () Unit!2006)

(assert (=> b!71321 (= e!46699 Unit!2023)))

(declare-fun b!71322 () Bool)

(assert (=> b!71322 (= e!46698 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409)))))

(assert (= (and d!15885 c!10382) b!71320))

(assert (= (and d!15885 (not c!10382)) b!71321))

(assert (= (and d!15885 (not res!38025)) b!71322))

(declare-fun m!68267 () Bool)

(assert (=> d!15885 m!68267))

(declare-fun m!68269 () Bool)

(assert (=> b!71320 m!68269))

(declare-fun m!68271 () Bool)

(assert (=> b!71320 m!68271))

(assert (=> b!71320 m!68271))

(declare-fun m!68273 () Bool)

(assert (=> b!71320 m!68273))

(assert (=> b!71322 m!68271))

(assert (=> b!71322 m!68271))

(assert (=> b!71322 m!68273))

(assert (=> b!71076 d!15885))

(declare-fun d!15887 () Bool)

(assert (=> d!15887 (= (apply!74 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31395) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31395)))))

(declare-fun bs!3051 () Bool)

(assert (= bs!3051 d!15887))

(declare-fun m!68275 () Bool)

(assert (=> bs!3051 m!68275))

(assert (=> bs!3051 m!68275))

(declare-fun m!68277 () Bool)

(assert (=> bs!3051 m!68277))

(assert (=> b!71076 d!15887))

(assert (=> b!71076 d!15813))

(declare-fun d!15889 () Bool)

(assert (=> d!15889 (= (apply!74 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31411) (apply!74 lt!31408 lt!31411))))

(declare-fun lt!31613 () Unit!2006)

(declare-fun choose!410 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2006)

(assert (=> d!15889 (= lt!31613 (choose!410 lt!31408 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31411))))

(declare-fun e!46702 () Bool)

(assert (=> d!15889 e!46702))

(declare-fun res!38028 () Bool)

(assert (=> d!15889 (=> (not res!38028) (not e!46702))))

(assert (=> d!15889 (= res!38028 (contains!726 lt!31408 lt!31411))))

(assert (=> d!15889 (= (addApplyDifferent!50 lt!31408 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31411) lt!31613)))

(declare-fun b!71326 () Bool)

(assert (=> b!71326 (= e!46702 (not (= lt!31411 lt!31404)))))

(assert (= (and d!15889 res!38028) b!71326))

(assert (=> d!15889 m!67947))

(assert (=> d!15889 m!67949))

(assert (=> d!15889 m!67933))

(declare-fun m!68279 () Bool)

(assert (=> d!15889 m!68279))

(declare-fun m!68281 () Bool)

(assert (=> d!15889 m!68281))

(assert (=> d!15889 m!67947))

(assert (=> b!71076 d!15889))

(declare-fun d!15891 () Bool)

(declare-fun e!46703 () Bool)

(assert (=> d!15891 e!46703))

(declare-fun res!38030 () Bool)

(assert (=> d!15891 (=> (not res!38030) (not e!46703))))

(declare-fun lt!31617 () ListLongMap!1433)

(assert (=> d!15891 (= res!38030 (contains!726 lt!31617 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31616 () List!1504)

(assert (=> d!15891 (= lt!31617 (ListLongMap!1434 lt!31616))))

(declare-fun lt!31615 () Unit!2006)

(declare-fun lt!31614 () Unit!2006)

(assert (=> d!15891 (= lt!31615 lt!31614)))

(assert (=> d!15891 (= (getValueByKey!131 lt!31616 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15891 (= lt!31614 (lemmaContainsTupThenGetReturnValue!50 lt!31616 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15891 (= lt!31616 (insertStrictlySorted!52 (toList!732 lt!31398) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15891 (= (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31617)))

(declare-fun b!71327 () Bool)

(declare-fun res!38029 () Bool)

(assert (=> b!71327 (=> (not res!38029) (not e!46703))))

(assert (=> b!71327 (= res!38029 (= (getValueByKey!131 (toList!732 lt!31617) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71328 () Bool)

(assert (=> b!71328 (= e!46703 (contains!728 (toList!732 lt!31617) (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!15891 res!38030) b!71327))

(assert (= (and b!71327 res!38029) b!71328))

(declare-fun m!68283 () Bool)

(assert (=> d!15891 m!68283))

(declare-fun m!68285 () Bool)

(assert (=> d!15891 m!68285))

(declare-fun m!68287 () Bool)

(assert (=> d!15891 m!68287))

(declare-fun m!68289 () Bool)

(assert (=> d!15891 m!68289))

(declare-fun m!68291 () Bool)

(assert (=> b!71327 m!68291))

(declare-fun m!68293 () Bool)

(assert (=> b!71328 m!68293))

(assert (=> b!71076 d!15891))

(declare-fun d!15893 () Bool)

(declare-fun e!46704 () Bool)

(assert (=> d!15893 e!46704))

(declare-fun res!38032 () Bool)

(assert (=> d!15893 (=> (not res!38032) (not e!46704))))

(declare-fun lt!31621 () ListLongMap!1433)

(assert (=> d!15893 (= res!38032 (contains!726 lt!31621 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31620 () List!1504)

(assert (=> d!15893 (= lt!31621 (ListLongMap!1434 lt!31620))))

(declare-fun lt!31619 () Unit!2006)

(declare-fun lt!31618 () Unit!2006)

(assert (=> d!15893 (= lt!31619 lt!31618)))

(assert (=> d!15893 (= (getValueByKey!131 lt!31620 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15893 (= lt!31618 (lemmaContainsTupThenGetReturnValue!50 lt!31620 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15893 (= lt!31620 (insertStrictlySorted!52 (toList!732 lt!31408) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15893 (= (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31621)))

(declare-fun b!71329 () Bool)

(declare-fun res!38031 () Bool)

(assert (=> b!71329 (=> (not res!38031) (not e!46704))))

(assert (=> b!71329 (= res!38031 (= (getValueByKey!131 (toList!732 lt!31621) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71330 () Bool)

(assert (=> b!71330 (= e!46704 (contains!728 (toList!732 lt!31621) (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!15893 res!38032) b!71329))

(assert (= (and b!71329 res!38031) b!71330))

(declare-fun m!68295 () Bool)

(assert (=> d!15893 m!68295))

(declare-fun m!68297 () Bool)

(assert (=> d!15893 m!68297))

(declare-fun m!68299 () Bool)

(assert (=> d!15893 m!68299))

(declare-fun m!68301 () Bool)

(assert (=> d!15893 m!68301))

(declare-fun m!68303 () Bool)

(assert (=> b!71329 m!68303))

(declare-fun m!68305 () Bool)

(assert (=> b!71330 m!68305))

(assert (=> b!71076 d!15893))

(declare-fun d!15895 () Bool)

(declare-fun e!46705 () Bool)

(assert (=> d!15895 e!46705))

(declare-fun res!38034 () Bool)

(assert (=> d!15895 (=> (not res!38034) (not e!46705))))

(declare-fun lt!31625 () ListLongMap!1433)

(assert (=> d!15895 (= res!38034 (contains!726 lt!31625 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31624 () List!1504)

(assert (=> d!15895 (= lt!31625 (ListLongMap!1434 lt!31624))))

(declare-fun lt!31623 () Unit!2006)

(declare-fun lt!31622 () Unit!2006)

(assert (=> d!15895 (= lt!31623 lt!31622)))

(assert (=> d!15895 (= (getValueByKey!131 lt!31624 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15895 (= lt!31622 (lemmaContainsTupThenGetReturnValue!50 lt!31624 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15895 (= lt!31624 (insertStrictlySorted!52 (toList!732 lt!31397) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15895 (= (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31625)))

(declare-fun b!71331 () Bool)

(declare-fun res!38033 () Bool)

(assert (=> b!71331 (=> (not res!38033) (not e!46705))))

(assert (=> b!71331 (= res!38033 (= (getValueByKey!131 (toList!732 lt!31625) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71332 () Bool)

(assert (=> b!71332 (= e!46705 (contains!728 (toList!732 lt!31625) (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!15895 res!38034) b!71331))

(assert (= (and b!71331 res!38033) b!71332))

(declare-fun m!68307 () Bool)

(assert (=> d!15895 m!68307))

(declare-fun m!68309 () Bool)

(assert (=> d!15895 m!68309))

(declare-fun m!68311 () Bool)

(assert (=> d!15895 m!68311))

(declare-fun m!68313 () Bool)

(assert (=> d!15895 m!68313))

(declare-fun m!68315 () Bool)

(assert (=> b!71331 m!68315))

(declare-fun m!68317 () Bool)

(assert (=> b!71332 m!68317))

(assert (=> b!71076 d!15895))

(declare-fun d!15897 () Bool)

(assert (=> d!15897 (contains!726 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31409)))

(declare-fun lt!31628 () Unit!2006)

(declare-fun choose!411 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2006)

(assert (=> d!15897 (= lt!31628 (choose!411 lt!31397 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31409))))

(assert (=> d!15897 (contains!726 lt!31397 lt!31409)))

(assert (=> d!15897 (= (addStillContains!50 lt!31397 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31409) lt!31628)))

(declare-fun bs!3052 () Bool)

(assert (= bs!3052 d!15897))

(assert (=> bs!3052 m!67929))

(assert (=> bs!3052 m!67929))

(assert (=> bs!3052 m!67937))

(declare-fun m!68319 () Bool)

(assert (=> bs!3052 m!68319))

(declare-fun m!68321 () Bool)

(assert (=> bs!3052 m!68321))

(assert (=> b!71076 d!15897))

(declare-fun d!15899 () Bool)

(assert (=> d!15899 (= (apply!74 lt!31398 lt!31395) (get!1150 (getValueByKey!131 (toList!732 lt!31398) lt!31395)))))

(declare-fun bs!3053 () Bool)

(assert (= bs!3053 d!15899))

(declare-fun m!68323 () Bool)

(assert (=> bs!3053 m!68323))

(assert (=> bs!3053 m!68323))

(declare-fun m!68325 () Bool)

(assert (=> bs!3053 m!68325))

(assert (=> b!71076 d!15899))

(declare-fun d!15901 () Bool)

(assert (=> d!15901 (= (apply!74 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31401) (apply!74 lt!31399 lt!31401))))

(declare-fun lt!31629 () Unit!2006)

(assert (=> d!15901 (= lt!31629 (choose!410 lt!31399 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31401))))

(declare-fun e!46706 () Bool)

(assert (=> d!15901 e!46706))

(declare-fun res!38035 () Bool)

(assert (=> d!15901 (=> (not res!38035) (not e!46706))))

(assert (=> d!15901 (= res!38035 (contains!726 lt!31399 lt!31401))))

(assert (=> d!15901 (= (addApplyDifferent!50 lt!31399 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31401) lt!31629)))

(declare-fun b!71334 () Bool)

(assert (=> b!71334 (= e!46706 (not (= lt!31401 lt!31400)))))

(assert (= (and d!15901 res!38035) b!71334))

(assert (=> d!15901 m!67943))

(assert (=> d!15901 m!67945))

(assert (=> d!15901 m!67927))

(declare-fun m!68327 () Bool)

(assert (=> d!15901 m!68327))

(declare-fun m!68329 () Bool)

(assert (=> d!15901 m!68329))

(assert (=> d!15901 m!67943))

(assert (=> b!71076 d!15901))

(declare-fun d!15903 () Bool)

(assert (=> d!15903 (= (apply!74 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31395) (apply!74 lt!31398 lt!31395))))

(declare-fun lt!31630 () Unit!2006)

(assert (=> d!15903 (= lt!31630 (choose!410 lt!31398 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31395))))

(declare-fun e!46707 () Bool)

(assert (=> d!15903 e!46707))

(declare-fun res!38036 () Bool)

(assert (=> d!15903 (=> (not res!38036) (not e!46707))))

(assert (=> d!15903 (= res!38036 (contains!726 lt!31398 lt!31395))))

(assert (=> d!15903 (= (addApplyDifferent!50 lt!31398 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31395) lt!31630)))

(declare-fun b!71335 () Bool)

(assert (=> b!71335 (= e!46707 (not (= lt!31395 lt!31394)))))

(assert (= (and d!15903 res!38036) b!71335))

(assert (=> d!15903 m!67935))

(assert (=> d!15903 m!67941))

(assert (=> d!15903 m!67951))

(declare-fun m!68331 () Bool)

(assert (=> d!15903 m!68331))

(declare-fun m!68333 () Bool)

(assert (=> d!15903 m!68333))

(assert (=> d!15903 m!67935))

(assert (=> b!71076 d!15903))

(declare-fun d!15905 () Bool)

(assert (=> d!15905 (= (apply!74 lt!31408 lt!31411) (get!1150 (getValueByKey!131 (toList!732 lt!31408) lt!31411)))))

(declare-fun bs!3054 () Bool)

(assert (= bs!3054 d!15905))

(declare-fun m!68335 () Bool)

(assert (=> bs!3054 m!68335))

(assert (=> bs!3054 m!68335))

(declare-fun m!68337 () Bool)

(assert (=> bs!3054 m!68337))

(assert (=> b!71076 d!15905))

(declare-fun d!15907 () Bool)

(declare-fun e!46708 () Bool)

(assert (=> d!15907 e!46708))

(declare-fun res!38038 () Bool)

(assert (=> d!15907 (=> (not res!38038) (not e!46708))))

(declare-fun lt!31634 () ListLongMap!1433)

(assert (=> d!15907 (= res!38038 (contains!726 lt!31634 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31633 () List!1504)

(assert (=> d!15907 (= lt!31634 (ListLongMap!1434 lt!31633))))

(declare-fun lt!31632 () Unit!2006)

(declare-fun lt!31631 () Unit!2006)

(assert (=> d!15907 (= lt!31632 lt!31631)))

(assert (=> d!15907 (= (getValueByKey!131 lt!31633 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15907 (= lt!31631 (lemmaContainsTupThenGetReturnValue!50 lt!31633 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15907 (= lt!31633 (insertStrictlySorted!52 (toList!732 lt!31399) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15907 (= (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31634)))

(declare-fun b!71336 () Bool)

(declare-fun res!38037 () Bool)

(assert (=> b!71336 (=> (not res!38037) (not e!46708))))

(assert (=> b!71336 (= res!38037 (= (getValueByKey!131 (toList!732 lt!31634) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71337 () Bool)

(assert (=> b!71337 (= e!46708 (contains!728 (toList!732 lt!31634) (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!15907 res!38038) b!71336))

(assert (= (and b!71336 res!38037) b!71337))

(declare-fun m!68339 () Bool)

(assert (=> d!15907 m!68339))

(declare-fun m!68341 () Bool)

(assert (=> d!15907 m!68341))

(declare-fun m!68343 () Bool)

(assert (=> d!15907 m!68343))

(declare-fun m!68345 () Bool)

(assert (=> d!15907 m!68345))

(declare-fun m!68347 () Bool)

(assert (=> b!71336 m!68347))

(declare-fun m!68349 () Bool)

(assert (=> b!71337 m!68349))

(assert (=> b!71076 d!15907))

(declare-fun d!15909 () Bool)

(assert (=> d!15909 (= (apply!74 lt!31399 lt!31401) (get!1150 (getValueByKey!131 (toList!732 lt!31399) lt!31401)))))

(declare-fun bs!3055 () Bool)

(assert (= bs!3055 d!15909))

(declare-fun m!68351 () Bool)

(assert (=> bs!3055 m!68351))

(assert (=> bs!3055 m!68351))

(declare-fun m!68353 () Bool)

(assert (=> bs!3055 m!68353))

(assert (=> b!71076 d!15909))

(declare-fun d!15911 () Bool)

(assert (=> d!15911 (= (apply!74 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31401) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31401)))))

(declare-fun bs!3056 () Bool)

(assert (= bs!3056 d!15911))

(declare-fun m!68355 () Bool)

(assert (=> bs!3056 m!68355))

(assert (=> bs!3056 m!68355))

(declare-fun m!68357 () Bool)

(assert (=> bs!3056 m!68357))

(assert (=> b!71076 d!15911))

(declare-fun b!71350 () Bool)

(declare-fun c!10389 () Bool)

(declare-fun lt!31643 () (_ BitVec 64))

(assert (=> b!71350 (= c!10389 (= lt!31643 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46715 () SeekEntryResult!245)

(declare-fun e!46717 () SeekEntryResult!245)

(assert (=> b!71350 (= e!46715 e!46717)))

(declare-fun b!71351 () Bool)

(declare-fun lt!31642 () SeekEntryResult!245)

(assert (=> b!71351 (= e!46715 (Found!245 (index!3112 lt!31642)))))

(declare-fun b!71352 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3880 (_ BitVec 32)) SeekEntryResult!245)

(assert (=> b!71352 (= e!46717 (seekKeyOrZeroReturnVacant!0 (x!11017 lt!31642) (index!3112 lt!31642) (index!3112 lt!31642) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!71353 () Bool)

(declare-fun e!46716 () SeekEntryResult!245)

(assert (=> b!71353 (= e!46716 e!46715)))

(assert (=> b!71353 (= lt!31643 (select (arr!1852 (_keys!3840 newMap!16)) (index!3112 lt!31642)))))

(declare-fun c!10391 () Bool)

(assert (=> b!71353 (= c!10391 (= lt!31643 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun d!15913 () Bool)

(declare-fun lt!31641 () SeekEntryResult!245)

(assert (=> d!15913 (and (or ((_ is Undefined!245) lt!31641) (not ((_ is Found!245) lt!31641)) (and (bvsge (index!3111 lt!31641) #b00000000000000000000000000000000) (bvslt (index!3111 lt!31641) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!31641) ((_ is Found!245) lt!31641) (not ((_ is MissingZero!245) lt!31641)) (and (bvsge (index!3110 lt!31641) #b00000000000000000000000000000000) (bvslt (index!3110 lt!31641) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!31641) ((_ is Found!245) lt!31641) ((_ is MissingZero!245) lt!31641) (not ((_ is MissingVacant!245) lt!31641)) (and (bvsge (index!3113 lt!31641) #b00000000000000000000000000000000) (bvslt (index!3113 lt!31641) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!31641) (ite ((_ is Found!245) lt!31641) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31641)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (ite ((_ is MissingZero!245) lt!31641) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3110 lt!31641)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!245) lt!31641) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!31641)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15913 (= lt!31641 e!46716)))

(declare-fun c!10390 () Bool)

(assert (=> d!15913 (= c!10390 (and ((_ is Intermediate!245) lt!31642) (undefined!1057 lt!31642)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3880 (_ BitVec 32)) SeekEntryResult!245)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!15913 (= lt!31642 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (mask!6149 newMap!16)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!15913 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15913 (= (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!31641)))

(declare-fun b!71354 () Bool)

(assert (=> b!71354 (= e!46717 (MissingZero!245 (index!3112 lt!31642)))))

(declare-fun b!71355 () Bool)

(assert (=> b!71355 (= e!46716 Undefined!245)))

(assert (= (and d!15913 c!10390) b!71355))

(assert (= (and d!15913 (not c!10390)) b!71353))

(assert (= (and b!71353 c!10391) b!71351))

(assert (= (and b!71353 (not c!10391)) b!71350))

(assert (= (and b!71350 c!10389) b!71354))

(assert (= (and b!71350 (not c!10389)) b!71352))

(assert (=> b!71352 m!67713))

(declare-fun m!68359 () Bool)

(assert (=> b!71352 m!68359))

(declare-fun m!68361 () Bool)

(assert (=> b!71353 m!68361))

(declare-fun m!68363 () Bool)

(assert (=> d!15913 m!68363))

(declare-fun m!68365 () Bool)

(assert (=> d!15913 m!68365))

(assert (=> d!15913 m!67713))

(declare-fun m!68367 () Bool)

(assert (=> d!15913 m!68367))

(assert (=> d!15913 m!68367))

(assert (=> d!15913 m!67713))

(declare-fun m!68369 () Bool)

(assert (=> d!15913 m!68369))

(assert (=> d!15913 m!68107))

(declare-fun m!68371 () Bool)

(assert (=> d!15913 m!68371))

(assert (=> b!70981 d!15913))

(declare-fun d!15915 () Bool)

(declare-fun c!10392 () Bool)

(assert (=> d!15915 (= c!10392 (and ((_ is Cons!1500) (toList!732 lt!31451)) (= (_1!1079 (h!2086 (toList!732 lt!31451))) (_1!1079 lt!31200))))))

(declare-fun e!46718 () Option!137)

(assert (=> d!15915 (= (getValueByKey!131 (toList!732 lt!31451) (_1!1079 lt!31200)) e!46718)))

(declare-fun b!71356 () Bool)

(assert (=> b!71356 (= e!46718 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31451)))))))

(declare-fun b!71358 () Bool)

(declare-fun e!46719 () Option!137)

(assert (=> b!71358 (= e!46719 (getValueByKey!131 (t!5044 (toList!732 lt!31451)) (_1!1079 lt!31200)))))

(declare-fun b!71357 () Bool)

(assert (=> b!71357 (= e!46718 e!46719)))

(declare-fun c!10393 () Bool)

(assert (=> b!71357 (= c!10393 (and ((_ is Cons!1500) (toList!732 lt!31451)) (not (= (_1!1079 (h!2086 (toList!732 lt!31451))) (_1!1079 lt!31200)))))))

(declare-fun b!71359 () Bool)

(assert (=> b!71359 (= e!46719 None!135)))

(assert (= (and d!15915 c!10392) b!71356))

(assert (= (and d!15915 (not c!10392)) b!71357))

(assert (= (and b!71357 c!10393) b!71358))

(assert (= (and b!71357 (not c!10393)) b!71359))

(declare-fun m!68373 () Bool)

(assert (=> b!71358 m!68373))

(assert (=> b!71125 d!15915))

(declare-fun d!15917 () Bool)

(assert (=> d!15917 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31646 () Unit!2006)

(declare-fun choose!412 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2006)

(assert (=> d!15917 (= lt!31646 (choose!412 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31328 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31204 (defaultEntry!2192 newMap!16)))))

(assert (=> d!15917 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15917 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31328 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31204 (defaultEntry!2192 newMap!16)) lt!31646)))

(declare-fun bs!3057 () Bool)

(assert (= bs!3057 d!15917))

(assert (=> bs!3057 m!68107))

(assert (=> bs!3057 m!67909))

(declare-fun m!68375 () Bool)

(assert (=> bs!3057 m!68375))

(declare-fun m!68377 () Bool)

(assert (=> bs!3057 m!68377))

(assert (=> bs!3057 m!67909))

(declare-fun m!68379 () Bool)

(assert (=> bs!3057 m!68379))

(assert (=> b!70993 d!15917))

(declare-fun b!71376 () Bool)

(declare-fun res!38049 () Bool)

(declare-fun e!46731 () Bool)

(assert (=> b!71376 (=> (not res!38049) (not e!46731))))

(declare-fun lt!31651 () SeekEntryResult!245)

(assert (=> b!71376 (= res!38049 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!31651)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71376 (and (bvsge (index!3113 lt!31651) #b00000000000000000000000000000000) (bvslt (index!3113 lt!31651) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6179 () Bool)

(declare-fun call!6183 () Bool)

(assert (=> bm!6179 (= call!6183 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!71377 () Bool)

(assert (=> b!71377 (= e!46731 (not call!6183))))

(declare-fun b!71378 () Bool)

(declare-fun e!46728 () Bool)

(declare-fun e!46730 () Bool)

(assert (=> b!71378 (= e!46728 e!46730)))

(declare-fun res!38047 () Bool)

(declare-fun call!6182 () Bool)

(assert (=> b!71378 (= res!38047 call!6182)))

(assert (=> b!71378 (=> (not res!38047) (not e!46730))))

(declare-fun b!71379 () Bool)

(declare-fun res!38048 () Bool)

(assert (=> b!71379 (=> (not res!38048) (not e!46731))))

(assert (=> b!71379 (= res!38048 call!6182)))

(declare-fun e!46729 () Bool)

(assert (=> b!71379 (= e!46729 e!46731)))

(declare-fun b!71380 () Bool)

(assert (=> b!71380 (= e!46729 ((_ is Undefined!245) lt!31651))))

(declare-fun bm!6180 () Bool)

(declare-fun c!10398 () Bool)

(assert (=> bm!6180 (= call!6182 (inRange!0 (ite c!10398 (index!3110 lt!31651) (index!3113 lt!31651)) (mask!6149 newMap!16)))))

(declare-fun d!15919 () Bool)

(assert (=> d!15919 e!46728))

(assert (=> d!15919 (= c!10398 ((_ is MissingZero!245) lt!31651))))

(assert (=> d!15919 (= lt!31651 (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun lt!31652 () Unit!2006)

(declare-fun choose!413 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2006)

(assert (=> d!15919 (= lt!31652 (choose!413 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15919 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15919 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) lt!31652)))

(declare-fun b!71381 () Bool)

(assert (=> b!71381 (and (bvsge (index!3110 lt!31651) #b00000000000000000000000000000000) (bvslt (index!3110 lt!31651) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun res!38050 () Bool)

(assert (=> b!71381 (= res!38050 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3110 lt!31651)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71381 (=> (not res!38050) (not e!46730))))

(declare-fun b!71382 () Bool)

(assert (=> b!71382 (= e!46728 e!46729)))

(declare-fun c!10399 () Bool)

(assert (=> b!71382 (= c!10399 ((_ is MissingVacant!245) lt!31651))))

(declare-fun b!71383 () Bool)

(assert (=> b!71383 (= e!46730 (not call!6183))))

(assert (= (and d!15919 c!10398) b!71378))

(assert (= (and d!15919 (not c!10398)) b!71382))

(assert (= (and b!71378 res!38047) b!71381))

(assert (= (and b!71381 res!38050) b!71383))

(assert (= (and b!71382 c!10399) b!71379))

(assert (= (and b!71382 (not c!10399)) b!71380))

(assert (= (and b!71379 res!38048) b!71376))

(assert (= (and b!71376 res!38049) b!71377))

(assert (= (or b!71378 b!71379) bm!6180))

(assert (= (or b!71383 b!71377) bm!6179))

(declare-fun m!68381 () Bool)

(assert (=> b!71376 m!68381))

(assert (=> d!15919 m!67713))

(assert (=> d!15919 m!67865))

(assert (=> d!15919 m!67713))

(declare-fun m!68383 () Bool)

(assert (=> d!15919 m!68383))

(assert (=> d!15919 m!68107))

(assert (=> bm!6179 m!67713))

(assert (=> bm!6179 m!67873))

(declare-fun m!68385 () Bool)

(assert (=> b!71381 m!68385))

(declare-fun m!68387 () Bool)

(assert (=> bm!6180 m!68387))

(assert (=> bm!6120 d!15919))

(declare-fun d!15921 () Bool)

(declare-fun res!38055 () Bool)

(declare-fun e!46736 () Bool)

(assert (=> d!15921 (=> res!38055 e!46736)))

(assert (=> d!15921 (= res!38055 (and ((_ is Cons!1500) (toList!732 lt!31199)) (= (_1!1079 (h!2086 (toList!732 lt!31199))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (=> d!15921 (= (containsKey!135 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!46736)))

(declare-fun b!71388 () Bool)

(declare-fun e!46737 () Bool)

(assert (=> b!71388 (= e!46736 e!46737)))

(declare-fun res!38056 () Bool)

(assert (=> b!71388 (=> (not res!38056) (not e!46737))))

(assert (=> b!71388 (= res!38056 (and (or (not ((_ is Cons!1500) (toList!732 lt!31199))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31199))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) ((_ is Cons!1500) (toList!732 lt!31199)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31199))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun b!71389 () Bool)

(assert (=> b!71389 (= e!46737 (containsKey!135 (t!5044 (toList!732 lt!31199)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!15921 (not res!38055)) b!71388))

(assert (= (and b!71388 res!38056) b!71389))

(assert (=> b!71389 m!67713))

(declare-fun m!68389 () Bool)

(assert (=> b!71389 m!68389))

(assert (=> d!15799 d!15921))

(assert (=> b!70867 d!15869))

(declare-fun d!15923 () Bool)

(declare-fun e!46738 () Bool)

(assert (=> d!15923 e!46738))

(declare-fun res!38057 () Bool)

(assert (=> d!15923 (=> res!38057 e!46738)))

(declare-fun lt!31655 () Bool)

(assert (=> d!15923 (= res!38057 (not lt!31655))))

(declare-fun lt!31653 () Bool)

(assert (=> d!15923 (= lt!31655 lt!31653)))

(declare-fun lt!31654 () Unit!2006)

(declare-fun e!46739 () Unit!2006)

(assert (=> d!15923 (= lt!31654 e!46739)))

(declare-fun c!10400 () Bool)

(assert (=> d!15923 (= c!10400 lt!31653)))

(assert (=> d!15923 (= lt!31653 (containsKey!135 (toList!732 lt!31462) (_1!1079 lt!31200)))))

(assert (=> d!15923 (= (contains!726 lt!31462 (_1!1079 lt!31200)) lt!31655)))

(declare-fun b!71390 () Bool)

(declare-fun lt!31656 () Unit!2006)

(assert (=> b!71390 (= e!46739 lt!31656)))

(assert (=> b!71390 (= lt!31656 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31462) (_1!1079 lt!31200)))))

(assert (=> b!71390 (isDefined!85 (getValueByKey!131 (toList!732 lt!31462) (_1!1079 lt!31200)))))

(declare-fun b!71391 () Bool)

(declare-fun Unit!2024 () Unit!2006)

(assert (=> b!71391 (= e!46739 Unit!2024)))

(declare-fun b!71392 () Bool)

(assert (=> b!71392 (= e!46738 (isDefined!85 (getValueByKey!131 (toList!732 lt!31462) (_1!1079 lt!31200))))))

(assert (= (and d!15923 c!10400) b!71390))

(assert (= (and d!15923 (not c!10400)) b!71391))

(assert (= (and d!15923 (not res!38057)) b!71392))

(declare-fun m!68391 () Bool)

(assert (=> d!15923 m!68391))

(declare-fun m!68393 () Bool)

(assert (=> b!71390 m!68393))

(assert (=> b!71390 m!68043))

(assert (=> b!71390 m!68043))

(declare-fun m!68395 () Bool)

(assert (=> b!71390 m!68395))

(assert (=> b!71392 m!68043))

(assert (=> b!71392 m!68043))

(assert (=> b!71392 m!68395))

(assert (=> d!15821 d!15923))

(declare-fun d!15925 () Bool)

(declare-fun c!10401 () Bool)

(assert (=> d!15925 (= c!10401 (and ((_ is Cons!1500) lt!31461) (= (_1!1079 (h!2086 lt!31461)) (_1!1079 lt!31200))))))

(declare-fun e!46740 () Option!137)

(assert (=> d!15925 (= (getValueByKey!131 lt!31461 (_1!1079 lt!31200)) e!46740)))

(declare-fun b!71393 () Bool)

(assert (=> b!71393 (= e!46740 (Some!136 (_2!1079 (h!2086 lt!31461))))))

(declare-fun b!71395 () Bool)

(declare-fun e!46741 () Option!137)

(assert (=> b!71395 (= e!46741 (getValueByKey!131 (t!5044 lt!31461) (_1!1079 lt!31200)))))

(declare-fun b!71394 () Bool)

(assert (=> b!71394 (= e!46740 e!46741)))

(declare-fun c!10402 () Bool)

(assert (=> b!71394 (= c!10402 (and ((_ is Cons!1500) lt!31461) (not (= (_1!1079 (h!2086 lt!31461)) (_1!1079 lt!31200)))))))

(declare-fun b!71396 () Bool)

(assert (=> b!71396 (= e!46741 None!135)))

(assert (= (and d!15925 c!10401) b!71393))

(assert (= (and d!15925 (not c!10401)) b!71394))

(assert (= (and b!71394 c!10402) b!71395))

(assert (= (and b!71394 (not c!10402)) b!71396))

(declare-fun m!68397 () Bool)

(assert (=> b!71395 m!68397))

(assert (=> d!15821 d!15925))

(declare-fun d!15927 () Bool)

(assert (=> d!15927 (= (getValueByKey!131 lt!31461 (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200)))))

(declare-fun lt!31657 () Unit!2006)

(assert (=> d!15927 (= lt!31657 (choose!407 lt!31461 (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(declare-fun e!46742 () Bool)

(assert (=> d!15927 e!46742))

(declare-fun res!38058 () Bool)

(assert (=> d!15927 (=> (not res!38058) (not e!46742))))

(assert (=> d!15927 (= res!38058 (isStrictlySorted!286 lt!31461))))

(assert (=> d!15927 (= (lemmaContainsTupThenGetReturnValue!50 lt!31461 (_1!1079 lt!31200) (_2!1079 lt!31200)) lt!31657)))

(declare-fun b!71397 () Bool)

(declare-fun res!38059 () Bool)

(assert (=> b!71397 (=> (not res!38059) (not e!46742))))

(assert (=> b!71397 (= res!38059 (containsKey!135 lt!31461 (_1!1079 lt!31200)))))

(declare-fun b!71398 () Bool)

(assert (=> b!71398 (= e!46742 (contains!728 lt!31461 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(assert (= (and d!15927 res!38058) b!71397))

(assert (= (and b!71397 res!38059) b!71398))

(assert (=> d!15927 m!68037))

(declare-fun m!68399 () Bool)

(assert (=> d!15927 m!68399))

(declare-fun m!68401 () Bool)

(assert (=> d!15927 m!68401))

(declare-fun m!68403 () Bool)

(assert (=> b!71397 m!68403))

(declare-fun m!68405 () Bool)

(assert (=> b!71398 m!68405))

(assert (=> d!15821 d!15927))

(declare-fun b!71399 () Bool)

(declare-fun e!46744 () List!1504)

(declare-fun call!6185 () List!1504)

(assert (=> b!71399 (= e!46744 call!6185)))

(declare-fun b!71400 () Bool)

(declare-fun res!38060 () Bool)

(declare-fun e!46743 () Bool)

(assert (=> b!71400 (=> (not res!38060) (not e!46743))))

(declare-fun lt!31658 () List!1504)

(assert (=> b!71400 (= res!38060 (containsKey!135 lt!31658 (_1!1079 lt!31200)))))

(declare-fun b!71401 () Bool)

(declare-fun c!10404 () Bool)

(assert (=> b!71401 (= c!10404 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 lt!31200))))))

(declare-fun e!46746 () List!1504)

(declare-fun e!46745 () List!1504)

(assert (=> b!71401 (= e!46746 e!46745)))

(declare-fun b!71403 () Bool)

(declare-fun call!6186 () List!1504)

(assert (=> b!71403 (= e!46746 call!6186)))

(declare-fun b!71404 () Bool)

(declare-fun call!6184 () List!1504)

(assert (=> b!71404 (= e!46745 call!6184)))

(declare-fun b!71405 () Bool)

(declare-fun e!46747 () List!1504)

(assert (=> b!71405 (= e!46747 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31210)) (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(declare-fun bm!6181 () Bool)

(assert (=> bm!6181 (= call!6184 call!6186)))

(declare-fun bm!6182 () Bool)

(assert (=> bm!6182 (= call!6186 call!6185)))

(declare-fun c!10403 () Bool)

(declare-fun bm!6183 () Bool)

(assert (=> bm!6183 (= call!6185 ($colon$colon!64 e!46747 (ite c!10403 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200)))))))

(declare-fun c!10405 () Bool)

(assert (=> bm!6183 (= c!10405 c!10403)))

(declare-fun b!71406 () Bool)

(declare-fun c!10406 () Bool)

(assert (=> b!71406 (= e!46747 (ite c!10406 (t!5044 (toList!732 lt!31210)) (ite c!10404 (Cons!1500 (h!2086 (toList!732 lt!31210)) (t!5044 (toList!732 lt!31210))) Nil!1501)))))

(declare-fun b!71402 () Bool)

(assert (=> b!71402 (= e!46745 call!6184)))

(declare-fun d!15929 () Bool)

(assert (=> d!15929 e!46743))

(declare-fun res!38061 () Bool)

(assert (=> d!15929 (=> (not res!38061) (not e!46743))))

(assert (=> d!15929 (= res!38061 (isStrictlySorted!286 lt!31658))))

(assert (=> d!15929 (= lt!31658 e!46744)))

(assert (=> d!15929 (= c!10403 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 lt!31200))))))

(assert (=> d!15929 (isStrictlySorted!286 (toList!732 lt!31210))))

(assert (=> d!15929 (= (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 lt!31200) (_2!1079 lt!31200)) lt!31658)))

(declare-fun b!71407 () Bool)

(assert (=> b!71407 (= e!46743 (contains!728 lt!31658 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!71408 () Bool)

(assert (=> b!71408 (= e!46744 e!46746)))

(assert (=> b!71408 (= c!10406 (and ((_ is Cons!1500) (toList!732 lt!31210)) (= (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 lt!31200))))))

(assert (= (and d!15929 c!10403) b!71399))

(assert (= (and d!15929 (not c!10403)) b!71408))

(assert (= (and b!71408 c!10406) b!71403))

(assert (= (and b!71408 (not c!10406)) b!71401))

(assert (= (and b!71401 c!10404) b!71402))

(assert (= (and b!71401 (not c!10404)) b!71404))

(assert (= (or b!71402 b!71404) bm!6181))

(assert (= (or b!71403 bm!6181) bm!6182))

(assert (= (or b!71399 bm!6182) bm!6183))

(assert (= (and bm!6183 c!10405) b!71405))

(assert (= (and bm!6183 (not c!10405)) b!71406))

(assert (= (and d!15929 res!38061) b!71400))

(assert (= (and b!71400 res!38060) b!71407))

(declare-fun m!68407 () Bool)

(assert (=> bm!6183 m!68407))

(declare-fun m!68409 () Bool)

(assert (=> b!71405 m!68409))

(declare-fun m!68411 () Bool)

(assert (=> b!71400 m!68411))

(declare-fun m!68413 () Bool)

(assert (=> b!71407 m!68413))

(declare-fun m!68415 () Bool)

(assert (=> d!15929 m!68415))

(declare-fun m!68417 () Bool)

(assert (=> d!15929 m!68417))

(assert (=> d!15821 d!15929))

(declare-fun d!15931 () Bool)

(declare-fun e!46748 () Bool)

(assert (=> d!15931 e!46748))

(declare-fun res!38062 () Bool)

(assert (=> d!15931 (=> res!38062 e!46748)))

(declare-fun lt!31661 () Bool)

(assert (=> d!15931 (= res!38062 (not lt!31661))))

(declare-fun lt!31659 () Bool)

(assert (=> d!15931 (= lt!31661 lt!31659)))

(declare-fun lt!31660 () Unit!2006)

(declare-fun e!46749 () Unit!2006)

(assert (=> d!15931 (= lt!31660 e!46749)))

(declare-fun c!10407 () Bool)

(assert (=> d!15931 (= c!10407 lt!31659)))

(assert (=> d!15931 (= lt!31659 (containsKey!135 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443))))

(assert (=> d!15931 (= (contains!726 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)) lt!31443) lt!31661)))

(declare-fun b!71409 () Bool)

(declare-fun lt!31662 () Unit!2006)

(assert (=> b!71409 (= e!46749 lt!31662)))

(assert (=> b!71409 (= lt!31662 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443))))

(assert (=> b!71409 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443))))

(declare-fun b!71410 () Bool)

(declare-fun Unit!2025 () Unit!2006)

(assert (=> b!71410 (= e!46749 Unit!2025)))

(declare-fun b!71411 () Bool)

(assert (=> b!71411 (= e!46748 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443)))))

(assert (= (and d!15931 c!10407) b!71409))

(assert (= (and d!15931 (not c!10407)) b!71410))

(assert (= (and d!15931 (not res!38062)) b!71411))

(declare-fun m!68419 () Bool)

(assert (=> d!15931 m!68419))

(declare-fun m!68421 () Bool)

(assert (=> b!71409 m!68421))

(declare-fun m!68423 () Bool)

(assert (=> b!71409 m!68423))

(assert (=> b!71409 m!68423))

(declare-fun m!68425 () Bool)

(assert (=> b!71409 m!68425))

(assert (=> b!71411 m!68423))

(assert (=> b!71411 m!68423))

(assert (=> b!71411 m!68425))

(assert (=> b!71122 d!15931))

(assert (=> b!71122 d!15833))

(declare-fun d!15933 () Bool)

(assert (=> d!15933 (not (contains!726 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)) lt!31443))))

(declare-fun lt!31665 () Unit!2006)

(declare-fun choose!414 (ListLongMap!1433 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2006)

(assert (=> d!15933 (= lt!31665 (choose!414 lt!31446 lt!31444 lt!31441 lt!31443))))

(declare-fun e!46752 () Bool)

(assert (=> d!15933 e!46752))

(declare-fun res!38065 () Bool)

(assert (=> d!15933 (=> (not res!38065) (not e!46752))))

(assert (=> d!15933 (= res!38065 (not (contains!726 lt!31446 lt!31443)))))

(assert (=> d!15933 (= (addStillNotContains!25 lt!31446 lt!31444 lt!31441 lt!31443) lt!31665)))

(declare-fun b!71415 () Bool)

(assert (=> b!71415 (= e!46752 (not (= lt!31444 lt!31443)))))

(assert (= (and d!15933 res!38065) b!71415))

(assert (=> d!15933 m!67993))

(assert (=> d!15933 m!67993))

(assert (=> d!15933 m!67999))

(declare-fun m!68427 () Bool)

(assert (=> d!15933 m!68427))

(declare-fun m!68429 () Bool)

(assert (=> d!15933 m!68429))

(assert (=> b!71122 d!15933))

(declare-fun d!15935 () Bool)

(declare-fun e!46753 () Bool)

(assert (=> d!15935 e!46753))

(declare-fun res!38067 () Bool)

(assert (=> d!15935 (=> (not res!38067) (not e!46753))))

(declare-fun lt!31669 () ListLongMap!1433)

(assert (=> d!15935 (= res!38067 (contains!726 lt!31669 (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun lt!31668 () List!1504)

(assert (=> d!15935 (= lt!31669 (ListLongMap!1434 lt!31668))))

(declare-fun lt!31667 () Unit!2006)

(declare-fun lt!31666 () Unit!2006)

(assert (=> d!15935 (= lt!31667 lt!31666)))

(assert (=> d!15935 (= (getValueByKey!131 lt!31668 (_1!1079 (tuple2!2139 lt!31444 lt!31441))) (Some!136 (_2!1079 (tuple2!2139 lt!31444 lt!31441))))))

(assert (=> d!15935 (= lt!31666 (lemmaContainsTupThenGetReturnValue!50 lt!31668 (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441))))))

(assert (=> d!15935 (= lt!31668 (insertStrictlySorted!52 (toList!732 lt!31446) (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441))))))

(assert (=> d!15935 (= (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)) lt!31669)))

(declare-fun b!71416 () Bool)

(declare-fun res!38066 () Bool)

(assert (=> b!71416 (=> (not res!38066) (not e!46753))))

(assert (=> b!71416 (= res!38066 (= (getValueByKey!131 (toList!732 lt!31669) (_1!1079 (tuple2!2139 lt!31444 lt!31441))) (Some!136 (_2!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(declare-fun b!71417 () Bool)

(assert (=> b!71417 (= e!46753 (contains!728 (toList!732 lt!31669) (tuple2!2139 lt!31444 lt!31441)))))

(assert (= (and d!15935 res!38067) b!71416))

(assert (= (and b!71416 res!38066) b!71417))

(declare-fun m!68431 () Bool)

(assert (=> d!15935 m!68431))

(declare-fun m!68433 () Bool)

(assert (=> d!15935 m!68433))

(declare-fun m!68435 () Bool)

(assert (=> d!15935 m!68435))

(declare-fun m!68437 () Bool)

(assert (=> d!15935 m!68437))

(declare-fun m!68439 () Bool)

(assert (=> b!71416 m!68439))

(declare-fun m!68441 () Bool)

(assert (=> b!71417 m!68441))

(assert (=> b!71122 d!15935))

(declare-fun d!15937 () Bool)

(declare-fun e!46754 () Bool)

(assert (=> d!15937 e!46754))

(declare-fun res!38069 () Bool)

(assert (=> d!15937 (=> (not res!38069) (not e!46754))))

(declare-fun lt!31673 () ListLongMap!1433)

(assert (=> d!15937 (= res!38069 (contains!726 lt!31673 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!31672 () List!1504)

(assert (=> d!15937 (= lt!31673 (ListLongMap!1434 lt!31672))))

(declare-fun lt!31671 () Unit!2006)

(declare-fun lt!31670 () Unit!2006)

(assert (=> d!15937 (= lt!31671 lt!31670)))

(assert (=> d!15937 (= (getValueByKey!131 lt!31672 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15937 (= lt!31670 (lemmaContainsTupThenGetReturnValue!50 lt!31672 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15937 (= lt!31672 (insertStrictlySorted!52 (toList!732 call!6152) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15937 (= (+!95 call!6152 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!31673)))

(declare-fun b!71418 () Bool)

(declare-fun res!38068 () Bool)

(assert (=> b!71418 (=> (not res!38068) (not e!46754))))

(assert (=> b!71418 (= res!38068 (= (getValueByKey!131 (toList!732 lt!31673) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!71419 () Bool)

(assert (=> b!71419 (= e!46754 (contains!728 (toList!732 lt!31673) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15937 res!38069) b!71418))

(assert (= (and b!71418 res!38068) b!71419))

(declare-fun m!68443 () Bool)

(assert (=> d!15937 m!68443))

(declare-fun m!68445 () Bool)

(assert (=> d!15937 m!68445))

(declare-fun m!68447 () Bool)

(assert (=> d!15937 m!68447))

(declare-fun m!68449 () Bool)

(assert (=> d!15937 m!68449))

(declare-fun m!68451 () Bool)

(assert (=> b!71418 m!68451))

(declare-fun m!68453 () Bool)

(assert (=> b!71419 m!68453))

(assert (=> b!71122 d!15937))

(declare-fun d!15939 () Bool)

(assert (=> d!15939 (= (inRange!0 (ite c!10289 (ite c!10299 (index!3111 lt!31334) (ite c!10294 (index!3110 lt!31335) (index!3113 lt!31335))) (ite c!10300 (index!3111 lt!31338) (ite c!10290 (index!3110 lt!31331) (index!3113 lt!31331)))) (mask!6149 newMap!16)) (and (bvsge (ite c!10289 (ite c!10299 (index!3111 lt!31334) (ite c!10294 (index!3110 lt!31335) (index!3113 lt!31335))) (ite c!10300 (index!3111 lt!31338) (ite c!10290 (index!3110 lt!31331) (index!3113 lt!31331)))) #b00000000000000000000000000000000) (bvslt (ite c!10289 (ite c!10299 (index!3111 lt!31334) (ite c!10294 (index!3110 lt!31335) (index!3113 lt!31335))) (ite c!10300 (index!3111 lt!31338) (ite c!10290 (index!3110 lt!31331) (index!3113 lt!31331)))) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6103 d!15939))

(declare-fun d!15941 () Bool)

(declare-fun c!10408 () Bool)

(assert (=> d!15941 (= c!10408 (and ((_ is Cons!1500) (toList!732 lt!31426)) (= (_1!1079 (h!2086 (toList!732 lt!31426))) (_1!1079 lt!31205))))))

(declare-fun e!46755 () Option!137)

(assert (=> d!15941 (= (getValueByKey!131 (toList!732 lt!31426) (_1!1079 lt!31205)) e!46755)))

(declare-fun b!71420 () Bool)

(assert (=> b!71420 (= e!46755 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31426)))))))

(declare-fun b!71422 () Bool)

(declare-fun e!46756 () Option!137)

(assert (=> b!71422 (= e!46756 (getValueByKey!131 (t!5044 (toList!732 lt!31426)) (_1!1079 lt!31205)))))

(declare-fun b!71421 () Bool)

(assert (=> b!71421 (= e!46755 e!46756)))

(declare-fun c!10409 () Bool)

(assert (=> b!71421 (= c!10409 (and ((_ is Cons!1500) (toList!732 lt!31426)) (not (= (_1!1079 (h!2086 (toList!732 lt!31426))) (_1!1079 lt!31205)))))))

(declare-fun b!71423 () Bool)

(assert (=> b!71423 (= e!46756 None!135)))

(assert (= (and d!15941 c!10408) b!71420))

(assert (= (and d!15941 (not c!10408)) b!71421))

(assert (= (and b!71421 c!10409) b!71422))

(assert (= (and b!71421 (not c!10409)) b!71423))

(declare-fun m!68455 () Bool)

(assert (=> b!71422 m!68455))

(assert (=> b!71087 d!15941))

(assert (=> d!15779 d!15783))

(declare-fun d!15943 () Bool)

(assert (=> d!15943 (not (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!15943 true))

(declare-fun _$68!52 () Unit!2006)

(assert (=> d!15943 (= (choose!68 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500)) _$68!52)))

(declare-fun bs!3058 () Bool)

(assert (= bs!3058 d!15943))

(assert (=> bs!3058 m!67713))

(assert (=> bs!3058 m!67731))

(assert (=> d!15779 d!15943))

(declare-fun d!15945 () Bool)

(declare-fun e!46757 () Bool)

(assert (=> d!15945 e!46757))

(declare-fun res!38070 () Bool)

(assert (=> d!15945 (=> res!38070 e!46757)))

(declare-fun lt!31676 () Bool)

(assert (=> d!15945 (= res!38070 (not lt!31676))))

(declare-fun lt!31674 () Bool)

(assert (=> d!15945 (= lt!31676 lt!31674)))

(declare-fun lt!31675 () Unit!2006)

(declare-fun e!46758 () Unit!2006)

(assert (=> d!15945 (= lt!31675 e!46758)))

(declare-fun c!10410 () Bool)

(assert (=> d!15945 (= c!10410 lt!31674)))

(assert (=> d!15945 (= lt!31674 (containsKey!135 (toList!732 lt!31458) (_1!1079 lt!31205)))))

(assert (=> d!15945 (= (contains!726 lt!31458 (_1!1079 lt!31205)) lt!31676)))

(declare-fun b!71424 () Bool)

(declare-fun lt!31677 () Unit!2006)

(assert (=> b!71424 (= e!46758 lt!31677)))

(assert (=> b!71424 (= lt!31677 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31458) (_1!1079 lt!31205)))))

(assert (=> b!71424 (isDefined!85 (getValueByKey!131 (toList!732 lt!31458) (_1!1079 lt!31205)))))

(declare-fun b!71425 () Bool)

(declare-fun Unit!2026 () Unit!2006)

(assert (=> b!71425 (= e!46758 Unit!2026)))

(declare-fun b!71426 () Bool)

(assert (=> b!71426 (= e!46757 (isDefined!85 (getValueByKey!131 (toList!732 lt!31458) (_1!1079 lt!31205))))))

(assert (= (and d!15945 c!10410) b!71424))

(assert (= (and d!15945 (not c!10410)) b!71425))

(assert (= (and d!15945 (not res!38070)) b!71426))

(declare-fun m!68457 () Bool)

(assert (=> d!15945 m!68457))

(declare-fun m!68459 () Bool)

(assert (=> b!71424 m!68459))

(assert (=> b!71424 m!68031))

(assert (=> b!71424 m!68031))

(declare-fun m!68461 () Bool)

(assert (=> b!71424 m!68461))

(assert (=> b!71426 m!68031))

(assert (=> b!71426 m!68031))

(assert (=> b!71426 m!68461))

(assert (=> d!15819 d!15945))

(declare-fun d!15947 () Bool)

(declare-fun c!10411 () Bool)

(assert (=> d!15947 (= c!10411 (and ((_ is Cons!1500) lt!31457) (= (_1!1079 (h!2086 lt!31457)) (_1!1079 lt!31205))))))

(declare-fun e!46759 () Option!137)

(assert (=> d!15947 (= (getValueByKey!131 lt!31457 (_1!1079 lt!31205)) e!46759)))

(declare-fun b!71427 () Bool)

(assert (=> b!71427 (= e!46759 (Some!136 (_2!1079 (h!2086 lt!31457))))))

(declare-fun b!71429 () Bool)

(declare-fun e!46760 () Option!137)

(assert (=> b!71429 (= e!46760 (getValueByKey!131 (t!5044 lt!31457) (_1!1079 lt!31205)))))

(declare-fun b!71428 () Bool)

(assert (=> b!71428 (= e!46759 e!46760)))

(declare-fun c!10412 () Bool)

(assert (=> b!71428 (= c!10412 (and ((_ is Cons!1500) lt!31457) (not (= (_1!1079 (h!2086 lt!31457)) (_1!1079 lt!31205)))))))

(declare-fun b!71430 () Bool)

(assert (=> b!71430 (= e!46760 None!135)))

(assert (= (and d!15947 c!10411) b!71427))

(assert (= (and d!15947 (not c!10411)) b!71428))

(assert (= (and b!71428 c!10412) b!71429))

(assert (= (and b!71428 (not c!10412)) b!71430))

(declare-fun m!68463 () Bool)

(assert (=> b!71429 m!68463))

(assert (=> d!15819 d!15947))

(declare-fun d!15949 () Bool)

(assert (=> d!15949 (= (getValueByKey!131 lt!31457 (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205)))))

(declare-fun lt!31678 () Unit!2006)

(assert (=> d!15949 (= lt!31678 (choose!407 lt!31457 (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(declare-fun e!46761 () Bool)

(assert (=> d!15949 e!46761))

(declare-fun res!38071 () Bool)

(assert (=> d!15949 (=> (not res!38071) (not e!46761))))

(assert (=> d!15949 (= res!38071 (isStrictlySorted!286 lt!31457))))

(assert (=> d!15949 (= (lemmaContainsTupThenGetReturnValue!50 lt!31457 (_1!1079 lt!31205) (_2!1079 lt!31205)) lt!31678)))

(declare-fun b!71431 () Bool)

(declare-fun res!38072 () Bool)

(assert (=> b!71431 (=> (not res!38072) (not e!46761))))

(assert (=> b!71431 (= res!38072 (containsKey!135 lt!31457 (_1!1079 lt!31205)))))

(declare-fun b!71432 () Bool)

(assert (=> b!71432 (= e!46761 (contains!728 lt!31457 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(assert (= (and d!15949 res!38071) b!71431))

(assert (= (and b!71431 res!38072) b!71432))

(assert (=> d!15949 m!68025))

(declare-fun m!68465 () Bool)

(assert (=> d!15949 m!68465))

(declare-fun m!68467 () Bool)

(assert (=> d!15949 m!68467))

(declare-fun m!68469 () Bool)

(assert (=> b!71431 m!68469))

(declare-fun m!68471 () Bool)

(assert (=> b!71432 m!68471))

(assert (=> d!15819 d!15949))

(declare-fun b!71433 () Bool)

(declare-fun e!46763 () List!1504)

(declare-fun call!6188 () List!1504)

(assert (=> b!71433 (= e!46763 call!6188)))

(declare-fun b!71434 () Bool)

(declare-fun res!38073 () Bool)

(declare-fun e!46762 () Bool)

(assert (=> b!71434 (=> (not res!38073) (not e!46762))))

(declare-fun lt!31679 () List!1504)

(assert (=> b!71434 (= res!38073 (containsKey!135 lt!31679 (_1!1079 lt!31205)))))

(declare-fun b!71435 () Bool)

(declare-fun c!10414 () Bool)

(assert (=> b!71435 (= c!10414 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 lt!31205))))))

(declare-fun e!46765 () List!1504)

(declare-fun e!46764 () List!1504)

(assert (=> b!71435 (= e!46765 e!46764)))

(declare-fun b!71437 () Bool)

(declare-fun call!6189 () List!1504)

(assert (=> b!71437 (= e!46765 call!6189)))

(declare-fun b!71438 () Bool)

(declare-fun call!6187 () List!1504)

(assert (=> b!71438 (= e!46764 call!6187)))

(declare-fun b!71439 () Bool)

(declare-fun e!46766 () List!1504)

(assert (=> b!71439 (= e!46766 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31210)) (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(declare-fun bm!6184 () Bool)

(assert (=> bm!6184 (= call!6187 call!6189)))

(declare-fun bm!6185 () Bool)

(assert (=> bm!6185 (= call!6189 call!6188)))

(declare-fun c!10413 () Bool)

(declare-fun bm!6186 () Bool)

(assert (=> bm!6186 (= call!6188 ($colon$colon!64 e!46766 (ite c!10413 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205)))))))

(declare-fun c!10415 () Bool)

(assert (=> bm!6186 (= c!10415 c!10413)))

(declare-fun b!71440 () Bool)

(declare-fun c!10416 () Bool)

(assert (=> b!71440 (= e!46766 (ite c!10416 (t!5044 (toList!732 lt!31210)) (ite c!10414 (Cons!1500 (h!2086 (toList!732 lt!31210)) (t!5044 (toList!732 lt!31210))) Nil!1501)))))

(declare-fun b!71436 () Bool)

(assert (=> b!71436 (= e!46764 call!6187)))

(declare-fun d!15951 () Bool)

(assert (=> d!15951 e!46762))

(declare-fun res!38074 () Bool)

(assert (=> d!15951 (=> (not res!38074) (not e!46762))))

(assert (=> d!15951 (= res!38074 (isStrictlySorted!286 lt!31679))))

(assert (=> d!15951 (= lt!31679 e!46763)))

(assert (=> d!15951 (= c!10413 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 lt!31205))))))

(assert (=> d!15951 (isStrictlySorted!286 (toList!732 lt!31210))))

(assert (=> d!15951 (= (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 lt!31205) (_2!1079 lt!31205)) lt!31679)))

(declare-fun b!71441 () Bool)

(assert (=> b!71441 (= e!46762 (contains!728 lt!31679 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!71442 () Bool)

(assert (=> b!71442 (= e!46763 e!46765)))

(assert (=> b!71442 (= c!10416 (and ((_ is Cons!1500) (toList!732 lt!31210)) (= (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 lt!31205))))))

(assert (= (and d!15951 c!10413) b!71433))

(assert (= (and d!15951 (not c!10413)) b!71442))

(assert (= (and b!71442 c!10416) b!71437))

(assert (= (and b!71442 (not c!10416)) b!71435))

(assert (= (and b!71435 c!10414) b!71436))

(assert (= (and b!71435 (not c!10414)) b!71438))

(assert (= (or b!71436 b!71438) bm!6184))

(assert (= (or b!71437 bm!6184) bm!6185))

(assert (= (or b!71433 bm!6185) bm!6186))

(assert (= (and bm!6186 c!10415) b!71439))

(assert (= (and bm!6186 (not c!10415)) b!71440))

(assert (= (and d!15951 res!38074) b!71434))

(assert (= (and b!71434 res!38073) b!71441))

(declare-fun m!68473 () Bool)

(assert (=> bm!6186 m!68473))

(declare-fun m!68475 () Bool)

(assert (=> b!71439 m!68475))

(declare-fun m!68477 () Bool)

(assert (=> b!71434 m!68477))

(declare-fun m!68479 () Bool)

(assert (=> b!71441 m!68479))

(declare-fun m!68481 () Bool)

(assert (=> d!15951 m!68481))

(assert (=> d!15951 m!68417))

(assert (=> d!15819 d!15951))

(declare-fun d!15953 () Bool)

(assert (=> d!15953 (= (get!1148 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2516 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!70883 d!15953))

(declare-fun b!71443 () Bool)

(declare-fun e!46776 () Bool)

(declare-fun e!46767 () Bool)

(assert (=> b!71443 (= e!46776 e!46767)))

(declare-fun res!38076 () Bool)

(declare-fun call!6194 () Bool)

(assert (=> b!71443 (= res!38076 call!6194)))

(assert (=> b!71443 (=> (not res!38076) (not e!46767))))

(declare-fun b!71444 () Bool)

(declare-fun e!46778 () ListLongMap!1433)

(declare-fun call!6190 () ListLongMap!1433)

(assert (=> b!71444 (= e!46778 (+!95 call!6190 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun b!71445 () Bool)

(declare-fun e!46775 () ListLongMap!1433)

(declare-fun call!6195 () ListLongMap!1433)

(assert (=> b!71445 (= e!46775 call!6195)))

(declare-fun b!71446 () Bool)

(declare-fun e!46769 () Unit!2006)

(declare-fun Unit!2027 () Unit!2006)

(assert (=> b!71446 (= e!46769 Unit!2027)))

(declare-fun b!71447 () Bool)

(declare-fun call!6192 () ListLongMap!1433)

(assert (=> b!71447 (= e!46775 call!6192)))

(declare-fun b!71448 () Bool)

(declare-fun e!46771 () Bool)

(assert (=> b!71448 (= e!46771 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6187 () Bool)

(declare-fun call!6191 () ListLongMap!1433)

(assert (=> bm!6187 (= call!6195 call!6191)))

(declare-fun b!71449 () Bool)

(assert (=> b!71449 (= e!46776 (not call!6194))))

(declare-fun bm!6189 () Bool)

(assert (=> bm!6189 (= call!6192 call!6190)))

(declare-fun bm!6190 () Bool)

(declare-fun call!6196 () ListLongMap!1433)

(assert (=> bm!6190 (= call!6191 call!6196)))

(declare-fun b!71450 () Bool)

(declare-fun e!46774 () Bool)

(declare-fun e!46773 () Bool)

(assert (=> b!71450 (= e!46774 e!46773)))

(declare-fun c!10420 () Bool)

(assert (=> b!71450 (= c!10420 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6191 () Bool)

(declare-fun lt!31683 () ListLongMap!1433)

(assert (=> bm!6191 (= call!6194 (contains!726 lt!31683 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71451 () Bool)

(declare-fun e!46772 () Bool)

(assert (=> b!71451 (= e!46772 (= (apply!74 lt!31683 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun b!71452 () Bool)

(declare-fun e!46770 () ListLongMap!1433)

(assert (=> b!71452 (= e!46778 e!46770)))

(declare-fun c!10417 () Bool)

(assert (=> b!71452 (= c!10417 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71453 () Bool)

(declare-fun e!46779 () Bool)

(declare-fun e!46768 () Bool)

(assert (=> b!71453 (= e!46779 e!46768)))

(declare-fun res!38077 () Bool)

(assert (=> b!71453 (=> (not res!38077) (not e!46768))))

(assert (=> b!71453 (= res!38077 (contains!726 lt!31683 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71453 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71454 () Bool)

(assert (=> b!71454 (= e!46773 e!46772)))

(declare-fun res!38078 () Bool)

(declare-fun call!6193 () Bool)

(assert (=> b!71454 (= res!38078 call!6193)))

(assert (=> b!71454 (=> (not res!38078) (not e!46772))))

(declare-fun bm!6192 () Bool)

(assert (=> bm!6192 (= call!6193 (contains!726 lt!31683 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71455 () Bool)

(assert (=> b!71455 (= e!46770 call!6192)))

(declare-fun b!71456 () Bool)

(assert (=> b!71456 (= e!46768 (= (apply!74 lt!31683 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71456 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_values!2175 newMap!16))))))

(assert (=> b!71456 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71457 () Bool)

(declare-fun lt!31693 () Unit!2006)

(assert (=> b!71457 (= e!46769 lt!31693)))

(declare-fun lt!31684 () ListLongMap!1433)

(assert (=> b!71457 (= lt!31684 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31701 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31701 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31696 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31696 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31697 () Unit!2006)

(assert (=> b!71457 (= lt!31697 (addStillContains!50 lt!31684 lt!31701 (zeroValue!2096 newMap!16) lt!31696))))

(assert (=> b!71457 (contains!726 (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))) lt!31696)))

(declare-fun lt!31689 () Unit!2006)

(assert (=> b!71457 (= lt!31689 lt!31697)))

(declare-fun lt!31686 () ListLongMap!1433)

(assert (=> b!71457 (= lt!31686 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31687 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31687 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31688 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31688 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31700 () Unit!2006)

(assert (=> b!71457 (= lt!31700 (addApplyDifferent!50 lt!31686 lt!31687 (minValue!2096 newMap!16) lt!31688))))

(assert (=> b!71457 (= (apply!74 (+!95 lt!31686 (tuple2!2139 lt!31687 (minValue!2096 newMap!16))) lt!31688) (apply!74 lt!31686 lt!31688))))

(declare-fun lt!31692 () Unit!2006)

(assert (=> b!71457 (= lt!31692 lt!31700)))

(declare-fun lt!31695 () ListLongMap!1433)

(assert (=> b!71457 (= lt!31695 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31691 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31691 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31698 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31698 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31690 () Unit!2006)

(assert (=> b!71457 (= lt!31690 (addApplyDifferent!50 lt!31695 lt!31691 (zeroValue!2096 newMap!16) lt!31698))))

(assert (=> b!71457 (= (apply!74 (+!95 lt!31695 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))) lt!31698) (apply!74 lt!31695 lt!31698))))

(declare-fun lt!31694 () Unit!2006)

(assert (=> b!71457 (= lt!31694 lt!31690)))

(declare-fun lt!31685 () ListLongMap!1433)

(assert (=> b!71457 (= lt!31685 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31681 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31681 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31682 () (_ BitVec 64))

(assert (=> b!71457 (= lt!31682 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71457 (= lt!31693 (addApplyDifferent!50 lt!31685 lt!31681 (minValue!2096 newMap!16) lt!31682))))

(assert (=> b!71457 (= (apply!74 (+!95 lt!31685 (tuple2!2139 lt!31681 (minValue!2096 newMap!16))) lt!31682) (apply!74 lt!31685 lt!31682))))

(declare-fun b!71458 () Bool)

(assert (=> b!71458 (= e!46773 (not call!6193))))

(declare-fun b!71459 () Bool)

(declare-fun res!38081 () Bool)

(assert (=> b!71459 (=> (not res!38081) (not e!46774))))

(assert (=> b!71459 (= res!38081 e!46779)))

(declare-fun res!38082 () Bool)

(assert (=> b!71459 (=> res!38082 e!46779)))

(assert (=> b!71459 (= res!38082 (not e!46771))))

(declare-fun res!38080 () Bool)

(assert (=> b!71459 (=> (not res!38080) (not e!46771))))

(assert (=> b!71459 (= res!38080 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6193 () Bool)

(assert (=> bm!6193 (= call!6196 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71460 () Bool)

(declare-fun e!46777 () Bool)

(assert (=> b!71460 (= e!46777 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71461 () Bool)

(declare-fun res!38075 () Bool)

(assert (=> b!71461 (=> (not res!38075) (not e!46774))))

(assert (=> b!71461 (= res!38075 e!46776)))

(declare-fun c!10419 () Bool)

(assert (=> b!71461 (= c!10419 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6188 () Bool)

(declare-fun c!10421 () Bool)

(assert (=> bm!6188 (= call!6190 (+!95 (ite c!10421 call!6196 (ite c!10417 call!6191 call!6195)) (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun d!15955 () Bool)

(assert (=> d!15955 e!46774))

(declare-fun res!38079 () Bool)

(assert (=> d!15955 (=> (not res!38079) (not e!46774))))

(assert (=> d!15955 (= res!38079 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun lt!31680 () ListLongMap!1433)

(assert (=> d!15955 (= lt!31683 lt!31680)))

(declare-fun lt!31699 () Unit!2006)

(assert (=> d!15955 (= lt!31699 e!46769)))

(declare-fun c!10418 () Bool)

(assert (=> d!15955 (= c!10418 e!46777)))

(declare-fun res!38083 () Bool)

(assert (=> d!15955 (=> (not res!38083) (not e!46777))))

(assert (=> d!15955 (= res!38083 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!15955 (= lt!31680 e!46778)))

(assert (=> d!15955 (= c!10421 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15955 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15955 (= (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31683)))

(declare-fun b!71462 () Bool)

(assert (=> b!71462 (= e!46767 (= (apply!74 lt!31683 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!71463 () Bool)

(declare-fun c!10422 () Bool)

(assert (=> b!71463 (= c!10422 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!71463 (= e!46770 e!46775)))

(assert (= (and d!15955 c!10421) b!71444))

(assert (= (and d!15955 (not c!10421)) b!71452))

(assert (= (and b!71452 c!10417) b!71455))

(assert (= (and b!71452 (not c!10417)) b!71463))

(assert (= (and b!71463 c!10422) b!71447))

(assert (= (and b!71463 (not c!10422)) b!71445))

(assert (= (or b!71447 b!71445) bm!6187))

(assert (= (or b!71455 bm!6187) bm!6190))

(assert (= (or b!71455 b!71447) bm!6189))

(assert (= (or b!71444 bm!6190) bm!6193))

(assert (= (or b!71444 bm!6189) bm!6188))

(assert (= (and d!15955 res!38083) b!71460))

(assert (= (and d!15955 c!10418) b!71457))

(assert (= (and d!15955 (not c!10418)) b!71446))

(assert (= (and d!15955 res!38079) b!71459))

(assert (= (and b!71459 res!38080) b!71448))

(assert (= (and b!71459 (not res!38082)) b!71453))

(assert (= (and b!71453 res!38077) b!71456))

(assert (= (and b!71459 res!38081) b!71461))

(assert (= (and b!71461 c!10419) b!71443))

(assert (= (and b!71461 (not c!10419)) b!71449))

(assert (= (and b!71443 res!38076) b!71462))

(assert (= (or b!71443 b!71449) bm!6191))

(assert (= (and b!71461 res!38075) b!71450))

(assert (= (and b!71450 c!10420) b!71454))

(assert (= (and b!71450 (not c!10420)) b!71458))

(assert (= (and b!71454 res!38078) b!71451))

(assert (= (or b!71454 b!71458) bm!6192))

(declare-fun b_lambda!3209 () Bool)

(assert (=> (not b_lambda!3209) (not b!71456)))

(declare-fun tb!1521 () Bool)

(declare-fun t!5051 () Bool)

(assert (=> (and b!70764 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16)) t!5051) tb!1521))

(declare-fun result!2669 () Bool)

(assert (=> tb!1521 (= result!2669 tp_is_empty!2469)))

(assert (=> b!71456 t!5051))

(declare-fun b_and!4393 () Bool)

(assert (= b_and!4389 (and (=> t!5051 result!2669) b_and!4393)))

(declare-fun t!5053 () Bool)

(declare-fun tb!1523 () Bool)

(assert (=> (and b!70778 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 newMap!16)) t!5053) tb!1523))

(declare-fun result!2671 () Bool)

(assert (= result!2671 result!2669))

(assert (=> b!71456 t!5053))

(declare-fun b_and!4395 () Bool)

(assert (= b_and!4391 (and (=> t!5053 result!2671) b_and!4395)))

(assert (=> b!71453 m!68067))

(assert (=> b!71453 m!68067))

(declare-fun m!68483 () Bool)

(assert (=> b!71453 m!68483))

(declare-fun m!68485 () Bool)

(assert (=> bm!6191 m!68485))

(declare-fun m!68487 () Bool)

(assert (=> bm!6192 m!68487))

(assert (=> b!71448 m!68067))

(assert (=> b!71448 m!68067))

(assert (=> b!71448 m!68077))

(assert (=> b!71457 m!68067))

(declare-fun m!68489 () Bool)

(assert (=> b!71457 m!68489))

(declare-fun m!68491 () Bool)

(assert (=> b!71457 m!68491))

(declare-fun m!68493 () Bool)

(assert (=> b!71457 m!68493))

(declare-fun m!68495 () Bool)

(assert (=> b!71457 m!68495))

(declare-fun m!68497 () Bool)

(assert (=> b!71457 m!68497))

(declare-fun m!68499 () Bool)

(assert (=> b!71457 m!68499))

(assert (=> b!71457 m!68493))

(declare-fun m!68501 () Bool)

(assert (=> b!71457 m!68501))

(declare-fun m!68503 () Bool)

(assert (=> b!71457 m!68503))

(assert (=> b!71457 m!68499))

(declare-fun m!68505 () Bool)

(assert (=> b!71457 m!68505))

(declare-fun m!68507 () Bool)

(assert (=> b!71457 m!68507))

(declare-fun m!68509 () Bool)

(assert (=> b!71457 m!68509))

(assert (=> b!71457 m!68507))

(declare-fun m!68511 () Bool)

(assert (=> b!71457 m!68511))

(declare-fun m!68513 () Bool)

(assert (=> b!71457 m!68513))

(declare-fun m!68515 () Bool)

(assert (=> b!71457 m!68515))

(declare-fun m!68517 () Bool)

(assert (=> b!71457 m!68517))

(declare-fun m!68519 () Bool)

(assert (=> b!71457 m!68519))

(assert (=> b!71457 m!68511))

(assert (=> bm!6193 m!68519))

(declare-fun m!68521 () Bool)

(assert (=> bm!6188 m!68521))

(declare-fun m!68523 () Bool)

(assert (=> b!71462 m!68523))

(declare-fun m!68525 () Bool)

(assert (=> b!71451 m!68525))

(declare-fun m!68527 () Bool)

(assert (=> b!71456 m!68527))

(assert (=> b!71456 m!68527))

(declare-fun m!68529 () Bool)

(assert (=> b!71456 m!68529))

(declare-fun m!68531 () Bool)

(assert (=> b!71456 m!68531))

(assert (=> b!71456 m!68529))

(assert (=> b!71456 m!68067))

(assert (=> b!71456 m!68067))

(declare-fun m!68533 () Bool)

(assert (=> b!71456 m!68533))

(assert (=> b!71460 m!68067))

(assert (=> b!71460 m!68067))

(assert (=> b!71460 m!68077))

(assert (=> d!15955 m!68107))

(declare-fun m!68535 () Bool)

(assert (=> b!71444 m!68535))

(assert (=> b!70991 d!15955))

(declare-fun d!15957 () Bool)

(declare-fun e!46780 () Bool)

(assert (=> d!15957 e!46780))

(declare-fun res!38084 () Bool)

(assert (=> d!15957 (=> res!38084 e!46780)))

(declare-fun lt!31704 () Bool)

(assert (=> d!15957 (= res!38084 (not lt!31704))))

(declare-fun lt!31702 () Bool)

(assert (=> d!15957 (= lt!31704 lt!31702)))

(declare-fun lt!31703 () Unit!2006)

(declare-fun e!46781 () Unit!2006)

(assert (=> d!15957 (= lt!31703 e!46781)))

(declare-fun c!10423 () Bool)

(assert (=> d!15957 (= c!10423 lt!31702)))

(assert (=> d!15957 (= lt!31702 (containsKey!135 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15957 (= (contains!726 lt!31396 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31704)))

(declare-fun b!71464 () Bool)

(declare-fun lt!31705 () Unit!2006)

(assert (=> b!71464 (= e!46781 lt!31705)))

(assert (=> b!71464 (= lt!31705 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71464 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71465 () Bool)

(declare-fun Unit!2028 () Unit!2006)

(assert (=> b!71465 (= e!46781 Unit!2028)))

(declare-fun b!71466 () Bool)

(assert (=> b!71466 (= e!46780 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15957 c!10423) b!71464))

(assert (= (and d!15957 (not c!10423)) b!71465))

(assert (= (and d!15957 (not res!38084)) b!71466))

(declare-fun m!68537 () Bool)

(assert (=> d!15957 m!68537))

(declare-fun m!68539 () Bool)

(assert (=> b!71464 m!68539))

(assert (=> b!71464 m!68111))

(assert (=> b!71464 m!68111))

(declare-fun m!68541 () Bool)

(assert (=> b!71464 m!68541))

(assert (=> b!71466 m!68111))

(assert (=> b!71466 m!68111))

(assert (=> b!71466 m!68541))

(assert (=> bm!6144 d!15957))

(assert (=> d!15807 d!15955))

(declare-fun d!15959 () Bool)

(declare-fun e!46782 () Bool)

(assert (=> d!15959 e!46782))

(declare-fun res!38085 () Bool)

(assert (=> d!15959 (=> res!38085 e!46782)))

(declare-fun lt!31708 () Bool)

(assert (=> d!15959 (= res!38085 (not lt!31708))))

(declare-fun lt!31706 () Bool)

(assert (=> d!15959 (= lt!31708 lt!31706)))

(declare-fun lt!31707 () Unit!2006)

(declare-fun e!46783 () Unit!2006)

(assert (=> d!15959 (= lt!31707 e!46783)))

(declare-fun c!10424 () Bool)

(assert (=> d!15959 (= c!10424 lt!31706)))

(assert (=> d!15959 (= lt!31706 (containsKey!135 (toList!732 lt!31451) (_1!1079 lt!31200)))))

(assert (=> d!15959 (= (contains!726 lt!31451 (_1!1079 lt!31200)) lt!31708)))

(declare-fun b!71467 () Bool)

(declare-fun lt!31709 () Unit!2006)

(assert (=> b!71467 (= e!46783 lt!31709)))

(assert (=> b!71467 (= lt!31709 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31451) (_1!1079 lt!31200)))))

(assert (=> b!71467 (isDefined!85 (getValueByKey!131 (toList!732 lt!31451) (_1!1079 lt!31200)))))

(declare-fun b!71468 () Bool)

(declare-fun Unit!2029 () Unit!2006)

(assert (=> b!71468 (= e!46783 Unit!2029)))

(declare-fun b!71469 () Bool)

(assert (=> b!71469 (= e!46782 (isDefined!85 (getValueByKey!131 (toList!732 lt!31451) (_1!1079 lt!31200))))))

(assert (= (and d!15959 c!10424) b!71467))

(assert (= (and d!15959 (not c!10424)) b!71468))

(assert (= (and d!15959 (not res!38085)) b!71469))

(declare-fun m!68543 () Bool)

(assert (=> d!15959 m!68543))

(declare-fun m!68545 () Bool)

(assert (=> b!71467 m!68545))

(assert (=> b!71467 m!68009))

(assert (=> b!71467 m!68009))

(declare-fun m!68547 () Bool)

(assert (=> b!71467 m!68547))

(assert (=> b!71469 m!68009))

(assert (=> b!71469 m!68009))

(assert (=> b!71469 m!68547))

(assert (=> d!15815 d!15959))

(declare-fun d!15961 () Bool)

(declare-fun c!10425 () Bool)

(assert (=> d!15961 (= c!10425 (and ((_ is Cons!1500) lt!31450) (= (_1!1079 (h!2086 lt!31450)) (_1!1079 lt!31200))))))

(declare-fun e!46784 () Option!137)

(assert (=> d!15961 (= (getValueByKey!131 lt!31450 (_1!1079 lt!31200)) e!46784)))

(declare-fun b!71470 () Bool)

(assert (=> b!71470 (= e!46784 (Some!136 (_2!1079 (h!2086 lt!31450))))))

(declare-fun b!71472 () Bool)

(declare-fun e!46785 () Option!137)

(assert (=> b!71472 (= e!46785 (getValueByKey!131 (t!5044 lt!31450) (_1!1079 lt!31200)))))

(declare-fun b!71471 () Bool)

(assert (=> b!71471 (= e!46784 e!46785)))

(declare-fun c!10426 () Bool)

(assert (=> b!71471 (= c!10426 (and ((_ is Cons!1500) lt!31450) (not (= (_1!1079 (h!2086 lt!31450)) (_1!1079 lt!31200)))))))

(declare-fun b!71473 () Bool)

(assert (=> b!71473 (= e!46785 None!135)))

(assert (= (and d!15961 c!10425) b!71470))

(assert (= (and d!15961 (not c!10425)) b!71471))

(assert (= (and b!71471 c!10426) b!71472))

(assert (= (and b!71471 (not c!10426)) b!71473))

(declare-fun m!68549 () Bool)

(assert (=> b!71472 m!68549))

(assert (=> d!15815 d!15961))

(declare-fun d!15963 () Bool)

(assert (=> d!15963 (= (getValueByKey!131 lt!31450 (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200)))))

(declare-fun lt!31710 () Unit!2006)

(assert (=> d!15963 (= lt!31710 (choose!407 lt!31450 (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(declare-fun e!46786 () Bool)

(assert (=> d!15963 e!46786))

(declare-fun res!38086 () Bool)

(assert (=> d!15963 (=> (not res!38086) (not e!46786))))

(assert (=> d!15963 (= res!38086 (isStrictlySorted!286 lt!31450))))

(assert (=> d!15963 (= (lemmaContainsTupThenGetReturnValue!50 lt!31450 (_1!1079 lt!31200) (_2!1079 lt!31200)) lt!31710)))

(declare-fun b!71474 () Bool)

(declare-fun res!38087 () Bool)

(assert (=> b!71474 (=> (not res!38087) (not e!46786))))

(assert (=> b!71474 (= res!38087 (containsKey!135 lt!31450 (_1!1079 lt!31200)))))

(declare-fun b!71475 () Bool)

(assert (=> b!71475 (= e!46786 (contains!728 lt!31450 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(assert (= (and d!15963 res!38086) b!71474))

(assert (= (and b!71474 res!38087) b!71475))

(assert (=> d!15963 m!68003))

(declare-fun m!68551 () Bool)

(assert (=> d!15963 m!68551))

(declare-fun m!68553 () Bool)

(assert (=> d!15963 m!68553))

(declare-fun m!68555 () Bool)

(assert (=> b!71474 m!68555))

(declare-fun m!68557 () Bool)

(assert (=> b!71475 m!68557))

(assert (=> d!15815 d!15963))

(declare-fun b!71476 () Bool)

(declare-fun e!46788 () List!1504)

(declare-fun call!6198 () List!1504)

(assert (=> b!71476 (= e!46788 call!6198)))

(declare-fun b!71477 () Bool)

(declare-fun res!38088 () Bool)

(declare-fun e!46787 () Bool)

(assert (=> b!71477 (=> (not res!38088) (not e!46787))))

(declare-fun lt!31711 () List!1504)

(assert (=> b!71477 (= res!38088 (containsKey!135 lt!31711 (_1!1079 lt!31200)))))

(declare-fun c!10428 () Bool)

(declare-fun b!71478 () Bool)

(assert (=> b!71478 (= c!10428 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 lt!31205))) (bvsgt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31205)))) (_1!1079 lt!31200))))))

(declare-fun e!46790 () List!1504)

(declare-fun e!46789 () List!1504)

(assert (=> b!71478 (= e!46790 e!46789)))

(declare-fun b!71480 () Bool)

(declare-fun call!6199 () List!1504)

(assert (=> b!71480 (= e!46790 call!6199)))

(declare-fun b!71481 () Bool)

(declare-fun call!6197 () List!1504)

(assert (=> b!71481 (= e!46789 call!6197)))

(declare-fun e!46791 () List!1504)

(declare-fun b!71482 () Bool)

(assert (=> b!71482 (= e!46791 (insertStrictlySorted!52 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))) (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(declare-fun bm!6194 () Bool)

(assert (=> bm!6194 (= call!6197 call!6199)))

(declare-fun bm!6195 () Bool)

(assert (=> bm!6195 (= call!6199 call!6198)))

(declare-fun bm!6196 () Bool)

(declare-fun c!10427 () Bool)

(assert (=> bm!6196 (= call!6198 ($colon$colon!64 e!46791 (ite c!10427 (h!2086 (toList!732 (+!95 lt!31210 lt!31205))) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200)))))))

(declare-fun c!10429 () Bool)

(assert (=> bm!6196 (= c!10429 c!10427)))

(declare-fun c!10430 () Bool)

(declare-fun b!71483 () Bool)

(assert (=> b!71483 (= e!46791 (ite c!10430 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))) (ite c!10428 (Cons!1500 (h!2086 (toList!732 (+!95 lt!31210 lt!31205))) (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) Nil!1501)))))

(declare-fun b!71479 () Bool)

(assert (=> b!71479 (= e!46789 call!6197)))

(declare-fun d!15965 () Bool)

(assert (=> d!15965 e!46787))

(declare-fun res!38089 () Bool)

(assert (=> d!15965 (=> (not res!38089) (not e!46787))))

(assert (=> d!15965 (= res!38089 (isStrictlySorted!286 lt!31711))))

(assert (=> d!15965 (= lt!31711 e!46788)))

(assert (=> d!15965 (= c!10427 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 lt!31205))) (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31205)))) (_1!1079 lt!31200))))))

(assert (=> d!15965 (isStrictlySorted!286 (toList!732 (+!95 lt!31210 lt!31205)))))

(assert (=> d!15965 (= (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 lt!31205)) (_1!1079 lt!31200) (_2!1079 lt!31200)) lt!31711)))

(declare-fun b!71484 () Bool)

(assert (=> b!71484 (= e!46787 (contains!728 lt!31711 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!71485 () Bool)

(assert (=> b!71485 (= e!46788 e!46790)))

(assert (=> b!71485 (= c!10430 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 lt!31205))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31205)))) (_1!1079 lt!31200))))))

(assert (= (and d!15965 c!10427) b!71476))

(assert (= (and d!15965 (not c!10427)) b!71485))

(assert (= (and b!71485 c!10430) b!71480))

(assert (= (and b!71485 (not c!10430)) b!71478))

(assert (= (and b!71478 c!10428) b!71479))

(assert (= (and b!71478 (not c!10428)) b!71481))

(assert (= (or b!71479 b!71481) bm!6194))

(assert (= (or b!71480 bm!6194) bm!6195))

(assert (= (or b!71476 bm!6195) bm!6196))

(assert (= (and bm!6196 c!10429) b!71482))

(assert (= (and bm!6196 (not c!10429)) b!71483))

(assert (= (and d!15965 res!38089) b!71477))

(assert (= (and b!71477 res!38088) b!71484))

(declare-fun m!68559 () Bool)

(assert (=> bm!6196 m!68559))

(declare-fun m!68561 () Bool)

(assert (=> b!71482 m!68561))

(declare-fun m!68563 () Bool)

(assert (=> b!71477 m!68563))

(declare-fun m!68565 () Bool)

(assert (=> b!71484 m!68565))

(declare-fun m!68567 () Bool)

(assert (=> d!15965 m!68567))

(declare-fun m!68569 () Bool)

(assert (=> d!15965 m!68569))

(assert (=> d!15815 d!15965))

(declare-fun d!15967 () Bool)

(declare-fun e!46794 () Bool)

(assert (=> d!15967 e!46794))

(declare-fun res!38095 () Bool)

(assert (=> d!15967 (=> (not res!38095) (not e!46794))))

(declare-fun lt!31716 () SeekEntryResult!245)

(assert (=> d!15967 (= res!38095 ((_ is Found!245) lt!31716))))

(assert (=> d!15967 (= lt!31716 (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun lt!31717 () Unit!2006)

(declare-fun choose!415 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2006)

(assert (=> d!15967 (= lt!31717 (choose!415 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15967 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15967 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) lt!31717)))

(declare-fun b!71490 () Bool)

(declare-fun res!38094 () Bool)

(assert (=> b!71490 (=> (not res!38094) (not e!46794))))

(assert (=> b!71490 (= res!38094 (inRange!0 (index!3111 lt!31716) (mask!6149 newMap!16)))))

(declare-fun b!71491 () Bool)

(assert (=> b!71491 (= e!46794 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31716)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!71491 (and (bvsge (index!3111 lt!31716) #b00000000000000000000000000000000) (bvslt (index!3111 lt!31716) (size!2089 (_keys!3840 newMap!16))))))

(assert (= (and d!15967 res!38095) b!71490))

(assert (= (and b!71490 res!38094) b!71491))

(assert (=> d!15967 m!67713))

(assert (=> d!15967 m!67865))

(assert (=> d!15967 m!67713))

(declare-fun m!68571 () Bool)

(assert (=> d!15967 m!68571))

(assert (=> d!15967 m!68107))

(declare-fun m!68573 () Bool)

(assert (=> b!71490 m!68573))

(declare-fun m!68575 () Bool)

(assert (=> b!71491 m!68575))

(assert (=> bm!6108 d!15967))

(declare-fun d!15969 () Bool)

(declare-fun res!38097 () Bool)

(declare-fun e!46797 () Bool)

(assert (=> d!15969 (=> res!38097 e!46797)))

(assert (=> d!15969 (= res!38097 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!15969 (= (arrayNoDuplicates!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 Nil!1500) e!46797)))

(declare-fun b!71492 () Bool)

(declare-fun e!46796 () Bool)

(assert (=> b!71492 (= e!46796 (contains!727 Nil!1500 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71493 () Bool)

(declare-fun e!46795 () Bool)

(declare-fun call!6200 () Bool)

(assert (=> b!71493 (= e!46795 call!6200)))

(declare-fun bm!6197 () Bool)

(declare-fun c!10431 () Bool)

(assert (=> bm!6197 (= call!6200 (arrayNoDuplicates!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10431 (Cons!1499 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1500) Nil!1500)))))

(declare-fun b!71494 () Bool)

(declare-fun e!46798 () Bool)

(assert (=> b!71494 (= e!46797 e!46798)))

(declare-fun res!38098 () Bool)

(assert (=> b!71494 (=> (not res!38098) (not e!46798))))

(assert (=> b!71494 (= res!38098 (not e!46796))))

(declare-fun res!38096 () Bool)

(assert (=> b!71494 (=> (not res!38096) (not e!46796))))

(assert (=> b!71494 (= res!38096 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71495 () Bool)

(assert (=> b!71495 (= e!46795 call!6200)))

(declare-fun b!71496 () Bool)

(assert (=> b!71496 (= e!46798 e!46795)))

(assert (=> b!71496 (= c!10431 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15969 (not res!38097)) b!71494))

(assert (= (and b!71494 res!38096) b!71492))

(assert (= (and b!71494 res!38098) b!71496))

(assert (= (and b!71496 c!10431) b!71495))

(assert (= (and b!71496 (not c!10431)) b!71493))

(assert (= (or b!71495 b!71493) bm!6197))

(assert (=> b!71492 m!68067))

(assert (=> b!71492 m!68067))

(declare-fun m!68577 () Bool)

(assert (=> b!71492 m!68577))

(assert (=> bm!6197 m!68067))

(declare-fun m!68579 () Bool)

(assert (=> bm!6197 m!68579))

(assert (=> b!71494 m!68067))

(assert (=> b!71494 m!68067))

(assert (=> b!71494 m!68077))

(assert (=> b!71496 m!68067))

(assert (=> b!71496 m!68067))

(assert (=> b!71496 m!68077))

(assert (=> b!70878 d!15969))

(assert (=> b!71000 d!15955))

(assert (=> b!71117 d!15837))

(declare-fun d!15971 () Bool)

(declare-fun res!38099 () Bool)

(declare-fun e!46799 () Bool)

(assert (=> d!15971 (=> (not res!38099) (not e!46799))))

(assert (=> d!15971 (= res!38099 (simpleValid!49 (v!2517 (underlying!261 thiss!992))))))

(assert (=> d!15971 (= (valid!288 (v!2517 (underlying!261 thiss!992))) e!46799)))

(declare-fun b!71497 () Bool)

(declare-fun res!38100 () Bool)

(assert (=> b!71497 (=> (not res!38100) (not e!46799))))

(assert (=> b!71497 (= res!38100 (= (arrayCountValidKeys!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))) (_size!394 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71498 () Bool)

(declare-fun res!38101 () Bool)

(assert (=> b!71498 (=> (not res!38101) (not e!46799))))

(assert (=> b!71498 (= res!38101 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71499 () Bool)

(assert (=> b!71499 (= e!46799 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 Nil!1500))))

(assert (= (and d!15971 res!38099) b!71497))

(assert (= (and b!71497 res!38100) b!71498))

(assert (= (and b!71498 res!38101) b!71499))

(declare-fun m!68581 () Bool)

(assert (=> d!15971 m!68581))

(declare-fun m!68583 () Bool)

(assert (=> b!71497 m!68583))

(declare-fun m!68585 () Bool)

(assert (=> b!71498 m!68585))

(declare-fun m!68587 () Bool)

(assert (=> b!71499 m!68587))

(assert (=> d!15797 d!15971))

(declare-fun d!15973 () Bool)

(declare-fun e!46800 () Bool)

(assert (=> d!15973 e!46800))

(declare-fun res!38103 () Bool)

(assert (=> d!15973 (=> (not res!38103) (not e!46800))))

(declare-fun lt!31721 () ListLongMap!1433)

(assert (=> d!15973 (= res!38103 (contains!726 lt!31721 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31720 () List!1504)

(assert (=> d!15973 (= lt!31721 (ListLongMap!1434 lt!31720))))

(declare-fun lt!31719 () Unit!2006)

(declare-fun lt!31718 () Unit!2006)

(assert (=> d!15973 (= lt!31719 lt!31718)))

(assert (=> d!15973 (= (getValueByKey!131 lt!31720 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15973 (= lt!31718 (lemmaContainsTupThenGetReturnValue!50 lt!31720 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15973 (= lt!31720 (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15973 (= (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31721)))

(declare-fun b!71500 () Bool)

(declare-fun res!38102 () Bool)

(assert (=> b!71500 (=> (not res!38102) (not e!46800))))

(assert (=> b!71500 (= res!38102 (= (getValueByKey!131 (toList!732 lt!31721) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71501 () Bool)

(assert (=> b!71501 (= e!46800 (contains!728 (toList!732 lt!31721) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!15973 res!38103) b!71500))

(assert (= (and b!71500 res!38102) b!71501))

(declare-fun m!68589 () Bool)

(assert (=> d!15973 m!68589))

(declare-fun m!68591 () Bool)

(assert (=> d!15973 m!68591))

(declare-fun m!68593 () Bool)

(assert (=> d!15973 m!68593))

(declare-fun m!68595 () Bool)

(assert (=> d!15973 m!68595))

(declare-fun m!68597 () Bool)

(assert (=> b!71500 m!68597))

(declare-fun m!68599 () Bool)

(assert (=> b!71501 m!68599))

(assert (=> d!15817 d!15973))

(declare-fun d!15975 () Bool)

(declare-fun e!46801 () Bool)

(assert (=> d!15975 e!46801))

(declare-fun res!38105 () Bool)

(assert (=> d!15975 (=> (not res!38105) (not e!46801))))

(declare-fun lt!31725 () ListLongMap!1433)

(assert (=> d!15975 (= res!38105 (contains!726 lt!31725 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!31724 () List!1504)

(assert (=> d!15975 (= lt!31725 (ListLongMap!1434 lt!31724))))

(declare-fun lt!31723 () Unit!2006)

(declare-fun lt!31722 () Unit!2006)

(assert (=> d!15975 (= lt!31723 lt!31722)))

(assert (=> d!15975 (= (getValueByKey!131 lt!31724 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15975 (= lt!31722 (lemmaContainsTupThenGetReturnValue!50 lt!31724 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15975 (= lt!31724 (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15975 (= (+!95 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!31725)))

(declare-fun b!71502 () Bool)

(declare-fun res!38104 () Bool)

(assert (=> b!71502 (=> (not res!38104) (not e!46801))))

(assert (=> b!71502 (= res!38104 (= (getValueByKey!131 (toList!732 lt!31725) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71503 () Bool)

(assert (=> b!71503 (= e!46801 (contains!728 (toList!732 lt!31725) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!15975 res!38105) b!71502))

(assert (= (and b!71502 res!38104) b!71503))

(declare-fun m!68601 () Bool)

(assert (=> d!15975 m!68601))

(declare-fun m!68603 () Bool)

(assert (=> d!15975 m!68603))

(declare-fun m!68605 () Bool)

(assert (=> d!15975 m!68605))

(declare-fun m!68607 () Bool)

(assert (=> d!15975 m!68607))

(declare-fun m!68609 () Bool)

(assert (=> b!71502 m!68609))

(declare-fun m!68611 () Bool)

(assert (=> b!71503 m!68611))

(assert (=> d!15817 d!15975))

(declare-fun d!15977 () Bool)

(declare-fun e!46802 () Bool)

(assert (=> d!15977 e!46802))

(declare-fun res!38107 () Bool)

(assert (=> d!15977 (=> (not res!38107) (not e!46802))))

(declare-fun lt!31729 () ListLongMap!1433)

(assert (=> d!15977 (= res!38107 (contains!726 lt!31729 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!31728 () List!1504)

(assert (=> d!15977 (= lt!31729 (ListLongMap!1434 lt!31728))))

(declare-fun lt!31727 () Unit!2006)

(declare-fun lt!31726 () Unit!2006)

(assert (=> d!15977 (= lt!31727 lt!31726)))

(assert (=> d!15977 (= (getValueByKey!131 lt!31728 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15977 (= lt!31726 (lemmaContainsTupThenGetReturnValue!50 lt!31728 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15977 (= lt!31728 (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15977 (= (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!31729)))

(declare-fun b!71504 () Bool)

(declare-fun res!38106 () Bool)

(assert (=> b!71504 (=> (not res!38106) (not e!46802))))

(assert (=> b!71504 (= res!38106 (= (getValueByKey!131 (toList!732 lt!31729) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71505 () Bool)

(assert (=> b!71505 (= e!46802 (contains!728 (toList!732 lt!31729) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!15977 res!38107) b!71504))

(assert (= (and b!71504 res!38106) b!71505))

(declare-fun m!68613 () Bool)

(assert (=> d!15977 m!68613))

(declare-fun m!68615 () Bool)

(assert (=> d!15977 m!68615))

(declare-fun m!68617 () Bool)

(assert (=> d!15977 m!68617))

(declare-fun m!68619 () Bool)

(assert (=> d!15977 m!68619))

(declare-fun m!68621 () Bool)

(assert (=> b!71504 m!68621))

(declare-fun m!68623 () Bool)

(assert (=> b!71505 m!68623))

(assert (=> d!15817 d!15977))

(declare-fun d!15979 () Bool)

(declare-fun e!46803 () Bool)

(assert (=> d!15979 e!46803))

(declare-fun res!38109 () Bool)

(assert (=> d!15979 (=> (not res!38109) (not e!46803))))

(declare-fun lt!31733 () ListLongMap!1433)

(assert (=> d!15979 (= res!38109 (contains!726 lt!31733 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31732 () List!1504)

(assert (=> d!15979 (= lt!31733 (ListLongMap!1434 lt!31732))))

(declare-fun lt!31731 () Unit!2006)

(declare-fun lt!31730 () Unit!2006)

(assert (=> d!15979 (= lt!31731 lt!31730)))

(assert (=> d!15979 (= (getValueByKey!131 lt!31732 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15979 (= lt!31730 (lemmaContainsTupThenGetReturnValue!50 lt!31732 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15979 (= lt!31732 (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!15979 (= (+!95 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31733)))

(declare-fun b!71506 () Bool)

(declare-fun res!38108 () Bool)

(assert (=> b!71506 (=> (not res!38108) (not e!46803))))

(assert (=> b!71506 (= res!38108 (= (getValueByKey!131 (toList!732 lt!31733) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71507 () Bool)

(assert (=> b!71507 (= e!46803 (contains!728 (toList!732 lt!31733) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!15979 res!38109) b!71506))

(assert (= (and b!71506 res!38108) b!71507))

(declare-fun m!68625 () Bool)

(assert (=> d!15979 m!68625))

(declare-fun m!68627 () Bool)

(assert (=> d!15979 m!68627))

(declare-fun m!68629 () Bool)

(assert (=> d!15979 m!68629))

(declare-fun m!68631 () Bool)

(assert (=> d!15979 m!68631))

(declare-fun m!68633 () Bool)

(assert (=> b!71506 m!68633))

(declare-fun m!68635 () Bool)

(assert (=> b!71507 m!68635))

(assert (=> d!15817 d!15979))

(declare-fun d!15981 () Bool)

(assert (=> d!15981 (= (+!95 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (+!95 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (=> d!15981 true))

(declare-fun _$28!118 () Unit!2006)

(assert (=> d!15981 (= (choose!404 lt!31210 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) _$28!118)))

(declare-fun bs!3059 () Bool)

(assert (= bs!3059 d!15981))

(assert (=> bs!3059 m!68013))

(assert (=> bs!3059 m!68013))

(assert (=> bs!3059 m!68015))

(assert (=> bs!3059 m!68019))

(assert (=> bs!3059 m!68019))

(assert (=> bs!3059 m!68021))

(assert (=> d!15817 d!15981))

(declare-fun d!15983 () Bool)

(declare-fun e!46804 () Bool)

(assert (=> d!15983 e!46804))

(declare-fun res!38110 () Bool)

(assert (=> d!15983 (=> res!38110 e!46804)))

(declare-fun lt!31736 () Bool)

(assert (=> d!15983 (= res!38110 (not lt!31736))))

(declare-fun lt!31734 () Bool)

(assert (=> d!15983 (= lt!31736 lt!31734)))

(declare-fun lt!31735 () Unit!2006)

(declare-fun e!46805 () Unit!2006)

(assert (=> d!15983 (= lt!31735 e!46805)))

(declare-fun c!10432 () Bool)

(assert (=> d!15983 (= c!10432 lt!31734)))

(assert (=> d!15983 (= lt!31734 (containsKey!135 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15983 (= (contains!726 lt!31442 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31736)))

(declare-fun b!71508 () Bool)

(declare-fun lt!31737 () Unit!2006)

(assert (=> b!71508 (= e!46805 lt!31737)))

(assert (=> b!71508 (= lt!31737 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71508 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71509 () Bool)

(declare-fun Unit!2030 () Unit!2006)

(assert (=> b!71509 (= e!46805 Unit!2030)))

(declare-fun b!71510 () Bool)

(assert (=> b!71510 (= e!46804 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15983 c!10432) b!71508))

(assert (= (and d!15983 (not c!10432)) b!71509))

(assert (= (and d!15983 (not res!38110)) b!71510))

(declare-fun m!68637 () Bool)

(assert (=> d!15983 m!68637))

(declare-fun m!68639 () Bool)

(assert (=> b!71508 m!68639))

(declare-fun m!68641 () Bool)

(assert (=> b!71508 m!68641))

(assert (=> b!71508 m!68641))

(declare-fun m!68643 () Bool)

(assert (=> b!71508 m!68643))

(assert (=> b!71510 m!68641))

(assert (=> b!71510 m!68641))

(assert (=> b!71510 m!68643))

(assert (=> b!71115 d!15983))

(declare-fun b!71519 () Bool)

(declare-fun e!46810 () (_ BitVec 32))

(declare-fun call!6203 () (_ BitVec 32))

(assert (=> b!71519 (= e!46810 call!6203)))

(declare-fun b!71520 () Bool)

(declare-fun e!46811 () (_ BitVec 32))

(assert (=> b!71520 (= e!46811 #b00000000000000000000000000000000)))

(declare-fun bm!6200 () Bool)

(assert (=> bm!6200 (= call!6203 (arrayCountValidKeys!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71521 () Bool)

(assert (=> b!71521 (= e!46811 e!46810)))

(declare-fun c!10438 () Bool)

(assert (=> b!71521 (= c!10438 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71522 () Bool)

(assert (=> b!71522 (= e!46810 (bvadd #b00000000000000000000000000000001 call!6203))))

(declare-fun d!15985 () Bool)

(declare-fun lt!31740 () (_ BitVec 32))

(assert (=> d!15985 (and (bvsge lt!31740 #b00000000000000000000000000000000) (bvsle lt!31740 (bvsub (size!2089 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15985 (= lt!31740 e!46811)))

(declare-fun c!10437 () Bool)

(assert (=> d!15985 (= c!10437 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!15985 (and (bvsle #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2089 (_keys!3840 newMap!16)) (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!15985 (= (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) lt!31740)))

(assert (= (and d!15985 c!10437) b!71520))

(assert (= (and d!15985 (not c!10437)) b!71521))

(assert (= (and b!71521 c!10438) b!71522))

(assert (= (and b!71521 (not c!10438)) b!71519))

(assert (= (or b!71522 b!71519) bm!6200))

(declare-fun m!68645 () Bool)

(assert (=> bm!6200 m!68645))

(assert (=> b!71521 m!68067))

(assert (=> b!71521 m!68067))

(assert (=> b!71521 m!68077))

(assert (=> b!70876 d!15985))

(declare-fun d!15987 () Bool)

(declare-fun e!46812 () Bool)

(assert (=> d!15987 e!46812))

(declare-fun res!38111 () Bool)

(assert (=> d!15987 (=> res!38111 e!46812)))

(declare-fun lt!31743 () Bool)

(assert (=> d!15987 (= res!38111 (not lt!31743))))

(declare-fun lt!31741 () Bool)

(assert (=> d!15987 (= lt!31743 lt!31741)))

(declare-fun lt!31742 () Unit!2006)

(declare-fun e!46813 () Unit!2006)

(assert (=> d!15987 (= lt!31742 e!46813)))

(declare-fun c!10439 () Bool)

(assert (=> d!15987 (= c!10439 lt!31741)))

(assert (=> d!15987 (= lt!31741 (containsKey!135 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15987 (= (contains!726 lt!31442 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31743)))

(declare-fun b!71523 () Bool)

(declare-fun lt!31744 () Unit!2006)

(assert (=> b!71523 (= e!46813 lt!31744)))

(assert (=> b!71523 (= lt!31744 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71523 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71524 () Bool)

(declare-fun Unit!2031 () Unit!2006)

(assert (=> b!71524 (= e!46813 Unit!2031)))

(declare-fun b!71525 () Bool)

(assert (=> b!71525 (= e!46812 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15987 c!10439) b!71523))

(assert (= (and d!15987 (not c!10439)) b!71524))

(assert (= (and d!15987 (not res!38111)) b!71525))

(declare-fun m!68647 () Bool)

(assert (=> d!15987 m!68647))

(declare-fun m!68649 () Bool)

(assert (=> b!71523 m!68649))

(declare-fun m!68651 () Bool)

(assert (=> b!71523 m!68651))

(assert (=> b!71523 m!68651))

(declare-fun m!68653 () Bool)

(assert (=> b!71523 m!68653))

(assert (=> b!71525 m!68651))

(assert (=> b!71525 m!68651))

(assert (=> b!71525 m!68653))

(assert (=> d!15813 d!15987))

(assert (=> d!15813 d!15823))

(declare-fun d!15989 () Bool)

(declare-fun lt!31747 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!74 (List!1504) (InoxSet tuple2!2138))

(assert (=> d!15989 (= lt!31747 (select (content!74 (toList!732 lt!31462)) lt!31200))))

(declare-fun e!46819 () Bool)

(assert (=> d!15989 (= lt!31747 e!46819)))

(declare-fun res!38117 () Bool)

(assert (=> d!15989 (=> (not res!38117) (not e!46819))))

(assert (=> d!15989 (= res!38117 ((_ is Cons!1500) (toList!732 lt!31462)))))

(assert (=> d!15989 (= (contains!728 (toList!732 lt!31462) lt!31200) lt!31747)))

(declare-fun b!71530 () Bool)

(declare-fun e!46818 () Bool)

(assert (=> b!71530 (= e!46819 e!46818)))

(declare-fun res!38116 () Bool)

(assert (=> b!71530 (=> res!38116 e!46818)))

(assert (=> b!71530 (= res!38116 (= (h!2086 (toList!732 lt!31462)) lt!31200))))

(declare-fun b!71531 () Bool)

(assert (=> b!71531 (= e!46818 (contains!728 (t!5044 (toList!732 lt!31462)) lt!31200))))

(assert (= (and d!15989 res!38117) b!71530))

(assert (= (and b!71530 (not res!38116)) b!71531))

(declare-fun m!68655 () Bool)

(assert (=> d!15989 m!68655))

(declare-fun m!68657 () Bool)

(assert (=> d!15989 m!68657))

(declare-fun m!68659 () Bool)

(assert (=> b!71531 m!68659))

(assert (=> b!71130 d!15989))

(assert (=> bm!6146 d!15813))

(declare-fun d!15991 () Bool)

(declare-fun e!46820 () Bool)

(assert (=> d!15991 e!46820))

(declare-fun res!38118 () Bool)

(assert (=> d!15991 (=> res!38118 e!46820)))

(declare-fun lt!31750 () Bool)

(assert (=> d!15991 (= res!38118 (not lt!31750))))

(declare-fun lt!31748 () Bool)

(assert (=> d!15991 (= lt!31750 lt!31748)))

(declare-fun lt!31749 () Unit!2006)

(declare-fun e!46821 () Unit!2006)

(assert (=> d!15991 (= lt!31749 e!46821)))

(declare-fun c!10440 () Bool)

(assert (=> d!15991 (= c!10440 lt!31748)))

(assert (=> d!15991 (= lt!31748 (containsKey!135 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!15991 (= (contains!726 e!46520 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31750)))

(declare-fun b!71532 () Bool)

(declare-fun lt!31751 () Unit!2006)

(assert (=> b!71532 (= e!46821 lt!31751)))

(assert (=> b!71532 (= lt!31751 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!71532 (isDefined!85 (getValueByKey!131 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71533 () Bool)

(declare-fun Unit!2032 () Unit!2006)

(assert (=> b!71533 (= e!46821 Unit!2032)))

(declare-fun b!71534 () Bool)

(assert (=> b!71534 (= e!46820 (isDefined!85 (getValueByKey!131 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (= (and d!15991 c!10440) b!71532))

(assert (= (and d!15991 (not c!10440)) b!71533))

(assert (= (and d!15991 (not res!38118)) b!71534))

(assert (=> d!15991 m!67713))

(declare-fun m!68661 () Bool)

(assert (=> d!15991 m!68661))

(assert (=> b!71532 m!67713))

(declare-fun m!68663 () Bool)

(assert (=> b!71532 m!68663))

(assert (=> b!71532 m!67713))

(declare-fun m!68665 () Bool)

(assert (=> b!71532 m!68665))

(assert (=> b!71532 m!68665))

(declare-fun m!68667 () Bool)

(assert (=> b!71532 m!68667))

(assert (=> b!71534 m!67713))

(assert (=> b!71534 m!68665))

(assert (=> b!71534 m!68665))

(assert (=> b!71534 m!68667))

(assert (=> bm!6106 d!15991))

(declare-fun d!15993 () Bool)

(assert (=> d!15993 (= (apply!74 lt!31396 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1150 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3060 () Bool)

(assert (= bs!3060 d!15993))

(assert (=> bs!3060 m!67827))

(declare-fun m!68669 () Bool)

(assert (=> bs!3060 m!68669))

(assert (=> bs!3060 m!68669))

(declare-fun m!68671 () Bool)

(assert (=> bs!3060 m!68671))

(assert (=> b!71075 d!15993))

(assert (=> b!71075 d!15833))

(declare-fun d!15995 () Bool)

(declare-fun e!46822 () Bool)

(assert (=> d!15995 e!46822))

(declare-fun res!38120 () Bool)

(assert (=> d!15995 (=> (not res!38120) (not e!46822))))

(declare-fun lt!31755 () ListLongMap!1433)

(assert (=> d!15995 (= res!38120 (contains!726 lt!31755 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!31754 () List!1504)

(assert (=> d!15995 (= lt!31755 (ListLongMap!1434 lt!31754))))

(declare-fun lt!31753 () Unit!2006)

(declare-fun lt!31752 () Unit!2006)

(assert (=> d!15995 (= lt!31753 lt!31752)))

(assert (=> d!15995 (= (getValueByKey!131 lt!31754 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15995 (= lt!31752 (lemmaContainsTupThenGetReturnValue!50 lt!31754 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15995 (= lt!31754 (insertStrictlySorted!52 (toList!732 call!6112) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!15995 (= (+!95 call!6112 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!31755)))

(declare-fun b!71535 () Bool)

(declare-fun res!38119 () Bool)

(assert (=> b!71535 (=> (not res!38119) (not e!46822))))

(assert (=> b!71535 (= res!38119 (= (getValueByKey!131 (toList!732 lt!31755) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71536 () Bool)

(assert (=> b!71536 (= e!46822 (contains!728 (toList!732 lt!31755) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!15995 res!38120) b!71535))

(assert (= (and b!71535 res!38119) b!71536))

(declare-fun m!68673 () Bool)

(assert (=> d!15995 m!68673))

(declare-fun m!68675 () Bool)

(assert (=> d!15995 m!68675))

(declare-fun m!68677 () Bool)

(assert (=> d!15995 m!68677))

(declare-fun m!68679 () Bool)

(assert (=> d!15995 m!68679))

(declare-fun m!68681 () Bool)

(assert (=> b!71535 m!68681))

(declare-fun m!68683 () Bool)

(assert (=> b!71536 m!68683))

(assert (=> b!70995 d!15995))

(declare-fun d!15997 () Bool)

(declare-fun res!38121 () Bool)

(declare-fun e!46823 () Bool)

(assert (=> d!15997 (=> (not res!38121) (not e!46823))))

(assert (=> d!15997 (= res!38121 (simpleValid!49 (_2!1080 lt!31329)))))

(assert (=> d!15997 (= (valid!288 (_2!1080 lt!31329)) e!46823)))

(declare-fun b!71537 () Bool)

(declare-fun res!38122 () Bool)

(assert (=> b!71537 (=> (not res!38122) (not e!46823))))

(assert (=> b!71537 (= res!38122 (= (arrayCountValidKeys!0 (_keys!3840 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))) (_size!394 (_2!1080 lt!31329))))))

(declare-fun b!71538 () Bool)

(declare-fun res!38123 () Bool)

(assert (=> b!71538 (=> (not res!38123) (not e!46823))))

(assert (=> b!71538 (= res!38123 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329))))))

(declare-fun b!71539 () Bool)

(assert (=> b!71539 (= e!46823 (arrayNoDuplicates!0 (_keys!3840 (_2!1080 lt!31329)) #b00000000000000000000000000000000 Nil!1500))))

(assert (= (and d!15997 res!38121) b!71537))

(assert (= (and b!71537 res!38122) b!71538))

(assert (= (and b!71538 res!38123) b!71539))

(declare-fun m!68685 () Bool)

(assert (=> d!15997 m!68685))

(declare-fun m!68687 () Bool)

(assert (=> b!71537 m!68687))

(declare-fun m!68689 () Bool)

(assert (=> b!71538 m!68689))

(declare-fun m!68691 () Bool)

(assert (=> b!71539 m!68691))

(assert (=> d!15801 d!15997))

(assert (=> d!15801 d!15789))

(declare-fun b!71540 () Bool)

(declare-fun e!46833 () Bool)

(declare-fun e!46824 () Bool)

(assert (=> b!71540 (= e!46833 e!46824)))

(declare-fun res!38125 () Bool)

(declare-fun call!6208 () Bool)

(assert (=> b!71540 (= res!38125 call!6208)))

(assert (=> b!71540 (=> (not res!38125) (not e!46824))))

(declare-fun b!71541 () Bool)

(declare-fun e!46835 () ListLongMap!1433)

(declare-fun call!6204 () ListLongMap!1433)

(assert (=> b!71541 (= e!46835 (+!95 call!6204 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun b!71542 () Bool)

(declare-fun e!46832 () ListLongMap!1433)

(declare-fun call!6209 () ListLongMap!1433)

(assert (=> b!71542 (= e!46832 call!6209)))

(declare-fun b!71543 () Bool)

(declare-fun e!46826 () Unit!2006)

(declare-fun Unit!2033 () Unit!2006)

(assert (=> b!71543 (= e!46826 Unit!2033)))

(declare-fun b!71544 () Bool)

(declare-fun call!6206 () ListLongMap!1433)

(assert (=> b!71544 (= e!46832 call!6206)))

(declare-fun b!71545 () Bool)

(declare-fun e!46828 () Bool)

(assert (=> b!71545 (= e!46828 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6201 () Bool)

(declare-fun call!6205 () ListLongMap!1433)

(assert (=> bm!6201 (= call!6209 call!6205)))

(declare-fun b!71546 () Bool)

(assert (=> b!71546 (= e!46833 (not call!6208))))

(declare-fun bm!6203 () Bool)

(assert (=> bm!6203 (= call!6206 call!6204)))

(declare-fun bm!6204 () Bool)

(declare-fun call!6210 () ListLongMap!1433)

(assert (=> bm!6204 (= call!6205 call!6210)))

(declare-fun b!71547 () Bool)

(declare-fun e!46831 () Bool)

(declare-fun e!46830 () Bool)

(assert (=> b!71547 (= e!46831 e!46830)))

(declare-fun c!10444 () Bool)

(assert (=> b!71547 (= c!10444 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6205 () Bool)

(declare-fun lt!31759 () ListLongMap!1433)

(assert (=> bm!6205 (= call!6208 (contains!726 lt!31759 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71548 () Bool)

(declare-fun e!46829 () Bool)

(assert (=> b!71548 (= e!46829 (= (apply!74 lt!31759 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun b!71549 () Bool)

(declare-fun e!46827 () ListLongMap!1433)

(assert (=> b!71549 (= e!46835 e!46827)))

(declare-fun c!10441 () Bool)

(assert (=> b!71549 (= c!10441 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71550 () Bool)

(declare-fun e!46836 () Bool)

(declare-fun e!46825 () Bool)

(assert (=> b!71550 (= e!46836 e!46825)))

(declare-fun res!38126 () Bool)

(assert (=> b!71550 (=> (not res!38126) (not e!46825))))

(assert (=> b!71550 (= res!38126 (contains!726 lt!31759 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71550 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71551 () Bool)

(assert (=> b!71551 (= e!46830 e!46829)))

(declare-fun res!38127 () Bool)

(declare-fun call!6207 () Bool)

(assert (=> b!71551 (= res!38127 call!6207)))

(assert (=> b!71551 (=> (not res!38127) (not e!46829))))

(declare-fun bm!6206 () Bool)

(assert (=> bm!6206 (= call!6207 (contains!726 lt!31759 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71552 () Bool)

(assert (=> b!71552 (= e!46827 call!6206)))

(declare-fun b!71553 () Bool)

(assert (=> b!71553 (= e!46825 (= (apply!74 lt!31759 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71553 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326))))))

(assert (=> b!71553 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71554 () Bool)

(declare-fun lt!31769 () Unit!2006)

(assert (=> b!71554 (= e!46826 lt!31769)))

(declare-fun lt!31760 () ListLongMap!1433)

(assert (=> b!71554 (= lt!31760 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31777 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31777 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31772 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31772 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31773 () Unit!2006)

(assert (=> b!71554 (= lt!31773 (addStillContains!50 lt!31760 lt!31777 (zeroValue!2096 newMap!16) lt!31772))))

(assert (=> b!71554 (contains!726 (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))) lt!31772)))

(declare-fun lt!31765 () Unit!2006)

(assert (=> b!71554 (= lt!31765 lt!31773)))

(declare-fun lt!31762 () ListLongMap!1433)

(assert (=> b!71554 (= lt!31762 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31763 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31763 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31764 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31764 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31776 () Unit!2006)

(assert (=> b!71554 (= lt!31776 (addApplyDifferent!50 lt!31762 lt!31763 (minValue!2096 newMap!16) lt!31764))))

(assert (=> b!71554 (= (apply!74 (+!95 lt!31762 (tuple2!2139 lt!31763 (minValue!2096 newMap!16))) lt!31764) (apply!74 lt!31762 lt!31764))))

(declare-fun lt!31768 () Unit!2006)

(assert (=> b!71554 (= lt!31768 lt!31776)))

(declare-fun lt!31771 () ListLongMap!1433)

(assert (=> b!71554 (= lt!31771 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31767 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31767 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31774 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31774 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31766 () Unit!2006)

(assert (=> b!71554 (= lt!31766 (addApplyDifferent!50 lt!31771 lt!31767 (zeroValue!2096 newMap!16) lt!31774))))

(assert (=> b!71554 (= (apply!74 (+!95 lt!31771 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))) lt!31774) (apply!74 lt!31771 lt!31774))))

(declare-fun lt!31770 () Unit!2006)

(assert (=> b!71554 (= lt!31770 lt!31766)))

(declare-fun lt!31761 () ListLongMap!1433)

(assert (=> b!71554 (= lt!31761 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31757 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31757 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31758 () (_ BitVec 64))

(assert (=> b!71554 (= lt!31758 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71554 (= lt!31769 (addApplyDifferent!50 lt!31761 lt!31757 (minValue!2096 newMap!16) lt!31758))))

(assert (=> b!71554 (= (apply!74 (+!95 lt!31761 (tuple2!2139 lt!31757 (minValue!2096 newMap!16))) lt!31758) (apply!74 lt!31761 lt!31758))))

(declare-fun b!71555 () Bool)

(assert (=> b!71555 (= e!46830 (not call!6207))))

(declare-fun b!71556 () Bool)

(declare-fun res!38130 () Bool)

(assert (=> b!71556 (=> (not res!38130) (not e!46831))))

(assert (=> b!71556 (= res!38130 e!46836)))

(declare-fun res!38131 () Bool)

(assert (=> b!71556 (=> res!38131 e!46836)))

(assert (=> b!71556 (= res!38131 (not e!46828))))

(declare-fun res!38129 () Bool)

(assert (=> b!71556 (=> (not res!38129) (not e!46828))))

(assert (=> b!71556 (= res!38129 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6207 () Bool)

(assert (=> bm!6207 (= call!6210 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71557 () Bool)

(declare-fun e!46834 () Bool)

(assert (=> b!71557 (= e!46834 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71558 () Bool)

(declare-fun res!38124 () Bool)

(assert (=> b!71558 (=> (not res!38124) (not e!46831))))

(assert (=> b!71558 (= res!38124 e!46833)))

(declare-fun c!10443 () Bool)

(assert (=> b!71558 (= c!10443 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!10445 () Bool)

(declare-fun bm!6202 () Bool)

(assert (=> bm!6202 (= call!6204 (+!95 (ite c!10445 call!6210 (ite c!10441 call!6205 call!6209)) (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun d!15999 () Bool)

(assert (=> d!15999 e!46831))

(declare-fun res!38128 () Bool)

(assert (=> d!15999 (=> (not res!38128) (not e!46831))))

(assert (=> d!15999 (= res!38128 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun lt!31756 () ListLongMap!1433)

(assert (=> d!15999 (= lt!31759 lt!31756)))

(declare-fun lt!31775 () Unit!2006)

(assert (=> d!15999 (= lt!31775 e!46826)))

(declare-fun c!10442 () Bool)

(assert (=> d!15999 (= c!10442 e!46834)))

(declare-fun res!38132 () Bool)

(assert (=> d!15999 (=> (not res!38132) (not e!46834))))

(assert (=> d!15999 (= res!38132 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!15999 (= lt!31756 e!46835)))

(assert (=> d!15999 (= c!10445 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15999 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15999 (= (getCurrentListMap!425 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31759)))

(declare-fun b!71559 () Bool)

(assert (=> b!71559 (= e!46824 (= (apply!74 lt!31759 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!71560 () Bool)

(declare-fun c!10446 () Bool)

(assert (=> b!71560 (= c!10446 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!71560 (= e!46827 e!46832)))

(assert (= (and d!15999 c!10445) b!71541))

(assert (= (and d!15999 (not c!10445)) b!71549))

(assert (= (and b!71549 c!10441) b!71552))

(assert (= (and b!71549 (not c!10441)) b!71560))

(assert (= (and b!71560 c!10446) b!71544))

(assert (= (and b!71560 (not c!10446)) b!71542))

(assert (= (or b!71544 b!71542) bm!6201))

(assert (= (or b!71552 bm!6201) bm!6204))

(assert (= (or b!71552 b!71544) bm!6203))

(assert (= (or b!71541 bm!6204) bm!6207))

(assert (= (or b!71541 bm!6203) bm!6202))

(assert (= (and d!15999 res!38132) b!71557))

(assert (= (and d!15999 c!10442) b!71554))

(assert (= (and d!15999 (not c!10442)) b!71543))

(assert (= (and d!15999 res!38128) b!71556))

(assert (= (and b!71556 res!38129) b!71545))

(assert (= (and b!71556 (not res!38131)) b!71550))

(assert (= (and b!71550 res!38126) b!71553))

(assert (= (and b!71556 res!38130) b!71558))

(assert (= (and b!71558 c!10443) b!71540))

(assert (= (and b!71558 (not c!10443)) b!71546))

(assert (= (and b!71540 res!38125) b!71559))

(assert (= (or b!71540 b!71546) bm!6205))

(assert (= (and b!71558 res!38124) b!71547))

(assert (= (and b!71547 c!10444) b!71551))

(assert (= (and b!71547 (not c!10444)) b!71555))

(assert (= (and b!71551 res!38127) b!71548))

(assert (= (or b!71551 b!71555) bm!6206))

(declare-fun b_lambda!3211 () Bool)

(assert (=> (not b_lambda!3211) (not b!71553)))

(assert (=> b!71553 t!5051))

(declare-fun b_and!4397 () Bool)

(assert (= b_and!4393 (and (=> t!5051 result!2669) b_and!4397)))

(assert (=> b!71553 t!5053))

(declare-fun b_and!4399 () Bool)

(assert (= b_and!4395 (and (=> t!5053 result!2671) b_and!4399)))

(assert (=> b!71550 m!68067))

(assert (=> b!71550 m!68067))

(declare-fun m!68693 () Bool)

(assert (=> b!71550 m!68693))

(declare-fun m!68695 () Bool)

(assert (=> bm!6205 m!68695))

(declare-fun m!68697 () Bool)

(assert (=> bm!6206 m!68697))

(assert (=> b!71545 m!68067))

(assert (=> b!71545 m!68067))

(assert (=> b!71545 m!68077))

(assert (=> b!71554 m!68067))

(declare-fun m!68699 () Bool)

(assert (=> b!71554 m!68699))

(declare-fun m!68701 () Bool)

(assert (=> b!71554 m!68701))

(declare-fun m!68703 () Bool)

(assert (=> b!71554 m!68703))

(declare-fun m!68705 () Bool)

(assert (=> b!71554 m!68705))

(declare-fun m!68707 () Bool)

(assert (=> b!71554 m!68707))

(declare-fun m!68709 () Bool)

(assert (=> b!71554 m!68709))

(assert (=> b!71554 m!68703))

(declare-fun m!68711 () Bool)

(assert (=> b!71554 m!68711))

(declare-fun m!68713 () Bool)

(assert (=> b!71554 m!68713))

(assert (=> b!71554 m!68709))

(declare-fun m!68715 () Bool)

(assert (=> b!71554 m!68715))

(declare-fun m!68717 () Bool)

(assert (=> b!71554 m!68717))

(declare-fun m!68719 () Bool)

(assert (=> b!71554 m!68719))

(assert (=> b!71554 m!68717))

(declare-fun m!68721 () Bool)

(assert (=> b!71554 m!68721))

(declare-fun m!68723 () Bool)

(assert (=> b!71554 m!68723))

(declare-fun m!68725 () Bool)

(assert (=> b!71554 m!68725))

(declare-fun m!68727 () Bool)

(assert (=> b!71554 m!68727))

(declare-fun m!68729 () Bool)

(assert (=> b!71554 m!68729))

(assert (=> b!71554 m!68721))

(assert (=> bm!6207 m!68729))

(declare-fun m!68731 () Bool)

(assert (=> bm!6202 m!68731))

(declare-fun m!68733 () Bool)

(assert (=> b!71559 m!68733))

(declare-fun m!68735 () Bool)

(assert (=> b!71548 m!68735))

(declare-fun m!68737 () Bool)

(assert (=> b!71553 m!68737))

(assert (=> b!71553 m!68737))

(assert (=> b!71553 m!68529))

(declare-fun m!68739 () Bool)

(assert (=> b!71553 m!68739))

(assert (=> b!71553 m!68529))

(assert (=> b!71553 m!68067))

(assert (=> b!71553 m!68067))

(declare-fun m!68741 () Bool)

(assert (=> b!71553 m!68741))

(assert (=> b!71557 m!68067))

(assert (=> b!71557 m!68067))

(assert (=> b!71557 m!68077))

(assert (=> d!15999 m!68107))

(declare-fun m!68743 () Bool)

(assert (=> b!71541 m!68743))

(assert (=> bm!6122 d!15999))

(declare-fun d!16001 () Bool)

(declare-fun lt!31778 () Bool)

(assert (=> d!16001 (= lt!31778 (select (content!74 (toList!732 lt!31458)) lt!31205))))

(declare-fun e!46838 () Bool)

(assert (=> d!16001 (= lt!31778 e!46838)))

(declare-fun res!38134 () Bool)

(assert (=> d!16001 (=> (not res!38134) (not e!46838))))

(assert (=> d!16001 (= res!38134 ((_ is Cons!1500) (toList!732 lt!31458)))))

(assert (=> d!16001 (= (contains!728 (toList!732 lt!31458) lt!31205) lt!31778)))

(declare-fun b!71561 () Bool)

(declare-fun e!46837 () Bool)

(assert (=> b!71561 (= e!46838 e!46837)))

(declare-fun res!38133 () Bool)

(assert (=> b!71561 (=> res!38133 e!46837)))

(assert (=> b!71561 (= res!38133 (= (h!2086 (toList!732 lt!31458)) lt!31205))))

(declare-fun b!71562 () Bool)

(assert (=> b!71562 (= e!46837 (contains!728 (t!5044 (toList!732 lt!31458)) lt!31205))))

(assert (= (and d!16001 res!38134) b!71561))

(assert (= (and b!71561 (not res!38133)) b!71562))

(declare-fun m!68745 () Bool)

(assert (=> d!16001 m!68745))

(declare-fun m!68747 () Bool)

(assert (=> d!16001 m!68747))

(declare-fun m!68749 () Bool)

(assert (=> b!71562 m!68749))

(assert (=> b!71128 d!16001))

(declare-fun d!16003 () Bool)

(declare-fun res!38136 () Bool)

(declare-fun e!46841 () Bool)

(assert (=> d!16003 (=> res!38136 e!46841)))

(assert (=> d!16003 (= res!38136 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!16003 (= (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) e!46841)))

(declare-fun e!46840 () Bool)

(declare-fun b!71563 () Bool)

(assert (=> b!71563 (= e!46840 (contains!727 (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71564 () Bool)

(declare-fun e!46839 () Bool)

(declare-fun call!6211 () Bool)

(assert (=> b!71564 (= e!46839 call!6211)))

(declare-fun c!10447 () Bool)

(declare-fun bm!6208 () Bool)

(assert (=> bm!6208 (= call!6211 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10447 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500))))))

(declare-fun b!71565 () Bool)

(declare-fun e!46842 () Bool)

(assert (=> b!71565 (= e!46841 e!46842)))

(declare-fun res!38137 () Bool)

(assert (=> b!71565 (=> (not res!38137) (not e!46842))))

(assert (=> b!71565 (= res!38137 (not e!46840))))

(declare-fun res!38135 () Bool)

(assert (=> b!71565 (=> (not res!38135) (not e!46840))))

(assert (=> b!71565 (= res!38135 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71566 () Bool)

(assert (=> b!71566 (= e!46839 call!6211)))

(declare-fun b!71567 () Bool)

(assert (=> b!71567 (= e!46842 e!46839)))

(assert (=> b!71567 (= c!10447 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!16003 (not res!38136)) b!71565))

(assert (= (and b!71565 res!38135) b!71563))

(assert (= (and b!71565 res!38137) b!71567))

(assert (= (and b!71567 c!10447) b!71566))

(assert (= (and b!71567 (not c!10447)) b!71564))

(assert (= (or b!71566 b!71564) bm!6208))

(declare-fun m!68751 () Bool)

(assert (=> b!71563 m!68751))

(assert (=> b!71563 m!68751))

(declare-fun m!68753 () Bool)

(assert (=> b!71563 m!68753))

(assert (=> bm!6208 m!68751))

(declare-fun m!68755 () Bool)

(assert (=> bm!6208 m!68755))

(assert (=> b!71565 m!68751))

(assert (=> b!71565 m!68751))

(declare-fun m!68757 () Bool)

(assert (=> b!71565 m!68757))

(assert (=> b!71567 m!68751))

(assert (=> b!71567 m!68751))

(assert (=> b!71567 m!68757))

(assert (=> bm!6053 d!16003))

(assert (=> b!71123 d!15839))

(declare-fun d!16005 () Bool)

(declare-fun e!46843 () Bool)

(assert (=> d!16005 e!46843))

(declare-fun res!38138 () Bool)

(assert (=> d!16005 (=> res!38138 e!46843)))

(declare-fun lt!31781 () Bool)

(assert (=> d!16005 (= res!38138 (not lt!31781))))

(declare-fun lt!31779 () Bool)

(assert (=> d!16005 (= lt!31781 lt!31779)))

(declare-fun lt!31780 () Unit!2006)

(declare-fun e!46844 () Unit!2006)

(assert (=> d!16005 (= lt!31780 e!46844)))

(declare-fun c!10448 () Bool)

(assert (=> d!16005 (= c!10448 lt!31779)))

(assert (=> d!16005 (= lt!31779 (containsKey!135 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16005 (= (contains!726 lt!31396 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31781)))

(declare-fun b!71568 () Bool)

(declare-fun lt!31782 () Unit!2006)

(assert (=> b!71568 (= e!46844 lt!31782)))

(assert (=> b!71568 (= lt!31782 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71568 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71569 () Bool)

(declare-fun Unit!2034 () Unit!2006)

(assert (=> b!71569 (= e!46844 Unit!2034)))

(declare-fun b!71570 () Bool)

(assert (=> b!71570 (= e!46843 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16005 c!10448) b!71568))

(assert (= (and d!16005 (not c!10448)) b!71569))

(assert (= (and d!16005 (not res!38138)) b!71570))

(declare-fun m!68759 () Bool)

(assert (=> d!16005 m!68759))

(declare-fun m!68761 () Bool)

(assert (=> b!71568 m!68761))

(declare-fun m!68763 () Bool)

(assert (=> b!71568 m!68763))

(assert (=> b!71568 m!68763))

(declare-fun m!68765 () Bool)

(assert (=> b!71568 m!68765))

(assert (=> b!71570 m!68763))

(assert (=> b!71570 m!68763))

(assert (=> b!71570 m!68765))

(assert (=> bm!6145 d!16005))

(declare-fun b!71571 () Bool)

(declare-fun e!46854 () Bool)

(declare-fun e!46845 () Bool)

(assert (=> b!71571 (= e!46854 e!46845)))

(declare-fun res!38140 () Bool)

(declare-fun call!6216 () Bool)

(assert (=> b!71571 (= res!38140 call!6216)))

(assert (=> b!71571 (=> (not res!38140) (not e!46845))))

(declare-fun call!6212 () ListLongMap!1433)

(declare-fun b!71572 () Bool)

(declare-fun e!46856 () ListLongMap!1433)

(assert (=> b!71572 (= e!46856 (+!95 call!6212 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))

(declare-fun b!71573 () Bool)

(declare-fun e!46853 () ListLongMap!1433)

(declare-fun call!6217 () ListLongMap!1433)

(assert (=> b!71573 (= e!46853 call!6217)))

(declare-fun b!71574 () Bool)

(declare-fun e!46847 () Unit!2006)

(declare-fun Unit!2035 () Unit!2006)

(assert (=> b!71574 (= e!46847 Unit!2035)))

(declare-fun b!71575 () Bool)

(declare-fun call!6214 () ListLongMap!1433)

(assert (=> b!71575 (= e!46853 call!6214)))

(declare-fun b!71576 () Bool)

(declare-fun e!46849 () Bool)

(assert (=> b!71576 (= e!46849 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6209 () Bool)

(declare-fun call!6213 () ListLongMap!1433)

(assert (=> bm!6209 (= call!6217 call!6213)))

(declare-fun b!71577 () Bool)

(assert (=> b!71577 (= e!46854 (not call!6216))))

(declare-fun bm!6211 () Bool)

(assert (=> bm!6211 (= call!6214 call!6212)))

(declare-fun bm!6212 () Bool)

(declare-fun call!6218 () ListLongMap!1433)

(assert (=> bm!6212 (= call!6213 call!6218)))

(declare-fun b!71578 () Bool)

(declare-fun e!46852 () Bool)

(declare-fun e!46851 () Bool)

(assert (=> b!71578 (= e!46852 e!46851)))

(declare-fun c!10452 () Bool)

(assert (=> b!71578 (= c!10452 (not (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6213 () Bool)

(declare-fun lt!31786 () ListLongMap!1433)

(assert (=> bm!6213 (= call!6216 (contains!726 lt!31786 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71579 () Bool)

(declare-fun e!46850 () Bool)

(assert (=> b!71579 (= e!46850 (= (apply!74 lt!31786 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))

(declare-fun b!71580 () Bool)

(declare-fun e!46848 () ListLongMap!1433)

(assert (=> b!71580 (= e!46856 e!46848)))

(declare-fun c!10449 () Bool)

(assert (=> b!71580 (= c!10449 (and (not (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71581 () Bool)

(declare-fun e!46857 () Bool)

(declare-fun e!46846 () Bool)

(assert (=> b!71581 (= e!46857 e!46846)))

(declare-fun res!38141 () Bool)

(assert (=> b!71581 (=> (not res!38141) (not e!46846))))

(assert (=> b!71581 (= res!38141 (contains!726 lt!31786 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71581 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71582 () Bool)

(assert (=> b!71582 (= e!46851 e!46850)))

(declare-fun res!38142 () Bool)

(declare-fun call!6215 () Bool)

(assert (=> b!71582 (= res!38142 call!6215)))

(assert (=> b!71582 (=> (not res!38142) (not e!46850))))

(declare-fun bm!6214 () Bool)

(assert (=> bm!6214 (= call!6215 (contains!726 lt!31786 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71583 () Bool)

(assert (=> b!71583 (= e!46848 call!6214)))

(declare-fun b!71584 () Bool)

(assert (=> b!71584 (= e!46846 (= (apply!74 lt!31786 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71584 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))))))))

(assert (=> b!71584 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71585 () Bool)

(declare-fun lt!31796 () Unit!2006)

(assert (=> b!71585 (= e!46847 lt!31796)))

(declare-fun lt!31787 () ListLongMap!1433)

(assert (=> b!71585 (= lt!31787 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31804 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31804 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31799 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31799 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31800 () Unit!2006)

(assert (=> b!71585 (= lt!31800 (addStillContains!50 lt!31787 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) lt!31799))))

(assert (=> b!71585 (contains!726 (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!31799)))

(declare-fun lt!31792 () Unit!2006)

(assert (=> b!71585 (= lt!31792 lt!31800)))

(declare-fun lt!31789 () ListLongMap!1433)

(assert (=> b!71585 (= lt!31789 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31790 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31790 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31791 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31791 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31803 () Unit!2006)

(assert (=> b!71585 (= lt!31803 (addApplyDifferent!50 lt!31789 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) lt!31791))))

(assert (=> b!71585 (= (apply!74 (+!95 lt!31789 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!31791) (apply!74 lt!31789 lt!31791))))

(declare-fun lt!31795 () Unit!2006)

(assert (=> b!71585 (= lt!31795 lt!31803)))

(declare-fun lt!31798 () ListLongMap!1433)

(assert (=> b!71585 (= lt!31798 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31794 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31794 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31801 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31801 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31793 () Unit!2006)

(assert (=> b!71585 (= lt!31793 (addApplyDifferent!50 lt!31798 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) lt!31801))))

(assert (=> b!71585 (= (apply!74 (+!95 lt!31798 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!31801) (apply!74 lt!31798 lt!31801))))

(declare-fun lt!31797 () Unit!2006)

(assert (=> b!71585 (= lt!31797 lt!31793)))

(declare-fun lt!31788 () ListLongMap!1433)

(assert (=> b!71585 (= lt!31788 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31784 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31784 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31785 () (_ BitVec 64))

(assert (=> b!71585 (= lt!31785 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71585 (= lt!31796 (addApplyDifferent!50 lt!31788 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) lt!31785))))

(assert (=> b!71585 (= (apply!74 (+!95 lt!31788 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!31785) (apply!74 lt!31788 lt!31785))))

(declare-fun b!71586 () Bool)

(assert (=> b!71586 (= e!46851 (not call!6215))))

(declare-fun b!71587 () Bool)

(declare-fun res!38145 () Bool)

(assert (=> b!71587 (=> (not res!38145) (not e!46852))))

(assert (=> b!71587 (= res!38145 e!46857)))

(declare-fun res!38146 () Bool)

(assert (=> b!71587 (=> res!38146 e!46857)))

(assert (=> b!71587 (= res!38146 (not e!46849))))

(declare-fun res!38144 () Bool)

(assert (=> b!71587 (=> (not res!38144) (not e!46849))))

(assert (=> b!71587 (= res!38144 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6215 () Bool)

(assert (=> bm!6215 (= call!6218 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71588 () Bool)

(declare-fun e!46855 () Bool)

(assert (=> b!71588 (= e!46855 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71589 () Bool)

(declare-fun res!38139 () Bool)

(assert (=> b!71589 (=> (not res!38139) (not e!46852))))

(assert (=> b!71589 (= res!38139 e!46854)))

(declare-fun c!10451 () Bool)

(assert (=> b!71589 (= c!10451 (not (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6210 () Bool)

(declare-fun c!10453 () Bool)

(assert (=> bm!6210 (= call!6212 (+!95 (ite c!10453 call!6218 (ite c!10449 call!6213 call!6217)) (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(declare-fun d!16007 () Bool)

(assert (=> d!16007 e!46852))

(declare-fun res!38143 () Bool)

(assert (=> d!16007 (=> (not res!38143) (not e!46852))))

(assert (=> d!16007 (= res!38143 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun lt!31783 () ListLongMap!1433)

(assert (=> d!16007 (= lt!31786 lt!31783)))

(declare-fun lt!31802 () Unit!2006)

(assert (=> d!16007 (= lt!31802 e!46847)))

(declare-fun c!10450 () Bool)

(assert (=> d!16007 (= c!10450 e!46855)))

(declare-fun res!38147 () Bool)

(assert (=> d!16007 (=> (not res!38147) (not e!46855))))

(assert (=> d!16007 (= res!38147 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16007 (= lt!31783 e!46856)))

(assert (=> d!16007 (= c!10453 (and (not (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16007 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16007 (= (getCurrentListMap!425 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31786)))

(declare-fun b!71590 () Bool)

(assert (=> b!71590 (= e!46845 (= (apply!74 lt!31786 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))

(declare-fun c!10454 () Bool)

(declare-fun b!71591 () Bool)

(assert (=> b!71591 (= c!10454 (and (not (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!71591 (= e!46848 e!46853)))

(assert (= (and d!16007 c!10453) b!71572))

(assert (= (and d!16007 (not c!10453)) b!71580))

(assert (= (and b!71580 c!10449) b!71583))

(assert (= (and b!71580 (not c!10449)) b!71591))

(assert (= (and b!71591 c!10454) b!71575))

(assert (= (and b!71591 (not c!10454)) b!71573))

(assert (= (or b!71575 b!71573) bm!6209))

(assert (= (or b!71583 bm!6209) bm!6212))

(assert (= (or b!71583 b!71575) bm!6211))

(assert (= (or b!71572 bm!6212) bm!6215))

(assert (= (or b!71572 bm!6211) bm!6210))

(assert (= (and d!16007 res!38147) b!71588))

(assert (= (and d!16007 c!10450) b!71585))

(assert (= (and d!16007 (not c!10450)) b!71574))

(assert (= (and d!16007 res!38143) b!71587))

(assert (= (and b!71587 res!38144) b!71576))

(assert (= (and b!71587 (not res!38146)) b!71581))

(assert (= (and b!71581 res!38141) b!71584))

(assert (= (and b!71587 res!38145) b!71589))

(assert (= (and b!71589 c!10451) b!71571))

(assert (= (and b!71589 (not c!10451)) b!71577))

(assert (= (and b!71571 res!38140) b!71590))

(assert (= (or b!71571 b!71577) bm!6213))

(assert (= (and b!71589 res!38139) b!71578))

(assert (= (and b!71578 c!10452) b!71582))

(assert (= (and b!71578 (not c!10452)) b!71586))

(assert (= (and b!71582 res!38142) b!71579))

(assert (= (or b!71582 b!71586) bm!6214))

(declare-fun b_lambda!3213 () Bool)

(assert (=> (not b_lambda!3213) (not b!71584)))

(assert (=> b!71584 t!5051))

(declare-fun b_and!4401 () Bool)

(assert (= b_and!4397 (and (=> t!5051 result!2669) b_and!4401)))

(assert (=> b!71584 t!5053))

(declare-fun b_and!4403 () Bool)

(assert (= b_and!4399 (and (=> t!5053 result!2671) b_and!4403)))

(assert (=> b!71581 m!68067))

(assert (=> b!71581 m!68067))

(declare-fun m!68767 () Bool)

(assert (=> b!71581 m!68767))

(declare-fun m!68769 () Bool)

(assert (=> bm!6213 m!68769))

(declare-fun m!68771 () Bool)

(assert (=> bm!6214 m!68771))

(assert (=> b!71576 m!68067))

(assert (=> b!71576 m!68067))

(assert (=> b!71576 m!68077))

(assert (=> b!71585 m!68067))

(declare-fun m!68773 () Bool)

(assert (=> b!71585 m!68773))

(declare-fun m!68775 () Bool)

(assert (=> b!71585 m!68775))

(declare-fun m!68777 () Bool)

(assert (=> b!71585 m!68777))

(declare-fun m!68779 () Bool)

(assert (=> b!71585 m!68779))

(declare-fun m!68781 () Bool)

(assert (=> b!71585 m!68781))

(declare-fun m!68783 () Bool)

(assert (=> b!71585 m!68783))

(assert (=> b!71585 m!68777))

(declare-fun m!68785 () Bool)

(assert (=> b!71585 m!68785))

(declare-fun m!68787 () Bool)

(assert (=> b!71585 m!68787))

(assert (=> b!71585 m!68783))

(declare-fun m!68789 () Bool)

(assert (=> b!71585 m!68789))

(declare-fun m!68791 () Bool)

(assert (=> b!71585 m!68791))

(declare-fun m!68793 () Bool)

(assert (=> b!71585 m!68793))

(assert (=> b!71585 m!68791))

(declare-fun m!68795 () Bool)

(assert (=> b!71585 m!68795))

(declare-fun m!68797 () Bool)

(assert (=> b!71585 m!68797))

(declare-fun m!68799 () Bool)

(assert (=> b!71585 m!68799))

(declare-fun m!68801 () Bool)

(assert (=> b!71585 m!68801))

(declare-fun m!68803 () Bool)

(assert (=> b!71585 m!68803))

(assert (=> b!71585 m!68795))

(assert (=> bm!6215 m!68803))

(declare-fun m!68805 () Bool)

(assert (=> bm!6210 m!68805))

(declare-fun m!68807 () Bool)

(assert (=> b!71590 m!68807))

(declare-fun m!68809 () Bool)

(assert (=> b!71579 m!68809))

(declare-fun m!68811 () Bool)

(assert (=> b!71584 m!68811))

(assert (=> b!71584 m!68811))

(assert (=> b!71584 m!68529))

(declare-fun m!68813 () Bool)

(assert (=> b!71584 m!68813))

(assert (=> b!71584 m!68529))

(assert (=> b!71584 m!68067))

(assert (=> b!71584 m!68067))

(declare-fun m!68815 () Bool)

(assert (=> b!71584 m!68815))

(assert (=> b!71588 m!68067))

(assert (=> b!71588 m!68067))

(assert (=> b!71588 m!68077))

(assert (=> d!16007 m!68107))

(declare-fun m!68817 () Bool)

(assert (=> b!71572 m!68817))

(assert (=> bm!6105 d!16007))

(declare-fun d!16009 () Bool)

(declare-fun lt!31805 () Bool)

(assert (=> d!16009 (= lt!31805 (select (content!74 (toList!732 lt!31451)) lt!31200))))

(declare-fun e!46859 () Bool)

(assert (=> d!16009 (= lt!31805 e!46859)))

(declare-fun res!38149 () Bool)

(assert (=> d!16009 (=> (not res!38149) (not e!46859))))

(assert (=> d!16009 (= res!38149 ((_ is Cons!1500) (toList!732 lt!31451)))))

(assert (=> d!16009 (= (contains!728 (toList!732 lt!31451) lt!31200) lt!31805)))

(declare-fun b!71592 () Bool)

(declare-fun e!46858 () Bool)

(assert (=> b!71592 (= e!46859 e!46858)))

(declare-fun res!38148 () Bool)

(assert (=> b!71592 (=> res!38148 e!46858)))

(assert (=> b!71592 (= res!38148 (= (h!2086 (toList!732 lt!31451)) lt!31200))))

(declare-fun b!71593 () Bool)

(assert (=> b!71593 (= e!46858 (contains!728 (t!5044 (toList!732 lt!31451)) lt!31200))))

(assert (= (and d!16009 res!38149) b!71592))

(assert (= (and b!71592 (not res!38148)) b!71593))

(declare-fun m!68819 () Bool)

(assert (=> d!16009 m!68819))

(declare-fun m!68821 () Bool)

(assert (=> d!16009 m!68821))

(declare-fun m!68823 () Bool)

(assert (=> b!71593 m!68823))

(assert (=> b!71126 d!16009))

(declare-fun d!16011 () Bool)

(assert (=> d!16011 (= (apply!74 lt!31396 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3061 () Bool)

(assert (= bs!3061 d!16011))

(assert (=> bs!3061 m!68763))

(assert (=> bs!3061 m!68763))

(declare-fun m!68825 () Bool)

(assert (=> bs!3061 m!68825))

(assert (=> b!71070 d!16011))

(declare-fun d!16013 () Bool)

(declare-fun e!46860 () Bool)

(assert (=> d!16013 e!46860))

(declare-fun res!38151 () Bool)

(assert (=> d!16013 (=> (not res!38151) (not e!46860))))

(declare-fun lt!31809 () ListLongMap!1433)

(assert (=> d!16013 (= res!38151 (contains!726 lt!31809 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun lt!31808 () List!1504)

(assert (=> d!16013 (= lt!31809 (ListLongMap!1434 lt!31808))))

(declare-fun lt!31807 () Unit!2006)

(declare-fun lt!31806 () Unit!2006)

(assert (=> d!16013 (= lt!31807 lt!31806)))

(assert (=> d!16013 (= (getValueByKey!131 lt!31808 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (Some!136 (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> d!16013 (= lt!31806 (lemmaContainsTupThenGetReturnValue!50 lt!31808 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> d!16013 (= lt!31808 (insertStrictlySorted!52 (toList!732 e!46509) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> d!16013 (= (+!95 e!46509 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31809)))

(declare-fun b!71594 () Bool)

(declare-fun res!38150 () Bool)

(assert (=> b!71594 (=> (not res!38150) (not e!46860))))

(assert (=> b!71594 (= res!38150 (= (getValueByKey!131 (toList!732 lt!31809) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (Some!136 (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!71595 () Bool)

(assert (=> b!71595 (= e!46860 (contains!728 (toList!732 lt!31809) (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (= (and d!16013 res!38151) b!71594))

(assert (= (and b!71594 res!38150) b!71595))

(declare-fun m!68827 () Bool)

(assert (=> d!16013 m!68827))

(declare-fun m!68829 () Bool)

(assert (=> d!16013 m!68829))

(declare-fun m!68831 () Bool)

(assert (=> d!16013 m!68831))

(declare-fun m!68833 () Bool)

(assert (=> d!16013 m!68833))

(declare-fun m!68835 () Bool)

(assert (=> b!71594 m!68835))

(declare-fun m!68837 () Bool)

(assert (=> b!71595 m!68837))

(assert (=> bm!6109 d!16013))

(declare-fun d!16015 () Bool)

(assert (=> d!16015 (= (get!1149 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) from!355) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70884 d!16015))

(assert (=> b!71121 d!15839))

(declare-fun d!16017 () Bool)

(declare-fun res!38152 () Bool)

(declare-fun e!46861 () Bool)

(assert (=> d!16017 (=> res!38152 e!46861)))

(assert (=> d!16017 (= res!38152 (= (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16017 (= (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000) e!46861)))

(declare-fun b!71596 () Bool)

(declare-fun e!46862 () Bool)

(assert (=> b!71596 (= e!46861 e!46862)))

(declare-fun res!38153 () Bool)

(assert (=> b!71596 (=> (not res!38153) (not e!46862))))

(assert (=> b!71596 (= res!38153 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71597 () Bool)

(assert (=> b!71597 (= e!46862 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16017 (not res!38152)) b!71596))

(assert (= (and b!71596 res!38153) b!71597))

(assert (=> d!16017 m!68067))

(assert (=> b!71597 m!67713))

(declare-fun m!68839 () Bool)

(assert (=> b!71597 m!68839))

(assert (=> bm!6119 d!16017))

(declare-fun d!16019 () Bool)

(declare-fun lt!31812 () Bool)

(declare-fun content!75 (List!1503) (InoxSet (_ BitVec 64)))

(assert (=> d!16019 (= lt!31812 (select (content!75 Nil!1500) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun e!46867 () Bool)

(assert (=> d!16019 (= lt!31812 e!46867)))

(declare-fun res!38158 () Bool)

(assert (=> d!16019 (=> (not res!38158) (not e!46867))))

(assert (=> d!16019 (= res!38158 ((_ is Cons!1499) Nil!1500))))

(assert (=> d!16019 (= (contains!727 Nil!1500 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31812)))

(declare-fun b!71602 () Bool)

(declare-fun e!46868 () Bool)

(assert (=> b!71602 (= e!46867 e!46868)))

(declare-fun res!38159 () Bool)

(assert (=> b!71602 (=> res!38159 e!46868)))

(assert (=> b!71602 (= res!38159 (= (h!2085 Nil!1500) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71603 () Bool)

(assert (=> b!71603 (= e!46868 (contains!727 (t!5043 Nil!1500) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!16019 res!38158) b!71602))

(assert (= (and b!71602 (not res!38159)) b!71603))

(declare-fun m!68841 () Bool)

(assert (=> d!16019 m!68841))

(assert (=> d!16019 m!67713))

(declare-fun m!68843 () Bool)

(assert (=> d!16019 m!68843))

(assert (=> b!71603 m!67713))

(declare-fun m!68845 () Bool)

(assert (=> b!71603 m!68845))

(assert (=> b!70865 d!16019))

(declare-fun d!16021 () Bool)

(declare-fun e!46869 () Bool)

(assert (=> d!16021 e!46869))

(declare-fun res!38160 () Bool)

(assert (=> d!16021 (=> res!38160 e!46869)))

(declare-fun lt!31815 () Bool)

(assert (=> d!16021 (= res!38160 (not lt!31815))))

(declare-fun lt!31813 () Bool)

(assert (=> d!16021 (= lt!31815 lt!31813)))

(declare-fun lt!31814 () Unit!2006)

(declare-fun e!46870 () Unit!2006)

(assert (=> d!16021 (= lt!31814 e!46870)))

(declare-fun c!10455 () Bool)

(assert (=> d!16021 (= c!10455 lt!31813)))

(assert (=> d!16021 (= lt!31813 (containsKey!135 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16021 (= (contains!726 lt!31396 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31815)))

(declare-fun b!71604 () Bool)

(declare-fun lt!31816 () Unit!2006)

(assert (=> b!71604 (= e!46870 lt!31816)))

(assert (=> b!71604 (= lt!31816 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71604 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71605 () Bool)

(declare-fun Unit!2036 () Unit!2006)

(assert (=> b!71605 (= e!46870 Unit!2036)))

(declare-fun b!71606 () Bool)

(assert (=> b!71606 (= e!46869 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16021 c!10455) b!71604))

(assert (= (and d!16021 (not c!10455)) b!71605))

(assert (= (and d!16021 (not res!38160)) b!71606))

(assert (=> d!16021 m!67827))

(declare-fun m!68847 () Bool)

(assert (=> d!16021 m!68847))

(assert (=> b!71604 m!67827))

(declare-fun m!68849 () Bool)

(assert (=> b!71604 m!68849))

(assert (=> b!71604 m!67827))

(assert (=> b!71604 m!68669))

(assert (=> b!71604 m!68669))

(declare-fun m!68851 () Bool)

(assert (=> b!71604 m!68851))

(assert (=> b!71606 m!67827))

(assert (=> b!71606 m!68669))

(assert (=> b!71606 m!68669))

(assert (=> b!71606 m!68851))

(assert (=> b!71072 d!16021))

(declare-fun d!16023 () Bool)

(declare-fun e!46871 () Bool)

(assert (=> d!16023 e!46871))

(declare-fun res!38161 () Bool)

(assert (=> d!16023 (=> res!38161 e!46871)))

(declare-fun lt!31819 () Bool)

(assert (=> d!16023 (= res!38161 (not lt!31819))))

(declare-fun lt!31817 () Bool)

(assert (=> d!16023 (= lt!31819 lt!31817)))

(declare-fun lt!31818 () Unit!2006)

(declare-fun e!46872 () Unit!2006)

(assert (=> d!16023 (= lt!31818 e!46872)))

(declare-fun c!10456 () Bool)

(assert (=> d!16023 (= c!10456 lt!31817)))

(assert (=> d!16023 (= lt!31817 (containsKey!135 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16023 (= (contains!726 call!6111 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31819)))

(declare-fun b!71607 () Bool)

(declare-fun lt!31820 () Unit!2006)

(assert (=> b!71607 (= e!46872 lt!31820)))

(assert (=> b!71607 (= lt!31820 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!71607 (isDefined!85 (getValueByKey!131 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71608 () Bool)

(declare-fun Unit!2037 () Unit!2006)

(assert (=> b!71608 (= e!46872 Unit!2037)))

(declare-fun b!71609 () Bool)

(assert (=> b!71609 (= e!46871 (isDefined!85 (getValueByKey!131 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (= (and d!16023 c!10456) b!71607))

(assert (= (and d!16023 (not c!10456)) b!71608))

(assert (= (and d!16023 (not res!38161)) b!71609))

(assert (=> d!16023 m!67713))

(declare-fun m!68853 () Bool)

(assert (=> d!16023 m!68853))

(assert (=> b!71607 m!67713))

(declare-fun m!68855 () Bool)

(assert (=> b!71607 m!68855))

(assert (=> b!71607 m!67713))

(declare-fun m!68857 () Bool)

(assert (=> b!71607 m!68857))

(assert (=> b!71607 m!68857))

(declare-fun m!68859 () Bool)

(assert (=> b!71607 m!68859))

(assert (=> b!71609 m!67713))

(assert (=> b!71609 m!68857))

(assert (=> b!71609 m!68857))

(assert (=> b!71609 m!68859))

(assert (=> b!70978 d!16023))

(assert (=> bm!6110 d!15913))

(assert (=> b!70893 d!15827))

(assert (=> b!70893 d!15829))

(declare-fun d!16025 () Bool)

(declare-fun lt!31821 () Bool)

(assert (=> d!16025 (= lt!31821 (select (content!74 (toList!732 lt!31426)) lt!31205))))

(declare-fun e!46874 () Bool)

(assert (=> d!16025 (= lt!31821 e!46874)))

(declare-fun res!38163 () Bool)

(assert (=> d!16025 (=> (not res!38163) (not e!46874))))

(assert (=> d!16025 (= res!38163 ((_ is Cons!1500) (toList!732 lt!31426)))))

(assert (=> d!16025 (= (contains!728 (toList!732 lt!31426) lt!31205) lt!31821)))

(declare-fun b!71610 () Bool)

(declare-fun e!46873 () Bool)

(assert (=> b!71610 (= e!46874 e!46873)))

(declare-fun res!38162 () Bool)

(assert (=> b!71610 (=> res!38162 e!46873)))

(assert (=> b!71610 (= res!38162 (= (h!2086 (toList!732 lt!31426)) lt!31205))))

(declare-fun b!71611 () Bool)

(assert (=> b!71611 (= e!46873 (contains!728 (t!5044 (toList!732 lt!31426)) lt!31205))))

(assert (= (and d!16025 res!38163) b!71610))

(assert (= (and b!71610 (not res!38162)) b!71611))

(declare-fun m!68861 () Bool)

(assert (=> d!16025 m!68861))

(declare-fun m!68863 () Bool)

(assert (=> d!16025 m!68863))

(declare-fun m!68865 () Bool)

(assert (=> b!71611 m!68865))

(assert (=> b!71088 d!16025))

(declare-fun d!16027 () Bool)

(declare-fun isEmpty!320 (List!1504) Bool)

(assert (=> d!16027 (= (isEmpty!318 lt!31442) (isEmpty!320 (toList!732 lt!31442)))))

(declare-fun bs!3062 () Bool)

(assert (= bs!3062 d!16027))

(declare-fun m!68867 () Bool)

(assert (=> bs!3062 m!68867))

(assert (=> b!71119 d!16027))

(declare-fun condMapEmpty!3157 () Bool)

(declare-fun mapDefault!3157 () ValueCell!891)

(assert (=> mapNonEmpty!3156 (= condMapEmpty!3157 (= mapRest!3156 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3157)))))

(declare-fun e!46875 () Bool)

(declare-fun mapRes!3157 () Bool)

(assert (=> mapNonEmpty!3156 (= tp!8502 (and e!46875 mapRes!3157))))

(declare-fun b!71613 () Bool)

(assert (=> b!71613 (= e!46875 tp_is_empty!2469)))

(declare-fun b!71612 () Bool)

(declare-fun e!46876 () Bool)

(assert (=> b!71612 (= e!46876 tp_is_empty!2469)))

(declare-fun mapIsEmpty!3157 () Bool)

(assert (=> mapIsEmpty!3157 mapRes!3157))

(declare-fun mapNonEmpty!3157 () Bool)

(declare-fun tp!8503 () Bool)

(assert (=> mapNonEmpty!3157 (= mapRes!3157 (and tp!8503 e!46876))))

(declare-fun mapRest!3157 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapKey!3157 () (_ BitVec 32))

(declare-fun mapValue!3157 () ValueCell!891)

(assert (=> mapNonEmpty!3157 (= mapRest!3156 (store mapRest!3157 mapKey!3157 mapValue!3157))))

(assert (= (and mapNonEmpty!3156 condMapEmpty!3157) mapIsEmpty!3157))

(assert (= (and mapNonEmpty!3156 (not condMapEmpty!3157)) mapNonEmpty!3157))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!891) mapValue!3157)) b!71612))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!891) mapDefault!3157)) b!71613))

(declare-fun m!68869 () Bool)

(assert (=> mapNonEmpty!3157 m!68869))

(declare-fun condMapEmpty!3158 () Bool)

(declare-fun mapDefault!3158 () ValueCell!891)

(assert (=> mapNonEmpty!3155 (= condMapEmpty!3158 (= mapRest!3155 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3158)))))

(declare-fun e!46877 () Bool)

(declare-fun mapRes!3158 () Bool)

(assert (=> mapNonEmpty!3155 (= tp!8501 (and e!46877 mapRes!3158))))

(declare-fun b!71615 () Bool)

(assert (=> b!71615 (= e!46877 tp_is_empty!2469)))

(declare-fun b!71614 () Bool)

(declare-fun e!46878 () Bool)

(assert (=> b!71614 (= e!46878 tp_is_empty!2469)))

(declare-fun mapIsEmpty!3158 () Bool)

(assert (=> mapIsEmpty!3158 mapRes!3158))

(declare-fun mapNonEmpty!3158 () Bool)

(declare-fun tp!8504 () Bool)

(assert (=> mapNonEmpty!3158 (= mapRes!3158 (and tp!8504 e!46878))))

(declare-fun mapRest!3158 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapValue!3158 () ValueCell!891)

(declare-fun mapKey!3158 () (_ BitVec 32))

(assert (=> mapNonEmpty!3158 (= mapRest!3155 (store mapRest!3158 mapKey!3158 mapValue!3158))))

(assert (= (and mapNonEmpty!3155 condMapEmpty!3158) mapIsEmpty!3158))

(assert (= (and mapNonEmpty!3155 (not condMapEmpty!3158)) mapNonEmpty!3158))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!891) mapValue!3158)) b!71614))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!891) mapDefault!3158)) b!71615))

(declare-fun m!68871 () Bool)

(assert (=> mapNonEmpty!3158 m!68871))

(declare-fun b_lambda!3215 () Bool)

(assert (= b_lambda!3209 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3215)))

(declare-fun b_lambda!3217 () Bool)

(assert (= b_lambda!3211 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3217)))

(declare-fun b_lambda!3219 () Bool)

(assert (= b_lambda!3207 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3219)))

(declare-fun b_lambda!3221 () Bool)

(assert (= b_lambda!3213 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3221)))

(declare-fun b_lambda!3223 () Bool)

(assert (= b_lambda!3205 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3223)))

(check-sat (not b!71316) (not b!71313) (not b_lambda!3221) (not b!71417) (not b!71499) (not b!71498) (not b!71178) (not b!71322) (not b!71395) (not d!15999) (not b!71439) (not b!71306) (not b!71604) (not d!15859) (not bm!6202) (not b!71311) (not b!71143) (not b!71434) (not b!71550) (not bm!6207) (not d!15931) (not d!16011) (not d!15909) (not d!15837) (not b!71358) (not bm!6191) (not d!15867) (not b!71448) (not b!71497) (not bm!6152) (not b!71492) (not b!71330) (not b!71504) tp_is_empty!2469 (not b!71196) (not b!71259) (not bm!6162) (not b!71496) (not b_lambda!3215) (not b!71331) (not b!71503) (not d!15955) (not b!71494) (not d!15843) b_and!4401 (not b!71203) (not b!71570) (not b!71441) (not d!16013) (not d!15825) (not b!71554) (not d!16005) (not b!71451) (not b!71416) (not b!71209) (not b_lambda!3217) (not b!71585) (not mapNonEmpty!3157) (not d!15883) (not d!15877) (not b!71304) (not b!71431) (not b!71329) (not b!71588) (not b!71462) (not d!16001) (not d!15965) (not b!71521) (not b!71192) (not d!15893) (not d!16019) (not b!71156) (not b!71194) (not d!15973) (not d!15889) (not d!15891) (not d!16025) (not d!15919) (not d!15967) (not d!16023) (not b!71568) (not b!71538) (not bm!6208) (not d!15977) (not d!15865) (not d!15923) (not b!71400) (not b!71176) (not d!15951) (not bm!6197) (not d!15971) (not d!15929) (not bm!6192) (not b!71539) (not b!71606) (not b!71320) (not b!71545) (not d!15879) b_and!4403 (not d!16009) (not mapNonEmpty!3158) (not b!71590) (not b!71525) (not b!71303) (not d!15981) (not b!71457) (not b!71484) (not b!71536) (not b!71397) (not b!71563) (not b!71426) (not b!71216) (not b!71250) (not b!71482) (not bm!6196) (not b!71154) (not d!15831) (not b!71460) (not b!71432) (not b!71207) (not b!71506) (not d!15957) (not b!71418) (not d!15927) (not d!15885) (not b!71327) (not b!71507) (not bm!6213) (not b!71424) (not b!71593) (not d!15959) (not b!71398) (not b!71169) (not d!15861) (not d!15987) (not d!15983) (not b!71174) (not b!71223) (not b!71453) (not b!71611) (not bm!6193) (not b!71472) (not b_lambda!3203) (not b!71502) (not d!15905) (not d!15875) (not d!15827) (not b!71567) (not b!71352) (not d!15943) (not b!71405) (not b!71594) (not b_lambda!3201) (not d!15935) (not b!71422) (not b!71245) (not b!71171) (not d!16021) (not d!15993) (not b!71500) (not d!16007) (not b!71429) (not d!15949) (not b!71581) (not b!71467) (not b!71607) (not b!71466) (not b!71576) (not b!71584) (not b!71579) (not b!71332) (not b!71469) (not b!71173) (not d!15979) (not d!15897) (not b!71565) (not d!15881) (not b!71305) (not b!71319) (not b!71535) (not b!71548) (not bm!6153) (not b!71477) (not d!15945) (not d!15845) (not b!71157) (not b!71336) (not b!71180) (not d!15841) (not d!15937) (not b!71210) (not b!71475) (not b!71252) (not b!71168) (not b!71211) (not bm!6180) (not b!71390) (not d!15853) (not b!71328) (not b!71456) (not b_lambda!3199) (not b!71392) (not d!16027) (not d!15913) (not b!71508) (not bm!6171) (not b!71256) (not b!71213) (not b!71505) (not b!71603) (not b!71559) (not b!71302) (not b!71464) (not bm!6200) (not d!15995) (not d!15847) (not b!71389) (not b!71562) (not bm!6206) (not d!15975) (not d!15899) (not d!15911) (not b_lambda!3191) (not b!71595) (not bm!6186) (not d!15963) (not b!71510) (not d!15887) (not d!15849) (not b_next!2105) (not bm!6188) (not d!15933) (not b!71337) (not b!71444) (not b!71222) (not b!71557) (not b!71537) (not b_lambda!3219) (not d!15997) (not d!15907) (not d!15901) (not b_lambda!3223) (not b!71191) (not bm!6173) (not b_next!2107) (not b!71532) (not b!71474) (not d!15855) (not b!71407) (not b!71411) (not bm!6214) (not b!71553) (not b!71172) (not b!71597) (not b!71523) (not b!71541) (not b!71501) (not b!71297) (not b!71572) (not b!71490) (not b!71197) (not b!71198) (not d!15989) (not b!71179) (not b!71409) (not b!71531) (not bm!6172) (not d!15917) (not b!71609) (not bm!6205) (not b!71419) (not bm!6183) (not bm!6210) (not d!15991) (not b!71534) (not d!15895) (not d!15903) (not bm!6215) (not bm!6179))
(check-sat b_and!4401 b_and!4403 (not b_next!2105) (not b_next!2107))
(get-model)

(assert (=> b!71143 d!15921))

(declare-fun d!16029 () Bool)

(assert (=> d!16029 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31451) (_1!1079 lt!31200))) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31451) (_1!1079 lt!31200)))))))

(declare-fun bs!3063 () Bool)

(assert (= bs!3063 d!16029))

(assert (=> bs!3063 m!68009))

(declare-fun m!68873 () Bool)

(assert (=> bs!3063 m!68873))

(assert (=> b!71469 d!16029))

(assert (=> b!71469 d!15915))

(declare-fun d!16031 () Bool)

(declare-fun res!38168 () Bool)

(declare-fun e!46883 () Bool)

(assert (=> d!16031 (=> res!38168 e!46883)))

(assert (=> d!16031 (= res!38168 (or ((_ is Nil!1501) lt!31679) ((_ is Nil!1501) (t!5044 lt!31679))))))

(assert (=> d!16031 (= (isStrictlySorted!286 lt!31679) e!46883)))

(declare-fun b!71620 () Bool)

(declare-fun e!46884 () Bool)

(assert (=> b!71620 (= e!46883 e!46884)))

(declare-fun res!38169 () Bool)

(assert (=> b!71620 (=> (not res!38169) (not e!46884))))

(assert (=> b!71620 (= res!38169 (bvslt (_1!1079 (h!2086 lt!31679)) (_1!1079 (h!2086 (t!5044 lt!31679)))))))

(declare-fun b!71621 () Bool)

(assert (=> b!71621 (= e!46884 (isStrictlySorted!286 (t!5044 lt!31679)))))

(assert (= (and d!16031 (not res!38168)) b!71620))

(assert (= (and b!71620 res!38169) b!71621))

(declare-fun m!68875 () Bool)

(assert (=> b!71621 m!68875))

(assert (=> d!15951 d!16031))

(declare-fun d!16033 () Bool)

(declare-fun res!38170 () Bool)

(declare-fun e!46885 () Bool)

(assert (=> d!16033 (=> res!38170 e!46885)))

(assert (=> d!16033 (= res!38170 (or ((_ is Nil!1501) (toList!732 lt!31210)) ((_ is Nil!1501) (t!5044 (toList!732 lt!31210)))))))

(assert (=> d!16033 (= (isStrictlySorted!286 (toList!732 lt!31210)) e!46885)))

(declare-fun b!71622 () Bool)

(declare-fun e!46886 () Bool)

(assert (=> b!71622 (= e!46885 e!46886)))

(declare-fun res!38171 () Bool)

(assert (=> b!71622 (=> (not res!38171) (not e!46886))))

(assert (=> b!71622 (= res!38171 (bvslt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 (h!2086 (t!5044 (toList!732 lt!31210))))))))

(declare-fun b!71623 () Bool)

(assert (=> b!71623 (= e!46886 (isStrictlySorted!286 (t!5044 (toList!732 lt!31210))))))

(assert (= (and d!16033 (not res!38170)) b!71622))

(assert (= (and b!71622 res!38171) b!71623))

(declare-fun m!68877 () Bool)

(assert (=> b!71623 m!68877))

(assert (=> d!15951 d!16033))

(declare-fun d!16035 () Bool)

(declare-fun res!38172 () Bool)

(declare-fun e!46887 () Bool)

(assert (=> d!16035 (=> res!38172 e!46887)))

(assert (=> d!16035 (= res!38172 (and ((_ is Cons!1500) lt!31658) (= (_1!1079 (h!2086 lt!31658)) (_1!1079 lt!31200))))))

(assert (=> d!16035 (= (containsKey!135 lt!31658 (_1!1079 lt!31200)) e!46887)))

(declare-fun b!71624 () Bool)

(declare-fun e!46888 () Bool)

(assert (=> b!71624 (= e!46887 e!46888)))

(declare-fun res!38173 () Bool)

(assert (=> b!71624 (=> (not res!38173) (not e!46888))))

(assert (=> b!71624 (= res!38173 (and (or (not ((_ is Cons!1500) lt!31658)) (bvsle (_1!1079 (h!2086 lt!31658)) (_1!1079 lt!31200))) ((_ is Cons!1500) lt!31658) (bvslt (_1!1079 (h!2086 lt!31658)) (_1!1079 lt!31200))))))

(declare-fun b!71625 () Bool)

(assert (=> b!71625 (= e!46888 (containsKey!135 (t!5044 lt!31658) (_1!1079 lt!31200)))))

(assert (= (and d!16035 (not res!38172)) b!71624))

(assert (= (and b!71624 res!38173) b!71625))

(declare-fun m!68879 () Bool)

(assert (=> b!71625 m!68879))

(assert (=> b!71400 d!16035))

(declare-fun d!16037 () Bool)

(assert (=> d!16037 (= ($colon$colon!64 e!46766 (ite c!10413 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205)))) (Cons!1500 (ite c!10413 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))) e!46766))))

(assert (=> bm!6186 d!16037))

(declare-fun d!16039 () Bool)

(declare-fun res!38174 () Bool)

(declare-fun e!46889 () Bool)

(assert (=> d!16039 (=> res!38174 e!46889)))

(assert (=> d!16039 (= res!38174 (or ((_ is Nil!1501) lt!31658) ((_ is Nil!1501) (t!5044 lt!31658))))))

(assert (=> d!16039 (= (isStrictlySorted!286 lt!31658) e!46889)))

(declare-fun b!71626 () Bool)

(declare-fun e!46890 () Bool)

(assert (=> b!71626 (= e!46889 e!46890)))

(declare-fun res!38175 () Bool)

(assert (=> b!71626 (=> (not res!38175) (not e!46890))))

(assert (=> b!71626 (= res!38175 (bvslt (_1!1079 (h!2086 lt!31658)) (_1!1079 (h!2086 (t!5044 lt!31658)))))))

(declare-fun b!71627 () Bool)

(assert (=> b!71627 (= e!46890 (isStrictlySorted!286 (t!5044 lt!31658)))))

(assert (= (and d!16039 (not res!38174)) b!71626))

(assert (= (and b!71626 res!38175) b!71627))

(declare-fun m!68881 () Bool)

(assert (=> b!71627 m!68881))

(assert (=> d!15929 d!16039))

(assert (=> d!15929 d!16033))

(declare-fun d!16041 () Bool)

(declare-fun res!38176 () Bool)

(declare-fun e!46891 () Bool)

(assert (=> d!16041 (=> res!38176 e!46891)))

(assert (=> d!16041 (= res!38176 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))))) lt!31443)))))

(assert (=> d!16041 (= (containsKey!135 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443) e!46891)))

(declare-fun b!71628 () Bool)

(declare-fun e!46892 () Bool)

(assert (=> b!71628 (= e!46891 e!46892)))

(declare-fun res!38177 () Bool)

(assert (=> b!71628 (=> (not res!38177) (not e!46892))))

(assert (=> b!71628 (= res!38177 (and (or (not ((_ is Cons!1500) (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))))) (bvsle (_1!1079 (h!2086 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))))) lt!31443)) ((_ is Cons!1500) (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))) (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))))) lt!31443)))))

(declare-fun b!71629 () Bool)

(assert (=> b!71629 (= e!46892 (containsKey!135 (t!5044 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))) lt!31443))))

(assert (= (and d!16041 (not res!38176)) b!71628))

(assert (= (and b!71628 res!38177) b!71629))

(declare-fun m!68883 () Bool)

(assert (=> b!71629 m!68883))

(assert (=> d!15931 d!16041))

(declare-fun d!16043 () Bool)

(declare-fun c!10459 () Bool)

(assert (=> d!16043 (= c!10459 ((_ is Nil!1501) (toList!732 lt!31462)))))

(declare-fun e!46895 () (InoxSet tuple2!2138))

(assert (=> d!16043 (= (content!74 (toList!732 lt!31462)) e!46895)))

(declare-fun b!71634 () Bool)

(assert (=> b!71634 (= e!46895 ((as const (Array tuple2!2138 Bool)) false))))

(declare-fun b!71635 () Bool)

(assert (=> b!71635 (= e!46895 ((_ map or) (store ((as const (Array tuple2!2138 Bool)) false) (h!2086 (toList!732 lt!31462)) true) (content!74 (t!5044 (toList!732 lt!31462)))))))

(assert (= (and d!16043 c!10459) b!71634))

(assert (= (and d!16043 (not c!10459)) b!71635))

(declare-fun m!68885 () Bool)

(assert (=> b!71635 m!68885))

(declare-fun m!68887 () Bool)

(assert (=> b!71635 m!68887))

(assert (=> d!15989 d!16043))

(declare-fun d!16045 () Bool)

(assert (=> d!16045 (= (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71448 d!16045))

(declare-fun d!16047 () Bool)

(declare-fun c!10460 () Bool)

(assert (=> d!16047 (= c!10460 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31451))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31451)))) (_1!1079 lt!31200))))))

(declare-fun e!46896 () Option!137)

(assert (=> d!16047 (= (getValueByKey!131 (t!5044 (toList!732 lt!31451)) (_1!1079 lt!31200)) e!46896)))

(declare-fun b!71636 () Bool)

(assert (=> b!71636 (= e!46896 (Some!136 (_2!1079 (h!2086 (t!5044 (toList!732 lt!31451))))))))

(declare-fun b!71638 () Bool)

(declare-fun e!46897 () Option!137)

(assert (=> b!71638 (= e!46897 (getValueByKey!131 (t!5044 (t!5044 (toList!732 lt!31451))) (_1!1079 lt!31200)))))

(declare-fun b!71637 () Bool)

(assert (=> b!71637 (= e!46896 e!46897)))

(declare-fun c!10461 () Bool)

(assert (=> b!71637 (= c!10461 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31451))) (not (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31451)))) (_1!1079 lt!31200)))))))

(declare-fun b!71639 () Bool)

(assert (=> b!71639 (= e!46897 None!135)))

(assert (= (and d!16047 c!10460) b!71636))

(assert (= (and d!16047 (not c!10460)) b!71637))

(assert (= (and b!71637 c!10461) b!71638))

(assert (= (and b!71637 (not c!10461)) b!71639))

(declare-fun m!68889 () Bool)

(assert (=> b!71638 m!68889))

(assert (=> b!71358 d!16047))

(declare-fun d!16049 () Bool)

(assert (=> d!16049 (isDefined!85 (getValueByKey!131 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun lt!31822 () Unit!2006)

(assert (=> d!16049 (= lt!31822 (choose!405 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun e!46898 () Bool)

(assert (=> d!16049 e!46898))

(declare-fun res!38178 () Bool)

(assert (=> d!16049 (=> (not res!38178) (not e!46898))))

(assert (=> d!16049 (= res!38178 (isStrictlySorted!286 (toList!732 e!46520)))))

(assert (=> d!16049 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31822)))

(declare-fun b!71640 () Bool)

(assert (=> b!71640 (= e!46898 (containsKey!135 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!16049 res!38178) b!71640))

(assert (=> d!16049 m!67713))

(assert (=> d!16049 m!68665))

(assert (=> d!16049 m!68665))

(assert (=> d!16049 m!68667))

(assert (=> d!16049 m!67713))

(declare-fun m!68891 () Bool)

(assert (=> d!16049 m!68891))

(declare-fun m!68893 () Bool)

(assert (=> d!16049 m!68893))

(assert (=> b!71640 m!67713))

(assert (=> b!71640 m!68661))

(assert (=> b!71532 d!16049))

(declare-fun d!16051 () Bool)

(assert (=> d!16051 (= (isDefined!85 (getValueByKey!131 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) (not (isEmpty!319 (getValueByKey!131 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(declare-fun bs!3064 () Bool)

(assert (= bs!3064 d!16051))

(assert (=> bs!3064 m!68665))

(declare-fun m!68895 () Bool)

(assert (=> bs!3064 m!68895))

(assert (=> b!71532 d!16051))

(declare-fun d!16053 () Bool)

(declare-fun c!10462 () Bool)

(assert (=> d!16053 (= c!10462 (and ((_ is Cons!1500) (toList!732 e!46520)) (= (_1!1079 (h!2086 (toList!732 e!46520))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun e!46899 () Option!137)

(assert (=> d!16053 (= (getValueByKey!131 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!46899)))

(declare-fun b!71641 () Bool)

(assert (=> b!71641 (= e!46899 (Some!136 (_2!1079 (h!2086 (toList!732 e!46520)))))))

(declare-fun e!46900 () Option!137)

(declare-fun b!71643 () Bool)

(assert (=> b!71643 (= e!46900 (getValueByKey!131 (t!5044 (toList!732 e!46520)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71642 () Bool)

(assert (=> b!71642 (= e!46899 e!46900)))

(declare-fun c!10463 () Bool)

(assert (=> b!71642 (= c!10463 (and ((_ is Cons!1500) (toList!732 e!46520)) (not (= (_1!1079 (h!2086 (toList!732 e!46520))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(declare-fun b!71644 () Bool)

(assert (=> b!71644 (= e!46900 None!135)))

(assert (= (and d!16053 c!10462) b!71641))

(assert (= (and d!16053 (not c!10462)) b!71642))

(assert (= (and b!71642 c!10463) b!71643))

(assert (= (and b!71642 (not c!10463)) b!71644))

(assert (=> b!71643 m!67713))

(declare-fun m!68897 () Bool)

(assert (=> b!71643 m!68897))

(assert (=> b!71532 d!16053))

(declare-fun d!16055 () Bool)

(declare-fun res!38180 () Bool)

(declare-fun e!46901 () Bool)

(assert (=> d!16055 (=> (not res!38180) (not e!46901))))

(assert (=> d!16055 (= res!38180 (validMask!0 (mask!6149 (_2!1080 lt!31329))))))

(assert (=> d!16055 (= (simpleValid!49 (_2!1080 lt!31329)) e!46901)))

(declare-fun b!71648 () Bool)

(assert (=> b!71648 (= e!46901 (and (bvsge (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000000) (bvsle (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000011) (bvsge (_vacant!394 (_2!1080 lt!31329)) #b00000000000000000000000000000000)))))

(declare-fun b!71646 () Bool)

(declare-fun res!38181 () Bool)

(assert (=> b!71646 (=> (not res!38181) (not e!46901))))

(assert (=> b!71646 (= res!38181 (bvsge (size!2093 (_2!1080 lt!31329)) (_size!394 (_2!1080 lt!31329))))))

(declare-fun b!71645 () Bool)

(declare-fun res!38182 () Bool)

(assert (=> b!71645 (=> (not res!38182) (not e!46901))))

(assert (=> b!71645 (= res!38182 (and (= (size!2090 (_values!2175 (_2!1080 lt!31329))) (bvadd (mask!6149 (_2!1080 lt!31329)) #b00000000000000000000000000000001)) (= (size!2089 (_keys!3840 (_2!1080 lt!31329))) (size!2090 (_values!2175 (_2!1080 lt!31329)))) (bvsge (_size!394 (_2!1080 lt!31329)) #b00000000000000000000000000000000) (bvsle (_size!394 (_2!1080 lt!31329)) (bvadd (mask!6149 (_2!1080 lt!31329)) #b00000000000000000000000000000001))))))

(declare-fun b!71647 () Bool)

(declare-fun res!38179 () Bool)

(assert (=> b!71647 (=> (not res!38179) (not e!46901))))

(assert (=> b!71647 (= res!38179 (= (size!2093 (_2!1080 lt!31329)) (bvadd (_size!394 (_2!1080 lt!31329)) (bvsdiv (bvadd (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!16055 res!38180) b!71645))

(assert (= (and b!71645 res!38182) b!71646))

(assert (= (and b!71646 res!38181) b!71647))

(assert (= (and b!71647 res!38179) b!71648))

(declare-fun m!68899 () Bool)

(assert (=> d!16055 m!68899))

(declare-fun m!68901 () Bool)

(assert (=> b!71646 m!68901))

(assert (=> b!71647 m!68901))

(assert (=> d!15997 d!16055))

(declare-fun d!16057 () Bool)

(declare-fun e!46902 () Bool)

(assert (=> d!16057 e!46902))

(declare-fun res!38183 () Bool)

(assert (=> d!16057 (=> res!38183 e!46902)))

(declare-fun lt!31825 () Bool)

(assert (=> d!16057 (= res!38183 (not lt!31825))))

(declare-fun lt!31823 () Bool)

(assert (=> d!16057 (= lt!31825 lt!31823)))

(declare-fun lt!31824 () Unit!2006)

(declare-fun e!46903 () Unit!2006)

(assert (=> d!16057 (= lt!31824 e!46903)))

(declare-fun c!10464 () Bool)

(assert (=> d!16057 (= c!10464 lt!31823)))

(assert (=> d!16057 (= lt!31823 (containsKey!135 (toList!732 lt!31496) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16057 (= (contains!726 lt!31496 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31825)))

(declare-fun b!71649 () Bool)

(declare-fun lt!31826 () Unit!2006)

(assert (=> b!71649 (= e!46903 lt!31826)))

(assert (=> b!71649 (= lt!31826 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31496) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> b!71649 (isDefined!85 (getValueByKey!131 (toList!732 lt!31496) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71650 () Bool)

(declare-fun Unit!2038 () Unit!2006)

(assert (=> b!71650 (= e!46903 Unit!2038)))

(declare-fun b!71651 () Bool)

(assert (=> b!71651 (= e!46902 (isDefined!85 (getValueByKey!131 (toList!732 lt!31496) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16057 c!10464) b!71649))

(assert (= (and d!16057 (not c!10464)) b!71650))

(assert (= (and d!16057 (not res!38183)) b!71651))

(declare-fun m!68903 () Bool)

(assert (=> d!16057 m!68903))

(declare-fun m!68905 () Bool)

(assert (=> b!71649 m!68905))

(assert (=> b!71649 m!68151))

(assert (=> b!71649 m!68151))

(declare-fun m!68907 () Bool)

(assert (=> b!71649 m!68907))

(assert (=> b!71651 m!68151))

(assert (=> b!71651 m!68151))

(assert (=> b!71651 m!68907))

(assert (=> d!15859 d!16057))

(declare-fun d!16059 () Bool)

(declare-fun c!10465 () Bool)

(assert (=> d!16059 (= c!10465 (and ((_ is Cons!1500) lt!31495) (= (_1!1079 (h!2086 lt!31495)) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!46904 () Option!137)

(assert (=> d!16059 (= (getValueByKey!131 lt!31495 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!46904)))

(declare-fun b!71652 () Bool)

(assert (=> b!71652 (= e!46904 (Some!136 (_2!1079 (h!2086 lt!31495))))))

(declare-fun b!71654 () Bool)

(declare-fun e!46905 () Option!137)

(assert (=> b!71654 (= e!46905 (getValueByKey!131 (t!5044 lt!31495) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71653 () Bool)

(assert (=> b!71653 (= e!46904 e!46905)))

(declare-fun c!10466 () Bool)

(assert (=> b!71653 (= c!10466 (and ((_ is Cons!1500) lt!31495) (not (= (_1!1079 (h!2086 lt!31495)) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!71655 () Bool)

(assert (=> b!71655 (= e!46905 None!135)))

(assert (= (and d!16059 c!10465) b!71652))

(assert (= (and d!16059 (not c!10465)) b!71653))

(assert (= (and b!71653 c!10466) b!71654))

(assert (= (and b!71653 (not c!10466)) b!71655))

(declare-fun m!68909 () Bool)

(assert (=> b!71654 m!68909))

(assert (=> d!15859 d!16059))

(declare-fun d!16061 () Bool)

(assert (=> d!16061 (= (getValueByKey!131 lt!31495 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31827 () Unit!2006)

(assert (=> d!16061 (= lt!31827 (choose!407 lt!31495 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!46906 () Bool)

(assert (=> d!16061 e!46906))

(declare-fun res!38184 () Bool)

(assert (=> d!16061 (=> (not res!38184) (not e!46906))))

(assert (=> d!16061 (= res!38184 (isStrictlySorted!286 lt!31495))))

(assert (=> d!16061 (= (lemmaContainsTupThenGetReturnValue!50 lt!31495 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31827)))

(declare-fun b!71656 () Bool)

(declare-fun res!38185 () Bool)

(assert (=> b!71656 (=> (not res!38185) (not e!46906))))

(assert (=> b!71656 (= res!38185 (containsKey!135 lt!31495 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71657 () Bool)

(assert (=> b!71657 (= e!46906 (contains!728 lt!31495 (tuple2!2139 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16061 res!38184) b!71656))

(assert (= (and b!71656 res!38185) b!71657))

(assert (=> d!16061 m!68145))

(declare-fun m!68911 () Bool)

(assert (=> d!16061 m!68911))

(declare-fun m!68913 () Bool)

(assert (=> d!16061 m!68913))

(declare-fun m!68915 () Bool)

(assert (=> b!71656 m!68915))

(declare-fun m!68917 () Bool)

(assert (=> b!71657 m!68917))

(assert (=> d!15859 d!16061))

(declare-fun b!71658 () Bool)

(declare-fun e!46908 () List!1504)

(declare-fun call!6220 () List!1504)

(assert (=> b!71658 (= e!46908 call!6220)))

(declare-fun b!71659 () Bool)

(declare-fun res!38186 () Bool)

(declare-fun e!46907 () Bool)

(assert (=> b!71659 (=> (not res!38186) (not e!46907))))

(declare-fun lt!31828 () List!1504)

(assert (=> b!71659 (= res!38186 (containsKey!135 lt!31828 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71660 () Bool)

(declare-fun c!10468 () Bool)

(assert (=> b!71660 (= c!10468 (and ((_ is Cons!1500) (toList!732 call!6143)) (bvsgt (_1!1079 (h!2086 (toList!732 call!6143))) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!46910 () List!1504)

(declare-fun e!46909 () List!1504)

(assert (=> b!71660 (= e!46910 e!46909)))

(declare-fun b!71662 () Bool)

(declare-fun call!6221 () List!1504)

(assert (=> b!71662 (= e!46910 call!6221)))

(declare-fun b!71663 () Bool)

(declare-fun call!6219 () List!1504)

(assert (=> b!71663 (= e!46909 call!6219)))

(declare-fun b!71664 () Bool)

(declare-fun e!46911 () List!1504)

(assert (=> b!71664 (= e!46911 (insertStrictlySorted!52 (t!5044 (toList!732 call!6143)) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun bm!6216 () Bool)

(assert (=> bm!6216 (= call!6219 call!6221)))

(declare-fun bm!6217 () Bool)

(assert (=> bm!6217 (= call!6221 call!6220)))

(declare-fun c!10467 () Bool)

(declare-fun bm!6218 () Bool)

(assert (=> bm!6218 (= call!6220 ($colon$colon!64 e!46911 (ite c!10467 (h!2086 (toList!732 call!6143)) (tuple2!2139 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun c!10469 () Bool)

(assert (=> bm!6218 (= c!10469 c!10467)))

(declare-fun b!71665 () Bool)

(declare-fun c!10470 () Bool)

(assert (=> b!71665 (= e!46911 (ite c!10470 (t!5044 (toList!732 call!6143)) (ite c!10468 (Cons!1500 (h!2086 (toList!732 call!6143)) (t!5044 (toList!732 call!6143))) Nil!1501)))))

(declare-fun b!71661 () Bool)

(assert (=> b!71661 (= e!46909 call!6219)))

(declare-fun d!16063 () Bool)

(assert (=> d!16063 e!46907))

(declare-fun res!38187 () Bool)

(assert (=> d!16063 (=> (not res!38187) (not e!46907))))

(assert (=> d!16063 (= res!38187 (isStrictlySorted!286 lt!31828))))

(assert (=> d!16063 (= lt!31828 e!46908)))

(assert (=> d!16063 (= c!10467 (and ((_ is Cons!1500) (toList!732 call!6143)) (bvslt (_1!1079 (h!2086 (toList!732 call!6143))) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16063 (isStrictlySorted!286 (toList!732 call!6143))))

(assert (=> d!16063 (= (insertStrictlySorted!52 (toList!732 call!6143) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31828)))

(declare-fun b!71666 () Bool)

(assert (=> b!71666 (= e!46907 (contains!728 lt!31828 (tuple2!2139 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71667 () Bool)

(assert (=> b!71667 (= e!46908 e!46910)))

(assert (=> b!71667 (= c!10470 (and ((_ is Cons!1500) (toList!732 call!6143)) (= (_1!1079 (h!2086 (toList!732 call!6143))) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16063 c!10467) b!71658))

(assert (= (and d!16063 (not c!10467)) b!71667))

(assert (= (and b!71667 c!10470) b!71662))

(assert (= (and b!71667 (not c!10470)) b!71660))

(assert (= (and b!71660 c!10468) b!71661))

(assert (= (and b!71660 (not c!10468)) b!71663))

(assert (= (or b!71661 b!71663) bm!6216))

(assert (= (or b!71662 bm!6216) bm!6217))

(assert (= (or b!71658 bm!6217) bm!6218))

(assert (= (and bm!6218 c!10469) b!71664))

(assert (= (and bm!6218 (not c!10469)) b!71665))

(assert (= (and d!16063 res!38187) b!71659))

(assert (= (and b!71659 res!38186) b!71666))

(declare-fun m!68919 () Bool)

(assert (=> bm!6218 m!68919))

(declare-fun m!68921 () Bool)

(assert (=> b!71664 m!68921))

(declare-fun m!68923 () Bool)

(assert (=> b!71659 m!68923))

(declare-fun m!68925 () Bool)

(assert (=> b!71666 m!68925))

(declare-fun m!68927 () Bool)

(assert (=> d!16063 m!68927))

(declare-fun m!68929 () Bool)

(assert (=> d!16063 m!68929))

(assert (=> d!15859 d!16063))

(declare-fun d!16065 () Bool)

(declare-fun res!38188 () Bool)

(declare-fun e!46912 () Bool)

(assert (=> d!16065 (=> res!38188 e!46912)))

(assert (=> d!16065 (= res!38188 (and ((_ is Cons!1500) lt!31679) (= (_1!1079 (h!2086 lt!31679)) (_1!1079 lt!31205))))))

(assert (=> d!16065 (= (containsKey!135 lt!31679 (_1!1079 lt!31205)) e!46912)))

(declare-fun b!71668 () Bool)

(declare-fun e!46913 () Bool)

(assert (=> b!71668 (= e!46912 e!46913)))

(declare-fun res!38189 () Bool)

(assert (=> b!71668 (=> (not res!38189) (not e!46913))))

(assert (=> b!71668 (= res!38189 (and (or (not ((_ is Cons!1500) lt!31679)) (bvsle (_1!1079 (h!2086 lt!31679)) (_1!1079 lt!31205))) ((_ is Cons!1500) lt!31679) (bvslt (_1!1079 (h!2086 lt!31679)) (_1!1079 lt!31205))))))

(declare-fun b!71669 () Bool)

(assert (=> b!71669 (= e!46913 (containsKey!135 (t!5044 lt!31679) (_1!1079 lt!31205)))))

(assert (= (and d!16065 (not res!38188)) b!71668))

(assert (= (and b!71668 res!38189) b!71669))

(declare-fun m!68931 () Bool)

(assert (=> b!71669 m!68931))

(assert (=> b!71434 d!16065))

(declare-fun b!71670 () Bool)

(declare-fun e!46914 () (_ BitVec 32))

(declare-fun call!6222 () (_ BitVec 32))

(assert (=> b!71670 (= e!46914 call!6222)))

(declare-fun b!71671 () Bool)

(declare-fun e!46915 () (_ BitVec 32))

(assert (=> b!71671 (= e!46915 #b00000000000000000000000000000000)))

(declare-fun bm!6219 () Bool)

(assert (=> bm!6219 (= call!6222 (arrayCountValidKeys!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71672 () Bool)

(assert (=> b!71672 (= e!46915 e!46914)))

(declare-fun c!10472 () Bool)

(assert (=> b!71672 (= c!10472 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!71673 () Bool)

(assert (=> b!71673 (= e!46914 (bvadd #b00000000000000000000000000000001 call!6222))))

(declare-fun d!16067 () Bool)

(declare-fun lt!31829 () (_ BitVec 32))

(assert (=> d!16067 (and (bvsge lt!31829 #b00000000000000000000000000000000) (bvsle lt!31829 (bvsub (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!16067 (= lt!31829 e!46915)))

(declare-fun c!10471 () Bool)

(assert (=> d!16067 (= c!10471 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!16067 (and (bvsle #b00000000000000000000000000000000 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!16067 (= (arrayCountValidKeys!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))) lt!31829)))

(assert (= (and d!16067 c!10471) b!71671))

(assert (= (and d!16067 (not c!10471)) b!71672))

(assert (= (and b!71672 c!10472) b!71673))

(assert (= (and b!71672 (not c!10472)) b!71670))

(assert (= (or b!71673 b!71670) bm!6219))

(declare-fun m!68933 () Bool)

(assert (=> bm!6219 m!68933))

(declare-fun m!68935 () Bool)

(assert (=> b!71672 m!68935))

(assert (=> b!71672 m!68935))

(declare-fun m!68937 () Bool)

(assert (=> b!71672 m!68937))

(assert (=> b!71497 d!16067))

(declare-fun d!16069 () Bool)

(declare-fun c!10473 () Bool)

(assert (=> d!16069 (= c!10473 (and ((_ is Cons!1500) (toList!732 lt!31673)) (= (_1!1079 (h!2086 (toList!732 lt!31673))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!46916 () Option!137)

(assert (=> d!16069 (= (getValueByKey!131 (toList!732 lt!31673) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!46916)))

(declare-fun b!71674 () Bool)

(assert (=> b!71674 (= e!46916 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31673)))))))

(declare-fun b!71676 () Bool)

(declare-fun e!46917 () Option!137)

(assert (=> b!71676 (= e!46917 (getValueByKey!131 (t!5044 (toList!732 lt!31673)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!71675 () Bool)

(assert (=> b!71675 (= e!46916 e!46917)))

(declare-fun c!10474 () Bool)

(assert (=> b!71675 (= c!10474 (and ((_ is Cons!1500) (toList!732 lt!31673)) (not (= (_1!1079 (h!2086 (toList!732 lt!31673))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!71677 () Bool)

(assert (=> b!71677 (= e!46917 None!135)))

(assert (= (and d!16069 c!10473) b!71674))

(assert (= (and d!16069 (not c!10473)) b!71675))

(assert (= (and b!71675 c!10474) b!71676))

(assert (= (and b!71675 (not c!10474)) b!71677))

(declare-fun m!68939 () Bool)

(assert (=> b!71676 m!68939))

(assert (=> b!71418 d!16069))

(declare-fun d!16071 () Bool)

(declare-fun c!10475 () Bool)

(assert (=> d!16071 (= c!10475 (and ((_ is Cons!1500) (toList!732 lt!31621)) (= (_1!1079 (h!2086 (toList!732 lt!31621))) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!46918 () Option!137)

(assert (=> d!16071 (= (getValueByKey!131 (toList!732 lt!31621) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!46918)))

(declare-fun b!71678 () Bool)

(assert (=> b!71678 (= e!46918 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31621)))))))

(declare-fun b!71680 () Bool)

(declare-fun e!46919 () Option!137)

(assert (=> b!71680 (= e!46919 (getValueByKey!131 (t!5044 (toList!732 lt!31621)) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71679 () Bool)

(assert (=> b!71679 (= e!46918 e!46919)))

(declare-fun c!10476 () Bool)

(assert (=> b!71679 (= c!10476 (and ((_ is Cons!1500) (toList!732 lt!31621)) (not (= (_1!1079 (h!2086 (toList!732 lt!31621))) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!71681 () Bool)

(assert (=> b!71681 (= e!46919 None!135)))

(assert (= (and d!16071 c!10475) b!71678))

(assert (= (and d!16071 (not c!10475)) b!71679))

(assert (= (and b!71679 c!10476) b!71680))

(assert (= (and b!71679 (not c!10476)) b!71681))

(declare-fun m!68941 () Bool)

(assert (=> b!71680 m!68941))

(assert (=> b!71329 d!16071))

(declare-fun d!16073 () Bool)

(assert (=> d!16073 (= (validMask!0 (mask!6149 newMap!16)) (and (or (= (mask!6149 newMap!16) #b00000000000000000000000000000111) (= (mask!6149 newMap!16) #b00000000000000000000000000001111) (= (mask!6149 newMap!16) #b00000000000000000000000000011111) (= (mask!6149 newMap!16) #b00000000000000000000000000111111) (= (mask!6149 newMap!16) #b00000000000000000000000001111111) (= (mask!6149 newMap!16) #b00000000000000000000000011111111) (= (mask!6149 newMap!16) #b00000000000000000000000111111111) (= (mask!6149 newMap!16) #b00000000000000000000001111111111) (= (mask!6149 newMap!16) #b00000000000000000000011111111111) (= (mask!6149 newMap!16) #b00000000000000000000111111111111) (= (mask!6149 newMap!16) #b00000000000000000001111111111111) (= (mask!6149 newMap!16) #b00000000000000000011111111111111) (= (mask!6149 newMap!16) #b00000000000000000111111111111111) (= (mask!6149 newMap!16) #b00000000000000001111111111111111) (= (mask!6149 newMap!16) #b00000000000000011111111111111111) (= (mask!6149 newMap!16) #b00000000000000111111111111111111) (= (mask!6149 newMap!16) #b00000000000001111111111111111111) (= (mask!6149 newMap!16) #b00000000000011111111111111111111) (= (mask!6149 newMap!16) #b00000000000111111111111111111111) (= (mask!6149 newMap!16) #b00000000001111111111111111111111) (= (mask!6149 newMap!16) #b00000000011111111111111111111111) (= (mask!6149 newMap!16) #b00000000111111111111111111111111) (= (mask!6149 newMap!16) #b00000001111111111111111111111111) (= (mask!6149 newMap!16) #b00000011111111111111111111111111) (= (mask!6149 newMap!16) #b00000111111111111111111111111111) (= (mask!6149 newMap!16) #b00001111111111111111111111111111) (= (mask!6149 newMap!16) #b00011111111111111111111111111111) (= (mask!6149 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6149 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!15999 d!16073))

(declare-fun d!16075 () Bool)

(assert (=> d!16075 (= (apply!74 lt!31786 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31786) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3065 () Bool)

(assert (= bs!3065 d!16075))

(declare-fun m!68943 () Bool)

(assert (=> bs!3065 m!68943))

(assert (=> bs!3065 m!68943))

(declare-fun m!68945 () Bool)

(assert (=> bs!3065 m!68945))

(assert (=> b!71579 d!16075))

(declare-fun lt!31830 () Bool)

(declare-fun d!16077 () Bool)

(assert (=> d!16077 (= lt!31830 (select (content!74 (toList!732 lt!31729)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(declare-fun e!46921 () Bool)

(assert (=> d!16077 (= lt!31830 e!46921)))

(declare-fun res!38191 () Bool)

(assert (=> d!16077 (=> (not res!38191) (not e!46921))))

(assert (=> d!16077 (= res!38191 ((_ is Cons!1500) (toList!732 lt!31729)))))

(assert (=> d!16077 (= (contains!728 (toList!732 lt!31729) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!31830)))

(declare-fun b!71682 () Bool)

(declare-fun e!46920 () Bool)

(assert (=> b!71682 (= e!46921 e!46920)))

(declare-fun res!38190 () Bool)

(assert (=> b!71682 (=> res!38190 e!46920)))

(assert (=> b!71682 (= res!38190 (= (h!2086 (toList!732 lt!31729)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(declare-fun b!71683 () Bool)

(assert (=> b!71683 (= e!46920 (contains!728 (t!5044 (toList!732 lt!31729)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!16077 res!38191) b!71682))

(assert (= (and b!71682 (not res!38190)) b!71683))

(declare-fun m!68947 () Bool)

(assert (=> d!16077 m!68947))

(declare-fun m!68949 () Bool)

(assert (=> d!16077 m!68949))

(declare-fun m!68951 () Bool)

(assert (=> b!71683 m!68951))

(assert (=> b!71505 d!16077))

(declare-fun d!16079 () Bool)

(assert (=> d!16079 (= (apply!74 lt!31759 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31759) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3066 () Bool)

(assert (= bs!3066 d!16079))

(declare-fun m!68953 () Bool)

(assert (=> bs!3066 m!68953))

(assert (=> bs!3066 m!68953))

(declare-fun m!68955 () Bool)

(assert (=> bs!3066 m!68955))

(assert (=> b!71559 d!16079))

(declare-fun d!16081 () Bool)

(assert (=> d!16081 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443))))

(declare-fun lt!31831 () Unit!2006)

(assert (=> d!16081 (= lt!31831 (choose!405 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443))))

(declare-fun e!46922 () Bool)

(assert (=> d!16081 e!46922))

(declare-fun res!38192 () Bool)

(assert (=> d!16081 (=> (not res!38192) (not e!46922))))

(assert (=> d!16081 (= res!38192 (isStrictlySorted!286 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))))))

(assert (=> d!16081 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443) lt!31831)))

(declare-fun b!71684 () Bool)

(assert (=> b!71684 (= e!46922 (containsKey!135 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443))))

(assert (= (and d!16081 res!38192) b!71684))

(assert (=> d!16081 m!68423))

(assert (=> d!16081 m!68423))

(assert (=> d!16081 m!68425))

(declare-fun m!68957 () Bool)

(assert (=> d!16081 m!68957))

(declare-fun m!68959 () Bool)

(assert (=> d!16081 m!68959))

(assert (=> b!71684 m!68419))

(assert (=> b!71409 d!16081))

(declare-fun d!16083 () Bool)

(assert (=> d!16083 (= (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443)) (not (isEmpty!319 (getValueByKey!131 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443))))))

(declare-fun bs!3067 () Bool)

(assert (= bs!3067 d!16083))

(assert (=> bs!3067 m!68423))

(declare-fun m!68961 () Bool)

(assert (=> bs!3067 m!68961))

(assert (=> b!71409 d!16083))

(declare-fun c!10477 () Bool)

(declare-fun d!16085 () Bool)

(assert (=> d!16085 (= c!10477 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))))) lt!31443)))))

(declare-fun e!46923 () Option!137)

(assert (=> d!16085 (= (getValueByKey!131 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))) lt!31443) e!46923)))

(declare-fun b!71685 () Bool)

(assert (=> b!71685 (= e!46923 (Some!136 (_2!1079 (h!2086 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))))))))

(declare-fun e!46924 () Option!137)

(declare-fun b!71687 () Bool)

(assert (=> b!71687 (= e!46924 (getValueByKey!131 (t!5044 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))) lt!31443))))

(declare-fun b!71686 () Bool)

(assert (=> b!71686 (= e!46923 e!46924)))

(declare-fun c!10478 () Bool)

(assert (=> b!71686 (= c!10478 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)))) (not (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441))))) lt!31443))))))

(declare-fun b!71688 () Bool)

(assert (=> b!71688 (= e!46924 None!135)))

(assert (= (and d!16085 c!10477) b!71685))

(assert (= (and d!16085 (not c!10477)) b!71686))

(assert (= (and b!71686 c!10478) b!71687))

(assert (= (and b!71686 (not c!10478)) b!71688))

(declare-fun m!68963 () Bool)

(assert (=> b!71687 m!68963))

(assert (=> b!71409 d!16085))

(declare-fun d!16087 () Bool)

(declare-fun res!38193 () Bool)

(declare-fun e!46925 () Bool)

(assert (=> d!16087 (=> res!38193 e!46925)))

(assert (=> d!16087 (= res!38193 (and ((_ is Cons!1500) (toList!732 call!6111)) (= (_1!1079 (h!2086 (toList!732 call!6111))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (=> d!16087 (= (containsKey!135 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!46925)))

(declare-fun b!71689 () Bool)

(declare-fun e!46926 () Bool)

(assert (=> b!71689 (= e!46925 e!46926)))

(declare-fun res!38194 () Bool)

(assert (=> b!71689 (=> (not res!38194) (not e!46926))))

(assert (=> b!71689 (= res!38194 (and (or (not ((_ is Cons!1500) (toList!732 call!6111))) (bvsle (_1!1079 (h!2086 (toList!732 call!6111))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) ((_ is Cons!1500) (toList!732 call!6111)) (bvslt (_1!1079 (h!2086 (toList!732 call!6111))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun b!71690 () Bool)

(assert (=> b!71690 (= e!46926 (containsKey!135 (t!5044 (toList!732 call!6111)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!16087 (not res!38193)) b!71689))

(assert (= (and b!71689 res!38194) b!71690))

(assert (=> b!71690 m!67713))

(declare-fun m!68965 () Bool)

(assert (=> b!71690 m!68965))

(assert (=> d!16023 d!16087))

(declare-fun d!16089 () Bool)

(declare-fun res!38195 () Bool)

(declare-fun e!46927 () Bool)

(assert (=> d!16089 (=> res!38195 e!46927)))

(assert (=> d!16089 (= res!38195 (and ((_ is Cons!1500) (toList!732 lt!31396)) (= (_1!1079 (h!2086 (toList!732 lt!31396))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16089 (= (containsKey!135 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000) e!46927)))

(declare-fun b!71691 () Bool)

(declare-fun e!46928 () Bool)

(assert (=> b!71691 (= e!46927 e!46928)))

(declare-fun res!38196 () Bool)

(assert (=> b!71691 (=> (not res!38196) (not e!46928))))

(assert (=> b!71691 (= res!38196 (and (or (not ((_ is Cons!1500) (toList!732 lt!31396))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31396))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!732 lt!31396)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31396))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71692 () Bool)

(assert (=> b!71692 (= e!46928 (containsKey!135 (t!5044 (toList!732 lt!31396)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16089 (not res!38195)) b!71691))

(assert (= (and b!71691 res!38196) b!71692))

(declare-fun m!68967 () Bool)

(assert (=> b!71692 m!68967))

(assert (=> d!16005 d!16089))

(declare-fun b!71693 () Bool)

(declare-fun e!46933 () ListLongMap!1433)

(declare-fun call!6223 () ListLongMap!1433)

(assert (=> b!71693 (= e!46933 call!6223)))

(declare-fun b!71694 () Bool)

(declare-fun e!46935 () Bool)

(declare-fun e!46930 () Bool)

(assert (=> b!71694 (= e!46935 e!46930)))

(assert (=> b!71694 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun lt!31833 () ListLongMap!1433)

(declare-fun res!38198 () Bool)

(assert (=> b!71694 (= res!38198 (contains!726 lt!31833 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71694 (=> (not res!38198) (not e!46930))))

(declare-fun b!71696 () Bool)

(assert (=> b!71696 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> b!71696 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> b!71696 (= e!46930 (= (apply!74 lt!31833 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71697 () Bool)

(declare-fun e!46929 () Bool)

(assert (=> b!71697 (= e!46929 (= lt!31833 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun bm!6220 () Bool)

(assert (=> bm!6220 (= call!6223 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!71698 () Bool)

(declare-fun e!46934 () ListLongMap!1433)

(assert (=> b!71698 (= e!46934 (ListLongMap!1434 Nil!1501))))

(declare-fun b!71699 () Bool)

(assert (=> b!71699 (= e!46929 (isEmpty!318 lt!31833))))

(declare-fun b!71700 () Bool)

(assert (=> b!71700 (= e!46935 e!46929)))

(declare-fun c!10480 () Bool)

(assert (=> b!71700 (= c!10480 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71701 () Bool)

(declare-fun e!46932 () Bool)

(assert (=> b!71701 (= e!46932 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71701 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!71702 () Bool)

(declare-fun lt!31838 () Unit!2006)

(declare-fun lt!31836 () Unit!2006)

(assert (=> b!71702 (= lt!31838 lt!31836)))

(declare-fun lt!31832 () V!2939)

(declare-fun lt!31837 () ListLongMap!1433)

(declare-fun lt!31834 () (_ BitVec 64))

(declare-fun lt!31835 () (_ BitVec 64))

(assert (=> b!71702 (not (contains!726 (+!95 lt!31837 (tuple2!2139 lt!31835 lt!31832)) lt!31834))))

(assert (=> b!71702 (= lt!31836 (addStillNotContains!25 lt!31837 lt!31835 lt!31832 lt!31834))))

(assert (=> b!71702 (= lt!31834 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71702 (= lt!31832 (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71702 (= lt!31835 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!71702 (= lt!31837 call!6223)))

(assert (=> b!71702 (= e!46933 (+!95 call!6223 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71703 () Bool)

(assert (=> b!71703 (= e!46934 e!46933)))

(declare-fun c!10482 () Bool)

(assert (=> b!71703 (= c!10482 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!71704 () Bool)

(declare-fun e!46931 () Bool)

(assert (=> b!71704 (= e!46931 e!46935)))

(declare-fun c!10481 () Bool)

(assert (=> b!71704 (= c!10481 e!46932)))

(declare-fun res!38197 () Bool)

(assert (=> b!71704 (=> (not res!38197) (not e!46932))))

(assert (=> b!71704 (= res!38197 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71695 () Bool)

(declare-fun res!38200 () Bool)

(assert (=> b!71695 (=> (not res!38200) (not e!46931))))

(assert (=> b!71695 (= res!38200 (not (contains!726 lt!31833 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!16091 () Bool)

(assert (=> d!16091 e!46931))

(declare-fun res!38199 () Bool)

(assert (=> d!16091 (=> (not res!38199) (not e!46931))))

(assert (=> d!16091 (= res!38199 (not (contains!726 lt!31833 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16091 (= lt!31833 e!46934)))

(declare-fun c!10479 () Bool)

(assert (=> d!16091 (= c!10479 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!16091 (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992))))))

(assert (=> d!16091 (= (getCurrentListMapNoExtraKeys!59 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (_values!2175 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992))) (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) (minValue!2096 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992)))) lt!31833)))

(assert (= (and d!16091 c!10479) b!71698))

(assert (= (and d!16091 (not c!10479)) b!71703))

(assert (= (and b!71703 c!10482) b!71702))

(assert (= (and b!71703 (not c!10482)) b!71693))

(assert (= (or b!71702 b!71693) bm!6220))

(assert (= (and d!16091 res!38199) b!71695))

(assert (= (and b!71695 res!38200) b!71704))

(assert (= (and b!71704 res!38197) b!71701))

(assert (= (and b!71704 c!10481) b!71694))

(assert (= (and b!71704 (not c!10481)) b!71700))

(assert (= (and b!71694 res!38198) b!71696))

(assert (= (and b!71700 c!10480) b!71697))

(assert (= (and b!71700 (not c!10480)) b!71699))

(declare-fun b_lambda!3225 () Bool)

(assert (=> (not b_lambda!3225) (not b!71696)))

(assert (=> b!71696 t!5040))

(declare-fun b_and!4405 () Bool)

(assert (= b_and!4401 (and (=> t!5040 result!2655) b_and!4405)))

(assert (=> b!71696 t!5042))

(declare-fun b_and!4407 () Bool)

(assert (= b_and!4403 (and (=> t!5042 result!2659) b_and!4407)))

(declare-fun b_lambda!3227 () Bool)

(assert (=> (not b_lambda!3227) (not b!71702)))

(assert (=> b!71702 t!5040))

(declare-fun b_and!4409 () Bool)

(assert (= b_and!4405 (and (=> t!5040 result!2655) b_and!4409)))

(assert (=> b!71702 t!5042))

(declare-fun b_and!4411 () Bool)

(assert (= b_and!4407 (and (=> t!5042 result!2659) b_and!4411)))

(declare-fun m!68969 () Bool)

(assert (=> b!71697 m!68969))

(declare-fun m!68971 () Bool)

(assert (=> b!71703 m!68971))

(assert (=> b!71703 m!68971))

(declare-fun m!68973 () Bool)

(assert (=> b!71703 m!68973))

(assert (=> b!71696 m!68971))

(assert (=> b!71696 m!67717))

(assert (=> b!71696 m!68971))

(declare-fun m!68975 () Bool)

(assert (=> b!71696 m!68975))

(declare-fun m!68977 () Bool)

(assert (=> b!71696 m!68977))

(assert (=> b!71696 m!67717))

(declare-fun m!68979 () Bool)

(assert (=> b!71696 m!68979))

(assert (=> b!71696 m!68977))

(declare-fun m!68981 () Bool)

(assert (=> d!16091 m!68981))

(assert (=> d!16091 m!67739))

(assert (=> b!71694 m!68971))

(assert (=> b!71694 m!68971))

(declare-fun m!68983 () Bool)

(assert (=> b!71694 m!68983))

(assert (=> b!71701 m!68971))

(assert (=> b!71701 m!68971))

(assert (=> b!71701 m!68973))

(assert (=> bm!6220 m!68969))

(declare-fun m!68985 () Bool)

(assert (=> b!71695 m!68985))

(declare-fun m!68987 () Bool)

(assert (=> b!71699 m!68987))

(assert (=> b!71702 m!68971))

(assert (=> b!71702 m!67717))

(declare-fun m!68989 () Bool)

(assert (=> b!71702 m!68989))

(declare-fun m!68991 () Bool)

(assert (=> b!71702 m!68991))

(assert (=> b!71702 m!68977))

(assert (=> b!71702 m!67717))

(assert (=> b!71702 m!68979))

(assert (=> b!71702 m!68977))

(declare-fun m!68993 () Bool)

(assert (=> b!71702 m!68993))

(assert (=> b!71702 m!68989))

(declare-fun m!68995 () Bool)

(assert (=> b!71702 m!68995))

(assert (=> bm!6153 d!16091))

(assert (=> b!71576 d!16045))

(declare-fun d!16093 () Bool)

(declare-fun res!38201 () Bool)

(declare-fun e!46936 () Bool)

(assert (=> d!16093 (=> res!38201 e!46936)))

(assert (=> d!16093 (= res!38201 (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16093 (= (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!46936)))

(declare-fun b!71705 () Bool)

(declare-fun e!46937 () Bool)

(assert (=> b!71705 (= e!46936 e!46937)))

(declare-fun res!38202 () Bool)

(assert (=> b!71705 (=> (not res!38202) (not e!46937))))

(assert (=> b!71705 (= res!38202 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71706 () Bool)

(assert (=> b!71706 (= e!46937 (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16093 (not res!38201)) b!71705))

(assert (= (and b!71705 res!38202) b!71706))

(assert (=> d!16093 m!68971))

(assert (=> b!71706 m!67713))

(declare-fun m!68997 () Bool)

(assert (=> b!71706 m!68997))

(assert (=> b!71259 d!16093))

(declare-fun d!16095 () Bool)

(assert (=> d!16095 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!31839 () Unit!2006)

(assert (=> d!16095 (= lt!31839 (choose!405 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46938 () Bool)

(assert (=> d!16095 e!46938))

(declare-fun res!38203 () Bool)

(assert (=> d!16095 (=> (not res!38203) (not e!46938))))

(assert (=> d!16095 (= res!38203 (isStrictlySorted!286 (toList!732 lt!31442)))))

(assert (=> d!16095 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000) lt!31839)))

(declare-fun b!71707 () Bool)

(assert (=> b!71707 (= e!46938 (containsKey!135 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16095 res!38203) b!71707))

(assert (=> d!16095 m!68641))

(assert (=> d!16095 m!68641))

(assert (=> d!16095 m!68643))

(declare-fun m!68999 () Bool)

(assert (=> d!16095 m!68999))

(declare-fun m!69001 () Bool)

(assert (=> d!16095 m!69001))

(assert (=> b!71707 m!68637))

(assert (=> b!71508 d!16095))

(declare-fun d!16097 () Bool)

(assert (=> d!16097 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3068 () Bool)

(assert (= bs!3068 d!16097))

(assert (=> bs!3068 m!68641))

(declare-fun m!69003 () Bool)

(assert (=> bs!3068 m!69003))

(assert (=> b!71508 d!16097))

(declare-fun d!16099 () Bool)

(declare-fun c!10483 () Bool)

(assert (=> d!16099 (= c!10483 (and ((_ is Cons!1500) (toList!732 lt!31442)) (= (_1!1079 (h!2086 (toList!732 lt!31442))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!46939 () Option!137)

(assert (=> d!16099 (= (getValueByKey!131 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000) e!46939)))

(declare-fun b!71708 () Bool)

(assert (=> b!71708 (= e!46939 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31442)))))))

(declare-fun b!71710 () Bool)

(declare-fun e!46940 () Option!137)

(assert (=> b!71710 (= e!46940 (getValueByKey!131 (t!5044 (toList!732 lt!31442)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71709 () Bool)

(assert (=> b!71709 (= e!46939 e!46940)))

(declare-fun c!10484 () Bool)

(assert (=> b!71709 (= c!10484 (and ((_ is Cons!1500) (toList!732 lt!31442)) (not (= (_1!1079 (h!2086 (toList!732 lt!31442))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71711 () Bool)

(assert (=> b!71711 (= e!46940 None!135)))

(assert (= (and d!16099 c!10483) b!71708))

(assert (= (and d!16099 (not c!10483)) b!71709))

(assert (= (and b!71709 c!10484) b!71710))

(assert (= (and b!71709 (not c!10484)) b!71711))

(declare-fun m!69005 () Bool)

(assert (=> b!71710 m!69005))

(assert (=> b!71508 d!16099))

(declare-fun d!16101 () Bool)

(declare-fun e!46941 () Bool)

(assert (=> d!16101 e!46941))

(declare-fun res!38205 () Bool)

(assert (=> d!16101 (=> (not res!38205) (not e!46941))))

(declare-fun lt!31843 () ListLongMap!1433)

(assert (=> d!16101 (= res!38205 (contains!726 lt!31843 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun lt!31842 () List!1504)

(assert (=> d!16101 (= lt!31843 (ListLongMap!1434 lt!31842))))

(declare-fun lt!31841 () Unit!2006)

(declare-fun lt!31840 () Unit!2006)

(assert (=> d!16101 (= lt!31841 lt!31840)))

(assert (=> d!16101 (= (getValueByKey!131 lt!31842 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16101 (= lt!31840 (lemmaContainsTupThenGetReturnValue!50 lt!31842 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16101 (= lt!31842 (insertStrictlySorted!52 (toList!732 call!6204) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16101 (= (+!95 call!6204 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) lt!31843)))

(declare-fun b!71712 () Bool)

(declare-fun res!38204 () Bool)

(assert (=> b!71712 (=> (not res!38204) (not e!46941))))

(assert (=> b!71712 (= res!38204 (= (getValueByKey!131 (toList!732 lt!31843) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun b!71713 () Bool)

(assert (=> b!71713 (= e!46941 (contains!728 (toList!732 lt!31843) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(assert (= (and d!16101 res!38205) b!71712))

(assert (= (and b!71712 res!38204) b!71713))

(declare-fun m!69007 () Bool)

(assert (=> d!16101 m!69007))

(declare-fun m!69009 () Bool)

(assert (=> d!16101 m!69009))

(declare-fun m!69011 () Bool)

(assert (=> d!16101 m!69011))

(declare-fun m!69013 () Bool)

(assert (=> d!16101 m!69013))

(declare-fun m!69015 () Bool)

(assert (=> b!71712 m!69015))

(declare-fun m!69017 () Bool)

(assert (=> b!71713 m!69017))

(assert (=> b!71541 d!16101))

(declare-fun d!16103 () Bool)

(assert (=> d!16103 (contains!726 (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))))

(assert (=> d!16103 true))

(declare-fun _$16!93 () Unit!2006)

(assert (=> d!16103 (= (choose!408 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (defaultEntry!2192 newMap!16)) _$16!93)))

(declare-fun bs!3069 () Bool)

(assert (= bs!3069 d!16103))

(assert (=> bs!3069 m!68255))

(assert (=> bs!3069 m!67903))

(assert (=> bs!3069 m!68255))

(assert (=> bs!3069 m!67903))

(assert (=> bs!3069 m!68257))

(assert (=> d!15879 d!16103))

(assert (=> d!15879 d!16073))

(assert (=> d!15825 d!15827))

(assert (=> d!15825 d!15829))

(declare-fun d!16105 () Bool)

(assert (=> d!16105 (isDefined!85 (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16105 true))

(declare-fun _$12!320 () Unit!2006)

(assert (=> d!16105 (= (choose!405 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) _$12!320)))

(declare-fun bs!3070 () Bool)

(assert (= bs!3070 d!16105))

(assert (=> bs!3070 m!67713))

(assert (=> bs!3070 m!67857))

(assert (=> bs!3070 m!67857))

(assert (=> bs!3070 m!67859))

(assert (=> d!15825 d!16105))

(declare-fun d!16107 () Bool)

(declare-fun res!38206 () Bool)

(declare-fun e!46942 () Bool)

(assert (=> d!16107 (=> res!38206 e!46942)))

(assert (=> d!16107 (= res!38206 (or ((_ is Nil!1501) (toList!732 lt!31199)) ((_ is Nil!1501) (t!5044 (toList!732 lt!31199)))))))

(assert (=> d!16107 (= (isStrictlySorted!286 (toList!732 lt!31199)) e!46942)))

(declare-fun b!71714 () Bool)

(declare-fun e!46943 () Bool)

(assert (=> b!71714 (= e!46942 e!46943)))

(declare-fun res!38207 () Bool)

(assert (=> b!71714 (=> (not res!38207) (not e!46943))))

(assert (=> b!71714 (= res!38207 (bvslt (_1!1079 (h!2086 (toList!732 lt!31199))) (_1!1079 (h!2086 (t!5044 (toList!732 lt!31199))))))))

(declare-fun b!71715 () Bool)

(assert (=> b!71715 (= e!46943 (isStrictlySorted!286 (t!5044 (toList!732 lt!31199))))))

(assert (= (and d!16107 (not res!38206)) b!71714))

(assert (= (and b!71714 res!38207) b!71715))

(declare-fun m!69019 () Bool)

(assert (=> b!71715 m!69019))

(assert (=> d!15825 d!16107))

(assert (=> d!15949 d!15947))

(declare-fun d!16109 () Bool)

(assert (=> d!16109 (= (getValueByKey!131 lt!31457 (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205)))))

(assert (=> d!16109 true))

(declare-fun _$22!379 () Unit!2006)

(assert (=> d!16109 (= (choose!407 lt!31457 (_1!1079 lt!31205) (_2!1079 lt!31205)) _$22!379)))

(declare-fun bs!3071 () Bool)

(assert (= bs!3071 d!16109))

(assert (=> bs!3071 m!68025))

(assert (=> d!15949 d!16109))

(declare-fun d!16111 () Bool)

(declare-fun res!38208 () Bool)

(declare-fun e!46944 () Bool)

(assert (=> d!16111 (=> res!38208 e!46944)))

(assert (=> d!16111 (= res!38208 (or ((_ is Nil!1501) lt!31457) ((_ is Nil!1501) (t!5044 lt!31457))))))

(assert (=> d!16111 (= (isStrictlySorted!286 lt!31457) e!46944)))

(declare-fun b!71716 () Bool)

(declare-fun e!46945 () Bool)

(assert (=> b!71716 (= e!46944 e!46945)))

(declare-fun res!38209 () Bool)

(assert (=> b!71716 (=> (not res!38209) (not e!46945))))

(assert (=> b!71716 (= res!38209 (bvslt (_1!1079 (h!2086 lt!31457)) (_1!1079 (h!2086 (t!5044 lt!31457)))))))

(declare-fun b!71717 () Bool)

(assert (=> b!71717 (= e!46945 (isStrictlySorted!286 (t!5044 lt!31457)))))

(assert (= (and d!16111 (not res!38208)) b!71716))

(assert (= (and b!71716 res!38209) b!71717))

(declare-fun m!69021 () Bool)

(assert (=> b!71717 m!69021))

(assert (=> d!15949 d!16111))

(declare-fun d!16113 () Bool)

(declare-fun res!38210 () Bool)

(declare-fun e!46946 () Bool)

(assert (=> d!16113 (=> res!38210 e!46946)))

(assert (=> d!16113 (= res!38210 (and ((_ is Cons!1500) lt!31425) (= (_1!1079 (h!2086 lt!31425)) (_1!1079 lt!31205))))))

(assert (=> d!16113 (= (containsKey!135 lt!31425 (_1!1079 lt!31205)) e!46946)))

(declare-fun b!71718 () Bool)

(declare-fun e!46947 () Bool)

(assert (=> b!71718 (= e!46946 e!46947)))

(declare-fun res!38211 () Bool)

(assert (=> b!71718 (=> (not res!38211) (not e!46947))))

(assert (=> b!71718 (= res!38211 (and (or (not ((_ is Cons!1500) lt!31425)) (bvsle (_1!1079 (h!2086 lt!31425)) (_1!1079 lt!31205))) ((_ is Cons!1500) lt!31425) (bvslt (_1!1079 (h!2086 lt!31425)) (_1!1079 lt!31205))))))

(declare-fun b!71719 () Bool)

(assert (=> b!71719 (= e!46947 (containsKey!135 (t!5044 lt!31425) (_1!1079 lt!31205)))))

(assert (= (and d!16113 (not res!38210)) b!71718))

(assert (= (and b!71718 res!38211) b!71719))

(declare-fun m!69023 () Bool)

(assert (=> b!71719 m!69023))

(assert (=> b!71222 d!16113))

(declare-fun d!16115 () Bool)

(declare-fun lt!31844 () Bool)

(assert (=> d!16115 (= lt!31844 (select (content!74 lt!31450) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun e!46949 () Bool)

(assert (=> d!16115 (= lt!31844 e!46949)))

(declare-fun res!38213 () Bool)

(assert (=> d!16115 (=> (not res!38213) (not e!46949))))

(assert (=> d!16115 (= res!38213 ((_ is Cons!1500) lt!31450))))

(assert (=> d!16115 (= (contains!728 lt!31450 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))) lt!31844)))

(declare-fun b!71720 () Bool)

(declare-fun e!46948 () Bool)

(assert (=> b!71720 (= e!46949 e!46948)))

(declare-fun res!38212 () Bool)

(assert (=> b!71720 (=> res!38212 e!46948)))

(assert (=> b!71720 (= res!38212 (= (h!2086 lt!31450) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!71721 () Bool)

(assert (=> b!71721 (= e!46948 (contains!728 (t!5044 lt!31450) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(assert (= (and d!16115 res!38213) b!71720))

(assert (= (and b!71720 (not res!38212)) b!71721))

(declare-fun m!69025 () Bool)

(assert (=> d!16115 m!69025))

(declare-fun m!69027 () Bool)

(assert (=> d!16115 m!69027))

(declare-fun m!69029 () Bool)

(assert (=> b!71721 m!69029))

(assert (=> b!71475 d!16115))

(declare-fun d!16117 () Bool)

(assert (=> d!16117 (= (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31401)) (v!2521 (getValueByKey!131 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31401)))))

(assert (=> d!15911 d!16117))

(declare-fun c!10485 () Bool)

(declare-fun d!16119 () Bool)

(assert (=> d!16119 (= c!10485 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31401)))))

(declare-fun e!46950 () Option!137)

(assert (=> d!16119 (= (getValueByKey!131 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31401) e!46950)))

(declare-fun b!71722 () Bool)

(assert (=> b!71722 (= e!46950 (Some!136 (_2!1079 (h!2086 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))))

(declare-fun e!46951 () Option!137)

(declare-fun b!71724 () Bool)

(assert (=> b!71724 (= e!46951 (getValueByKey!131 (t!5044 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!31401))))

(declare-fun b!71723 () Bool)

(assert (=> b!71723 (= e!46950 e!46951)))

(declare-fun c!10486 () Bool)

(assert (=> b!71723 (= c!10486 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) (not (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31401))))))

(declare-fun b!71725 () Bool)

(assert (=> b!71725 (= e!46951 None!135)))

(assert (= (and d!16119 c!10485) b!71722))

(assert (= (and d!16119 (not c!10485)) b!71723))

(assert (= (and b!71723 c!10486) b!71724))

(assert (= (and b!71723 (not c!10486)) b!71725))

(declare-fun m!69031 () Bool)

(assert (=> b!71724 m!69031))

(assert (=> d!15911 d!16119))

(declare-fun d!16121 () Bool)

(assert (=> d!16121 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31426) (_1!1079 lt!31205))) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31426) (_1!1079 lt!31205)))))))

(declare-fun bs!3072 () Bool)

(assert (= bs!3072 d!16121))

(assert (=> bs!3072 m!67977))

(declare-fun m!69033 () Bool)

(assert (=> bs!3072 m!69033))

(assert (=> b!71213 d!16121))

(assert (=> b!71213 d!15941))

(assert (=> d!15927 d!15925))

(declare-fun d!16123 () Bool)

(assert (=> d!16123 (= (getValueByKey!131 lt!31461 (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200)))))

(assert (=> d!16123 true))

(declare-fun _$22!380 () Unit!2006)

(assert (=> d!16123 (= (choose!407 lt!31461 (_1!1079 lt!31200) (_2!1079 lt!31200)) _$22!380)))

(declare-fun bs!3073 () Bool)

(assert (= bs!3073 d!16123))

(assert (=> bs!3073 m!68037))

(assert (=> d!15927 d!16123))

(declare-fun d!16125 () Bool)

(declare-fun res!38214 () Bool)

(declare-fun e!46952 () Bool)

(assert (=> d!16125 (=> res!38214 e!46952)))

(assert (=> d!16125 (= res!38214 (or ((_ is Nil!1501) lt!31461) ((_ is Nil!1501) (t!5044 lt!31461))))))

(assert (=> d!16125 (= (isStrictlySorted!286 lt!31461) e!46952)))

(declare-fun b!71726 () Bool)

(declare-fun e!46953 () Bool)

(assert (=> b!71726 (= e!46952 e!46953)))

(declare-fun res!38215 () Bool)

(assert (=> b!71726 (=> (not res!38215) (not e!46953))))

(assert (=> b!71726 (= res!38215 (bvslt (_1!1079 (h!2086 lt!31461)) (_1!1079 (h!2086 (t!5044 lt!31461)))))))

(declare-fun b!71727 () Bool)

(assert (=> b!71727 (= e!46953 (isStrictlySorted!286 (t!5044 lt!31461)))))

(assert (= (and d!16125 (not res!38214)) b!71726))

(assert (= (and b!71726 res!38215) b!71727))

(declare-fun m!69035 () Bool)

(assert (=> b!71727 m!69035))

(assert (=> d!15927 d!16125))

(declare-fun d!16127 () Bool)

(declare-fun lt!31845 () Bool)

(assert (=> d!16127 (= lt!31845 (select (content!74 (toList!732 lt!31496)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun e!46955 () Bool)

(assert (=> d!16127 (= lt!31845 e!46955)))

(declare-fun res!38217 () Bool)

(assert (=> d!16127 (=> (not res!38217) (not e!46955))))

(assert (=> d!16127 (= res!38217 ((_ is Cons!1500) (toList!732 lt!31496)))))

(assert (=> d!16127 (= (contains!728 (toList!732 lt!31496) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31845)))

(declare-fun b!71728 () Bool)

(declare-fun e!46954 () Bool)

(assert (=> b!71728 (= e!46955 e!46954)))

(declare-fun res!38216 () Bool)

(assert (=> b!71728 (=> res!38216 e!46954)))

(assert (=> b!71728 (= res!38216 (= (h!2086 (toList!732 lt!31496)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71729 () Bool)

(assert (=> b!71729 (= e!46954 (contains!728 (t!5044 (toList!732 lt!31496)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!16127 res!38217) b!71728))

(assert (= (and b!71728 (not res!38216)) b!71729))

(declare-fun m!69037 () Bool)

(assert (=> d!16127 m!69037))

(declare-fun m!69039 () Bool)

(assert (=> d!16127 m!69039))

(declare-fun m!69041 () Bool)

(assert (=> b!71729 m!69041))

(assert (=> b!71210 d!16127))

(declare-fun d!16129 () Bool)

(declare-fun res!38218 () Bool)

(declare-fun e!46956 () Bool)

(assert (=> d!16129 (=> (not res!38218) (not e!46956))))

(assert (=> d!16129 (= res!38218 (simpleValid!49 (_2!1080 lt!31596)))))

(assert (=> d!16129 (= (valid!288 (_2!1080 lt!31596)) e!46956)))

(declare-fun b!71730 () Bool)

(declare-fun res!38219 () Bool)

(assert (=> b!71730 (=> (not res!38219) (not e!46956))))

(assert (=> b!71730 (= res!38219 (= (arrayCountValidKeys!0 (_keys!3840 (_2!1080 lt!31596)) #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31596)))) (_size!394 (_2!1080 lt!31596))))))

(declare-fun b!71731 () Bool)

(declare-fun res!38220 () Bool)

(assert (=> b!71731 (=> (not res!38220) (not e!46956))))

(assert (=> b!71731 (= res!38220 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (_2!1080 lt!31596)) (mask!6149 (_2!1080 lt!31596))))))

(declare-fun b!71732 () Bool)

(assert (=> b!71732 (= e!46956 (arrayNoDuplicates!0 (_keys!3840 (_2!1080 lt!31596)) #b00000000000000000000000000000000 Nil!1500))))

(assert (= (and d!16129 res!38218) b!71730))

(assert (= (and b!71730 res!38219) b!71731))

(assert (= (and b!71731 res!38220) b!71732))

(declare-fun m!69043 () Bool)

(assert (=> d!16129 m!69043))

(declare-fun m!69045 () Bool)

(assert (=> b!71730 m!69045))

(declare-fun m!69047 () Bool)

(assert (=> b!71731 m!69047))

(declare-fun m!69049 () Bool)

(assert (=> b!71732 m!69049))

(assert (=> b!71302 d!16129))

(declare-fun d!16131 () Bool)

(declare-fun e!46957 () Bool)

(assert (=> d!16131 e!46957))

(declare-fun res!38221 () Bool)

(assert (=> d!16131 (=> res!38221 e!46957)))

(declare-fun lt!31848 () Bool)

(assert (=> d!16131 (= res!38221 (not lt!31848))))

(declare-fun lt!31846 () Bool)

(assert (=> d!16131 (= lt!31848 lt!31846)))

(declare-fun lt!31847 () Unit!2006)

(declare-fun e!46958 () Unit!2006)

(assert (=> d!16131 (= lt!31847 e!46958)))

(declare-fun c!10487 () Bool)

(assert (=> d!16131 (= c!10487 lt!31846)))

(assert (=> d!16131 (= lt!31846 (containsKey!135 (toList!732 lt!31673) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16131 (= (contains!726 lt!31673 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!31848)))

(declare-fun b!71733 () Bool)

(declare-fun lt!31849 () Unit!2006)

(assert (=> b!71733 (= e!46958 lt!31849)))

(assert (=> b!71733 (= lt!31849 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31673) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!71733 (isDefined!85 (getValueByKey!131 (toList!732 lt!31673) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!71734 () Bool)

(declare-fun Unit!2039 () Unit!2006)

(assert (=> b!71734 (= e!46958 Unit!2039)))

(declare-fun b!71735 () Bool)

(assert (=> b!71735 (= e!46957 (isDefined!85 (getValueByKey!131 (toList!732 lt!31673) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16131 c!10487) b!71733))

(assert (= (and d!16131 (not c!10487)) b!71734))

(assert (= (and d!16131 (not res!38221)) b!71735))

(declare-fun m!69051 () Bool)

(assert (=> d!16131 m!69051))

(declare-fun m!69053 () Bool)

(assert (=> b!71733 m!69053))

(assert (=> b!71733 m!68451))

(assert (=> b!71733 m!68451))

(declare-fun m!69055 () Bool)

(assert (=> b!71733 m!69055))

(assert (=> b!71735 m!68451))

(assert (=> b!71735 m!68451))

(assert (=> b!71735 m!69055))

(assert (=> d!15937 d!16131))

(declare-fun c!10488 () Bool)

(declare-fun d!16133 () Bool)

(assert (=> d!16133 (= c!10488 (and ((_ is Cons!1500) lt!31672) (= (_1!1079 (h!2086 lt!31672)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!46959 () Option!137)

(assert (=> d!16133 (= (getValueByKey!131 lt!31672 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!46959)))

(declare-fun b!71736 () Bool)

(assert (=> b!71736 (= e!46959 (Some!136 (_2!1079 (h!2086 lt!31672))))))

(declare-fun b!71738 () Bool)

(declare-fun e!46960 () Option!137)

(assert (=> b!71738 (= e!46960 (getValueByKey!131 (t!5044 lt!31672) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!71737 () Bool)

(assert (=> b!71737 (= e!46959 e!46960)))

(declare-fun c!10489 () Bool)

(assert (=> b!71737 (= c!10489 (and ((_ is Cons!1500) lt!31672) (not (= (_1!1079 (h!2086 lt!31672)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!71739 () Bool)

(assert (=> b!71739 (= e!46960 None!135)))

(assert (= (and d!16133 c!10488) b!71736))

(assert (= (and d!16133 (not c!10488)) b!71737))

(assert (= (and b!71737 c!10489) b!71738))

(assert (= (and b!71737 (not c!10489)) b!71739))

(declare-fun m!69057 () Bool)

(assert (=> b!71738 m!69057))

(assert (=> d!15937 d!16133))

(declare-fun d!16135 () Bool)

(assert (=> d!16135 (= (getValueByKey!131 lt!31672 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!31850 () Unit!2006)

(assert (=> d!16135 (= lt!31850 (choose!407 lt!31672 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!46961 () Bool)

(assert (=> d!16135 e!46961))

(declare-fun res!38222 () Bool)

(assert (=> d!16135 (=> (not res!38222) (not e!46961))))

(assert (=> d!16135 (= res!38222 (isStrictlySorted!286 lt!31672))))

(assert (=> d!16135 (= (lemmaContainsTupThenGetReturnValue!50 lt!31672 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!31850)))

(declare-fun b!71740 () Bool)

(declare-fun res!38223 () Bool)

(assert (=> b!71740 (=> (not res!38223) (not e!46961))))

(assert (=> b!71740 (= res!38223 (containsKey!135 lt!31672 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!71741 () Bool)

(assert (=> b!71741 (= e!46961 (contains!728 lt!31672 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16135 res!38222) b!71740))

(assert (= (and b!71740 res!38223) b!71741))

(assert (=> d!16135 m!68445))

(declare-fun m!69059 () Bool)

(assert (=> d!16135 m!69059))

(declare-fun m!69061 () Bool)

(assert (=> d!16135 m!69061))

(declare-fun m!69063 () Bool)

(assert (=> b!71740 m!69063))

(declare-fun m!69065 () Bool)

(assert (=> b!71741 m!69065))

(assert (=> d!15937 d!16135))

(declare-fun b!71742 () Bool)

(declare-fun e!46963 () List!1504)

(declare-fun call!6225 () List!1504)

(assert (=> b!71742 (= e!46963 call!6225)))

(declare-fun b!71743 () Bool)

(declare-fun res!38224 () Bool)

(declare-fun e!46962 () Bool)

(assert (=> b!71743 (=> (not res!38224) (not e!46962))))

(declare-fun lt!31851 () List!1504)

(assert (=> b!71743 (= res!38224 (containsKey!135 lt!31851 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!10491 () Bool)

(declare-fun b!71744 () Bool)

(assert (=> b!71744 (= c!10491 (and ((_ is Cons!1500) (toList!732 call!6152)) (bvsgt (_1!1079 (h!2086 (toList!732 call!6152))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!46965 () List!1504)

(declare-fun e!46964 () List!1504)

(assert (=> b!71744 (= e!46965 e!46964)))

(declare-fun b!71746 () Bool)

(declare-fun call!6226 () List!1504)

(assert (=> b!71746 (= e!46965 call!6226)))

(declare-fun b!71747 () Bool)

(declare-fun call!6224 () List!1504)

(assert (=> b!71747 (= e!46964 call!6224)))

(declare-fun b!71748 () Bool)

(declare-fun e!46966 () List!1504)

(assert (=> b!71748 (= e!46966 (insertStrictlySorted!52 (t!5044 (toList!732 call!6152)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!6221 () Bool)

(assert (=> bm!6221 (= call!6224 call!6226)))

(declare-fun bm!6222 () Bool)

(assert (=> bm!6222 (= call!6226 call!6225)))

(declare-fun c!10490 () Bool)

(declare-fun bm!6223 () Bool)

(assert (=> bm!6223 (= call!6225 ($colon$colon!64 e!46966 (ite c!10490 (h!2086 (toList!732 call!6152)) (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!10492 () Bool)

(assert (=> bm!6223 (= c!10492 c!10490)))

(declare-fun b!71749 () Bool)

(declare-fun c!10493 () Bool)

(assert (=> b!71749 (= e!46966 (ite c!10493 (t!5044 (toList!732 call!6152)) (ite c!10491 (Cons!1500 (h!2086 (toList!732 call!6152)) (t!5044 (toList!732 call!6152))) Nil!1501)))))

(declare-fun b!71745 () Bool)

(assert (=> b!71745 (= e!46964 call!6224)))

(declare-fun d!16137 () Bool)

(assert (=> d!16137 e!46962))

(declare-fun res!38225 () Bool)

(assert (=> d!16137 (=> (not res!38225) (not e!46962))))

(assert (=> d!16137 (= res!38225 (isStrictlySorted!286 lt!31851))))

(assert (=> d!16137 (= lt!31851 e!46963)))

(assert (=> d!16137 (= c!10490 (and ((_ is Cons!1500) (toList!732 call!6152)) (bvslt (_1!1079 (h!2086 (toList!732 call!6152))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16137 (isStrictlySorted!286 (toList!732 call!6152))))

(assert (=> d!16137 (= (insertStrictlySorted!52 (toList!732 call!6152) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!31851)))

(declare-fun b!71750 () Bool)

(assert (=> b!71750 (= e!46962 (contains!728 lt!31851 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!71751 () Bool)

(assert (=> b!71751 (= e!46963 e!46965)))

(assert (=> b!71751 (= c!10493 (and ((_ is Cons!1500) (toList!732 call!6152)) (= (_1!1079 (h!2086 (toList!732 call!6152))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16137 c!10490) b!71742))

(assert (= (and d!16137 (not c!10490)) b!71751))

(assert (= (and b!71751 c!10493) b!71746))

(assert (= (and b!71751 (not c!10493)) b!71744))

(assert (= (and b!71744 c!10491) b!71745))

(assert (= (and b!71744 (not c!10491)) b!71747))

(assert (= (or b!71745 b!71747) bm!6221))

(assert (= (or b!71746 bm!6221) bm!6222))

(assert (= (or b!71742 bm!6222) bm!6223))

(assert (= (and bm!6223 c!10492) b!71748))

(assert (= (and bm!6223 (not c!10492)) b!71749))

(assert (= (and d!16137 res!38225) b!71743))

(assert (= (and b!71743 res!38224) b!71750))

(declare-fun m!69067 () Bool)

(assert (=> bm!6223 m!69067))

(declare-fun m!69069 () Bool)

(assert (=> b!71748 m!69069))

(declare-fun m!69071 () Bool)

(assert (=> b!71743 m!69071))

(declare-fun m!69073 () Bool)

(assert (=> b!71750 m!69073))

(declare-fun m!69075 () Bool)

(assert (=> d!16137 m!69075))

(declare-fun m!69077 () Bool)

(assert (=> d!16137 m!69077))

(assert (=> d!15937 d!16137))

(declare-fun d!16139 () Bool)

(declare-fun e!46967 () Bool)

(assert (=> d!16139 e!46967))

(declare-fun res!38226 () Bool)

(assert (=> d!16139 (=> res!38226 e!46967)))

(declare-fun lt!31854 () Bool)

(assert (=> d!16139 (= res!38226 (not lt!31854))))

(declare-fun lt!31852 () Bool)

(assert (=> d!16139 (= lt!31854 lt!31852)))

(declare-fun lt!31853 () Unit!2006)

(declare-fun e!46968 () Unit!2006)

(assert (=> d!16139 (= lt!31853 e!46968)))

(declare-fun c!10494 () Bool)

(assert (=> d!16139 (= c!10494 lt!31852)))

(assert (=> d!16139 (= lt!31852 (containsKey!135 (toList!732 lt!31621) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16139 (= (contains!726 lt!31621 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31854)))

(declare-fun b!71752 () Bool)

(declare-fun lt!31855 () Unit!2006)

(assert (=> b!71752 (= e!46968 lt!31855)))

(assert (=> b!71752 (= lt!31855 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31621) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> b!71752 (isDefined!85 (getValueByKey!131 (toList!732 lt!31621) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71753 () Bool)

(declare-fun Unit!2040 () Unit!2006)

(assert (=> b!71753 (= e!46968 Unit!2040)))

(declare-fun b!71754 () Bool)

(assert (=> b!71754 (= e!46967 (isDefined!85 (getValueByKey!131 (toList!732 lt!31621) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16139 c!10494) b!71752))

(assert (= (and d!16139 (not c!10494)) b!71753))

(assert (= (and d!16139 (not res!38226)) b!71754))

(declare-fun m!69079 () Bool)

(assert (=> d!16139 m!69079))

(declare-fun m!69081 () Bool)

(assert (=> b!71752 m!69081))

(assert (=> b!71752 m!68303))

(assert (=> b!71752 m!68303))

(declare-fun m!69083 () Bool)

(assert (=> b!71752 m!69083))

(assert (=> b!71754 m!68303))

(assert (=> b!71754 m!68303))

(assert (=> b!71754 m!69083))

(assert (=> d!15893 d!16139))

(declare-fun d!16141 () Bool)

(declare-fun c!10495 () Bool)

(assert (=> d!16141 (= c!10495 (and ((_ is Cons!1500) lt!31620) (= (_1!1079 (h!2086 lt!31620)) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!46969 () Option!137)

(assert (=> d!16141 (= (getValueByKey!131 lt!31620 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!46969)))

(declare-fun b!71755 () Bool)

(assert (=> b!71755 (= e!46969 (Some!136 (_2!1079 (h!2086 lt!31620))))))

(declare-fun e!46970 () Option!137)

(declare-fun b!71757 () Bool)

(assert (=> b!71757 (= e!46970 (getValueByKey!131 (t!5044 lt!31620) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71756 () Bool)

(assert (=> b!71756 (= e!46969 e!46970)))

(declare-fun c!10496 () Bool)

(assert (=> b!71756 (= c!10496 (and ((_ is Cons!1500) lt!31620) (not (= (_1!1079 (h!2086 lt!31620)) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!71758 () Bool)

(assert (=> b!71758 (= e!46970 None!135)))

(assert (= (and d!16141 c!10495) b!71755))

(assert (= (and d!16141 (not c!10495)) b!71756))

(assert (= (and b!71756 c!10496) b!71757))

(assert (= (and b!71756 (not c!10496)) b!71758))

(declare-fun m!69085 () Bool)

(assert (=> b!71757 m!69085))

(assert (=> d!15893 d!16141))

(declare-fun d!16143 () Bool)

(assert (=> d!16143 (= (getValueByKey!131 lt!31620 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31856 () Unit!2006)

(assert (=> d!16143 (= lt!31856 (choose!407 lt!31620 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!46971 () Bool)

(assert (=> d!16143 e!46971))

(declare-fun res!38227 () Bool)

(assert (=> d!16143 (=> (not res!38227) (not e!46971))))

(assert (=> d!16143 (= res!38227 (isStrictlySorted!286 lt!31620))))

(assert (=> d!16143 (= (lemmaContainsTupThenGetReturnValue!50 lt!31620 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31856)))

(declare-fun b!71759 () Bool)

(declare-fun res!38228 () Bool)

(assert (=> b!71759 (=> (not res!38228) (not e!46971))))

(assert (=> b!71759 (= res!38228 (containsKey!135 lt!31620 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71760 () Bool)

(assert (=> b!71760 (= e!46971 (contains!728 lt!31620 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16143 res!38227) b!71759))

(assert (= (and b!71759 res!38228) b!71760))

(assert (=> d!16143 m!68297))

(declare-fun m!69087 () Bool)

(assert (=> d!16143 m!69087))

(declare-fun m!69089 () Bool)

(assert (=> d!16143 m!69089))

(declare-fun m!69091 () Bool)

(assert (=> b!71759 m!69091))

(declare-fun m!69093 () Bool)

(assert (=> b!71760 m!69093))

(assert (=> d!15893 d!16143))

(declare-fun b!71761 () Bool)

(declare-fun e!46973 () List!1504)

(declare-fun call!6228 () List!1504)

(assert (=> b!71761 (= e!46973 call!6228)))

(declare-fun b!71762 () Bool)

(declare-fun res!38229 () Bool)

(declare-fun e!46972 () Bool)

(assert (=> b!71762 (=> (not res!38229) (not e!46972))))

(declare-fun lt!31857 () List!1504)

(assert (=> b!71762 (= res!38229 (containsKey!135 lt!31857 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71763 () Bool)

(declare-fun c!10498 () Bool)

(assert (=> b!71763 (= c!10498 (and ((_ is Cons!1500) (toList!732 lt!31408)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31408))) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!46975 () List!1504)

(declare-fun e!46974 () List!1504)

(assert (=> b!71763 (= e!46975 e!46974)))

(declare-fun b!71765 () Bool)

(declare-fun call!6229 () List!1504)

(assert (=> b!71765 (= e!46975 call!6229)))

(declare-fun b!71766 () Bool)

(declare-fun call!6227 () List!1504)

(assert (=> b!71766 (= e!46974 call!6227)))

(declare-fun b!71767 () Bool)

(declare-fun e!46976 () List!1504)

(assert (=> b!71767 (= e!46976 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31408)) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun bm!6224 () Bool)

(assert (=> bm!6224 (= call!6227 call!6229)))

(declare-fun bm!6225 () Bool)

(assert (=> bm!6225 (= call!6229 call!6228)))

(declare-fun bm!6226 () Bool)

(declare-fun c!10497 () Bool)

(assert (=> bm!6226 (= call!6228 ($colon$colon!64 e!46976 (ite c!10497 (h!2086 (toList!732 lt!31408)) (tuple2!2139 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun c!10499 () Bool)

(assert (=> bm!6226 (= c!10499 c!10497)))

(declare-fun c!10500 () Bool)

(declare-fun b!71768 () Bool)

(assert (=> b!71768 (= e!46976 (ite c!10500 (t!5044 (toList!732 lt!31408)) (ite c!10498 (Cons!1500 (h!2086 (toList!732 lt!31408)) (t!5044 (toList!732 lt!31408))) Nil!1501)))))

(declare-fun b!71764 () Bool)

(assert (=> b!71764 (= e!46974 call!6227)))

(declare-fun d!16145 () Bool)

(assert (=> d!16145 e!46972))

(declare-fun res!38230 () Bool)

(assert (=> d!16145 (=> (not res!38230) (not e!46972))))

(assert (=> d!16145 (= res!38230 (isStrictlySorted!286 lt!31857))))

(assert (=> d!16145 (= lt!31857 e!46973)))

(assert (=> d!16145 (= c!10497 (and ((_ is Cons!1500) (toList!732 lt!31408)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31408))) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16145 (isStrictlySorted!286 (toList!732 lt!31408))))

(assert (=> d!16145 (= (insertStrictlySorted!52 (toList!732 lt!31408) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31857)))

(declare-fun b!71769 () Bool)

(assert (=> b!71769 (= e!46972 (contains!728 lt!31857 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!71770 () Bool)

(assert (=> b!71770 (= e!46973 e!46975)))

(assert (=> b!71770 (= c!10500 (and ((_ is Cons!1500) (toList!732 lt!31408)) (= (_1!1079 (h!2086 (toList!732 lt!31408))) (_1!1079 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16145 c!10497) b!71761))

(assert (= (and d!16145 (not c!10497)) b!71770))

(assert (= (and b!71770 c!10500) b!71765))

(assert (= (and b!71770 (not c!10500)) b!71763))

(assert (= (and b!71763 c!10498) b!71764))

(assert (= (and b!71763 (not c!10498)) b!71766))

(assert (= (or b!71764 b!71766) bm!6224))

(assert (= (or b!71765 bm!6224) bm!6225))

(assert (= (or b!71761 bm!6225) bm!6226))

(assert (= (and bm!6226 c!10499) b!71767))

(assert (= (and bm!6226 (not c!10499)) b!71768))

(assert (= (and d!16145 res!38230) b!71762))

(assert (= (and b!71762 res!38229) b!71769))

(declare-fun m!69095 () Bool)

(assert (=> bm!6226 m!69095))

(declare-fun m!69097 () Bool)

(assert (=> b!71767 m!69097))

(declare-fun m!69099 () Bool)

(assert (=> b!71762 m!69099))

(declare-fun m!69101 () Bool)

(assert (=> b!71769 m!69101))

(declare-fun m!69103 () Bool)

(assert (=> d!16145 m!69103))

(declare-fun m!69105 () Bool)

(assert (=> d!16145 m!69105))

(assert (=> d!15893 d!16145))

(declare-fun d!16147 () Bool)

(declare-fun lt!31858 () Bool)

(assert (=> d!16147 (= lt!31858 (select (content!74 (t!5044 (toList!732 lt!31458))) lt!31205))))

(declare-fun e!46978 () Bool)

(assert (=> d!16147 (= lt!31858 e!46978)))

(declare-fun res!38232 () Bool)

(assert (=> d!16147 (=> (not res!38232) (not e!46978))))

(assert (=> d!16147 (= res!38232 ((_ is Cons!1500) (t!5044 (toList!732 lt!31458))))))

(assert (=> d!16147 (= (contains!728 (t!5044 (toList!732 lt!31458)) lt!31205) lt!31858)))

(declare-fun b!71771 () Bool)

(declare-fun e!46977 () Bool)

(assert (=> b!71771 (= e!46978 e!46977)))

(declare-fun res!38231 () Bool)

(assert (=> b!71771 (=> res!38231 e!46977)))

(assert (=> b!71771 (= res!38231 (= (h!2086 (t!5044 (toList!732 lt!31458))) lt!31205))))

(declare-fun b!71772 () Bool)

(assert (=> b!71772 (= e!46977 (contains!728 (t!5044 (t!5044 (toList!732 lt!31458))) lt!31205))))

(assert (= (and d!16147 res!38232) b!71771))

(assert (= (and b!71771 (not res!38231)) b!71772))

(declare-fun m!69107 () Bool)

(assert (=> d!16147 m!69107))

(declare-fun m!69109 () Bool)

(assert (=> d!16147 m!69109))

(declare-fun m!69111 () Bool)

(assert (=> b!71772 m!69111))

(assert (=> b!71562 d!16147))

(declare-fun d!16149 () Bool)

(assert (=> d!16149 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!31859 () Unit!2006)

(assert (=> d!16149 (= lt!31859 (choose!405 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46979 () Bool)

(assert (=> d!16149 e!46979))

(declare-fun res!38233 () Bool)

(assert (=> d!16149 (=> (not res!38233) (not e!46979))))

(assert (=> d!16149 (= res!38233 (isStrictlySorted!286 (toList!732 lt!31396)))))

(assert (=> d!16149 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000) lt!31859)))

(declare-fun b!71773 () Bool)

(assert (=> b!71773 (= e!46979 (containsKey!135 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16149 res!38233) b!71773))

(assert (=> d!16149 m!68763))

(assert (=> d!16149 m!68763))

(assert (=> d!16149 m!68765))

(declare-fun m!69113 () Bool)

(assert (=> d!16149 m!69113))

(declare-fun m!69115 () Bool)

(assert (=> d!16149 m!69115))

(assert (=> b!71773 m!68759))

(assert (=> b!71568 d!16149))

(declare-fun d!16151 () Bool)

(assert (=> d!16151 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3074 () Bool)

(assert (= bs!3074 d!16151))

(assert (=> bs!3074 m!68763))

(declare-fun m!69117 () Bool)

(assert (=> bs!3074 m!69117))

(assert (=> b!71568 d!16151))

(declare-fun d!16153 () Bool)

(declare-fun c!10501 () Bool)

(assert (=> d!16153 (= c!10501 (and ((_ is Cons!1500) (toList!732 lt!31396)) (= (_1!1079 (h!2086 (toList!732 lt!31396))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!46980 () Option!137)

(assert (=> d!16153 (= (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000) e!46980)))

(declare-fun b!71774 () Bool)

(assert (=> b!71774 (= e!46980 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31396)))))))

(declare-fun b!71776 () Bool)

(declare-fun e!46981 () Option!137)

(assert (=> b!71776 (= e!46981 (getValueByKey!131 (t!5044 (toList!732 lt!31396)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71775 () Bool)

(assert (=> b!71775 (= e!46980 e!46981)))

(declare-fun c!10502 () Bool)

(assert (=> b!71775 (= c!10502 (and ((_ is Cons!1500) (toList!732 lt!31396)) (not (= (_1!1079 (h!2086 (toList!732 lt!31396))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71777 () Bool)

(assert (=> b!71777 (= e!46981 None!135)))

(assert (= (and d!16153 c!10501) b!71774))

(assert (= (and d!16153 (not c!10501)) b!71775))

(assert (= (and b!71775 c!10502) b!71776))

(assert (= (and b!71775 (not c!10502)) b!71777))

(declare-fun m!69119 () Bool)

(assert (=> b!71776 m!69119))

(assert (=> b!71568 d!16153))

(declare-fun d!16155 () Bool)

(declare-fun lt!31860 () Bool)

(assert (=> d!16155 (= lt!31860 (select (content!75 Nil!1500) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!46982 () Bool)

(assert (=> d!16155 (= lt!31860 e!46982)))

(declare-fun res!38234 () Bool)

(assert (=> d!16155 (=> (not res!38234) (not e!46982))))

(assert (=> d!16155 (= res!38234 ((_ is Cons!1499) Nil!1500))))

(assert (=> d!16155 (= (contains!727 Nil!1500 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!31860)))

(declare-fun b!71778 () Bool)

(declare-fun e!46983 () Bool)

(assert (=> b!71778 (= e!46982 e!46983)))

(declare-fun res!38235 () Bool)

(assert (=> b!71778 (=> res!38235 e!46983)))

(assert (=> b!71778 (= res!38235 (= (h!2085 Nil!1500) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71779 () Bool)

(assert (=> b!71779 (= e!46983 (contains!727 (t!5043 Nil!1500) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16155 res!38234) b!71778))

(assert (= (and b!71778 (not res!38235)) b!71779))

(assert (=> d!16155 m!68841))

(assert (=> d!16155 m!68067))

(declare-fun m!69121 () Bool)

(assert (=> d!16155 m!69121))

(assert (=> b!71779 m!68067))

(declare-fun m!69123 () Bool)

(assert (=> b!71779 m!69123))

(assert (=> b!71492 d!16155))

(declare-fun b!71780 () Bool)

(declare-fun e!46988 () ListLongMap!1433)

(declare-fun call!6230 () ListLongMap!1433)

(assert (=> b!71780 (= e!46988 call!6230)))

(declare-fun b!71781 () Bool)

(declare-fun e!46990 () Bool)

(declare-fun e!46985 () Bool)

(assert (=> b!71781 (= e!46990 e!46985)))

(assert (=> b!71781 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun res!38237 () Bool)

(declare-fun lt!31862 () ListLongMap!1433)

(assert (=> b!71781 (= res!38237 (contains!726 lt!31862 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71781 (=> (not res!38237) (not e!46985))))

(declare-fun b!71783 () Bool)

(assert (=> b!71783 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> b!71783 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_values!2175 newMap!16))))))

(assert (=> b!71783 (= e!46985 (= (apply!74 lt!31862 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71784 () Bool)

(declare-fun e!46984 () Bool)

(assert (=> b!71784 (= e!46984 (= lt!31862 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16))))))

(declare-fun bm!6227 () Bool)

(assert (=> bm!6227 (= call!6230 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16)))))

(declare-fun b!71785 () Bool)

(declare-fun e!46989 () ListLongMap!1433)

(assert (=> b!71785 (= e!46989 (ListLongMap!1434 Nil!1501))))

(declare-fun b!71786 () Bool)

(assert (=> b!71786 (= e!46984 (isEmpty!318 lt!31862))))

(declare-fun b!71787 () Bool)

(assert (=> b!71787 (= e!46990 e!46984)))

(declare-fun c!10504 () Bool)

(assert (=> b!71787 (= c!10504 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71788 () Bool)

(declare-fun e!46987 () Bool)

(assert (=> b!71788 (= e!46987 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71788 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!71789 () Bool)

(declare-fun lt!31867 () Unit!2006)

(declare-fun lt!31865 () Unit!2006)

(assert (=> b!71789 (= lt!31867 lt!31865)))

(declare-fun lt!31866 () ListLongMap!1433)

(declare-fun lt!31861 () V!2939)

(declare-fun lt!31863 () (_ BitVec 64))

(declare-fun lt!31864 () (_ BitVec 64))

(assert (=> b!71789 (not (contains!726 (+!95 lt!31866 (tuple2!2139 lt!31864 lt!31861)) lt!31863))))

(assert (=> b!71789 (= lt!31865 (addStillNotContains!25 lt!31866 lt!31864 lt!31861 lt!31863))))

(assert (=> b!71789 (= lt!31863 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71789 (= lt!31861 (get!1146 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71789 (= lt!31864 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71789 (= lt!31866 call!6230)))

(assert (=> b!71789 (= e!46988 (+!95 call!6230 (tuple2!2139 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (get!1146 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71790 () Bool)

(assert (=> b!71790 (= e!46989 e!46988)))

(declare-fun c!10506 () Bool)

(assert (=> b!71790 (= c!10506 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71791 () Bool)

(declare-fun e!46986 () Bool)

(assert (=> b!71791 (= e!46986 e!46990)))

(declare-fun c!10505 () Bool)

(assert (=> b!71791 (= c!10505 e!46987)))

(declare-fun res!38236 () Bool)

(assert (=> b!71791 (=> (not res!38236) (not e!46987))))

(assert (=> b!71791 (= res!38236 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71782 () Bool)

(declare-fun res!38239 () Bool)

(assert (=> b!71782 (=> (not res!38239) (not e!46986))))

(assert (=> b!71782 (= res!38239 (not (contains!726 lt!31862 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!16157 () Bool)

(assert (=> d!16157 e!46986))

(declare-fun res!38238 () Bool)

(assert (=> d!16157 (=> (not res!38238) (not e!46986))))

(assert (=> d!16157 (= res!38238 (not (contains!726 lt!31862 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16157 (= lt!31862 e!46989)))

(declare-fun c!10503 () Bool)

(assert (=> d!16157 (= c!10503 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16157 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16157 (= (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31862)))

(assert (= (and d!16157 c!10503) b!71785))

(assert (= (and d!16157 (not c!10503)) b!71790))

(assert (= (and b!71790 c!10506) b!71789))

(assert (= (and b!71790 (not c!10506)) b!71780))

(assert (= (or b!71789 b!71780) bm!6227))

(assert (= (and d!16157 res!38238) b!71782))

(assert (= (and b!71782 res!38239) b!71791))

(assert (= (and b!71791 res!38236) b!71788))

(assert (= (and b!71791 c!10505) b!71781))

(assert (= (and b!71791 (not c!10505)) b!71787))

(assert (= (and b!71781 res!38237) b!71783))

(assert (= (and b!71787 c!10504) b!71784))

(assert (= (and b!71787 (not c!10504)) b!71786))

(declare-fun b_lambda!3229 () Bool)

(assert (=> (not b_lambda!3229) (not b!71783)))

(assert (=> b!71783 t!5051))

(declare-fun b_and!4413 () Bool)

(assert (= b_and!4409 (and (=> t!5051 result!2669) b_and!4413)))

(assert (=> b!71783 t!5053))

(declare-fun b_and!4415 () Bool)

(assert (= b_and!4411 (and (=> t!5053 result!2671) b_and!4415)))

(declare-fun b_lambda!3231 () Bool)

(assert (=> (not b_lambda!3231) (not b!71789)))

(assert (=> b!71789 t!5051))

(declare-fun b_and!4417 () Bool)

(assert (= b_and!4413 (and (=> t!5051 result!2669) b_and!4417)))

(assert (=> b!71789 t!5053))

(declare-fun b_and!4419 () Bool)

(assert (= b_and!4415 (and (=> t!5053 result!2671) b_and!4419)))

(declare-fun m!69125 () Bool)

(assert (=> b!71784 m!69125))

(assert (=> b!71790 m!68067))

(assert (=> b!71790 m!68067))

(assert (=> b!71790 m!68077))

(assert (=> b!71783 m!68067))

(assert (=> b!71783 m!68529))

(assert (=> b!71783 m!68067))

(declare-fun m!69127 () Bool)

(assert (=> b!71783 m!69127))

(assert (=> b!71783 m!68527))

(assert (=> b!71783 m!68529))

(assert (=> b!71783 m!68531))

(assert (=> b!71783 m!68527))

(declare-fun m!69129 () Bool)

(assert (=> d!16157 m!69129))

(assert (=> d!16157 m!68107))

(assert (=> b!71781 m!68067))

(assert (=> b!71781 m!68067))

(declare-fun m!69131 () Bool)

(assert (=> b!71781 m!69131))

(assert (=> b!71788 m!68067))

(assert (=> b!71788 m!68067))

(assert (=> b!71788 m!68077))

(assert (=> bm!6227 m!69125))

(declare-fun m!69133 () Bool)

(assert (=> b!71782 m!69133))

(declare-fun m!69135 () Bool)

(assert (=> b!71786 m!69135))

(assert (=> b!71789 m!68067))

(assert (=> b!71789 m!68529))

(declare-fun m!69137 () Bool)

(assert (=> b!71789 m!69137))

(declare-fun m!69139 () Bool)

(assert (=> b!71789 m!69139))

(assert (=> b!71789 m!68527))

(assert (=> b!71789 m!68529))

(assert (=> b!71789 m!68531))

(assert (=> b!71789 m!68527))

(declare-fun m!69141 () Bool)

(assert (=> b!71789 m!69141))

(assert (=> b!71789 m!69137))

(declare-fun m!69143 () Bool)

(assert (=> b!71789 m!69143))

(assert (=> bm!6193 d!16157))

(declare-fun d!16159 () Bool)

(assert (=> d!16159 (isDefined!85 (getValueByKey!131 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun lt!31868 () Unit!2006)

(assert (=> d!16159 (= lt!31868 (choose!405 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun e!46991 () Bool)

(assert (=> d!16159 e!46991))

(declare-fun res!38240 () Bool)

(assert (=> d!16159 (=> (not res!38240) (not e!46991))))

(assert (=> d!16159 (= res!38240 (isStrictlySorted!286 (toList!732 call!6111)))))

(assert (=> d!16159 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31868)))

(declare-fun b!71792 () Bool)

(assert (=> b!71792 (= e!46991 (containsKey!135 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!16159 res!38240) b!71792))

(assert (=> d!16159 m!67713))

(assert (=> d!16159 m!68857))

(assert (=> d!16159 m!68857))

(assert (=> d!16159 m!68859))

(assert (=> d!16159 m!67713))

(declare-fun m!69145 () Bool)

(assert (=> d!16159 m!69145))

(declare-fun m!69147 () Bool)

(assert (=> d!16159 m!69147))

(assert (=> b!71792 m!67713))

(assert (=> b!71792 m!68853))

(assert (=> b!71607 d!16159))

(declare-fun d!16161 () Bool)

(assert (=> d!16161 (= (isDefined!85 (getValueByKey!131 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) (not (isEmpty!319 (getValueByKey!131 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(declare-fun bs!3075 () Bool)

(assert (= bs!3075 d!16161))

(assert (=> bs!3075 m!68857))

(declare-fun m!69149 () Bool)

(assert (=> bs!3075 m!69149))

(assert (=> b!71607 d!16161))

(declare-fun c!10507 () Bool)

(declare-fun d!16163 () Bool)

(assert (=> d!16163 (= c!10507 (and ((_ is Cons!1500) (toList!732 call!6111)) (= (_1!1079 (h!2086 (toList!732 call!6111))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun e!46992 () Option!137)

(assert (=> d!16163 (= (getValueByKey!131 (toList!732 call!6111) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!46992)))

(declare-fun b!71793 () Bool)

(assert (=> b!71793 (= e!46992 (Some!136 (_2!1079 (h!2086 (toList!732 call!6111)))))))

(declare-fun e!46993 () Option!137)

(declare-fun b!71795 () Bool)

(assert (=> b!71795 (= e!46993 (getValueByKey!131 (t!5044 (toList!732 call!6111)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!71794 () Bool)

(assert (=> b!71794 (= e!46992 e!46993)))

(declare-fun c!10508 () Bool)

(assert (=> b!71794 (= c!10508 (and ((_ is Cons!1500) (toList!732 call!6111)) (not (= (_1!1079 (h!2086 (toList!732 call!6111))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(declare-fun b!71796 () Bool)

(assert (=> b!71796 (= e!46993 None!135)))

(assert (= (and d!16163 c!10507) b!71793))

(assert (= (and d!16163 (not c!10507)) b!71794))

(assert (= (and b!71794 c!10508) b!71795))

(assert (= (and b!71794 (not c!10508)) b!71796))

(assert (=> b!71795 m!67713))

(declare-fun m!69151 () Bool)

(assert (=> b!71795 m!69151))

(assert (=> b!71607 d!16163))

(declare-fun d!16165 () Bool)

(assert (=> d!16165 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3076 () Bool)

(assert (= bs!3076 d!16165))

(assert (=> bs!3076 m!68669))

(declare-fun m!69153 () Bool)

(assert (=> bs!3076 m!69153))

(assert (=> b!71606 d!16165))

(declare-fun c!10509 () Bool)

(declare-fun d!16167 () Bool)

(assert (=> d!16167 (= c!10509 (and ((_ is Cons!1500) (toList!732 lt!31396)) (= (_1!1079 (h!2086 (toList!732 lt!31396))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!46994 () Option!137)

(assert (=> d!16167 (= (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!46994)))

(declare-fun b!71797 () Bool)

(assert (=> b!71797 (= e!46994 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31396)))))))

(declare-fun b!71799 () Bool)

(declare-fun e!46995 () Option!137)

(assert (=> b!71799 (= e!46995 (getValueByKey!131 (t!5044 (toList!732 lt!31396)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71798 () Bool)

(assert (=> b!71798 (= e!46994 e!46995)))

(declare-fun c!10510 () Bool)

(assert (=> b!71798 (= c!10510 (and ((_ is Cons!1500) (toList!732 lt!31396)) (not (= (_1!1079 (h!2086 (toList!732 lt!31396))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!71800 () Bool)

(assert (=> b!71800 (= e!46995 None!135)))

(assert (= (and d!16167 c!10509) b!71797))

(assert (= (and d!16167 (not c!10509)) b!71798))

(assert (= (and b!71798 c!10510) b!71799))

(assert (= (and b!71798 (not c!10510)) b!71800))

(assert (=> b!71799 m!67827))

(declare-fun m!69155 () Bool)

(assert (=> b!71799 m!69155))

(assert (=> b!71606 d!16167))

(declare-fun d!16169 () Bool)

(declare-fun res!38241 () Bool)

(declare-fun e!46996 () Bool)

(assert (=> d!16169 (=> res!38241 e!46996)))

(assert (=> d!16169 (= res!38241 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31409)))))

(assert (=> d!16169 (= (containsKey!135 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409) e!46996)))

(declare-fun b!71801 () Bool)

(declare-fun e!46997 () Bool)

(assert (=> b!71801 (= e!46996 e!46997)))

(declare-fun res!38242 () Bool)

(assert (=> b!71801 (=> (not res!38242) (not e!46997))))

(assert (=> b!71801 (= res!38242 (and (or (not ((_ is Cons!1500) (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) (bvsle (_1!1079 (h!2086 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31409)) ((_ is Cons!1500) (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31409)))))

(declare-fun b!71802 () Bool)

(assert (=> b!71802 (= e!46997 (containsKey!135 (t!5044 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!31409))))

(assert (= (and d!16169 (not res!38241)) b!71801))

(assert (= (and b!71801 res!38242) b!71802))

(declare-fun m!69157 () Bool)

(assert (=> b!71802 m!69157))

(assert (=> d!15885 d!16169))

(declare-fun b!71803 () Bool)

(declare-fun e!46998 () Bool)

(declare-fun call!6231 () Bool)

(assert (=> b!71803 (= e!46998 call!6231)))

(declare-fun b!71804 () Bool)

(declare-fun e!47000 () Bool)

(assert (=> b!71804 (= e!47000 call!6231)))

(declare-fun b!71805 () Bool)

(assert (=> b!71805 (= e!47000 e!46998)))

(declare-fun lt!31870 () (_ BitVec 64))

(assert (=> b!71805 (= lt!31870 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!31871 () Unit!2006)

(assert (=> b!71805 (= lt!31871 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) lt!31870 #b00000000000000000000000000000000))))

(assert (=> b!71805 (arrayContainsKey!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) lt!31870 #b00000000000000000000000000000000)))

(declare-fun lt!31869 () Unit!2006)

(assert (=> b!71805 (= lt!31869 lt!31871)))

(declare-fun res!38244 () Bool)

(assert (=> b!71805 (= res!38244 (= (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000) (_keys!3840 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992)))) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!71805 (=> (not res!38244) (not e!46998))))

(declare-fun bm!6228 () Bool)

(assert (=> bm!6228 (= call!6231 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun d!16171 () Bool)

(declare-fun res!38243 () Bool)

(declare-fun e!46999 () Bool)

(assert (=> d!16171 (=> res!38243 e!46999)))

(assert (=> d!16171 (= res!38243 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!16171 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (mask!6149 (v!2517 (underlying!261 thiss!992)))) e!46999)))

(declare-fun b!71806 () Bool)

(assert (=> b!71806 (= e!46999 e!47000)))

(declare-fun c!10511 () Bool)

(assert (=> b!71806 (= c!10511 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!16171 (not res!38243)) b!71806))

(assert (= (and b!71806 c!10511) b!71805))

(assert (= (and b!71806 (not c!10511)) b!71804))

(assert (= (and b!71805 res!38244) b!71803))

(assert (= (or b!71803 b!71804) bm!6228))

(assert (=> b!71805 m!68935))

(declare-fun m!69159 () Bool)

(assert (=> b!71805 m!69159))

(declare-fun m!69161 () Bool)

(assert (=> b!71805 m!69161))

(assert (=> b!71805 m!68935))

(declare-fun m!69163 () Bool)

(assert (=> b!71805 m!69163))

(declare-fun m!69165 () Bool)

(assert (=> bm!6228 m!69165))

(assert (=> b!71806 m!68935))

(assert (=> b!71806 m!68935))

(assert (=> b!71806 m!68937))

(assert (=> b!71498 d!16171))

(declare-fun lt!31872 () Bool)

(declare-fun d!16173 () Bool)

(assert (=> d!16173 (= lt!31872 (select (content!74 (toList!732 lt!31673)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!47002 () Bool)

(assert (=> d!16173 (= lt!31872 e!47002)))

(declare-fun res!38246 () Bool)

(assert (=> d!16173 (=> (not res!38246) (not e!47002))))

(assert (=> d!16173 (= res!38246 ((_ is Cons!1500) (toList!732 lt!31673)))))

(assert (=> d!16173 (= (contains!728 (toList!732 lt!31673) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!31872)))

(declare-fun b!71807 () Bool)

(declare-fun e!47001 () Bool)

(assert (=> b!71807 (= e!47002 e!47001)))

(declare-fun res!38245 () Bool)

(assert (=> b!71807 (=> res!38245 e!47001)))

(assert (=> b!71807 (= res!38245 (= (h!2086 (toList!732 lt!31673)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71808 () Bool)

(assert (=> b!71808 (= e!47001 (contains!728 (t!5044 (toList!732 lt!31673)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16173 res!38246) b!71807))

(assert (= (and b!71807 (not res!38245)) b!71808))

(declare-fun m!69167 () Bool)

(assert (=> d!16173 m!69167))

(declare-fun m!69169 () Bool)

(assert (=> d!16173 m!69169))

(declare-fun m!69171 () Bool)

(assert (=> b!71808 m!69171))

(assert (=> b!71419 d!16173))

(declare-fun d!16175 () Bool)

(declare-fun lt!31873 () Bool)

(assert (=> d!16175 (= lt!31873 (select (content!74 (toList!732 lt!31621)) (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun e!47004 () Bool)

(assert (=> d!16175 (= lt!31873 e!47004)))

(declare-fun res!38248 () Bool)

(assert (=> d!16175 (=> (not res!38248) (not e!47004))))

(assert (=> d!16175 (= res!38248 ((_ is Cons!1500) (toList!732 lt!31621)))))

(assert (=> d!16175 (= (contains!728 (toList!732 lt!31621) (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31873)))

(declare-fun b!71809 () Bool)

(declare-fun e!47003 () Bool)

(assert (=> b!71809 (= e!47004 e!47003)))

(declare-fun res!38247 () Bool)

(assert (=> b!71809 (=> res!38247 e!47003)))

(assert (=> b!71809 (= res!38247 (= (h!2086 (toList!732 lt!31621)) (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!71810 () Bool)

(assert (=> b!71810 (= e!47003 (contains!728 (t!5044 (toList!732 lt!31621)) (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!16175 res!38248) b!71809))

(assert (= (and b!71809 (not res!38247)) b!71810))

(declare-fun m!69173 () Bool)

(assert (=> d!16175 m!69173))

(declare-fun m!69175 () Bool)

(assert (=> d!16175 m!69175))

(declare-fun m!69177 () Bool)

(assert (=> b!71810 m!69177))

(assert (=> b!71330 d!16175))

(declare-fun d!16177 () Bool)

(declare-fun c!10512 () Bool)

(assert (=> d!16177 (= c!10512 (and ((_ is Cons!1500) (toList!732 lt!31725)) (= (_1!1079 (h!2086 (toList!732 lt!31725))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47005 () Option!137)

(assert (=> d!16177 (= (getValueByKey!131 (toList!732 lt!31725) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) e!47005)))

(declare-fun b!71811 () Bool)

(assert (=> b!71811 (= e!47005 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31725)))))))

(declare-fun e!47006 () Option!137)

(declare-fun b!71813 () Bool)

(assert (=> b!71813 (= e!47006 (getValueByKey!131 (t!5044 (toList!732 lt!31725)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71812 () Bool)

(assert (=> b!71812 (= e!47005 e!47006)))

(declare-fun c!10513 () Bool)

(assert (=> b!71812 (= c!10513 (and ((_ is Cons!1500) (toList!732 lt!31725)) (not (= (_1!1079 (h!2086 (toList!732 lt!31725))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!71814 () Bool)

(assert (=> b!71814 (= e!47006 None!135)))

(assert (= (and d!16177 c!10512) b!71811))

(assert (= (and d!16177 (not c!10512)) b!71812))

(assert (= (and b!71812 c!10513) b!71813))

(assert (= (and b!71812 (not c!10513)) b!71814))

(declare-fun m!69179 () Bool)

(assert (=> b!71813 m!69179))

(assert (=> b!71502 d!16177))

(declare-fun d!16179 () Bool)

(assert (=> d!16179 (= (get!1148 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2516 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71156 d!16179))

(assert (=> bm!6173 d!16017))

(assert (=> bm!6179 d!16017))

(declare-fun d!16181 () Bool)

(assert (=> d!16181 (= (apply!74 lt!31759 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1150 (getValueByKey!131 (toList!732 lt!31759) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3077 () Bool)

(assert (= bs!3077 d!16181))

(assert (=> bs!3077 m!68067))

(declare-fun m!69181 () Bool)

(assert (=> bs!3077 m!69181))

(assert (=> bs!3077 m!69181))

(declare-fun m!69183 () Bool)

(assert (=> bs!3077 m!69183))

(assert (=> b!71553 d!16181))

(declare-fun c!10514 () Bool)

(declare-fun d!16183 () Bool)

(assert (=> d!16183 (= c!10514 ((_ is ValueCellFull!891) (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000)))))

(declare-fun e!47007 () V!2939)

(assert (=> d!16183 (= (get!1146 (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47007)))

(declare-fun b!71815 () Bool)

(assert (=> b!71815 (= e!47007 (get!1148 (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71816 () Bool)

(assert (=> b!71816 (= e!47007 (get!1149 (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16183 c!10514) b!71815))

(assert (= (and d!16183 (not c!10514)) b!71816))

(assert (=> b!71815 m!68737))

(assert (=> b!71815 m!68529))

(declare-fun m!69185 () Bool)

(assert (=> b!71815 m!69185))

(assert (=> b!71816 m!68737))

(assert (=> b!71816 m!68529))

(declare-fun m!69187 () Bool)

(assert (=> b!71816 m!69187))

(assert (=> b!71553 d!16183))

(declare-fun c!10515 () Bool)

(declare-fun d!16185 () Bool)

(assert (=> d!16185 (= c!10515 (and ((_ is Cons!1500) (toList!732 lt!31809)) (= (_1!1079 (h!2086 (toList!732 lt!31809))) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun e!47008 () Option!137)

(assert (=> d!16185 (= (getValueByKey!131 (toList!732 lt!31809) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) e!47008)))

(declare-fun b!71817 () Bool)

(assert (=> b!71817 (= e!47008 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31809)))))))

(declare-fun e!47009 () Option!137)

(declare-fun b!71819 () Bool)

(assert (=> b!71819 (= e!47009 (getValueByKey!131 (t!5044 (toList!732 lt!31809)) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71818 () Bool)

(assert (=> b!71818 (= e!47008 e!47009)))

(declare-fun c!10516 () Bool)

(assert (=> b!71818 (= c!10516 (and ((_ is Cons!1500) (toList!732 lt!31809)) (not (= (_1!1079 (h!2086 (toList!732 lt!31809))) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))))

(declare-fun b!71820 () Bool)

(assert (=> b!71820 (= e!47009 None!135)))

(assert (= (and d!16185 c!10515) b!71817))

(assert (= (and d!16185 (not c!10515)) b!71818))

(assert (= (and b!71818 c!10516) b!71819))

(assert (= (and b!71818 (not c!10516)) b!71820))

(declare-fun m!69189 () Bool)

(assert (=> b!71819 m!69189))

(assert (=> b!71594 d!16185))

(assert (=> b!71203 d!15783))

(declare-fun d!16187 () Bool)

(declare-fun e!47010 () Bool)

(assert (=> d!16187 e!47010))

(declare-fun res!38249 () Bool)

(assert (=> d!16187 (=> res!38249 e!47010)))

(declare-fun lt!31876 () Bool)

(assert (=> d!16187 (= res!38249 (not lt!31876))))

(declare-fun lt!31874 () Bool)

(assert (=> d!16187 (= lt!31876 lt!31874)))

(declare-fun lt!31875 () Unit!2006)

(declare-fun e!47011 () Unit!2006)

(assert (=> d!16187 (= lt!31875 e!47011)))

(declare-fun c!10517 () Bool)

(assert (=> d!16187 (= c!10517 lt!31874)))

(assert (=> d!16187 (= lt!31874 (containsKey!135 (toList!732 lt!31683) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16187 (= (contains!726 lt!31683 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!31876)))

(declare-fun b!71821 () Bool)

(declare-fun lt!31877 () Unit!2006)

(assert (=> b!71821 (= e!47011 lt!31877)))

(assert (=> b!71821 (= lt!31877 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31683) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71821 (isDefined!85 (getValueByKey!131 (toList!732 lt!31683) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71822 () Bool)

(declare-fun Unit!2041 () Unit!2006)

(assert (=> b!71822 (= e!47011 Unit!2041)))

(declare-fun b!71823 () Bool)

(assert (=> b!71823 (= e!47010 (isDefined!85 (getValueByKey!131 (toList!732 lt!31683) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16187 c!10517) b!71821))

(assert (= (and d!16187 (not c!10517)) b!71822))

(assert (= (and d!16187 (not res!38249)) b!71823))

(assert (=> d!16187 m!68067))

(declare-fun m!69191 () Bool)

(assert (=> d!16187 m!69191))

(assert (=> b!71821 m!68067))

(declare-fun m!69193 () Bool)

(assert (=> b!71821 m!69193))

(assert (=> b!71821 m!68067))

(declare-fun m!69195 () Bool)

(assert (=> b!71821 m!69195))

(assert (=> b!71821 m!69195))

(declare-fun m!69197 () Bool)

(assert (=> b!71821 m!69197))

(assert (=> b!71823 m!68067))

(assert (=> b!71823 m!69195))

(assert (=> b!71823 m!69195))

(assert (=> b!71823 m!69197))

(assert (=> b!71453 d!16187))

(assert (=> b!71303 d!15919))

(declare-fun d!16189 () Bool)

(declare-fun lt!31878 () Bool)

(assert (=> d!16189 (= lt!31878 (select (content!74 lt!31679) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun e!47013 () Bool)

(assert (=> d!16189 (= lt!31878 e!47013)))

(declare-fun res!38251 () Bool)

(assert (=> d!16189 (=> (not res!38251) (not e!47013))))

(assert (=> d!16189 (= res!38251 ((_ is Cons!1500) lt!31679))))

(assert (=> d!16189 (= (contains!728 lt!31679 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))) lt!31878)))

(declare-fun b!71824 () Bool)

(declare-fun e!47012 () Bool)

(assert (=> b!71824 (= e!47013 e!47012)))

(declare-fun res!38250 () Bool)

(assert (=> b!71824 (=> res!38250 e!47012)))

(assert (=> b!71824 (= res!38250 (= (h!2086 lt!31679) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!71825 () Bool)

(assert (=> b!71825 (= e!47012 (contains!728 (t!5044 lt!31679) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(assert (= (and d!16189 res!38251) b!71824))

(assert (= (and b!71824 (not res!38250)) b!71825))

(declare-fun m!69199 () Bool)

(assert (=> d!16189 m!69199))

(declare-fun m!69201 () Bool)

(assert (=> d!16189 m!69201))

(declare-fun m!69203 () Bool)

(assert (=> b!71825 m!69203))

(assert (=> b!71441 d!16189))

(declare-fun d!16191 () Bool)

(declare-fun e!47014 () Bool)

(assert (=> d!16191 e!47014))

(declare-fun res!38252 () Bool)

(assert (=> d!16191 (=> res!38252 e!47014)))

(declare-fun lt!31881 () Bool)

(assert (=> d!16191 (= res!38252 (not lt!31881))))

(declare-fun lt!31879 () Bool)

(assert (=> d!16191 (= lt!31881 lt!31879)))

(declare-fun lt!31880 () Unit!2006)

(declare-fun e!47015 () Unit!2006)

(assert (=> d!16191 (= lt!31880 e!47015)))

(declare-fun c!10518 () Bool)

(assert (=> d!16191 (= c!10518 lt!31879)))

(assert (=> d!16191 (= lt!31879 (containsKey!135 (toList!732 lt!31809) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> d!16191 (= (contains!726 lt!31809 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) lt!31881)))

(declare-fun b!71826 () Bool)

(declare-fun lt!31882 () Unit!2006)

(assert (=> b!71826 (= e!47015 lt!31882)))

(assert (=> b!71826 (= lt!31882 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31809) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> b!71826 (isDefined!85 (getValueByKey!131 (toList!732 lt!31809) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71827 () Bool)

(declare-fun Unit!2042 () Unit!2006)

(assert (=> b!71827 (= e!47015 Unit!2042)))

(declare-fun b!71828 () Bool)

(assert (=> b!71828 (= e!47014 (isDefined!85 (getValueByKey!131 (toList!732 lt!31809) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(assert (= (and d!16191 c!10518) b!71826))

(assert (= (and d!16191 (not c!10518)) b!71827))

(assert (= (and d!16191 (not res!38252)) b!71828))

(declare-fun m!69205 () Bool)

(assert (=> d!16191 m!69205))

(declare-fun m!69207 () Bool)

(assert (=> b!71826 m!69207))

(assert (=> b!71826 m!68835))

(assert (=> b!71826 m!68835))

(declare-fun m!69209 () Bool)

(assert (=> b!71826 m!69209))

(assert (=> b!71828 m!68835))

(assert (=> b!71828 m!68835))

(assert (=> b!71828 m!69209))

(assert (=> d!16013 d!16191))

(declare-fun c!10519 () Bool)

(declare-fun d!16193 () Bool)

(assert (=> d!16193 (= c!10519 (and ((_ is Cons!1500) lt!31808) (= (_1!1079 (h!2086 lt!31808)) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun e!47016 () Option!137)

(assert (=> d!16193 (= (getValueByKey!131 lt!31808 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) e!47016)))

(declare-fun b!71829 () Bool)

(assert (=> b!71829 (= e!47016 (Some!136 (_2!1079 (h!2086 lt!31808))))))

(declare-fun e!47017 () Option!137)

(declare-fun b!71831 () Bool)

(assert (=> b!71831 (= e!47017 (getValueByKey!131 (t!5044 lt!31808) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71830 () Bool)

(assert (=> b!71830 (= e!47016 e!47017)))

(declare-fun c!10520 () Bool)

(assert (=> b!71830 (= c!10520 (and ((_ is Cons!1500) lt!31808) (not (= (_1!1079 (h!2086 lt!31808)) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))))

(declare-fun b!71832 () Bool)

(assert (=> b!71832 (= e!47017 None!135)))

(assert (= (and d!16193 c!10519) b!71829))

(assert (= (and d!16193 (not c!10519)) b!71830))

(assert (= (and b!71830 c!10520) b!71831))

(assert (= (and b!71830 (not c!10520)) b!71832))

(declare-fun m!69211 () Bool)

(assert (=> b!71831 m!69211))

(assert (=> d!16013 d!16193))

(declare-fun d!16195 () Bool)

(assert (=> d!16195 (= (getValueByKey!131 lt!31808 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (Some!136 (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun lt!31883 () Unit!2006)

(assert (=> d!16195 (= lt!31883 (choose!407 lt!31808 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47018 () Bool)

(assert (=> d!16195 e!47018))

(declare-fun res!38253 () Bool)

(assert (=> d!16195 (=> (not res!38253) (not e!47018))))

(assert (=> d!16195 (= res!38253 (isStrictlySorted!286 lt!31808))))

(assert (=> d!16195 (= (lemmaContainsTupThenGetReturnValue!50 lt!31808 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) lt!31883)))

(declare-fun b!71833 () Bool)

(declare-fun res!38254 () Bool)

(assert (=> b!71833 (=> (not res!38254) (not e!47018))))

(assert (=> b!71833 (= res!38254 (containsKey!135 lt!31808 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71834 () Bool)

(assert (=> b!71834 (= e!47018 (contains!728 lt!31808 (tuple2!2139 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(assert (= (and d!16195 res!38253) b!71833))

(assert (= (and b!71833 res!38254) b!71834))

(assert (=> d!16195 m!68829))

(declare-fun m!69213 () Bool)

(assert (=> d!16195 m!69213))

(declare-fun m!69215 () Bool)

(assert (=> d!16195 m!69215))

(declare-fun m!69217 () Bool)

(assert (=> b!71833 m!69217))

(declare-fun m!69219 () Bool)

(assert (=> b!71834 m!69219))

(assert (=> d!16013 d!16195))

(declare-fun b!71835 () Bool)

(declare-fun e!47020 () List!1504)

(declare-fun call!6233 () List!1504)

(assert (=> b!71835 (= e!47020 call!6233)))

(declare-fun b!71836 () Bool)

(declare-fun res!38255 () Bool)

(declare-fun e!47019 () Bool)

(assert (=> b!71836 (=> (not res!38255) (not e!47019))))

(declare-fun lt!31884 () List!1504)

(assert (=> b!71836 (= res!38255 (containsKey!135 lt!31884 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun c!10522 () Bool)

(declare-fun b!71837 () Bool)

(assert (=> b!71837 (= c!10522 (and ((_ is Cons!1500) (toList!732 e!46509)) (bvsgt (_1!1079 (h!2086 (toList!732 e!46509))) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun e!47022 () List!1504)

(declare-fun e!47021 () List!1504)

(assert (=> b!71837 (= e!47022 e!47021)))

(declare-fun b!71839 () Bool)

(declare-fun call!6234 () List!1504)

(assert (=> b!71839 (= e!47022 call!6234)))

(declare-fun b!71840 () Bool)

(declare-fun call!6232 () List!1504)

(assert (=> b!71840 (= e!47021 call!6232)))

(declare-fun e!47023 () List!1504)

(declare-fun b!71841 () Bool)

(assert (=> b!71841 (= e!47023 (insertStrictlySorted!52 (t!5044 (toList!732 e!46509)) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun bm!6229 () Bool)

(assert (=> bm!6229 (= call!6232 call!6234)))

(declare-fun bm!6230 () Bool)

(assert (=> bm!6230 (= call!6234 call!6233)))

(declare-fun c!10521 () Bool)

(declare-fun bm!6231 () Bool)

(assert (=> bm!6231 (= call!6233 ($colon$colon!64 e!47023 (ite c!10521 (h!2086 (toList!732 e!46509)) (tuple2!2139 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))))

(declare-fun c!10523 () Bool)

(assert (=> bm!6231 (= c!10523 c!10521)))

(declare-fun b!71842 () Bool)

(declare-fun c!10524 () Bool)

(assert (=> b!71842 (= e!47023 (ite c!10524 (t!5044 (toList!732 e!46509)) (ite c!10522 (Cons!1500 (h!2086 (toList!732 e!46509)) (t!5044 (toList!732 e!46509))) Nil!1501)))))

(declare-fun b!71838 () Bool)

(assert (=> b!71838 (= e!47021 call!6232)))

(declare-fun d!16197 () Bool)

(assert (=> d!16197 e!47019))

(declare-fun res!38256 () Bool)

(assert (=> d!16197 (=> (not res!38256) (not e!47019))))

(assert (=> d!16197 (= res!38256 (isStrictlySorted!286 lt!31884))))

(assert (=> d!16197 (= lt!31884 e!47020)))

(assert (=> d!16197 (= c!10521 (and ((_ is Cons!1500) (toList!732 e!46509)) (bvslt (_1!1079 (h!2086 (toList!732 e!46509))) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(assert (=> d!16197 (isStrictlySorted!286 (toList!732 e!46509))))

(assert (=> d!16197 (= (insertStrictlySorted!52 (toList!732 e!46509) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) lt!31884)))

(declare-fun b!71843 () Bool)

(assert (=> b!71843 (= e!47019 (contains!728 lt!31884 (tuple2!2139 (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_2!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!71844 () Bool)

(assert (=> b!71844 (= e!47020 e!47022)))

(assert (=> b!71844 (= c!10524 (and ((_ is Cons!1500) (toList!732 e!46509)) (= (_1!1079 (h!2086 (toList!732 e!46509))) (_1!1079 (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(assert (= (and d!16197 c!10521) b!71835))

(assert (= (and d!16197 (not c!10521)) b!71844))

(assert (= (and b!71844 c!10524) b!71839))

(assert (= (and b!71844 (not c!10524)) b!71837))

(assert (= (and b!71837 c!10522) b!71838))

(assert (= (and b!71837 (not c!10522)) b!71840))

(assert (= (or b!71838 b!71840) bm!6229))

(assert (= (or b!71839 bm!6229) bm!6230))

(assert (= (or b!71835 bm!6230) bm!6231))

(assert (= (and bm!6231 c!10523) b!71841))

(assert (= (and bm!6231 (not c!10523)) b!71842))

(assert (= (and d!16197 res!38256) b!71836))

(assert (= (and b!71836 res!38255) b!71843))

(declare-fun m!69221 () Bool)

(assert (=> bm!6231 m!69221))

(declare-fun m!69223 () Bool)

(assert (=> b!71841 m!69223))

(declare-fun m!69225 () Bool)

(assert (=> b!71836 m!69225))

(declare-fun m!69227 () Bool)

(assert (=> b!71843 m!69227))

(declare-fun m!69229 () Bool)

(assert (=> d!16197 m!69229))

(declare-fun m!69231 () Bool)

(assert (=> d!16197 m!69231))

(assert (=> d!16013 d!16197))

(declare-fun d!16199 () Bool)

(assert (=> d!16199 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409))))

(declare-fun lt!31885 () Unit!2006)

(assert (=> d!16199 (= lt!31885 (choose!405 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409))))

(declare-fun e!47024 () Bool)

(assert (=> d!16199 e!47024))

(declare-fun res!38257 () Bool)

(assert (=> d!16199 (=> (not res!38257) (not e!47024))))

(assert (=> d!16199 (= res!38257 (isStrictlySorted!286 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16199 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409) lt!31885)))

(declare-fun b!71845 () Bool)

(assert (=> b!71845 (= e!47024 (containsKey!135 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409))))

(assert (= (and d!16199 res!38257) b!71845))

(assert (=> d!16199 m!68271))

(assert (=> d!16199 m!68271))

(assert (=> d!16199 m!68273))

(declare-fun m!69233 () Bool)

(assert (=> d!16199 m!69233))

(declare-fun m!69235 () Bool)

(assert (=> d!16199 m!69235))

(assert (=> b!71845 m!68267))

(assert (=> b!71320 d!16199))

(declare-fun d!16201 () Bool)

(assert (=> d!16201 (= (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409)) (not (isEmpty!319 (getValueByKey!131 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409))))))

(declare-fun bs!3078 () Bool)

(assert (= bs!3078 d!16201))

(assert (=> bs!3078 m!68271))

(declare-fun m!69237 () Bool)

(assert (=> bs!3078 m!69237))

(assert (=> b!71320 d!16201))

(declare-fun d!16203 () Bool)

(declare-fun c!10525 () Bool)

(assert (=> d!16203 (= c!10525 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31409)))))

(declare-fun e!47025 () Option!137)

(assert (=> d!16203 (= (getValueByKey!131 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31409) e!47025)))

(declare-fun b!71846 () Bool)

(assert (=> b!71846 (= e!47025 (Some!136 (_2!1079 (h!2086 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))))

(declare-fun e!47026 () Option!137)

(declare-fun b!71848 () Bool)

(assert (=> b!71848 (= e!47026 (getValueByKey!131 (t!5044 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!31409))))

(declare-fun b!71847 () Bool)

(assert (=> b!71847 (= e!47025 e!47026)))

(declare-fun c!10526 () Bool)

(assert (=> b!71847 (= c!10526 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (not (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31409))))))

(declare-fun b!71849 () Bool)

(assert (=> b!71849 (= e!47026 None!135)))

(assert (= (and d!16203 c!10525) b!71846))

(assert (= (and d!16203 (not c!10525)) b!71847))

(assert (= (and b!71847 c!10526) b!71848))

(assert (= (and b!71847 (not c!10526)) b!71849))

(declare-fun m!69239 () Bool)

(assert (=> b!71848 m!69239))

(assert (=> b!71320 d!16203))

(declare-fun d!16205 () Bool)

(declare-fun e!47027 () Bool)

(assert (=> d!16205 e!47027))

(declare-fun res!38259 () Bool)

(assert (=> d!16205 (=> (not res!38259) (not e!47027))))

(declare-fun lt!31889 () ListLongMap!1433)

(assert (=> d!16205 (= res!38259 (contains!726 lt!31889 (_1!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun lt!31888 () List!1504)

(assert (=> d!16205 (= lt!31889 (ListLongMap!1434 lt!31888))))

(declare-fun lt!31887 () Unit!2006)

(declare-fun lt!31886 () Unit!2006)

(assert (=> d!16205 (= lt!31887 lt!31886)))

(assert (=> d!16205 (= (getValueByKey!131 lt!31888 (_1!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16205 (= lt!31886 (lemmaContainsTupThenGetReturnValue!50 lt!31888 (_1!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16205 (= lt!31888 (insertStrictlySorted!52 (toList!732 (ite c!10421 call!6196 (ite c!10417 call!6191 call!6195))) (_1!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16205 (= (+!95 (ite c!10421 call!6196 (ite c!10417 call!6191 call!6195)) (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) lt!31889)))

(declare-fun b!71850 () Bool)

(declare-fun res!38258 () Bool)

(assert (=> b!71850 (=> (not res!38258) (not e!47027))))

(assert (=> b!71850 (= res!38258 (= (getValueByKey!131 (toList!732 lt!31889) (_1!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))))

(declare-fun b!71851 () Bool)

(assert (=> b!71851 (= e!47027 (contains!728 (toList!732 lt!31889) (ite (or c!10421 c!10417) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (= (and d!16205 res!38259) b!71850))

(assert (= (and b!71850 res!38258) b!71851))

(declare-fun m!69241 () Bool)

(assert (=> d!16205 m!69241))

(declare-fun m!69243 () Bool)

(assert (=> d!16205 m!69243))

(declare-fun m!69245 () Bool)

(assert (=> d!16205 m!69245))

(declare-fun m!69247 () Bool)

(assert (=> d!16205 m!69247))

(declare-fun m!69249 () Bool)

(assert (=> b!71850 m!69249))

(declare-fun m!69251 () Bool)

(assert (=> b!71851 m!69251))

(assert (=> bm!6188 d!16205))

(declare-fun d!16207 () Bool)

(declare-fun lt!31890 () Bool)

(assert (=> d!16207 (= lt!31890 (select (content!74 lt!31425) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun e!47029 () Bool)

(assert (=> d!16207 (= lt!31890 e!47029)))

(declare-fun res!38261 () Bool)

(assert (=> d!16207 (=> (not res!38261) (not e!47029))))

(assert (=> d!16207 (= res!38261 ((_ is Cons!1500) lt!31425))))

(assert (=> d!16207 (= (contains!728 lt!31425 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))) lt!31890)))

(declare-fun b!71852 () Bool)

(declare-fun e!47028 () Bool)

(assert (=> b!71852 (= e!47029 e!47028)))

(declare-fun res!38260 () Bool)

(assert (=> b!71852 (=> res!38260 e!47028)))

(assert (=> b!71852 (= res!38260 (= (h!2086 lt!31425) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!71853 () Bool)

(assert (=> b!71853 (= e!47028 (contains!728 (t!5044 lt!31425) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(assert (= (and d!16207 res!38261) b!71852))

(assert (= (and b!71852 (not res!38260)) b!71853))

(declare-fun m!69253 () Bool)

(assert (=> d!16207 m!69253))

(declare-fun m!69255 () Bool)

(assert (=> d!16207 m!69255))

(declare-fun m!69257 () Bool)

(assert (=> b!71853 m!69257))

(assert (=> b!71223 d!16207))

(assert (=> b!71534 d!16051))

(assert (=> b!71534 d!16053))

(declare-fun d!16209 () Bool)

(declare-fun lt!31891 () Bool)

(assert (=> d!16209 (= lt!31891 (select (content!74 lt!31658) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun e!47031 () Bool)

(assert (=> d!16209 (= lt!31891 e!47031)))

(declare-fun res!38263 () Bool)

(assert (=> d!16209 (=> (not res!38263) (not e!47031))))

(assert (=> d!16209 (= res!38263 ((_ is Cons!1500) lt!31658))))

(assert (=> d!16209 (= (contains!728 lt!31658 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))) lt!31891)))

(declare-fun b!71854 () Bool)

(declare-fun e!47030 () Bool)

(assert (=> b!71854 (= e!47031 e!47030)))

(declare-fun res!38262 () Bool)

(assert (=> b!71854 (=> res!38262 e!47030)))

(assert (=> b!71854 (= res!38262 (= (h!2086 lt!31658) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!71855 () Bool)

(assert (=> b!71855 (= e!47030 (contains!728 (t!5044 lt!31658) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(assert (= (and d!16209 res!38263) b!71854))

(assert (= (and b!71854 (not res!38262)) b!71855))

(declare-fun m!69259 () Bool)

(assert (=> d!16209 m!69259))

(declare-fun m!69261 () Bool)

(assert (=> d!16209 m!69261))

(declare-fun m!69263 () Bool)

(assert (=> b!71855 m!69263))

(assert (=> b!71407 d!16209))

(declare-fun d!16211 () Bool)

(declare-fun c!10527 () Bool)

(assert (=> d!16211 (= c!10527 (and ((_ is Cons!1500) (toList!732 lt!31755)) (= (_1!1079 (h!2086 (toList!732 lt!31755))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47032 () Option!137)

(assert (=> d!16211 (= (getValueByKey!131 (toList!732 lt!31755) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) e!47032)))

(declare-fun b!71856 () Bool)

(assert (=> b!71856 (= e!47032 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31755)))))))

(declare-fun e!47033 () Option!137)

(declare-fun b!71858 () Bool)

(assert (=> b!71858 (= e!47033 (getValueByKey!131 (t!5044 (toList!732 lt!31755)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71857 () Bool)

(assert (=> b!71857 (= e!47032 e!47033)))

(declare-fun c!10528 () Bool)

(assert (=> b!71857 (= c!10528 (and ((_ is Cons!1500) (toList!732 lt!31755)) (not (= (_1!1079 (h!2086 (toList!732 lt!31755))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!71859 () Bool)

(assert (=> b!71859 (= e!47033 None!135)))

(assert (= (and d!16211 c!10527) b!71856))

(assert (= (and d!16211 (not c!10527)) b!71857))

(assert (= (and b!71857 c!10528) b!71858))

(assert (= (and b!71857 (not c!10528)) b!71859))

(declare-fun m!69265 () Bool)

(assert (=> b!71858 m!69265))

(assert (=> b!71535 d!16211))

(declare-fun d!16213 () Bool)

(declare-fun e!47034 () Bool)

(assert (=> d!16213 e!47034))

(declare-fun res!38264 () Bool)

(assert (=> d!16213 (=> res!38264 e!47034)))

(declare-fun lt!31894 () Bool)

(assert (=> d!16213 (= res!38264 (not lt!31894))))

(declare-fun lt!31892 () Bool)

(assert (=> d!16213 (= lt!31894 lt!31892)))

(declare-fun lt!31893 () Unit!2006)

(declare-fun e!47035 () Unit!2006)

(assert (=> d!16213 (= lt!31893 e!47035)))

(declare-fun c!10529 () Bool)

(assert (=> d!16213 (= c!10529 lt!31892)))

(assert (=> d!16213 (= lt!31892 (containsKey!135 (toList!732 lt!31725) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16213 (= (contains!726 lt!31725 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31894)))

(declare-fun b!71860 () Bool)

(declare-fun lt!31895 () Unit!2006)

(assert (=> b!71860 (= e!47035 lt!31895)))

(assert (=> b!71860 (= lt!31895 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31725) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> b!71860 (isDefined!85 (getValueByKey!131 (toList!732 lt!31725) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71861 () Bool)

(declare-fun Unit!2043 () Unit!2006)

(assert (=> b!71861 (= e!47035 Unit!2043)))

(declare-fun b!71862 () Bool)

(assert (=> b!71862 (= e!47034 (isDefined!85 (getValueByKey!131 (toList!732 lt!31725) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16213 c!10529) b!71860))

(assert (= (and d!16213 (not c!10529)) b!71861))

(assert (= (and d!16213 (not res!38264)) b!71862))

(declare-fun m!69267 () Bool)

(assert (=> d!16213 m!69267))

(declare-fun m!69269 () Bool)

(assert (=> b!71860 m!69269))

(assert (=> b!71860 m!68609))

(assert (=> b!71860 m!68609))

(declare-fun m!69271 () Bool)

(assert (=> b!71860 m!69271))

(assert (=> b!71862 m!68609))

(assert (=> b!71862 m!68609))

(assert (=> b!71862 m!69271))

(assert (=> d!15975 d!16213))

(declare-fun c!10530 () Bool)

(declare-fun d!16215 () Bool)

(assert (=> d!16215 (= c!10530 (and ((_ is Cons!1500) lt!31724) (= (_1!1079 (h!2086 lt!31724)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47036 () Option!137)

(assert (=> d!16215 (= (getValueByKey!131 lt!31724 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) e!47036)))

(declare-fun b!71863 () Bool)

(assert (=> b!71863 (= e!47036 (Some!136 (_2!1079 (h!2086 lt!31724))))))

(declare-fun e!47037 () Option!137)

(declare-fun b!71865 () Bool)

(assert (=> b!71865 (= e!47037 (getValueByKey!131 (t!5044 lt!31724) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71864 () Bool)

(assert (=> b!71864 (= e!47036 e!47037)))

(declare-fun c!10531 () Bool)

(assert (=> b!71864 (= c!10531 (and ((_ is Cons!1500) lt!31724) (not (= (_1!1079 (h!2086 lt!31724)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!71866 () Bool)

(assert (=> b!71866 (= e!47037 None!135)))

(assert (= (and d!16215 c!10530) b!71863))

(assert (= (and d!16215 (not c!10530)) b!71864))

(assert (= (and b!71864 c!10531) b!71865))

(assert (= (and b!71864 (not c!10531)) b!71866))

(declare-fun m!69273 () Bool)

(assert (=> b!71865 m!69273))

(assert (=> d!15975 d!16215))

(declare-fun d!16217 () Bool)

(assert (=> d!16217 (= (getValueByKey!131 lt!31724 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!31896 () Unit!2006)

(assert (=> d!16217 (= lt!31896 (choose!407 lt!31724 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun e!47038 () Bool)

(assert (=> d!16217 e!47038))

(declare-fun res!38265 () Bool)

(assert (=> d!16217 (=> (not res!38265) (not e!47038))))

(assert (=> d!16217 (= res!38265 (isStrictlySorted!286 lt!31724))))

(assert (=> d!16217 (= (lemmaContainsTupThenGetReturnValue!50 lt!31724 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31896)))

(declare-fun b!71867 () Bool)

(declare-fun res!38266 () Bool)

(assert (=> b!71867 (=> (not res!38266) (not e!47038))))

(assert (=> b!71867 (= res!38266 (containsKey!135 lt!31724 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71868 () Bool)

(assert (=> b!71868 (= e!47038 (contains!728 lt!31724 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16217 res!38265) b!71867))

(assert (= (and b!71867 res!38266) b!71868))

(assert (=> d!16217 m!68603))

(declare-fun m!69275 () Bool)

(assert (=> d!16217 m!69275))

(declare-fun m!69277 () Bool)

(assert (=> d!16217 m!69277))

(declare-fun m!69279 () Bool)

(assert (=> b!71867 m!69279))

(declare-fun m!69281 () Bool)

(assert (=> b!71868 m!69281))

(assert (=> d!15975 d!16217))

(declare-fun b!71869 () Bool)

(declare-fun e!47040 () List!1504)

(declare-fun call!6236 () List!1504)

(assert (=> b!71869 (= e!47040 call!6236)))

(declare-fun b!71870 () Bool)

(declare-fun res!38267 () Bool)

(declare-fun e!47039 () Bool)

(assert (=> b!71870 (=> (not res!38267) (not e!47039))))

(declare-fun lt!31897 () List!1504)

(assert (=> b!71870 (= res!38267 (containsKey!135 lt!31897 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71871 () Bool)

(declare-fun c!10533 () Bool)

(assert (=> b!71871 (= c!10533 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (bvsgt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47042 () List!1504)

(declare-fun e!47041 () List!1504)

(assert (=> b!71871 (= e!47042 e!47041)))

(declare-fun b!71873 () Bool)

(declare-fun call!6237 () List!1504)

(assert (=> b!71873 (= e!47042 call!6237)))

(declare-fun b!71874 () Bool)

(declare-fun call!6235 () List!1504)

(assert (=> b!71874 (= e!47041 call!6235)))

(declare-fun e!47043 () List!1504)

(declare-fun b!71875 () Bool)

(assert (=> b!71875 (= e!47043 (insertStrictlySorted!52 (t!5044 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun bm!6232 () Bool)

(assert (=> bm!6232 (= call!6235 call!6237)))

(declare-fun bm!6233 () Bool)

(assert (=> bm!6233 (= call!6237 call!6236)))

(declare-fun bm!6234 () Bool)

(declare-fun c!10532 () Bool)

(assert (=> bm!6234 (= call!6236 ($colon$colon!64 e!47043 (ite c!10532 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun c!10534 () Bool)

(assert (=> bm!6234 (= c!10534 c!10532)))

(declare-fun c!10535 () Bool)

(declare-fun b!71876 () Bool)

(assert (=> b!71876 (= e!47043 (ite c!10535 (t!5044 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (ite c!10533 (Cons!1500 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (t!5044 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) Nil!1501)))))

(declare-fun b!71872 () Bool)

(assert (=> b!71872 (= e!47041 call!6235)))

(declare-fun d!16219 () Bool)

(assert (=> d!16219 e!47039))

(declare-fun res!38268 () Bool)

(assert (=> d!16219 (=> (not res!38268) (not e!47039))))

(assert (=> d!16219 (= res!38268 (isStrictlySorted!286 lt!31897))))

(assert (=> d!16219 (= lt!31897 e!47040)))

(assert (=> d!16219 (= c!10532 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> d!16219 (isStrictlySorted!286 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16219 (= (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31897)))

(declare-fun b!71877 () Bool)

(assert (=> b!71877 (= e!47039 (contains!728 lt!31897 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71878 () Bool)

(assert (=> b!71878 (= e!47040 e!47042)))

(assert (=> b!71878 (= c!10535 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16219 c!10532) b!71869))

(assert (= (and d!16219 (not c!10532)) b!71878))

(assert (= (and b!71878 c!10535) b!71873))

(assert (= (and b!71878 (not c!10535)) b!71871))

(assert (= (and b!71871 c!10533) b!71872))

(assert (= (and b!71871 (not c!10533)) b!71874))

(assert (= (or b!71872 b!71874) bm!6232))

(assert (= (or b!71873 bm!6232) bm!6233))

(assert (= (or b!71869 bm!6233) bm!6234))

(assert (= (and bm!6234 c!10534) b!71875))

(assert (= (and bm!6234 (not c!10534)) b!71876))

(assert (= (and d!16219 res!38268) b!71870))

(assert (= (and b!71870 res!38267) b!71877))

(declare-fun m!69283 () Bool)

(assert (=> bm!6234 m!69283))

(declare-fun m!69285 () Bool)

(assert (=> b!71875 m!69285))

(declare-fun m!69287 () Bool)

(assert (=> b!71870 m!69287))

(declare-fun m!69289 () Bool)

(assert (=> b!71877 m!69289))

(declare-fun m!69291 () Bool)

(assert (=> d!16219 m!69291))

(declare-fun m!69293 () Bool)

(assert (=> d!16219 m!69293))

(assert (=> d!15975 d!16219))

(declare-fun b!71879 () Bool)

(declare-fun e!47048 () ListLongMap!1433)

(declare-fun call!6238 () ListLongMap!1433)

(assert (=> b!71879 (= e!47048 call!6238)))

(declare-fun b!71880 () Bool)

(declare-fun e!47050 () Bool)

(declare-fun e!47045 () Bool)

(assert (=> b!71880 (= e!47050 e!47045)))

(assert (=> b!71880 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun res!38270 () Bool)

(declare-fun lt!31899 () ListLongMap!1433)

(assert (=> b!71880 (= res!38270 (contains!726 lt!31899 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71880 (=> (not res!38270) (not e!47045))))

(declare-fun b!71882 () Bool)

(assert (=> b!71882 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> b!71882 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))))))))

(assert (=> b!71882 (= e!47045 (= (apply!74 lt!31899 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!47044 () Bool)

(declare-fun b!71883 () Bool)

(assert (=> b!71883 (= e!47044 (= lt!31899 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16))))))

(declare-fun bm!6235 () Bool)

(assert (=> bm!6235 (= call!6238 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16)))))

(declare-fun b!71884 () Bool)

(declare-fun e!47049 () ListLongMap!1433)

(assert (=> b!71884 (= e!47049 (ListLongMap!1434 Nil!1501))))

(declare-fun b!71885 () Bool)

(assert (=> b!71885 (= e!47044 (isEmpty!318 lt!31899))))

(declare-fun b!71886 () Bool)

(assert (=> b!71886 (= e!47050 e!47044)))

(declare-fun c!10537 () Bool)

(assert (=> b!71886 (= c!10537 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71887 () Bool)

(declare-fun e!47047 () Bool)

(assert (=> b!71887 (= e!47047 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71887 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!71888 () Bool)

(declare-fun lt!31904 () Unit!2006)

(declare-fun lt!31902 () Unit!2006)

(assert (=> b!71888 (= lt!31904 lt!31902)))

(declare-fun lt!31901 () (_ BitVec 64))

(declare-fun lt!31900 () (_ BitVec 64))

(declare-fun lt!31898 () V!2939)

(declare-fun lt!31903 () ListLongMap!1433)

(assert (=> b!71888 (not (contains!726 (+!95 lt!31903 (tuple2!2139 lt!31901 lt!31898)) lt!31900))))

(assert (=> b!71888 (= lt!31902 (addStillNotContains!25 lt!31903 lt!31901 lt!31898 lt!31900))))

(assert (=> b!71888 (= lt!31900 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71888 (= lt!31898 (get!1146 (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71888 (= lt!31901 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71888 (= lt!31903 call!6238)))

(assert (=> b!71888 (= e!47048 (+!95 call!6238 (tuple2!2139 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (get!1146 (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71889 () Bool)

(assert (=> b!71889 (= e!47049 e!47048)))

(declare-fun c!10539 () Bool)

(assert (=> b!71889 (= c!10539 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71890 () Bool)

(declare-fun e!47046 () Bool)

(assert (=> b!71890 (= e!47046 e!47050)))

(declare-fun c!10538 () Bool)

(assert (=> b!71890 (= c!10538 e!47047)))

(declare-fun res!38269 () Bool)

(assert (=> b!71890 (=> (not res!38269) (not e!47047))))

(assert (=> b!71890 (= res!38269 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71881 () Bool)

(declare-fun res!38272 () Bool)

(assert (=> b!71881 (=> (not res!38272) (not e!47046))))

(assert (=> b!71881 (= res!38272 (not (contains!726 lt!31899 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!16221 () Bool)

(assert (=> d!16221 e!47046))

(declare-fun res!38271 () Bool)

(assert (=> d!16221 (=> (not res!38271) (not e!47046))))

(assert (=> d!16221 (= res!38271 (not (contains!726 lt!31899 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16221 (= lt!31899 e!47049)))

(declare-fun c!10536 () Bool)

(assert (=> d!16221 (= c!10536 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16221 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16221 (= (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10291 (ite c!10296 lt!31324 lt!31328) (extraKeys!2055 newMap!16)) (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31899)))

(assert (= (and d!16221 c!10536) b!71884))

(assert (= (and d!16221 (not c!10536)) b!71889))

(assert (= (and b!71889 c!10539) b!71888))

(assert (= (and b!71889 (not c!10539)) b!71879))

(assert (= (or b!71888 b!71879) bm!6235))

(assert (= (and d!16221 res!38271) b!71881))

(assert (= (and b!71881 res!38272) b!71890))

(assert (= (and b!71890 res!38269) b!71887))

(assert (= (and b!71890 c!10538) b!71880))

(assert (= (and b!71890 (not c!10538)) b!71886))

(assert (= (and b!71880 res!38270) b!71882))

(assert (= (and b!71886 c!10537) b!71883))

(assert (= (and b!71886 (not c!10537)) b!71885))

(declare-fun b_lambda!3233 () Bool)

(assert (=> (not b_lambda!3233) (not b!71882)))

(assert (=> b!71882 t!5051))

(declare-fun b_and!4421 () Bool)

(assert (= b_and!4417 (and (=> t!5051 result!2669) b_and!4421)))

(assert (=> b!71882 t!5053))

(declare-fun b_and!4423 () Bool)

(assert (= b_and!4419 (and (=> t!5053 result!2671) b_and!4423)))

(declare-fun b_lambda!3235 () Bool)

(assert (=> (not b_lambda!3235) (not b!71888)))

(assert (=> b!71888 t!5051))

(declare-fun b_and!4425 () Bool)

(assert (= b_and!4421 (and (=> t!5051 result!2669) b_and!4425)))

(assert (=> b!71888 t!5053))

(declare-fun b_and!4427 () Bool)

(assert (= b_and!4423 (and (=> t!5053 result!2671) b_and!4427)))

(declare-fun m!69295 () Bool)

(assert (=> b!71883 m!69295))

(assert (=> b!71889 m!68067))

(assert (=> b!71889 m!68067))

(assert (=> b!71889 m!68077))

(assert (=> b!71882 m!68067))

(assert (=> b!71882 m!68529))

(assert (=> b!71882 m!68067))

(declare-fun m!69297 () Bool)

(assert (=> b!71882 m!69297))

(assert (=> b!71882 m!68811))

(assert (=> b!71882 m!68529))

(assert (=> b!71882 m!68813))

(assert (=> b!71882 m!68811))

(declare-fun m!69299 () Bool)

(assert (=> d!16221 m!69299))

(assert (=> d!16221 m!68107))

(assert (=> b!71880 m!68067))

(assert (=> b!71880 m!68067))

(declare-fun m!69301 () Bool)

(assert (=> b!71880 m!69301))

(assert (=> b!71887 m!68067))

(assert (=> b!71887 m!68067))

(assert (=> b!71887 m!68077))

(assert (=> bm!6235 m!69295))

(declare-fun m!69303 () Bool)

(assert (=> b!71881 m!69303))

(declare-fun m!69305 () Bool)

(assert (=> b!71885 m!69305))

(assert (=> b!71888 m!68067))

(assert (=> b!71888 m!68529))

(declare-fun m!69307 () Bool)

(assert (=> b!71888 m!69307))

(declare-fun m!69309 () Bool)

(assert (=> b!71888 m!69309))

(assert (=> b!71888 m!68811))

(assert (=> b!71888 m!68529))

(assert (=> b!71888 m!68813))

(assert (=> b!71888 m!68811))

(declare-fun m!69311 () Bool)

(assert (=> b!71888 m!69311))

(assert (=> b!71888 m!69307))

(declare-fun m!69313 () Bool)

(assert (=> b!71888 m!69313))

(assert (=> bm!6215 d!16221))

(declare-fun d!16223 () Bool)

(declare-fun e!47051 () Bool)

(assert (=> d!16223 e!47051))

(declare-fun res!38273 () Bool)

(assert (=> d!16223 (=> res!38273 e!47051)))

(declare-fun lt!31907 () Bool)

(assert (=> d!16223 (= res!38273 (not lt!31907))))

(declare-fun lt!31905 () Bool)

(assert (=> d!16223 (= lt!31907 lt!31905)))

(declare-fun lt!31906 () Unit!2006)

(declare-fun e!47052 () Unit!2006)

(assert (=> d!16223 (= lt!31906 e!47052)))

(declare-fun c!10540 () Bool)

(assert (=> d!16223 (= c!10540 lt!31905)))

(assert (=> d!16223 (= lt!31905 (containsKey!135 (toList!732 lt!31755) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16223 (= (contains!726 lt!31755 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31907)))

(declare-fun b!71891 () Bool)

(declare-fun lt!31908 () Unit!2006)

(assert (=> b!71891 (= e!47052 lt!31908)))

(assert (=> b!71891 (= lt!31908 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31755) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> b!71891 (isDefined!85 (getValueByKey!131 (toList!732 lt!31755) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71892 () Bool)

(declare-fun Unit!2044 () Unit!2006)

(assert (=> b!71892 (= e!47052 Unit!2044)))

(declare-fun b!71893 () Bool)

(assert (=> b!71893 (= e!47051 (isDefined!85 (getValueByKey!131 (toList!732 lt!31755) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16223 c!10540) b!71891))

(assert (= (and d!16223 (not c!10540)) b!71892))

(assert (= (and d!16223 (not res!38273)) b!71893))

(declare-fun m!69315 () Bool)

(assert (=> d!16223 m!69315))

(declare-fun m!69317 () Bool)

(assert (=> b!71891 m!69317))

(assert (=> b!71891 m!68681))

(assert (=> b!71891 m!68681))

(declare-fun m!69319 () Bool)

(assert (=> b!71891 m!69319))

(assert (=> b!71893 m!68681))

(assert (=> b!71893 m!68681))

(assert (=> b!71893 m!69319))

(assert (=> d!15995 d!16223))

(declare-fun c!10541 () Bool)

(declare-fun d!16225 () Bool)

(assert (=> d!16225 (= c!10541 (and ((_ is Cons!1500) lt!31754) (= (_1!1079 (h!2086 lt!31754)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47053 () Option!137)

(assert (=> d!16225 (= (getValueByKey!131 lt!31754 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) e!47053)))

(declare-fun b!71894 () Bool)

(assert (=> b!71894 (= e!47053 (Some!136 (_2!1079 (h!2086 lt!31754))))))

(declare-fun b!71896 () Bool)

(declare-fun e!47054 () Option!137)

(assert (=> b!71896 (= e!47054 (getValueByKey!131 (t!5044 lt!31754) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71895 () Bool)

(assert (=> b!71895 (= e!47053 e!47054)))

(declare-fun c!10542 () Bool)

(assert (=> b!71895 (= c!10542 (and ((_ is Cons!1500) lt!31754) (not (= (_1!1079 (h!2086 lt!31754)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!71897 () Bool)

(assert (=> b!71897 (= e!47054 None!135)))

(assert (= (and d!16225 c!10541) b!71894))

(assert (= (and d!16225 (not c!10541)) b!71895))

(assert (= (and b!71895 c!10542) b!71896))

(assert (= (and b!71895 (not c!10542)) b!71897))

(declare-fun m!69321 () Bool)

(assert (=> b!71896 m!69321))

(assert (=> d!15995 d!16225))

(declare-fun d!16227 () Bool)

(assert (=> d!16227 (= (getValueByKey!131 lt!31754 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!31909 () Unit!2006)

(assert (=> d!16227 (= lt!31909 (choose!407 lt!31754 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun e!47055 () Bool)

(assert (=> d!16227 e!47055))

(declare-fun res!38274 () Bool)

(assert (=> d!16227 (=> (not res!38274) (not e!47055))))

(assert (=> d!16227 (= res!38274 (isStrictlySorted!286 lt!31754))))

(assert (=> d!16227 (= (lemmaContainsTupThenGetReturnValue!50 lt!31754 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31909)))

(declare-fun b!71898 () Bool)

(declare-fun res!38275 () Bool)

(assert (=> b!71898 (=> (not res!38275) (not e!47055))))

(assert (=> b!71898 (= res!38275 (containsKey!135 lt!31754 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71899 () Bool)

(assert (=> b!71899 (= e!47055 (contains!728 lt!31754 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16227 res!38274) b!71898))

(assert (= (and b!71898 res!38275) b!71899))

(assert (=> d!16227 m!68675))

(declare-fun m!69323 () Bool)

(assert (=> d!16227 m!69323))

(declare-fun m!69325 () Bool)

(assert (=> d!16227 m!69325))

(declare-fun m!69327 () Bool)

(assert (=> b!71898 m!69327))

(declare-fun m!69329 () Bool)

(assert (=> b!71899 m!69329))

(assert (=> d!15995 d!16227))

(declare-fun b!71900 () Bool)

(declare-fun e!47057 () List!1504)

(declare-fun call!6240 () List!1504)

(assert (=> b!71900 (= e!47057 call!6240)))

(declare-fun b!71901 () Bool)

(declare-fun res!38276 () Bool)

(declare-fun e!47056 () Bool)

(assert (=> b!71901 (=> (not res!38276) (not e!47056))))

(declare-fun lt!31910 () List!1504)

(assert (=> b!71901 (= res!38276 (containsKey!135 lt!31910 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun c!10544 () Bool)

(declare-fun b!71902 () Bool)

(assert (=> b!71902 (= c!10544 (and ((_ is Cons!1500) (toList!732 call!6112)) (bvsgt (_1!1079 (h!2086 (toList!732 call!6112))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47059 () List!1504)

(declare-fun e!47058 () List!1504)

(assert (=> b!71902 (= e!47059 e!47058)))

(declare-fun b!71904 () Bool)

(declare-fun call!6241 () List!1504)

(assert (=> b!71904 (= e!47059 call!6241)))

(declare-fun b!71905 () Bool)

(declare-fun call!6239 () List!1504)

(assert (=> b!71905 (= e!47058 call!6239)))

(declare-fun e!47060 () List!1504)

(declare-fun b!71906 () Bool)

(assert (=> b!71906 (= e!47060 (insertStrictlySorted!52 (t!5044 (toList!732 call!6112)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun bm!6236 () Bool)

(assert (=> bm!6236 (= call!6239 call!6241)))

(declare-fun bm!6237 () Bool)

(assert (=> bm!6237 (= call!6241 call!6240)))

(declare-fun bm!6238 () Bool)

(declare-fun c!10543 () Bool)

(assert (=> bm!6238 (= call!6240 ($colon$colon!64 e!47060 (ite c!10543 (h!2086 (toList!732 call!6112)) (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun c!10545 () Bool)

(assert (=> bm!6238 (= c!10545 c!10543)))

(declare-fun c!10546 () Bool)

(declare-fun b!71907 () Bool)

(assert (=> b!71907 (= e!47060 (ite c!10546 (t!5044 (toList!732 call!6112)) (ite c!10544 (Cons!1500 (h!2086 (toList!732 call!6112)) (t!5044 (toList!732 call!6112))) Nil!1501)))))

(declare-fun b!71903 () Bool)

(assert (=> b!71903 (= e!47058 call!6239)))

(declare-fun d!16229 () Bool)

(assert (=> d!16229 e!47056))

(declare-fun res!38277 () Bool)

(assert (=> d!16229 (=> (not res!38277) (not e!47056))))

(assert (=> d!16229 (= res!38277 (isStrictlySorted!286 lt!31910))))

(assert (=> d!16229 (= lt!31910 e!47057)))

(assert (=> d!16229 (= c!10543 (and ((_ is Cons!1500) (toList!732 call!6112)) (bvslt (_1!1079 (h!2086 (toList!732 call!6112))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> d!16229 (isStrictlySorted!286 (toList!732 call!6112))))

(assert (=> d!16229 (= (insertStrictlySorted!52 (toList!732 call!6112) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31910)))

(declare-fun b!71908 () Bool)

(assert (=> b!71908 (= e!47056 (contains!728 lt!31910 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!71909 () Bool)

(assert (=> b!71909 (= e!47057 e!47059)))

(assert (=> b!71909 (= c!10546 (and ((_ is Cons!1500) (toList!732 call!6112)) (= (_1!1079 (h!2086 (toList!732 call!6112))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16229 c!10543) b!71900))

(assert (= (and d!16229 (not c!10543)) b!71909))

(assert (= (and b!71909 c!10546) b!71904))

(assert (= (and b!71909 (not c!10546)) b!71902))

(assert (= (and b!71902 c!10544) b!71903))

(assert (= (and b!71902 (not c!10544)) b!71905))

(assert (= (or b!71903 b!71905) bm!6236))

(assert (= (or b!71904 bm!6236) bm!6237))

(assert (= (or b!71900 bm!6237) bm!6238))

(assert (= (and bm!6238 c!10545) b!71906))

(assert (= (and bm!6238 (not c!10545)) b!71907))

(assert (= (and d!16229 res!38277) b!71901))

(assert (= (and b!71901 res!38276) b!71908))

(declare-fun m!69331 () Bool)

(assert (=> bm!6238 m!69331))

(declare-fun m!69333 () Bool)

(assert (=> b!71906 m!69333))

(declare-fun m!69335 () Bool)

(assert (=> b!71901 m!69335))

(declare-fun m!69337 () Bool)

(assert (=> b!71908 m!69337))

(declare-fun m!69339 () Bool)

(assert (=> d!16229 m!69339))

(declare-fun m!69341 () Bool)

(assert (=> d!16229 m!69341))

(assert (=> d!15995 d!16229))

(assert (=> b!71460 d!16045))

(declare-fun d!16231 () Bool)

(declare-fun e!47061 () Bool)

(assert (=> d!16231 e!47061))

(declare-fun res!38278 () Bool)

(assert (=> d!16231 (=> res!38278 e!47061)))

(declare-fun lt!31913 () Bool)

(assert (=> d!16231 (= res!38278 (not lt!31913))))

(declare-fun lt!31911 () Bool)

(assert (=> d!16231 (= lt!31913 lt!31911)))

(declare-fun lt!31912 () Unit!2006)

(declare-fun e!47062 () Unit!2006)

(assert (=> d!16231 (= lt!31912 e!47062)))

(declare-fun c!10547 () Bool)

(assert (=> d!16231 (= c!10547 lt!31911)))

(assert (=> d!16231 (= lt!31911 (containsKey!135 (toList!732 lt!31786) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16231 (= (contains!726 lt!31786 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!31913)))

(declare-fun b!71910 () Bool)

(declare-fun lt!31914 () Unit!2006)

(assert (=> b!71910 (= e!47062 lt!31914)))

(assert (=> b!71910 (= lt!31914 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31786) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71910 (isDefined!85 (getValueByKey!131 (toList!732 lt!31786) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71911 () Bool)

(declare-fun Unit!2045 () Unit!2006)

(assert (=> b!71911 (= e!47062 Unit!2045)))

(declare-fun b!71912 () Bool)

(assert (=> b!71912 (= e!47061 (isDefined!85 (getValueByKey!131 (toList!732 lt!31786) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16231 c!10547) b!71910))

(assert (= (and d!16231 (not c!10547)) b!71911))

(assert (= (and d!16231 (not res!38278)) b!71912))

(assert (=> d!16231 m!68067))

(declare-fun m!69343 () Bool)

(assert (=> d!16231 m!69343))

(assert (=> b!71910 m!68067))

(declare-fun m!69345 () Bool)

(assert (=> b!71910 m!69345))

(assert (=> b!71910 m!68067))

(declare-fun m!69347 () Bool)

(assert (=> b!71910 m!69347))

(assert (=> b!71910 m!69347))

(declare-fun m!69349 () Bool)

(assert (=> b!71910 m!69349))

(assert (=> b!71912 m!68067))

(assert (=> b!71912 m!69347))

(assert (=> b!71912 m!69347))

(assert (=> b!71912 m!69349))

(assert (=> b!71581 d!16231))

(declare-fun d!16233 () Bool)

(assert (=> d!16233 (= (get!1149 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71157 d!16233))

(declare-fun lt!31915 () Bool)

(declare-fun d!16235 () Bool)

(assert (=> d!16235 (= lt!31915 (select (content!74 (toList!732 lt!31725)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(declare-fun e!47064 () Bool)

(assert (=> d!16235 (= lt!31915 e!47064)))

(declare-fun res!38280 () Bool)

(assert (=> d!16235 (=> (not res!38280) (not e!47064))))

(assert (=> d!16235 (= res!38280 ((_ is Cons!1500) (toList!732 lt!31725)))))

(assert (=> d!16235 (= (contains!728 (toList!732 lt!31725) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!31915)))

(declare-fun b!71913 () Bool)

(declare-fun e!47063 () Bool)

(assert (=> b!71913 (= e!47064 e!47063)))

(declare-fun res!38279 () Bool)

(assert (=> b!71913 (=> res!38279 e!47063)))

(assert (=> b!71913 (= res!38279 (= (h!2086 (toList!732 lt!31725)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(declare-fun b!71914 () Bool)

(assert (=> b!71914 (= e!47063 (contains!728 (t!5044 (toList!732 lt!31725)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!16235 res!38280) b!71913))

(assert (= (and b!71913 (not res!38279)) b!71914))

(declare-fun m!69351 () Bool)

(assert (=> d!16235 m!69351))

(declare-fun m!69353 () Bool)

(assert (=> d!16235 m!69353))

(declare-fun m!69355 () Bool)

(assert (=> b!71914 m!69355))

(assert (=> b!71503 d!16235))

(assert (=> b!71510 d!16097))

(assert (=> b!71510 d!16099))

(declare-fun d!16237 () Bool)

(declare-fun res!38281 () Bool)

(declare-fun e!47065 () Bool)

(assert (=> d!16237 (=> res!38281 e!47065)))

(assert (=> d!16237 (= res!38281 (or ((_ is Nil!1501) lt!31711) ((_ is Nil!1501) (t!5044 lt!31711))))))

(assert (=> d!16237 (= (isStrictlySorted!286 lt!31711) e!47065)))

(declare-fun b!71915 () Bool)

(declare-fun e!47066 () Bool)

(assert (=> b!71915 (= e!47065 e!47066)))

(declare-fun res!38282 () Bool)

(assert (=> b!71915 (=> (not res!38282) (not e!47066))))

(assert (=> b!71915 (= res!38282 (bvslt (_1!1079 (h!2086 lt!31711)) (_1!1079 (h!2086 (t!5044 lt!31711)))))))

(declare-fun b!71916 () Bool)

(assert (=> b!71916 (= e!47066 (isStrictlySorted!286 (t!5044 lt!31711)))))

(assert (= (and d!16237 (not res!38281)) b!71915))

(assert (= (and b!71915 res!38282) b!71916))

(declare-fun m!69357 () Bool)

(assert (=> b!71916 m!69357))

(assert (=> d!15965 d!16237))

(declare-fun d!16239 () Bool)

(declare-fun res!38283 () Bool)

(declare-fun e!47067 () Bool)

(assert (=> d!16239 (=> res!38283 e!47067)))

(assert (=> d!16239 (= res!38283 (or ((_ is Nil!1501) (toList!732 (+!95 lt!31210 lt!31205))) ((_ is Nil!1501) (t!5044 (toList!732 (+!95 lt!31210 lt!31205))))))))

(assert (=> d!16239 (= (isStrictlySorted!286 (toList!732 (+!95 lt!31210 lt!31205))) e!47067)))

(declare-fun b!71917 () Bool)

(declare-fun e!47068 () Bool)

(assert (=> b!71917 (= e!47067 e!47068)))

(declare-fun res!38284 () Bool)

(assert (=> b!71917 (=> (not res!38284) (not e!47068))))

(assert (=> b!71917 (= res!38284 (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31205)))) (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))))))))

(declare-fun b!71918 () Bool)

(assert (=> b!71918 (= e!47068 (isStrictlySorted!286 (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))))))

(assert (= (and d!16239 (not res!38283)) b!71917))

(assert (= (and b!71917 res!38284) b!71918))

(declare-fun m!69359 () Bool)

(assert (=> b!71918 m!69359))

(assert (=> d!15965 d!16239))

(declare-fun d!16241 () Bool)

(declare-fun lt!31916 () Bool)

(assert (=> d!16241 (= lt!31916 (select (content!74 (toList!732 lt!31809)) (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun e!47070 () Bool)

(assert (=> d!16241 (= lt!31916 e!47070)))

(declare-fun res!38286 () Bool)

(assert (=> d!16241 (=> (not res!38286) (not e!47070))))

(assert (=> d!16241 (= res!38286 ((_ is Cons!1500) (toList!732 lt!31809)))))

(assert (=> d!16241 (= (contains!728 (toList!732 lt!31809) (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!31916)))

(declare-fun b!71919 () Bool)

(declare-fun e!47069 () Bool)

(assert (=> b!71919 (= e!47070 e!47069)))

(declare-fun res!38285 () Bool)

(assert (=> b!71919 (=> res!38285 e!47069)))

(assert (=> b!71919 (= res!38285 (= (h!2086 (toList!732 lt!31809)) (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!71920 () Bool)

(assert (=> b!71920 (= e!47069 (contains!728 (t!5044 (toList!732 lt!31809)) (ite c!10291 (ite c!10296 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (= (and d!16241 res!38286) b!71919))

(assert (= (and b!71919 (not res!38285)) b!71920))

(declare-fun m!69361 () Bool)

(assert (=> d!16241 m!69361))

(declare-fun m!69363 () Bool)

(assert (=> d!16241 m!69363))

(declare-fun m!69365 () Bool)

(assert (=> b!71920 m!69365))

(assert (=> b!71595 d!16241))

(declare-fun d!16243 () Bool)

(assert (=> d!16243 (= (isEmpty!318 lt!31476) (isEmpty!320 (toList!732 lt!31476)))))

(declare-fun bs!3079 () Bool)

(assert (= bs!3079 d!16243))

(declare-fun m!69367 () Bool)

(assert (=> bs!3079 m!69367))

(assert (=> b!71176 d!16243))

(declare-fun d!16245 () Bool)

(assert (=> d!16245 (= (get!1150 (getValueByKey!131 (toList!732 lt!31399) lt!31401)) (v!2521 (getValueByKey!131 (toList!732 lt!31399) lt!31401)))))

(assert (=> d!15909 d!16245))

(declare-fun d!16247 () Bool)

(declare-fun c!10548 () Bool)

(assert (=> d!16247 (= c!10548 (and ((_ is Cons!1500) (toList!732 lt!31399)) (= (_1!1079 (h!2086 (toList!732 lt!31399))) lt!31401)))))

(declare-fun e!47071 () Option!137)

(assert (=> d!16247 (= (getValueByKey!131 (toList!732 lt!31399) lt!31401) e!47071)))

(declare-fun b!71921 () Bool)

(assert (=> b!71921 (= e!47071 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31399)))))))

(declare-fun b!71923 () Bool)

(declare-fun e!47072 () Option!137)

(assert (=> b!71923 (= e!47072 (getValueByKey!131 (t!5044 (toList!732 lt!31399)) lt!31401))))

(declare-fun b!71922 () Bool)

(assert (=> b!71922 (= e!47071 e!47072)))

(declare-fun c!10549 () Bool)

(assert (=> b!71922 (= c!10549 (and ((_ is Cons!1500) (toList!732 lt!31399)) (not (= (_1!1079 (h!2086 (toList!732 lt!31399))) lt!31401))))))

(declare-fun b!71924 () Bool)

(assert (=> b!71924 (= e!47072 None!135)))

(assert (= (and d!16247 c!10548) b!71921))

(assert (= (and d!16247 (not c!10548)) b!71922))

(assert (= (and b!71922 c!10549) b!71923))

(assert (= (and b!71922 (not c!10549)) b!71924))

(declare-fun m!69369 () Bool)

(assert (=> b!71923 m!69369))

(assert (=> d!15909 d!16247))

(declare-fun d!16249 () Bool)

(assert (=> d!16249 (= ($colon$colon!64 e!46791 (ite c!10427 (h!2086 (toList!732 (+!95 lt!31210 lt!31205))) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200)))) (Cons!1500 (ite c!10427 (h!2086 (toList!732 (+!95 lt!31210 lt!31205))) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))) e!46791))))

(assert (=> bm!6196 d!16249))

(assert (=> d!15855 d!15787))

(declare-fun lt!31917 () Bool)

(declare-fun d!16251 () Bool)

(assert (=> d!16251 (= lt!31917 (select (content!75 (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!47073 () Bool)

(assert (=> d!16251 (= lt!31917 e!47073)))

(declare-fun res!38287 () Bool)

(assert (=> d!16251 (=> (not res!38287) (not e!47073))))

(assert (=> d!16251 (= res!38287 ((_ is Cons!1499) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)))))

(assert (=> d!16251 (= (contains!727 (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!31917)))

(declare-fun b!71925 () Bool)

(declare-fun e!47074 () Bool)

(assert (=> b!71925 (= e!47073 e!47074)))

(declare-fun res!38288 () Bool)

(assert (=> b!71925 (=> res!38288 e!47074)))

(assert (=> b!71925 (= res!38288 (= (h!2085 (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71926 () Bool)

(assert (=> b!71926 (= e!47074 (contains!727 (t!5043 (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!16251 res!38287) b!71925))

(assert (= (and b!71925 (not res!38288)) b!71926))

(declare-fun m!69371 () Bool)

(assert (=> d!16251 m!69371))

(assert (=> d!16251 m!68751))

(declare-fun m!69373 () Bool)

(assert (=> d!16251 m!69373))

(assert (=> b!71926 m!68751))

(declare-fun m!69375 () Bool)

(assert (=> b!71926 m!69375))

(assert (=> b!71563 d!16251))

(declare-fun b!71927 () Bool)

(declare-fun e!47076 () List!1504)

(declare-fun call!6243 () List!1504)

(assert (=> b!71927 (= e!47076 call!6243)))

(declare-fun b!71928 () Bool)

(declare-fun res!38289 () Bool)

(declare-fun e!47075 () Bool)

(assert (=> b!71928 (=> (not res!38289) (not e!47075))))

(declare-fun lt!31918 () List!1504)

(assert (=> b!71928 (= res!38289 (containsKey!135 lt!31918 (_1!1079 lt!31205)))))

(declare-fun c!10551 () Bool)

(declare-fun b!71929 () Bool)

(assert (=> b!71929 (= c!10551 (and ((_ is Cons!1500) (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) (bvsgt (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))))) (_1!1079 lt!31205))))))

(declare-fun e!47078 () List!1504)

(declare-fun e!47077 () List!1504)

(assert (=> b!71929 (= e!47078 e!47077)))

(declare-fun b!71931 () Bool)

(declare-fun call!6244 () List!1504)

(assert (=> b!71931 (= e!47078 call!6244)))

(declare-fun b!71932 () Bool)

(declare-fun call!6242 () List!1504)

(assert (=> b!71932 (= e!47077 call!6242)))

(declare-fun e!47079 () List!1504)

(declare-fun b!71933 () Bool)

(assert (=> b!71933 (= e!47079 (insertStrictlySorted!52 (t!5044 (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(declare-fun bm!6239 () Bool)

(assert (=> bm!6239 (= call!6242 call!6244)))

(declare-fun bm!6240 () Bool)

(assert (=> bm!6240 (= call!6244 call!6243)))

(declare-fun c!10550 () Bool)

(declare-fun bm!6241 () Bool)

(assert (=> bm!6241 (= call!6243 ($colon$colon!64 e!47079 (ite c!10550 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205)))))))

(declare-fun c!10552 () Bool)

(assert (=> bm!6241 (= c!10552 c!10550)))

(declare-fun c!10553 () Bool)

(declare-fun b!71934 () Bool)

(assert (=> b!71934 (= e!47079 (ite c!10553 (t!5044 (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) (ite c!10551 (Cons!1500 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) (t!5044 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))))) Nil!1501)))))

(declare-fun b!71930 () Bool)

(assert (=> b!71930 (= e!47077 call!6242)))

(declare-fun d!16253 () Bool)

(assert (=> d!16253 e!47075))

(declare-fun res!38290 () Bool)

(assert (=> d!16253 (=> (not res!38290) (not e!47075))))

(assert (=> d!16253 (= res!38290 (isStrictlySorted!286 lt!31918))))

(assert (=> d!16253 (= lt!31918 e!47076)))

(assert (=> d!16253 (= c!10550 (and ((_ is Cons!1500) (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) (bvslt (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))))) (_1!1079 lt!31205))))))

(assert (=> d!16253 (isStrictlySorted!286 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))))))

(assert (=> d!16253 (= (insertStrictlySorted!52 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))) (_1!1079 lt!31205) (_2!1079 lt!31205)) lt!31918)))

(declare-fun b!71935 () Bool)

(assert (=> b!71935 (= e!47075 (contains!728 lt!31918 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!71936 () Bool)

(assert (=> b!71936 (= e!47076 e!47078)))

(assert (=> b!71936 (= c!10553 (and ((_ is Cons!1500) (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))) (= (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31200))))) (_1!1079 lt!31205))))))

(assert (= (and d!16253 c!10550) b!71927))

(assert (= (and d!16253 (not c!10550)) b!71936))

(assert (= (and b!71936 c!10553) b!71931))

(assert (= (and b!71936 (not c!10553)) b!71929))

(assert (= (and b!71929 c!10551) b!71930))

(assert (= (and b!71929 (not c!10551)) b!71932))

(assert (= (or b!71930 b!71932) bm!6239))

(assert (= (or b!71931 bm!6239) bm!6240))

(assert (= (or b!71927 bm!6240) bm!6241))

(assert (= (and bm!6241 c!10552) b!71933))

(assert (= (and bm!6241 (not c!10552)) b!71934))

(assert (= (and d!16253 res!38290) b!71928))

(assert (= (and b!71928 res!38289) b!71935))

(declare-fun m!69377 () Bool)

(assert (=> bm!6241 m!69377))

(declare-fun m!69379 () Bool)

(assert (=> b!71933 m!69379))

(declare-fun m!69381 () Bool)

(assert (=> b!71928 m!69381))

(declare-fun m!69383 () Bool)

(assert (=> b!71935 m!69383))

(declare-fun m!69385 () Bool)

(assert (=> d!16253 m!69385))

(declare-fun m!69387 () Bool)

(assert (=> d!16253 m!69387))

(assert (=> b!71250 d!16253))

(declare-fun d!16255 () Bool)

(declare-fun res!38292 () Bool)

(declare-fun e!47082 () Bool)

(assert (=> d!16255 (=> res!38292 e!47082)))

(assert (=> d!16255 (= res!38292 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!16255 (= (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000 Nil!1500) e!47082)))

(declare-fun b!71937 () Bool)

(declare-fun e!47081 () Bool)

(assert (=> b!71937 (= e!47081 (contains!727 Nil!1500 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!71938 () Bool)

(declare-fun e!47080 () Bool)

(declare-fun call!6245 () Bool)

(assert (=> b!71938 (= e!47080 call!6245)))

(declare-fun bm!6242 () Bool)

(declare-fun c!10554 () Bool)

(assert (=> bm!6242 (= call!6245 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10554 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000) Nil!1500) Nil!1500)))))

(declare-fun b!71939 () Bool)

(declare-fun e!47083 () Bool)

(assert (=> b!71939 (= e!47082 e!47083)))

(declare-fun res!38293 () Bool)

(assert (=> b!71939 (=> (not res!38293) (not e!47083))))

(assert (=> b!71939 (= res!38293 (not e!47081))))

(declare-fun res!38291 () Bool)

(assert (=> b!71939 (=> (not res!38291) (not e!47081))))

(assert (=> b!71939 (= res!38291 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!71940 () Bool)

(assert (=> b!71940 (= e!47080 call!6245)))

(declare-fun b!71941 () Bool)

(assert (=> b!71941 (= e!47083 e!47080)))

(assert (=> b!71941 (= c!10554 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!16255 (not res!38292)) b!71939))

(assert (= (and b!71939 res!38291) b!71937))

(assert (= (and b!71939 res!38293) b!71941))

(assert (= (and b!71941 c!10554) b!71940))

(assert (= (and b!71941 (not c!10554)) b!71938))

(assert (= (or b!71940 b!71938) bm!6242))

(assert (=> b!71937 m!68935))

(assert (=> b!71937 m!68935))

(declare-fun m!69389 () Bool)

(assert (=> b!71937 m!69389))

(assert (=> bm!6242 m!68935))

(declare-fun m!69391 () Bool)

(assert (=> bm!6242 m!69391))

(assert (=> b!71939 m!68935))

(assert (=> b!71939 m!68935))

(assert (=> b!71939 m!68937))

(assert (=> b!71941 m!68935))

(assert (=> b!71941 m!68935))

(assert (=> b!71941 m!68937))

(assert (=> b!71499 d!16255))

(declare-fun d!16257 () Bool)

(assert (=> d!16257 (= (apply!74 (+!95 lt!31399 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31401) (apply!74 lt!31399 lt!31401))))

(assert (=> d!16257 true))

(declare-fun _$34!799 () Unit!2006)

(assert (=> d!16257 (= (choose!410 lt!31399 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31401) _$34!799)))

(declare-fun bs!3080 () Bool)

(assert (= bs!3080 d!16257))

(assert (=> bs!3080 m!67943))

(assert (=> bs!3080 m!67943))

(assert (=> bs!3080 m!67945))

(assert (=> bs!3080 m!67927))

(assert (=> d!15901 d!16257))

(declare-fun d!16259 () Bool)

(declare-fun e!47084 () Bool)

(assert (=> d!16259 e!47084))

(declare-fun res!38294 () Bool)

(assert (=> d!16259 (=> res!38294 e!47084)))

(declare-fun lt!31921 () Bool)

(assert (=> d!16259 (= res!38294 (not lt!31921))))

(declare-fun lt!31919 () Bool)

(assert (=> d!16259 (= lt!31921 lt!31919)))

(declare-fun lt!31920 () Unit!2006)

(declare-fun e!47085 () Unit!2006)

(assert (=> d!16259 (= lt!31920 e!47085)))

(declare-fun c!10555 () Bool)

(assert (=> d!16259 (= c!10555 lt!31919)))

(assert (=> d!16259 (= lt!31919 (containsKey!135 (toList!732 lt!31399) lt!31401))))

(assert (=> d!16259 (= (contains!726 lt!31399 lt!31401) lt!31921)))

(declare-fun b!71943 () Bool)

(declare-fun lt!31922 () Unit!2006)

(assert (=> b!71943 (= e!47085 lt!31922)))

(assert (=> b!71943 (= lt!31922 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31399) lt!31401))))

(assert (=> b!71943 (isDefined!85 (getValueByKey!131 (toList!732 lt!31399) lt!31401))))

(declare-fun b!71944 () Bool)

(declare-fun Unit!2046 () Unit!2006)

(assert (=> b!71944 (= e!47085 Unit!2046)))

(declare-fun b!71945 () Bool)

(assert (=> b!71945 (= e!47084 (isDefined!85 (getValueByKey!131 (toList!732 lt!31399) lt!31401)))))

(assert (= (and d!16259 c!10555) b!71943))

(assert (= (and d!16259 (not c!10555)) b!71944))

(assert (= (and d!16259 (not res!38294)) b!71945))

(declare-fun m!69393 () Bool)

(assert (=> d!16259 m!69393))

(declare-fun m!69395 () Bool)

(assert (=> b!71943 m!69395))

(assert (=> b!71943 m!68351))

(assert (=> b!71943 m!68351))

(declare-fun m!69397 () Bool)

(assert (=> b!71943 m!69397))

(assert (=> b!71945 m!68351))

(assert (=> b!71945 m!68351))

(assert (=> b!71945 m!69397))

(assert (=> d!15901 d!16259))

(assert (=> d!15901 d!15907))

(assert (=> d!15901 d!15909))

(assert (=> d!15901 d!15911))

(declare-fun d!16261 () Bool)

(assert (=> d!16261 (= (apply!74 (+!95 lt!31762 (tuple2!2139 lt!31763 (minValue!2096 newMap!16))) lt!31764) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31762 (tuple2!2139 lt!31763 (minValue!2096 newMap!16)))) lt!31764)))))

(declare-fun bs!3081 () Bool)

(assert (= bs!3081 d!16261))

(declare-fun m!69399 () Bool)

(assert (=> bs!3081 m!69399))

(assert (=> bs!3081 m!69399))

(declare-fun m!69401 () Bool)

(assert (=> bs!3081 m!69401))

(assert (=> b!71554 d!16261))

(declare-fun d!16263 () Bool)

(assert (=> d!16263 (= (apply!74 (+!95 lt!31761 (tuple2!2139 lt!31757 (minValue!2096 newMap!16))) lt!31758) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31761 (tuple2!2139 lt!31757 (minValue!2096 newMap!16)))) lt!31758)))))

(declare-fun bs!3082 () Bool)

(assert (= bs!3082 d!16263))

(declare-fun m!69403 () Bool)

(assert (=> bs!3082 m!69403))

(assert (=> bs!3082 m!69403))

(declare-fun m!69405 () Bool)

(assert (=> bs!3082 m!69405))

(assert (=> b!71554 d!16263))

(declare-fun d!16265 () Bool)

(assert (=> d!16265 (= (apply!74 lt!31771 lt!31774) (get!1150 (getValueByKey!131 (toList!732 lt!31771) lt!31774)))))

(declare-fun bs!3083 () Bool)

(assert (= bs!3083 d!16265))

(declare-fun m!69407 () Bool)

(assert (=> bs!3083 m!69407))

(assert (=> bs!3083 m!69407))

(declare-fun m!69409 () Bool)

(assert (=> bs!3083 m!69409))

(assert (=> b!71554 d!16265))

(declare-fun d!16267 () Bool)

(declare-fun e!47086 () Bool)

(assert (=> d!16267 e!47086))

(declare-fun res!38296 () Bool)

(assert (=> d!16267 (=> (not res!38296) (not e!47086))))

(declare-fun lt!31926 () ListLongMap!1433)

(assert (=> d!16267 (= res!38296 (contains!726 lt!31926 (_1!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16)))))))

(declare-fun lt!31925 () List!1504)

(assert (=> d!16267 (= lt!31926 (ListLongMap!1434 lt!31925))))

(declare-fun lt!31924 () Unit!2006)

(declare-fun lt!31923 () Unit!2006)

(assert (=> d!16267 (= lt!31924 lt!31923)))

(assert (=> d!16267 (= (getValueByKey!131 lt!31925 (_1!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16)))))))

(assert (=> d!16267 (= lt!31923 (lemmaContainsTupThenGetReturnValue!50 lt!31925 (_1!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16)))))))

(assert (=> d!16267 (= lt!31925 (insertStrictlySorted!52 (toList!732 lt!31762) (_1!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16)))))))

(assert (=> d!16267 (= (+!95 lt!31762 (tuple2!2139 lt!31763 (minValue!2096 newMap!16))) lt!31926)))

(declare-fun b!71946 () Bool)

(declare-fun res!38295 () Bool)

(assert (=> b!71946 (=> (not res!38295) (not e!47086))))

(assert (=> b!71946 (= res!38295 (= (getValueByKey!131 (toList!732 lt!31926) (_1!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31763 (minValue!2096 newMap!16))))))))

(declare-fun b!71947 () Bool)

(assert (=> b!71947 (= e!47086 (contains!728 (toList!732 lt!31926) (tuple2!2139 lt!31763 (minValue!2096 newMap!16))))))

(assert (= (and d!16267 res!38296) b!71946))

(assert (= (and b!71946 res!38295) b!71947))

(declare-fun m!69411 () Bool)

(assert (=> d!16267 m!69411))

(declare-fun m!69413 () Bool)

(assert (=> d!16267 m!69413))

(declare-fun m!69415 () Bool)

(assert (=> d!16267 m!69415))

(declare-fun m!69417 () Bool)

(assert (=> d!16267 m!69417))

(declare-fun m!69419 () Bool)

(assert (=> b!71946 m!69419))

(declare-fun m!69421 () Bool)

(assert (=> b!71947 m!69421))

(assert (=> b!71554 d!16267))

(declare-fun d!16269 () Bool)

(assert (=> d!16269 (contains!726 (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))) lt!31772)))

(declare-fun lt!31927 () Unit!2006)

(assert (=> d!16269 (= lt!31927 (choose!411 lt!31760 lt!31777 (zeroValue!2096 newMap!16) lt!31772))))

(assert (=> d!16269 (contains!726 lt!31760 lt!31772)))

(assert (=> d!16269 (= (addStillContains!50 lt!31760 lt!31777 (zeroValue!2096 newMap!16) lt!31772) lt!31927)))

(declare-fun bs!3084 () Bool)

(assert (= bs!3084 d!16269))

(assert (=> bs!3084 m!68703))

(assert (=> bs!3084 m!68703))

(assert (=> bs!3084 m!68711))

(declare-fun m!69423 () Bool)

(assert (=> bs!3084 m!69423))

(declare-fun m!69425 () Bool)

(assert (=> bs!3084 m!69425))

(assert (=> b!71554 d!16269))

(declare-fun d!16271 () Bool)

(assert (=> d!16271 (= (apply!74 (+!95 lt!31771 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))) lt!31774) (apply!74 lt!31771 lt!31774))))

(declare-fun lt!31928 () Unit!2006)

(assert (=> d!16271 (= lt!31928 (choose!410 lt!31771 lt!31767 (zeroValue!2096 newMap!16) lt!31774))))

(declare-fun e!47087 () Bool)

(assert (=> d!16271 e!47087))

(declare-fun res!38297 () Bool)

(assert (=> d!16271 (=> (not res!38297) (not e!47087))))

(assert (=> d!16271 (= res!38297 (contains!726 lt!31771 lt!31774))))

(assert (=> d!16271 (= (addApplyDifferent!50 lt!31771 lt!31767 (zeroValue!2096 newMap!16) lt!31774) lt!31928)))

(declare-fun b!71948 () Bool)

(assert (=> b!71948 (= e!47087 (not (= lt!31774 lt!31767)))))

(assert (= (and d!16271 res!38297) b!71948))

(assert (=> d!16271 m!68721))

(assert (=> d!16271 m!68723))

(assert (=> d!16271 m!68707))

(declare-fun m!69427 () Bool)

(assert (=> d!16271 m!69427))

(declare-fun m!69429 () Bool)

(assert (=> d!16271 m!69429))

(assert (=> d!16271 m!68721))

(assert (=> b!71554 d!16271))

(declare-fun d!16273 () Bool)

(declare-fun e!47088 () Bool)

(assert (=> d!16273 e!47088))

(declare-fun res!38299 () Bool)

(assert (=> d!16273 (=> (not res!38299) (not e!47088))))

(declare-fun lt!31932 () ListLongMap!1433)

(assert (=> d!16273 (= res!38299 (contains!726 lt!31932 (_1!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!31931 () List!1504)

(assert (=> d!16273 (= lt!31932 (ListLongMap!1434 lt!31931))))

(declare-fun lt!31930 () Unit!2006)

(declare-fun lt!31929 () Unit!2006)

(assert (=> d!16273 (= lt!31930 lt!31929)))

(assert (=> d!16273 (= (getValueByKey!131 lt!31931 (_1!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16273 (= lt!31929 (lemmaContainsTupThenGetReturnValue!50 lt!31931 (_1!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16273 (= lt!31931 (insertStrictlySorted!52 (toList!732 lt!31760) (_1!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16273 (= (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))) lt!31932)))

(declare-fun b!71949 () Bool)

(declare-fun res!38298 () Bool)

(assert (=> b!71949 (=> (not res!38298) (not e!47088))))

(assert (=> b!71949 (= res!38298 (= (getValueByKey!131 (toList!732 lt!31932) (_1!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))))))))

(declare-fun b!71950 () Bool)

(assert (=> b!71950 (= e!47088 (contains!728 (toList!732 lt!31932) (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16273 res!38299) b!71949))

(assert (= (and b!71949 res!38298) b!71950))

(declare-fun m!69431 () Bool)

(assert (=> d!16273 m!69431))

(declare-fun m!69433 () Bool)

(assert (=> d!16273 m!69433))

(declare-fun m!69435 () Bool)

(assert (=> d!16273 m!69435))

(declare-fun m!69437 () Bool)

(assert (=> d!16273 m!69437))

(declare-fun m!69439 () Bool)

(assert (=> b!71949 m!69439))

(declare-fun m!69441 () Bool)

(assert (=> b!71950 m!69441))

(assert (=> b!71554 d!16273))

(declare-fun d!16275 () Bool)

(declare-fun e!47089 () Bool)

(assert (=> d!16275 e!47089))

(declare-fun res!38301 () Bool)

(assert (=> d!16275 (=> (not res!38301) (not e!47089))))

(declare-fun lt!31936 () ListLongMap!1433)

(assert (=> d!16275 (= res!38301 (contains!726 lt!31936 (_1!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!31935 () List!1504)

(assert (=> d!16275 (= lt!31936 (ListLongMap!1434 lt!31935))))

(declare-fun lt!31934 () Unit!2006)

(declare-fun lt!31933 () Unit!2006)

(assert (=> d!16275 (= lt!31934 lt!31933)))

(assert (=> d!16275 (= (getValueByKey!131 lt!31935 (_1!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16275 (= lt!31933 (lemmaContainsTupThenGetReturnValue!50 lt!31935 (_1!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16275 (= lt!31935 (insertStrictlySorted!52 (toList!732 lt!31771) (_1!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16275 (= (+!95 lt!31771 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))) lt!31936)))

(declare-fun b!71951 () Bool)

(declare-fun res!38300 () Bool)

(assert (=> b!71951 (=> (not res!38300) (not e!47089))))

(assert (=> b!71951 (= res!38300 (= (getValueByKey!131 (toList!732 lt!31936) (_1!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))))))))

(declare-fun b!71952 () Bool)

(assert (=> b!71952 (= e!47089 (contains!728 (toList!732 lt!31936) (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16275 res!38301) b!71951))

(assert (= (and b!71951 res!38300) b!71952))

(declare-fun m!69443 () Bool)

(assert (=> d!16275 m!69443))

(declare-fun m!69445 () Bool)

(assert (=> d!16275 m!69445))

(declare-fun m!69447 () Bool)

(assert (=> d!16275 m!69447))

(declare-fun m!69449 () Bool)

(assert (=> d!16275 m!69449))

(declare-fun m!69451 () Bool)

(assert (=> b!71951 m!69451))

(declare-fun m!69453 () Bool)

(assert (=> b!71952 m!69453))

(assert (=> b!71554 d!16275))

(declare-fun d!16277 () Bool)

(assert (=> d!16277 (= (apply!74 (+!95 lt!31762 (tuple2!2139 lt!31763 (minValue!2096 newMap!16))) lt!31764) (apply!74 lt!31762 lt!31764))))

(declare-fun lt!31937 () Unit!2006)

(assert (=> d!16277 (= lt!31937 (choose!410 lt!31762 lt!31763 (minValue!2096 newMap!16) lt!31764))))

(declare-fun e!47090 () Bool)

(assert (=> d!16277 e!47090))

(declare-fun res!38302 () Bool)

(assert (=> d!16277 (=> (not res!38302) (not e!47090))))

(assert (=> d!16277 (= res!38302 (contains!726 lt!31762 lt!31764))))

(assert (=> d!16277 (= (addApplyDifferent!50 lt!31762 lt!31763 (minValue!2096 newMap!16) lt!31764) lt!31937)))

(declare-fun b!71953 () Bool)

(assert (=> b!71953 (= e!47090 (not (= lt!31764 lt!31763)))))

(assert (= (and d!16277 res!38302) b!71953))

(assert (=> d!16277 m!68717))

(assert (=> d!16277 m!68719))

(assert (=> d!16277 m!68701))

(declare-fun m!69455 () Bool)

(assert (=> d!16277 m!69455))

(declare-fun m!69457 () Bool)

(assert (=> d!16277 m!69457))

(assert (=> d!16277 m!68717))

(assert (=> b!71554 d!16277))

(declare-fun d!16279 () Bool)

(assert (=> d!16279 (= (apply!74 (+!95 lt!31771 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16))) lt!31774) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31771 (tuple2!2139 lt!31767 (zeroValue!2096 newMap!16)))) lt!31774)))))

(declare-fun bs!3085 () Bool)

(assert (= bs!3085 d!16279))

(declare-fun m!69459 () Bool)

(assert (=> bs!3085 m!69459))

(assert (=> bs!3085 m!69459))

(declare-fun m!69461 () Bool)

(assert (=> bs!3085 m!69461))

(assert (=> b!71554 d!16279))

(declare-fun d!16281 () Bool)

(declare-fun e!47091 () Bool)

(assert (=> d!16281 e!47091))

(declare-fun res!38303 () Bool)

(assert (=> d!16281 (=> res!38303 e!47091)))

(declare-fun lt!31940 () Bool)

(assert (=> d!16281 (= res!38303 (not lt!31940))))

(declare-fun lt!31938 () Bool)

(assert (=> d!16281 (= lt!31940 lt!31938)))

(declare-fun lt!31939 () Unit!2006)

(declare-fun e!47092 () Unit!2006)

(assert (=> d!16281 (= lt!31939 e!47092)))

(declare-fun c!10556 () Bool)

(assert (=> d!16281 (= c!10556 lt!31938)))

(assert (=> d!16281 (= lt!31938 (containsKey!135 (toList!732 (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))) lt!31772))))

(assert (=> d!16281 (= (contains!726 (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16))) lt!31772) lt!31940)))

(declare-fun b!71954 () Bool)

(declare-fun lt!31941 () Unit!2006)

(assert (=> b!71954 (= e!47092 lt!31941)))

(assert (=> b!71954 (= lt!31941 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))) lt!31772))))

(assert (=> b!71954 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))) lt!31772))))

(declare-fun b!71955 () Bool)

(declare-fun Unit!2047 () Unit!2006)

(assert (=> b!71955 (= e!47092 Unit!2047)))

(declare-fun b!71956 () Bool)

(assert (=> b!71956 (= e!47091 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31760 (tuple2!2139 lt!31777 (zeroValue!2096 newMap!16)))) lt!31772)))))

(assert (= (and d!16281 c!10556) b!71954))

(assert (= (and d!16281 (not c!10556)) b!71955))

(assert (= (and d!16281 (not res!38303)) b!71956))

(declare-fun m!69463 () Bool)

(assert (=> d!16281 m!69463))

(declare-fun m!69465 () Bool)

(assert (=> b!71954 m!69465))

(declare-fun m!69467 () Bool)

(assert (=> b!71954 m!69467))

(assert (=> b!71954 m!69467))

(declare-fun m!69469 () Bool)

(assert (=> b!71954 m!69469))

(assert (=> b!71956 m!69467))

(assert (=> b!71956 m!69467))

(assert (=> b!71956 m!69469))

(assert (=> b!71554 d!16281))

(declare-fun d!16283 () Bool)

(assert (=> d!16283 (= (apply!74 (+!95 lt!31761 (tuple2!2139 lt!31757 (minValue!2096 newMap!16))) lt!31758) (apply!74 lt!31761 lt!31758))))

(declare-fun lt!31942 () Unit!2006)

(assert (=> d!16283 (= lt!31942 (choose!410 lt!31761 lt!31757 (minValue!2096 newMap!16) lt!31758))))

(declare-fun e!47093 () Bool)

(assert (=> d!16283 e!47093))

(declare-fun res!38304 () Bool)

(assert (=> d!16283 (=> (not res!38304) (not e!47093))))

(assert (=> d!16283 (= res!38304 (contains!726 lt!31761 lt!31758))))

(assert (=> d!16283 (= (addApplyDifferent!50 lt!31761 lt!31757 (minValue!2096 newMap!16) lt!31758) lt!31942)))

(declare-fun b!71957 () Bool)

(assert (=> b!71957 (= e!47093 (not (= lt!31758 lt!31757)))))

(assert (= (and d!16283 res!38304) b!71957))

(assert (=> d!16283 m!68709))

(assert (=> d!16283 m!68715))

(assert (=> d!16283 m!68725))

(declare-fun m!69471 () Bool)

(assert (=> d!16283 m!69471))

(declare-fun m!69473 () Bool)

(assert (=> d!16283 m!69473))

(assert (=> d!16283 m!68709))

(assert (=> b!71554 d!16283))

(declare-fun d!16285 () Bool)

(assert (=> d!16285 (= (apply!74 lt!31762 lt!31764) (get!1150 (getValueByKey!131 (toList!732 lt!31762) lt!31764)))))

(declare-fun bs!3086 () Bool)

(assert (= bs!3086 d!16285))

(declare-fun m!69475 () Bool)

(assert (=> bs!3086 m!69475))

(assert (=> bs!3086 m!69475))

(declare-fun m!69477 () Bool)

(assert (=> bs!3086 m!69477))

(assert (=> b!71554 d!16285))

(declare-fun b!71958 () Bool)

(declare-fun e!47098 () ListLongMap!1433)

(declare-fun call!6246 () ListLongMap!1433)

(assert (=> b!71958 (= e!47098 call!6246)))

(declare-fun b!71959 () Bool)

(declare-fun e!47100 () Bool)

(declare-fun e!47095 () Bool)

(assert (=> b!71959 (= e!47100 e!47095)))

(assert (=> b!71959 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun res!38306 () Bool)

(declare-fun lt!31944 () ListLongMap!1433)

(assert (=> b!71959 (= res!38306 (contains!726 lt!31944 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71959 (=> (not res!38306) (not e!47095))))

(declare-fun b!71961 () Bool)

(assert (=> b!71961 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> b!71961 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326))))))

(assert (=> b!71961 (= e!47095 (= (apply!74 lt!31944 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!47094 () Bool)

(declare-fun b!71962 () Bool)

(assert (=> b!71962 (= e!47094 (= lt!31944 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16))))))

(declare-fun bm!6243 () Bool)

(assert (=> bm!6243 (= call!6246 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16)))))

(declare-fun b!71963 () Bool)

(declare-fun e!47099 () ListLongMap!1433)

(assert (=> b!71963 (= e!47099 (ListLongMap!1434 Nil!1501))))

(declare-fun b!71964 () Bool)

(assert (=> b!71964 (= e!47094 (isEmpty!318 lt!31944))))

(declare-fun b!71965 () Bool)

(assert (=> b!71965 (= e!47100 e!47094)))

(declare-fun c!10558 () Bool)

(assert (=> b!71965 (= c!10558 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71966 () Bool)

(declare-fun e!47097 () Bool)

(assert (=> b!71966 (= e!47097 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71966 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!71967 () Bool)

(declare-fun lt!31949 () Unit!2006)

(declare-fun lt!31947 () Unit!2006)

(assert (=> b!71967 (= lt!31949 lt!31947)))

(declare-fun lt!31946 () (_ BitVec 64))

(declare-fun lt!31948 () ListLongMap!1433)

(declare-fun lt!31943 () V!2939)

(declare-fun lt!31945 () (_ BitVec 64))

(assert (=> b!71967 (not (contains!726 (+!95 lt!31948 (tuple2!2139 lt!31946 lt!31943)) lt!31945))))

(assert (=> b!71967 (= lt!31947 (addStillNotContains!25 lt!31948 lt!31946 lt!31943 lt!31945))))

(assert (=> b!71967 (= lt!31945 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71967 (= lt!31943 (get!1146 (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71967 (= lt!31946 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71967 (= lt!31948 call!6246)))

(assert (=> b!71967 (= e!47098 (+!95 call!6246 (tuple2!2139 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (get!1146 (select (arr!1853 (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71968 () Bool)

(assert (=> b!71968 (= e!47099 e!47098)))

(declare-fun c!10560 () Bool)

(assert (=> b!71968 (= c!10560 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71969 () Bool)

(declare-fun e!47096 () Bool)

(assert (=> b!71969 (= e!47096 e!47100)))

(declare-fun c!10559 () Bool)

(assert (=> b!71969 (= c!10559 e!47097)))

(declare-fun res!38305 () Bool)

(assert (=> b!71969 (=> (not res!38305) (not e!47097))))

(assert (=> b!71969 (= res!38305 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!71960 () Bool)

(declare-fun res!38308 () Bool)

(assert (=> b!71960 (=> (not res!38308) (not e!47096))))

(assert (=> b!71960 (= res!38308 (not (contains!726 lt!31944 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!16287 () Bool)

(assert (=> d!16287 e!47096))

(declare-fun res!38307 () Bool)

(assert (=> d!16287 (=> (not res!38307) (not e!47096))))

(assert (=> d!16287 (= res!38307 (not (contains!726 lt!31944 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16287 (= lt!31944 e!47099)))

(declare-fun c!10557 () Bool)

(assert (=> d!16287 (= c!10557 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16287 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16287 (= (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (ite (or c!10291 c!10289) (_values!2175 newMap!16) lt!31326) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31944)))

(assert (= (and d!16287 c!10557) b!71963))

(assert (= (and d!16287 (not c!10557)) b!71968))

(assert (= (and b!71968 c!10560) b!71967))

(assert (= (and b!71968 (not c!10560)) b!71958))

(assert (= (or b!71967 b!71958) bm!6243))

(assert (= (and d!16287 res!38307) b!71960))

(assert (= (and b!71960 res!38308) b!71969))

(assert (= (and b!71969 res!38305) b!71966))

(assert (= (and b!71969 c!10559) b!71959))

(assert (= (and b!71969 (not c!10559)) b!71965))

(assert (= (and b!71959 res!38306) b!71961))

(assert (= (and b!71965 c!10558) b!71962))

(assert (= (and b!71965 (not c!10558)) b!71964))

(declare-fun b_lambda!3237 () Bool)

(assert (=> (not b_lambda!3237) (not b!71961)))

(assert (=> b!71961 t!5051))

(declare-fun b_and!4429 () Bool)

(assert (= b_and!4425 (and (=> t!5051 result!2669) b_and!4429)))

(assert (=> b!71961 t!5053))

(declare-fun b_and!4431 () Bool)

(assert (= b_and!4427 (and (=> t!5053 result!2671) b_and!4431)))

(declare-fun b_lambda!3239 () Bool)

(assert (=> (not b_lambda!3239) (not b!71967)))

(assert (=> b!71967 t!5051))

(declare-fun b_and!4433 () Bool)

(assert (= b_and!4429 (and (=> t!5051 result!2669) b_and!4433)))

(assert (=> b!71967 t!5053))

(declare-fun b_and!4435 () Bool)

(assert (= b_and!4431 (and (=> t!5053 result!2671) b_and!4435)))

(declare-fun m!69479 () Bool)

(assert (=> b!71962 m!69479))

(assert (=> b!71968 m!68067))

(assert (=> b!71968 m!68067))

(assert (=> b!71968 m!68077))

(assert (=> b!71961 m!68067))

(assert (=> b!71961 m!68529))

(assert (=> b!71961 m!68067))

(declare-fun m!69481 () Bool)

(assert (=> b!71961 m!69481))

(assert (=> b!71961 m!68737))

(assert (=> b!71961 m!68529))

(assert (=> b!71961 m!68739))

(assert (=> b!71961 m!68737))

(declare-fun m!69483 () Bool)

(assert (=> d!16287 m!69483))

(assert (=> d!16287 m!68107))

(assert (=> b!71959 m!68067))

(assert (=> b!71959 m!68067))

(declare-fun m!69485 () Bool)

(assert (=> b!71959 m!69485))

(assert (=> b!71966 m!68067))

(assert (=> b!71966 m!68067))

(assert (=> b!71966 m!68077))

(assert (=> bm!6243 m!69479))

(declare-fun m!69487 () Bool)

(assert (=> b!71960 m!69487))

(declare-fun m!69489 () Bool)

(assert (=> b!71964 m!69489))

(assert (=> b!71967 m!68067))

(assert (=> b!71967 m!68529))

(declare-fun m!69491 () Bool)

(assert (=> b!71967 m!69491))

(declare-fun m!69493 () Bool)

(assert (=> b!71967 m!69493))

(assert (=> b!71967 m!68737))

(assert (=> b!71967 m!68529))

(assert (=> b!71967 m!68739))

(assert (=> b!71967 m!68737))

(declare-fun m!69495 () Bool)

(assert (=> b!71967 m!69495))

(assert (=> b!71967 m!69491))

(declare-fun m!69497 () Bool)

(assert (=> b!71967 m!69497))

(assert (=> b!71554 d!16287))

(declare-fun d!16289 () Bool)

(declare-fun e!47101 () Bool)

(assert (=> d!16289 e!47101))

(declare-fun res!38310 () Bool)

(assert (=> d!16289 (=> (not res!38310) (not e!47101))))

(declare-fun lt!31953 () ListLongMap!1433)

(assert (=> d!16289 (= res!38310 (contains!726 lt!31953 (_1!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16)))))))

(declare-fun lt!31952 () List!1504)

(assert (=> d!16289 (= lt!31953 (ListLongMap!1434 lt!31952))))

(declare-fun lt!31951 () Unit!2006)

(declare-fun lt!31950 () Unit!2006)

(assert (=> d!16289 (= lt!31951 lt!31950)))

(assert (=> d!16289 (= (getValueByKey!131 lt!31952 (_1!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16)))))))

(assert (=> d!16289 (= lt!31950 (lemmaContainsTupThenGetReturnValue!50 lt!31952 (_1!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16)))))))

(assert (=> d!16289 (= lt!31952 (insertStrictlySorted!52 (toList!732 lt!31761) (_1!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16)))))))

(assert (=> d!16289 (= (+!95 lt!31761 (tuple2!2139 lt!31757 (minValue!2096 newMap!16))) lt!31953)))

(declare-fun b!71970 () Bool)

(declare-fun res!38309 () Bool)

(assert (=> b!71970 (=> (not res!38309) (not e!47101))))

(assert (=> b!71970 (= res!38309 (= (getValueByKey!131 (toList!732 lt!31953) (_1!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31757 (minValue!2096 newMap!16))))))))

(declare-fun b!71971 () Bool)

(assert (=> b!71971 (= e!47101 (contains!728 (toList!732 lt!31953) (tuple2!2139 lt!31757 (minValue!2096 newMap!16))))))

(assert (= (and d!16289 res!38310) b!71970))

(assert (= (and b!71970 res!38309) b!71971))

(declare-fun m!69499 () Bool)

(assert (=> d!16289 m!69499))

(declare-fun m!69501 () Bool)

(assert (=> d!16289 m!69501))

(declare-fun m!69503 () Bool)

(assert (=> d!16289 m!69503))

(declare-fun m!69505 () Bool)

(assert (=> d!16289 m!69505))

(declare-fun m!69507 () Bool)

(assert (=> b!71970 m!69507))

(declare-fun m!69509 () Bool)

(assert (=> b!71971 m!69509))

(assert (=> b!71554 d!16289))

(declare-fun d!16291 () Bool)

(assert (=> d!16291 (= (apply!74 lt!31761 lt!31758) (get!1150 (getValueByKey!131 (toList!732 lt!31761) lt!31758)))))

(declare-fun bs!3087 () Bool)

(assert (= bs!3087 d!16291))

(declare-fun m!69511 () Bool)

(assert (=> bs!3087 m!69511))

(assert (=> bs!3087 m!69511))

(declare-fun m!69513 () Bool)

(assert (=> bs!3087 m!69513))

(assert (=> b!71554 d!16291))

(declare-fun d!16293 () Bool)

(declare-fun res!38311 () Bool)

(declare-fun e!47102 () Bool)

(assert (=> d!16293 (=> res!38311 e!47102)))

(assert (=> d!16293 (= res!38311 (and ((_ is Cons!1500) lt!31711) (= (_1!1079 (h!2086 lt!31711)) (_1!1079 lt!31200))))))

(assert (=> d!16293 (= (containsKey!135 lt!31711 (_1!1079 lt!31200)) e!47102)))

(declare-fun b!71972 () Bool)

(declare-fun e!47103 () Bool)

(assert (=> b!71972 (= e!47102 e!47103)))

(declare-fun res!38312 () Bool)

(assert (=> b!71972 (=> (not res!38312) (not e!47103))))

(assert (=> b!71972 (= res!38312 (and (or (not ((_ is Cons!1500) lt!31711)) (bvsle (_1!1079 (h!2086 lt!31711)) (_1!1079 lt!31200))) ((_ is Cons!1500) lt!31711) (bvslt (_1!1079 (h!2086 lt!31711)) (_1!1079 lt!31200))))))

(declare-fun b!71973 () Bool)

(assert (=> b!71973 (= e!47103 (containsKey!135 (t!5044 lt!31711) (_1!1079 lt!31200)))))

(assert (= (and d!16293 (not res!38311)) b!71972))

(assert (= (and b!71972 res!38312) b!71973))

(declare-fun m!69515 () Bool)

(assert (=> b!71973 m!69515))

(assert (=> b!71477 d!16293))

(declare-fun d!16295 () Bool)

(assert (=> d!16295 (= (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31411)) (v!2521 (getValueByKey!131 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31411)))))

(assert (=> d!15883 d!16295))

(declare-fun c!10561 () Bool)

(declare-fun d!16297 () Bool)

(assert (=> d!16297 (= c!10561 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31411)))))

(declare-fun e!47104 () Option!137)

(assert (=> d!16297 (= (getValueByKey!131 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31411) e!47104)))

(declare-fun b!71974 () Bool)

(assert (=> b!71974 (= e!47104 (Some!136 (_2!1079 (h!2086 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))))

(declare-fun b!71976 () Bool)

(declare-fun e!47105 () Option!137)

(assert (=> b!71976 (= e!47105 (getValueByKey!131 (t!5044 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!31411))))

(declare-fun b!71975 () Bool)

(assert (=> b!71975 (= e!47104 e!47105)))

(declare-fun c!10562 () Bool)

(assert (=> b!71975 (= c!10562 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))) (not (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31411))))))

(declare-fun b!71977 () Bool)

(assert (=> b!71977 (= e!47105 None!135)))

(assert (= (and d!16297 c!10561) b!71974))

(assert (= (and d!16297 (not c!10561)) b!71975))

(assert (= (and b!71975 c!10562) b!71976))

(assert (= (and b!71975 (not c!10562)) b!71977))

(declare-fun m!69517 () Bool)

(assert (=> b!71976 m!69517))

(assert (=> d!15883 d!16297))

(declare-fun d!16299 () Bool)

(declare-fun c!10563 () Bool)

(assert (=> d!16299 (= c!10563 ((_ is Nil!1501) (toList!732 lt!31458)))))

(declare-fun e!47106 () (InoxSet tuple2!2138))

(assert (=> d!16299 (= (content!74 (toList!732 lt!31458)) e!47106)))

(declare-fun b!71978 () Bool)

(assert (=> b!71978 (= e!47106 ((as const (Array tuple2!2138 Bool)) false))))

(declare-fun b!71979 () Bool)

(assert (=> b!71979 (= e!47106 ((_ map or) (store ((as const (Array tuple2!2138 Bool)) false) (h!2086 (toList!732 lt!31458)) true) (content!74 (t!5044 (toList!732 lt!31458)))))))

(assert (= (and d!16299 c!10563) b!71978))

(assert (= (and d!16299 (not c!10563)) b!71979))

(declare-fun m!69519 () Bool)

(assert (=> b!71979 m!69519))

(assert (=> b!71979 m!69107))

(assert (=> d!16001 d!16299))

(assert (=> d!15967 d!15913))

(declare-fun d!16301 () Bool)

(declare-fun e!47109 () Bool)

(assert (=> d!16301 e!47109))

(declare-fun res!38317 () Bool)

(assert (=> d!16301 (=> (not res!38317) (not e!47109))))

(declare-fun lt!31956 () SeekEntryResult!245)

(assert (=> d!16301 (= res!38317 ((_ is Found!245) lt!31956))))

(assert (=> d!16301 (= lt!31956 (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!16301 true))

(declare-fun _$33!57 () Unit!2006)

(assert (=> d!16301 (= (choose!415 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) _$33!57)))

(declare-fun b!71984 () Bool)

(declare-fun res!38318 () Bool)

(assert (=> b!71984 (=> (not res!38318) (not e!47109))))

(assert (=> b!71984 (= res!38318 (inRange!0 (index!3111 lt!31956) (mask!6149 newMap!16)))))

(declare-fun b!71985 () Bool)

(assert (=> b!71985 (= e!47109 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31956)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!16301 res!38317) b!71984))

(assert (= (and b!71984 res!38318) b!71985))

(assert (=> d!16301 m!67713))

(assert (=> d!16301 m!67865))

(declare-fun m!69521 () Bool)

(assert (=> b!71984 m!69521))

(declare-fun m!69523 () Bool)

(assert (=> b!71985 m!69523))

(assert (=> d!15967 d!16301))

(assert (=> d!15967 d!16073))

(assert (=> b!71411 d!16083))

(assert (=> b!71411 d!16085))

(declare-fun c!10564 () Bool)

(declare-fun d!16303 () Bool)

(assert (=> d!16303 (= c!10564 (and ((_ is Cons!1500) (toList!732 lt!31669)) (= (_1!1079 (h!2086 (toList!732 lt!31669))) (_1!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(declare-fun e!47110 () Option!137)

(assert (=> d!16303 (= (getValueByKey!131 (toList!732 lt!31669) (_1!1079 (tuple2!2139 lt!31444 lt!31441))) e!47110)))

(declare-fun b!71986 () Bool)

(assert (=> b!71986 (= e!47110 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31669)))))))

(declare-fun e!47111 () Option!137)

(declare-fun b!71988 () Bool)

(assert (=> b!71988 (= e!47111 (getValueByKey!131 (t!5044 (toList!732 lt!31669)) (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun b!71987 () Bool)

(assert (=> b!71987 (= e!47110 e!47111)))

(declare-fun c!10565 () Bool)

(assert (=> b!71987 (= c!10565 (and ((_ is Cons!1500) (toList!732 lt!31669)) (not (= (_1!1079 (h!2086 (toList!732 lt!31669))) (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))))

(declare-fun b!71989 () Bool)

(assert (=> b!71989 (= e!47111 None!135)))

(assert (= (and d!16303 c!10564) b!71986))

(assert (= (and d!16303 (not c!10564)) b!71987))

(assert (= (and b!71987 c!10565) b!71988))

(assert (= (and b!71987 (not c!10565)) b!71989))

(declare-fun m!69525 () Bool)

(assert (=> b!71988 m!69525))

(assert (=> b!71416 d!16303))

(declare-fun d!16305 () Bool)

(declare-fun c!10566 () Bool)

(assert (=> d!16305 (= c!10566 (and ((_ is Cons!1500) (toList!732 lt!31617)) (= (_1!1079 (h!2086 (toList!732 lt!31617))) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47112 () Option!137)

(assert (=> d!16305 (= (getValueByKey!131 (toList!732 lt!31617) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47112)))

(declare-fun b!71990 () Bool)

(assert (=> b!71990 (= e!47112 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31617)))))))

(declare-fun b!71992 () Bool)

(declare-fun e!47113 () Option!137)

(assert (=> b!71992 (= e!47113 (getValueByKey!131 (t!5044 (toList!732 lt!31617)) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!71991 () Bool)

(assert (=> b!71991 (= e!47112 e!47113)))

(declare-fun c!10567 () Bool)

(assert (=> b!71991 (= c!10567 (and ((_ is Cons!1500) (toList!732 lt!31617)) (not (= (_1!1079 (h!2086 (toList!732 lt!31617))) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!71993 () Bool)

(assert (=> b!71993 (= e!47113 None!135)))

(assert (= (and d!16305 c!10566) b!71990))

(assert (= (and d!16305 (not c!10566)) b!71991))

(assert (= (and b!71991 c!10567) b!71992))

(assert (= (and b!71991 (not c!10567)) b!71993))

(declare-fun m!69527 () Bool)

(assert (=> b!71992 m!69527))

(assert (=> b!71327 d!16305))

(declare-fun d!16307 () Bool)

(declare-fun e!47114 () Bool)

(assert (=> d!16307 e!47114))

(declare-fun res!38320 () Bool)

(assert (=> d!16307 (=> (not res!38320) (not e!47114))))

(declare-fun lt!31960 () ListLongMap!1433)

(assert (=> d!16307 (= res!38320 (contains!726 lt!31960 (_1!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))))

(declare-fun lt!31959 () List!1504)

(assert (=> d!16307 (= lt!31960 (ListLongMap!1434 lt!31959))))

(declare-fun lt!31958 () Unit!2006)

(declare-fun lt!31957 () Unit!2006)

(assert (=> d!16307 (= lt!31958 lt!31957)))

(assert (=> d!16307 (= (getValueByKey!131 lt!31959 (_1!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))) (Some!136 (_2!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))))

(assert (=> d!16307 (= lt!31957 (lemmaContainsTupThenGetReturnValue!50 lt!31959 (_1!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (_2!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))))

(assert (=> d!16307 (= lt!31959 (insertStrictlySorted!52 (toList!732 (ite c!10453 call!6218 (ite c!10449 call!6213 call!6217))) (_1!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (_2!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))))

(assert (=> d!16307 (= (+!95 (ite c!10453 call!6218 (ite c!10449 call!6213 call!6217)) (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) lt!31960)))

(declare-fun b!71994 () Bool)

(declare-fun res!38319 () Bool)

(assert (=> b!71994 (=> (not res!38319) (not e!47114))))

(assert (=> b!71994 (= res!38319 (= (getValueByKey!131 (toList!732 lt!31960) (_1!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))) (Some!136 (_2!1079 (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))))

(declare-fun b!71995 () Bool)

(assert (=> b!71995 (= e!47114 (contains!728 (toList!732 lt!31960) (ite (or c!10453 c!10449) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (= (and d!16307 res!38320) b!71994))

(assert (= (and b!71994 res!38319) b!71995))

(declare-fun m!69529 () Bool)

(assert (=> d!16307 m!69529))

(declare-fun m!69531 () Bool)

(assert (=> d!16307 m!69531))

(declare-fun m!69533 () Bool)

(assert (=> d!16307 m!69533))

(declare-fun m!69535 () Bool)

(assert (=> d!16307 m!69535))

(declare-fun m!69537 () Bool)

(assert (=> b!71994 m!69537))

(declare-fun m!69539 () Bool)

(assert (=> b!71995 m!69539))

(assert (=> bm!6210 d!16307))

(declare-fun d!16309 () Bool)

(declare-fun e!47115 () Bool)

(assert (=> d!16309 e!47115))

(declare-fun res!38321 () Bool)

(assert (=> d!16309 (=> res!38321 e!47115)))

(declare-fun lt!31963 () Bool)

(assert (=> d!16309 (= res!38321 (not lt!31963))))

(declare-fun lt!31961 () Bool)

(assert (=> d!16309 (= lt!31963 lt!31961)))

(declare-fun lt!31962 () Unit!2006)

(declare-fun e!47116 () Unit!2006)

(assert (=> d!16309 (= lt!31962 e!47116)))

(declare-fun c!10568 () Bool)

(assert (=> d!16309 (= c!10568 lt!31961)))

(assert (=> d!16309 (= lt!31961 (containsKey!135 (toList!732 lt!31669) (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(assert (=> d!16309 (= (contains!726 lt!31669 (_1!1079 (tuple2!2139 lt!31444 lt!31441))) lt!31963)))

(declare-fun b!71996 () Bool)

(declare-fun lt!31964 () Unit!2006)

(assert (=> b!71996 (= e!47116 lt!31964)))

(assert (=> b!71996 (= lt!31964 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31669) (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(assert (=> b!71996 (isDefined!85 (getValueByKey!131 (toList!732 lt!31669) (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun b!71997 () Bool)

(declare-fun Unit!2048 () Unit!2006)

(assert (=> b!71997 (= e!47116 Unit!2048)))

(declare-fun b!71998 () Bool)

(assert (=> b!71998 (= e!47115 (isDefined!85 (getValueByKey!131 (toList!732 lt!31669) (_1!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(assert (= (and d!16309 c!10568) b!71996))

(assert (= (and d!16309 (not c!10568)) b!71997))

(assert (= (and d!16309 (not res!38321)) b!71998))

(declare-fun m!69541 () Bool)

(assert (=> d!16309 m!69541))

(declare-fun m!69543 () Bool)

(assert (=> b!71996 m!69543))

(assert (=> b!71996 m!68439))

(assert (=> b!71996 m!68439))

(declare-fun m!69545 () Bool)

(assert (=> b!71996 m!69545))

(assert (=> b!71998 m!68439))

(assert (=> b!71998 m!68439))

(assert (=> b!71998 m!69545))

(assert (=> d!15935 d!16309))

(declare-fun c!10569 () Bool)

(declare-fun d!16311 () Bool)

(assert (=> d!16311 (= c!10569 (and ((_ is Cons!1500) lt!31668) (= (_1!1079 (h!2086 lt!31668)) (_1!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(declare-fun e!47117 () Option!137)

(assert (=> d!16311 (= (getValueByKey!131 lt!31668 (_1!1079 (tuple2!2139 lt!31444 lt!31441))) e!47117)))

(declare-fun b!71999 () Bool)

(assert (=> b!71999 (= e!47117 (Some!136 (_2!1079 (h!2086 lt!31668))))))

(declare-fun e!47118 () Option!137)

(declare-fun b!72001 () Bool)

(assert (=> b!72001 (= e!47118 (getValueByKey!131 (t!5044 lt!31668) (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun b!72000 () Bool)

(assert (=> b!72000 (= e!47117 e!47118)))

(declare-fun c!10570 () Bool)

(assert (=> b!72000 (= c!10570 (and ((_ is Cons!1500) lt!31668) (not (= (_1!1079 (h!2086 lt!31668)) (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))))

(declare-fun b!72002 () Bool)

(assert (=> b!72002 (= e!47118 None!135)))

(assert (= (and d!16311 c!10569) b!71999))

(assert (= (and d!16311 (not c!10569)) b!72000))

(assert (= (and b!72000 c!10570) b!72001))

(assert (= (and b!72000 (not c!10570)) b!72002))

(declare-fun m!69547 () Bool)

(assert (=> b!72001 m!69547))

(assert (=> d!15935 d!16311))

(declare-fun d!16313 () Bool)

(assert (=> d!16313 (= (getValueByKey!131 lt!31668 (_1!1079 (tuple2!2139 lt!31444 lt!31441))) (Some!136 (_2!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun lt!31965 () Unit!2006)

(assert (=> d!16313 (= lt!31965 (choose!407 lt!31668 (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun e!47119 () Bool)

(assert (=> d!16313 e!47119))

(declare-fun res!38322 () Bool)

(assert (=> d!16313 (=> (not res!38322) (not e!47119))))

(assert (=> d!16313 (= res!38322 (isStrictlySorted!286 lt!31668))))

(assert (=> d!16313 (= (lemmaContainsTupThenGetReturnValue!50 lt!31668 (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441))) lt!31965)))

(declare-fun b!72003 () Bool)

(declare-fun res!38323 () Bool)

(assert (=> b!72003 (=> (not res!38323) (not e!47119))))

(assert (=> b!72003 (= res!38323 (containsKey!135 lt!31668 (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun b!72004 () Bool)

(assert (=> b!72004 (= e!47119 (contains!728 lt!31668 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(assert (= (and d!16313 res!38322) b!72003))

(assert (= (and b!72003 res!38323) b!72004))

(assert (=> d!16313 m!68433))

(declare-fun m!69549 () Bool)

(assert (=> d!16313 m!69549))

(declare-fun m!69551 () Bool)

(assert (=> d!16313 m!69551))

(declare-fun m!69553 () Bool)

(assert (=> b!72003 m!69553))

(declare-fun m!69555 () Bool)

(assert (=> b!72004 m!69555))

(assert (=> d!15935 d!16313))

(declare-fun b!72005 () Bool)

(declare-fun e!47121 () List!1504)

(declare-fun call!6248 () List!1504)

(assert (=> b!72005 (= e!47121 call!6248)))

(declare-fun b!72006 () Bool)

(declare-fun res!38324 () Bool)

(declare-fun e!47120 () Bool)

(assert (=> b!72006 (=> (not res!38324) (not e!47120))))

(declare-fun lt!31966 () List!1504)

(assert (=> b!72006 (= res!38324 (containsKey!135 lt!31966 (_1!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun b!72007 () Bool)

(declare-fun c!10572 () Bool)

(assert (=> b!72007 (= c!10572 (and ((_ is Cons!1500) (toList!732 lt!31446)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31446))) (_1!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(declare-fun e!47123 () List!1504)

(declare-fun e!47122 () List!1504)

(assert (=> b!72007 (= e!47123 e!47122)))

(declare-fun b!72009 () Bool)

(declare-fun call!6249 () List!1504)

(assert (=> b!72009 (= e!47123 call!6249)))

(declare-fun b!72010 () Bool)

(declare-fun call!6247 () List!1504)

(assert (=> b!72010 (= e!47122 call!6247)))

(declare-fun b!72011 () Bool)

(declare-fun e!47124 () List!1504)

(assert (=> b!72011 (= e!47124 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31446)) (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441))))))

(declare-fun bm!6244 () Bool)

(assert (=> bm!6244 (= call!6247 call!6249)))

(declare-fun bm!6245 () Bool)

(assert (=> bm!6245 (= call!6249 call!6248)))

(declare-fun bm!6246 () Bool)

(declare-fun c!10571 () Bool)

(assert (=> bm!6246 (= call!6248 ($colon$colon!64 e!47124 (ite c!10571 (h!2086 (toList!732 lt!31446)) (tuple2!2139 (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441))))))))

(declare-fun c!10573 () Bool)

(assert (=> bm!6246 (= c!10573 c!10571)))

(declare-fun b!72012 () Bool)

(declare-fun c!10574 () Bool)

(assert (=> b!72012 (= e!47124 (ite c!10574 (t!5044 (toList!732 lt!31446)) (ite c!10572 (Cons!1500 (h!2086 (toList!732 lt!31446)) (t!5044 (toList!732 lt!31446))) Nil!1501)))))

(declare-fun b!72008 () Bool)

(assert (=> b!72008 (= e!47122 call!6247)))

(declare-fun d!16315 () Bool)

(assert (=> d!16315 e!47120))

(declare-fun res!38325 () Bool)

(assert (=> d!16315 (=> (not res!38325) (not e!47120))))

(assert (=> d!16315 (= res!38325 (isStrictlySorted!286 lt!31966))))

(assert (=> d!16315 (= lt!31966 e!47121)))

(assert (=> d!16315 (= c!10571 (and ((_ is Cons!1500) (toList!732 lt!31446)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31446))) (_1!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(assert (=> d!16315 (isStrictlySorted!286 (toList!732 lt!31446))))

(assert (=> d!16315 (= (insertStrictlySorted!52 (toList!732 lt!31446) (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441))) lt!31966)))

(declare-fun b!72013 () Bool)

(assert (=> b!72013 (= e!47120 (contains!728 lt!31966 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31444 lt!31441)) (_2!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(declare-fun b!72014 () Bool)

(assert (=> b!72014 (= e!47121 e!47123)))

(assert (=> b!72014 (= c!10574 (and ((_ is Cons!1500) (toList!732 lt!31446)) (= (_1!1079 (h!2086 (toList!732 lt!31446))) (_1!1079 (tuple2!2139 lt!31444 lt!31441)))))))

(assert (= (and d!16315 c!10571) b!72005))

(assert (= (and d!16315 (not c!10571)) b!72014))

(assert (= (and b!72014 c!10574) b!72009))

(assert (= (and b!72014 (not c!10574)) b!72007))

(assert (= (and b!72007 c!10572) b!72008))

(assert (= (and b!72007 (not c!10572)) b!72010))

(assert (= (or b!72008 b!72010) bm!6244))

(assert (= (or b!72009 bm!6244) bm!6245))

(assert (= (or b!72005 bm!6245) bm!6246))

(assert (= (and bm!6246 c!10573) b!72011))

(assert (= (and bm!6246 (not c!10573)) b!72012))

(assert (= (and d!16315 res!38325) b!72006))

(assert (= (and b!72006 res!38324) b!72013))

(declare-fun m!69557 () Bool)

(assert (=> bm!6246 m!69557))

(declare-fun m!69559 () Bool)

(assert (=> b!72011 m!69559))

(declare-fun m!69561 () Bool)

(assert (=> b!72006 m!69561))

(declare-fun m!69563 () Bool)

(assert (=> b!72013 m!69563))

(declare-fun m!69565 () Bool)

(assert (=> d!16315 m!69565))

(declare-fun m!69567 () Bool)

(assert (=> d!16315 m!69567))

(assert (=> d!15935 d!16315))

(declare-fun d!16317 () Bool)

(declare-fun e!47125 () Bool)

(assert (=> d!16317 e!47125))

(declare-fun res!38326 () Bool)

(assert (=> d!16317 (=> res!38326 e!47125)))

(declare-fun lt!31969 () Bool)

(assert (=> d!16317 (= res!38326 (not lt!31969))))

(declare-fun lt!31967 () Bool)

(assert (=> d!16317 (= lt!31969 lt!31967)))

(declare-fun lt!31968 () Unit!2006)

(declare-fun e!47126 () Unit!2006)

(assert (=> d!16317 (= lt!31968 e!47126)))

(declare-fun c!10575 () Bool)

(assert (=> d!16317 (= c!10575 lt!31967)))

(assert (=> d!16317 (= lt!31967 (containsKey!135 (toList!732 lt!31617) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16317 (= (contains!726 lt!31617 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31969)))

(declare-fun b!72015 () Bool)

(declare-fun lt!31970 () Unit!2006)

(assert (=> b!72015 (= e!47126 lt!31970)))

(assert (=> b!72015 (= lt!31970 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31617) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> b!72015 (isDefined!85 (getValueByKey!131 (toList!732 lt!31617) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72016 () Bool)

(declare-fun Unit!2049 () Unit!2006)

(assert (=> b!72016 (= e!47126 Unit!2049)))

(declare-fun b!72017 () Bool)

(assert (=> b!72017 (= e!47125 (isDefined!85 (getValueByKey!131 (toList!732 lt!31617) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16317 c!10575) b!72015))

(assert (= (and d!16317 (not c!10575)) b!72016))

(assert (= (and d!16317 (not res!38326)) b!72017))

(declare-fun m!69569 () Bool)

(assert (=> d!16317 m!69569))

(declare-fun m!69571 () Bool)

(assert (=> b!72015 m!69571))

(assert (=> b!72015 m!68291))

(assert (=> b!72015 m!68291))

(declare-fun m!69573 () Bool)

(assert (=> b!72015 m!69573))

(assert (=> b!72017 m!68291))

(assert (=> b!72017 m!68291))

(assert (=> b!72017 m!69573))

(assert (=> d!15891 d!16317))

(declare-fun d!16319 () Bool)

(declare-fun c!10576 () Bool)

(assert (=> d!16319 (= c!10576 (and ((_ is Cons!1500) lt!31616) (= (_1!1079 (h!2086 lt!31616)) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47127 () Option!137)

(assert (=> d!16319 (= (getValueByKey!131 lt!31616 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47127)))

(declare-fun b!72018 () Bool)

(assert (=> b!72018 (= e!47127 (Some!136 (_2!1079 (h!2086 lt!31616))))))

(declare-fun b!72020 () Bool)

(declare-fun e!47128 () Option!137)

(assert (=> b!72020 (= e!47128 (getValueByKey!131 (t!5044 lt!31616) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72019 () Bool)

(assert (=> b!72019 (= e!47127 e!47128)))

(declare-fun c!10577 () Bool)

(assert (=> b!72019 (= c!10577 (and ((_ is Cons!1500) lt!31616) (not (= (_1!1079 (h!2086 lt!31616)) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72021 () Bool)

(assert (=> b!72021 (= e!47128 None!135)))

(assert (= (and d!16319 c!10576) b!72018))

(assert (= (and d!16319 (not c!10576)) b!72019))

(assert (= (and b!72019 c!10577) b!72020))

(assert (= (and b!72019 (not c!10577)) b!72021))

(declare-fun m!69575 () Bool)

(assert (=> b!72020 m!69575))

(assert (=> d!15891 d!16319))

(declare-fun d!16321 () Bool)

(assert (=> d!16321 (= (getValueByKey!131 lt!31616 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!31971 () Unit!2006)

(assert (=> d!16321 (= lt!31971 (choose!407 lt!31616 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!47129 () Bool)

(assert (=> d!16321 e!47129))

(declare-fun res!38327 () Bool)

(assert (=> d!16321 (=> (not res!38327) (not e!47129))))

(assert (=> d!16321 (= res!38327 (isStrictlySorted!286 lt!31616))))

(assert (=> d!16321 (= (lemmaContainsTupThenGetReturnValue!50 lt!31616 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31971)))

(declare-fun b!72022 () Bool)

(declare-fun res!38328 () Bool)

(assert (=> b!72022 (=> (not res!38328) (not e!47129))))

(assert (=> b!72022 (= res!38328 (containsKey!135 lt!31616 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72023 () Bool)

(assert (=> b!72023 (= e!47129 (contains!728 lt!31616 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16321 res!38327) b!72022))

(assert (= (and b!72022 res!38328) b!72023))

(assert (=> d!16321 m!68285))

(declare-fun m!69577 () Bool)

(assert (=> d!16321 m!69577))

(declare-fun m!69579 () Bool)

(assert (=> d!16321 m!69579))

(declare-fun m!69581 () Bool)

(assert (=> b!72022 m!69581))

(declare-fun m!69583 () Bool)

(assert (=> b!72023 m!69583))

(assert (=> d!15891 d!16321))

(declare-fun b!72024 () Bool)

(declare-fun e!47131 () List!1504)

(declare-fun call!6251 () List!1504)

(assert (=> b!72024 (= e!47131 call!6251)))

(declare-fun b!72025 () Bool)

(declare-fun res!38329 () Bool)

(declare-fun e!47130 () Bool)

(assert (=> b!72025 (=> (not res!38329) (not e!47130))))

(declare-fun lt!31972 () List!1504)

(assert (=> b!72025 (= res!38329 (containsKey!135 lt!31972 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun c!10579 () Bool)

(declare-fun b!72026 () Bool)

(assert (=> b!72026 (= c!10579 (and ((_ is Cons!1500) (toList!732 lt!31398)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31398))) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47133 () List!1504)

(declare-fun e!47132 () List!1504)

(assert (=> b!72026 (= e!47133 e!47132)))

(declare-fun b!72028 () Bool)

(declare-fun call!6252 () List!1504)

(assert (=> b!72028 (= e!47133 call!6252)))

(declare-fun b!72029 () Bool)

(declare-fun call!6250 () List!1504)

(assert (=> b!72029 (= e!47132 call!6250)))

(declare-fun b!72030 () Bool)

(declare-fun e!47134 () List!1504)

(assert (=> b!72030 (= e!47134 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31398)) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun bm!6247 () Bool)

(assert (=> bm!6247 (= call!6250 call!6252)))

(declare-fun bm!6248 () Bool)

(assert (=> bm!6248 (= call!6252 call!6251)))

(declare-fun bm!6249 () Bool)

(declare-fun c!10578 () Bool)

(assert (=> bm!6249 (= call!6251 ($colon$colon!64 e!47134 (ite c!10578 (h!2086 (toList!732 lt!31398)) (tuple2!2139 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun c!10580 () Bool)

(assert (=> bm!6249 (= c!10580 c!10578)))

(declare-fun b!72031 () Bool)

(declare-fun c!10581 () Bool)

(assert (=> b!72031 (= e!47134 (ite c!10581 (t!5044 (toList!732 lt!31398)) (ite c!10579 (Cons!1500 (h!2086 (toList!732 lt!31398)) (t!5044 (toList!732 lt!31398))) Nil!1501)))))

(declare-fun b!72027 () Bool)

(assert (=> b!72027 (= e!47132 call!6250)))

(declare-fun d!16323 () Bool)

(assert (=> d!16323 e!47130))

(declare-fun res!38330 () Bool)

(assert (=> d!16323 (=> (not res!38330) (not e!47130))))

(assert (=> d!16323 (= res!38330 (isStrictlySorted!286 lt!31972))))

(assert (=> d!16323 (= lt!31972 e!47131)))

(assert (=> d!16323 (= c!10578 (and ((_ is Cons!1500) (toList!732 lt!31398)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31398))) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16323 (isStrictlySorted!286 (toList!732 lt!31398))))

(assert (=> d!16323 (= (insertStrictlySorted!52 (toList!732 lt!31398) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31972)))

(declare-fun b!72032 () Bool)

(assert (=> b!72032 (= e!47130 (contains!728 lt!31972 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72033 () Bool)

(assert (=> b!72033 (= e!47131 e!47133)))

(assert (=> b!72033 (= c!10581 (and ((_ is Cons!1500) (toList!732 lt!31398)) (= (_1!1079 (h!2086 (toList!732 lt!31398))) (_1!1079 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16323 c!10578) b!72024))

(assert (= (and d!16323 (not c!10578)) b!72033))

(assert (= (and b!72033 c!10581) b!72028))

(assert (= (and b!72033 (not c!10581)) b!72026))

(assert (= (and b!72026 c!10579) b!72027))

(assert (= (and b!72026 (not c!10579)) b!72029))

(assert (= (or b!72027 b!72029) bm!6247))

(assert (= (or b!72028 bm!6247) bm!6248))

(assert (= (or b!72024 bm!6248) bm!6249))

(assert (= (and bm!6249 c!10580) b!72030))

(assert (= (and bm!6249 (not c!10580)) b!72031))

(assert (= (and d!16323 res!38330) b!72025))

(assert (= (and b!72025 res!38329) b!72032))

(declare-fun m!69585 () Bool)

(assert (=> bm!6249 m!69585))

(declare-fun m!69587 () Bool)

(assert (=> b!72030 m!69587))

(declare-fun m!69589 () Bool)

(assert (=> b!72025 m!69589))

(declare-fun m!69591 () Bool)

(assert (=> b!72032 m!69591))

(declare-fun m!69593 () Bool)

(assert (=> d!16323 m!69593))

(declare-fun m!69595 () Bool)

(assert (=> d!16323 m!69595))

(assert (=> d!15891 d!16323))

(declare-fun d!16325 () Bool)

(assert (=> d!16325 (= (isEmpty!320 (toList!732 lt!31442)) ((_ is Nil!1501) (toList!732 lt!31442)))))

(assert (=> d!16027 d!16325))

(declare-fun d!16327 () Bool)

(assert (=> d!16327 (contains!726 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))

(declare-fun lt!31975 () Unit!2006)

(declare-fun choose!416 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2006)

(assert (=> d!16327 (= lt!31975 (choose!416 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16327 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16327 (= (lemmaArrayContainsKeyThenInListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31975)))

(declare-fun bs!3088 () Bool)

(assert (= bs!3088 d!16327))

(assert (=> bs!3088 m!67909))

(assert (=> bs!3088 m!67909))

(assert (=> bs!3088 m!67713))

(assert (=> bs!3088 m!68191))

(assert (=> bs!3088 m!67713))

(declare-fun m!69597 () Bool)

(assert (=> bs!3088 m!69597))

(assert (=> bs!3088 m!68107))

(assert (=> b!71304 d!16327))

(declare-fun d!16329 () Bool)

(declare-fun e!47135 () Bool)

(assert (=> d!16329 e!47135))

(declare-fun res!38331 () Bool)

(assert (=> d!16329 (=> res!38331 e!47135)))

(declare-fun lt!31978 () Bool)

(assert (=> d!16329 (= res!38331 (not lt!31978))))

(declare-fun lt!31976 () Bool)

(assert (=> d!16329 (= lt!31978 lt!31976)))

(declare-fun lt!31977 () Unit!2006)

(declare-fun e!47136 () Unit!2006)

(assert (=> d!16329 (= lt!31977 e!47136)))

(declare-fun c!10582 () Bool)

(assert (=> d!16329 (= c!10582 lt!31976)))

(assert (=> d!16329 (= lt!31976 (containsKey!135 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16329 (= (contains!726 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!31978)))

(declare-fun b!72034 () Bool)

(declare-fun lt!31979 () Unit!2006)

(assert (=> b!72034 (= e!47136 lt!31979)))

(assert (=> b!72034 (= lt!31979 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!72034 (isDefined!85 (getValueByKey!131 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!72035 () Bool)

(declare-fun Unit!2050 () Unit!2006)

(assert (=> b!72035 (= e!47136 Unit!2050)))

(declare-fun b!72036 () Bool)

(assert (=> b!72036 (= e!47135 (isDefined!85 (getValueByKey!131 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (= (and d!16329 c!10582) b!72034))

(assert (= (and d!16329 (not c!10582)) b!72035))

(assert (= (and d!16329 (not res!38331)) b!72036))

(assert (=> d!16329 m!67713))

(declare-fun m!69599 () Bool)

(assert (=> d!16329 m!69599))

(assert (=> b!72034 m!67713))

(declare-fun m!69601 () Bool)

(assert (=> b!72034 m!69601))

(assert (=> b!72034 m!67713))

(declare-fun m!69603 () Bool)

(assert (=> b!72034 m!69603))

(assert (=> b!72034 m!69603))

(declare-fun m!69605 () Bool)

(assert (=> b!72034 m!69605))

(assert (=> b!72036 m!67713))

(assert (=> b!72036 m!69603))

(assert (=> b!72036 m!69603))

(assert (=> b!72036 m!69605))

(assert (=> b!71304 d!16329))

(assert (=> b!71304 d!15955))

(assert (=> d!15919 d!15913))

(declare-fun bm!6254 () Bool)

(declare-fun call!6257 () Bool)

(assert (=> bm!6254 (= call!6257 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!72053 () Bool)

(declare-fun res!38342 () Bool)

(declare-fun lt!31982 () SeekEntryResult!245)

(assert (=> b!72053 (= res!38342 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3110 lt!31982)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47147 () Bool)

(assert (=> b!72053 (=> (not res!38342) (not e!47147))))

(declare-fun b!72054 () Bool)

(declare-fun res!38343 () Bool)

(declare-fun e!47146 () Bool)

(assert (=> b!72054 (=> (not res!38343) (not e!47146))))

(assert (=> b!72054 (= res!38343 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!31982)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16331 () Bool)

(declare-fun e!47145 () Bool)

(assert (=> d!16331 e!47145))

(declare-fun c!10587 () Bool)

(assert (=> d!16331 (= c!10587 ((_ is MissingZero!245) lt!31982))))

(assert (=> d!16331 (= lt!31982 (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!16331 true))

(declare-fun _$34!802 () Unit!2006)

(assert (=> d!16331 (= (choose!413 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) _$34!802)))

(declare-fun b!72055 () Bool)

(declare-fun e!47148 () Bool)

(assert (=> b!72055 (= e!47145 e!47148)))

(declare-fun c!10588 () Bool)

(assert (=> b!72055 (= c!10588 ((_ is MissingVacant!245) lt!31982))))

(declare-fun b!72056 () Bool)

(assert (=> b!72056 (= e!47145 e!47147)))

(declare-fun res!38340 () Bool)

(declare-fun call!6258 () Bool)

(assert (=> b!72056 (= res!38340 call!6258)))

(assert (=> b!72056 (=> (not res!38340) (not e!47147))))

(declare-fun bm!6255 () Bool)

(assert (=> bm!6255 (= call!6258 (inRange!0 (ite c!10587 (index!3110 lt!31982) (index!3113 lt!31982)) (mask!6149 newMap!16)))))

(declare-fun b!72057 () Bool)

(assert (=> b!72057 (= e!47148 ((_ is Undefined!245) lt!31982))))

(declare-fun b!72058 () Bool)

(assert (=> b!72058 (= e!47147 (not call!6257))))

(declare-fun b!72059 () Bool)

(assert (=> b!72059 (= e!47146 (not call!6257))))

(declare-fun b!72060 () Bool)

(declare-fun res!38341 () Bool)

(assert (=> b!72060 (=> (not res!38341) (not e!47146))))

(assert (=> b!72060 (= res!38341 call!6258)))

(assert (=> b!72060 (= e!47148 e!47146)))

(assert (= (and d!16331 c!10587) b!72056))

(assert (= (and d!16331 (not c!10587)) b!72055))

(assert (= (and b!72056 res!38340) b!72053))

(assert (= (and b!72053 res!38342) b!72058))

(assert (= (and b!72055 c!10588) b!72060))

(assert (= (and b!72055 (not c!10588)) b!72057))

(assert (= (and b!72060 res!38341) b!72054))

(assert (= (and b!72054 res!38343) b!72059))

(assert (= (or b!72056 b!72060) bm!6255))

(assert (= (or b!72058 b!72059) bm!6254))

(declare-fun m!69607 () Bool)

(assert (=> b!72054 m!69607))

(declare-fun m!69609 () Bool)

(assert (=> bm!6255 m!69609))

(assert (=> d!16331 m!67713))

(assert (=> d!16331 m!67865))

(assert (=> bm!6254 m!67713))

(assert (=> bm!6254 m!67873))

(declare-fun m!69611 () Bool)

(assert (=> b!72053 m!69611))

(assert (=> d!15919 d!16331))

(assert (=> d!15919 d!16073))

(declare-fun d!16333 () Bool)

(declare-fun lt!31983 () Bool)

(assert (=> d!16333 (= lt!31983 (select (content!74 (toList!732 lt!31755)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(declare-fun e!47150 () Bool)

(assert (=> d!16333 (= lt!31983 e!47150)))

(declare-fun res!38345 () Bool)

(assert (=> d!16333 (=> (not res!38345) (not e!47150))))

(assert (=> d!16333 (= res!38345 ((_ is Cons!1500) (toList!732 lt!31755)))))

(assert (=> d!16333 (= (contains!728 (toList!732 lt!31755) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!31983)))

(declare-fun b!72061 () Bool)

(declare-fun e!47149 () Bool)

(assert (=> b!72061 (= e!47150 e!47149)))

(declare-fun res!38344 () Bool)

(assert (=> b!72061 (=> res!38344 e!47149)))

(assert (=> b!72061 (= res!38344 (= (h!2086 (toList!732 lt!31755)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(declare-fun b!72062 () Bool)

(assert (=> b!72062 (= e!47149 (contains!728 (t!5044 (toList!732 lt!31755)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!16333 res!38345) b!72061))

(assert (= (and b!72061 (not res!38344)) b!72062))

(declare-fun m!69613 () Bool)

(assert (=> d!16333 m!69613))

(declare-fun m!69615 () Bool)

(assert (=> d!16333 m!69615))

(declare-fun m!69617 () Bool)

(assert (=> b!72062 m!69617))

(assert (=> b!71536 d!16333))

(assert (=> b!71588 d!16045))

(assert (=> b!71609 d!16161))

(assert (=> b!71609 d!16163))

(declare-fun d!16335 () Bool)

(declare-fun c!10589 () Bool)

(assert (=> d!16335 (= c!10589 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31426))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31426)))) (_1!1079 lt!31205))))))

(declare-fun e!47151 () Option!137)

(assert (=> d!16335 (= (getValueByKey!131 (t!5044 (toList!732 lt!31426)) (_1!1079 lt!31205)) e!47151)))

(declare-fun b!72063 () Bool)

(assert (=> b!72063 (= e!47151 (Some!136 (_2!1079 (h!2086 (t!5044 (toList!732 lt!31426))))))))

(declare-fun b!72065 () Bool)

(declare-fun e!47152 () Option!137)

(assert (=> b!72065 (= e!47152 (getValueByKey!131 (t!5044 (t!5044 (toList!732 lt!31426))) (_1!1079 lt!31205)))))

(declare-fun b!72064 () Bool)

(assert (=> b!72064 (= e!47151 e!47152)))

(declare-fun c!10590 () Bool)

(assert (=> b!72064 (= c!10590 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31426))) (not (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31426)))) (_1!1079 lt!31205)))))))

(declare-fun b!72066 () Bool)

(assert (=> b!72066 (= e!47152 None!135)))

(assert (= (and d!16335 c!10589) b!72063))

(assert (= (and d!16335 (not c!10589)) b!72064))

(assert (= (and b!72064 c!10590) b!72065))

(assert (= (and b!72064 (not c!10590)) b!72066))

(declare-fun m!69619 () Bool)

(assert (=> b!72065 m!69619))

(assert (=> b!71422 d!16335))

(assert (=> d!15963 d!15961))

(declare-fun d!16337 () Bool)

(assert (=> d!16337 (= (getValueByKey!131 lt!31450 (_1!1079 lt!31200)) (Some!136 (_2!1079 lt!31200)))))

(assert (=> d!16337 true))

(declare-fun _$22!381 () Unit!2006)

(assert (=> d!16337 (= (choose!407 lt!31450 (_1!1079 lt!31200) (_2!1079 lt!31200)) _$22!381)))

(declare-fun bs!3089 () Bool)

(assert (= bs!3089 d!16337))

(assert (=> bs!3089 m!68003))

(assert (=> d!15963 d!16337))

(declare-fun d!16339 () Bool)

(declare-fun res!38346 () Bool)

(declare-fun e!47153 () Bool)

(assert (=> d!16339 (=> res!38346 e!47153)))

(assert (=> d!16339 (= res!38346 (or ((_ is Nil!1501) lt!31450) ((_ is Nil!1501) (t!5044 lt!31450))))))

(assert (=> d!16339 (= (isStrictlySorted!286 lt!31450) e!47153)))

(declare-fun b!72067 () Bool)

(declare-fun e!47154 () Bool)

(assert (=> b!72067 (= e!47153 e!47154)))

(declare-fun res!38347 () Bool)

(assert (=> b!72067 (=> (not res!38347) (not e!47154))))

(assert (=> b!72067 (= res!38347 (bvslt (_1!1079 (h!2086 lt!31450)) (_1!1079 (h!2086 (t!5044 lt!31450)))))))

(declare-fun b!72068 () Bool)

(assert (=> b!72068 (= e!47154 (isStrictlySorted!286 (t!5044 lt!31450)))))

(assert (= (and d!16339 (not res!38346)) b!72067))

(assert (= (and b!72067 res!38347) b!72068))

(declare-fun m!69621 () Bool)

(assert (=> b!72068 m!69621))

(assert (=> d!15963 d!16339))

(declare-fun d!16341 () Bool)

(declare-fun res!38348 () Bool)

(declare-fun e!47155 () Bool)

(assert (=> d!16341 (=> res!38348 e!47155)))

(assert (=> d!16341 (= res!38348 (and ((_ is Cons!1500) (toList!732 lt!31462)) (= (_1!1079 (h!2086 (toList!732 lt!31462))) (_1!1079 lt!31200))))))

(assert (=> d!16341 (= (containsKey!135 (toList!732 lt!31462) (_1!1079 lt!31200)) e!47155)))

(declare-fun b!72069 () Bool)

(declare-fun e!47156 () Bool)

(assert (=> b!72069 (= e!47155 e!47156)))

(declare-fun res!38349 () Bool)

(assert (=> b!72069 (=> (not res!38349) (not e!47156))))

(assert (=> b!72069 (= res!38349 (and (or (not ((_ is Cons!1500) (toList!732 lt!31462))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31462))) (_1!1079 lt!31200))) ((_ is Cons!1500) (toList!732 lt!31462)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31462))) (_1!1079 lt!31200))))))

(declare-fun b!72070 () Bool)

(assert (=> b!72070 (= e!47156 (containsKey!135 (t!5044 (toList!732 lt!31462)) (_1!1079 lt!31200)))))

(assert (= (and d!16341 (not res!38348)) b!72069))

(assert (= (and b!72069 res!38349) b!72070))

(declare-fun m!69623 () Bool)

(assert (=> b!72070 m!69623))

(assert (=> d!15923 d!16341))

(declare-fun d!16343 () Bool)

(declare-fun e!47157 () Bool)

(assert (=> d!16343 e!47157))

(declare-fun res!38350 () Bool)

(assert (=> d!16343 (=> res!38350 e!47157)))

(declare-fun lt!31986 () Bool)

(assert (=> d!16343 (= res!38350 (not lt!31986))))

(declare-fun lt!31984 () Bool)

(assert (=> d!16343 (= lt!31986 lt!31984)))

(declare-fun lt!31985 () Unit!2006)

(declare-fun e!47158 () Unit!2006)

(assert (=> d!16343 (= lt!31985 e!47158)))

(declare-fun c!10591 () Bool)

(assert (=> d!16343 (= c!10591 lt!31984)))

(assert (=> d!16343 (= lt!31984 (containsKey!135 (toList!732 lt!31759) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16343 (= (contains!726 lt!31759 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31986)))

(declare-fun b!72071 () Bool)

(declare-fun lt!31987 () Unit!2006)

(assert (=> b!72071 (= e!47158 lt!31987)))

(assert (=> b!72071 (= lt!31987 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31759) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72071 (isDefined!85 (getValueByKey!131 (toList!732 lt!31759) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72072 () Bool)

(declare-fun Unit!2051 () Unit!2006)

(assert (=> b!72072 (= e!47158 Unit!2051)))

(declare-fun b!72073 () Bool)

(assert (=> b!72073 (= e!47157 (isDefined!85 (getValueByKey!131 (toList!732 lt!31759) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16343 c!10591) b!72071))

(assert (= (and d!16343 (not c!10591)) b!72072))

(assert (= (and d!16343 (not res!38350)) b!72073))

(declare-fun m!69625 () Bool)

(assert (=> d!16343 m!69625))

(declare-fun m!69627 () Bool)

(assert (=> b!72071 m!69627))

(assert (=> b!72071 m!68953))

(assert (=> b!72071 m!68953))

(declare-fun m!69629 () Bool)

(assert (=> b!72071 m!69629))

(assert (=> b!72073 m!68953))

(assert (=> b!72073 m!68953))

(assert (=> b!72073 m!69629))

(assert (=> bm!6205 d!16343))

(assert (=> bm!6171 d!15913))

(assert (=> b!71570 d!16151))

(assert (=> b!71570 d!16153))

(declare-fun d!16345 () Bool)

(declare-fun res!38352 () Bool)

(declare-fun e!47161 () Bool)

(assert (=> d!16345 (=> res!38352 e!47161)))

(assert (=> d!16345 (= res!38352 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16345 (= (arrayNoDuplicates!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10431 (Cons!1499 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1500) Nil!1500)) e!47161)))

(declare-fun b!72074 () Bool)

(declare-fun e!47160 () Bool)

(assert (=> b!72074 (= e!47160 (contains!727 (ite c!10431 (Cons!1499 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1500) Nil!1500) (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!72075 () Bool)

(declare-fun e!47159 () Bool)

(declare-fun call!6259 () Bool)

(assert (=> b!72075 (= e!47159 call!6259)))

(declare-fun c!10592 () Bool)

(declare-fun bm!6256 () Bool)

(assert (=> bm!6256 (= call!6259 (arrayNoDuplicates!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10592 (Cons!1499 (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10431 (Cons!1499 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1500) Nil!1500)) (ite c!10431 (Cons!1499 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1500) Nil!1500))))))

(declare-fun b!72076 () Bool)

(declare-fun e!47162 () Bool)

(assert (=> b!72076 (= e!47161 e!47162)))

(declare-fun res!38353 () Bool)

(assert (=> b!72076 (=> (not res!38353) (not e!47162))))

(assert (=> b!72076 (= res!38353 (not e!47160))))

(declare-fun res!38351 () Bool)

(assert (=> b!72076 (=> (not res!38351) (not e!47160))))

(assert (=> b!72076 (= res!38351 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!72077 () Bool)

(assert (=> b!72077 (= e!47159 call!6259)))

(declare-fun b!72078 () Bool)

(assert (=> b!72078 (= e!47162 e!47159)))

(assert (=> b!72078 (= c!10592 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!16345 (not res!38352)) b!72076))

(assert (= (and b!72076 res!38351) b!72074))

(assert (= (and b!72076 res!38353) b!72078))

(assert (= (and b!72078 c!10592) b!72077))

(assert (= (and b!72078 (not c!10592)) b!72075))

(assert (= (or b!72077 b!72075) bm!6256))

(declare-fun m!69631 () Bool)

(assert (=> b!72074 m!69631))

(assert (=> b!72074 m!69631))

(declare-fun m!69633 () Bool)

(assert (=> b!72074 m!69633))

(assert (=> bm!6256 m!69631))

(declare-fun m!69635 () Bool)

(assert (=> bm!6256 m!69635))

(assert (=> b!72076 m!69631))

(assert (=> b!72076 m!69631))

(declare-fun m!69637 () Bool)

(assert (=> b!72076 m!69637))

(assert (=> b!72078 m!69631))

(assert (=> b!72078 m!69631))

(assert (=> b!72078 m!69637))

(assert (=> bm!6197 d!16345))

(declare-fun d!16347 () Bool)

(declare-fun res!38354 () Bool)

(declare-fun e!47163 () Bool)

(assert (=> d!16347 (=> res!38354 e!47163)))

(assert (=> d!16347 (= res!38354 (and ((_ is Cons!1500) (toList!732 lt!31458)) (= (_1!1079 (h!2086 (toList!732 lt!31458))) (_1!1079 lt!31205))))))

(assert (=> d!16347 (= (containsKey!135 (toList!732 lt!31458) (_1!1079 lt!31205)) e!47163)))

(declare-fun b!72079 () Bool)

(declare-fun e!47164 () Bool)

(assert (=> b!72079 (= e!47163 e!47164)))

(declare-fun res!38355 () Bool)

(assert (=> b!72079 (=> (not res!38355) (not e!47164))))

(assert (=> b!72079 (= res!38355 (and (or (not ((_ is Cons!1500) (toList!732 lt!31458))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31458))) (_1!1079 lt!31205))) ((_ is Cons!1500) (toList!732 lt!31458)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31458))) (_1!1079 lt!31205))))))

(declare-fun b!72080 () Bool)

(assert (=> b!72080 (= e!47164 (containsKey!135 (t!5044 (toList!732 lt!31458)) (_1!1079 lt!31205)))))

(assert (= (and d!16347 (not res!38354)) b!72079))

(assert (= (and b!72079 res!38355) b!72080))

(declare-fun m!69639 () Bool)

(assert (=> b!72080 m!69639))

(assert (=> d!15945 d!16347))

(declare-fun d!16349 () Bool)

(declare-fun res!38356 () Bool)

(declare-fun e!47165 () Bool)

(assert (=> d!16349 (=> res!38356 e!47165)))

(assert (=> d!16349 (= res!38356 (or ((_ is Nil!1501) lt!31506) ((_ is Nil!1501) (t!5044 lt!31506))))))

(assert (=> d!16349 (= (isStrictlySorted!286 lt!31506) e!47165)))

(declare-fun b!72081 () Bool)

(declare-fun e!47166 () Bool)

(assert (=> b!72081 (= e!47165 e!47166)))

(declare-fun res!38357 () Bool)

(assert (=> b!72081 (=> (not res!38357) (not e!47166))))

(assert (=> b!72081 (= res!38357 (bvslt (_1!1079 (h!2086 lt!31506)) (_1!1079 (h!2086 (t!5044 lt!31506)))))))

(declare-fun b!72082 () Bool)

(assert (=> b!72082 (= e!47166 (isStrictlySorted!286 (t!5044 lt!31506)))))

(assert (= (and d!16349 (not res!38356)) b!72081))

(assert (= (and b!72081 res!38357) b!72082))

(declare-fun m!69641 () Bool)

(assert (=> b!72082 m!69641))

(assert (=> d!15867 d!16349))

(declare-fun d!16351 () Bool)

(declare-fun res!38358 () Bool)

(declare-fun e!47167 () Bool)

(assert (=> d!16351 (=> res!38358 e!47167)))

(assert (=> d!16351 (= res!38358 (or ((_ is Nil!1501) (toList!732 (+!95 lt!31210 lt!31200))) ((_ is Nil!1501) (t!5044 (toList!732 (+!95 lt!31210 lt!31200))))))))

(assert (=> d!16351 (= (isStrictlySorted!286 (toList!732 (+!95 lt!31210 lt!31200))) e!47167)))

(declare-fun b!72083 () Bool)

(declare-fun e!47168 () Bool)

(assert (=> b!72083 (= e!47167 e!47168)))

(declare-fun res!38359 () Bool)

(assert (=> b!72083 (=> (not res!38359) (not e!47168))))

(assert (=> b!72083 (= res!38359 (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 lt!31200)))) (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))))))))

(declare-fun b!72084 () Bool)

(assert (=> b!72084 (= e!47168 (isStrictlySorted!286 (t!5044 (toList!732 (+!95 lt!31210 lt!31200)))))))

(assert (= (and d!16351 (not res!38358)) b!72083))

(assert (= (and b!72083 res!38359) b!72084))

(assert (=> b!72084 m!69387))

(assert (=> d!15867 d!16351))

(declare-fun d!16353 () Bool)

(declare-fun res!38360 () Bool)

(declare-fun e!47169 () Bool)

(assert (=> d!16353 (=> res!38360 e!47169)))

(assert (=> d!16353 (= res!38360 (= (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16353 (= (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!47169)))

(declare-fun b!72085 () Bool)

(declare-fun e!47170 () Bool)

(assert (=> b!72085 (= e!47169 e!47170)))

(declare-fun res!38361 () Bool)

(assert (=> b!72085 (=> (not res!38361) (not e!47170))))

(assert (=> b!72085 (= res!38361 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72086 () Bool)

(assert (=> b!72086 (= e!47170 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16353 (not res!38360)) b!72085))

(assert (= (and b!72085 res!38361) b!72086))

(assert (=> d!16353 m!69631))

(assert (=> b!72086 m!67713))

(declare-fun m!69643 () Bool)

(assert (=> b!72086 m!69643))

(assert (=> b!71597 d!16353))

(declare-fun d!16355 () Bool)

(declare-fun lt!31988 () Bool)

(assert (=> d!16355 (= lt!31988 (select (content!74 (t!5044 (toList!732 lt!31426))) lt!31205))))

(declare-fun e!47172 () Bool)

(assert (=> d!16355 (= lt!31988 e!47172)))

(declare-fun res!38363 () Bool)

(assert (=> d!16355 (=> (not res!38363) (not e!47172))))

(assert (=> d!16355 (= res!38363 ((_ is Cons!1500) (t!5044 (toList!732 lt!31426))))))

(assert (=> d!16355 (= (contains!728 (t!5044 (toList!732 lt!31426)) lt!31205) lt!31988)))

(declare-fun b!72087 () Bool)

(declare-fun e!47171 () Bool)

(assert (=> b!72087 (= e!47172 e!47171)))

(declare-fun res!38362 () Bool)

(assert (=> b!72087 (=> res!38362 e!47171)))

(assert (=> b!72087 (= res!38362 (= (h!2086 (t!5044 (toList!732 lt!31426))) lt!31205))))

(declare-fun b!72088 () Bool)

(assert (=> b!72088 (= e!47171 (contains!728 (t!5044 (t!5044 (toList!732 lt!31426))) lt!31205))))

(assert (= (and d!16355 res!38363) b!72087))

(assert (= (and b!72087 (not res!38362)) b!72088))

(declare-fun m!69645 () Bool)

(assert (=> d!16355 m!69645))

(declare-fun m!69647 () Bool)

(assert (=> d!16355 m!69647))

(declare-fun m!69649 () Bool)

(assert (=> b!72088 m!69649))

(assert (=> b!71611 d!16355))

(declare-fun d!16357 () Bool)

(declare-fun c!10593 () Bool)

(assert (=> d!16357 (= c!10593 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31462))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31462)))) (_1!1079 lt!31200))))))

(declare-fun e!47173 () Option!137)

(assert (=> d!16357 (= (getValueByKey!131 (t!5044 (toList!732 lt!31462)) (_1!1079 lt!31200)) e!47173)))

(declare-fun b!72089 () Bool)

(assert (=> b!72089 (= e!47173 (Some!136 (_2!1079 (h!2086 (t!5044 (toList!732 lt!31462))))))))

(declare-fun b!72091 () Bool)

(declare-fun e!47174 () Option!137)

(assert (=> b!72091 (= e!47174 (getValueByKey!131 (t!5044 (t!5044 (toList!732 lt!31462))) (_1!1079 lt!31200)))))

(declare-fun b!72090 () Bool)

(assert (=> b!72090 (= e!47173 e!47174)))

(declare-fun c!10594 () Bool)

(assert (=> b!72090 (= c!10594 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31462))) (not (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31462)))) (_1!1079 lt!31200)))))))

(declare-fun b!72092 () Bool)

(assert (=> b!72092 (= e!47174 None!135)))

(assert (= (and d!16357 c!10593) b!72089))

(assert (= (and d!16357 (not c!10593)) b!72090))

(assert (= (and b!72090 c!10594) b!72091))

(assert (= (and b!72090 (not c!10594)) b!72092))

(declare-fun m!69651 () Bool)

(assert (=> b!72091 m!69651))

(assert (=> b!71207 d!16357))

(declare-fun c!10595 () Bool)

(declare-fun d!16359 () Bool)

(assert (=> d!16359 (= c!10595 (and ((_ is Cons!1500) (toList!732 lt!31489)) (= (_1!1079 (h!2086 (toList!732 lt!31489))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun e!47175 () Option!137)

(assert (=> d!16359 (= (getValueByKey!131 (toList!732 lt!31489) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) e!47175)))

(declare-fun b!72093 () Bool)

(assert (=> b!72093 (= e!47175 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31489)))))))

(declare-fun b!72095 () Bool)

(declare-fun e!47176 () Option!137)

(assert (=> b!72095 (= e!47176 (getValueByKey!131 (t!5044 (toList!732 lt!31489)) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72094 () Bool)

(assert (=> b!72094 (= e!47175 e!47176)))

(declare-fun c!10596 () Bool)

(assert (=> b!72094 (= c!10596 (and ((_ is Cons!1500) (toList!732 lt!31489)) (not (= (_1!1079 (h!2086 (toList!732 lt!31489))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))))

(declare-fun b!72096 () Bool)

(assert (=> b!72096 (= e!47176 None!135)))

(assert (= (and d!16359 c!10595) b!72093))

(assert (= (and d!16359 (not c!10595)) b!72094))

(assert (= (and b!72094 c!10596) b!72095))

(assert (= (and b!72094 (not c!10596)) b!72096))

(declare-fun m!69653 () Bool)

(assert (=> b!72095 m!69653))

(assert (=> b!71197 d!16359))

(declare-fun d!16361 () Bool)

(declare-fun res!38365 () Bool)

(declare-fun e!47177 () Bool)

(assert (=> d!16361 (=> (not res!38365) (not e!47177))))

(assert (=> d!16361 (= res!38365 (validMask!0 (mask!6149 (v!2517 (underlying!261 thiss!992)))))))

(assert (=> d!16361 (= (simpleValid!49 (v!2517 (underlying!261 thiss!992))) e!47177)))

(declare-fun b!72100 () Bool)

(assert (=> b!72100 (= e!47177 (and (bvsge (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!394 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!72098 () Bool)

(declare-fun res!38366 () Bool)

(assert (=> b!72098 (=> (not res!38366) (not e!47177))))

(assert (=> b!72098 (= res!38366 (bvsge (size!2093 (v!2517 (underlying!261 thiss!992))) (_size!394 (v!2517 (underlying!261 thiss!992)))))))

(declare-fun b!72097 () Bool)

(declare-fun res!38367 () Bool)

(assert (=> b!72097 (=> (not res!38367) (not e!47177))))

(assert (=> b!72097 (= res!38367 (and (= (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001)) (= (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (size!2090 (_values!2175 (v!2517 (underlying!261 thiss!992))))) (bvsge (_size!394 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!394 (v!2517 (underlying!261 thiss!992))) (bvadd (mask!6149 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!72099 () Bool)

(declare-fun res!38364 () Bool)

(assert (=> b!72099 (=> (not res!38364) (not e!47177))))

(assert (=> b!72099 (= res!38364 (= (size!2093 (v!2517 (underlying!261 thiss!992))) (bvadd (_size!394 (v!2517 (underlying!261 thiss!992))) (bvsdiv (bvadd (extraKeys!2055 (v!2517 (underlying!261 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!16361 res!38365) b!72097))

(assert (= (and b!72097 res!38367) b!72098))

(assert (= (and b!72098 res!38366) b!72099))

(assert (= (and b!72099 res!38364) b!72100))

(assert (=> d!16361 m!67739))

(declare-fun m!69655 () Bool)

(assert (=> b!72098 m!69655))

(assert (=> b!72099 m!69655))

(assert (=> d!15971 d!16361))

(declare-fun d!16363 () Bool)

(assert (=> d!16363 (= (map!1155 (_2!1080 lt!31596)) (getCurrentListMap!425 (_keys!3840 (_2!1080 lt!31596)) (_values!2175 (_2!1080 lt!31596)) (mask!6149 (_2!1080 lt!31596)) (extraKeys!2055 (_2!1080 lt!31596)) (zeroValue!2096 (_2!1080 lt!31596)) (minValue!2096 (_2!1080 lt!31596)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31596))))))

(declare-fun bs!3090 () Bool)

(assert (= bs!3090 d!16363))

(declare-fun m!69657 () Bool)

(assert (=> bs!3090 m!69657))

(assert (=> b!71305 d!16363))

(declare-fun d!16365 () Bool)

(declare-fun e!47178 () Bool)

(assert (=> d!16365 e!47178))

(declare-fun res!38369 () Bool)

(assert (=> d!16365 (=> (not res!38369) (not e!47178))))

(declare-fun lt!31992 () ListLongMap!1433)

(assert (=> d!16365 (= res!38369 (contains!726 lt!31992 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!31991 () List!1504)

(assert (=> d!16365 (= lt!31992 (ListLongMap!1434 lt!31991))))

(declare-fun lt!31990 () Unit!2006)

(declare-fun lt!31989 () Unit!2006)

(assert (=> d!16365 (= lt!31990 lt!31989)))

(assert (=> d!16365 (= (getValueByKey!131 lt!31991 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16365 (= lt!31989 (lemmaContainsTupThenGetReturnValue!50 lt!31991 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16365 (= lt!31991 (insertStrictlySorted!52 (toList!732 (map!1155 newMap!16)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16365 (= (+!95 (map!1155 newMap!16) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!31992)))

(declare-fun b!72101 () Bool)

(declare-fun res!38368 () Bool)

(assert (=> b!72101 (=> (not res!38368) (not e!47178))))

(assert (=> b!72101 (= res!38368 (= (getValueByKey!131 (toList!732 lt!31992) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!72102 () Bool)

(assert (=> b!72102 (= e!47178 (contains!728 (toList!732 lt!31992) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!16365 res!38369) b!72101))

(assert (= (and b!72101 res!38368) b!72102))

(declare-fun m!69659 () Bool)

(assert (=> d!16365 m!69659))

(declare-fun m!69661 () Bool)

(assert (=> d!16365 m!69661))

(declare-fun m!69663 () Bool)

(assert (=> d!16365 m!69663))

(declare-fun m!69665 () Bool)

(assert (=> d!16365 m!69665))

(declare-fun m!69667 () Bool)

(assert (=> b!72101 m!69667))

(declare-fun m!69669 () Bool)

(assert (=> b!72102 m!69669))

(assert (=> b!71305 d!16365))

(assert (=> b!71305 d!15807))

(declare-fun d!16367 () Bool)

(declare-fun e!47179 () Bool)

(assert (=> d!16367 e!47179))

(declare-fun res!38370 () Bool)

(assert (=> d!16367 (=> res!38370 e!47179)))

(declare-fun lt!31995 () Bool)

(assert (=> d!16367 (= res!38370 (not lt!31995))))

(declare-fun lt!31993 () Bool)

(assert (=> d!16367 (= lt!31995 lt!31993)))

(declare-fun lt!31994 () Unit!2006)

(declare-fun e!47180 () Unit!2006)

(assert (=> d!16367 (= lt!31994 e!47180)))

(declare-fun c!10597 () Bool)

(assert (=> d!16367 (= c!10597 lt!31993)))

(assert (=> d!16367 (= lt!31993 (containsKey!135 (toList!732 lt!31683) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16367 (= (contains!726 lt!31683 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31995)))

(declare-fun b!72103 () Bool)

(declare-fun lt!31996 () Unit!2006)

(assert (=> b!72103 (= e!47180 lt!31996)))

(assert (=> b!72103 (= lt!31996 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31683) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72103 (isDefined!85 (getValueByKey!131 (toList!732 lt!31683) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72104 () Bool)

(declare-fun Unit!2052 () Unit!2006)

(assert (=> b!72104 (= e!47180 Unit!2052)))

(declare-fun b!72105 () Bool)

(assert (=> b!72105 (= e!47179 (isDefined!85 (getValueByKey!131 (toList!732 lt!31683) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16367 c!10597) b!72103))

(assert (= (and d!16367 (not c!10597)) b!72104))

(assert (= (and d!16367 (not res!38370)) b!72105))

(declare-fun m!69671 () Bool)

(assert (=> d!16367 m!69671))

(declare-fun m!69673 () Bool)

(assert (=> b!72103 m!69673))

(declare-fun m!69675 () Bool)

(assert (=> b!72103 m!69675))

(assert (=> b!72103 m!69675))

(declare-fun m!69677 () Bool)

(assert (=> b!72103 m!69677))

(assert (=> b!72105 m!69675))

(assert (=> b!72105 m!69675))

(assert (=> b!72105 m!69677))

(assert (=> bm!6192 d!16367))

(declare-fun d!16369 () Bool)

(declare-fun c!10598 () Bool)

(assert (=> d!16369 (= c!10598 (and ((_ is Cons!1500) (toList!732 lt!31721)) (= (_1!1079 (h!2086 (toList!732 lt!31721))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47181 () Option!137)

(assert (=> d!16369 (= (getValueByKey!131 (toList!732 lt!31721) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47181)))

(declare-fun b!72106 () Bool)

(assert (=> b!72106 (= e!47181 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31721)))))))

(declare-fun b!72108 () Bool)

(declare-fun e!47182 () Option!137)

(assert (=> b!72108 (= e!47182 (getValueByKey!131 (t!5044 (toList!732 lt!31721)) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72107 () Bool)

(assert (=> b!72107 (= e!47181 e!47182)))

(declare-fun c!10599 () Bool)

(assert (=> b!72107 (= c!10599 (and ((_ is Cons!1500) (toList!732 lt!31721)) (not (= (_1!1079 (h!2086 (toList!732 lt!31721))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72109 () Bool)

(assert (=> b!72109 (= e!47182 None!135)))

(assert (= (and d!16369 c!10598) b!72106))

(assert (= (and d!16369 (not c!10598)) b!72107))

(assert (= (and b!72107 c!10599) b!72108))

(assert (= (and b!72107 (not c!10599)) b!72109))

(declare-fun m!69679 () Bool)

(assert (=> b!72108 m!69679))

(assert (=> b!71500 d!16369))

(declare-fun lt!31997 () Bool)

(declare-fun d!16371 () Bool)

(assert (=> d!16371 (= lt!31997 (select (content!74 (toList!732 lt!31669)) (tuple2!2139 lt!31444 lt!31441)))))

(declare-fun e!47184 () Bool)

(assert (=> d!16371 (= lt!31997 e!47184)))

(declare-fun res!38372 () Bool)

(assert (=> d!16371 (=> (not res!38372) (not e!47184))))

(assert (=> d!16371 (= res!38372 ((_ is Cons!1500) (toList!732 lt!31669)))))

(assert (=> d!16371 (= (contains!728 (toList!732 lt!31669) (tuple2!2139 lt!31444 lt!31441)) lt!31997)))

(declare-fun b!72110 () Bool)

(declare-fun e!47183 () Bool)

(assert (=> b!72110 (= e!47184 e!47183)))

(declare-fun res!38371 () Bool)

(assert (=> b!72110 (=> res!38371 e!47183)))

(assert (=> b!72110 (= res!38371 (= (h!2086 (toList!732 lt!31669)) (tuple2!2139 lt!31444 lt!31441)))))

(declare-fun b!72111 () Bool)

(assert (=> b!72111 (= e!47183 (contains!728 (t!5044 (toList!732 lt!31669)) (tuple2!2139 lt!31444 lt!31441)))))

(assert (= (and d!16371 res!38372) b!72110))

(assert (= (and b!72110 (not res!38371)) b!72111))

(declare-fun m!69681 () Bool)

(assert (=> d!16371 m!69681))

(declare-fun m!69683 () Bool)

(assert (=> d!16371 m!69683))

(declare-fun m!69685 () Bool)

(assert (=> b!72111 m!69685))

(assert (=> b!71417 d!16371))

(declare-fun lt!31998 () Bool)

(declare-fun d!16373 () Bool)

(assert (=> d!16373 (= lt!31998 (select (content!74 (toList!732 lt!31617)) (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun e!47186 () Bool)

(assert (=> d!16373 (= lt!31998 e!47186)))

(declare-fun res!38374 () Bool)

(assert (=> d!16373 (=> (not res!38374) (not e!47186))))

(assert (=> d!16373 (= res!38374 ((_ is Cons!1500) (toList!732 lt!31617)))))

(assert (=> d!16373 (= (contains!728 (toList!732 lt!31617) (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31998)))

(declare-fun b!72112 () Bool)

(declare-fun e!47185 () Bool)

(assert (=> b!72112 (= e!47186 e!47185)))

(declare-fun res!38373 () Bool)

(assert (=> b!72112 (=> res!38373 e!47185)))

(assert (=> b!72112 (= res!38373 (= (h!2086 (toList!732 lt!31617)) (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!72113 () Bool)

(assert (=> b!72113 (= e!47185 (contains!728 (t!5044 (toList!732 lt!31617)) (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!16373 res!38374) b!72112))

(assert (= (and b!72112 (not res!38373)) b!72113))

(declare-fun m!69687 () Bool)

(assert (=> d!16373 m!69687))

(declare-fun m!69689 () Bool)

(assert (=> d!16373 m!69689))

(declare-fun m!69691 () Bool)

(assert (=> b!72113 m!69691))

(assert (=> b!71328 d!16373))

(declare-fun d!16375 () Bool)

(assert (=> d!16375 (= (get!1150 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2521 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15993 d!16375))

(assert (=> d!15993 d!16167))

(declare-fun d!16377 () Bool)

(declare-fun res!38375 () Bool)

(declare-fun e!47187 () Bool)

(assert (=> d!16377 (=> res!38375 e!47187)))

(assert (=> d!16377 (= res!38375 (and ((_ is Cons!1500) (toList!732 lt!31396)) (= (_1!1079 (h!2086 (toList!732 lt!31396))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16377 (= (containsKey!135 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000) e!47187)))

(declare-fun b!72114 () Bool)

(declare-fun e!47188 () Bool)

(assert (=> b!72114 (= e!47187 e!47188)))

(declare-fun res!38376 () Bool)

(assert (=> b!72114 (=> (not res!38376) (not e!47188))))

(assert (=> b!72114 (= res!38376 (and (or (not ((_ is Cons!1500) (toList!732 lt!31396))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31396))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!732 lt!31396)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31396))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72115 () Bool)

(assert (=> b!72115 (= e!47188 (containsKey!135 (t!5044 (toList!732 lt!31396)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16377 (not res!38375)) b!72114))

(assert (= (and b!72114 res!38376) b!72115))

(declare-fun m!69693 () Bool)

(assert (=> b!72115 m!69693))

(assert (=> d!15957 d!16377))

(assert (=> d!15981 d!15979))

(assert (=> d!15981 d!15977))

(assert (=> d!15981 d!15975))

(assert (=> d!15981 d!15973))

(declare-fun d!16379 () Bool)

(declare-fun e!47189 () Bool)

(assert (=> d!16379 e!47189))

(declare-fun res!38377 () Bool)

(assert (=> d!16379 (=> res!38377 e!47189)))

(declare-fun lt!32001 () Bool)

(assert (=> d!16379 (= res!38377 (not lt!32001))))

(declare-fun lt!31999 () Bool)

(assert (=> d!16379 (= lt!32001 lt!31999)))

(declare-fun lt!32000 () Unit!2006)

(declare-fun e!47190 () Unit!2006)

(assert (=> d!16379 (= lt!32000 e!47190)))

(declare-fun c!10600 () Bool)

(assert (=> d!16379 (= c!10600 lt!31999)))

(assert (=> d!16379 (= lt!31999 (containsKey!135 (toList!732 lt!31721) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16379 (= (contains!726 lt!31721 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32001)))

(declare-fun b!72116 () Bool)

(declare-fun lt!32002 () Unit!2006)

(assert (=> b!72116 (= e!47190 lt!32002)))

(assert (=> b!72116 (= lt!32002 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31721) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> b!72116 (isDefined!85 (getValueByKey!131 (toList!732 lt!31721) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72117 () Bool)

(declare-fun Unit!2053 () Unit!2006)

(assert (=> b!72117 (= e!47190 Unit!2053)))

(declare-fun b!72118 () Bool)

(assert (=> b!72118 (= e!47189 (isDefined!85 (getValueByKey!131 (toList!732 lt!31721) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16379 c!10600) b!72116))

(assert (= (and d!16379 (not c!10600)) b!72117))

(assert (= (and d!16379 (not res!38377)) b!72118))

(declare-fun m!69695 () Bool)

(assert (=> d!16379 m!69695))

(declare-fun m!69697 () Bool)

(assert (=> b!72116 m!69697))

(assert (=> b!72116 m!68597))

(assert (=> b!72116 m!68597))

(declare-fun m!69699 () Bool)

(assert (=> b!72116 m!69699))

(assert (=> b!72118 m!68597))

(assert (=> b!72118 m!68597))

(assert (=> b!72118 m!69699))

(assert (=> d!15973 d!16379))

(declare-fun d!16381 () Bool)

(declare-fun c!10601 () Bool)

(assert (=> d!16381 (= c!10601 (and ((_ is Cons!1500) lt!31720) (= (_1!1079 (h!2086 lt!31720)) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47191 () Option!137)

(assert (=> d!16381 (= (getValueByKey!131 lt!31720 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47191)))

(declare-fun b!72119 () Bool)

(assert (=> b!72119 (= e!47191 (Some!136 (_2!1079 (h!2086 lt!31720))))))

(declare-fun b!72121 () Bool)

(declare-fun e!47192 () Option!137)

(assert (=> b!72121 (= e!47192 (getValueByKey!131 (t!5044 lt!31720) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72120 () Bool)

(assert (=> b!72120 (= e!47191 e!47192)))

(declare-fun c!10602 () Bool)

(assert (=> b!72120 (= c!10602 (and ((_ is Cons!1500) lt!31720) (not (= (_1!1079 (h!2086 lt!31720)) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72122 () Bool)

(assert (=> b!72122 (= e!47192 None!135)))

(assert (= (and d!16381 c!10601) b!72119))

(assert (= (and d!16381 (not c!10601)) b!72120))

(assert (= (and b!72120 c!10602) b!72121))

(assert (= (and b!72120 (not c!10602)) b!72122))

(declare-fun m!69701 () Bool)

(assert (=> b!72121 m!69701))

(assert (=> d!15973 d!16381))

(declare-fun d!16383 () Bool)

(assert (=> d!16383 (= (getValueByKey!131 lt!31720 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!32003 () Unit!2006)

(assert (=> d!16383 (= lt!32003 (choose!407 lt!31720 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!47193 () Bool)

(assert (=> d!16383 e!47193))

(declare-fun res!38378 () Bool)

(assert (=> d!16383 (=> (not res!38378) (not e!47193))))

(assert (=> d!16383 (= res!38378 (isStrictlySorted!286 lt!31720))))

(assert (=> d!16383 (= (lemmaContainsTupThenGetReturnValue!50 lt!31720 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32003)))

(declare-fun b!72123 () Bool)

(declare-fun res!38379 () Bool)

(assert (=> b!72123 (=> (not res!38379) (not e!47193))))

(assert (=> b!72123 (= res!38379 (containsKey!135 lt!31720 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72124 () Bool)

(assert (=> b!72124 (= e!47193 (contains!728 lt!31720 (tuple2!2139 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16383 res!38378) b!72123))

(assert (= (and b!72123 res!38379) b!72124))

(assert (=> d!16383 m!68591))

(declare-fun m!69703 () Bool)

(assert (=> d!16383 m!69703))

(declare-fun m!69705 () Bool)

(assert (=> d!16383 m!69705))

(declare-fun m!69707 () Bool)

(assert (=> b!72123 m!69707))

(declare-fun m!69709 () Bool)

(assert (=> b!72124 m!69709))

(assert (=> d!15973 d!16383))

(declare-fun b!72125 () Bool)

(declare-fun e!47195 () List!1504)

(declare-fun call!6261 () List!1504)

(assert (=> b!72125 (= e!47195 call!6261)))

(declare-fun b!72126 () Bool)

(declare-fun res!38380 () Bool)

(declare-fun e!47194 () Bool)

(assert (=> b!72126 (=> (not res!38380) (not e!47194))))

(declare-fun lt!32004 () List!1504)

(assert (=> b!72126 (= res!38380 (containsKey!135 lt!32004 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72127 () Bool)

(declare-fun c!10604 () Bool)

(assert (=> b!72127 (= c!10604 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47197 () List!1504)

(declare-fun e!47196 () List!1504)

(assert (=> b!72127 (= e!47197 e!47196)))

(declare-fun b!72129 () Bool)

(declare-fun call!6262 () List!1504)

(assert (=> b!72129 (= e!47197 call!6262)))

(declare-fun b!72130 () Bool)

(declare-fun call!6260 () List!1504)

(assert (=> b!72130 (= e!47196 call!6260)))

(declare-fun b!72131 () Bool)

(declare-fun e!47198 () List!1504)

(assert (=> b!72131 (= e!47198 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31210)) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun bm!6257 () Bool)

(assert (=> bm!6257 (= call!6260 call!6262)))

(declare-fun bm!6258 () Bool)

(assert (=> bm!6258 (= call!6262 call!6261)))

(declare-fun c!10603 () Bool)

(declare-fun bm!6259 () Bool)

(assert (=> bm!6259 (= call!6261 ($colon$colon!64 e!47198 (ite c!10603 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun c!10605 () Bool)

(assert (=> bm!6259 (= c!10605 c!10603)))

(declare-fun c!10606 () Bool)

(declare-fun b!72132 () Bool)

(assert (=> b!72132 (= e!47198 (ite c!10606 (t!5044 (toList!732 lt!31210)) (ite c!10604 (Cons!1500 (h!2086 (toList!732 lt!31210)) (t!5044 (toList!732 lt!31210))) Nil!1501)))))

(declare-fun b!72128 () Bool)

(assert (=> b!72128 (= e!47196 call!6260)))

(declare-fun d!16385 () Bool)

(assert (=> d!16385 e!47194))

(declare-fun res!38381 () Bool)

(assert (=> d!16385 (=> (not res!38381) (not e!47194))))

(assert (=> d!16385 (= res!38381 (isStrictlySorted!286 lt!32004))))

(assert (=> d!16385 (= lt!32004 e!47195)))

(assert (=> d!16385 (= c!10603 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16385 (isStrictlySorted!286 (toList!732 lt!31210))))

(assert (=> d!16385 (= (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32004)))

(declare-fun b!72133 () Bool)

(assert (=> b!72133 (= e!47194 (contains!728 lt!32004 (tuple2!2139 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72134 () Bool)

(assert (=> b!72134 (= e!47195 e!47197)))

(assert (=> b!72134 (= c!10606 (and ((_ is Cons!1500) (toList!732 lt!31210)) (= (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16385 c!10603) b!72125))

(assert (= (and d!16385 (not c!10603)) b!72134))

(assert (= (and b!72134 c!10606) b!72129))

(assert (= (and b!72134 (not c!10606)) b!72127))

(assert (= (and b!72127 c!10604) b!72128))

(assert (= (and b!72127 (not c!10604)) b!72130))

(assert (= (or b!72128 b!72130) bm!6257))

(assert (= (or b!72129 bm!6257) bm!6258))

(assert (= (or b!72125 bm!6258) bm!6259))

(assert (= (and bm!6259 c!10605) b!72131))

(assert (= (and bm!6259 (not c!10605)) b!72132))

(assert (= (and d!16385 res!38381) b!72126))

(assert (= (and b!72126 res!38380) b!72133))

(declare-fun m!69711 () Bool)

(assert (=> bm!6259 m!69711))

(declare-fun m!69713 () Bool)

(assert (=> b!72131 m!69713))

(declare-fun m!69715 () Bool)

(assert (=> b!72126 m!69715))

(declare-fun m!69717 () Bool)

(assert (=> b!72133 m!69717))

(declare-fun m!69719 () Bool)

(assert (=> d!16385 m!69719))

(assert (=> d!16385 m!68417))

(assert (=> d!15973 d!16385))

(assert (=> d!15865 d!15863))

(declare-fun d!16387 () Bool)

(assert (=> d!16387 (= (getValueByKey!131 lt!31425 (_1!1079 lt!31205)) (Some!136 (_2!1079 lt!31205)))))

(assert (=> d!16387 true))

(declare-fun _$22!382 () Unit!2006)

(assert (=> d!16387 (= (choose!407 lt!31425 (_1!1079 lt!31205) (_2!1079 lt!31205)) _$22!382)))

(declare-fun bs!3091 () Bool)

(assert (= bs!3091 d!16387))

(assert (=> bs!3091 m!67971))

(assert (=> d!15865 d!16387))

(declare-fun d!16389 () Bool)

(declare-fun res!38382 () Bool)

(declare-fun e!47199 () Bool)

(assert (=> d!16389 (=> res!38382 e!47199)))

(assert (=> d!16389 (= res!38382 (or ((_ is Nil!1501) lt!31425) ((_ is Nil!1501) (t!5044 lt!31425))))))

(assert (=> d!16389 (= (isStrictlySorted!286 lt!31425) e!47199)))

(declare-fun b!72135 () Bool)

(declare-fun e!47200 () Bool)

(assert (=> b!72135 (= e!47199 e!47200)))

(declare-fun res!38383 () Bool)

(assert (=> b!72135 (=> (not res!38383) (not e!47200))))

(assert (=> b!72135 (= res!38383 (bvslt (_1!1079 (h!2086 lt!31425)) (_1!1079 (h!2086 (t!5044 lt!31425)))))))

(declare-fun b!72136 () Bool)

(assert (=> b!72136 (= e!47200 (isStrictlySorted!286 (t!5044 lt!31425)))))

(assert (= (and d!16389 (not res!38382)) b!72135))

(assert (= (and b!72135 res!38383) b!72136))

(declare-fun m!69721 () Bool)

(assert (=> b!72136 m!69721))

(assert (=> d!15865 d!16389))

(declare-fun d!16391 () Bool)

(assert (=> d!16391 (isDefined!85 (getValueByKey!131 (toList!732 lt!31458) (_1!1079 lt!31205)))))

(declare-fun lt!32005 () Unit!2006)

(assert (=> d!16391 (= lt!32005 (choose!405 (toList!732 lt!31458) (_1!1079 lt!31205)))))

(declare-fun e!47201 () Bool)

(assert (=> d!16391 e!47201))

(declare-fun res!38384 () Bool)

(assert (=> d!16391 (=> (not res!38384) (not e!47201))))

(assert (=> d!16391 (= res!38384 (isStrictlySorted!286 (toList!732 lt!31458)))))

(assert (=> d!16391 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31458) (_1!1079 lt!31205)) lt!32005)))

(declare-fun b!72137 () Bool)

(assert (=> b!72137 (= e!47201 (containsKey!135 (toList!732 lt!31458) (_1!1079 lt!31205)))))

(assert (= (and d!16391 res!38384) b!72137))

(assert (=> d!16391 m!68031))

(assert (=> d!16391 m!68031))

(assert (=> d!16391 m!68461))

(declare-fun m!69723 () Bool)

(assert (=> d!16391 m!69723))

(declare-fun m!69725 () Bool)

(assert (=> d!16391 m!69725))

(assert (=> b!72137 m!68457))

(assert (=> b!71424 d!16391))

(declare-fun d!16393 () Bool)

(assert (=> d!16393 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31458) (_1!1079 lt!31205))) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31458) (_1!1079 lt!31205)))))))

(declare-fun bs!3092 () Bool)

(assert (= bs!3092 d!16393))

(assert (=> bs!3092 m!68031))

(declare-fun m!69727 () Bool)

(assert (=> bs!3092 m!69727))

(assert (=> b!71424 d!16393))

(assert (=> b!71424 d!15871))

(declare-fun d!16395 () Bool)

(assert (=> d!16395 (= (get!1150 (getValueByKey!131 (toList!732 lt!31398) lt!31395)) (v!2521 (getValueByKey!131 (toList!732 lt!31398) lt!31395)))))

(assert (=> d!15899 d!16395))

(declare-fun d!16397 () Bool)

(declare-fun c!10607 () Bool)

(assert (=> d!16397 (= c!10607 (and ((_ is Cons!1500) (toList!732 lt!31398)) (= (_1!1079 (h!2086 (toList!732 lt!31398))) lt!31395)))))

(declare-fun e!47202 () Option!137)

(assert (=> d!16397 (= (getValueByKey!131 (toList!732 lt!31398) lt!31395) e!47202)))

(declare-fun b!72138 () Bool)

(assert (=> b!72138 (= e!47202 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31398)))))))

(declare-fun b!72140 () Bool)

(declare-fun e!47203 () Option!137)

(assert (=> b!72140 (= e!47203 (getValueByKey!131 (t!5044 (toList!732 lt!31398)) lt!31395))))

(declare-fun b!72139 () Bool)

(assert (=> b!72139 (= e!47202 e!47203)))

(declare-fun c!10608 () Bool)

(assert (=> b!72139 (= c!10608 (and ((_ is Cons!1500) (toList!732 lt!31398)) (not (= (_1!1079 (h!2086 (toList!732 lt!31398))) lt!31395))))))

(declare-fun b!72141 () Bool)

(assert (=> b!72141 (= e!47203 None!135)))

(assert (= (and d!16397 c!10607) b!72138))

(assert (= (and d!16397 (not c!10607)) b!72139))

(assert (= (and b!72139 c!10608) b!72140))

(assert (= (and b!72139 (not c!10608)) b!72141))

(declare-fun m!69729 () Bool)

(assert (=> b!72140 m!69729))

(assert (=> d!15899 d!16397))

(declare-fun c!10609 () Bool)

(declare-fun d!16399 () Bool)

(assert (=> d!16399 (= c!10609 (and ((_ is Cons!1500) (toList!732 lt!31634)) (= (_1!1079 (h!2086 (toList!732 lt!31634))) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47204 () Option!137)

(assert (=> d!16399 (= (getValueByKey!131 (toList!732 lt!31634) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47204)))

(declare-fun b!72142 () Bool)

(assert (=> b!72142 (= e!47204 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31634)))))))

(declare-fun b!72144 () Bool)

(declare-fun e!47205 () Option!137)

(assert (=> b!72144 (= e!47205 (getValueByKey!131 (t!5044 (toList!732 lt!31634)) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72143 () Bool)

(assert (=> b!72143 (= e!47204 e!47205)))

(declare-fun c!10610 () Bool)

(assert (=> b!72143 (= c!10610 (and ((_ is Cons!1500) (toList!732 lt!31634)) (not (= (_1!1079 (h!2086 (toList!732 lt!31634))) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72145 () Bool)

(assert (=> b!72145 (= e!47205 None!135)))

(assert (= (and d!16399 c!10609) b!72142))

(assert (= (and d!16399 (not c!10609)) b!72143))

(assert (= (and b!72143 c!10610) b!72144))

(assert (= (and b!72143 (not c!10610)) b!72145))

(declare-fun m!69731 () Bool)

(assert (=> b!72144 m!69731))

(assert (=> b!71336 d!16399))

(declare-fun d!16401 () Bool)

(assert (=> d!16401 (= (apply!74 lt!31759 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31759) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3093 () Bool)

(assert (= bs!3093 d!16401))

(declare-fun m!69733 () Bool)

(assert (=> bs!3093 m!69733))

(assert (=> bs!3093 m!69733))

(declare-fun m!69735 () Bool)

(assert (=> bs!3093 m!69735))

(assert (=> b!71548 d!16401))

(declare-fun d!16403 () Bool)

(assert (=> d!16403 (isDefined!85 (getValueByKey!131 (toList!732 lt!31462) (_1!1079 lt!31200)))))

(declare-fun lt!32006 () Unit!2006)

(assert (=> d!16403 (= lt!32006 (choose!405 (toList!732 lt!31462) (_1!1079 lt!31200)))))

(declare-fun e!47206 () Bool)

(assert (=> d!16403 e!47206))

(declare-fun res!38385 () Bool)

(assert (=> d!16403 (=> (not res!38385) (not e!47206))))

(assert (=> d!16403 (= res!38385 (isStrictlySorted!286 (toList!732 lt!31462)))))

(assert (=> d!16403 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31462) (_1!1079 lt!31200)) lt!32006)))

(declare-fun b!72146 () Bool)

(assert (=> b!72146 (= e!47206 (containsKey!135 (toList!732 lt!31462) (_1!1079 lt!31200)))))

(assert (= (and d!16403 res!38385) b!72146))

(assert (=> d!16403 m!68043))

(assert (=> d!16403 m!68043))

(assert (=> d!16403 m!68395))

(declare-fun m!69737 () Bool)

(assert (=> d!16403 m!69737))

(declare-fun m!69739 () Bool)

(assert (=> d!16403 m!69739))

(assert (=> b!72146 m!68391))

(assert (=> b!71390 d!16403))

(declare-fun d!16405 () Bool)

(assert (=> d!16405 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31462) (_1!1079 lt!31200))) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31462) (_1!1079 lt!31200)))))))

(declare-fun bs!3094 () Bool)

(assert (= bs!3094 d!16405))

(assert (=> bs!3094 m!68043))

(declare-fun m!69741 () Bool)

(assert (=> bs!3094 m!69741))

(assert (=> b!71390 d!16405))

(assert (=> b!71390 d!15857))

(declare-fun d!16407 () Bool)

(assert (=> d!16407 (= (get!1150 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2521 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15831 d!16407))

(declare-fun d!16409 () Bool)

(declare-fun c!10611 () Bool)

(assert (=> d!16409 (= c!10611 (and ((_ is Cons!1500) (toList!732 lt!31442)) (= (_1!1079 (h!2086 (toList!732 lt!31442))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!47207 () Option!137)

(assert (=> d!16409 (= (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47207)))

(declare-fun b!72147 () Bool)

(assert (=> b!72147 (= e!47207 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31442)))))))

(declare-fun b!72149 () Bool)

(declare-fun e!47208 () Option!137)

(assert (=> b!72149 (= e!47208 (getValueByKey!131 (t!5044 (toList!732 lt!31442)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!72148 () Bool)

(assert (=> b!72148 (= e!47207 e!47208)))

(declare-fun c!10612 () Bool)

(assert (=> b!72148 (= c!10612 (and ((_ is Cons!1500) (toList!732 lt!31442)) (not (= (_1!1079 (h!2086 (toList!732 lt!31442))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!72150 () Bool)

(assert (=> b!72150 (= e!47208 None!135)))

(assert (= (and d!16409 c!10611) b!72147))

(assert (= (and d!16409 (not c!10611)) b!72148))

(assert (= (and b!72148 c!10612) b!72149))

(assert (= (and b!72148 (not c!10612)) b!72150))

(assert (=> b!72149 m!67827))

(declare-fun m!69743 () Bool)

(assert (=> b!72149 m!69743))

(assert (=> d!15831 d!16409))

(declare-fun d!16411 () Bool)

(declare-fun e!47209 () Bool)

(assert (=> d!16411 e!47209))

(declare-fun res!38386 () Bool)

(assert (=> d!16411 (=> res!38386 e!47209)))

(declare-fun lt!32009 () Bool)

(assert (=> d!16411 (= res!38386 (not lt!32009))))

(declare-fun lt!32007 () Bool)

(assert (=> d!16411 (= lt!32009 lt!32007)))

(declare-fun lt!32008 () Unit!2006)

(declare-fun e!47210 () Unit!2006)

(assert (=> d!16411 (= lt!32008 e!47210)))

(declare-fun c!10613 () Bool)

(assert (=> d!16411 (= c!10613 lt!32007)))

(assert (=> d!16411 (= lt!32007 (containsKey!135 (toList!732 lt!31489) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16411 (= (contains!726 lt!31489 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!32009)))

(declare-fun b!72151 () Bool)

(declare-fun lt!32010 () Unit!2006)

(assert (=> b!72151 (= e!47210 lt!32010)))

(assert (=> b!72151 (= lt!32010 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31489) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> b!72151 (isDefined!85 (getValueByKey!131 (toList!732 lt!31489) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72152 () Bool)

(declare-fun Unit!2054 () Unit!2006)

(assert (=> b!72152 (= e!47210 Unit!2054)))

(declare-fun b!72153 () Bool)

(assert (=> b!72153 (= e!47209 (isDefined!85 (getValueByKey!131 (toList!732 lt!31489) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(assert (= (and d!16411 c!10613) b!72151))

(assert (= (and d!16411 (not c!10613)) b!72152))

(assert (= (and d!16411 (not res!38386)) b!72153))

(declare-fun m!69745 () Bool)

(assert (=> d!16411 m!69745))

(declare-fun m!69747 () Bool)

(assert (=> b!72151 m!69747))

(assert (=> b!72151 m!68131))

(assert (=> b!72151 m!68131))

(declare-fun m!69749 () Bool)

(assert (=> b!72151 m!69749))

(assert (=> b!72153 m!68131))

(assert (=> b!72153 m!68131))

(assert (=> b!72153 m!69749))

(assert (=> d!15849 d!16411))

(declare-fun d!16413 () Bool)

(declare-fun c!10614 () Bool)

(assert (=> d!16413 (= c!10614 (and ((_ is Cons!1500) lt!31488) (= (_1!1079 (h!2086 lt!31488)) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun e!47211 () Option!137)

(assert (=> d!16413 (= (getValueByKey!131 lt!31488 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) e!47211)))

(declare-fun b!72154 () Bool)

(assert (=> b!72154 (= e!47211 (Some!136 (_2!1079 (h!2086 lt!31488))))))

(declare-fun b!72156 () Bool)

(declare-fun e!47212 () Option!137)

(assert (=> b!72156 (= e!47212 (getValueByKey!131 (t!5044 lt!31488) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72155 () Bool)

(assert (=> b!72155 (= e!47211 e!47212)))

(declare-fun c!10615 () Bool)

(assert (=> b!72155 (= c!10615 (and ((_ is Cons!1500) lt!31488) (not (= (_1!1079 (h!2086 lt!31488)) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))))

(declare-fun b!72157 () Bool)

(assert (=> b!72157 (= e!47212 None!135)))

(assert (= (and d!16413 c!10614) b!72154))

(assert (= (and d!16413 (not c!10614)) b!72155))

(assert (= (and b!72155 c!10615) b!72156))

(assert (= (and b!72155 (not c!10615)) b!72157))

(declare-fun m!69751 () Bool)

(assert (=> b!72156 m!69751))

(assert (=> d!15849 d!16413))

(declare-fun d!16415 () Bool)

(assert (=> d!16415 (= (getValueByKey!131 lt!31488 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) (Some!136 (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun lt!32011 () Unit!2006)

(assert (=> d!16415 (= lt!32011 (choose!407 lt!31488 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47213 () Bool)

(assert (=> d!16415 e!47213))

(declare-fun res!38387 () Bool)

(assert (=> d!16415 (=> (not res!38387) (not e!47213))))

(assert (=> d!16415 (= res!38387 (isStrictlySorted!286 lt!31488))))

(assert (=> d!16415 (= (lemmaContainsTupThenGetReturnValue!50 lt!31488 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!32011)))

(declare-fun b!72158 () Bool)

(declare-fun res!38388 () Bool)

(assert (=> b!72158 (=> (not res!38388) (not e!47213))))

(assert (=> b!72158 (= res!38388 (containsKey!135 lt!31488 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72159 () Bool)

(assert (=> b!72159 (= e!47213 (contains!728 lt!31488 (tuple2!2139 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(assert (= (and d!16415 res!38387) b!72158))

(assert (= (and b!72158 res!38388) b!72159))

(assert (=> d!16415 m!68125))

(declare-fun m!69753 () Bool)

(assert (=> d!16415 m!69753))

(declare-fun m!69755 () Bool)

(assert (=> d!16415 m!69755))

(declare-fun m!69757 () Bool)

(assert (=> b!72158 m!69757))

(declare-fun m!69759 () Bool)

(assert (=> b!72159 m!69759))

(assert (=> d!15849 d!16415))

(declare-fun b!72160 () Bool)

(declare-fun e!47215 () List!1504)

(declare-fun call!6264 () List!1504)

(assert (=> b!72160 (= e!47215 call!6264)))

(declare-fun b!72161 () Bool)

(declare-fun res!38389 () Bool)

(declare-fun e!47214 () Bool)

(assert (=> b!72161 (=> (not res!38389) (not e!47214))))

(declare-fun lt!32012 () List!1504)

(assert (=> b!72161 (= res!38389 (containsKey!135 lt!32012 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun c!10617 () Bool)

(declare-fun b!72162 () Bool)

(assert (=> b!72162 (= c!10617 (and ((_ is Cons!1500) (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)))) (bvsgt (_1!1079 (h!2086 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148))))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun e!47217 () List!1504)

(declare-fun e!47216 () List!1504)

(assert (=> b!72162 (= e!47217 e!47216)))

(declare-fun b!72164 () Bool)

(declare-fun call!6265 () List!1504)

(assert (=> b!72164 (= e!47217 call!6265)))

(declare-fun b!72165 () Bool)

(declare-fun call!6263 () List!1504)

(assert (=> b!72165 (= e!47216 call!6263)))

(declare-fun b!72166 () Bool)

(declare-fun e!47218 () List!1504)

(assert (=> b!72166 (= e!47218 (insertStrictlySorted!52 (t!5044 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun bm!6260 () Bool)

(assert (=> bm!6260 (= call!6263 call!6265)))

(declare-fun bm!6261 () Bool)

(assert (=> bm!6261 (= call!6265 call!6264)))

(declare-fun c!10616 () Bool)

(declare-fun bm!6262 () Bool)

(assert (=> bm!6262 (= call!6264 ($colon$colon!64 e!47218 (ite c!10616 (h!2086 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)))) (tuple2!2139 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))))

(declare-fun c!10618 () Bool)

(assert (=> bm!6262 (= c!10618 c!10616)))

(declare-fun c!10619 () Bool)

(declare-fun b!72167 () Bool)

(assert (=> b!72167 (= e!47218 (ite c!10619 (t!5044 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)))) (ite c!10617 (Cons!1500 (h!2086 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)))) (t!5044 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148))))) Nil!1501)))))

(declare-fun b!72163 () Bool)

(assert (=> b!72163 (= e!47216 call!6263)))

(declare-fun d!16417 () Bool)

(assert (=> d!16417 e!47214))

(declare-fun res!38390 () Bool)

(assert (=> d!16417 (=> (not res!38390) (not e!47214))))

(assert (=> d!16417 (= res!38390 (isStrictlySorted!286 lt!32012))))

(assert (=> d!16417 (= lt!32012 e!47215)))

(assert (=> d!16417 (= c!10616 (and ((_ is Cons!1500) (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)))) (bvslt (_1!1079 (h!2086 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148))))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(assert (=> d!16417 (isStrictlySorted!286 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148))))))

(assert (=> d!16417 (= (insertStrictlySorted!52 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!32012)))

(declare-fun b!72168 () Bool)

(assert (=> b!72168 (= e!47214 (contains!728 lt!32012 (tuple2!2139 (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (_2!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72169 () Bool)

(assert (=> b!72169 (= e!47215 e!47217)))

(assert (=> b!72169 (= c!10619 (and ((_ is Cons!1500) (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148)))) (= (_1!1079 (h!2086 (toList!732 (ite c!10318 call!6149 (ite c!10314 call!6144 call!6148))))) (_1!1079 (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(assert (= (and d!16417 c!10616) b!72160))

(assert (= (and d!16417 (not c!10616)) b!72169))

(assert (= (and b!72169 c!10619) b!72164))

(assert (= (and b!72169 (not c!10619)) b!72162))

(assert (= (and b!72162 c!10617) b!72163))

(assert (= (and b!72162 (not c!10617)) b!72165))

(assert (= (or b!72163 b!72165) bm!6260))

(assert (= (or b!72164 bm!6260) bm!6261))

(assert (= (or b!72160 bm!6261) bm!6262))

(assert (= (and bm!6262 c!10618) b!72166))

(assert (= (and bm!6262 (not c!10618)) b!72167))

(assert (= (and d!16417 res!38390) b!72161))

(assert (= (and b!72161 res!38389) b!72168))

(declare-fun m!69761 () Bool)

(assert (=> bm!6262 m!69761))

(declare-fun m!69763 () Bool)

(assert (=> b!72166 m!69763))

(declare-fun m!69765 () Bool)

(assert (=> b!72161 m!69765))

(declare-fun m!69767 () Bool)

(assert (=> b!72168 m!69767))

(declare-fun m!69769 () Bool)

(assert (=> d!16417 m!69769))

(declare-fun m!69771 () Bool)

(assert (=> d!16417 m!69771))

(assert (=> d!15849 d!16417))

(assert (=> b!71322 d!16201))

(assert (=> b!71322 d!16203))

(declare-fun d!16419 () Bool)

(declare-fun e!47219 () Bool)

(assert (=> d!16419 e!47219))

(declare-fun res!38391 () Bool)

(assert (=> d!16419 (=> res!38391 e!47219)))

(declare-fun lt!32015 () Bool)

(assert (=> d!16419 (= res!38391 (not lt!32015))))

(declare-fun lt!32013 () Bool)

(assert (=> d!16419 (= lt!32015 lt!32013)))

(declare-fun lt!32014 () Unit!2006)

(declare-fun e!47220 () Unit!2006)

(assert (=> d!16419 (= lt!32014 e!47220)))

(declare-fun c!10620 () Bool)

(assert (=> d!16419 (= c!10620 lt!32013)))

(assert (=> d!16419 (= lt!32013 (containsKey!135 (toList!732 (map!1155 (_2!1080 lt!31596))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16419 (= (contains!726 (map!1155 (_2!1080 lt!31596)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!32015)))

(declare-fun b!72170 () Bool)

(declare-fun lt!32016 () Unit!2006)

(assert (=> b!72170 (= e!47220 lt!32016)))

(assert (=> b!72170 (= lt!32016 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (map!1155 (_2!1080 lt!31596))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!72170 (isDefined!85 (getValueByKey!131 (toList!732 (map!1155 (_2!1080 lt!31596))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!72171 () Bool)

(declare-fun Unit!2055 () Unit!2006)

(assert (=> b!72171 (= e!47220 Unit!2055)))

(declare-fun b!72172 () Bool)

(assert (=> b!72172 (= e!47219 (isDefined!85 (getValueByKey!131 (toList!732 (map!1155 (_2!1080 lt!31596))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (= (and d!16419 c!10620) b!72170))

(assert (= (and d!16419 (not c!10620)) b!72171))

(assert (= (and d!16419 (not res!38391)) b!72172))

(assert (=> d!16419 m!67713))

(declare-fun m!69773 () Bool)

(assert (=> d!16419 m!69773))

(assert (=> b!72170 m!67713))

(declare-fun m!69775 () Bool)

(assert (=> b!72170 m!69775))

(assert (=> b!72170 m!67713))

(declare-fun m!69777 () Bool)

(assert (=> b!72170 m!69777))

(assert (=> b!72170 m!69777))

(declare-fun m!69779 () Bool)

(assert (=> b!72170 m!69779))

(assert (=> b!72172 m!67713))

(assert (=> b!72172 m!69777))

(assert (=> b!72172 m!69777))

(assert (=> b!72172 m!69779))

(assert (=> b!71297 d!16419))

(assert (=> b!71297 d!16363))

(declare-fun d!16421 () Bool)

(assert (=> d!16421 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32017 () Unit!2006)

(assert (=> d!16421 (= lt!32017 (choose!405 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47221 () Bool)

(assert (=> d!16421 e!47221))

(declare-fun res!38392 () Bool)

(assert (=> d!16421 (=> (not res!38392) (not e!47221))))

(assert (=> d!16421 (= res!38392 (isStrictlySorted!286 (toList!732 lt!31396)))))

(assert (=> d!16421 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000) lt!32017)))

(declare-fun b!72173 () Bool)

(assert (=> b!72173 (= e!47221 (containsKey!135 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16421 res!38392) b!72173))

(assert (=> d!16421 m!68111))

(assert (=> d!16421 m!68111))

(assert (=> d!16421 m!68541))

(declare-fun m!69781 () Bool)

(assert (=> d!16421 m!69781))

(assert (=> d!16421 m!69115))

(assert (=> b!72173 m!68537))

(assert (=> b!71464 d!16421))

(declare-fun d!16423 () Bool)

(assert (=> d!16423 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3095 () Bool)

(assert (= bs!3095 d!16423))

(assert (=> bs!3095 m!68111))

(declare-fun m!69783 () Bool)

(assert (=> bs!3095 m!69783))

(assert (=> b!71464 d!16423))

(declare-fun d!16425 () Bool)

(declare-fun c!10621 () Bool)

(assert (=> d!16425 (= c!10621 (and ((_ is Cons!1500) (toList!732 lt!31396)) (= (_1!1079 (h!2086 (toList!732 lt!31396))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!47222 () Option!137)

(assert (=> d!16425 (= (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000) e!47222)))

(declare-fun b!72174 () Bool)

(assert (=> b!72174 (= e!47222 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31396)))))))

(declare-fun b!72176 () Bool)

(declare-fun e!47223 () Option!137)

(assert (=> b!72176 (= e!47223 (getValueByKey!131 (t!5044 (toList!732 lt!31396)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72175 () Bool)

(assert (=> b!72175 (= e!47222 e!47223)))

(declare-fun c!10622 () Bool)

(assert (=> b!72175 (= c!10622 (and ((_ is Cons!1500) (toList!732 lt!31396)) (not (= (_1!1079 (h!2086 (toList!732 lt!31396))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72177 () Bool)

(assert (=> b!72177 (= e!47223 None!135)))

(assert (= (and d!16425 c!10621) b!72174))

(assert (= (and d!16425 (not c!10621)) b!72175))

(assert (= (and b!72175 c!10622) b!72176))

(assert (= (and b!72175 (not c!10622)) b!72177))

(declare-fun m!69785 () Bool)

(assert (=> b!72176 m!69785))

(assert (=> b!71464 d!16425))

(declare-fun d!16427 () Bool)

(declare-fun e!47224 () Bool)

(assert (=> d!16427 e!47224))

(declare-fun res!38393 () Bool)

(assert (=> d!16427 (=> res!38393 e!47224)))

(declare-fun lt!32020 () Bool)

(assert (=> d!16427 (= res!38393 (not lt!32020))))

(declare-fun lt!32018 () Bool)

(assert (=> d!16427 (= lt!32020 lt!32018)))

(declare-fun lt!32019 () Unit!2006)

(declare-fun e!47225 () Unit!2006)

(assert (=> d!16427 (= lt!32019 e!47225)))

(declare-fun c!10623 () Bool)

(assert (=> d!16427 (= c!10623 lt!32018)))

(assert (=> d!16427 (= lt!32018 (containsKey!135 (toList!732 lt!31786) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16427 (= (contains!726 lt!31786 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32020)))

(declare-fun b!72178 () Bool)

(declare-fun lt!32021 () Unit!2006)

(assert (=> b!72178 (= e!47225 lt!32021)))

(assert (=> b!72178 (= lt!32021 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31786) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72178 (isDefined!85 (getValueByKey!131 (toList!732 lt!31786) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72179 () Bool)

(declare-fun Unit!2056 () Unit!2006)

(assert (=> b!72179 (= e!47225 Unit!2056)))

(declare-fun b!72180 () Bool)

(assert (=> b!72180 (= e!47224 (isDefined!85 (getValueByKey!131 (toList!732 lt!31786) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16427 c!10623) b!72178))

(assert (= (and d!16427 (not c!10623)) b!72179))

(assert (= (and d!16427 (not res!38393)) b!72180))

(declare-fun m!69787 () Bool)

(assert (=> d!16427 m!69787))

(declare-fun m!69789 () Bool)

(assert (=> b!72178 m!69789))

(assert (=> b!72178 m!68943))

(assert (=> b!72178 m!68943))

(declare-fun m!69791 () Bool)

(assert (=> b!72178 m!69791))

(assert (=> b!72180 m!68943))

(assert (=> b!72180 m!68943))

(assert (=> b!72180 m!69791))

(assert (=> bm!6214 d!16427))

(declare-fun d!16429 () Bool)

(declare-fun c!10624 () Bool)

(assert (=> d!16429 (= c!10624 (and ((_ is Cons!1500) (t!5044 lt!31457)) (= (_1!1079 (h!2086 (t!5044 lt!31457))) (_1!1079 lt!31205))))))

(declare-fun e!47226 () Option!137)

(assert (=> d!16429 (= (getValueByKey!131 (t!5044 lt!31457) (_1!1079 lt!31205)) e!47226)))

(declare-fun b!72181 () Bool)

(assert (=> b!72181 (= e!47226 (Some!136 (_2!1079 (h!2086 (t!5044 lt!31457)))))))

(declare-fun b!72183 () Bool)

(declare-fun e!47227 () Option!137)

(assert (=> b!72183 (= e!47227 (getValueByKey!131 (t!5044 (t!5044 lt!31457)) (_1!1079 lt!31205)))))

(declare-fun b!72182 () Bool)

(assert (=> b!72182 (= e!47226 e!47227)))

(declare-fun c!10625 () Bool)

(assert (=> b!72182 (= c!10625 (and ((_ is Cons!1500) (t!5044 lt!31457)) (not (= (_1!1079 (h!2086 (t!5044 lt!31457))) (_1!1079 lt!31205)))))))

(declare-fun b!72184 () Bool)

(assert (=> b!72184 (= e!47227 None!135)))

(assert (= (and d!16429 c!10624) b!72181))

(assert (= (and d!16429 (not c!10624)) b!72182))

(assert (= (and b!72182 c!10625) b!72183))

(assert (= (and b!72182 (not c!10625)) b!72184))

(declare-fun m!69793 () Bool)

(assert (=> b!72183 m!69793))

(assert (=> b!71429 d!16429))

(assert (=> d!15903 d!15887))

(assert (=> d!15903 d!15899))

(assert (=> d!15903 d!15891))

(declare-fun d!16431 () Bool)

(declare-fun e!47228 () Bool)

(assert (=> d!16431 e!47228))

(declare-fun res!38394 () Bool)

(assert (=> d!16431 (=> res!38394 e!47228)))

(declare-fun lt!32024 () Bool)

(assert (=> d!16431 (= res!38394 (not lt!32024))))

(declare-fun lt!32022 () Bool)

(assert (=> d!16431 (= lt!32024 lt!32022)))

(declare-fun lt!32023 () Unit!2006)

(declare-fun e!47229 () Unit!2006)

(assert (=> d!16431 (= lt!32023 e!47229)))

(declare-fun c!10626 () Bool)

(assert (=> d!16431 (= c!10626 lt!32022)))

(assert (=> d!16431 (= lt!32022 (containsKey!135 (toList!732 lt!31398) lt!31395))))

(assert (=> d!16431 (= (contains!726 lt!31398 lt!31395) lt!32024)))

(declare-fun b!72185 () Bool)

(declare-fun lt!32025 () Unit!2006)

(assert (=> b!72185 (= e!47229 lt!32025)))

(assert (=> b!72185 (= lt!32025 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31398) lt!31395))))

(assert (=> b!72185 (isDefined!85 (getValueByKey!131 (toList!732 lt!31398) lt!31395))))

(declare-fun b!72186 () Bool)

(declare-fun Unit!2057 () Unit!2006)

(assert (=> b!72186 (= e!47229 Unit!2057)))

(declare-fun b!72187 () Bool)

(assert (=> b!72187 (= e!47228 (isDefined!85 (getValueByKey!131 (toList!732 lt!31398) lt!31395)))))

(assert (= (and d!16431 c!10626) b!72185))

(assert (= (and d!16431 (not c!10626)) b!72186))

(assert (= (and d!16431 (not res!38394)) b!72187))

(declare-fun m!69795 () Bool)

(assert (=> d!16431 m!69795))

(declare-fun m!69797 () Bool)

(assert (=> b!72185 m!69797))

(assert (=> b!72185 m!68323))

(assert (=> b!72185 m!68323))

(declare-fun m!69799 () Bool)

(assert (=> b!72185 m!69799))

(assert (=> b!72187 m!68323))

(assert (=> b!72187 m!68323))

(assert (=> b!72187 m!69799))

(assert (=> d!15903 d!16431))

(declare-fun d!16433 () Bool)

(assert (=> d!16433 (= (apply!74 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31395) (apply!74 lt!31398 lt!31395))))

(assert (=> d!16433 true))

(declare-fun _$34!803 () Unit!2006)

(assert (=> d!16433 (= (choose!410 lt!31398 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31395) _$34!803)))

(declare-fun bs!3096 () Bool)

(assert (= bs!3096 d!16433))

(assert (=> bs!3096 m!67935))

(assert (=> bs!3096 m!67935))

(assert (=> bs!3096 m!67941))

(assert (=> bs!3096 m!67951))

(assert (=> d!15903 d!16433))

(assert (=> d!15841 d!16073))

(declare-fun d!16435 () Bool)

(declare-fun lt!32026 () Bool)

(assert (=> d!16435 (= lt!32026 (select (content!74 lt!31711) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun e!47231 () Bool)

(assert (=> d!16435 (= lt!32026 e!47231)))

(declare-fun res!38396 () Bool)

(assert (=> d!16435 (=> (not res!38396) (not e!47231))))

(assert (=> d!16435 (= res!38396 ((_ is Cons!1500) lt!31711))))

(assert (=> d!16435 (= (contains!728 lt!31711 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))) lt!32026)))

(declare-fun b!72188 () Bool)

(declare-fun e!47230 () Bool)

(assert (=> b!72188 (= e!47231 e!47230)))

(declare-fun res!38395 () Bool)

(assert (=> b!72188 (=> res!38395 e!47230)))

(assert (=> b!72188 (= res!38395 (= (h!2086 lt!31711) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!72189 () Bool)

(assert (=> b!72189 (= e!47230 (contains!728 (t!5044 lt!31711) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(assert (= (and d!16435 res!38396) b!72188))

(assert (= (and b!72188 (not res!38395)) b!72189))

(declare-fun m!69801 () Bool)

(assert (=> d!16435 m!69801))

(declare-fun m!69803 () Bool)

(assert (=> d!16435 m!69803))

(declare-fun m!69805 () Bool)

(assert (=> b!72189 m!69805))

(assert (=> b!71484 d!16435))

(declare-fun d!16437 () Bool)

(declare-fun res!38398 () Bool)

(declare-fun e!47234 () Bool)

(assert (=> d!16437 (=> res!38398 e!47234)))

(assert (=> d!16437 (= res!38398 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (v!2517 (underlying!261 thiss!992))))))))

(assert (=> d!16437 (= (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10447 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500))) e!47234)))

(declare-fun e!47233 () Bool)

(declare-fun b!72190 () Bool)

(assert (=> b!72190 (= e!47233 (contains!727 (ite c!10447 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!72191 () Bool)

(declare-fun e!47232 () Bool)

(declare-fun call!6266 () Bool)

(assert (=> b!72191 (= e!47232 call!6266)))

(declare-fun c!10627 () Bool)

(declare-fun bm!6263 () Bool)

(assert (=> bm!6263 (= call!6266 (arrayNoDuplicates!0 (_keys!3840 (v!2517 (underlying!261 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10627 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10447 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500))) (ite c!10447 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)) (ite c!10253 (Cons!1499 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) Nil!1500) Nil!1500)))))))

(declare-fun b!72192 () Bool)

(declare-fun e!47235 () Bool)

(assert (=> b!72192 (= e!47234 e!47235)))

(declare-fun res!38399 () Bool)

(assert (=> b!72192 (=> (not res!38399) (not e!47235))))

(assert (=> b!72192 (= res!38399 (not e!47233))))

(declare-fun res!38397 () Bool)

(assert (=> b!72192 (=> (not res!38397) (not e!47233))))

(assert (=> b!72192 (= res!38397 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!72193 () Bool)

(assert (=> b!72193 (= e!47232 call!6266)))

(declare-fun b!72194 () Bool)

(assert (=> b!72194 (= e!47235 e!47232)))

(assert (=> b!72194 (= c!10627 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!16437 (not res!38398)) b!72192))

(assert (= (and b!72192 res!38397) b!72190))

(assert (= (and b!72192 res!38399) b!72194))

(assert (= (and b!72194 c!10627) b!72193))

(assert (= (and b!72194 (not c!10627)) b!72191))

(assert (= (or b!72193 b!72191) bm!6263))

(declare-fun m!69807 () Bool)

(assert (=> b!72190 m!69807))

(assert (=> b!72190 m!69807))

(declare-fun m!69809 () Bool)

(assert (=> b!72190 m!69809))

(assert (=> bm!6263 m!69807))

(declare-fun m!69811 () Bool)

(assert (=> bm!6263 m!69811))

(assert (=> b!72192 m!69807))

(assert (=> b!72192 m!69807))

(declare-fun m!69813 () Bool)

(assert (=> b!72192 m!69813))

(assert (=> b!72194 m!69807))

(assert (=> b!72194 m!69807))

(assert (=> b!72194 m!69813))

(assert (=> bm!6208 d!16437))

(declare-fun d!16439 () Bool)

(declare-fun c!10628 () Bool)

(assert (=> d!16439 (= c!10628 (and ((_ is Cons!1500) (t!5044 lt!31461)) (= (_1!1079 (h!2086 (t!5044 lt!31461))) (_1!1079 lt!31200))))))

(declare-fun e!47236 () Option!137)

(assert (=> d!16439 (= (getValueByKey!131 (t!5044 lt!31461) (_1!1079 lt!31200)) e!47236)))

(declare-fun b!72195 () Bool)

(assert (=> b!72195 (= e!47236 (Some!136 (_2!1079 (h!2086 (t!5044 lt!31461)))))))

(declare-fun b!72197 () Bool)

(declare-fun e!47237 () Option!137)

(assert (=> b!72197 (= e!47237 (getValueByKey!131 (t!5044 (t!5044 lt!31461)) (_1!1079 lt!31200)))))

(declare-fun b!72196 () Bool)

(assert (=> b!72196 (= e!47236 e!47237)))

(declare-fun c!10629 () Bool)

(assert (=> b!72196 (= c!10629 (and ((_ is Cons!1500) (t!5044 lt!31461)) (not (= (_1!1079 (h!2086 (t!5044 lt!31461))) (_1!1079 lt!31200)))))))

(declare-fun b!72198 () Bool)

(assert (=> b!72198 (= e!47237 None!135)))

(assert (= (and d!16439 c!10628) b!72195))

(assert (= (and d!16439 (not c!10628)) b!72196))

(assert (= (and b!72196 c!10629) b!72197))

(assert (= (and b!72196 (not c!10629)) b!72198))

(declare-fun m!69815 () Bool)

(assert (=> b!72197 m!69815))

(assert (=> b!71395 d!16439))

(declare-fun d!16441 () Bool)

(declare-fun res!38400 () Bool)

(declare-fun e!47238 () Bool)

(assert (=> d!16441 (=> res!38400 e!47238)))

(assert (=> d!16441 (= res!38400 (and ((_ is Cons!1500) (toList!732 lt!31442)) (= (_1!1079 (h!2086 (toList!732 lt!31442))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16441 (= (containsKey!135 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000) e!47238)))

(declare-fun b!72199 () Bool)

(declare-fun e!47239 () Bool)

(assert (=> b!72199 (= e!47238 e!47239)))

(declare-fun res!38401 () Bool)

(assert (=> b!72199 (=> (not res!38401) (not e!47239))))

(assert (=> b!72199 (= res!38401 (and (or (not ((_ is Cons!1500) (toList!732 lt!31442))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31442))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!732 lt!31442)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31442))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72200 () Bool)

(assert (=> b!72200 (= e!47239 (containsKey!135 (t!5044 (toList!732 lt!31442)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16441 (not res!38400)) b!72199))

(assert (= (and b!72199 res!38401) b!72200))

(declare-fun m!69817 () Bool)

(assert (=> b!72200 m!69817))

(assert (=> d!15987 d!16441))

(assert (=> d!15955 d!16073))

(assert (=> d!15933 d!15931))

(assert (=> d!15933 d!15935))

(declare-fun d!16443 () Bool)

(assert (=> d!16443 (not (contains!726 (+!95 lt!31446 (tuple2!2139 lt!31444 lt!31441)) lt!31443))))

(assert (=> d!16443 true))

(declare-fun _$36!298 () Unit!2006)

(assert (=> d!16443 (= (choose!414 lt!31446 lt!31444 lt!31441 lt!31443) _$36!298)))

(declare-fun bs!3097 () Bool)

(assert (= bs!3097 d!16443))

(assert (=> bs!3097 m!67993))

(assert (=> bs!3097 m!67993))

(assert (=> bs!3097 m!67999))

(assert (=> d!15933 d!16443))

(declare-fun d!16445 () Bool)

(declare-fun e!47240 () Bool)

(assert (=> d!16445 e!47240))

(declare-fun res!38402 () Bool)

(assert (=> d!16445 (=> res!38402 e!47240)))

(declare-fun lt!32029 () Bool)

(assert (=> d!16445 (= res!38402 (not lt!32029))))

(declare-fun lt!32027 () Bool)

(assert (=> d!16445 (= lt!32029 lt!32027)))

(declare-fun lt!32028 () Unit!2006)

(declare-fun e!47241 () Unit!2006)

(assert (=> d!16445 (= lt!32028 e!47241)))

(declare-fun c!10630 () Bool)

(assert (=> d!16445 (= c!10630 lt!32027)))

(assert (=> d!16445 (= lt!32027 (containsKey!135 (toList!732 lt!31446) lt!31443))))

(assert (=> d!16445 (= (contains!726 lt!31446 lt!31443) lt!32029)))

(declare-fun b!72202 () Bool)

(declare-fun lt!32030 () Unit!2006)

(assert (=> b!72202 (= e!47241 lt!32030)))

(assert (=> b!72202 (= lt!32030 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31446) lt!31443))))

(assert (=> b!72202 (isDefined!85 (getValueByKey!131 (toList!732 lt!31446) lt!31443))))

(declare-fun b!72203 () Bool)

(declare-fun Unit!2058 () Unit!2006)

(assert (=> b!72203 (= e!47241 Unit!2058)))

(declare-fun b!72204 () Bool)

(assert (=> b!72204 (= e!47240 (isDefined!85 (getValueByKey!131 (toList!732 lt!31446) lt!31443)))))

(assert (= (and d!16445 c!10630) b!72202))

(assert (= (and d!16445 (not c!10630)) b!72203))

(assert (= (and d!16445 (not res!38402)) b!72204))

(declare-fun m!69819 () Bool)

(assert (=> d!16445 m!69819))

(declare-fun m!69821 () Bool)

(assert (=> b!72202 m!69821))

(declare-fun m!69823 () Bool)

(assert (=> b!72202 m!69823))

(assert (=> b!72202 m!69823))

(declare-fun m!69825 () Bool)

(assert (=> b!72202 m!69825))

(assert (=> b!72204 m!69823))

(assert (=> b!72204 m!69823))

(assert (=> b!72204 m!69825))

(assert (=> d!15933 d!16445))

(assert (=> d!15889 d!15883))

(declare-fun d!16447 () Bool)

(declare-fun e!47242 () Bool)

(assert (=> d!16447 e!47242))

(declare-fun res!38403 () Bool)

(assert (=> d!16447 (=> res!38403 e!47242)))

(declare-fun lt!32033 () Bool)

(assert (=> d!16447 (= res!38403 (not lt!32033))))

(declare-fun lt!32031 () Bool)

(assert (=> d!16447 (= lt!32033 lt!32031)))

(declare-fun lt!32032 () Unit!2006)

(declare-fun e!47243 () Unit!2006)

(assert (=> d!16447 (= lt!32032 e!47243)))

(declare-fun c!10631 () Bool)

(assert (=> d!16447 (= c!10631 lt!32031)))

(assert (=> d!16447 (= lt!32031 (containsKey!135 (toList!732 lt!31408) lt!31411))))

(assert (=> d!16447 (= (contains!726 lt!31408 lt!31411) lt!32033)))

(declare-fun b!72205 () Bool)

(declare-fun lt!32034 () Unit!2006)

(assert (=> b!72205 (= e!47243 lt!32034)))

(assert (=> b!72205 (= lt!32034 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31408) lt!31411))))

(assert (=> b!72205 (isDefined!85 (getValueByKey!131 (toList!732 lt!31408) lt!31411))))

(declare-fun b!72206 () Bool)

(declare-fun Unit!2059 () Unit!2006)

(assert (=> b!72206 (= e!47243 Unit!2059)))

(declare-fun b!72207 () Bool)

(assert (=> b!72207 (= e!47242 (isDefined!85 (getValueByKey!131 (toList!732 lt!31408) lt!31411)))))

(assert (= (and d!16447 c!10631) b!72205))

(assert (= (and d!16447 (not c!10631)) b!72206))

(assert (= (and d!16447 (not res!38403)) b!72207))

(declare-fun m!69827 () Bool)

(assert (=> d!16447 m!69827))

(declare-fun m!69829 () Bool)

(assert (=> b!72205 m!69829))

(assert (=> b!72205 m!68335))

(assert (=> b!72205 m!68335))

(declare-fun m!69831 () Bool)

(assert (=> b!72205 m!69831))

(assert (=> b!72207 m!68335))

(assert (=> b!72207 m!68335))

(assert (=> b!72207 m!69831))

(assert (=> d!15889 d!16447))

(assert (=> d!15889 d!15905))

(assert (=> d!15889 d!15893))

(declare-fun d!16449 () Bool)

(assert (=> d!16449 (= (apply!74 (+!95 lt!31408 (tuple2!2139 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31411) (apply!74 lt!31408 lt!31411))))

(assert (=> d!16449 true))

(declare-fun _$34!804 () Unit!2006)

(assert (=> d!16449 (= (choose!410 lt!31408 lt!31404 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31411) _$34!804)))

(declare-fun bs!3098 () Bool)

(assert (= bs!3098 d!16449))

(assert (=> bs!3098 m!67947))

(assert (=> bs!3098 m!67947))

(assert (=> bs!3098 m!67949))

(assert (=> bs!3098 m!67933))

(assert (=> d!15889 d!16449))

(declare-fun d!16451 () Bool)

(assert (=> d!16451 (= (apply!74 lt!31683 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31683) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3099 () Bool)

(assert (= bs!3099 d!16451))

(declare-fun m!69833 () Bool)

(assert (=> bs!3099 m!69833))

(assert (=> bs!3099 m!69833))

(declare-fun m!69835 () Bool)

(assert (=> bs!3099 m!69835))

(assert (=> b!71462 d!16451))

(assert (=> b!71494 d!16045))

(declare-fun b!72208 () Bool)

(declare-fun e!47244 () (_ BitVec 32))

(declare-fun call!6267 () (_ BitVec 32))

(assert (=> b!72208 (= e!47244 call!6267)))

(declare-fun b!72209 () Bool)

(declare-fun e!47245 () (_ BitVec 32))

(assert (=> b!72209 (= e!47245 #b00000000000000000000000000000000)))

(declare-fun bm!6264 () Bool)

(assert (=> bm!6264 (= call!6267 (arrayCountValidKeys!0 lt!31586 (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001) (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001)))))

(declare-fun b!72210 () Bool)

(assert (=> b!72210 (= e!47245 e!47244)))

(declare-fun c!10633 () Bool)

(assert (=> b!72210 (= c!10633 (validKeyInArray!0 (select (arr!1852 lt!31586) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))))))

(declare-fun b!72211 () Bool)

(assert (=> b!72211 (= e!47244 (bvadd #b00000000000000000000000000000001 call!6267))))

(declare-fun lt!32035 () (_ BitVec 32))

(declare-fun d!16453 () Bool)

(assert (=> d!16453 (and (bvsge lt!32035 #b00000000000000000000000000000000) (bvsle lt!32035 (bvsub (size!2089 lt!31586) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))))))

(assert (=> d!16453 (= lt!32035 e!47245)))

(declare-fun c!10632 () Bool)

(assert (=> d!16453 (= c!10632 (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001)))))

(assert (=> d!16453 (and (bvsle (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001)) (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001) (size!2089 lt!31586)))))

(assert (=> d!16453 (= (arrayCountValidKeys!0 lt!31586 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001)) lt!32035)))

(assert (= (and d!16453 c!10632) b!72209))

(assert (= (and d!16453 (not c!10632)) b!72210))

(assert (= (and b!72210 c!10633) b!72211))

(assert (= (and b!72210 (not c!10633)) b!72208))

(assert (= (or b!72211 b!72208) bm!6264))

(declare-fun m!69837 () Bool)

(assert (=> bm!6264 m!69837))

(declare-fun m!69839 () Bool)

(assert (=> b!72210 m!69839))

(assert (=> b!72210 m!69839))

(declare-fun m!69841 () Bool)

(assert (=> b!72210 m!69841))

(assert (=> d!15875 d!16453))

(declare-fun d!16455 () Bool)

(declare-fun e!47248 () Bool)

(assert (=> d!16455 e!47248))

(declare-fun res!38406 () Bool)

(assert (=> d!16455 (=> (not res!38406) (not e!47248))))

(assert (=> d!16455 (= res!38406 (and (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2089 (_keys!3840 newMap!16))) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2090 (_values!2175 newMap!16)))))))

(declare-fun lt!32038 () Unit!2006)

(declare-fun choose!417 (array!3880 array!3882 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2006)

(assert (=> d!16455 (= lt!32038 (choose!417 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16455 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16455 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (defaultEntry!2192 newMap!16)) lt!32038)))

(declare-fun b!72214 () Bool)

(assert (=> b!72214 (= e!47248 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (getCurrentListMap!425 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))))

(assert (= (and d!16455 res!38406) b!72214))

(assert (=> d!16455 m!67713))

(declare-fun m!69843 () Bool)

(assert (=> d!16455 m!69843))

(assert (=> d!16455 m!68107))

(assert (=> b!72214 m!68207))

(assert (=> b!72214 m!67909))

(assert (=> b!72214 m!68213))

(assert (=> b!72214 m!68217))

(assert (=> b!72214 m!67909))

(assert (=> b!72214 m!68219))

(assert (=> d!15875 d!16455))

(declare-fun d!16457 () Bool)

(declare-fun e!47251 () Bool)

(assert (=> d!16457 e!47251))

(declare-fun res!38409 () Bool)

(assert (=> d!16457 (=> (not res!38409) (not e!47251))))

(assert (=> d!16457 (= res!38409 (and (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2089 (_keys!3840 newMap!16)))))))

(declare-fun lt!32041 () Unit!2006)

(declare-fun choose!41 (array!3880 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1503) Unit!2006)

(assert (=> d!16457 (= lt!32041 (choose!41 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) lt!31572 lt!31589))))

(assert (=> d!16457 (bvslt (size!2089 (_keys!3840 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!16457 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3840 newMap!16) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) lt!31572 lt!31589) lt!32041)))

(declare-fun b!72217 () Bool)

(assert (=> b!72217 (= e!47251 (arrayNoDuplicates!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) lt!31572 lt!31589))))

(assert (= (and d!16457 res!38409) b!72217))

(assert (=> d!16457 m!67713))

(declare-fun m!69845 () Bool)

(assert (=> d!16457 m!69845))

(assert (=> b!72217 m!68219))

(assert (=> b!72217 m!68215))

(assert (=> d!15875 d!16457))

(assert (=> d!15875 d!16329))

(assert (=> d!15875 d!15955))

(assert (=> d!15875 d!16017))

(declare-fun d!16459 () Bool)

(declare-fun res!38410 () Bool)

(declare-fun e!47252 () Bool)

(assert (=> d!16459 (=> res!38410 e!47252)))

(assert (=> d!16459 (= res!38410 (= (select (arr!1852 lt!31582) #b00000000000000000000000000000000) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16459 (= (arrayContainsKey!0 lt!31582 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000) e!47252)))

(declare-fun b!72218 () Bool)

(declare-fun e!47253 () Bool)

(assert (=> b!72218 (= e!47252 e!47253)))

(declare-fun res!38411 () Bool)

(assert (=> b!72218 (=> (not res!38411) (not e!47253))))

(assert (=> b!72218 (= res!38411 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 lt!31582)))))

(declare-fun b!72219 () Bool)

(assert (=> b!72219 (= e!47253 (arrayContainsKey!0 lt!31582 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16459 (not res!38410)) b!72218))

(assert (= (and b!72218 res!38411) b!72219))

(declare-fun m!69847 () Bool)

(assert (=> d!16459 m!69847))

(assert (=> b!72219 m!67713))

(declare-fun m!69849 () Bool)

(assert (=> b!72219 m!69849))

(assert (=> d!15875 d!16459))

(assert (=> d!15875 d!15985))

(declare-fun d!16461 () Bool)

(declare-fun e!47256 () Bool)

(assert (=> d!16461 e!47256))

(declare-fun res!38414 () Bool)

(assert (=> d!16461 (=> (not res!38414) (not e!47256))))

(assert (=> d!16461 (= res!38414 (and (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2089 (_keys!3840 newMap!16)))))))

(declare-fun lt!32044 () Unit!2006)

(declare-fun choose!102 ((_ BitVec 64) array!3880 (_ BitVec 32) (_ BitVec 32)) Unit!2006)

(assert (=> d!16461 (= lt!32044 (choose!102 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (mask!6149 newMap!16)))))

(assert (=> d!16461 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16461 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (mask!6149 newMap!16)) lt!32044)))

(declare-fun b!72222 () Bool)

(assert (=> b!72222 (= e!47256 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (mask!6149 newMap!16)))))

(assert (= (and d!16461 res!38414) b!72222))

(assert (=> d!16461 m!67713))

(declare-fun m!69851 () Bool)

(assert (=> d!16461 m!69851))

(assert (=> d!16461 m!68107))

(assert (=> b!72222 m!68219))

(assert (=> b!72222 m!68209))

(assert (=> d!15875 d!16461))

(declare-fun b!72223 () Bool)

(declare-fun e!47266 () Bool)

(declare-fun e!47257 () Bool)

(assert (=> b!72223 (= e!47266 e!47257)))

(declare-fun res!38416 () Bool)

(declare-fun call!6272 () Bool)

(assert (=> b!72223 (= res!38416 call!6272)))

(assert (=> b!72223 (=> (not res!38416) (not e!47257))))

(declare-fun b!72224 () Bool)

(declare-fun e!47268 () ListLongMap!1433)

(declare-fun call!6268 () ListLongMap!1433)

(assert (=> b!72224 (= e!47268 (+!95 call!6268 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun b!72225 () Bool)

(declare-fun e!47265 () ListLongMap!1433)

(declare-fun call!6273 () ListLongMap!1433)

(assert (=> b!72225 (= e!47265 call!6273)))

(declare-fun b!72226 () Bool)

(declare-fun e!47259 () Unit!2006)

(declare-fun Unit!2060 () Unit!2006)

(assert (=> b!72226 (= e!47259 Unit!2060)))

(declare-fun b!72227 () Bool)

(declare-fun call!6270 () ListLongMap!1433)

(assert (=> b!72227 (= e!47265 call!6270)))

(declare-fun e!47261 () Bool)

(declare-fun b!72228 () Bool)

(assert (=> b!72228 (= e!47261 (validKeyInArray!0 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6265 () Bool)

(declare-fun call!6269 () ListLongMap!1433)

(assert (=> bm!6265 (= call!6273 call!6269)))

(declare-fun b!72229 () Bool)

(assert (=> b!72229 (= e!47266 (not call!6272))))

(declare-fun bm!6267 () Bool)

(assert (=> bm!6267 (= call!6270 call!6268)))

(declare-fun bm!6268 () Bool)

(declare-fun call!6274 () ListLongMap!1433)

(assert (=> bm!6268 (= call!6269 call!6274)))

(declare-fun b!72230 () Bool)

(declare-fun e!47264 () Bool)

(declare-fun e!47263 () Bool)

(assert (=> b!72230 (= e!47264 e!47263)))

(declare-fun c!10637 () Bool)

(assert (=> b!72230 (= c!10637 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6269 () Bool)

(declare-fun lt!32048 () ListLongMap!1433)

(assert (=> bm!6269 (= call!6272 (contains!726 lt!32048 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72231 () Bool)

(declare-fun e!47262 () Bool)

(assert (=> b!72231 (= e!47262 (= (apply!74 lt!32048 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun b!72232 () Bool)

(declare-fun e!47260 () ListLongMap!1433)

(assert (=> b!72232 (= e!47268 e!47260)))

(declare-fun c!10634 () Bool)

(assert (=> b!72232 (= c!10634 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72233 () Bool)

(declare-fun e!47269 () Bool)

(declare-fun e!47258 () Bool)

(assert (=> b!72233 (= e!47269 e!47258)))

(declare-fun res!38417 () Bool)

(assert (=> b!72233 (=> (not res!38417) (not e!47258))))

(assert (=> b!72233 (= res!38417 (contains!726 lt!32048 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!72233 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun b!72234 () Bool)

(assert (=> b!72234 (= e!47263 e!47262)))

(declare-fun res!38418 () Bool)

(declare-fun call!6271 () Bool)

(assert (=> b!72234 (= res!38418 call!6271)))

(assert (=> b!72234 (=> (not res!38418) (not e!47262))))

(declare-fun bm!6270 () Bool)

(assert (=> bm!6270 (= call!6271 (contains!726 lt!32048 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72235 () Bool)

(assert (=> b!72235 (= e!47260 call!6270)))

(declare-fun b!72236 () Bool)

(assert (=> b!72236 (= e!47258 (= (apply!74 lt!32048 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72236 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))))))

(assert (=> b!72236 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun b!72237 () Bool)

(declare-fun lt!32058 () Unit!2006)

(assert (=> b!72237 (= e!47259 lt!32058)))

(declare-fun lt!32049 () ListLongMap!1433)

(assert (=> b!72237 (= lt!32049 (getCurrentListMapNoExtraKeys!59 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32066 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32066 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32061 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32061 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32062 () Unit!2006)

(assert (=> b!72237 (= lt!32062 (addStillContains!50 lt!32049 lt!32066 (zeroValue!2096 newMap!16) lt!32061))))

(assert (=> b!72237 (contains!726 (+!95 lt!32049 (tuple2!2139 lt!32066 (zeroValue!2096 newMap!16))) lt!32061)))

(declare-fun lt!32054 () Unit!2006)

(assert (=> b!72237 (= lt!32054 lt!32062)))

(declare-fun lt!32051 () ListLongMap!1433)

(assert (=> b!72237 (= lt!32051 (getCurrentListMapNoExtraKeys!59 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32052 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32052 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32053 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32053 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32065 () Unit!2006)

(assert (=> b!72237 (= lt!32065 (addApplyDifferent!50 lt!32051 lt!32052 (minValue!2096 newMap!16) lt!32053))))

(assert (=> b!72237 (= (apply!74 (+!95 lt!32051 (tuple2!2139 lt!32052 (minValue!2096 newMap!16))) lt!32053) (apply!74 lt!32051 lt!32053))))

(declare-fun lt!32057 () Unit!2006)

(assert (=> b!72237 (= lt!32057 lt!32065)))

(declare-fun lt!32060 () ListLongMap!1433)

(assert (=> b!72237 (= lt!32060 (getCurrentListMapNoExtraKeys!59 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32056 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32056 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32063 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32063 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32055 () Unit!2006)

(assert (=> b!72237 (= lt!32055 (addApplyDifferent!50 lt!32060 lt!32056 (zeroValue!2096 newMap!16) lt!32063))))

(assert (=> b!72237 (= (apply!74 (+!95 lt!32060 (tuple2!2139 lt!32056 (zeroValue!2096 newMap!16))) lt!32063) (apply!74 lt!32060 lt!32063))))

(declare-fun lt!32059 () Unit!2006)

(assert (=> b!72237 (= lt!32059 lt!32055)))

(declare-fun lt!32050 () ListLongMap!1433)

(assert (=> b!72237 (= lt!32050 (getCurrentListMapNoExtraKeys!59 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32046 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32046 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32047 () (_ BitVec 64))

(assert (=> b!72237 (= lt!32047 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!72237 (= lt!32058 (addApplyDifferent!50 lt!32050 lt!32046 (minValue!2096 newMap!16) lt!32047))))

(assert (=> b!72237 (= (apply!74 (+!95 lt!32050 (tuple2!2139 lt!32046 (minValue!2096 newMap!16))) lt!32047) (apply!74 lt!32050 lt!32047))))

(declare-fun b!72238 () Bool)

(assert (=> b!72238 (= e!47263 (not call!6271))))

(declare-fun b!72239 () Bool)

(declare-fun res!38421 () Bool)

(assert (=> b!72239 (=> (not res!38421) (not e!47264))))

(assert (=> b!72239 (= res!38421 e!47269)))

(declare-fun res!38422 () Bool)

(assert (=> b!72239 (=> res!38422 e!47269)))

(assert (=> b!72239 (= res!38422 (not e!47261))))

(declare-fun res!38420 () Bool)

(assert (=> b!72239 (=> (not res!38420) (not e!47261))))

(assert (=> b!72239 (= res!38420 (bvslt #b00000000000000000000000000000000 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun bm!6271 () Bool)

(assert (=> bm!6271 (= call!6274 (getCurrentListMapNoExtraKeys!59 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun e!47267 () Bool)

(declare-fun b!72240 () Bool)

(assert (=> b!72240 (= e!47267 (validKeyInArray!0 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72241 () Bool)

(declare-fun res!38415 () Bool)

(assert (=> b!72241 (=> (not res!38415) (not e!47264))))

(assert (=> b!72241 (= res!38415 e!47266)))

(declare-fun c!10636 () Bool)

(assert (=> b!72241 (= c!10636 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!10638 () Bool)

(declare-fun bm!6266 () Bool)

(assert (=> bm!6266 (= call!6268 (+!95 (ite c!10638 call!6274 (ite c!10634 call!6269 call!6273)) (ite (or c!10638 c!10634) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun d!16463 () Bool)

(assert (=> d!16463 e!47264))

(declare-fun res!38419 () Bool)

(assert (=> d!16463 (=> (not res!38419) (not e!47264))))

(assert (=> d!16463 (= res!38419 (or (bvsge #b00000000000000000000000000000000 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))))

(declare-fun lt!32045 () ListLongMap!1433)

(assert (=> d!16463 (= lt!32048 lt!32045)))

(declare-fun lt!32064 () Unit!2006)

(assert (=> d!16463 (= lt!32064 e!47259)))

(declare-fun c!10635 () Bool)

(assert (=> d!16463 (= c!10635 e!47267)))

(declare-fun res!38423 () Bool)

(assert (=> d!16463 (=> (not res!38423) (not e!47267))))

(assert (=> d!16463 (= res!38423 (bvslt #b00000000000000000000000000000000 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))

(assert (=> d!16463 (= lt!32045 e!47268)))

(assert (=> d!16463 (= c!10638 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16463 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16463 (= (getCurrentListMap!425 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32048)))

(declare-fun b!72242 () Bool)

(assert (=> b!72242 (= e!47257 (= (apply!74 lt!32048 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72243 () Bool)

(declare-fun c!10639 () Bool)

(assert (=> b!72243 (= c!10639 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!72243 (= e!47260 e!47265)))

(assert (= (and d!16463 c!10638) b!72224))

(assert (= (and d!16463 (not c!10638)) b!72232))

(assert (= (and b!72232 c!10634) b!72235))

(assert (= (and b!72232 (not c!10634)) b!72243))

(assert (= (and b!72243 c!10639) b!72227))

(assert (= (and b!72243 (not c!10639)) b!72225))

(assert (= (or b!72227 b!72225) bm!6265))

(assert (= (or b!72235 bm!6265) bm!6268))

(assert (= (or b!72235 b!72227) bm!6267))

(assert (= (or b!72224 bm!6268) bm!6271))

(assert (= (or b!72224 bm!6267) bm!6266))

(assert (= (and d!16463 res!38423) b!72240))

(assert (= (and d!16463 c!10635) b!72237))

(assert (= (and d!16463 (not c!10635)) b!72226))

(assert (= (and d!16463 res!38419) b!72239))

(assert (= (and b!72239 res!38420) b!72228))

(assert (= (and b!72239 (not res!38422)) b!72233))

(assert (= (and b!72233 res!38417) b!72236))

(assert (= (and b!72239 res!38421) b!72241))

(assert (= (and b!72241 c!10636) b!72223))

(assert (= (and b!72241 (not c!10636)) b!72229))

(assert (= (and b!72223 res!38416) b!72242))

(assert (= (or b!72223 b!72229) bm!6269))

(assert (= (and b!72241 res!38415) b!72230))

(assert (= (and b!72230 c!10637) b!72234))

(assert (= (and b!72230 (not c!10637)) b!72238))

(assert (= (and b!72234 res!38418) b!72231))

(assert (= (or b!72234 b!72238) bm!6270))

(declare-fun b_lambda!3241 () Bool)

(assert (=> (not b_lambda!3241) (not b!72236)))

(assert (=> b!72236 t!5051))

(declare-fun b_and!4437 () Bool)

(assert (= b_and!4433 (and (=> t!5051 result!2669) b_and!4437)))

(assert (=> b!72236 t!5053))

(declare-fun b_and!4439 () Bool)

(assert (= b_and!4435 (and (=> t!5053 result!2671) b_and!4439)))

(declare-fun m!69853 () Bool)

(assert (=> b!72233 m!69853))

(assert (=> b!72233 m!69853))

(declare-fun m!69855 () Bool)

(assert (=> b!72233 m!69855))

(declare-fun m!69857 () Bool)

(assert (=> bm!6269 m!69857))

(declare-fun m!69859 () Bool)

(assert (=> bm!6270 m!69859))

(assert (=> b!72228 m!69853))

(assert (=> b!72228 m!69853))

(declare-fun m!69861 () Bool)

(assert (=> b!72228 m!69861))

(assert (=> b!72237 m!69853))

(declare-fun m!69863 () Bool)

(assert (=> b!72237 m!69863))

(declare-fun m!69865 () Bool)

(assert (=> b!72237 m!69865))

(declare-fun m!69867 () Bool)

(assert (=> b!72237 m!69867))

(declare-fun m!69869 () Bool)

(assert (=> b!72237 m!69869))

(declare-fun m!69871 () Bool)

(assert (=> b!72237 m!69871))

(declare-fun m!69873 () Bool)

(assert (=> b!72237 m!69873))

(assert (=> b!72237 m!69867))

(declare-fun m!69875 () Bool)

(assert (=> b!72237 m!69875))

(declare-fun m!69877 () Bool)

(assert (=> b!72237 m!69877))

(assert (=> b!72237 m!69873))

(declare-fun m!69879 () Bool)

(assert (=> b!72237 m!69879))

(declare-fun m!69881 () Bool)

(assert (=> b!72237 m!69881))

(declare-fun m!69883 () Bool)

(assert (=> b!72237 m!69883))

(assert (=> b!72237 m!69881))

(declare-fun m!69885 () Bool)

(assert (=> b!72237 m!69885))

(declare-fun m!69887 () Bool)

(assert (=> b!72237 m!69887))

(declare-fun m!69889 () Bool)

(assert (=> b!72237 m!69889))

(declare-fun m!69891 () Bool)

(assert (=> b!72237 m!69891))

(declare-fun m!69893 () Bool)

(assert (=> b!72237 m!69893))

(assert (=> b!72237 m!69885))

(assert (=> bm!6271 m!69893))

(declare-fun m!69895 () Bool)

(assert (=> bm!6266 m!69895))

(declare-fun m!69897 () Bool)

(assert (=> b!72242 m!69897))

(declare-fun m!69899 () Bool)

(assert (=> b!72231 m!69899))

(declare-fun m!69901 () Bool)

(assert (=> b!72236 m!69901))

(assert (=> b!72236 m!69901))

(assert (=> b!72236 m!68529))

(declare-fun m!69903 () Bool)

(assert (=> b!72236 m!69903))

(assert (=> b!72236 m!68529))

(assert (=> b!72236 m!69853))

(assert (=> b!72236 m!69853))

(declare-fun m!69905 () Bool)

(assert (=> b!72236 m!69905))

(assert (=> b!72240 m!69853))

(assert (=> b!72240 m!69853))

(assert (=> b!72240 m!69861))

(assert (=> d!16463 m!68107))

(declare-fun m!69907 () Bool)

(assert (=> b!72224 m!69907))

(assert (=> d!15875 d!16463))

(declare-fun d!16465 () Bool)

(declare-fun e!47270 () Bool)

(assert (=> d!16465 e!47270))

(declare-fun res!38425 () Bool)

(assert (=> d!16465 (=> (not res!38425) (not e!47270))))

(declare-fun lt!32070 () ListLongMap!1433)

(assert (=> d!16465 (= res!38425 (contains!726 lt!32070 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!32069 () List!1504)

(assert (=> d!16465 (= lt!32070 (ListLongMap!1434 lt!32069))))

(declare-fun lt!32068 () Unit!2006)

(declare-fun lt!32067 () Unit!2006)

(assert (=> d!16465 (= lt!32068 lt!32067)))

(assert (=> d!16465 (= (getValueByKey!131 lt!32069 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16465 (= lt!32067 (lemmaContainsTupThenGetReturnValue!50 lt!32069 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16465 (= lt!32069 (insertStrictlySorted!52 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16465 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) lt!32070)))

(declare-fun b!72244 () Bool)

(declare-fun res!38424 () Bool)

(assert (=> b!72244 (=> (not res!38424) (not e!47270))))

(assert (=> b!72244 (= res!38424 (= (getValueByKey!131 (toList!732 lt!32070) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!72245 () Bool)

(assert (=> b!72245 (= e!47270 (contains!728 (toList!732 lt!32070) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))

(assert (= (and d!16465 res!38425) b!72244))

(assert (= (and b!72244 res!38424) b!72245))

(declare-fun m!69909 () Bool)

(assert (=> d!16465 m!69909))

(declare-fun m!69911 () Bool)

(assert (=> d!16465 m!69911))

(declare-fun m!69913 () Bool)

(assert (=> d!16465 m!69913))

(declare-fun m!69915 () Bool)

(assert (=> d!16465 m!69915))

(declare-fun m!69917 () Bool)

(assert (=> b!72244 m!69917))

(declare-fun m!69919 () Bool)

(assert (=> b!72245 m!69919))

(assert (=> d!15875 d!16465))

(declare-fun d!16467 () Bool)

(assert (=> d!16467 (= (arrayCountValidKeys!0 lt!31586 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (bvadd (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!32073 () Unit!2006)

(declare-fun choose!2 (array!3880 (_ BitVec 32)) Unit!2006)

(assert (=> d!16467 (= lt!32073 (choose!2 lt!31586 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))

(declare-fun e!47273 () Bool)

(assert (=> d!16467 e!47273))

(declare-fun res!38430 () Bool)

(assert (=> d!16467 (=> (not res!38430) (not e!47273))))

(assert (=> d!16467 (= res!38430 (and (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2089 lt!31586))))))

(assert (=> d!16467 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31586 (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))) lt!32073)))

(declare-fun b!72250 () Bool)

(declare-fun res!38431 () Bool)

(assert (=> b!72250 (=> (not res!38431) (not e!47273))))

(assert (=> b!72250 (= res!38431 (validKeyInArray!0 (select (arr!1852 lt!31586) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))))))

(declare-fun b!72251 () Bool)

(assert (=> b!72251 (= e!47273 (bvslt (size!2089 lt!31586) #b01111111111111111111111111111111))))

(assert (= (and d!16467 res!38430) b!72250))

(assert (= (and b!72250 res!38431) b!72251))

(assert (=> d!16467 m!68229))

(declare-fun m!69921 () Bool)

(assert (=> d!16467 m!69921))

(assert (=> b!72250 m!69839))

(assert (=> b!72250 m!69839))

(assert (=> b!72250 m!69841))

(assert (=> d!15875 d!16467))

(declare-fun d!16469 () Bool)

(declare-fun e!47274 () Bool)

(assert (=> d!16469 e!47274))

(declare-fun res!38432 () Bool)

(assert (=> d!16469 (=> res!38432 e!47274)))

(declare-fun lt!32076 () Bool)

(assert (=> d!16469 (= res!38432 (not lt!32076))))

(declare-fun lt!32074 () Bool)

(assert (=> d!16469 (= lt!32076 lt!32074)))

(declare-fun lt!32075 () Unit!2006)

(declare-fun e!47275 () Unit!2006)

(assert (=> d!16469 (= lt!32075 e!47275)))

(declare-fun c!10640 () Bool)

(assert (=> d!16469 (= c!10640 lt!32074)))

(assert (=> d!16469 (= lt!32074 (containsKey!135 (toList!732 (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))))))

(assert (=> d!16469 (= (contains!726 (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))) lt!32076)))

(declare-fun b!72252 () Bool)

(declare-fun lt!32077 () Unit!2006)

(assert (=> b!72252 (= e!47275 lt!32077)))

(assert (=> b!72252 (= lt!32077 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))))))

(assert (=> b!72252 (isDefined!85 (getValueByKey!131 (toList!732 (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))))))

(declare-fun b!72253 () Bool)

(declare-fun Unit!2061 () Unit!2006)

(assert (=> b!72253 (= e!47275 Unit!2061)))

(declare-fun b!72254 () Bool)

(assert (=> b!72254 (= e!47274 (isDefined!85 (getValueByKey!131 (toList!732 (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))))

(assert (= (and d!16469 c!10640) b!72252))

(assert (= (and d!16469 (not c!10640)) b!72253))

(assert (= (and d!16469 (not res!38432)) b!72254))

(assert (=> d!16469 m!68201))

(declare-fun m!69923 () Bool)

(assert (=> d!16469 m!69923))

(assert (=> b!72252 m!68201))

(declare-fun m!69925 () Bool)

(assert (=> b!72252 m!69925))

(assert (=> b!72252 m!68201))

(declare-fun m!69927 () Bool)

(assert (=> b!72252 m!69927))

(assert (=> b!72252 m!69927))

(declare-fun m!69929 () Bool)

(assert (=> b!72252 m!69929))

(assert (=> b!72254 m!68201))

(assert (=> b!72254 m!69927))

(assert (=> b!72254 m!69927))

(assert (=> b!72254 m!69929))

(assert (=> d!15875 d!16469))

(declare-fun b!72264 () Bool)

(declare-fun res!38444 () Bool)

(declare-fun e!47281 () Bool)

(assert (=> b!72264 (=> (not res!38444) (not e!47281))))

(assert (=> b!72264 (= res!38444 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!72263 () Bool)

(declare-fun res!38443 () Bool)

(assert (=> b!72263 (=> (not res!38443) (not e!47281))))

(assert (=> b!72263 (= res!38443 (not (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))))

(declare-fun e!47280 () Bool)

(declare-fun b!72266 () Bool)

(assert (=> b!72266 (= e!47280 (= (arrayCountValidKeys!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!72265 () Bool)

(assert (=> b!72265 (= e!47281 (bvslt (size!2089 (_keys!3840 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!16471 () Bool)

(assert (=> d!16471 e!47280))

(declare-fun res!38442 () Bool)

(assert (=> d!16471 (=> (not res!38442) (not e!47280))))

(assert (=> d!16471 (= res!38442 (and (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2089 (_keys!3840 newMap!16)))))))

(declare-fun lt!32080 () Unit!2006)

(declare-fun choose!1 (array!3880 (_ BitVec 32) (_ BitVec 64)) Unit!2006)

(assert (=> d!16471 (= lt!32080 (choose!1 (_keys!3840 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> d!16471 e!47281))

(declare-fun res!38441 () Bool)

(assert (=> d!16471 (=> (not res!38441) (not e!47281))))

(assert (=> d!16471 (= res!38441 (and (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2089 (_keys!3840 newMap!16)))))))

(assert (=> d!16471 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3840 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) lt!32080)))

(assert (= (and d!16471 res!38441) b!72263))

(assert (= (and b!72263 res!38443) b!72264))

(assert (= (and b!72264 res!38444) b!72265))

(assert (= (and d!16471 res!38442) b!72266))

(assert (=> b!72264 m!67713))

(assert (=> b!72264 m!67837))

(declare-fun m!69931 () Bool)

(assert (=> b!72263 m!69931))

(assert (=> b!72263 m!69931))

(declare-fun m!69933 () Bool)

(assert (=> b!72263 m!69933))

(assert (=> b!72266 m!68219))

(assert (=> b!72266 m!68227))

(assert (=> b!72266 m!67841))

(assert (=> d!16471 m!67713))

(declare-fun m!69935 () Bool)

(assert (=> d!16471 m!69935))

(assert (=> d!15875 d!16471))

(declare-fun b!72267 () Bool)

(declare-fun e!47282 () Bool)

(declare-fun call!6275 () Bool)

(assert (=> b!72267 (= e!47282 call!6275)))

(declare-fun b!72268 () Bool)

(declare-fun e!47284 () Bool)

(assert (=> b!72268 (= e!47284 call!6275)))

(declare-fun b!72269 () Bool)

(assert (=> b!72269 (= e!47284 e!47282)))

(declare-fun lt!32082 () (_ BitVec 64))

(assert (=> b!72269 (= lt!32082 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32083 () Unit!2006)

(assert (=> b!72269 (= lt!32083 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) lt!32082 #b00000000000000000000000000000000))))

(assert (=> b!72269 (arrayContainsKey!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) lt!32082 #b00000000000000000000000000000000)))

(declare-fun lt!32081 () Unit!2006)

(assert (=> b!72269 (= lt!32081 lt!32083)))

(declare-fun res!38446 () Bool)

(assert (=> b!72269 (= res!38446 (= (seekEntryOrOpen!0 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000) (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (mask!6149 newMap!16)) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!72269 (=> (not res!38446) (not e!47282))))

(declare-fun bm!6272 () Bool)

(assert (=> bm!6272 (= call!6275 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (mask!6149 newMap!16)))))

(declare-fun d!16473 () Bool)

(declare-fun res!38445 () Bool)

(declare-fun e!47283 () Bool)

(assert (=> d!16473 (=> res!38445 e!47283)))

(assert (=> d!16473 (= res!38445 (bvsge #b00000000000000000000000000000000 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))

(assert (=> d!16473 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (mask!6149 newMap!16)) e!47283)))

(declare-fun b!72270 () Bool)

(assert (=> b!72270 (= e!47283 e!47284)))

(declare-fun c!10641 () Bool)

(assert (=> b!72270 (= c!10641 (validKeyInArray!0 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!16473 (not res!38445)) b!72270))

(assert (= (and b!72270 c!10641) b!72269))

(assert (= (and b!72270 (not c!10641)) b!72268))

(assert (= (and b!72269 res!38446) b!72267))

(assert (= (or b!72267 b!72268) bm!6272))

(assert (=> b!72269 m!69853))

(declare-fun m!69937 () Bool)

(assert (=> b!72269 m!69937))

(declare-fun m!69939 () Bool)

(assert (=> b!72269 m!69939))

(assert (=> b!72269 m!69853))

(declare-fun m!69941 () Bool)

(assert (=> b!72269 m!69941))

(declare-fun m!69943 () Bool)

(assert (=> bm!6272 m!69943))

(assert (=> b!72270 m!69853))

(assert (=> b!72270 m!69853))

(assert (=> b!72270 m!69861))

(assert (=> d!15875 d!16473))

(declare-fun b!72271 () Bool)

(declare-fun e!47294 () Bool)

(declare-fun e!47285 () Bool)

(assert (=> b!72271 (= e!47294 e!47285)))

(declare-fun res!38448 () Bool)

(declare-fun call!6280 () Bool)

(assert (=> b!72271 (= res!38448 call!6280)))

(assert (=> b!72271 (=> (not res!38448) (not e!47285))))

(declare-fun b!72272 () Bool)

(declare-fun e!47296 () ListLongMap!1433)

(declare-fun call!6276 () ListLongMap!1433)

(assert (=> b!72272 (= e!47296 (+!95 call!6276 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun b!72273 () Bool)

(declare-fun e!47293 () ListLongMap!1433)

(declare-fun call!6281 () ListLongMap!1433)

(assert (=> b!72273 (= e!47293 call!6281)))

(declare-fun b!72274 () Bool)

(declare-fun e!47287 () Unit!2006)

(declare-fun Unit!2062 () Unit!2006)

(assert (=> b!72274 (= e!47287 Unit!2062)))

(declare-fun b!72275 () Bool)

(declare-fun call!6278 () ListLongMap!1433)

(assert (=> b!72275 (= e!47293 call!6278)))

(declare-fun b!72276 () Bool)

(declare-fun e!47289 () Bool)

(assert (=> b!72276 (= e!47289 (validKeyInArray!0 (select (arr!1852 lt!31569) #b00000000000000000000000000000000)))))

(declare-fun bm!6273 () Bool)

(declare-fun call!6277 () ListLongMap!1433)

(assert (=> bm!6273 (= call!6281 call!6277)))

(declare-fun b!72277 () Bool)

(assert (=> b!72277 (= e!47294 (not call!6280))))

(declare-fun bm!6275 () Bool)

(assert (=> bm!6275 (= call!6278 call!6276)))

(declare-fun bm!6276 () Bool)

(declare-fun call!6282 () ListLongMap!1433)

(assert (=> bm!6276 (= call!6277 call!6282)))

(declare-fun b!72278 () Bool)

(declare-fun e!47292 () Bool)

(declare-fun e!47291 () Bool)

(assert (=> b!72278 (= e!47292 e!47291)))

(declare-fun c!10645 () Bool)

(assert (=> b!72278 (= c!10645 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6277 () Bool)

(declare-fun lt!32087 () ListLongMap!1433)

(assert (=> bm!6277 (= call!6280 (contains!726 lt!32087 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72279 () Bool)

(declare-fun e!47290 () Bool)

(assert (=> b!72279 (= e!47290 (= (apply!74 lt!32087 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun b!72280 () Bool)

(declare-fun e!47288 () ListLongMap!1433)

(assert (=> b!72280 (= e!47296 e!47288)))

(declare-fun c!10642 () Bool)

(assert (=> b!72280 (= c!10642 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72281 () Bool)

(declare-fun e!47297 () Bool)

(declare-fun e!47286 () Bool)

(assert (=> b!72281 (= e!47297 e!47286)))

(declare-fun res!38449 () Bool)

(assert (=> b!72281 (=> (not res!38449) (not e!47286))))

(assert (=> b!72281 (= res!38449 (contains!726 lt!32087 (select (arr!1852 lt!31569) #b00000000000000000000000000000000)))))

(assert (=> b!72281 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 lt!31569)))))

(declare-fun b!72282 () Bool)

(assert (=> b!72282 (= e!47291 e!47290)))

(declare-fun res!38450 () Bool)

(declare-fun call!6279 () Bool)

(assert (=> b!72282 (= res!38450 call!6279)))

(assert (=> b!72282 (=> (not res!38450) (not e!47290))))

(declare-fun bm!6278 () Bool)

(assert (=> bm!6278 (= call!6279 (contains!726 lt!32087 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72283 () Bool)

(assert (=> b!72283 (= e!47288 call!6278)))

(declare-fun b!72284 () Bool)

(assert (=> b!72284 (= e!47286 (= (apply!74 lt!32087 (select (arr!1852 lt!31569) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 lt!31581) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72284 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 lt!31581)))))

(assert (=> b!72284 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 lt!31569)))))

(declare-fun b!72285 () Bool)

(declare-fun lt!32097 () Unit!2006)

(assert (=> b!72285 (= e!47287 lt!32097)))

(declare-fun lt!32088 () ListLongMap!1433)

(assert (=> b!72285 (= lt!32088 (getCurrentListMapNoExtraKeys!59 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32105 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32105 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32100 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32100 (select (arr!1852 lt!31569) #b00000000000000000000000000000000))))

(declare-fun lt!32101 () Unit!2006)

(assert (=> b!72285 (= lt!32101 (addStillContains!50 lt!32088 lt!32105 (zeroValue!2096 newMap!16) lt!32100))))

(assert (=> b!72285 (contains!726 (+!95 lt!32088 (tuple2!2139 lt!32105 (zeroValue!2096 newMap!16))) lt!32100)))

(declare-fun lt!32093 () Unit!2006)

(assert (=> b!72285 (= lt!32093 lt!32101)))

(declare-fun lt!32090 () ListLongMap!1433)

(assert (=> b!72285 (= lt!32090 (getCurrentListMapNoExtraKeys!59 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32091 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32091 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32092 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32092 (select (arr!1852 lt!31569) #b00000000000000000000000000000000))))

(declare-fun lt!32104 () Unit!2006)

(assert (=> b!72285 (= lt!32104 (addApplyDifferent!50 lt!32090 lt!32091 (minValue!2096 newMap!16) lt!32092))))

(assert (=> b!72285 (= (apply!74 (+!95 lt!32090 (tuple2!2139 lt!32091 (minValue!2096 newMap!16))) lt!32092) (apply!74 lt!32090 lt!32092))))

(declare-fun lt!32096 () Unit!2006)

(assert (=> b!72285 (= lt!32096 lt!32104)))

(declare-fun lt!32099 () ListLongMap!1433)

(assert (=> b!72285 (= lt!32099 (getCurrentListMapNoExtraKeys!59 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32095 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32095 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32102 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32102 (select (arr!1852 lt!31569) #b00000000000000000000000000000000))))

(declare-fun lt!32094 () Unit!2006)

(assert (=> b!72285 (= lt!32094 (addApplyDifferent!50 lt!32099 lt!32095 (zeroValue!2096 newMap!16) lt!32102))))

(assert (=> b!72285 (= (apply!74 (+!95 lt!32099 (tuple2!2139 lt!32095 (zeroValue!2096 newMap!16))) lt!32102) (apply!74 lt!32099 lt!32102))))

(declare-fun lt!32098 () Unit!2006)

(assert (=> b!72285 (= lt!32098 lt!32094)))

(declare-fun lt!32089 () ListLongMap!1433)

(assert (=> b!72285 (= lt!32089 (getCurrentListMapNoExtraKeys!59 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32085 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32085 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32086 () (_ BitVec 64))

(assert (=> b!72285 (= lt!32086 (select (arr!1852 lt!31569) #b00000000000000000000000000000000))))

(assert (=> b!72285 (= lt!32097 (addApplyDifferent!50 lt!32089 lt!32085 (minValue!2096 newMap!16) lt!32086))))

(assert (=> b!72285 (= (apply!74 (+!95 lt!32089 (tuple2!2139 lt!32085 (minValue!2096 newMap!16))) lt!32086) (apply!74 lt!32089 lt!32086))))

(declare-fun b!72286 () Bool)

(assert (=> b!72286 (= e!47291 (not call!6279))))

(declare-fun b!72287 () Bool)

(declare-fun res!38453 () Bool)

(assert (=> b!72287 (=> (not res!38453) (not e!47292))))

(assert (=> b!72287 (= res!38453 e!47297)))

(declare-fun res!38454 () Bool)

(assert (=> b!72287 (=> res!38454 e!47297)))

(assert (=> b!72287 (= res!38454 (not e!47289))))

(declare-fun res!38452 () Bool)

(assert (=> b!72287 (=> (not res!38452) (not e!47289))))

(assert (=> b!72287 (= res!38452 (bvslt #b00000000000000000000000000000000 (size!2089 lt!31569)))))

(declare-fun bm!6279 () Bool)

(assert (=> bm!6279 (= call!6282 (getCurrentListMapNoExtraKeys!59 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72288 () Bool)

(declare-fun e!47295 () Bool)

(assert (=> b!72288 (= e!47295 (validKeyInArray!0 (select (arr!1852 lt!31569) #b00000000000000000000000000000000)))))

(declare-fun b!72289 () Bool)

(declare-fun res!38447 () Bool)

(assert (=> b!72289 (=> (not res!38447) (not e!47292))))

(assert (=> b!72289 (= res!38447 e!47294)))

(declare-fun c!10644 () Bool)

(assert (=> b!72289 (= c!10644 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6274 () Bool)

(declare-fun c!10646 () Bool)

(assert (=> bm!6274 (= call!6276 (+!95 (ite c!10646 call!6282 (ite c!10642 call!6277 call!6281)) (ite (or c!10646 c!10642) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun d!16475 () Bool)

(assert (=> d!16475 e!47292))

(declare-fun res!38451 () Bool)

(assert (=> d!16475 (=> (not res!38451) (not e!47292))))

(assert (=> d!16475 (= res!38451 (or (bvsge #b00000000000000000000000000000000 (size!2089 lt!31569)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 lt!31569)))))))

(declare-fun lt!32084 () ListLongMap!1433)

(assert (=> d!16475 (= lt!32087 lt!32084)))

(declare-fun lt!32103 () Unit!2006)

(assert (=> d!16475 (= lt!32103 e!47287)))

(declare-fun c!10643 () Bool)

(assert (=> d!16475 (= c!10643 e!47295)))

(declare-fun res!38455 () Bool)

(assert (=> d!16475 (=> (not res!38455) (not e!47295))))

(assert (=> d!16475 (= res!38455 (bvslt #b00000000000000000000000000000000 (size!2089 lt!31569)))))

(assert (=> d!16475 (= lt!32084 e!47296)))

(assert (=> d!16475 (= c!10646 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16475 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16475 (= (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32087)))

(declare-fun b!72290 () Bool)

(assert (=> b!72290 (= e!47285 (= (apply!74 lt!32087 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72291 () Bool)

(declare-fun c!10647 () Bool)

(assert (=> b!72291 (= c!10647 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!72291 (= e!47288 e!47293)))

(assert (= (and d!16475 c!10646) b!72272))

(assert (= (and d!16475 (not c!10646)) b!72280))

(assert (= (and b!72280 c!10642) b!72283))

(assert (= (and b!72280 (not c!10642)) b!72291))

(assert (= (and b!72291 c!10647) b!72275))

(assert (= (and b!72291 (not c!10647)) b!72273))

(assert (= (or b!72275 b!72273) bm!6273))

(assert (= (or b!72283 bm!6273) bm!6276))

(assert (= (or b!72283 b!72275) bm!6275))

(assert (= (or b!72272 bm!6276) bm!6279))

(assert (= (or b!72272 bm!6275) bm!6274))

(assert (= (and d!16475 res!38455) b!72288))

(assert (= (and d!16475 c!10643) b!72285))

(assert (= (and d!16475 (not c!10643)) b!72274))

(assert (= (and d!16475 res!38451) b!72287))

(assert (= (and b!72287 res!38452) b!72276))

(assert (= (and b!72287 (not res!38454)) b!72281))

(assert (= (and b!72281 res!38449) b!72284))

(assert (= (and b!72287 res!38453) b!72289))

(assert (= (and b!72289 c!10644) b!72271))

(assert (= (and b!72289 (not c!10644)) b!72277))

(assert (= (and b!72271 res!38448) b!72290))

(assert (= (or b!72271 b!72277) bm!6277))

(assert (= (and b!72289 res!38447) b!72278))

(assert (= (and b!72278 c!10645) b!72282))

(assert (= (and b!72278 (not c!10645)) b!72286))

(assert (= (and b!72282 res!38450) b!72279))

(assert (= (or b!72282 b!72286) bm!6278))

(declare-fun b_lambda!3243 () Bool)

(assert (=> (not b_lambda!3243) (not b!72284)))

(assert (=> b!72284 t!5051))

(declare-fun b_and!4441 () Bool)

(assert (= b_and!4437 (and (=> t!5051 result!2669) b_and!4441)))

(assert (=> b!72284 t!5053))

(declare-fun b_and!4443 () Bool)

(assert (= b_and!4439 (and (=> t!5053 result!2671) b_and!4443)))

(declare-fun m!69945 () Bool)

(assert (=> b!72281 m!69945))

(assert (=> b!72281 m!69945))

(declare-fun m!69947 () Bool)

(assert (=> b!72281 m!69947))

(declare-fun m!69949 () Bool)

(assert (=> bm!6277 m!69949))

(declare-fun m!69951 () Bool)

(assert (=> bm!6278 m!69951))

(assert (=> b!72276 m!69945))

(assert (=> b!72276 m!69945))

(declare-fun m!69953 () Bool)

(assert (=> b!72276 m!69953))

(assert (=> b!72285 m!69945))

(declare-fun m!69955 () Bool)

(assert (=> b!72285 m!69955))

(declare-fun m!69957 () Bool)

(assert (=> b!72285 m!69957))

(declare-fun m!69959 () Bool)

(assert (=> b!72285 m!69959))

(declare-fun m!69961 () Bool)

(assert (=> b!72285 m!69961))

(declare-fun m!69963 () Bool)

(assert (=> b!72285 m!69963))

(declare-fun m!69965 () Bool)

(assert (=> b!72285 m!69965))

(assert (=> b!72285 m!69959))

(declare-fun m!69967 () Bool)

(assert (=> b!72285 m!69967))

(declare-fun m!69969 () Bool)

(assert (=> b!72285 m!69969))

(assert (=> b!72285 m!69965))

(declare-fun m!69971 () Bool)

(assert (=> b!72285 m!69971))

(declare-fun m!69973 () Bool)

(assert (=> b!72285 m!69973))

(declare-fun m!69975 () Bool)

(assert (=> b!72285 m!69975))

(assert (=> b!72285 m!69973))

(declare-fun m!69977 () Bool)

(assert (=> b!72285 m!69977))

(declare-fun m!69979 () Bool)

(assert (=> b!72285 m!69979))

(declare-fun m!69981 () Bool)

(assert (=> b!72285 m!69981))

(declare-fun m!69983 () Bool)

(assert (=> b!72285 m!69983))

(declare-fun m!69985 () Bool)

(assert (=> b!72285 m!69985))

(assert (=> b!72285 m!69977))

(assert (=> bm!6279 m!69985))

(declare-fun m!69987 () Bool)

(assert (=> bm!6274 m!69987))

(declare-fun m!69989 () Bool)

(assert (=> b!72290 m!69989))

(declare-fun m!69991 () Bool)

(assert (=> b!72279 m!69991))

(declare-fun m!69993 () Bool)

(assert (=> b!72284 m!69993))

(assert (=> b!72284 m!69993))

(assert (=> b!72284 m!68529))

(declare-fun m!69995 () Bool)

(assert (=> b!72284 m!69995))

(assert (=> b!72284 m!68529))

(assert (=> b!72284 m!69945))

(assert (=> b!72284 m!69945))

(declare-fun m!69997 () Bool)

(assert (=> b!72284 m!69997))

(assert (=> b!72288 m!69945))

(assert (=> b!72288 m!69945))

(assert (=> b!72288 m!69953))

(assert (=> d!16475 m!68107))

(declare-fun m!69999 () Bool)

(assert (=> b!72272 m!69999))

(assert (=> d!15875 d!16475))

(declare-fun b!72292 () Bool)

(declare-fun e!47298 () (_ BitVec 32))

(declare-fun call!6283 () (_ BitVec 32))

(assert (=> b!72292 (= e!47298 call!6283)))

(declare-fun b!72293 () Bool)

(declare-fun e!47299 () (_ BitVec 32))

(assert (=> b!72293 (= e!47299 #b00000000000000000000000000000000)))

(declare-fun bm!6280 () Bool)

(assert (=> bm!6280 (= call!6283 (arrayCountValidKeys!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72294 () Bool)

(assert (=> b!72294 (= e!47299 e!47298)))

(declare-fun c!10649 () Bool)

(assert (=> b!72294 (= c!10649 (validKeyInArray!0 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72295 () Bool)

(assert (=> b!72295 (= e!47298 (bvadd #b00000000000000000000000000000001 call!6283))))

(declare-fun lt!32106 () (_ BitVec 32))

(declare-fun d!16477 () Bool)

(assert (=> d!16477 (and (bvsge lt!32106 #b00000000000000000000000000000000) (bvsle lt!32106 (bvsub (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!16477 (= lt!32106 e!47299)))

(declare-fun c!10648 () Bool)

(assert (=> d!16477 (= c!10648 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16477 (and (bvsle #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2089 (_keys!3840 newMap!16)) (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))

(assert (=> d!16477 (= (arrayCountValidKeys!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) lt!32106)))

(assert (= (and d!16477 c!10648) b!72293))

(assert (= (and d!16477 (not c!10648)) b!72294))

(assert (= (and b!72294 c!10649) b!72295))

(assert (= (and b!72294 (not c!10649)) b!72292))

(assert (= (or b!72295 b!72292) bm!6280))

(declare-fun m!70001 () Bool)

(assert (=> bm!6280 m!70001))

(assert (=> b!72294 m!69853))

(assert (=> b!72294 m!69853))

(assert (=> b!72294 m!69861))

(assert (=> d!15875 d!16477))

(assert (=> d!15875 d!15789))

(declare-fun d!16479 () Bool)

(assert (=> d!16479 (arrayContainsKey!0 lt!31582 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!32109 () Unit!2006)

(declare-fun choose!13 (array!3880 (_ BitVec 64) (_ BitVec 32)) Unit!2006)

(assert (=> d!16479 (= lt!32109 (choose!13 lt!31582 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))))))

(assert (=> d!16479 (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000)))

(assert (=> d!16479 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31582 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339))) lt!32109)))

(declare-fun bs!3100 () Bool)

(assert (= bs!3100 d!16479))

(assert (=> bs!3100 m!67713))

(assert (=> bs!3100 m!68223))

(assert (=> bs!3100 m!67713))

(declare-fun m!70003 () Bool)

(assert (=> bs!3100 m!70003))

(assert (=> d!15875 d!16479))

(declare-fun d!16481 () Bool)

(declare-fun e!47300 () Bool)

(assert (=> d!16481 e!47300))

(declare-fun res!38456 () Bool)

(assert (=> d!16481 (=> (not res!38456) (not e!47300))))

(assert (=> d!16481 (= res!38456 (and (bvsge (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) #b00000000000000000000000000000000) (bvslt (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (size!2089 lt!31569))))))

(declare-fun lt!32110 () Unit!2006)

(assert (=> d!16481 (= lt!32110 (choose!408 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (defaultEntry!2192 newMap!16)))))

(assert (=> d!16481 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16481 (= (lemmaValidKeyInArrayIsInListMap!81 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (defaultEntry!2192 newMap!16)) lt!32110)))

(declare-fun b!72296 () Bool)

(assert (=> b!72296 (= e!47300 (contains!726 (getCurrentListMap!425 lt!31569 lt!31581 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 lt!31569) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)))))))

(assert (= (and d!16481 res!38456) b!72296))

(declare-fun m!70005 () Bool)

(assert (=> d!16481 m!70005))

(assert (=> d!16481 m!68107))

(assert (=> b!72296 m!68197))

(declare-fun m!70007 () Bool)

(assert (=> b!72296 m!70007))

(assert (=> b!72296 m!68197))

(assert (=> b!72296 m!70007))

(declare-fun m!70009 () Bool)

(assert (=> b!72296 m!70009))

(assert (=> d!15875 d!16481))

(declare-fun d!16483 () Bool)

(declare-fun res!38458 () Bool)

(declare-fun e!47303 () Bool)

(assert (=> d!16483 (=> res!38458 e!47303)))

(assert (=> d!16483 (= res!38458 (bvsge lt!31572 (size!2089 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))))))))

(assert (=> d!16483 (= (arrayNoDuplicates!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) lt!31572 lt!31589) e!47303)))

(declare-fun b!72297 () Bool)

(declare-fun e!47302 () Bool)

(assert (=> b!72297 (= e!47302 (contains!727 lt!31589 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) lt!31572)))))

(declare-fun b!72298 () Bool)

(declare-fun e!47301 () Bool)

(declare-fun call!6284 () Bool)

(assert (=> b!72298 (= e!47301 call!6284)))

(declare-fun c!10650 () Bool)

(declare-fun bm!6281 () Bool)

(assert (=> bm!6281 (= call!6284 (arrayNoDuplicates!0 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16))) (bvadd lt!31572 #b00000000000000000000000000000001) (ite c!10650 (Cons!1499 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) lt!31572) lt!31589) lt!31589)))))

(declare-fun b!72299 () Bool)

(declare-fun e!47304 () Bool)

(assert (=> b!72299 (= e!47303 e!47304)))

(declare-fun res!38459 () Bool)

(assert (=> b!72299 (=> (not res!38459) (not e!47304))))

(assert (=> b!72299 (= res!38459 (not e!47302))))

(declare-fun res!38457 () Bool)

(assert (=> b!72299 (=> (not res!38457) (not e!47302))))

(assert (=> b!72299 (= res!38457 (validKeyInArray!0 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) lt!31572)))))

(declare-fun b!72300 () Bool)

(assert (=> b!72300 (= e!47301 call!6284)))

(declare-fun b!72301 () Bool)

(assert (=> b!72301 (= e!47304 e!47301)))

(assert (=> b!72301 (= c!10650 (validKeyInArray!0 (select (arr!1852 (array!3881 (store (arr!1852 (_keys!3840 newMap!16)) (ite c!10293 (index!3113 lt!31339) (index!3110 lt!31339)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (size!2089 (_keys!3840 newMap!16)))) lt!31572)))))

(assert (= (and d!16483 (not res!38458)) b!72299))

(assert (= (and b!72299 res!38457) b!72297))

(assert (= (and b!72299 res!38459) b!72301))

(assert (= (and b!72301 c!10650) b!72300))

(assert (= (and b!72301 (not c!10650)) b!72298))

(assert (= (or b!72300 b!72298) bm!6281))

(declare-fun m!70011 () Bool)

(assert (=> b!72297 m!70011))

(assert (=> b!72297 m!70011))

(declare-fun m!70013 () Bool)

(assert (=> b!72297 m!70013))

(assert (=> bm!6281 m!70011))

(declare-fun m!70015 () Bool)

(assert (=> bm!6281 m!70015))

(assert (=> b!72299 m!70011))

(assert (=> b!72299 m!70011))

(declare-fun m!70017 () Bool)

(assert (=> b!72299 m!70017))

(assert (=> b!72301 m!70011))

(assert (=> b!72301 m!70011))

(assert (=> b!72301 m!70017))

(assert (=> d!15875 d!16483))

(declare-fun d!16485 () Bool)

(declare-fun lt!32111 () Bool)

(assert (=> d!16485 (= lt!32111 (select (content!74 (toList!732 lt!31721)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun e!47306 () Bool)

(assert (=> d!16485 (= lt!32111 e!47306)))

(declare-fun res!38461 () Bool)

(assert (=> d!16485 (=> (not res!38461) (not e!47306))))

(assert (=> d!16485 (= res!38461 ((_ is Cons!1500) (toList!732 lt!31721)))))

(assert (=> d!16485 (= (contains!728 (toList!732 lt!31721) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!32111)))

(declare-fun b!72302 () Bool)

(declare-fun e!47305 () Bool)

(assert (=> b!72302 (= e!47306 e!47305)))

(declare-fun res!38460 () Bool)

(assert (=> b!72302 (=> res!38460 e!47305)))

(assert (=> b!72302 (= res!38460 (= (h!2086 (toList!732 lt!31721)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!72303 () Bool)

(assert (=> b!72303 (= e!47305 (contains!728 (t!5044 (toList!732 lt!31721)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!16485 res!38461) b!72302))

(assert (= (and b!72302 (not res!38460)) b!72303))

(declare-fun m!70019 () Bool)

(assert (=> d!16485 m!70019))

(declare-fun m!70021 () Bool)

(assert (=> d!16485 m!70021))

(declare-fun m!70023 () Bool)

(assert (=> b!72303 m!70023))

(assert (=> b!71501 d!16485))

(declare-fun lt!32112 () Bool)

(declare-fun d!16487 () Bool)

(assert (=> d!16487 (= lt!32112 (select (content!74 (toList!732 lt!31489)) (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!47308 () Bool)

(assert (=> d!16487 (= lt!32112 e!47308)))

(declare-fun res!38463 () Bool)

(assert (=> d!16487 (=> (not res!38463) (not e!47308))))

(assert (=> d!16487 (= res!38463 ((_ is Cons!1500) (toList!732 lt!31489)))))

(assert (=> d!16487 (= (contains!728 (toList!732 lt!31489) (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32112)))

(declare-fun b!72304 () Bool)

(declare-fun e!47307 () Bool)

(assert (=> b!72304 (= e!47308 e!47307)))

(declare-fun res!38462 () Bool)

(assert (=> b!72304 (=> res!38462 e!47307)))

(assert (=> b!72304 (= res!38462 (= (h!2086 (toList!732 lt!31489)) (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72305 () Bool)

(assert (=> b!72305 (= e!47307 (contains!728 (t!5044 (toList!732 lt!31489)) (ite (or c!10318 c!10314) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (= (and d!16487 res!38463) b!72304))

(assert (= (and b!72304 (not res!38462)) b!72305))

(declare-fun m!70025 () Bool)

(assert (=> d!16487 m!70025))

(declare-fun m!70027 () Bool)

(assert (=> d!16487 m!70027))

(declare-fun m!70029 () Bool)

(assert (=> b!72305 m!70029))

(assert (=> b!71198 d!16487))

(declare-fun d!16489 () Bool)

(declare-fun e!47309 () Bool)

(assert (=> d!16489 e!47309))

(declare-fun res!38465 () Bool)

(assert (=> d!16489 (=> (not res!38465) (not e!47309))))

(declare-fun lt!32116 () ListLongMap!1433)

(assert (=> d!16489 (= res!38465 (contains!726 lt!32116 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun lt!32115 () List!1504)

(assert (=> d!16489 (= lt!32116 (ListLongMap!1434 lt!32115))))

(declare-fun lt!32114 () Unit!2006)

(declare-fun lt!32113 () Unit!2006)

(assert (=> d!16489 (= lt!32114 lt!32113)))

(assert (=> d!16489 (= (getValueByKey!131 lt!32115 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16489 (= lt!32113 (lemmaContainsTupThenGetReturnValue!50 lt!32115 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16489 (= lt!32115 (insertStrictlySorted!52 (toList!732 call!6190) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16489 (= (+!95 call!6190 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) lt!32116)))

(declare-fun b!72306 () Bool)

(declare-fun res!38464 () Bool)

(assert (=> b!72306 (=> (not res!38464) (not e!47309))))

(assert (=> b!72306 (= res!38464 (= (getValueByKey!131 (toList!732 lt!32116) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun b!72307 () Bool)

(assert (=> b!72307 (= e!47309 (contains!728 (toList!732 lt!32116) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(assert (= (and d!16489 res!38465) b!72306))

(assert (= (and b!72306 res!38464) b!72307))

(declare-fun m!70031 () Bool)

(assert (=> d!16489 m!70031))

(declare-fun m!70033 () Bool)

(assert (=> d!16489 m!70033))

(declare-fun m!70035 () Bool)

(assert (=> d!16489 m!70035))

(declare-fun m!70037 () Bool)

(assert (=> d!16489 m!70037))

(declare-fun m!70039 () Bool)

(assert (=> b!72306 m!70039))

(declare-fun m!70041 () Bool)

(assert (=> b!72307 m!70041))

(assert (=> b!71444 d!16489))

(declare-fun d!16491 () Bool)

(assert (=> d!16491 (= (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71178 d!16491))

(declare-fun d!16493 () Bool)

(declare-fun e!47310 () Bool)

(assert (=> d!16493 e!47310))

(declare-fun res!38466 () Bool)

(assert (=> d!16493 (=> res!38466 e!47310)))

(declare-fun lt!32119 () Bool)

(assert (=> d!16493 (= res!38466 (not lt!32119))))

(declare-fun lt!32117 () Bool)

(assert (=> d!16493 (= lt!32119 lt!32117)))

(declare-fun lt!32118 () Unit!2006)

(declare-fun e!47311 () Unit!2006)

(assert (=> d!16493 (= lt!32118 e!47311)))

(declare-fun c!10651 () Bool)

(assert (=> d!16493 (= c!10651 lt!32117)))

(assert (=> d!16493 (= lt!32117 (containsKey!135 (toList!732 lt!31634) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16493 (= (contains!726 lt!31634 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32119)))

(declare-fun b!72308 () Bool)

(declare-fun lt!32120 () Unit!2006)

(assert (=> b!72308 (= e!47311 lt!32120)))

(assert (=> b!72308 (= lt!32120 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31634) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> b!72308 (isDefined!85 (getValueByKey!131 (toList!732 lt!31634) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72309 () Bool)

(declare-fun Unit!2063 () Unit!2006)

(assert (=> b!72309 (= e!47311 Unit!2063)))

(declare-fun b!72310 () Bool)

(assert (=> b!72310 (= e!47310 (isDefined!85 (getValueByKey!131 (toList!732 lt!31634) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16493 c!10651) b!72308))

(assert (= (and d!16493 (not c!10651)) b!72309))

(assert (= (and d!16493 (not res!38466)) b!72310))

(declare-fun m!70043 () Bool)

(assert (=> d!16493 m!70043))

(declare-fun m!70045 () Bool)

(assert (=> b!72308 m!70045))

(assert (=> b!72308 m!68347))

(assert (=> b!72308 m!68347))

(declare-fun m!70047 () Bool)

(assert (=> b!72308 m!70047))

(assert (=> b!72310 m!68347))

(assert (=> b!72310 m!68347))

(assert (=> b!72310 m!70047))

(assert (=> d!15907 d!16493))

(declare-fun d!16495 () Bool)

(declare-fun c!10652 () Bool)

(assert (=> d!16495 (= c!10652 (and ((_ is Cons!1500) lt!31633) (= (_1!1079 (h!2086 lt!31633)) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47312 () Option!137)

(assert (=> d!16495 (= (getValueByKey!131 lt!31633 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47312)))

(declare-fun b!72311 () Bool)

(assert (=> b!72311 (= e!47312 (Some!136 (_2!1079 (h!2086 lt!31633))))))

(declare-fun b!72313 () Bool)

(declare-fun e!47313 () Option!137)

(assert (=> b!72313 (= e!47313 (getValueByKey!131 (t!5044 lt!31633) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72312 () Bool)

(assert (=> b!72312 (= e!47312 e!47313)))

(declare-fun c!10653 () Bool)

(assert (=> b!72312 (= c!10653 (and ((_ is Cons!1500) lt!31633) (not (= (_1!1079 (h!2086 lt!31633)) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72314 () Bool)

(assert (=> b!72314 (= e!47313 None!135)))

(assert (= (and d!16495 c!10652) b!72311))

(assert (= (and d!16495 (not c!10652)) b!72312))

(assert (= (and b!72312 c!10653) b!72313))

(assert (= (and b!72312 (not c!10653)) b!72314))

(declare-fun m!70049 () Bool)

(assert (=> b!72313 m!70049))

(assert (=> d!15907 d!16495))

(declare-fun d!16497 () Bool)

(assert (=> d!16497 (= (getValueByKey!131 lt!31633 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!32121 () Unit!2006)

(assert (=> d!16497 (= lt!32121 (choose!407 lt!31633 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!47314 () Bool)

(assert (=> d!16497 e!47314))

(declare-fun res!38467 () Bool)

(assert (=> d!16497 (=> (not res!38467) (not e!47314))))

(assert (=> d!16497 (= res!38467 (isStrictlySorted!286 lt!31633))))

(assert (=> d!16497 (= (lemmaContainsTupThenGetReturnValue!50 lt!31633 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32121)))

(declare-fun b!72315 () Bool)

(declare-fun res!38468 () Bool)

(assert (=> b!72315 (=> (not res!38468) (not e!47314))))

(assert (=> b!72315 (= res!38468 (containsKey!135 lt!31633 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72316 () Bool)

(assert (=> b!72316 (= e!47314 (contains!728 lt!31633 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16497 res!38467) b!72315))

(assert (= (and b!72315 res!38468) b!72316))

(assert (=> d!16497 m!68341))

(declare-fun m!70051 () Bool)

(assert (=> d!16497 m!70051))

(declare-fun m!70053 () Bool)

(assert (=> d!16497 m!70053))

(declare-fun m!70055 () Bool)

(assert (=> b!72315 m!70055))

(declare-fun m!70057 () Bool)

(assert (=> b!72316 m!70057))

(assert (=> d!15907 d!16497))

(declare-fun b!72317 () Bool)

(declare-fun e!47316 () List!1504)

(declare-fun call!6286 () List!1504)

(assert (=> b!72317 (= e!47316 call!6286)))

(declare-fun b!72318 () Bool)

(declare-fun res!38469 () Bool)

(declare-fun e!47315 () Bool)

(assert (=> b!72318 (=> (not res!38469) (not e!47315))))

(declare-fun lt!32122 () List!1504)

(assert (=> b!72318 (= res!38469 (containsKey!135 lt!32122 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72319 () Bool)

(declare-fun c!10655 () Bool)

(assert (=> b!72319 (= c!10655 (and ((_ is Cons!1500) (toList!732 lt!31399)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31399))) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47318 () List!1504)

(declare-fun e!47317 () List!1504)

(assert (=> b!72319 (= e!47318 e!47317)))

(declare-fun b!72321 () Bool)

(declare-fun call!6287 () List!1504)

(assert (=> b!72321 (= e!47318 call!6287)))

(declare-fun b!72322 () Bool)

(declare-fun call!6285 () List!1504)

(assert (=> b!72322 (= e!47317 call!6285)))

(declare-fun e!47319 () List!1504)

(declare-fun b!72323 () Bool)

(assert (=> b!72323 (= e!47319 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31399)) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun bm!6282 () Bool)

(assert (=> bm!6282 (= call!6285 call!6287)))

(declare-fun bm!6283 () Bool)

(assert (=> bm!6283 (= call!6287 call!6286)))

(declare-fun c!10654 () Bool)

(declare-fun bm!6284 () Bool)

(assert (=> bm!6284 (= call!6286 ($colon$colon!64 e!47319 (ite c!10654 (h!2086 (toList!732 lt!31399)) (tuple2!2139 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun c!10656 () Bool)

(assert (=> bm!6284 (= c!10656 c!10654)))

(declare-fun c!10657 () Bool)

(declare-fun b!72324 () Bool)

(assert (=> b!72324 (= e!47319 (ite c!10657 (t!5044 (toList!732 lt!31399)) (ite c!10655 (Cons!1500 (h!2086 (toList!732 lt!31399)) (t!5044 (toList!732 lt!31399))) Nil!1501)))))

(declare-fun b!72320 () Bool)

(assert (=> b!72320 (= e!47317 call!6285)))

(declare-fun d!16499 () Bool)

(assert (=> d!16499 e!47315))

(declare-fun res!38470 () Bool)

(assert (=> d!16499 (=> (not res!38470) (not e!47315))))

(assert (=> d!16499 (= res!38470 (isStrictlySorted!286 lt!32122))))

(assert (=> d!16499 (= lt!32122 e!47316)))

(assert (=> d!16499 (= c!10654 (and ((_ is Cons!1500) (toList!732 lt!31399)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31399))) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16499 (isStrictlySorted!286 (toList!732 lt!31399))))

(assert (=> d!16499 (= (insertStrictlySorted!52 (toList!732 lt!31399) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32122)))

(declare-fun b!72325 () Bool)

(assert (=> b!72325 (= e!47315 (contains!728 lt!32122 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72326 () Bool)

(assert (=> b!72326 (= e!47316 e!47318)))

(assert (=> b!72326 (= c!10657 (and ((_ is Cons!1500) (toList!732 lt!31399)) (= (_1!1079 (h!2086 (toList!732 lt!31399))) (_1!1079 (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16499 c!10654) b!72317))

(assert (= (and d!16499 (not c!10654)) b!72326))

(assert (= (and b!72326 c!10657) b!72321))

(assert (= (and b!72326 (not c!10657)) b!72319))

(assert (= (and b!72319 c!10655) b!72320))

(assert (= (and b!72319 (not c!10655)) b!72322))

(assert (= (or b!72320 b!72322) bm!6282))

(assert (= (or b!72321 bm!6282) bm!6283))

(assert (= (or b!72317 bm!6283) bm!6284))

(assert (= (and bm!6284 c!10656) b!72323))

(assert (= (and bm!6284 (not c!10656)) b!72324))

(assert (= (and d!16499 res!38470) b!72318))

(assert (= (and b!72318 res!38469) b!72325))

(declare-fun m!70059 () Bool)

(assert (=> bm!6284 m!70059))

(declare-fun m!70061 () Bool)

(assert (=> b!72323 m!70061))

(declare-fun m!70063 () Bool)

(assert (=> b!72318 m!70063))

(declare-fun m!70065 () Bool)

(assert (=> b!72325 m!70065))

(declare-fun m!70067 () Bool)

(assert (=> d!16499 m!70067))

(declare-fun m!70069 () Bool)

(assert (=> d!16499 m!70069))

(assert (=> d!15907 d!16499))

(assert (=> b!71545 d!16045))

(assert (=> d!16007 d!16073))

(declare-fun d!16501 () Bool)

(declare-fun c!10658 () Bool)

(assert (=> d!16501 (= c!10658 ((_ is Nil!1501) (toList!732 lt!31426)))))

(declare-fun e!47320 () (InoxSet tuple2!2138))

(assert (=> d!16501 (= (content!74 (toList!732 lt!31426)) e!47320)))

(declare-fun b!72327 () Bool)

(assert (=> b!72327 (= e!47320 ((as const (Array tuple2!2138 Bool)) false))))

(declare-fun b!72328 () Bool)

(assert (=> b!72328 (= e!47320 ((_ map or) (store ((as const (Array tuple2!2138 Bool)) false) (h!2086 (toList!732 lt!31426)) true) (content!74 (t!5044 (toList!732 lt!31426)))))))

(assert (= (and d!16501 c!10658) b!72327))

(assert (= (and d!16501 (not c!10658)) b!72328))

(declare-fun m!70071 () Bool)

(assert (=> b!72328 m!70071))

(assert (=> b!72328 m!69645))

(assert (=> d!16025 d!16501))

(declare-fun d!16503 () Bool)

(assert (=> d!16503 (= (apply!74 lt!31786 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31786) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3101 () Bool)

(assert (= bs!3101 d!16503))

(declare-fun m!70073 () Bool)

(assert (=> bs!3101 m!70073))

(assert (=> bs!3101 m!70073))

(declare-fun m!70075 () Bool)

(assert (=> bs!3101 m!70075))

(assert (=> b!71590 d!16503))

(assert (=> d!15897 d!15885))

(assert (=> d!15897 d!15895))

(declare-fun d!16505 () Bool)

(assert (=> d!16505 (contains!726 (+!95 lt!31397 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!31409)))

(assert (=> d!16505 true))

(declare-fun _$35!315 () Unit!2006)

(assert (=> d!16505 (= (choose!411 lt!31397 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))) lt!31409) _$35!315)))

(declare-fun bs!3102 () Bool)

(assert (= bs!3102 d!16505))

(assert (=> bs!3102 m!67929))

(assert (=> bs!3102 m!67929))

(assert (=> bs!3102 m!67937))

(assert (=> d!15897 d!16505))

(declare-fun d!16507 () Bool)

(declare-fun e!47321 () Bool)

(assert (=> d!16507 e!47321))

(declare-fun res!38471 () Bool)

(assert (=> d!16507 (=> res!38471 e!47321)))

(declare-fun lt!32125 () Bool)

(assert (=> d!16507 (= res!38471 (not lt!32125))))

(declare-fun lt!32123 () Bool)

(assert (=> d!16507 (= lt!32125 lt!32123)))

(declare-fun lt!32124 () Unit!2006)

(declare-fun e!47322 () Unit!2006)

(assert (=> d!16507 (= lt!32124 e!47322)))

(declare-fun c!10659 () Bool)

(assert (=> d!16507 (= c!10659 lt!32123)))

(assert (=> d!16507 (= lt!32123 (containsKey!135 (toList!732 lt!31397) lt!31409))))

(assert (=> d!16507 (= (contains!726 lt!31397 lt!31409) lt!32125)))

(declare-fun b!72330 () Bool)

(declare-fun lt!32126 () Unit!2006)

(assert (=> b!72330 (= e!47322 lt!32126)))

(assert (=> b!72330 (= lt!32126 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31397) lt!31409))))

(assert (=> b!72330 (isDefined!85 (getValueByKey!131 (toList!732 lt!31397) lt!31409))))

(declare-fun b!72331 () Bool)

(declare-fun Unit!2064 () Unit!2006)

(assert (=> b!72331 (= e!47322 Unit!2064)))

(declare-fun b!72332 () Bool)

(assert (=> b!72332 (= e!47321 (isDefined!85 (getValueByKey!131 (toList!732 lt!31397) lt!31409)))))

(assert (= (and d!16507 c!10659) b!72330))

(assert (= (and d!16507 (not c!10659)) b!72331))

(assert (= (and d!16507 (not res!38471)) b!72332))

(declare-fun m!70077 () Bool)

(assert (=> d!16507 m!70077))

(declare-fun m!70079 () Bool)

(assert (=> b!72330 m!70079))

(declare-fun m!70081 () Bool)

(assert (=> b!72330 m!70081))

(assert (=> b!72330 m!70081))

(declare-fun m!70083 () Bool)

(assert (=> b!72330 m!70083))

(assert (=> b!72332 m!70081))

(assert (=> b!72332 m!70081))

(assert (=> b!72332 m!70083))

(assert (=> d!15897 d!16507))

(declare-fun d!16509 () Bool)

(assert (=> d!16509 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16509 true))

(declare-fun _$7!59 () Unit!2006)

(assert (=> d!16509 (= (choose!406 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31324 (zeroValue!2096 newMap!16) lt!31204 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)) _$7!59)))

(declare-fun bs!3103 () Bool)

(assert (= bs!3103 d!16509))

(assert (=> bs!3103 m!67909))

(assert (=> bs!3103 m!67909))

(assert (=> bs!3103 m!68139))

(assert (=> bs!3103 m!68135))

(assert (=> d!15853 d!16509))

(declare-fun b!72333 () Bool)

(declare-fun e!47332 () Bool)

(declare-fun e!47323 () Bool)

(assert (=> b!72333 (= e!47332 e!47323)))

(declare-fun res!38473 () Bool)

(declare-fun call!6292 () Bool)

(assert (=> b!72333 (= res!38473 call!6292)))

(assert (=> b!72333 (=> (not res!38473) (not e!47323))))

(declare-fun b!72334 () Bool)

(declare-fun e!47334 () ListLongMap!1433)

(declare-fun call!6288 () ListLongMap!1433)

(assert (=> b!72334 (= e!47334 (+!95 call!6288 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun b!72335 () Bool)

(declare-fun e!47331 () ListLongMap!1433)

(declare-fun call!6293 () ListLongMap!1433)

(assert (=> b!72335 (= e!47331 call!6293)))

(declare-fun b!72336 () Bool)

(declare-fun e!47325 () Unit!2006)

(declare-fun Unit!2065 () Unit!2006)

(assert (=> b!72336 (= e!47325 Unit!2065)))

(declare-fun b!72337 () Bool)

(declare-fun call!6290 () ListLongMap!1433)

(assert (=> b!72337 (= e!47331 call!6290)))

(declare-fun b!72338 () Bool)

(declare-fun e!47327 () Bool)

(assert (=> b!72338 (= e!47327 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6285 () Bool)

(declare-fun call!6289 () ListLongMap!1433)

(assert (=> bm!6285 (= call!6293 call!6289)))

(declare-fun b!72339 () Bool)

(assert (=> b!72339 (= e!47332 (not call!6292))))

(declare-fun bm!6287 () Bool)

(assert (=> bm!6287 (= call!6290 call!6288)))

(declare-fun bm!6288 () Bool)

(declare-fun call!6294 () ListLongMap!1433)

(assert (=> bm!6288 (= call!6289 call!6294)))

(declare-fun b!72340 () Bool)

(declare-fun e!47330 () Bool)

(declare-fun e!47329 () Bool)

(assert (=> b!72340 (= e!47330 e!47329)))

(declare-fun c!10663 () Bool)

(assert (=> b!72340 (= c!10663 (not (= (bvand lt!31324 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6289 () Bool)

(declare-fun lt!32130 () ListLongMap!1433)

(assert (=> bm!6289 (= call!6292 (contains!726 lt!32130 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72341 () Bool)

(declare-fun e!47328 () Bool)

(assert (=> b!72341 (= e!47328 (= (apply!74 lt!32130 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun b!72342 () Bool)

(declare-fun e!47326 () ListLongMap!1433)

(assert (=> b!72342 (= e!47334 e!47326)))

(declare-fun c!10660 () Bool)

(assert (=> b!72342 (= c!10660 (and (not (= (bvand lt!31324 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31324 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72343 () Bool)

(declare-fun e!47335 () Bool)

(declare-fun e!47324 () Bool)

(assert (=> b!72343 (= e!47335 e!47324)))

(declare-fun res!38474 () Bool)

(assert (=> b!72343 (=> (not res!38474) (not e!47324))))

(assert (=> b!72343 (= res!38474 (contains!726 lt!32130 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72343 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72344 () Bool)

(assert (=> b!72344 (= e!47329 e!47328)))

(declare-fun res!38475 () Bool)

(declare-fun call!6291 () Bool)

(assert (=> b!72344 (= res!38475 call!6291)))

(assert (=> b!72344 (=> (not res!38475) (not e!47328))))

(declare-fun bm!6290 () Bool)

(assert (=> bm!6290 (= call!6291 (contains!726 lt!32130 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72345 () Bool)

(assert (=> b!72345 (= e!47326 call!6290)))

(declare-fun b!72346 () Bool)

(assert (=> b!72346 (= e!47324 (= (apply!74 lt!32130 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72346 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_values!2175 newMap!16))))))

(assert (=> b!72346 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72347 () Bool)

(declare-fun lt!32140 () Unit!2006)

(assert (=> b!72347 (= e!47325 lt!32140)))

(declare-fun lt!32131 () ListLongMap!1433)

(assert (=> b!72347 (= lt!32131 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32148 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32148 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32143 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32143 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32144 () Unit!2006)

(assert (=> b!72347 (= lt!32144 (addStillContains!50 lt!32131 lt!32148 lt!31204 lt!32143))))

(assert (=> b!72347 (contains!726 (+!95 lt!32131 (tuple2!2139 lt!32148 lt!31204)) lt!32143)))

(declare-fun lt!32136 () Unit!2006)

(assert (=> b!72347 (= lt!32136 lt!32144)))

(declare-fun lt!32133 () ListLongMap!1433)

(assert (=> b!72347 (= lt!32133 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32134 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32134 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32135 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32135 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32147 () Unit!2006)

(assert (=> b!72347 (= lt!32147 (addApplyDifferent!50 lt!32133 lt!32134 (minValue!2096 newMap!16) lt!32135))))

(assert (=> b!72347 (= (apply!74 (+!95 lt!32133 (tuple2!2139 lt!32134 (minValue!2096 newMap!16))) lt!32135) (apply!74 lt!32133 lt!32135))))

(declare-fun lt!32139 () Unit!2006)

(assert (=> b!72347 (= lt!32139 lt!32147)))

(declare-fun lt!32142 () ListLongMap!1433)

(assert (=> b!72347 (= lt!32142 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32138 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32138 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32145 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32145 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32137 () Unit!2006)

(assert (=> b!72347 (= lt!32137 (addApplyDifferent!50 lt!32142 lt!32138 lt!31204 lt!32145))))

(assert (=> b!72347 (= (apply!74 (+!95 lt!32142 (tuple2!2139 lt!32138 lt!31204)) lt!32145) (apply!74 lt!32142 lt!32145))))

(declare-fun lt!32141 () Unit!2006)

(assert (=> b!72347 (= lt!32141 lt!32137)))

(declare-fun lt!32132 () ListLongMap!1433)

(assert (=> b!72347 (= lt!32132 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32128 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32128 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32129 () (_ BitVec 64))

(assert (=> b!72347 (= lt!32129 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72347 (= lt!32140 (addApplyDifferent!50 lt!32132 lt!32128 (minValue!2096 newMap!16) lt!32129))))

(assert (=> b!72347 (= (apply!74 (+!95 lt!32132 (tuple2!2139 lt!32128 (minValue!2096 newMap!16))) lt!32129) (apply!74 lt!32132 lt!32129))))

(declare-fun b!72348 () Bool)

(assert (=> b!72348 (= e!47329 (not call!6291))))

(declare-fun b!72349 () Bool)

(declare-fun res!38478 () Bool)

(assert (=> b!72349 (=> (not res!38478) (not e!47330))))

(assert (=> b!72349 (= res!38478 e!47335)))

(declare-fun res!38479 () Bool)

(assert (=> b!72349 (=> res!38479 e!47335)))

(assert (=> b!72349 (= res!38479 (not e!47327))))

(declare-fun res!38477 () Bool)

(assert (=> b!72349 (=> (not res!38477) (not e!47327))))

(assert (=> b!72349 (= res!38477 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6291 () Bool)

(assert (=> bm!6291 (= call!6294 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72350 () Bool)

(declare-fun e!47333 () Bool)

(assert (=> b!72350 (= e!47333 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72351 () Bool)

(declare-fun res!38472 () Bool)

(assert (=> b!72351 (=> (not res!38472) (not e!47330))))

(assert (=> b!72351 (= res!38472 e!47332)))

(declare-fun c!10662 () Bool)

(assert (=> b!72351 (= c!10662 (not (= (bvand lt!31324 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!10664 () Bool)

(declare-fun bm!6286 () Bool)

(assert (=> bm!6286 (= call!6288 (+!95 (ite c!10664 call!6294 (ite c!10660 call!6289 call!6293)) (ite (or c!10664 c!10660) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun d!16511 () Bool)

(assert (=> d!16511 e!47330))

(declare-fun res!38476 () Bool)

(assert (=> d!16511 (=> (not res!38476) (not e!47330))))

(assert (=> d!16511 (= res!38476 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun lt!32127 () ListLongMap!1433)

(assert (=> d!16511 (= lt!32130 lt!32127)))

(declare-fun lt!32146 () Unit!2006)

(assert (=> d!16511 (= lt!32146 e!47325)))

(declare-fun c!10661 () Bool)

(assert (=> d!16511 (= c!10661 e!47333)))

(declare-fun res!38480 () Bool)

(assert (=> d!16511 (=> (not res!38480) (not e!47333))))

(assert (=> d!16511 (= res!38480 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16511 (= lt!32127 e!47334)))

(assert (=> d!16511 (= c!10664 (and (not (= (bvand lt!31324 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31324 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16511 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16511 (= (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31324 lt!31204 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32130)))

(declare-fun b!72352 () Bool)

(assert (=> b!72352 (= e!47323 (= (apply!74 lt!32130 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31204))))

(declare-fun b!72353 () Bool)

(declare-fun c!10665 () Bool)

(assert (=> b!72353 (= c!10665 (and (not (= (bvand lt!31324 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31324 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!72353 (= e!47326 e!47331)))

(assert (= (and d!16511 c!10664) b!72334))

(assert (= (and d!16511 (not c!10664)) b!72342))

(assert (= (and b!72342 c!10660) b!72345))

(assert (= (and b!72342 (not c!10660)) b!72353))

(assert (= (and b!72353 c!10665) b!72337))

(assert (= (and b!72353 (not c!10665)) b!72335))

(assert (= (or b!72337 b!72335) bm!6285))

(assert (= (or b!72345 bm!6285) bm!6288))

(assert (= (or b!72345 b!72337) bm!6287))

(assert (= (or b!72334 bm!6288) bm!6291))

(assert (= (or b!72334 bm!6287) bm!6286))

(assert (= (and d!16511 res!38480) b!72350))

(assert (= (and d!16511 c!10661) b!72347))

(assert (= (and d!16511 (not c!10661)) b!72336))

(assert (= (and d!16511 res!38476) b!72349))

(assert (= (and b!72349 res!38477) b!72338))

(assert (= (and b!72349 (not res!38479)) b!72343))

(assert (= (and b!72343 res!38474) b!72346))

(assert (= (and b!72349 res!38478) b!72351))

(assert (= (and b!72351 c!10662) b!72333))

(assert (= (and b!72351 (not c!10662)) b!72339))

(assert (= (and b!72333 res!38473) b!72352))

(assert (= (or b!72333 b!72339) bm!6289))

(assert (= (and b!72351 res!38472) b!72340))

(assert (= (and b!72340 c!10663) b!72344))

(assert (= (and b!72340 (not c!10663)) b!72348))

(assert (= (and b!72344 res!38475) b!72341))

(assert (= (or b!72344 b!72348) bm!6290))

(declare-fun b_lambda!3245 () Bool)

(assert (=> (not b_lambda!3245) (not b!72346)))

(assert (=> b!72346 t!5051))

(declare-fun b_and!4445 () Bool)

(assert (= b_and!4441 (and (=> t!5051 result!2669) b_and!4445)))

(assert (=> b!72346 t!5053))

(declare-fun b_and!4447 () Bool)

(assert (= b_and!4443 (and (=> t!5053 result!2671) b_and!4447)))

(assert (=> b!72343 m!68067))

(assert (=> b!72343 m!68067))

(declare-fun m!70085 () Bool)

(assert (=> b!72343 m!70085))

(declare-fun m!70087 () Bool)

(assert (=> bm!6289 m!70087))

(declare-fun m!70089 () Bool)

(assert (=> bm!6290 m!70089))

(assert (=> b!72338 m!68067))

(assert (=> b!72338 m!68067))

(assert (=> b!72338 m!68077))

(assert (=> b!72347 m!68067))

(declare-fun m!70091 () Bool)

(assert (=> b!72347 m!70091))

(declare-fun m!70093 () Bool)

(assert (=> b!72347 m!70093))

(declare-fun m!70095 () Bool)

(assert (=> b!72347 m!70095))

(declare-fun m!70097 () Bool)

(assert (=> b!72347 m!70097))

(declare-fun m!70099 () Bool)

(assert (=> b!72347 m!70099))

(declare-fun m!70101 () Bool)

(assert (=> b!72347 m!70101))

(assert (=> b!72347 m!70095))

(declare-fun m!70103 () Bool)

(assert (=> b!72347 m!70103))

(declare-fun m!70105 () Bool)

(assert (=> b!72347 m!70105))

(assert (=> b!72347 m!70101))

(declare-fun m!70107 () Bool)

(assert (=> b!72347 m!70107))

(declare-fun m!70109 () Bool)

(assert (=> b!72347 m!70109))

(declare-fun m!70111 () Bool)

(assert (=> b!72347 m!70111))

(assert (=> b!72347 m!70109))

(declare-fun m!70113 () Bool)

(assert (=> b!72347 m!70113))

(declare-fun m!70115 () Bool)

(assert (=> b!72347 m!70115))

(declare-fun m!70117 () Bool)

(assert (=> b!72347 m!70117))

(declare-fun m!70119 () Bool)

(assert (=> b!72347 m!70119))

(declare-fun m!70121 () Bool)

(assert (=> b!72347 m!70121))

(assert (=> b!72347 m!70113))

(assert (=> bm!6291 m!70121))

(declare-fun m!70123 () Bool)

(assert (=> bm!6286 m!70123))

(declare-fun m!70125 () Bool)

(assert (=> b!72352 m!70125))

(declare-fun m!70127 () Bool)

(assert (=> b!72341 m!70127))

(assert (=> b!72346 m!68527))

(assert (=> b!72346 m!68527))

(assert (=> b!72346 m!68529))

(assert (=> b!72346 m!68531))

(assert (=> b!72346 m!68529))

(assert (=> b!72346 m!68067))

(assert (=> b!72346 m!68067))

(declare-fun m!70129 () Bool)

(assert (=> b!72346 m!70129))

(assert (=> b!72350 m!68067))

(assert (=> b!72350 m!68067))

(assert (=> b!72350 m!68077))

(assert (=> d!16511 m!68107))

(declare-fun m!70131 () Bool)

(assert (=> b!72334 m!70131))

(assert (=> d!15853 d!16511))

(declare-fun d!16513 () Bool)

(declare-fun e!47336 () Bool)

(assert (=> d!16513 e!47336))

(declare-fun res!38482 () Bool)

(assert (=> d!16513 (=> (not res!38482) (not e!47336))))

(declare-fun lt!32152 () ListLongMap!1433)

(assert (=> d!16513 (= res!38482 (contains!726 lt!32152 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(declare-fun lt!32151 () List!1504)

(assert (=> d!16513 (= lt!32152 (ListLongMap!1434 lt!32151))))

(declare-fun lt!32150 () Unit!2006)

(declare-fun lt!32149 () Unit!2006)

(assert (=> d!16513 (= lt!32150 lt!32149)))

(assert (=> d!16513 (= (getValueByKey!131 lt!32151 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(assert (=> d!16513 (= lt!32149 (lemmaContainsTupThenGetReturnValue!50 lt!32151 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(assert (=> d!16513 (= lt!32151 (insertStrictlySorted!52 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(assert (=> d!16513 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204)) lt!32152)))

(declare-fun b!72354 () Bool)

(declare-fun res!38481 () Bool)

(assert (=> b!72354 (=> (not res!38481) (not e!47336))))

(assert (=> b!72354 (= res!38481 (= (getValueByKey!131 (toList!732 lt!32152) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204)))))))

(declare-fun b!72355 () Bool)

(assert (=> b!72355 (= e!47336 (contains!728 (toList!732 lt!32152) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31204)))))

(assert (= (and d!16513 res!38482) b!72354))

(assert (= (and b!72354 res!38481) b!72355))

(declare-fun m!70133 () Bool)

(assert (=> d!16513 m!70133))

(declare-fun m!70135 () Bool)

(assert (=> d!16513 m!70135))

(declare-fun m!70137 () Bool)

(assert (=> d!16513 m!70137))

(declare-fun m!70139 () Bool)

(assert (=> d!16513 m!70139))

(declare-fun m!70141 () Bool)

(assert (=> b!72354 m!70141))

(declare-fun m!70143 () Bool)

(assert (=> b!72355 m!70143))

(assert (=> d!15853 d!16513))

(assert (=> d!15853 d!15955))

(assert (=> d!15853 d!16073))

(assert (=> b!71306 d!15967))

(declare-fun d!16515 () Bool)

(declare-fun res!38483 () Bool)

(declare-fun e!47337 () Bool)

(assert (=> d!16515 (=> res!38483 e!47337)))

(assert (=> d!16515 (= res!38483 (and ((_ is Cons!1500) (toList!732 call!6125)) (= (_1!1079 (h!2086 (toList!732 call!6125))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))))))

(assert (=> d!16515 (= (containsKey!135 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))) e!47337)))

(declare-fun b!72356 () Bool)

(declare-fun e!47338 () Bool)

(assert (=> b!72356 (= e!47337 e!47338)))

(declare-fun res!38484 () Bool)

(assert (=> b!72356 (=> (not res!38484) (not e!47338))))

(assert (=> b!72356 (= res!38484 (and (or (not ((_ is Cons!1500) (toList!732 call!6125))) (bvsle (_1!1079 (h!2086 (toList!732 call!6125))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))) ((_ is Cons!1500) (toList!732 call!6125)) (bvslt (_1!1079 (h!2086 (toList!732 call!6125))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))))))

(declare-fun b!72357 () Bool)

(assert (=> b!72357 (= e!47338 (containsKey!135 (t!5044 (toList!732 call!6125)) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(assert (= (and d!16515 (not res!38483)) b!72356))

(assert (= (and b!72356 res!38484) b!72357))

(assert (=> b!72357 m!67903))

(declare-fun m!70145 () Bool)

(assert (=> b!72357 m!70145))

(assert (=> d!15877 d!16515))

(declare-fun d!16517 () Bool)

(assert (=> d!16517 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32153 () Unit!2006)

(assert (=> d!16517 (= lt!32153 (choose!405 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47339 () Bool)

(assert (=> d!16517 e!47339))

(declare-fun res!38485 () Bool)

(assert (=> d!16517 (=> (not res!38485) (not e!47339))))

(assert (=> d!16517 (= res!38485 (isStrictlySorted!286 (toList!732 lt!31442)))))

(assert (=> d!16517 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000) lt!32153)))

(declare-fun b!72358 () Bool)

(assert (=> b!72358 (= e!47339 (containsKey!135 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16517 res!38485) b!72358))

(assert (=> d!16517 m!68651))

(assert (=> d!16517 m!68651))

(assert (=> d!16517 m!68653))

(declare-fun m!70147 () Bool)

(assert (=> d!16517 m!70147))

(assert (=> d!16517 m!69001))

(assert (=> b!72358 m!68647))

(assert (=> b!71523 d!16517))

(declare-fun d!16519 () Bool)

(assert (=> d!16519 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3104 () Bool)

(assert (= bs!3104 d!16519))

(assert (=> bs!3104 m!68651))

(declare-fun m!70149 () Bool)

(assert (=> bs!3104 m!70149))

(assert (=> b!71523 d!16519))

(declare-fun d!16521 () Bool)

(declare-fun c!10666 () Bool)

(assert (=> d!16521 (= c!10666 (and ((_ is Cons!1500) (toList!732 lt!31442)) (= (_1!1079 (h!2086 (toList!732 lt!31442))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!47340 () Option!137)

(assert (=> d!16521 (= (getValueByKey!131 (toList!732 lt!31442) #b0000000000000000000000000000000000000000000000000000000000000000) e!47340)))

(declare-fun b!72359 () Bool)

(assert (=> b!72359 (= e!47340 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31442)))))))

(declare-fun b!72361 () Bool)

(declare-fun e!47341 () Option!137)

(assert (=> b!72361 (= e!47341 (getValueByKey!131 (t!5044 (toList!732 lt!31442)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72360 () Bool)

(assert (=> b!72360 (= e!47340 e!47341)))

(declare-fun c!10667 () Bool)

(assert (=> b!72360 (= c!10667 (and ((_ is Cons!1500) (toList!732 lt!31442)) (not (= (_1!1079 (h!2086 (toList!732 lt!31442))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72362 () Bool)

(assert (=> b!72362 (= e!47341 None!135)))

(assert (= (and d!16521 c!10666) b!72359))

(assert (= (and d!16521 (not c!10666)) b!72360))

(assert (= (and b!72360 c!10667) b!72361))

(assert (= (and b!72360 (not c!10667)) b!72362))

(declare-fun m!70151 () Bool)

(assert (=> b!72361 m!70151))

(assert (=> b!71523 d!16521))

(declare-fun d!16523 () Bool)

(declare-fun e!47342 () Bool)

(assert (=> d!16523 e!47342))

(declare-fun res!38487 () Bool)

(assert (=> d!16523 (=> (not res!38487) (not e!47342))))

(declare-fun lt!32157 () ListLongMap!1433)

(assert (=> d!16523 (= res!38487 (contains!726 lt!32157 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(declare-fun lt!32156 () List!1504)

(assert (=> d!16523 (= lt!32157 (ListLongMap!1434 lt!32156))))

(declare-fun lt!32155 () Unit!2006)

(declare-fun lt!32154 () Unit!2006)

(assert (=> d!16523 (= lt!32155 lt!32154)))

(assert (=> d!16523 (= (getValueByKey!131 lt!32156 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16523 (= lt!32154 (lemmaContainsTupThenGetReturnValue!50 lt!32156 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16523 (= lt!32156 (insertStrictlySorted!52 (toList!732 call!6212) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16523 (= (+!95 call!6212 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!32157)))

(declare-fun b!72363 () Bool)

(declare-fun res!38486 () Bool)

(assert (=> b!72363 (=> (not res!38486) (not e!47342))))

(assert (=> b!72363 (= res!38486 (= (getValueByKey!131 (toList!732 lt!32157) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))))

(declare-fun b!72364 () Bool)

(assert (=> b!72364 (= e!47342 (contains!728 (toList!732 lt!32157) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))

(assert (= (and d!16523 res!38487) b!72363))

(assert (= (and b!72363 res!38486) b!72364))

(declare-fun m!70153 () Bool)

(assert (=> d!16523 m!70153))

(declare-fun m!70155 () Bool)

(assert (=> d!16523 m!70155))

(declare-fun m!70157 () Bool)

(assert (=> d!16523 m!70157))

(declare-fun m!70159 () Bool)

(assert (=> d!16523 m!70159))

(declare-fun m!70161 () Bool)

(assert (=> b!72363 m!70161))

(declare-fun m!70163 () Bool)

(assert (=> b!72364 m!70163))

(assert (=> b!71572 d!16523))

(declare-fun lt!32158 () Bool)

(declare-fun d!16525 () Bool)

(assert (=> d!16525 (= lt!32158 (select (content!74 (toList!732 lt!31634)) (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun e!47344 () Bool)

(assert (=> d!16525 (= lt!32158 e!47344)))

(declare-fun res!38489 () Bool)

(assert (=> d!16525 (=> (not res!38489) (not e!47344))))

(assert (=> d!16525 (= res!38489 ((_ is Cons!1500) (toList!732 lt!31634)))))

(assert (=> d!16525 (= (contains!728 (toList!732 lt!31634) (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!32158)))

(declare-fun b!72365 () Bool)

(declare-fun e!47343 () Bool)

(assert (=> b!72365 (= e!47344 e!47343)))

(declare-fun res!38488 () Bool)

(assert (=> b!72365 (=> res!38488 e!47343)))

(assert (=> b!72365 (= res!38488 (= (h!2086 (toList!732 lt!31634)) (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!72366 () Bool)

(assert (=> b!72366 (= e!47343 (contains!728 (t!5044 (toList!732 lt!31634)) (tuple2!2139 lt!31400 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!16525 res!38489) b!72365))

(assert (= (and b!72365 (not res!38488)) b!72366))

(declare-fun m!70165 () Bool)

(assert (=> d!16525 m!70165))

(declare-fun m!70167 () Bool)

(assert (=> d!16525 m!70167))

(declare-fun m!70169 () Bool)

(assert (=> b!72366 m!70169))

(assert (=> b!71337 d!16525))

(declare-fun d!16527 () Bool)

(declare-fun e!47345 () Bool)

(assert (=> d!16527 e!47345))

(declare-fun res!38490 () Bool)

(assert (=> d!16527 (=> res!38490 e!47345)))

(declare-fun lt!32161 () Bool)

(assert (=> d!16527 (= res!38490 (not lt!32161))))

(declare-fun lt!32159 () Bool)

(assert (=> d!16527 (= lt!32161 lt!32159)))

(declare-fun lt!32160 () Unit!2006)

(declare-fun e!47346 () Unit!2006)

(assert (=> d!16527 (= lt!32160 e!47346)))

(declare-fun c!10668 () Bool)

(assert (=> d!16527 (= c!10668 lt!32159)))

(assert (=> d!16527 (= lt!32159 (containsKey!135 (toList!732 lt!31476) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!16527 (= (contains!726 lt!31476 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!32161)))

(declare-fun b!72367 () Bool)

(declare-fun lt!32162 () Unit!2006)

(assert (=> b!72367 (= e!47346 lt!32162)))

(assert (=> b!72367 (= lt!32162 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31476) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!72367 (isDefined!85 (getValueByKey!131 (toList!732 lt!31476) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!72368 () Bool)

(declare-fun Unit!2066 () Unit!2006)

(assert (=> b!72368 (= e!47346 Unit!2066)))

(declare-fun b!72369 () Bool)

(assert (=> b!72369 (= e!47345 (isDefined!85 (getValueByKey!131 (toList!732 lt!31476) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!16527 c!10668) b!72367))

(assert (= (and d!16527 (not c!10668)) b!72368))

(assert (= (and d!16527 (not res!38490)) b!72369))

(assert (=> d!16527 m!68081))

(declare-fun m!70171 () Bool)

(assert (=> d!16527 m!70171))

(assert (=> b!72367 m!68081))

(declare-fun m!70173 () Bool)

(assert (=> b!72367 m!70173))

(assert (=> b!72367 m!68081))

(declare-fun m!70175 () Bool)

(assert (=> b!72367 m!70175))

(assert (=> b!72367 m!70175))

(declare-fun m!70177 () Bool)

(assert (=> b!72367 m!70177))

(assert (=> b!72369 m!68081))

(assert (=> b!72369 m!70175))

(assert (=> b!72369 m!70175))

(assert (=> b!72369 m!70177))

(assert (=> b!71171 d!16527))

(declare-fun b!72370 () Bool)

(declare-fun e!47348 () List!1504)

(declare-fun call!6296 () List!1504)

(assert (=> b!72370 (= e!47348 call!6296)))

(declare-fun b!72371 () Bool)

(declare-fun res!38491 () Bool)

(declare-fun e!47347 () Bool)

(assert (=> b!72371 (=> (not res!38491) (not e!47347))))

(declare-fun lt!32163 () List!1504)

(assert (=> b!72371 (= res!38491 (containsKey!135 lt!32163 (_1!1079 lt!31200)))))

(declare-fun b!72372 () Bool)

(declare-fun c!10670 () Bool)

(assert (=> b!72372 (= c!10670 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31210))) (bvsgt (_1!1079 (h!2086 (t!5044 (toList!732 lt!31210)))) (_1!1079 lt!31200))))))

(declare-fun e!47350 () List!1504)

(declare-fun e!47349 () List!1504)

(assert (=> b!72372 (= e!47350 e!47349)))

(declare-fun b!72374 () Bool)

(declare-fun call!6297 () List!1504)

(assert (=> b!72374 (= e!47350 call!6297)))

(declare-fun b!72375 () Bool)

(declare-fun call!6295 () List!1504)

(assert (=> b!72375 (= e!47349 call!6295)))

(declare-fun b!72376 () Bool)

(declare-fun e!47351 () List!1504)

(assert (=> b!72376 (= e!47351 (insertStrictlySorted!52 (t!5044 (t!5044 (toList!732 lt!31210))) (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(declare-fun bm!6292 () Bool)

(assert (=> bm!6292 (= call!6295 call!6297)))

(declare-fun bm!6293 () Bool)

(assert (=> bm!6293 (= call!6297 call!6296)))

(declare-fun c!10669 () Bool)

(declare-fun bm!6294 () Bool)

(assert (=> bm!6294 (= call!6296 ($colon$colon!64 e!47351 (ite c!10669 (h!2086 (t!5044 (toList!732 lt!31210))) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200)))))))

(declare-fun c!10671 () Bool)

(assert (=> bm!6294 (= c!10671 c!10669)))

(declare-fun b!72377 () Bool)

(declare-fun c!10672 () Bool)

(assert (=> b!72377 (= e!47351 (ite c!10672 (t!5044 (t!5044 (toList!732 lt!31210))) (ite c!10670 (Cons!1500 (h!2086 (t!5044 (toList!732 lt!31210))) (t!5044 (t!5044 (toList!732 lt!31210)))) Nil!1501)))))

(declare-fun b!72373 () Bool)

(assert (=> b!72373 (= e!47349 call!6295)))

(declare-fun d!16529 () Bool)

(assert (=> d!16529 e!47347))

(declare-fun res!38492 () Bool)

(assert (=> d!16529 (=> (not res!38492) (not e!47347))))

(assert (=> d!16529 (= res!38492 (isStrictlySorted!286 lt!32163))))

(assert (=> d!16529 (= lt!32163 e!47348)))

(assert (=> d!16529 (= c!10669 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31210))) (bvslt (_1!1079 (h!2086 (t!5044 (toList!732 lt!31210)))) (_1!1079 lt!31200))))))

(assert (=> d!16529 (isStrictlySorted!286 (t!5044 (toList!732 lt!31210)))))

(assert (=> d!16529 (= (insertStrictlySorted!52 (t!5044 (toList!732 lt!31210)) (_1!1079 lt!31200) (_2!1079 lt!31200)) lt!32163)))

(declare-fun b!72378 () Bool)

(assert (=> b!72378 (= e!47347 (contains!728 lt!32163 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!72379 () Bool)

(assert (=> b!72379 (= e!47348 e!47350)))

(assert (=> b!72379 (= c!10672 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31210))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31210)))) (_1!1079 lt!31200))))))

(assert (= (and d!16529 c!10669) b!72370))

(assert (= (and d!16529 (not c!10669)) b!72379))

(assert (= (and b!72379 c!10672) b!72374))

(assert (= (and b!72379 (not c!10672)) b!72372))

(assert (= (and b!72372 c!10670) b!72373))

(assert (= (and b!72372 (not c!10670)) b!72375))

(assert (= (or b!72373 b!72375) bm!6292))

(assert (= (or b!72374 bm!6292) bm!6293))

(assert (= (or b!72370 bm!6293) bm!6294))

(assert (= (and bm!6294 c!10671) b!72376))

(assert (= (and bm!6294 (not c!10671)) b!72377))

(assert (= (and d!16529 res!38492) b!72371))

(assert (= (and b!72371 res!38491) b!72378))

(declare-fun m!70179 () Bool)

(assert (=> bm!6294 m!70179))

(declare-fun m!70181 () Bool)

(assert (=> b!72376 m!70181))

(declare-fun m!70183 () Bool)

(assert (=> b!72371 m!70183))

(declare-fun m!70185 () Bool)

(assert (=> b!72378 m!70185))

(declare-fun m!70187 () Bool)

(assert (=> d!16529 m!70187))

(assert (=> d!16529 m!68877))

(assert (=> b!71405 d!16529))

(assert (=> b!71319 d!16465))

(assert (=> b!71319 d!15955))

(declare-fun b!72380 () Bool)

(declare-fun e!47361 () Bool)

(declare-fun e!47352 () Bool)

(assert (=> b!72380 (= e!47361 e!47352)))

(declare-fun res!38494 () Bool)

(declare-fun call!6302 () Bool)

(assert (=> b!72380 (= res!38494 call!6302)))

(assert (=> b!72380 (=> (not res!38494) (not e!47352))))

(declare-fun b!72381 () Bool)

(declare-fun e!47363 () ListLongMap!1433)

(declare-fun call!6298 () ListLongMap!1433)

(assert (=> b!72381 (= e!47363 (+!95 call!6298 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun b!72382 () Bool)

(declare-fun e!47360 () ListLongMap!1433)

(declare-fun call!6303 () ListLongMap!1433)

(assert (=> b!72382 (= e!47360 call!6303)))

(declare-fun b!72383 () Bool)

(declare-fun e!47354 () Unit!2006)

(declare-fun Unit!2067 () Unit!2006)

(assert (=> b!72383 (= e!47354 Unit!2067)))

(declare-fun b!72384 () Bool)

(declare-fun call!6300 () ListLongMap!1433)

(assert (=> b!72384 (= e!47360 call!6300)))

(declare-fun b!72385 () Bool)

(declare-fun e!47356 () Bool)

(assert (=> b!72385 (= e!47356 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6295 () Bool)

(declare-fun call!6299 () ListLongMap!1433)

(assert (=> bm!6295 (= call!6303 call!6299)))

(declare-fun b!72386 () Bool)

(assert (=> b!72386 (= e!47361 (not call!6302))))

(declare-fun bm!6297 () Bool)

(assert (=> bm!6297 (= call!6300 call!6298)))

(declare-fun bm!6298 () Bool)

(declare-fun call!6304 () ListLongMap!1433)

(assert (=> bm!6298 (= call!6299 call!6304)))

(declare-fun b!72387 () Bool)

(declare-fun e!47359 () Bool)

(declare-fun e!47358 () Bool)

(assert (=> b!72387 (= e!47359 e!47358)))

(declare-fun c!10676 () Bool)

(assert (=> b!72387 (= c!10676 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6299 () Bool)

(declare-fun lt!32167 () ListLongMap!1433)

(assert (=> bm!6299 (= call!6302 (contains!726 lt!32167 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72388 () Bool)

(declare-fun e!47357 () Bool)

(assert (=> b!72388 (= e!47357 (= (apply!74 lt!32167 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun b!72389 () Bool)

(declare-fun e!47355 () ListLongMap!1433)

(assert (=> b!72389 (= e!47363 e!47355)))

(declare-fun c!10673 () Bool)

(assert (=> b!72389 (= c!10673 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72390 () Bool)

(declare-fun e!47364 () Bool)

(declare-fun e!47353 () Bool)

(assert (=> b!72390 (= e!47364 e!47353)))

(declare-fun res!38495 () Bool)

(assert (=> b!72390 (=> (not res!38495) (not e!47353))))

(assert (=> b!72390 (= res!38495 (contains!726 lt!32167 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72390 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72391 () Bool)

(assert (=> b!72391 (= e!47358 e!47357)))

(declare-fun res!38496 () Bool)

(declare-fun call!6301 () Bool)

(assert (=> b!72391 (= res!38496 call!6301)))

(assert (=> b!72391 (=> (not res!38496) (not e!47357))))

(declare-fun bm!6300 () Bool)

(assert (=> bm!6300 (= call!6301 (contains!726 lt!32167 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72392 () Bool)

(assert (=> b!72392 (= e!47355 call!6300)))

(declare-fun b!72393 () Bool)

(assert (=> b!72393 (= e!47353 (= (apply!74 lt!32167 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72393 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))))))

(assert (=> b!72393 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72394 () Bool)

(declare-fun lt!32177 () Unit!2006)

(assert (=> b!72394 (= e!47354 lt!32177)))

(declare-fun lt!32168 () ListLongMap!1433)

(assert (=> b!72394 (= lt!32168 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32185 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32185 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32180 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32180 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32181 () Unit!2006)

(assert (=> b!72394 (= lt!32181 (addStillContains!50 lt!32168 lt!32185 (zeroValue!2096 newMap!16) lt!32180))))

(assert (=> b!72394 (contains!726 (+!95 lt!32168 (tuple2!2139 lt!32185 (zeroValue!2096 newMap!16))) lt!32180)))

(declare-fun lt!32173 () Unit!2006)

(assert (=> b!72394 (= lt!32173 lt!32181)))

(declare-fun lt!32170 () ListLongMap!1433)

(assert (=> b!72394 (= lt!32170 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32171 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32171 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32172 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32172 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32184 () Unit!2006)

(assert (=> b!72394 (= lt!32184 (addApplyDifferent!50 lt!32170 lt!32171 (minValue!2096 newMap!16) lt!32172))))

(assert (=> b!72394 (= (apply!74 (+!95 lt!32170 (tuple2!2139 lt!32171 (minValue!2096 newMap!16))) lt!32172) (apply!74 lt!32170 lt!32172))))

(declare-fun lt!32176 () Unit!2006)

(assert (=> b!72394 (= lt!32176 lt!32184)))

(declare-fun lt!32179 () ListLongMap!1433)

(assert (=> b!72394 (= lt!32179 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32175 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32175 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32182 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32182 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32174 () Unit!2006)

(assert (=> b!72394 (= lt!32174 (addApplyDifferent!50 lt!32179 lt!32175 (zeroValue!2096 newMap!16) lt!32182))))

(assert (=> b!72394 (= (apply!74 (+!95 lt!32179 (tuple2!2139 lt!32175 (zeroValue!2096 newMap!16))) lt!32182) (apply!74 lt!32179 lt!32182))))

(declare-fun lt!32178 () Unit!2006)

(assert (=> b!72394 (= lt!32178 lt!32174)))

(declare-fun lt!32169 () ListLongMap!1433)

(assert (=> b!72394 (= lt!32169 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32165 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32165 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32166 () (_ BitVec 64))

(assert (=> b!72394 (= lt!32166 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72394 (= lt!32177 (addApplyDifferent!50 lt!32169 lt!32165 (minValue!2096 newMap!16) lt!32166))))

(assert (=> b!72394 (= (apply!74 (+!95 lt!32169 (tuple2!2139 lt!32165 (minValue!2096 newMap!16))) lt!32166) (apply!74 lt!32169 lt!32166))))

(declare-fun b!72395 () Bool)

(assert (=> b!72395 (= e!47358 (not call!6301))))

(declare-fun b!72396 () Bool)

(declare-fun res!38499 () Bool)

(assert (=> b!72396 (=> (not res!38499) (not e!47359))))

(assert (=> b!72396 (= res!38499 e!47364)))

(declare-fun res!38500 () Bool)

(assert (=> b!72396 (=> res!38500 e!47364)))

(assert (=> b!72396 (= res!38500 (not e!47356))))

(declare-fun res!38498 () Bool)

(assert (=> b!72396 (=> (not res!38498) (not e!47356))))

(assert (=> b!72396 (= res!38498 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6301 () Bool)

(assert (=> bm!6301 (= call!6304 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72397 () Bool)

(declare-fun e!47362 () Bool)

(assert (=> b!72397 (= e!47362 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72398 () Bool)

(declare-fun res!38493 () Bool)

(assert (=> b!72398 (=> (not res!38493) (not e!47359))))

(assert (=> b!72398 (= res!38493 e!47361)))

(declare-fun c!10675 () Bool)

(assert (=> b!72398 (= c!10675 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6296 () Bool)

(declare-fun c!10677 () Bool)

(assert (=> bm!6296 (= call!6298 (+!95 (ite c!10677 call!6304 (ite c!10673 call!6299 call!6303)) (ite (or c!10677 c!10673) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun d!16531 () Bool)

(assert (=> d!16531 e!47359))

(declare-fun res!38497 () Bool)

(assert (=> d!16531 (=> (not res!38497) (not e!47359))))

(assert (=> d!16531 (= res!38497 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun lt!32164 () ListLongMap!1433)

(assert (=> d!16531 (= lt!32167 lt!32164)))

(declare-fun lt!32183 () Unit!2006)

(assert (=> d!16531 (= lt!32183 e!47354)))

(declare-fun c!10674 () Bool)

(assert (=> d!16531 (= c!10674 e!47362)))

(declare-fun res!38501 () Bool)

(assert (=> d!16531 (=> (not res!38501) (not e!47362))))

(assert (=> d!16531 (= res!38501 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16531 (= lt!32164 e!47363)))

(assert (=> d!16531 (= c!10677 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16531 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16531 (= (getCurrentListMap!425 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32167)))

(declare-fun b!72399 () Bool)

(assert (=> b!72399 (= e!47352 (= (apply!74 lt!32167 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72400 () Bool)

(declare-fun c!10678 () Bool)

(assert (=> b!72400 (= c!10678 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!72400 (= e!47355 e!47360)))

(assert (= (and d!16531 c!10677) b!72381))

(assert (= (and d!16531 (not c!10677)) b!72389))

(assert (= (and b!72389 c!10673) b!72392))

(assert (= (and b!72389 (not c!10673)) b!72400))

(assert (= (and b!72400 c!10678) b!72384))

(assert (= (and b!72400 (not c!10678)) b!72382))

(assert (= (or b!72384 b!72382) bm!6295))

(assert (= (or b!72392 bm!6295) bm!6298))

(assert (= (or b!72392 b!72384) bm!6297))

(assert (= (or b!72381 bm!6298) bm!6301))

(assert (= (or b!72381 bm!6297) bm!6296))

(assert (= (and d!16531 res!38501) b!72397))

(assert (= (and d!16531 c!10674) b!72394))

(assert (= (and d!16531 (not c!10674)) b!72383))

(assert (= (and d!16531 res!38497) b!72396))

(assert (= (and b!72396 res!38498) b!72385))

(assert (= (and b!72396 (not res!38500)) b!72390))

(assert (= (and b!72390 res!38495) b!72393))

(assert (= (and b!72396 res!38499) b!72398))

(assert (= (and b!72398 c!10675) b!72380))

(assert (= (and b!72398 (not c!10675)) b!72386))

(assert (= (and b!72380 res!38494) b!72399))

(assert (= (or b!72380 b!72386) bm!6299))

(assert (= (and b!72398 res!38493) b!72387))

(assert (= (and b!72387 c!10676) b!72391))

(assert (= (and b!72387 (not c!10676)) b!72395))

(assert (= (and b!72391 res!38496) b!72388))

(assert (= (or b!72391 b!72395) bm!6300))

(declare-fun b_lambda!3247 () Bool)

(assert (=> (not b_lambda!3247) (not b!72393)))

(assert (=> b!72393 t!5051))

(declare-fun b_and!4449 () Bool)

(assert (= b_and!4445 (and (=> t!5051 result!2669) b_and!4449)))

(assert (=> b!72393 t!5053))

(declare-fun b_and!4451 () Bool)

(assert (= b_and!4447 (and (=> t!5053 result!2671) b_and!4451)))

(assert (=> b!72390 m!68067))

(assert (=> b!72390 m!68067))

(declare-fun m!70189 () Bool)

(assert (=> b!72390 m!70189))

(declare-fun m!70191 () Bool)

(assert (=> bm!6299 m!70191))

(declare-fun m!70193 () Bool)

(assert (=> bm!6300 m!70193))

(assert (=> b!72385 m!68067))

(assert (=> b!72385 m!68067))

(assert (=> b!72385 m!68077))

(assert (=> b!72394 m!68067))

(declare-fun m!70195 () Bool)

(assert (=> b!72394 m!70195))

(declare-fun m!70197 () Bool)

(assert (=> b!72394 m!70197))

(declare-fun m!70199 () Bool)

(assert (=> b!72394 m!70199))

(declare-fun m!70201 () Bool)

(assert (=> b!72394 m!70201))

(declare-fun m!70203 () Bool)

(assert (=> b!72394 m!70203))

(declare-fun m!70205 () Bool)

(assert (=> b!72394 m!70205))

(assert (=> b!72394 m!70199))

(declare-fun m!70207 () Bool)

(assert (=> b!72394 m!70207))

(declare-fun m!70209 () Bool)

(assert (=> b!72394 m!70209))

(assert (=> b!72394 m!70205))

(declare-fun m!70211 () Bool)

(assert (=> b!72394 m!70211))

(declare-fun m!70213 () Bool)

(assert (=> b!72394 m!70213))

(declare-fun m!70215 () Bool)

(assert (=> b!72394 m!70215))

(assert (=> b!72394 m!70213))

(declare-fun m!70217 () Bool)

(assert (=> b!72394 m!70217))

(declare-fun m!70219 () Bool)

(assert (=> b!72394 m!70219))

(declare-fun m!70221 () Bool)

(assert (=> b!72394 m!70221))

(declare-fun m!70223 () Bool)

(assert (=> b!72394 m!70223))

(declare-fun m!70225 () Bool)

(assert (=> b!72394 m!70225))

(assert (=> b!72394 m!70217))

(assert (=> bm!6301 m!70225))

(declare-fun m!70227 () Bool)

(assert (=> bm!6296 m!70227))

(declare-fun m!70229 () Bool)

(assert (=> b!72399 m!70229))

(declare-fun m!70231 () Bool)

(assert (=> b!72388 m!70231))

(declare-fun m!70233 () Bool)

(assert (=> b!72393 m!70233))

(assert (=> b!72393 m!70233))

(assert (=> b!72393 m!68529))

(declare-fun m!70235 () Bool)

(assert (=> b!72393 m!70235))

(assert (=> b!72393 m!68529))

(assert (=> b!72393 m!68067))

(assert (=> b!72393 m!68067))

(declare-fun m!70237 () Bool)

(assert (=> b!72393 m!70237))

(assert (=> b!72397 m!68067))

(assert (=> b!72397 m!68067))

(assert (=> b!72397 m!68077))

(assert (=> d!16531 m!68107))

(declare-fun m!70239 () Bool)

(assert (=> b!72381 m!70239))

(assert (=> b!71319 d!16531))

(declare-fun d!16533 () Bool)

(declare-fun e!47365 () Bool)

(assert (=> d!16533 e!47365))

(declare-fun res!38502 () Bool)

(assert (=> d!16533 (=> res!38502 e!47365)))

(declare-fun lt!32188 () Bool)

(assert (=> d!16533 (= res!38502 (not lt!32188))))

(declare-fun lt!32186 () Bool)

(assert (=> d!16533 (= lt!32188 lt!32186)))

(declare-fun lt!32187 () Unit!2006)

(declare-fun e!47366 () Unit!2006)

(assert (=> d!16533 (= lt!32187 e!47366)))

(declare-fun c!10679 () Bool)

(assert (=> d!16533 (= c!10679 lt!32186)))

(assert (=> d!16533 (= lt!32186 (containsKey!135 (toList!732 lt!31476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16533 (= (contains!726 lt!31476 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32188)))

(declare-fun b!72401 () Bool)

(declare-fun lt!32189 () Unit!2006)

(assert (=> b!72401 (= e!47366 lt!32189)))

(assert (=> b!72401 (= lt!32189 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72401 (isDefined!85 (getValueByKey!131 (toList!732 lt!31476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72402 () Bool)

(declare-fun Unit!2068 () Unit!2006)

(assert (=> b!72402 (= e!47366 Unit!2068)))

(declare-fun b!72403 () Bool)

(assert (=> b!72403 (= e!47365 (isDefined!85 (getValueByKey!131 (toList!732 lt!31476) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16533 c!10679) b!72401))

(assert (= (and d!16533 (not c!10679)) b!72402))

(assert (= (and d!16533 (not res!38502)) b!72403))

(declare-fun m!70241 () Bool)

(assert (=> d!16533 m!70241))

(declare-fun m!70243 () Bool)

(assert (=> b!72401 m!70243))

(declare-fun m!70245 () Bool)

(assert (=> b!72401 m!70245))

(assert (=> b!72401 m!70245))

(declare-fun m!70247 () Bool)

(assert (=> b!72401 m!70247))

(assert (=> b!72403 m!70245))

(assert (=> b!72403 m!70245))

(assert (=> b!72403 m!70247))

(assert (=> d!15837 d!16533))

(assert (=> d!15837 d!15823))

(declare-fun b!72404 () Bool)

(declare-fun e!47376 () Bool)

(declare-fun e!47367 () Bool)

(assert (=> b!72404 (= e!47376 e!47367)))

(declare-fun res!38504 () Bool)

(declare-fun call!6309 () Bool)

(assert (=> b!72404 (= res!38504 call!6309)))

(assert (=> b!72404 (=> (not res!38504) (not e!47367))))

(declare-fun b!72405 () Bool)

(declare-fun e!47378 () ListLongMap!1433)

(declare-fun call!6305 () ListLongMap!1433)

(assert (=> b!72405 (= e!47378 (+!95 call!6305 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)))))

(declare-fun b!72406 () Bool)

(declare-fun e!47375 () ListLongMap!1433)

(declare-fun call!6310 () ListLongMap!1433)

(assert (=> b!72406 (= e!47375 call!6310)))

(declare-fun b!72407 () Bool)

(declare-fun e!47369 () Unit!2006)

(declare-fun Unit!2069 () Unit!2006)

(assert (=> b!72407 (= e!47369 Unit!2069)))

(declare-fun b!72408 () Bool)

(declare-fun call!6307 () ListLongMap!1433)

(assert (=> b!72408 (= e!47375 call!6307)))

(declare-fun b!72409 () Bool)

(declare-fun e!47371 () Bool)

(assert (=> b!72409 (= e!47371 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6302 () Bool)

(declare-fun call!6306 () ListLongMap!1433)

(assert (=> bm!6302 (= call!6310 call!6306)))

(declare-fun b!72410 () Bool)

(assert (=> b!72410 (= e!47376 (not call!6309))))

(declare-fun bm!6304 () Bool)

(assert (=> bm!6304 (= call!6307 call!6305)))

(declare-fun bm!6305 () Bool)

(declare-fun call!6311 () ListLongMap!1433)

(assert (=> bm!6305 (= call!6306 call!6311)))

(declare-fun b!72411 () Bool)

(declare-fun e!47374 () Bool)

(declare-fun e!47373 () Bool)

(assert (=> b!72411 (= e!47374 e!47373)))

(declare-fun c!10683 () Bool)

(assert (=> b!72411 (= c!10683 (not (= (bvand lt!31328 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6306 () Bool)

(declare-fun lt!32193 () ListLongMap!1433)

(assert (=> bm!6306 (= call!6309 (contains!726 lt!32193 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72412 () Bool)

(declare-fun e!47372 () Bool)

(assert (=> b!72412 (= e!47372 (= (apply!74 lt!32193 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31204))))

(declare-fun b!72413 () Bool)

(declare-fun e!47370 () ListLongMap!1433)

(assert (=> b!72413 (= e!47378 e!47370)))

(declare-fun c!10680 () Bool)

(assert (=> b!72413 (= c!10680 (and (not (= (bvand lt!31328 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31328 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72414 () Bool)

(declare-fun e!47379 () Bool)

(declare-fun e!47368 () Bool)

(assert (=> b!72414 (= e!47379 e!47368)))

(declare-fun res!38505 () Bool)

(assert (=> b!72414 (=> (not res!38505) (not e!47368))))

(assert (=> b!72414 (= res!38505 (contains!726 lt!32193 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72414 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72415 () Bool)

(assert (=> b!72415 (= e!47373 e!47372)))

(declare-fun res!38506 () Bool)

(declare-fun call!6308 () Bool)

(assert (=> b!72415 (= res!38506 call!6308)))

(assert (=> b!72415 (=> (not res!38506) (not e!47372))))

(declare-fun bm!6307 () Bool)

(assert (=> bm!6307 (= call!6308 (contains!726 lt!32193 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72416 () Bool)

(assert (=> b!72416 (= e!47370 call!6307)))

(declare-fun b!72417 () Bool)

(assert (=> b!72417 (= e!47368 (= (apply!74 lt!32193 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72417 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_values!2175 newMap!16))))))

(assert (=> b!72417 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72418 () Bool)

(declare-fun lt!32203 () Unit!2006)

(assert (=> b!72418 (= e!47369 lt!32203)))

(declare-fun lt!32194 () ListLongMap!1433)

(assert (=> b!72418 (= lt!32194 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32211 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32211 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32206 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32206 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32207 () Unit!2006)

(assert (=> b!72418 (= lt!32207 (addStillContains!50 lt!32194 lt!32211 (zeroValue!2096 newMap!16) lt!32206))))

(assert (=> b!72418 (contains!726 (+!95 lt!32194 (tuple2!2139 lt!32211 (zeroValue!2096 newMap!16))) lt!32206)))

(declare-fun lt!32199 () Unit!2006)

(assert (=> b!72418 (= lt!32199 lt!32207)))

(declare-fun lt!32196 () ListLongMap!1433)

(assert (=> b!72418 (= lt!32196 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32197 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32197 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32198 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32198 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32210 () Unit!2006)

(assert (=> b!72418 (= lt!32210 (addApplyDifferent!50 lt!32196 lt!32197 lt!31204 lt!32198))))

(assert (=> b!72418 (= (apply!74 (+!95 lt!32196 (tuple2!2139 lt!32197 lt!31204)) lt!32198) (apply!74 lt!32196 lt!32198))))

(declare-fun lt!32202 () Unit!2006)

(assert (=> b!72418 (= lt!32202 lt!32210)))

(declare-fun lt!32205 () ListLongMap!1433)

(assert (=> b!72418 (= lt!32205 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32201 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32201 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32208 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32208 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32200 () Unit!2006)

(assert (=> b!72418 (= lt!32200 (addApplyDifferent!50 lt!32205 lt!32201 (zeroValue!2096 newMap!16) lt!32208))))

(assert (=> b!72418 (= (apply!74 (+!95 lt!32205 (tuple2!2139 lt!32201 (zeroValue!2096 newMap!16))) lt!32208) (apply!74 lt!32205 lt!32208))))

(declare-fun lt!32204 () Unit!2006)

(assert (=> b!72418 (= lt!32204 lt!32200)))

(declare-fun lt!32195 () ListLongMap!1433)

(assert (=> b!72418 (= lt!32195 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32191 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32191 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32192 () (_ BitVec 64))

(assert (=> b!72418 (= lt!32192 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72418 (= lt!32203 (addApplyDifferent!50 lt!32195 lt!32191 lt!31204 lt!32192))))

(assert (=> b!72418 (= (apply!74 (+!95 lt!32195 (tuple2!2139 lt!32191 lt!31204)) lt!32192) (apply!74 lt!32195 lt!32192))))

(declare-fun b!72419 () Bool)

(assert (=> b!72419 (= e!47373 (not call!6308))))

(declare-fun b!72420 () Bool)

(declare-fun res!38509 () Bool)

(assert (=> b!72420 (=> (not res!38509) (not e!47374))))

(assert (=> b!72420 (= res!38509 e!47379)))

(declare-fun res!38510 () Bool)

(assert (=> b!72420 (=> res!38510 e!47379)))

(assert (=> b!72420 (= res!38510 (not e!47371))))

(declare-fun res!38508 () Bool)

(assert (=> b!72420 (=> (not res!38508) (not e!47371))))

(assert (=> b!72420 (= res!38508 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6308 () Bool)

(assert (=> bm!6308 (= call!6311 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72421 () Bool)

(declare-fun e!47377 () Bool)

(assert (=> b!72421 (= e!47377 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72422 () Bool)

(declare-fun res!38503 () Bool)

(assert (=> b!72422 (=> (not res!38503) (not e!47374))))

(assert (=> b!72422 (= res!38503 e!47376)))

(declare-fun c!10682 () Bool)

(assert (=> b!72422 (= c!10682 (not (= (bvand lt!31328 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!10684 () Bool)

(declare-fun bm!6303 () Bool)

(assert (=> bm!6303 (= call!6305 (+!95 (ite c!10684 call!6311 (ite c!10680 call!6306 call!6310)) (ite (or c!10684 c!10680) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(declare-fun d!16535 () Bool)

(assert (=> d!16535 e!47374))

(declare-fun res!38507 () Bool)

(assert (=> d!16535 (=> (not res!38507) (not e!47374))))

(assert (=> d!16535 (= res!38507 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun lt!32190 () ListLongMap!1433)

(assert (=> d!16535 (= lt!32193 lt!32190)))

(declare-fun lt!32209 () Unit!2006)

(assert (=> d!16535 (= lt!32209 e!47369)))

(declare-fun c!10681 () Bool)

(assert (=> d!16535 (= c!10681 e!47377)))

(declare-fun res!38511 () Bool)

(assert (=> d!16535 (=> (not res!38511) (not e!47377))))

(assert (=> d!16535 (= res!38511 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16535 (= lt!32190 e!47378)))

(assert (=> d!16535 (= c!10684 (and (not (= (bvand lt!31328 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31328 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16535 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16535 (= (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32193)))

(declare-fun b!72423 () Bool)

(assert (=> b!72423 (= e!47367 (= (apply!74 lt!32193 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72424 () Bool)

(declare-fun c!10685 () Bool)

(assert (=> b!72424 (= c!10685 (and (not (= (bvand lt!31328 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31328 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!72424 (= e!47370 e!47375)))

(assert (= (and d!16535 c!10684) b!72405))

(assert (= (and d!16535 (not c!10684)) b!72413))

(assert (= (and b!72413 c!10680) b!72416))

(assert (= (and b!72413 (not c!10680)) b!72424))

(assert (= (and b!72424 c!10685) b!72408))

(assert (= (and b!72424 (not c!10685)) b!72406))

(assert (= (or b!72408 b!72406) bm!6302))

(assert (= (or b!72416 bm!6302) bm!6305))

(assert (= (or b!72416 b!72408) bm!6304))

(assert (= (or b!72405 bm!6305) bm!6308))

(assert (= (or b!72405 bm!6304) bm!6303))

(assert (= (and d!16535 res!38511) b!72421))

(assert (= (and d!16535 c!10681) b!72418))

(assert (= (and d!16535 (not c!10681)) b!72407))

(assert (= (and d!16535 res!38507) b!72420))

(assert (= (and b!72420 res!38508) b!72409))

(assert (= (and b!72420 (not res!38510)) b!72414))

(assert (= (and b!72414 res!38505) b!72417))

(assert (= (and b!72420 res!38509) b!72422))

(assert (= (and b!72422 c!10682) b!72404))

(assert (= (and b!72422 (not c!10682)) b!72410))

(assert (= (and b!72404 res!38504) b!72423))

(assert (= (or b!72404 b!72410) bm!6306))

(assert (= (and b!72422 res!38503) b!72411))

(assert (= (and b!72411 c!10683) b!72415))

(assert (= (and b!72411 (not c!10683)) b!72419))

(assert (= (and b!72415 res!38506) b!72412))

(assert (= (or b!72415 b!72419) bm!6307))

(declare-fun b_lambda!3249 () Bool)

(assert (=> (not b_lambda!3249) (not b!72417)))

(assert (=> b!72417 t!5051))

(declare-fun b_and!4453 () Bool)

(assert (= b_and!4449 (and (=> t!5051 result!2669) b_and!4453)))

(assert (=> b!72417 t!5053))

(declare-fun b_and!4455 () Bool)

(assert (= b_and!4451 (and (=> t!5053 result!2671) b_and!4455)))

(assert (=> b!72414 m!68067))

(assert (=> b!72414 m!68067))

(declare-fun m!70249 () Bool)

(assert (=> b!72414 m!70249))

(declare-fun m!70251 () Bool)

(assert (=> bm!6306 m!70251))

(declare-fun m!70253 () Bool)

(assert (=> bm!6307 m!70253))

(assert (=> b!72409 m!68067))

(assert (=> b!72409 m!68067))

(assert (=> b!72409 m!68077))

(assert (=> b!72418 m!68067))

(declare-fun m!70255 () Bool)

(assert (=> b!72418 m!70255))

(declare-fun m!70257 () Bool)

(assert (=> b!72418 m!70257))

(declare-fun m!70259 () Bool)

(assert (=> b!72418 m!70259))

(declare-fun m!70261 () Bool)

(assert (=> b!72418 m!70261))

(declare-fun m!70263 () Bool)

(assert (=> b!72418 m!70263))

(declare-fun m!70265 () Bool)

(assert (=> b!72418 m!70265))

(assert (=> b!72418 m!70259))

(declare-fun m!70267 () Bool)

(assert (=> b!72418 m!70267))

(declare-fun m!70269 () Bool)

(assert (=> b!72418 m!70269))

(assert (=> b!72418 m!70265))

(declare-fun m!70271 () Bool)

(assert (=> b!72418 m!70271))

(declare-fun m!70273 () Bool)

(assert (=> b!72418 m!70273))

(declare-fun m!70275 () Bool)

(assert (=> b!72418 m!70275))

(assert (=> b!72418 m!70273))

(declare-fun m!70277 () Bool)

(assert (=> b!72418 m!70277))

(declare-fun m!70279 () Bool)

(assert (=> b!72418 m!70279))

(declare-fun m!70281 () Bool)

(assert (=> b!72418 m!70281))

(declare-fun m!70283 () Bool)

(assert (=> b!72418 m!70283))

(declare-fun m!70285 () Bool)

(assert (=> b!72418 m!70285))

(assert (=> b!72418 m!70277))

(assert (=> bm!6308 m!70285))

(declare-fun m!70287 () Bool)

(assert (=> bm!6303 m!70287))

(declare-fun m!70289 () Bool)

(assert (=> b!72423 m!70289))

(declare-fun m!70291 () Bool)

(assert (=> b!72412 m!70291))

(assert (=> b!72417 m!68527))

(assert (=> b!72417 m!68527))

(assert (=> b!72417 m!68529))

(assert (=> b!72417 m!68531))

(assert (=> b!72417 m!68529))

(assert (=> b!72417 m!68067))

(assert (=> b!72417 m!68067))

(declare-fun m!70293 () Bool)

(assert (=> b!72417 m!70293))

(assert (=> b!72421 m!68067))

(assert (=> b!72421 m!68067))

(assert (=> b!72421 m!68077))

(assert (=> d!16535 m!68107))

(declare-fun m!70295 () Bool)

(assert (=> b!72405 m!70295))

(assert (=> d!15917 d!16535))

(assert (=> d!15917 d!15955))

(declare-fun d!16537 () Bool)

(declare-fun e!47380 () Bool)

(assert (=> d!16537 e!47380))

(declare-fun res!38513 () Bool)

(assert (=> d!16537 (=> (not res!38513) (not e!47380))))

(declare-fun lt!32215 () ListLongMap!1433)

(assert (=> d!16537 (= res!38513 (contains!726 lt!32215 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(declare-fun lt!32214 () List!1504)

(assert (=> d!16537 (= lt!32215 (ListLongMap!1434 lt!32214))))

(declare-fun lt!32213 () Unit!2006)

(declare-fun lt!32212 () Unit!2006)

(assert (=> d!16537 (= lt!32213 lt!32212)))

(assert (=> d!16537 (= (getValueByKey!131 lt!32214 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(assert (=> d!16537 (= lt!32212 (lemmaContainsTupThenGetReturnValue!50 lt!32214 (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(assert (=> d!16537 (= lt!32214 (insertStrictlySorted!52 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204))))))

(assert (=> d!16537 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) lt!32215)))

(declare-fun b!72425 () Bool)

(declare-fun res!38512 () Bool)

(assert (=> b!72425 (=> (not res!38512) (not e!47380))))

(assert (=> b!72425 (= res!38512 (= (getValueByKey!131 (toList!732 lt!32215) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204))) (Some!136 (_2!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)))))))

(declare-fun b!72426 () Bool)

(assert (=> b!72426 (= e!47380 (contains!728 (toList!732 lt!32215) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)))))

(assert (= (and d!16537 res!38513) b!72425))

(assert (= (and b!72425 res!38512) b!72426))

(declare-fun m!70297 () Bool)

(assert (=> d!16537 m!70297))

(declare-fun m!70299 () Bool)

(assert (=> d!16537 m!70299))

(declare-fun m!70301 () Bool)

(assert (=> d!16537 m!70301))

(declare-fun m!70303 () Bool)

(assert (=> d!16537 m!70303))

(declare-fun m!70305 () Bool)

(assert (=> b!72425 m!70305))

(declare-fun m!70307 () Bool)

(assert (=> b!72426 m!70307))

(assert (=> d!15917 d!16537))

(assert (=> d!15917 d!16073))

(declare-fun d!16539 () Bool)

(assert (=> d!16539 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31204)) (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31328 (zeroValue!2096 newMap!16) lt!31204 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16539 true))

(declare-fun _$8!61 () Unit!2006)

(assert (=> d!16539 (= (choose!412 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31328 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31204 (defaultEntry!2192 newMap!16)) _$8!61)))

(declare-fun bs!3105 () Bool)

(assert (= bs!3105 d!16539))

(assert (=> bs!3105 m!67909))

(assert (=> bs!3105 m!67909))

(assert (=> bs!3105 m!68375))

(assert (=> bs!3105 m!68377))

(assert (=> d!15917 d!16539))

(declare-fun b!72427 () Bool)

(declare-fun e!47381 () (_ BitVec 32))

(declare-fun call!6312 () (_ BitVec 32))

(assert (=> b!72427 (= e!47381 call!6312)))

(declare-fun b!72428 () Bool)

(declare-fun e!47382 () (_ BitVec 32))

(assert (=> b!72428 (= e!47382 #b00000000000000000000000000000000)))

(declare-fun bm!6309 () Bool)

(assert (=> bm!6309 (= call!6312 (arrayCountValidKeys!0 (_keys!3840 (_2!1080 lt!31329)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(declare-fun b!72429 () Bool)

(assert (=> b!72429 (= e!47382 e!47381)))

(declare-fun c!10687 () Bool)

(assert (=> b!72429 (= c!10687 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(declare-fun b!72430 () Bool)

(assert (=> b!72430 (= e!47381 (bvadd #b00000000000000000000000000000001 call!6312))))

(declare-fun d!16541 () Bool)

(declare-fun lt!32216 () (_ BitVec 32))

(assert (=> d!16541 (and (bvsge lt!32216 #b00000000000000000000000000000000) (bvsle lt!32216 (bvsub (size!2089 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(assert (=> d!16541 (= lt!32216 e!47382)))

(declare-fun c!10686 () Bool)

(assert (=> d!16541 (= c!10686 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(assert (=> d!16541 (and (bvsle #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2089 (_keys!3840 (_2!1080 lt!31329))) (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(assert (=> d!16541 (= (arrayCountValidKeys!0 (_keys!3840 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))) lt!32216)))

(assert (= (and d!16541 c!10686) b!72428))

(assert (= (and d!16541 (not c!10686)) b!72429))

(assert (= (and b!72429 c!10687) b!72430))

(assert (= (and b!72429 (not c!10687)) b!72427))

(assert (= (or b!72430 b!72427) bm!6309))

(declare-fun m!70309 () Bool)

(assert (=> bm!6309 m!70309))

(declare-fun m!70311 () Bool)

(assert (=> b!72429 m!70311))

(assert (=> b!72429 m!70311))

(declare-fun m!70313 () Bool)

(assert (=> b!72429 m!70313))

(assert (=> b!71537 d!16541))

(declare-fun d!16543 () Bool)

(assert (=> d!16543 (isDefined!85 (getValueByKey!131 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(declare-fun lt!32217 () Unit!2006)

(assert (=> d!16543 (= lt!32217 (choose!405 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(declare-fun e!47383 () Bool)

(assert (=> d!16543 e!47383))

(declare-fun res!38514 () Bool)

(assert (=> d!16543 (=> (not res!38514) (not e!47383))))

(assert (=> d!16543 (= res!38514 (isStrictlySorted!286 (toList!732 call!6125)))))

(assert (=> d!16543 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))) lt!32217)))

(declare-fun b!72431 () Bool)

(assert (=> b!72431 (= e!47383 (containsKey!135 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(assert (= (and d!16543 res!38514) b!72431))

(assert (=> d!16543 m!67903))

(assert (=> d!16543 m!68249))

(assert (=> d!16543 m!68249))

(assert (=> d!16543 m!68251))

(assert (=> d!16543 m!67903))

(declare-fun m!70315 () Bool)

(assert (=> d!16543 m!70315))

(declare-fun m!70317 () Bool)

(assert (=> d!16543 m!70317))

(assert (=> b!72431 m!67903))

(assert (=> b!72431 m!68245))

(assert (=> b!71311 d!16543))

(declare-fun d!16545 () Bool)

(assert (=> d!16545 (= (isDefined!85 (getValueByKey!131 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))) (not (isEmpty!319 (getValueByKey!131 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))))

(declare-fun bs!3106 () Bool)

(assert (= bs!3106 d!16545))

(assert (=> bs!3106 m!68249))

(declare-fun m!70319 () Bool)

(assert (=> bs!3106 m!70319))

(assert (=> b!71311 d!16545))

(declare-fun c!10688 () Bool)

(declare-fun d!16547 () Bool)

(assert (=> d!16547 (= c!10688 (and ((_ is Cons!1500) (toList!732 call!6125)) (= (_1!1079 (h!2086 (toList!732 call!6125))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))))))

(declare-fun e!47384 () Option!137)

(assert (=> d!16547 (= (getValueByKey!131 (toList!732 call!6125) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))) e!47384)))

(declare-fun b!72432 () Bool)

(assert (=> b!72432 (= e!47384 (Some!136 (_2!1079 (h!2086 (toList!732 call!6125)))))))

(declare-fun b!72434 () Bool)

(declare-fun e!47385 () Option!137)

(assert (=> b!72434 (= e!47385 (getValueByKey!131 (t!5044 (toList!732 call!6125)) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(declare-fun b!72433 () Bool)

(assert (=> b!72433 (= e!47384 e!47385)))

(declare-fun c!10689 () Bool)

(assert (=> b!72433 (= c!10689 (and ((_ is Cons!1500) (toList!732 call!6125)) (not (= (_1!1079 (h!2086 (toList!732 call!6125))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))))

(declare-fun b!72435 () Bool)

(assert (=> b!72435 (= e!47385 None!135)))

(assert (= (and d!16547 c!10688) b!72432))

(assert (= (and d!16547 (not c!10688)) b!72433))

(assert (= (and b!72433 c!10689) b!72434))

(assert (= (and b!72433 (not c!10689)) b!72435))

(assert (=> b!72434 m!67903))

(declare-fun m!70321 () Bool)

(assert (=> b!72434 m!70321))

(assert (=> b!71311 d!16547))

(declare-fun d!16549 () Bool)

(assert (=> d!16549 (= (get!1150 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2521 (getValueByKey!131 (toList!732 lt!31396) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16011 d!16549))

(assert (=> d!16011 d!16153))

(declare-fun b!72436 () Bool)

(declare-fun e!47387 () List!1504)

(declare-fun call!6314 () List!1504)

(assert (=> b!72436 (= e!47387 call!6314)))

(declare-fun b!72437 () Bool)

(declare-fun res!38515 () Bool)

(declare-fun e!47386 () Bool)

(assert (=> b!72437 (=> (not res!38515) (not e!47386))))

(declare-fun lt!32218 () List!1504)

(assert (=> b!72437 (= res!38515 (containsKey!135 lt!32218 (_1!1079 lt!31205)))))

(declare-fun b!72438 () Bool)

(declare-fun c!10691 () Bool)

(assert (=> b!72438 (= c!10691 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31210))) (bvsgt (_1!1079 (h!2086 (t!5044 (toList!732 lt!31210)))) (_1!1079 lt!31205))))))

(declare-fun e!47389 () List!1504)

(declare-fun e!47388 () List!1504)

(assert (=> b!72438 (= e!47389 e!47388)))

(declare-fun b!72440 () Bool)

(declare-fun call!6315 () List!1504)

(assert (=> b!72440 (= e!47389 call!6315)))

(declare-fun b!72441 () Bool)

(declare-fun call!6313 () List!1504)

(assert (=> b!72441 (= e!47388 call!6313)))

(declare-fun b!72442 () Bool)

(declare-fun e!47390 () List!1504)

(assert (=> b!72442 (= e!47390 (insertStrictlySorted!52 (t!5044 (t!5044 (toList!732 lt!31210))) (_1!1079 lt!31205) (_2!1079 lt!31205)))))

(declare-fun bm!6310 () Bool)

(assert (=> bm!6310 (= call!6313 call!6315)))

(declare-fun bm!6311 () Bool)

(assert (=> bm!6311 (= call!6315 call!6314)))

(declare-fun c!10690 () Bool)

(declare-fun bm!6312 () Bool)

(assert (=> bm!6312 (= call!6314 ($colon$colon!64 e!47390 (ite c!10690 (h!2086 (t!5044 (toList!732 lt!31210))) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205)))))))

(declare-fun c!10692 () Bool)

(assert (=> bm!6312 (= c!10692 c!10690)))

(declare-fun c!10693 () Bool)

(declare-fun b!72443 () Bool)

(assert (=> b!72443 (= e!47390 (ite c!10693 (t!5044 (t!5044 (toList!732 lt!31210))) (ite c!10691 (Cons!1500 (h!2086 (t!5044 (toList!732 lt!31210))) (t!5044 (t!5044 (toList!732 lt!31210)))) Nil!1501)))))

(declare-fun b!72439 () Bool)

(assert (=> b!72439 (= e!47388 call!6313)))

(declare-fun d!16551 () Bool)

(assert (=> d!16551 e!47386))

(declare-fun res!38516 () Bool)

(assert (=> d!16551 (=> (not res!38516) (not e!47386))))

(assert (=> d!16551 (= res!38516 (isStrictlySorted!286 lt!32218))))

(assert (=> d!16551 (= lt!32218 e!47387)))

(assert (=> d!16551 (= c!10690 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31210))) (bvslt (_1!1079 (h!2086 (t!5044 (toList!732 lt!31210)))) (_1!1079 lt!31205))))))

(assert (=> d!16551 (isStrictlySorted!286 (t!5044 (toList!732 lt!31210)))))

(assert (=> d!16551 (= (insertStrictlySorted!52 (t!5044 (toList!732 lt!31210)) (_1!1079 lt!31205) (_2!1079 lt!31205)) lt!32218)))

(declare-fun b!72444 () Bool)

(assert (=> b!72444 (= e!47386 (contains!728 lt!32218 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!72445 () Bool)

(assert (=> b!72445 (= e!47387 e!47389)))

(assert (=> b!72445 (= c!10693 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31210))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31210)))) (_1!1079 lt!31205))))))

(assert (= (and d!16551 c!10690) b!72436))

(assert (= (and d!16551 (not c!10690)) b!72445))

(assert (= (and b!72445 c!10693) b!72440))

(assert (= (and b!72445 (not c!10693)) b!72438))

(assert (= (and b!72438 c!10691) b!72439))

(assert (= (and b!72438 (not c!10691)) b!72441))

(assert (= (or b!72439 b!72441) bm!6310))

(assert (= (or b!72440 bm!6310) bm!6311))

(assert (= (or b!72436 bm!6311) bm!6312))

(assert (= (and bm!6312 c!10692) b!72442))

(assert (= (and bm!6312 (not c!10692)) b!72443))

(assert (= (and d!16551 res!38516) b!72437))

(assert (= (and b!72437 res!38515) b!72444))

(declare-fun m!70323 () Bool)

(assert (=> bm!6312 m!70323))

(declare-fun m!70325 () Bool)

(assert (=> b!72442 m!70325))

(declare-fun m!70327 () Bool)

(assert (=> b!72437 m!70327))

(declare-fun m!70329 () Bool)

(assert (=> b!72444 m!70329))

(declare-fun m!70331 () Bool)

(assert (=> d!16551 m!70331))

(assert (=> d!16551 m!68877))

(assert (=> b!71439 d!16551))

(declare-fun d!16553 () Bool)

(assert (=> d!16553 (= (+!95 (getCurrentListMap!425 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (getCurrentListMap!425 (_keys!3840 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16553 true))

(declare-fun _$5!77 () Unit!2006)

(assert (=> d!16553 (= (choose!409 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3111 lt!31339) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204 (defaultEntry!2192 newMap!16)) _$5!77)))

(declare-fun bs!3107 () Bool)

(assert (= bs!3107 d!16553))

(assert (=> bs!3107 m!67909))

(assert (=> bs!3107 m!67909))

(assert (=> bs!3107 m!68213))

(assert (=> bs!3107 m!67887))

(assert (=> bs!3107 m!68261))

(assert (=> d!15881 d!16553))

(assert (=> d!15881 d!16073))

(declare-fun d!16555 () Bool)

(declare-fun res!38517 () Bool)

(declare-fun e!47391 () Bool)

(assert (=> d!16555 (=> res!38517 e!47391)))

(assert (=> d!16555 (= res!38517 (and ((_ is Cons!1500) (toList!732 lt!31442)) (= (_1!1079 (h!2086 (toList!732 lt!31442))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16555 (= (containsKey!135 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47391)))

(declare-fun b!72446 () Bool)

(declare-fun e!47392 () Bool)

(assert (=> b!72446 (= e!47391 e!47392)))

(declare-fun res!38518 () Bool)

(assert (=> b!72446 (=> (not res!38518) (not e!47392))))

(assert (=> b!72446 (= res!38518 (and (or (not ((_ is Cons!1500) (toList!732 lt!31442))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31442))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1500) (toList!732 lt!31442)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31442))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!72447 () Bool)

(assert (=> b!72447 (= e!47392 (containsKey!135 (t!5044 (toList!732 lt!31442)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16555 (not res!38517)) b!72446))

(assert (= (and b!72446 res!38518) b!72447))

(assert (=> b!72447 m!67827))

(declare-fun m!70333 () Bool)

(assert (=> b!72447 m!70333))

(assert (=> d!15845 d!16555))

(declare-fun d!16557 () Bool)

(assert (=> d!16557 (= (validKeyInArray!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71565 d!16557))

(declare-fun d!16559 () Bool)

(declare-fun e!47393 () Bool)

(assert (=> d!16559 e!47393))

(declare-fun res!38520 () Bool)

(assert (=> d!16559 (=> (not res!38520) (not e!47393))))

(declare-fun lt!32222 () ListLongMap!1433)

(assert (=> d!16559 (= res!38520 (contains!726 lt!32222 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32221 () List!1504)

(assert (=> d!16559 (= lt!32222 (ListLongMap!1434 lt!32221))))

(declare-fun lt!32220 () Unit!2006)

(declare-fun lt!32219 () Unit!2006)

(assert (=> d!16559 (= lt!32220 lt!32219)))

(assert (=> d!16559 (= (getValueByKey!131 lt!32221 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16559 (= lt!32219 (lemmaContainsTupThenGetReturnValue!50 lt!32221 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16559 (= lt!32221 (insertStrictlySorted!52 (toList!732 call!6156) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16559 (= (+!95 call!6156 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32222)))

(declare-fun b!72448 () Bool)

(declare-fun res!38519 () Bool)

(assert (=> b!72448 (=> (not res!38519) (not e!47393))))

(assert (=> b!72448 (= res!38519 (= (getValueByKey!131 (toList!732 lt!32222) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!72449 () Bool)

(assert (=> b!72449 (= e!47393 (contains!728 (toList!732 lt!32222) (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16559 res!38520) b!72448))

(assert (= (and b!72448 res!38519) b!72449))

(declare-fun m!70335 () Bool)

(assert (=> d!16559 m!70335))

(declare-fun m!70337 () Bool)

(assert (=> d!16559 m!70337))

(declare-fun m!70339 () Bool)

(assert (=> d!16559 m!70339))

(declare-fun m!70341 () Bool)

(assert (=> d!16559 m!70341))

(declare-fun m!70343 () Bool)

(assert (=> b!72448 m!70343))

(declare-fun m!70345 () Bool)

(assert (=> b!72449 m!70345))

(assert (=> b!71179 d!16559))

(declare-fun d!16561 () Bool)

(declare-fun c!10694 () Bool)

(assert (=> d!16561 (= c!10694 ((_ is ValueCellFull!891) (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!47394 () V!2939)

(assert (=> d!16561 (= (get!1146 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47394)))

(declare-fun b!72450 () Bool)

(assert (=> b!72450 (= e!47394 (get!1148 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72451 () Bool)

(assert (=> b!72451 (= e!47394 (get!1149 (select (arr!1853 (_values!2175 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!331 (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16561 c!10694) b!72450))

(assert (= (and d!16561 (not c!10694)) b!72451))

(assert (=> b!72450 m!68087))

(assert (=> b!72450 m!67717))

(declare-fun m!70347 () Bool)

(assert (=> b!72450 m!70347))

(assert (=> b!72451 m!68087))

(assert (=> b!72451 m!67717))

(declare-fun m!70349 () Bool)

(assert (=> b!72451 m!70349))

(assert (=> b!71179 d!16561))

(declare-fun d!16563 () Bool)

(assert (=> d!16563 (not (contains!726 (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475)) lt!31477))))

(declare-fun lt!32223 () Unit!2006)

(assert (=> d!16563 (= lt!32223 (choose!414 lt!31480 lt!31478 lt!31475 lt!31477))))

(declare-fun e!47395 () Bool)

(assert (=> d!16563 e!47395))

(declare-fun res!38521 () Bool)

(assert (=> d!16563 (=> (not res!38521) (not e!47395))))

(assert (=> d!16563 (= res!38521 (not (contains!726 lt!31480 lt!31477)))))

(assert (=> d!16563 (= (addStillNotContains!25 lt!31480 lt!31478 lt!31475 lt!31477) lt!32223)))

(declare-fun b!72452 () Bool)

(assert (=> b!72452 (= e!47395 (not (= lt!31478 lt!31477)))))

(assert (= (and d!16563 res!38521) b!72452))

(assert (=> d!16563 m!68099))

(assert (=> d!16563 m!68099))

(assert (=> d!16563 m!68105))

(declare-fun m!70351 () Bool)

(assert (=> d!16563 m!70351))

(declare-fun m!70353 () Bool)

(assert (=> d!16563 m!70353))

(assert (=> b!71179 d!16563))

(declare-fun d!16565 () Bool)

(declare-fun e!47396 () Bool)

(assert (=> d!16565 e!47396))

(declare-fun res!38523 () Bool)

(assert (=> d!16565 (=> (not res!38523) (not e!47396))))

(declare-fun lt!32227 () ListLongMap!1433)

(assert (=> d!16565 (= res!38523 (contains!726 lt!32227 (_1!1079 (tuple2!2139 lt!31478 lt!31475))))))

(declare-fun lt!32226 () List!1504)

(assert (=> d!16565 (= lt!32227 (ListLongMap!1434 lt!32226))))

(declare-fun lt!32225 () Unit!2006)

(declare-fun lt!32224 () Unit!2006)

(assert (=> d!16565 (= lt!32225 lt!32224)))

(assert (=> d!16565 (= (getValueByKey!131 lt!32226 (_1!1079 (tuple2!2139 lt!31478 lt!31475))) (Some!136 (_2!1079 (tuple2!2139 lt!31478 lt!31475))))))

(assert (=> d!16565 (= lt!32224 (lemmaContainsTupThenGetReturnValue!50 lt!32226 (_1!1079 (tuple2!2139 lt!31478 lt!31475)) (_2!1079 (tuple2!2139 lt!31478 lt!31475))))))

(assert (=> d!16565 (= lt!32226 (insertStrictlySorted!52 (toList!732 lt!31480) (_1!1079 (tuple2!2139 lt!31478 lt!31475)) (_2!1079 (tuple2!2139 lt!31478 lt!31475))))))

(assert (=> d!16565 (= (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475)) lt!32227)))

(declare-fun b!72453 () Bool)

(declare-fun res!38522 () Bool)

(assert (=> b!72453 (=> (not res!38522) (not e!47396))))

(assert (=> b!72453 (= res!38522 (= (getValueByKey!131 (toList!732 lt!32227) (_1!1079 (tuple2!2139 lt!31478 lt!31475))) (Some!136 (_2!1079 (tuple2!2139 lt!31478 lt!31475)))))))

(declare-fun b!72454 () Bool)

(assert (=> b!72454 (= e!47396 (contains!728 (toList!732 lt!32227) (tuple2!2139 lt!31478 lt!31475)))))

(assert (= (and d!16565 res!38523) b!72453))

(assert (= (and b!72453 res!38522) b!72454))

(declare-fun m!70355 () Bool)

(assert (=> d!16565 m!70355))

(declare-fun m!70357 () Bool)

(assert (=> d!16565 m!70357))

(declare-fun m!70359 () Bool)

(assert (=> d!16565 m!70359))

(declare-fun m!70361 () Bool)

(assert (=> d!16565 m!70361))

(declare-fun m!70363 () Bool)

(assert (=> b!72453 m!70363))

(declare-fun m!70365 () Bool)

(assert (=> b!72454 m!70365))

(assert (=> b!71179 d!16565))

(declare-fun d!16567 () Bool)

(declare-fun e!47397 () Bool)

(assert (=> d!16567 e!47397))

(declare-fun res!38524 () Bool)

(assert (=> d!16567 (=> res!38524 e!47397)))

(declare-fun lt!32230 () Bool)

(assert (=> d!16567 (= res!38524 (not lt!32230))))

(declare-fun lt!32228 () Bool)

(assert (=> d!16567 (= lt!32230 lt!32228)))

(declare-fun lt!32229 () Unit!2006)

(declare-fun e!47398 () Unit!2006)

(assert (=> d!16567 (= lt!32229 e!47398)))

(declare-fun c!10695 () Bool)

(assert (=> d!16567 (= c!10695 lt!32228)))

(assert (=> d!16567 (= lt!32228 (containsKey!135 (toList!732 (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475))) lt!31477))))

(assert (=> d!16567 (= (contains!726 (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475)) lt!31477) lt!32230)))

(declare-fun b!72455 () Bool)

(declare-fun lt!32231 () Unit!2006)

(assert (=> b!72455 (= e!47398 lt!32231)))

(assert (=> b!72455 (= lt!32231 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475))) lt!31477))))

(assert (=> b!72455 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475))) lt!31477))))

(declare-fun b!72456 () Bool)

(declare-fun Unit!2070 () Unit!2006)

(assert (=> b!72456 (= e!47398 Unit!2070)))

(declare-fun b!72457 () Bool)

(assert (=> b!72457 (= e!47397 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31480 (tuple2!2139 lt!31478 lt!31475))) lt!31477)))))

(assert (= (and d!16567 c!10695) b!72455))

(assert (= (and d!16567 (not c!10695)) b!72456))

(assert (= (and d!16567 (not res!38524)) b!72457))

(declare-fun m!70367 () Bool)

(assert (=> d!16567 m!70367))

(declare-fun m!70369 () Bool)

(assert (=> b!72455 m!70369))

(declare-fun m!70371 () Bool)

(assert (=> b!72455 m!70371))

(assert (=> b!72455 m!70371))

(declare-fun m!70373 () Bool)

(assert (=> b!72455 m!70373))

(assert (=> b!72457 m!70371))

(assert (=> b!72457 m!70371))

(assert (=> b!72457 m!70373))

(assert (=> b!71179 d!16567))

(declare-fun d!16569 () Bool)

(assert (=> d!16569 (= (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31395)) (v!2521 (getValueByKey!131 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31395)))))

(assert (=> d!15887 d!16569))

(declare-fun d!16571 () Bool)

(declare-fun c!10696 () Bool)

(assert (=> d!16571 (= c!10696 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31395)))))

(declare-fun e!47399 () Option!137)

(assert (=> d!16571 (= (getValueByKey!131 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!31395) e!47399)))

(declare-fun b!72458 () Bool)

(assert (=> b!72458 (= e!47399 (Some!136 (_2!1079 (h!2086 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))))

(declare-fun e!47400 () Option!137)

(declare-fun b!72460 () Bool)

(assert (=> b!72460 (= e!47400 (getValueByKey!131 (t!5044 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) lt!31395))))

(declare-fun b!72459 () Bool)

(assert (=> b!72459 (= e!47399 e!47400)))

(declare-fun c!10697 () Bool)

(assert (=> b!72459 (= c!10697 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))) (not (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31398 (tuple2!2139 lt!31394 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))) lt!31395))))))

(declare-fun b!72461 () Bool)

(assert (=> b!72461 (= e!47400 None!135)))

(assert (= (and d!16571 c!10696) b!72458))

(assert (= (and d!16571 (not c!10696)) b!72459))

(assert (= (and b!72459 c!10697) b!72460))

(assert (= (and b!72459 (not c!10697)) b!72461))

(declare-fun m!70375 () Bool)

(assert (=> b!72460 m!70375))

(assert (=> d!15887 d!16571))

(declare-fun d!16573 () Bool)

(assert (=> d!16573 (= (apply!74 lt!31683 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1150 (getValueByKey!131 (toList!732 lt!31683) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3108 () Bool)

(assert (= bs!3108 d!16573))

(assert (=> bs!3108 m!68067))

(assert (=> bs!3108 m!69195))

(assert (=> bs!3108 m!69195))

(declare-fun m!70377 () Bool)

(assert (=> bs!3108 m!70377))

(assert (=> b!71456 d!16573))

(declare-fun d!16575 () Bool)

(declare-fun c!10698 () Bool)

(assert (=> d!16575 (= c!10698 ((_ is ValueCellFull!891) (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!47401 () V!2939)

(assert (=> d!16575 (= (get!1146 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47401)))

(declare-fun b!72462 () Bool)

(assert (=> b!72462 (= e!47401 (get!1148 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72463 () Bool)

(assert (=> b!72463 (= e!47401 (get!1149 (select (arr!1853 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16575 c!10698) b!72462))

(assert (= (and d!16575 (not c!10698)) b!72463))

(assert (=> b!72462 m!68527))

(assert (=> b!72462 m!68529))

(declare-fun m!70379 () Bool)

(assert (=> b!72462 m!70379))

(assert (=> b!72463 m!68527))

(assert (=> b!72463 m!68529))

(declare-fun m!70381 () Bool)

(assert (=> b!72463 m!70381))

(assert (=> b!71456 d!16575))

(declare-fun d!16577 () Bool)

(assert (=> d!16577 (= ($colon$colon!64 e!46661 (ite c!10363 (h!2086 (toList!732 (+!95 lt!31210 lt!31200))) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205)))) (Cons!1500 (ite c!10363 (h!2086 (toList!732 (+!95 lt!31210 lt!31200))) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))) e!46661))))

(assert (=> bm!6162 d!16577))

(declare-fun d!16579 () Bool)

(declare-fun c!10699 () Bool)

(assert (=> d!16579 (= c!10699 (and ((_ is Cons!1500) (toList!732 lt!31733)) (= (_1!1079 (h!2086 (toList!732 lt!31733))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47402 () Option!137)

(assert (=> d!16579 (= (getValueByKey!131 (toList!732 lt!31733) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47402)))

(declare-fun b!72464 () Bool)

(assert (=> b!72464 (= e!47402 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31733)))))))

(declare-fun b!72466 () Bool)

(declare-fun e!47403 () Option!137)

(assert (=> b!72466 (= e!47403 (getValueByKey!131 (t!5044 (toList!732 lt!31733)) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72465 () Bool)

(assert (=> b!72465 (= e!47402 e!47403)))

(declare-fun c!10700 () Bool)

(assert (=> b!72465 (= c!10700 (and ((_ is Cons!1500) (toList!732 lt!31733)) (not (= (_1!1079 (h!2086 (toList!732 lt!31733))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72467 () Bool)

(assert (=> b!72467 (= e!47403 None!135)))

(assert (= (and d!16579 c!10699) b!72464))

(assert (= (and d!16579 (not c!10699)) b!72465))

(assert (= (and b!72465 c!10700) b!72466))

(assert (= (and b!72465 (not c!10700)) b!72467))

(declare-fun m!70383 () Bool)

(assert (=> b!72466 m!70383))

(assert (=> b!71506 d!16579))

(declare-fun d!16581 () Bool)

(assert (=> d!16581 (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!32232 () Unit!2006)

(assert (=> d!16581 (= lt!32232 (choose!405 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47404 () Bool)

(assert (=> d!16581 e!47404))

(declare-fun res!38525 () Bool)

(assert (=> d!16581 (=> (not res!38525) (not e!47404))))

(assert (=> d!16581 (= res!38525 (isStrictlySorted!286 (toList!732 lt!31442)))))

(assert (=> d!16581 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32232)))

(declare-fun b!72468 () Bool)

(assert (=> b!72468 (= e!47404 (containsKey!135 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16581 res!38525) b!72468))

(assert (=> d!16581 m!67827))

(assert (=> d!16581 m!68059))

(assert (=> d!16581 m!68059))

(assert (=> d!16581 m!68119))

(assert (=> d!16581 m!67827))

(declare-fun m!70385 () Bool)

(assert (=> d!16581 m!70385))

(assert (=> d!16581 m!69001))

(assert (=> b!72468 m!67827))

(assert (=> b!72468 m!68115))

(assert (=> b!71194 d!16581))

(declare-fun d!16583 () Bool)

(assert (=> d!16583 (= (isDefined!85 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!319 (getValueByKey!131 (toList!732 lt!31442) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3109 () Bool)

(assert (= bs!3109 d!16583))

(assert (=> bs!3109 m!68059))

(declare-fun m!70387 () Bool)

(assert (=> bs!3109 m!70387))

(assert (=> b!71194 d!16583))

(assert (=> b!71194 d!16409))

(declare-fun d!16585 () Bool)

(declare-fun res!38526 () Bool)

(declare-fun e!47405 () Bool)

(assert (=> d!16585 (=> res!38526 e!47405)))

(assert (=> d!16585 (= res!38526 (and ((_ is Cons!1500) (toList!732 lt!31451)) (= (_1!1079 (h!2086 (toList!732 lt!31451))) (_1!1079 lt!31200))))))

(assert (=> d!16585 (= (containsKey!135 (toList!732 lt!31451) (_1!1079 lt!31200)) e!47405)))

(declare-fun b!72469 () Bool)

(declare-fun e!47406 () Bool)

(assert (=> b!72469 (= e!47405 e!47406)))

(declare-fun res!38527 () Bool)

(assert (=> b!72469 (=> (not res!38527) (not e!47406))))

(assert (=> b!72469 (= res!38527 (and (or (not ((_ is Cons!1500) (toList!732 lt!31451))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31451))) (_1!1079 lt!31200))) ((_ is Cons!1500) (toList!732 lt!31451)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31451))) (_1!1079 lt!31200))))))

(declare-fun b!72470 () Bool)

(assert (=> b!72470 (= e!47406 (containsKey!135 (t!5044 (toList!732 lt!31451)) (_1!1079 lt!31200)))))

(assert (= (and d!16585 (not res!38526)) b!72469))

(assert (= (and b!72469 res!38527) b!72470))

(declare-fun m!70389 () Bool)

(assert (=> b!72470 m!70389))

(assert (=> d!15959 d!16585))

(declare-fun d!16587 () Bool)

(declare-fun e!47407 () Bool)

(assert (=> d!16587 e!47407))

(declare-fun res!38528 () Bool)

(assert (=> d!16587 (=> res!38528 e!47407)))

(declare-fun lt!32235 () Bool)

(assert (=> d!16587 (= res!38528 (not lt!32235))))

(declare-fun lt!32233 () Bool)

(assert (=> d!16587 (= lt!32235 lt!32233)))

(declare-fun lt!32234 () Unit!2006)

(declare-fun e!47408 () Unit!2006)

(assert (=> d!16587 (= lt!32234 e!47408)))

(declare-fun c!10701 () Bool)

(assert (=> d!16587 (= c!10701 lt!32233)))

(assert (=> d!16587 (= lt!32233 (containsKey!135 (toList!732 lt!31733) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16587 (= (contains!726 lt!31733 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32235)))

(declare-fun b!72471 () Bool)

(declare-fun lt!32236 () Unit!2006)

(assert (=> b!72471 (= e!47408 lt!32236)))

(assert (=> b!72471 (= lt!32236 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31733) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> b!72471 (isDefined!85 (getValueByKey!131 (toList!732 lt!31733) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72472 () Bool)

(declare-fun Unit!2071 () Unit!2006)

(assert (=> b!72472 (= e!47408 Unit!2071)))

(declare-fun b!72473 () Bool)

(assert (=> b!72473 (= e!47407 (isDefined!85 (getValueByKey!131 (toList!732 lt!31733) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16587 c!10701) b!72471))

(assert (= (and d!16587 (not c!10701)) b!72472))

(assert (= (and d!16587 (not res!38528)) b!72473))

(declare-fun m!70391 () Bool)

(assert (=> d!16587 m!70391))

(declare-fun m!70393 () Bool)

(assert (=> b!72471 m!70393))

(assert (=> b!72471 m!68633))

(assert (=> b!72471 m!68633))

(declare-fun m!70395 () Bool)

(assert (=> b!72471 m!70395))

(assert (=> b!72473 m!68633))

(assert (=> b!72473 m!68633))

(assert (=> b!72473 m!70395))

(assert (=> d!15979 d!16587))

(declare-fun d!16589 () Bool)

(declare-fun c!10702 () Bool)

(assert (=> d!16589 (= c!10702 (and ((_ is Cons!1500) lt!31732) (= (_1!1079 (h!2086 lt!31732)) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47409 () Option!137)

(assert (=> d!16589 (= (getValueByKey!131 lt!31732 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47409)))

(declare-fun b!72474 () Bool)

(assert (=> b!72474 (= e!47409 (Some!136 (_2!1079 (h!2086 lt!31732))))))

(declare-fun b!72476 () Bool)

(declare-fun e!47410 () Option!137)

(assert (=> b!72476 (= e!47410 (getValueByKey!131 (t!5044 lt!31732) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72475 () Bool)

(assert (=> b!72475 (= e!47409 e!47410)))

(declare-fun c!10703 () Bool)

(assert (=> b!72475 (= c!10703 (and ((_ is Cons!1500) lt!31732) (not (= (_1!1079 (h!2086 lt!31732)) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72477 () Bool)

(assert (=> b!72477 (= e!47410 None!135)))

(assert (= (and d!16589 c!10702) b!72474))

(assert (= (and d!16589 (not c!10702)) b!72475))

(assert (= (and b!72475 c!10703) b!72476))

(assert (= (and b!72475 (not c!10703)) b!72477))

(declare-fun m!70397 () Bool)

(assert (=> b!72476 m!70397))

(assert (=> d!15979 d!16589))

(declare-fun d!16591 () Bool)

(assert (=> d!16591 (= (getValueByKey!131 lt!31732 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!32237 () Unit!2006)

(assert (=> d!16591 (= lt!32237 (choose!407 lt!31732 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!47411 () Bool)

(assert (=> d!16591 e!47411))

(declare-fun res!38529 () Bool)

(assert (=> d!16591 (=> (not res!38529) (not e!47411))))

(assert (=> d!16591 (= res!38529 (isStrictlySorted!286 lt!31732))))

(assert (=> d!16591 (= (lemmaContainsTupThenGetReturnValue!50 lt!31732 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32237)))

(declare-fun b!72478 () Bool)

(declare-fun res!38530 () Bool)

(assert (=> b!72478 (=> (not res!38530) (not e!47411))))

(assert (=> b!72478 (= res!38530 (containsKey!135 lt!31732 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72479 () Bool)

(assert (=> b!72479 (= e!47411 (contains!728 lt!31732 (tuple2!2139 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16591 res!38529) b!72478))

(assert (= (and b!72478 res!38530) b!72479))

(assert (=> d!16591 m!68627))

(declare-fun m!70399 () Bool)

(assert (=> d!16591 m!70399))

(declare-fun m!70401 () Bool)

(assert (=> d!16591 m!70401))

(declare-fun m!70403 () Bool)

(assert (=> b!72478 m!70403))

(declare-fun m!70405 () Bool)

(assert (=> b!72479 m!70405))

(assert (=> d!15979 d!16591))

(declare-fun b!72480 () Bool)

(declare-fun e!47413 () List!1504)

(declare-fun call!6317 () List!1504)

(assert (=> b!72480 (= e!47413 call!6317)))

(declare-fun b!72481 () Bool)

(declare-fun res!38531 () Bool)

(declare-fun e!47412 () Bool)

(assert (=> b!72481 (=> (not res!38531) (not e!47412))))

(declare-fun lt!32238 () List!1504)

(assert (=> b!72481 (= res!38531 (containsKey!135 lt!32238 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun c!10705 () Bool)

(declare-fun b!72482 () Bool)

(assert (=> b!72482 (= c!10705 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (bvsgt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47415 () List!1504)

(declare-fun e!47414 () List!1504)

(assert (=> b!72482 (= e!47415 e!47414)))

(declare-fun b!72484 () Bool)

(declare-fun call!6318 () List!1504)

(assert (=> b!72484 (= e!47415 call!6318)))

(declare-fun b!72485 () Bool)

(declare-fun call!6316 () List!1504)

(assert (=> b!72485 (= e!47414 call!6316)))

(declare-fun e!47416 () List!1504)

(declare-fun b!72486 () Bool)

(assert (=> b!72486 (= e!47416 (insertStrictlySorted!52 (t!5044 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun bm!6313 () Bool)

(assert (=> bm!6313 (= call!6316 call!6318)))

(declare-fun bm!6314 () Bool)

(assert (=> bm!6314 (= call!6318 call!6317)))

(declare-fun bm!6315 () Bool)

(declare-fun c!10704 () Bool)

(assert (=> bm!6315 (= call!6317 ($colon$colon!64 e!47416 (ite c!10704 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (tuple2!2139 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun c!10706 () Bool)

(assert (=> bm!6315 (= c!10706 c!10704)))

(declare-fun c!10707 () Bool)

(declare-fun b!72487 () Bool)

(assert (=> b!72487 (= e!47416 (ite c!10707 (t!5044 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (ite c!10705 (Cons!1500 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (t!5044 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))) Nil!1501)))))

(declare-fun b!72483 () Bool)

(assert (=> b!72483 (= e!47414 call!6316)))

(declare-fun d!16593 () Bool)

(assert (=> d!16593 e!47412))

(declare-fun res!38532 () Bool)

(assert (=> d!16593 (=> (not res!38532) (not e!47412))))

(assert (=> d!16593 (= res!38532 (isStrictlySorted!286 lt!32238))))

(assert (=> d!16593 (= lt!32238 e!47413)))

(assert (=> d!16593 (= c!10704 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (bvslt (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16593 (isStrictlySorted!286 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16593 (= (insertStrictlySorted!52 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32238)))

(declare-fun b!72488 () Bool)

(assert (=> b!72488 (= e!47412 (contains!728 lt!32238 (tuple2!2139 (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72489 () Bool)

(assert (=> b!72489 (= e!47413 e!47415)))

(assert (=> b!72489 (= c!10707 (and ((_ is Cons!1500) (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))) (= (_1!1079 (h!2086 (toList!732 (+!95 lt!31210 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))) (_1!1079 (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16593 c!10704) b!72480))

(assert (= (and d!16593 (not c!10704)) b!72489))

(assert (= (and b!72489 c!10707) b!72484))

(assert (= (and b!72489 (not c!10707)) b!72482))

(assert (= (and b!72482 c!10705) b!72483))

(assert (= (and b!72482 (not c!10705)) b!72485))

(assert (= (or b!72483 b!72485) bm!6313))

(assert (= (or b!72484 bm!6313) bm!6314))

(assert (= (or b!72480 bm!6314) bm!6315))

(assert (= (and bm!6315 c!10706) b!72486))

(assert (= (and bm!6315 (not c!10706)) b!72487))

(assert (= (and d!16593 res!38532) b!72481))

(assert (= (and b!72481 res!38531) b!72488))

(declare-fun m!70407 () Bool)

(assert (=> bm!6315 m!70407))

(declare-fun m!70409 () Bool)

(assert (=> b!72486 m!70409))

(declare-fun m!70411 () Bool)

(assert (=> b!72481 m!70411))

(declare-fun m!70413 () Bool)

(assert (=> b!72488 m!70413))

(declare-fun m!70415 () Bool)

(assert (=> d!16593 m!70415))

(declare-fun m!70417 () Bool)

(assert (=> d!16593 m!70417))

(assert (=> d!15979 d!16593))

(declare-fun d!16595 () Bool)

(declare-fun res!38533 () Bool)

(declare-fun e!47417 () Bool)

(assert (=> d!16595 (=> res!38533 e!47417)))

(assert (=> d!16595 (= res!38533 (and ((_ is Cons!1500) lt!31457) (= (_1!1079 (h!2086 lt!31457)) (_1!1079 lt!31205))))))

(assert (=> d!16595 (= (containsKey!135 lt!31457 (_1!1079 lt!31205)) e!47417)))

(declare-fun b!72490 () Bool)

(declare-fun e!47418 () Bool)

(assert (=> b!72490 (= e!47417 e!47418)))

(declare-fun res!38534 () Bool)

(assert (=> b!72490 (=> (not res!38534) (not e!47418))))

(assert (=> b!72490 (= res!38534 (and (or (not ((_ is Cons!1500) lt!31457)) (bvsle (_1!1079 (h!2086 lt!31457)) (_1!1079 lt!31205))) ((_ is Cons!1500) lt!31457) (bvslt (_1!1079 (h!2086 lt!31457)) (_1!1079 lt!31205))))))

(declare-fun b!72491 () Bool)

(assert (=> b!72491 (= e!47418 (containsKey!135 (t!5044 lt!31457) (_1!1079 lt!31205)))))

(assert (= (and d!16595 (not res!38533)) b!72490))

(assert (= (and b!72490 res!38534) b!72491))

(declare-fun m!70419 () Bool)

(assert (=> b!72491 m!70419))

(assert (=> b!71431 d!16595))

(declare-fun d!16597 () Bool)

(assert (=> d!16597 (= (get!1150 (getValueByKey!131 (toList!732 lt!31408) lt!31411)) (v!2521 (getValueByKey!131 (toList!732 lt!31408) lt!31411)))))

(assert (=> d!15905 d!16597))

(declare-fun d!16599 () Bool)

(declare-fun c!10708 () Bool)

(assert (=> d!16599 (= c!10708 (and ((_ is Cons!1500) (toList!732 lt!31408)) (= (_1!1079 (h!2086 (toList!732 lt!31408))) lt!31411)))))

(declare-fun e!47419 () Option!137)

(assert (=> d!16599 (= (getValueByKey!131 (toList!732 lt!31408) lt!31411) e!47419)))

(declare-fun b!72492 () Bool)

(assert (=> b!72492 (= e!47419 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31408)))))))

(declare-fun b!72494 () Bool)

(declare-fun e!47420 () Option!137)

(assert (=> b!72494 (= e!47420 (getValueByKey!131 (t!5044 (toList!732 lt!31408)) lt!31411))))

(declare-fun b!72493 () Bool)

(assert (=> b!72493 (= e!47419 e!47420)))

(declare-fun c!10709 () Bool)

(assert (=> b!72493 (= c!10709 (and ((_ is Cons!1500) (toList!732 lt!31408)) (not (= (_1!1079 (h!2086 (toList!732 lt!31408))) lt!31411))))))

(declare-fun b!72495 () Bool)

(assert (=> b!72495 (= e!47420 None!135)))

(assert (= (and d!16599 c!10708) b!72492))

(assert (= (and d!16599 (not c!10708)) b!72493))

(assert (= (and b!72493 c!10709) b!72494))

(assert (= (and b!72493 (not c!10709)) b!72495))

(declare-fun m!70421 () Bool)

(assert (=> b!72494 m!70421))

(assert (=> d!15905 d!16599))

(assert (=> b!71392 d!16405))

(assert (=> b!71392 d!15857))

(declare-fun d!16601 () Bool)

(declare-fun lt!32239 () Bool)

(assert (=> d!16601 (= lt!32239 (select (content!74 (t!5044 (toList!732 lt!31451))) lt!31200))))

(declare-fun e!47422 () Bool)

(assert (=> d!16601 (= lt!32239 e!47422)))

(declare-fun res!38536 () Bool)

(assert (=> d!16601 (=> (not res!38536) (not e!47422))))

(assert (=> d!16601 (= res!38536 ((_ is Cons!1500) (t!5044 (toList!732 lt!31451))))))

(assert (=> d!16601 (= (contains!728 (t!5044 (toList!732 lt!31451)) lt!31200) lt!32239)))

(declare-fun b!72496 () Bool)

(declare-fun e!47421 () Bool)

(assert (=> b!72496 (= e!47422 e!47421)))

(declare-fun res!38535 () Bool)

(assert (=> b!72496 (=> res!38535 e!47421)))

(assert (=> b!72496 (= res!38535 (= (h!2086 (t!5044 (toList!732 lt!31451))) lt!31200))))

(declare-fun b!72497 () Bool)

(assert (=> b!72497 (= e!47421 (contains!728 (t!5044 (t!5044 (toList!732 lt!31451))) lt!31200))))

(assert (= (and d!16601 res!38536) b!72496))

(assert (= (and b!72496 (not res!38535)) b!72497))

(declare-fun m!70423 () Bool)

(assert (=> d!16601 m!70423))

(declare-fun m!70425 () Bool)

(assert (=> d!16601 m!70425))

(declare-fun m!70427 () Bool)

(assert (=> b!72497 m!70427))

(assert (=> b!71593 d!16601))

(declare-fun d!16603 () Bool)

(declare-fun e!47423 () Bool)

(assert (=> d!16603 e!47423))

(declare-fun res!38537 () Bool)

(assert (=> d!16603 (=> res!38537 e!47423)))

(declare-fun lt!32242 () Bool)

(assert (=> d!16603 (= res!38537 (not lt!32242))))

(declare-fun lt!32240 () Bool)

(assert (=> d!16603 (= lt!32242 lt!32240)))

(declare-fun lt!32241 () Unit!2006)

(declare-fun e!47424 () Unit!2006)

(assert (=> d!16603 (= lt!32241 e!47424)))

(declare-fun c!10710 () Bool)

(assert (=> d!16603 (= c!10710 lt!32240)))

(assert (=> d!16603 (= lt!32240 (containsKey!135 (toList!732 lt!31476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16603 (= (contains!726 lt!31476 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32242)))

(declare-fun b!72498 () Bool)

(declare-fun lt!32243 () Unit!2006)

(assert (=> b!72498 (= e!47424 lt!32243)))

(assert (=> b!72498 (= lt!32243 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72498 (isDefined!85 (getValueByKey!131 (toList!732 lt!31476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72499 () Bool)

(declare-fun Unit!2072 () Unit!2006)

(assert (=> b!72499 (= e!47424 Unit!2072)))

(declare-fun b!72500 () Bool)

(assert (=> b!72500 (= e!47423 (isDefined!85 (getValueByKey!131 (toList!732 lt!31476) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16603 c!10710) b!72498))

(assert (= (and d!16603 (not c!10710)) b!72499))

(assert (= (and d!16603 (not res!38537)) b!72500))

(declare-fun m!70429 () Bool)

(assert (=> d!16603 m!70429))

(declare-fun m!70431 () Bool)

(assert (=> b!72498 m!70431))

(declare-fun m!70433 () Bool)

(assert (=> b!72498 m!70433))

(assert (=> b!72498 m!70433))

(declare-fun m!70435 () Bool)

(assert (=> b!72498 m!70435))

(assert (=> b!72500 m!70433))

(assert (=> b!72500 m!70433))

(assert (=> b!72500 m!70435))

(assert (=> b!71172 d!16603))

(assert (=> bm!6207 d!16287))

(declare-fun d!16605 () Bool)

(declare-fun res!38538 () Bool)

(declare-fun e!47425 () Bool)

(assert (=> d!16605 (=> res!38538 e!47425)))

(assert (=> d!16605 (= res!38538 (and ((_ is Cons!1500) lt!31461) (= (_1!1079 (h!2086 lt!31461)) (_1!1079 lt!31200))))))

(assert (=> d!16605 (= (containsKey!135 lt!31461 (_1!1079 lt!31200)) e!47425)))

(declare-fun b!72501 () Bool)

(declare-fun e!47426 () Bool)

(assert (=> b!72501 (= e!47425 e!47426)))

(declare-fun res!38539 () Bool)

(assert (=> b!72501 (=> (not res!38539) (not e!47426))))

(assert (=> b!72501 (= res!38539 (and (or (not ((_ is Cons!1500) lt!31461)) (bvsle (_1!1079 (h!2086 lt!31461)) (_1!1079 lt!31200))) ((_ is Cons!1500) lt!31461) (bvslt (_1!1079 (h!2086 lt!31461)) (_1!1079 lt!31200))))))

(declare-fun b!72502 () Bool)

(assert (=> b!72502 (= e!47426 (containsKey!135 (t!5044 lt!31461) (_1!1079 lt!31200)))))

(assert (= (and d!16605 (not res!38538)) b!72501))

(assert (= (and b!72501 res!38539) b!72502))

(declare-fun m!70437 () Bool)

(assert (=> b!72502 m!70437))

(assert (=> b!71397 d!16605))

(declare-fun d!16607 () Bool)

(declare-fun e!47427 () Bool)

(assert (=> d!16607 e!47427))

(declare-fun res!38540 () Bool)

(assert (=> d!16607 (=> res!38540 e!47427)))

(declare-fun lt!32246 () Bool)

(assert (=> d!16607 (= res!38540 (not lt!32246))))

(declare-fun lt!32244 () Bool)

(assert (=> d!16607 (= lt!32246 lt!32244)))

(declare-fun lt!32245 () Unit!2006)

(declare-fun e!47428 () Unit!2006)

(assert (=> d!16607 (= lt!32245 e!47428)))

(declare-fun c!10711 () Bool)

(assert (=> d!16607 (= c!10711 lt!32244)))

(assert (=> d!16607 (= lt!32244 (containsKey!135 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(assert (=> d!16607 (= (contains!726 (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))) lt!32246)))

(declare-fun b!72503 () Bool)

(declare-fun lt!32247 () Unit!2006)

(assert (=> b!72503 (= e!47428 lt!32247)))

(assert (=> b!72503 (= lt!32247 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(assert (=> b!72503 (isDefined!85 (getValueByKey!131 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339))))))

(declare-fun b!72504 () Bool)

(declare-fun Unit!2073 () Unit!2006)

(assert (=> b!72504 (= e!47428 Unit!2073)))

(declare-fun b!72505 () Bool)

(assert (=> b!72505 (= e!47427 (isDefined!85 (getValueByKey!131 (toList!732 (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!31339)))))))

(assert (= (and d!16607 c!10711) b!72503))

(assert (= (and d!16607 (not c!10711)) b!72504))

(assert (= (and d!16607 (not res!38540)) b!72505))

(assert (=> d!16607 m!67903))

(declare-fun m!70439 () Bool)

(assert (=> d!16607 m!70439))

(assert (=> b!72503 m!67903))

(declare-fun m!70441 () Bool)

(assert (=> b!72503 m!70441))

(assert (=> b!72503 m!67903))

(declare-fun m!70443 () Bool)

(assert (=> b!72503 m!70443))

(assert (=> b!72503 m!70443))

(declare-fun m!70445 () Bool)

(assert (=> b!72503 m!70445))

(assert (=> b!72505 m!67903))

(assert (=> b!72505 m!70443))

(assert (=> b!72505 m!70443))

(assert (=> b!72505 m!70445))

(assert (=> b!71316 d!16607))

(declare-fun b!72506 () Bool)

(declare-fun e!47438 () Bool)

(declare-fun e!47429 () Bool)

(assert (=> b!72506 (= e!47438 e!47429)))

(declare-fun res!38542 () Bool)

(declare-fun call!6323 () Bool)

(assert (=> b!72506 (= res!38542 call!6323)))

(assert (=> b!72506 (=> (not res!38542) (not e!47429))))

(declare-fun b!72507 () Bool)

(declare-fun e!47440 () ListLongMap!1433)

(declare-fun call!6319 () ListLongMap!1433)

(assert (=> b!72507 (= e!47440 (+!95 call!6319 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun b!72508 () Bool)

(declare-fun e!47437 () ListLongMap!1433)

(declare-fun call!6324 () ListLongMap!1433)

(assert (=> b!72508 (= e!47437 call!6324)))

(declare-fun b!72509 () Bool)

(declare-fun e!47431 () Unit!2006)

(declare-fun Unit!2074 () Unit!2006)

(assert (=> b!72509 (= e!47431 Unit!2074)))

(declare-fun b!72510 () Bool)

(declare-fun call!6321 () ListLongMap!1433)

(assert (=> b!72510 (= e!47437 call!6321)))

(declare-fun b!72511 () Bool)

(declare-fun e!47433 () Bool)

(assert (=> b!72511 (= e!47433 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6316 () Bool)

(declare-fun call!6320 () ListLongMap!1433)

(assert (=> bm!6316 (= call!6324 call!6320)))

(declare-fun b!72512 () Bool)

(assert (=> b!72512 (= e!47438 (not call!6323))))

(declare-fun bm!6318 () Bool)

(assert (=> bm!6318 (= call!6321 call!6319)))

(declare-fun bm!6319 () Bool)

(declare-fun call!6325 () ListLongMap!1433)

(assert (=> bm!6319 (= call!6320 call!6325)))

(declare-fun b!72513 () Bool)

(declare-fun e!47436 () Bool)

(declare-fun e!47435 () Bool)

(assert (=> b!72513 (= e!47436 e!47435)))

(declare-fun c!10715 () Bool)

(assert (=> b!72513 (= c!10715 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6320 () Bool)

(declare-fun lt!32251 () ListLongMap!1433)

(assert (=> bm!6320 (= call!6323 (contains!726 lt!32251 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72514 () Bool)

(declare-fun e!47434 () Bool)

(assert (=> b!72514 (= e!47434 (= (apply!74 lt!32251 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun b!72515 () Bool)

(declare-fun e!47432 () ListLongMap!1433)

(assert (=> b!72515 (= e!47440 e!47432)))

(declare-fun c!10712 () Bool)

(assert (=> b!72515 (= c!10712 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72516 () Bool)

(declare-fun e!47441 () Bool)

(declare-fun e!47430 () Bool)

(assert (=> b!72516 (= e!47441 e!47430)))

(declare-fun res!38543 () Bool)

(assert (=> b!72516 (=> (not res!38543) (not e!47430))))

(assert (=> b!72516 (= res!38543 (contains!726 lt!32251 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72516 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72517 () Bool)

(assert (=> b!72517 (= e!47435 e!47434)))

(declare-fun res!38544 () Bool)

(declare-fun call!6322 () Bool)

(assert (=> b!72517 (= res!38544 call!6322)))

(assert (=> b!72517 (=> (not res!38544) (not e!47434))))

(declare-fun bm!6321 () Bool)

(assert (=> bm!6321 (= call!6322 (contains!726 lt!32251 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72518 () Bool)

(assert (=> b!72518 (= e!47432 call!6321)))

(declare-fun b!72519 () Bool)

(assert (=> b!72519 (= e!47430 (= (apply!74 lt!32251 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 lt!31326) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72519 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 lt!31326)))))

(assert (=> b!72519 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72520 () Bool)

(declare-fun lt!32261 () Unit!2006)

(assert (=> b!72520 (= e!47431 lt!32261)))

(declare-fun lt!32252 () ListLongMap!1433)

(assert (=> b!72520 (= lt!32252 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32269 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32269 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32264 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32264 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32265 () Unit!2006)

(assert (=> b!72520 (= lt!32265 (addStillContains!50 lt!32252 lt!32269 (zeroValue!2096 newMap!16) lt!32264))))

(assert (=> b!72520 (contains!726 (+!95 lt!32252 (tuple2!2139 lt!32269 (zeroValue!2096 newMap!16))) lt!32264)))

(declare-fun lt!32257 () Unit!2006)

(assert (=> b!72520 (= lt!32257 lt!32265)))

(declare-fun lt!32254 () ListLongMap!1433)

(assert (=> b!72520 (= lt!32254 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32255 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32255 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32256 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32256 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32268 () Unit!2006)

(assert (=> b!72520 (= lt!32268 (addApplyDifferent!50 lt!32254 lt!32255 (minValue!2096 newMap!16) lt!32256))))

(assert (=> b!72520 (= (apply!74 (+!95 lt!32254 (tuple2!2139 lt!32255 (minValue!2096 newMap!16))) lt!32256) (apply!74 lt!32254 lt!32256))))

(declare-fun lt!32260 () Unit!2006)

(assert (=> b!72520 (= lt!32260 lt!32268)))

(declare-fun lt!32263 () ListLongMap!1433)

(assert (=> b!72520 (= lt!32263 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32259 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32259 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32266 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32266 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32258 () Unit!2006)

(assert (=> b!72520 (= lt!32258 (addApplyDifferent!50 lt!32263 lt!32259 (zeroValue!2096 newMap!16) lt!32266))))

(assert (=> b!72520 (= (apply!74 (+!95 lt!32263 (tuple2!2139 lt!32259 (zeroValue!2096 newMap!16))) lt!32266) (apply!74 lt!32263 lt!32266))))

(declare-fun lt!32262 () Unit!2006)

(assert (=> b!72520 (= lt!32262 lt!32258)))

(declare-fun lt!32253 () ListLongMap!1433)

(assert (=> b!72520 (= lt!32253 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32249 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32249 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32250 () (_ BitVec 64))

(assert (=> b!72520 (= lt!32250 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72520 (= lt!32261 (addApplyDifferent!50 lt!32253 lt!32249 (minValue!2096 newMap!16) lt!32250))))

(assert (=> b!72520 (= (apply!74 (+!95 lt!32253 (tuple2!2139 lt!32249 (minValue!2096 newMap!16))) lt!32250) (apply!74 lt!32253 lt!32250))))

(declare-fun b!72521 () Bool)

(assert (=> b!72521 (= e!47435 (not call!6322))))

(declare-fun b!72522 () Bool)

(declare-fun res!38547 () Bool)

(assert (=> b!72522 (=> (not res!38547) (not e!47436))))

(assert (=> b!72522 (= res!38547 e!47441)))

(declare-fun res!38548 () Bool)

(assert (=> b!72522 (=> res!38548 e!47441)))

(assert (=> b!72522 (= res!38548 (not e!47433))))

(declare-fun res!38546 () Bool)

(assert (=> b!72522 (=> (not res!38546) (not e!47433))))

(assert (=> b!72522 (= res!38546 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(declare-fun bm!6322 () Bool)

(assert (=> bm!6322 (= call!6325 (getCurrentListMapNoExtraKeys!59 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72523 () Bool)

(declare-fun e!47439 () Bool)

(assert (=> b!72523 (= e!47439 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72524 () Bool)

(declare-fun res!38541 () Bool)

(assert (=> b!72524 (=> (not res!38541) (not e!47436))))

(assert (=> b!72524 (= res!38541 e!47438)))

(declare-fun c!10714 () Bool)

(assert (=> b!72524 (= c!10714 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6317 () Bool)

(declare-fun c!10716 () Bool)

(assert (=> bm!6317 (= call!6319 (+!95 (ite c!10716 call!6325 (ite c!10712 call!6320 call!6324)) (ite (or c!10716 c!10712) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun d!16609 () Bool)

(assert (=> d!16609 e!47436))

(declare-fun res!38545 () Bool)

(assert (=> d!16609 (=> (not res!38545) (not e!47436))))

(assert (=> d!16609 (= res!38545 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))))

(declare-fun lt!32248 () ListLongMap!1433)

(assert (=> d!16609 (= lt!32251 lt!32248)))

(declare-fun lt!32267 () Unit!2006)

(assert (=> d!16609 (= lt!32267 e!47431)))

(declare-fun c!10713 () Bool)

(assert (=> d!16609 (= c!10713 e!47439)))

(declare-fun res!38549 () Bool)

(assert (=> d!16609 (=> (not res!38549) (not e!47439))))

(assert (=> d!16609 (= res!38549 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16609 (= lt!32248 e!47440)))

(assert (=> d!16609 (= c!10716 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16609 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16609 (= (getCurrentListMap!425 (_keys!3840 newMap!16) lt!31326 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32251)))

(declare-fun b!72525 () Bool)

(assert (=> b!72525 (= e!47429 (= (apply!74 lt!32251 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72526 () Bool)

(declare-fun c!10717 () Bool)

(assert (=> b!72526 (= c!10717 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!72526 (= e!47432 e!47437)))

(assert (= (and d!16609 c!10716) b!72507))

(assert (= (and d!16609 (not c!10716)) b!72515))

(assert (= (and b!72515 c!10712) b!72518))

(assert (= (and b!72515 (not c!10712)) b!72526))

(assert (= (and b!72526 c!10717) b!72510))

(assert (= (and b!72526 (not c!10717)) b!72508))

(assert (= (or b!72510 b!72508) bm!6316))

(assert (= (or b!72518 bm!6316) bm!6319))

(assert (= (or b!72518 b!72510) bm!6318))

(assert (= (or b!72507 bm!6319) bm!6322))

(assert (= (or b!72507 bm!6318) bm!6317))

(assert (= (and d!16609 res!38549) b!72523))

(assert (= (and d!16609 c!10713) b!72520))

(assert (= (and d!16609 (not c!10713)) b!72509))

(assert (= (and d!16609 res!38545) b!72522))

(assert (= (and b!72522 res!38546) b!72511))

(assert (= (and b!72522 (not res!38548)) b!72516))

(assert (= (and b!72516 res!38543) b!72519))

(assert (= (and b!72522 res!38547) b!72524))

(assert (= (and b!72524 c!10714) b!72506))

(assert (= (and b!72524 (not c!10714)) b!72512))

(assert (= (and b!72506 res!38542) b!72525))

(assert (= (or b!72506 b!72512) bm!6320))

(assert (= (and b!72524 res!38541) b!72513))

(assert (= (and b!72513 c!10715) b!72517))

(assert (= (and b!72513 (not c!10715)) b!72521))

(assert (= (and b!72517 res!38544) b!72514))

(assert (= (or b!72517 b!72521) bm!6321))

(declare-fun b_lambda!3251 () Bool)

(assert (=> (not b_lambda!3251) (not b!72519)))

(assert (=> b!72519 t!5051))

(declare-fun b_and!4457 () Bool)

(assert (= b_and!4453 (and (=> t!5051 result!2669) b_and!4457)))

(assert (=> b!72519 t!5053))

(declare-fun b_and!4459 () Bool)

(assert (= b_and!4455 (and (=> t!5053 result!2671) b_and!4459)))

(assert (=> b!72516 m!68067))

(assert (=> b!72516 m!68067))

(declare-fun m!70447 () Bool)

(assert (=> b!72516 m!70447))

(declare-fun m!70449 () Bool)

(assert (=> bm!6320 m!70449))

(declare-fun m!70451 () Bool)

(assert (=> bm!6321 m!70451))

(assert (=> b!72511 m!68067))

(assert (=> b!72511 m!68067))

(assert (=> b!72511 m!68077))

(assert (=> b!72520 m!68067))

(declare-fun m!70453 () Bool)

(assert (=> b!72520 m!70453))

(declare-fun m!70455 () Bool)

(assert (=> b!72520 m!70455))

(declare-fun m!70457 () Bool)

(assert (=> b!72520 m!70457))

(declare-fun m!70459 () Bool)

(assert (=> b!72520 m!70459))

(declare-fun m!70461 () Bool)

(assert (=> b!72520 m!70461))

(declare-fun m!70463 () Bool)

(assert (=> b!72520 m!70463))

(assert (=> b!72520 m!70457))

(declare-fun m!70465 () Bool)

(assert (=> b!72520 m!70465))

(declare-fun m!70467 () Bool)

(assert (=> b!72520 m!70467))

(assert (=> b!72520 m!70463))

(declare-fun m!70469 () Bool)

(assert (=> b!72520 m!70469))

(declare-fun m!70471 () Bool)

(assert (=> b!72520 m!70471))

(declare-fun m!70473 () Bool)

(assert (=> b!72520 m!70473))

(assert (=> b!72520 m!70471))

(declare-fun m!70475 () Bool)

(assert (=> b!72520 m!70475))

(declare-fun m!70477 () Bool)

(assert (=> b!72520 m!70477))

(declare-fun m!70479 () Bool)

(assert (=> b!72520 m!70479))

(declare-fun m!70481 () Bool)

(assert (=> b!72520 m!70481))

(declare-fun m!70483 () Bool)

(assert (=> b!72520 m!70483))

(assert (=> b!72520 m!70475))

(assert (=> bm!6322 m!70483))

(declare-fun m!70485 () Bool)

(assert (=> bm!6317 m!70485))

(declare-fun m!70487 () Bool)

(assert (=> b!72525 m!70487))

(declare-fun m!70489 () Bool)

(assert (=> b!72514 m!70489))

(declare-fun m!70491 () Bool)

(assert (=> b!72519 m!70491))

(assert (=> b!72519 m!70491))

(assert (=> b!72519 m!68529))

(declare-fun m!70493 () Bool)

(assert (=> b!72519 m!70493))

(assert (=> b!72519 m!68529))

(assert (=> b!72519 m!68067))

(assert (=> b!72519 m!68067))

(declare-fun m!70495 () Bool)

(assert (=> b!72519 m!70495))

(assert (=> b!72523 m!68067))

(assert (=> b!72523 m!68067))

(assert (=> b!72523 m!68077))

(assert (=> d!16609 m!68107))

(declare-fun m!70497 () Bool)

(assert (=> b!72507 m!70497))

(assert (=> b!71316 d!16609))

(declare-fun d!16611 () Bool)

(assert (=> d!16611 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31473 #b00000000000000000000000000000000)))

(declare-fun lt!32270 () Unit!2006)

(assert (=> d!16611 (= lt!32270 (choose!13 (_keys!3840 newMap!16) lt!31473 #b00000000000000000000000000000000))))

(assert (=> d!16611 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!16611 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 newMap!16) lt!31473 #b00000000000000000000000000000000) lt!32270)))

(declare-fun bs!3110 () Bool)

(assert (= bs!3110 d!16611))

(assert (=> bs!3110 m!68071))

(declare-fun m!70499 () Bool)

(assert (=> bs!3110 m!70499))

(assert (=> b!71168 d!16611))

(declare-fun d!16613 () Bool)

(declare-fun res!38550 () Bool)

(declare-fun e!47442 () Bool)

(assert (=> d!16613 (=> res!38550 e!47442)))

(assert (=> d!16613 (= res!38550 (= (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) lt!31473))))

(assert (=> d!16613 (= (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31473 #b00000000000000000000000000000000) e!47442)))

(declare-fun b!72527 () Bool)

(declare-fun e!47443 () Bool)

(assert (=> b!72527 (= e!47442 e!47443)))

(declare-fun res!38551 () Bool)

(assert (=> b!72527 (=> (not res!38551) (not e!47443))))

(assert (=> b!72527 (= res!38551 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72528 () Bool)

(assert (=> b!72528 (= e!47443 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31473 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16613 (not res!38550)) b!72527))

(assert (= (and b!72527 res!38551) b!72528))

(assert (=> d!16613 m!68067))

(declare-fun m!70501 () Bool)

(assert (=> b!72528 m!70501))

(assert (=> b!71168 d!16613))

(declare-fun b!72529 () Bool)

(declare-fun c!10718 () Bool)

(declare-fun lt!32273 () (_ BitVec 64))

(assert (=> b!72529 (= c!10718 (= lt!32273 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47444 () SeekEntryResult!245)

(declare-fun e!47446 () SeekEntryResult!245)

(assert (=> b!72529 (= e!47444 e!47446)))

(declare-fun b!72530 () Bool)

(declare-fun lt!32272 () SeekEntryResult!245)

(assert (=> b!72530 (= e!47444 (Found!245 (index!3112 lt!32272)))))

(declare-fun b!72531 () Bool)

(assert (=> b!72531 (= e!47446 (seekKeyOrZeroReturnVacant!0 (x!11017 lt!32272) (index!3112 lt!32272) (index!3112 lt!32272) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!72532 () Bool)

(declare-fun e!47445 () SeekEntryResult!245)

(assert (=> b!72532 (= e!47445 e!47444)))

(assert (=> b!72532 (= lt!32273 (select (arr!1852 (_keys!3840 newMap!16)) (index!3112 lt!32272)))))

(declare-fun c!10720 () Bool)

(assert (=> b!72532 (= c!10720 (= lt!32273 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!16615 () Bool)

(declare-fun lt!32271 () SeekEntryResult!245)

(assert (=> d!16615 (and (or ((_ is Undefined!245) lt!32271) (not ((_ is Found!245) lt!32271)) (and (bvsge (index!3111 lt!32271) #b00000000000000000000000000000000) (bvslt (index!3111 lt!32271) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!32271) ((_ is Found!245) lt!32271) (not ((_ is MissingZero!245) lt!32271)) (and (bvsge (index!3110 lt!32271) #b00000000000000000000000000000000) (bvslt (index!3110 lt!32271) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!32271) ((_ is Found!245) lt!32271) ((_ is MissingZero!245) lt!32271) (not ((_ is MissingVacant!245) lt!32271)) (and (bvsge (index!3113 lt!32271) #b00000000000000000000000000000000) (bvslt (index!3113 lt!32271) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!32271) (ite ((_ is Found!245) lt!32271) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!32271)) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!245) lt!32271) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3110 lt!32271)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!245) lt!32271) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!32271)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16615 (= lt!32271 e!47445)))

(declare-fun c!10719 () Bool)

(assert (=> d!16615 (= c!10719 (and ((_ is Intermediate!245) lt!32272) (undefined!1057 lt!32272)))))

(assert (=> d!16615 (= lt!32272 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (mask!6149 newMap!16)) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!16615 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16615 (= (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!32271)))

(declare-fun b!72533 () Bool)

(assert (=> b!72533 (= e!47446 (MissingZero!245 (index!3112 lt!32272)))))

(declare-fun b!72534 () Bool)

(assert (=> b!72534 (= e!47445 Undefined!245)))

(assert (= (and d!16615 c!10719) b!72534))

(assert (= (and d!16615 (not c!10719)) b!72532))

(assert (= (and b!72532 c!10720) b!72530))

(assert (= (and b!72532 (not c!10720)) b!72529))

(assert (= (and b!72529 c!10718) b!72533))

(assert (= (and b!72529 (not c!10718)) b!72531))

(assert (=> b!72531 m!68067))

(declare-fun m!70503 () Bool)

(assert (=> b!72531 m!70503))

(declare-fun m!70505 () Bool)

(assert (=> b!72532 m!70505))

(declare-fun m!70507 () Bool)

(assert (=> d!16615 m!70507))

(declare-fun m!70509 () Bool)

(assert (=> d!16615 m!70509))

(assert (=> d!16615 m!68067))

(declare-fun m!70511 () Bool)

(assert (=> d!16615 m!70511))

(assert (=> d!16615 m!70511))

(assert (=> d!16615 m!68067))

(declare-fun m!70513 () Bool)

(assert (=> d!16615 m!70513))

(assert (=> d!16615 m!68107))

(declare-fun m!70515 () Bool)

(assert (=> d!16615 m!70515))

(assert (=> b!71168 d!16615))

(declare-fun d!16617 () Bool)

(assert (=> d!16617 (= (inRange!0 (ite c!10377 (index!3111 lt!31580) (ite c!10378 (index!3110 lt!31590) (index!3113 lt!31590))) (mask!6149 newMap!16)) (and (bvsge (ite c!10377 (index!3111 lt!31580) (ite c!10378 (index!3110 lt!31590) (index!3113 lt!31590))) #b00000000000000000000000000000000) (bvslt (ite c!10377 (index!3111 lt!31580) (ite c!10378 (index!3110 lt!31590) (index!3113 lt!31590))) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6172 d!16617))

(declare-fun d!16619 () Bool)

(declare-fun res!38552 () Bool)

(declare-fun e!47447 () Bool)

(assert (=> d!16619 (=> res!38552 e!47447)))

(assert (=> d!16619 (= res!38552 (and ((_ is Cons!1500) lt!31506) (= (_1!1079 (h!2086 lt!31506)) (_1!1079 lt!31205))))))

(assert (=> d!16619 (= (containsKey!135 lt!31506 (_1!1079 lt!31205)) e!47447)))

(declare-fun b!72535 () Bool)

(declare-fun e!47448 () Bool)

(assert (=> b!72535 (= e!47447 e!47448)))

(declare-fun res!38553 () Bool)

(assert (=> b!72535 (=> (not res!38553) (not e!47448))))

(assert (=> b!72535 (= res!38553 (and (or (not ((_ is Cons!1500) lt!31506)) (bvsle (_1!1079 (h!2086 lt!31506)) (_1!1079 lt!31205))) ((_ is Cons!1500) lt!31506) (bvslt (_1!1079 (h!2086 lt!31506)) (_1!1079 lt!31205))))))

(declare-fun b!72536 () Bool)

(assert (=> b!72536 (= e!47448 (containsKey!135 (t!5044 lt!31506) (_1!1079 lt!31205)))))

(assert (= (and d!16619 (not res!38552)) b!72535))

(assert (= (and b!72535 res!38553) b!72536))

(declare-fun m!70517 () Bool)

(assert (=> b!72536 m!70517))

(assert (=> b!71245 d!16619))

(declare-fun d!16621 () Bool)

(declare-fun e!47449 () Bool)

(assert (=> d!16621 e!47449))

(declare-fun res!38554 () Bool)

(assert (=> d!16621 (=> res!38554 e!47449)))

(declare-fun lt!32276 () Bool)

(assert (=> d!16621 (= res!38554 (not lt!32276))))

(declare-fun lt!32274 () Bool)

(assert (=> d!16621 (= lt!32276 lt!32274)))

(declare-fun lt!32275 () Unit!2006)

(declare-fun e!47450 () Unit!2006)

(assert (=> d!16621 (= lt!32275 e!47450)))

(declare-fun c!10721 () Bool)

(assert (=> d!16621 (= c!10721 lt!32274)))

(assert (=> d!16621 (= lt!32274 (containsKey!135 (toList!732 lt!31759) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16621 (= (contains!726 lt!31759 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!32276)))

(declare-fun b!72537 () Bool)

(declare-fun lt!32277 () Unit!2006)

(assert (=> b!72537 (= e!47450 lt!32277)))

(assert (=> b!72537 (= lt!32277 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31759) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72537 (isDefined!85 (getValueByKey!131 (toList!732 lt!31759) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72538 () Bool)

(declare-fun Unit!2075 () Unit!2006)

(assert (=> b!72538 (= e!47450 Unit!2075)))

(declare-fun b!72539 () Bool)

(assert (=> b!72539 (= e!47449 (isDefined!85 (getValueByKey!131 (toList!732 lt!31759) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16621 c!10721) b!72537))

(assert (= (and d!16621 (not c!10721)) b!72538))

(assert (= (and d!16621 (not res!38554)) b!72539))

(assert (=> d!16621 m!68067))

(declare-fun m!70519 () Bool)

(assert (=> d!16621 m!70519))

(assert (=> b!72537 m!68067))

(declare-fun m!70521 () Bool)

(assert (=> b!72537 m!70521))

(assert (=> b!72537 m!68067))

(assert (=> b!72537 m!69181))

(assert (=> b!72537 m!69181))

(declare-fun m!70523 () Bool)

(assert (=> b!72537 m!70523))

(assert (=> b!72539 m!68067))

(assert (=> b!72539 m!69181))

(assert (=> b!72539 m!69181))

(assert (=> b!72539 m!70523))

(assert (=> b!71550 d!16621))

(declare-fun d!16623 () Bool)

(assert (=> d!16623 (= (isEmpty!319 (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) (not ((_ is Some!136) (getValueByKey!131 (toList!732 lt!31199) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(assert (=> d!15827 d!16623))

(assert (=> b!71496 d!16045))

(declare-fun b!72540 () Bool)

(declare-fun e!47451 () Bool)

(declare-fun call!6326 () Bool)

(assert (=> b!72540 (= e!47451 call!6326)))

(declare-fun b!72541 () Bool)

(declare-fun e!47453 () Bool)

(assert (=> b!72541 (= e!47453 call!6326)))

(declare-fun b!72542 () Bool)

(assert (=> b!72542 (= e!47453 e!47451)))

(declare-fun lt!32279 () (_ BitVec 64))

(assert (=> b!72542 (= lt!32279 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000))))

(declare-fun lt!32280 () Unit!2006)

(assert (=> b!72542 (= lt!32280 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 (_2!1080 lt!31329)) lt!32279 #b00000000000000000000000000000000))))

(assert (=> b!72542 (arrayContainsKey!0 (_keys!3840 (_2!1080 lt!31329)) lt!32279 #b00000000000000000000000000000000)))

(declare-fun lt!32278 () Unit!2006)

(assert (=> b!72542 (= lt!32278 lt!32280)))

(declare-fun res!38556 () Bool)

(assert (=> b!72542 (= res!38556 (= (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000) (_keys!3840 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329))) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!72542 (=> (not res!38556) (not e!47451))))

(declare-fun bm!6323 () Bool)

(assert (=> bm!6323 (= call!6326 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329))))))

(declare-fun d!16625 () Bool)

(declare-fun res!38555 () Bool)

(declare-fun e!47452 () Bool)

(assert (=> d!16625 (=> res!38555 e!47452)))

(assert (=> d!16625 (= res!38555 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(assert (=> d!16625 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329))) e!47452)))

(declare-fun b!72543 () Bool)

(assert (=> b!72543 (= e!47452 e!47453)))

(declare-fun c!10722 () Bool)

(assert (=> b!72543 (= c!10722 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(assert (= (and d!16625 (not res!38555)) b!72543))

(assert (= (and b!72543 c!10722) b!72542))

(assert (= (and b!72543 (not c!10722)) b!72541))

(assert (= (and b!72542 res!38556) b!72540))

(assert (= (or b!72540 b!72541) bm!6323))

(assert (=> b!72542 m!70311))

(declare-fun m!70525 () Bool)

(assert (=> b!72542 m!70525))

(declare-fun m!70527 () Bool)

(assert (=> b!72542 m!70527))

(assert (=> b!72542 m!70311))

(declare-fun m!70529 () Bool)

(assert (=> b!72542 m!70529))

(declare-fun m!70531 () Bool)

(assert (=> bm!6323 m!70531))

(assert (=> b!72543 m!70311))

(assert (=> b!72543 m!70311))

(assert (=> b!72543 m!70313))

(assert (=> b!71538 d!16625))

(assert (=> b!71426 d!16393))

(assert (=> b!71426 d!15871))

(declare-fun d!16627 () Bool)

(declare-fun c!10723 () Bool)

(assert (=> d!16627 (= c!10723 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31458))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31458)))) (_1!1079 lt!31205))))))

(declare-fun e!47454 () Option!137)

(assert (=> d!16627 (= (getValueByKey!131 (t!5044 (toList!732 lt!31458)) (_1!1079 lt!31205)) e!47454)))

(declare-fun b!72544 () Bool)

(assert (=> b!72544 (= e!47454 (Some!136 (_2!1079 (h!2086 (t!5044 (toList!732 lt!31458))))))))

(declare-fun b!72546 () Bool)

(declare-fun e!47455 () Option!137)

(assert (=> b!72546 (= e!47455 (getValueByKey!131 (t!5044 (t!5044 (toList!732 lt!31458))) (_1!1079 lt!31205)))))

(declare-fun b!72545 () Bool)

(assert (=> b!72545 (= e!47454 e!47455)))

(declare-fun c!10724 () Bool)

(assert (=> b!72545 (= c!10724 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31458))) (not (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31458)))) (_1!1079 lt!31205)))))))

(declare-fun b!72547 () Bool)

(assert (=> b!72547 (= e!47455 None!135)))

(assert (= (and d!16627 c!10723) b!72544))

(assert (= (and d!16627 (not c!10723)) b!72545))

(assert (= (and b!72545 c!10724) b!72546))

(assert (= (and b!72545 (not c!10724)) b!72547))

(declare-fun m!70533 () Bool)

(assert (=> b!72546 m!70533))

(assert (=> b!71256 d!16627))

(declare-fun d!16629 () Bool)

(declare-fun lt!32281 () Bool)

(assert (=> d!16629 (= lt!32281 (select (content!74 (toList!732 lt!31733)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun e!47457 () Bool)

(assert (=> d!16629 (= lt!32281 e!47457)))

(declare-fun res!38558 () Bool)

(assert (=> d!16629 (=> (not res!38558) (not e!47457))))

(assert (=> d!16629 (= res!38558 ((_ is Cons!1500) (toList!732 lt!31733)))))

(assert (=> d!16629 (= (contains!728 (toList!732 lt!31733) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!32281)))

(declare-fun b!72548 () Bool)

(declare-fun e!47456 () Bool)

(assert (=> b!72548 (= e!47457 e!47456)))

(declare-fun res!38557 () Bool)

(assert (=> b!72548 (=> res!38557 e!47456)))

(assert (=> b!72548 (= res!38557 (= (h!2086 (toList!732 lt!31733)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!72549 () Bool)

(assert (=> b!72549 (= e!47456 (contains!728 (t!5044 (toList!732 lt!31733)) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!16629 res!38558) b!72548))

(assert (= (and b!72548 (not res!38557)) b!72549))

(declare-fun m!70535 () Bool)

(assert (=> d!16629 m!70535))

(declare-fun m!70537 () Bool)

(assert (=> d!16629 m!70537))

(declare-fun m!70539 () Bool)

(assert (=> b!72549 m!70539))

(assert (=> b!71507 d!16629))

(assert (=> b!71466 d!16423))

(assert (=> b!71466 d!16425))

(declare-fun d!16631 () Bool)

(assert (=> d!16631 (= (inRange!0 (ite c!10398 (index!3110 lt!31651) (index!3113 lt!31651)) (mask!6149 newMap!16)) (and (bvsge (ite c!10398 (index!3110 lt!31651) (index!3113 lt!31651)) #b00000000000000000000000000000000) (bvslt (ite c!10398 (index!3110 lt!31651) (index!3113 lt!31651)) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6180 d!16631))

(declare-fun d!16633 () Bool)

(assert (=> d!16633 (= (apply!74 lt!31786 (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1150 (getValueByKey!131 (toList!732 lt!31786) (select (arr!1852 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3111 () Bool)

(assert (= bs!3111 d!16633))

(assert (=> bs!3111 m!68067))

(assert (=> bs!3111 m!69347))

(assert (=> bs!3111 m!69347))

(declare-fun m!70541 () Bool)

(assert (=> bs!3111 m!70541))

(assert (=> b!71584 d!16633))

(declare-fun d!16635 () Bool)

(declare-fun c!10725 () Bool)

(assert (=> d!16635 (= c!10725 ((_ is ValueCellFull!891) (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!47458 () V!2939)

(assert (=> d!16635 (= (get!1146 (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47458)))

(declare-fun b!72550 () Bool)

(assert (=> b!72550 (= e!47458 (get!1148 (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72551 () Bool)

(assert (=> b!72551 (= e!47458 (get!1149 (select (arr!1853 (ite c!10291 (_values!2175 newMap!16) (array!3883 (store (arr!1853 (_values!2175 newMap!16)) (index!3111 lt!31339) (ValueCellFull!891 lt!31204)) (size!2090 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16635 c!10725) b!72550))

(assert (= (and d!16635 (not c!10725)) b!72551))

(assert (=> b!72550 m!68811))

(assert (=> b!72550 m!68529))

(declare-fun m!70543 () Bool)

(assert (=> b!72550 m!70543))

(assert (=> b!72551 m!68811))

(assert (=> b!72551 m!68529))

(declare-fun m!70545 () Bool)

(assert (=> b!72551 m!70545))

(assert (=> b!71584 d!16635))

(declare-fun d!16637 () Bool)

(assert (=> d!16637 (= (get!1150 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2521 (getValueByKey!131 (toList!732 lt!31396) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15843 d!16637))

(assert (=> d!15843 d!16425))

(declare-fun d!16639 () Bool)

(declare-fun c!10726 () Bool)

(assert (=> d!16639 (= c!10726 (and ((_ is Cons!1500) (toList!732 lt!31625)) (= (_1!1079 (h!2086 (toList!732 lt!31625))) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47459 () Option!137)

(assert (=> d!16639 (= (getValueByKey!131 (toList!732 lt!31625) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47459)))

(declare-fun b!72552 () Bool)

(assert (=> b!72552 (= e!47459 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31625)))))))

(declare-fun e!47460 () Option!137)

(declare-fun b!72554 () Bool)

(assert (=> b!72554 (= e!47460 (getValueByKey!131 (t!5044 (toList!732 lt!31625)) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72553 () Bool)

(assert (=> b!72553 (= e!47459 e!47460)))

(declare-fun c!10727 () Bool)

(assert (=> b!72553 (= c!10727 (and ((_ is Cons!1500) (toList!732 lt!31625)) (not (= (_1!1079 (h!2086 (toList!732 lt!31625))) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72555 () Bool)

(assert (=> b!72555 (= e!47460 None!135)))

(assert (= (and d!16639 c!10726) b!72552))

(assert (= (and d!16639 (not c!10726)) b!72553))

(assert (= (and b!72553 c!10727) b!72554))

(assert (= (and b!72553 (not c!10727)) b!72555))

(declare-fun m!70547 () Bool)

(assert (=> b!72554 m!70547))

(assert (=> b!71331 d!16639))

(assert (=> b!71180 d!16491))

(assert (=> b!71557 d!16045))

(declare-fun d!16641 () Bool)

(declare-fun res!38559 () Bool)

(declare-fun e!47461 () Bool)

(assert (=> d!16641 (=> res!38559 e!47461)))

(assert (=> d!16641 (= res!38559 (and ((_ is Cons!1500) (toList!732 lt!31426)) (= (_1!1079 (h!2086 (toList!732 lt!31426))) (_1!1079 lt!31205))))))

(assert (=> d!16641 (= (containsKey!135 (toList!732 lt!31426) (_1!1079 lt!31205)) e!47461)))

(declare-fun b!72556 () Bool)

(declare-fun e!47462 () Bool)

(assert (=> b!72556 (= e!47461 e!47462)))

(declare-fun res!38560 () Bool)

(assert (=> b!72556 (=> (not res!38560) (not e!47462))))

(assert (=> b!72556 (= res!38560 (and (or (not ((_ is Cons!1500) (toList!732 lt!31426))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31426))) (_1!1079 lt!31205))) ((_ is Cons!1500) (toList!732 lt!31426)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31426))) (_1!1079 lt!31205))))))

(declare-fun b!72557 () Bool)

(assert (=> b!72557 (= e!47462 (containsKey!135 (t!5044 (toList!732 lt!31426)) (_1!1079 lt!31205)))))

(assert (= (and d!16641 (not res!38559)) b!72556))

(assert (= (and b!72556 res!38560) b!72557))

(declare-fun m!70549 () Bool)

(assert (=> b!72557 m!70549))

(assert (=> d!15861 d!16641))

(declare-fun d!16643 () Bool)

(declare-fun c!10728 () Bool)

(assert (=> d!16643 (= c!10728 (and ((_ is Cons!1500) (t!5044 lt!31450)) (= (_1!1079 (h!2086 (t!5044 lt!31450))) (_1!1079 lt!31200))))))

(declare-fun e!47463 () Option!137)

(assert (=> d!16643 (= (getValueByKey!131 (t!5044 lt!31450) (_1!1079 lt!31200)) e!47463)))

(declare-fun b!72558 () Bool)

(assert (=> b!72558 (= e!47463 (Some!136 (_2!1079 (h!2086 (t!5044 lt!31450)))))))

(declare-fun b!72560 () Bool)

(declare-fun e!47464 () Option!137)

(assert (=> b!72560 (= e!47464 (getValueByKey!131 (t!5044 (t!5044 lt!31450)) (_1!1079 lt!31200)))))

(declare-fun b!72559 () Bool)

(assert (=> b!72559 (= e!47463 e!47464)))

(declare-fun c!10729 () Bool)

(assert (=> b!72559 (= c!10729 (and ((_ is Cons!1500) (t!5044 lt!31450)) (not (= (_1!1079 (h!2086 (t!5044 lt!31450))) (_1!1079 lt!31200)))))))

(declare-fun b!72561 () Bool)

(assert (=> b!72561 (= e!47464 None!135)))

(assert (= (and d!16643 c!10728) b!72558))

(assert (= (and d!16643 (not c!10728)) b!72559))

(assert (= (and b!72559 c!10729) b!72560))

(assert (= (and b!72559 (not c!10729)) b!72561))

(declare-fun m!70551 () Bool)

(assert (=> b!72560 m!70551))

(assert (=> b!71472 d!16643))

(declare-fun d!16645 () Bool)

(declare-fun lt!32282 () Bool)

(assert (=> d!16645 (= lt!32282 (select (content!74 lt!31461) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun e!47466 () Bool)

(assert (=> d!16645 (= lt!32282 e!47466)))

(declare-fun res!38562 () Bool)

(assert (=> d!16645 (=> (not res!38562) (not e!47466))))

(assert (=> d!16645 (= res!38562 ((_ is Cons!1500) lt!31461))))

(assert (=> d!16645 (= (contains!728 lt!31461 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))) lt!32282)))

(declare-fun b!72562 () Bool)

(declare-fun e!47465 () Bool)

(assert (=> b!72562 (= e!47466 e!47465)))

(declare-fun res!38561 () Bool)

(assert (=> b!72562 (=> res!38561 e!47465)))

(assert (=> b!72562 (= res!38561 (= (h!2086 lt!31461) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!72563 () Bool)

(assert (=> b!72563 (= e!47465 (contains!728 (t!5044 lt!31461) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(assert (= (and d!16645 res!38562) b!72562))

(assert (= (and b!72562 (not res!38561)) b!72563))

(declare-fun m!70553 () Bool)

(assert (=> d!16645 m!70553))

(declare-fun m!70555 () Bool)

(assert (=> d!16645 m!70555))

(declare-fun m!70557 () Bool)

(assert (=> b!72563 m!70557))

(assert (=> b!71398 d!16645))

(declare-fun d!16647 () Bool)

(assert (=> d!16647 (isDefined!85 (getValueByKey!131 (toList!732 lt!31451) (_1!1079 lt!31200)))))

(declare-fun lt!32283 () Unit!2006)

(assert (=> d!16647 (= lt!32283 (choose!405 (toList!732 lt!31451) (_1!1079 lt!31200)))))

(declare-fun e!47467 () Bool)

(assert (=> d!16647 e!47467))

(declare-fun res!38563 () Bool)

(assert (=> d!16647 (=> (not res!38563) (not e!47467))))

(assert (=> d!16647 (= res!38563 (isStrictlySorted!286 (toList!732 lt!31451)))))

(assert (=> d!16647 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31451) (_1!1079 lt!31200)) lt!32283)))

(declare-fun b!72564 () Bool)

(assert (=> b!72564 (= e!47467 (containsKey!135 (toList!732 lt!31451) (_1!1079 lt!31200)))))

(assert (= (and d!16647 res!38563) b!72564))

(assert (=> d!16647 m!68009))

(assert (=> d!16647 m!68009))

(assert (=> d!16647 m!68547))

(declare-fun m!70559 () Bool)

(assert (=> d!16647 m!70559))

(declare-fun m!70561 () Bool)

(assert (=> d!16647 m!70561))

(assert (=> b!72564 m!68543))

(assert (=> b!71467 d!16647))

(assert (=> b!71467 d!16029))

(assert (=> b!71467 d!15915))

(declare-fun d!16649 () Bool)

(declare-fun e!47468 () Bool)

(assert (=> d!16649 e!47468))

(declare-fun res!38565 () Bool)

(assert (=> d!16649 (=> (not res!38565) (not e!47468))))

(declare-fun lt!32287 () ListLongMap!1433)

(assert (=> d!16649 (= res!38565 (contains!726 lt!32287 (_1!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun lt!32286 () List!1504)

(assert (=> d!16649 (= lt!32287 (ListLongMap!1434 lt!32286))))

(declare-fun lt!32285 () Unit!2006)

(declare-fun lt!32284 () Unit!2006)

(assert (=> d!16649 (= lt!32285 lt!32284)))

(assert (=> d!16649 (= (getValueByKey!131 lt!32286 (_1!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16649 (= lt!32284 (lemmaContainsTupThenGetReturnValue!50 lt!32286 (_1!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16649 (= lt!32286 (insertStrictlySorted!52 (toList!732 (ite c!10445 call!6210 (ite c!10441 call!6205 call!6209))) (_1!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16649 (= (+!95 (ite c!10445 call!6210 (ite c!10441 call!6205 call!6209)) (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) lt!32287)))

(declare-fun b!72565 () Bool)

(declare-fun res!38564 () Bool)

(assert (=> b!72565 (=> (not res!38564) (not e!47468))))

(assert (=> b!72565 (= res!38564 (= (getValueByKey!131 (toList!732 lt!32287) (_1!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))))

(declare-fun b!72566 () Bool)

(assert (=> b!72566 (= e!47468 (contains!728 (toList!732 lt!32287) (ite (or c!10445 c!10441) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (= (and d!16649 res!38565) b!72565))

(assert (= (and b!72565 res!38564) b!72566))

(declare-fun m!70563 () Bool)

(assert (=> d!16649 m!70563))

(declare-fun m!70565 () Bool)

(assert (=> d!16649 m!70565))

(declare-fun m!70567 () Bool)

(assert (=> d!16649 m!70567))

(declare-fun m!70569 () Bool)

(assert (=> d!16649 m!70569))

(declare-fun m!70571 () Bool)

(assert (=> b!72565 m!70571))

(declare-fun m!70573 () Bool)

(assert (=> b!72566 m!70573))

(assert (=> bm!6202 d!16649))

(declare-fun b!72567 () Bool)

(declare-fun e!47469 () (_ BitVec 32))

(declare-fun call!6327 () (_ BitVec 32))

(assert (=> b!72567 (= e!47469 call!6327)))

(declare-fun b!72568 () Bool)

(declare-fun e!47470 () (_ BitVec 32))

(assert (=> b!72568 (= e!47470 #b00000000000000000000000000000000)))

(declare-fun bm!6324 () Bool)

(assert (=> bm!6324 (= call!6327 (arrayCountValidKeys!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun b!72569 () Bool)

(assert (=> b!72569 (= e!47470 e!47469)))

(declare-fun c!10731 () Bool)

(assert (=> b!72569 (= c!10731 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!72570 () Bool)

(assert (=> b!72570 (= e!47469 (bvadd #b00000000000000000000000000000001 call!6327))))

(declare-fun d!16651 () Bool)

(declare-fun lt!32288 () (_ BitVec 32))

(assert (=> d!16651 (and (bvsge lt!32288 #b00000000000000000000000000000000) (bvsle lt!32288 (bvsub (size!2089 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!16651 (= lt!32288 e!47470)))

(declare-fun c!10730 () Bool)

(assert (=> d!16651 (= c!10730 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16651 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2089 (_keys!3840 newMap!16)) (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16651 (= (arrayCountValidKeys!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))) lt!32288)))

(assert (= (and d!16651 c!10730) b!72568))

(assert (= (and d!16651 (not c!10730)) b!72569))

(assert (= (and b!72569 c!10731) b!72570))

(assert (= (and b!72569 (not c!10731)) b!72567))

(assert (= (or b!72570 b!72567) bm!6324))

(declare-fun m!70575 () Bool)

(assert (=> bm!6324 m!70575))

(assert (=> b!72569 m!69631))

(assert (=> b!72569 m!69631))

(assert (=> b!72569 m!69637))

(assert (=> bm!6200 d!16651))

(declare-fun d!16653 () Bool)

(declare-fun e!47471 () Bool)

(assert (=> d!16653 e!47471))

(declare-fun res!38567 () Bool)

(assert (=> d!16653 (=> (not res!38567) (not e!47471))))

(declare-fun lt!32292 () ListLongMap!1433)

(assert (=> d!16653 (= res!38567 (contains!726 lt!32292 (_1!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16)))))))

(declare-fun lt!32291 () List!1504)

(assert (=> d!16653 (= lt!32292 (ListLongMap!1434 lt!32291))))

(declare-fun lt!32290 () Unit!2006)

(declare-fun lt!32289 () Unit!2006)

(assert (=> d!16653 (= lt!32290 lt!32289)))

(assert (=> d!16653 (= (getValueByKey!131 lt!32291 (_1!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16)))))))

(assert (=> d!16653 (= lt!32289 (lemmaContainsTupThenGetReturnValue!50 lt!32291 (_1!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16)))))))

(assert (=> d!16653 (= lt!32291 (insertStrictlySorted!52 (toList!732 lt!31686) (_1!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16)))))))

(assert (=> d!16653 (= (+!95 lt!31686 (tuple2!2139 lt!31687 (minValue!2096 newMap!16))) lt!32292)))

(declare-fun b!72571 () Bool)

(declare-fun res!38566 () Bool)

(assert (=> b!72571 (=> (not res!38566) (not e!47471))))

(assert (=> b!72571 (= res!38566 (= (getValueByKey!131 (toList!732 lt!32292) (_1!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31687 (minValue!2096 newMap!16))))))))

(declare-fun b!72572 () Bool)

(assert (=> b!72572 (= e!47471 (contains!728 (toList!732 lt!32292) (tuple2!2139 lt!31687 (minValue!2096 newMap!16))))))

(assert (= (and d!16653 res!38567) b!72571))

(assert (= (and b!72571 res!38566) b!72572))

(declare-fun m!70577 () Bool)

(assert (=> d!16653 m!70577))

(declare-fun m!70579 () Bool)

(assert (=> d!16653 m!70579))

(declare-fun m!70581 () Bool)

(assert (=> d!16653 m!70581))

(declare-fun m!70583 () Bool)

(assert (=> d!16653 m!70583))

(declare-fun m!70585 () Bool)

(assert (=> b!72571 m!70585))

(declare-fun m!70587 () Bool)

(assert (=> b!72572 m!70587))

(assert (=> b!71457 d!16653))

(declare-fun d!16655 () Bool)

(assert (=> d!16655 (= (apply!74 (+!95 lt!31685 (tuple2!2139 lt!31681 (minValue!2096 newMap!16))) lt!31682) (apply!74 lt!31685 lt!31682))))

(declare-fun lt!32293 () Unit!2006)

(assert (=> d!16655 (= lt!32293 (choose!410 lt!31685 lt!31681 (minValue!2096 newMap!16) lt!31682))))

(declare-fun e!47472 () Bool)

(assert (=> d!16655 e!47472))

(declare-fun res!38568 () Bool)

(assert (=> d!16655 (=> (not res!38568) (not e!47472))))

(assert (=> d!16655 (= res!38568 (contains!726 lt!31685 lt!31682))))

(assert (=> d!16655 (= (addApplyDifferent!50 lt!31685 lt!31681 (minValue!2096 newMap!16) lt!31682) lt!32293)))

(declare-fun b!72573 () Bool)

(assert (=> b!72573 (= e!47472 (not (= lt!31682 lt!31681)))))

(assert (= (and d!16655 res!38568) b!72573))

(assert (=> d!16655 m!68499))

(assert (=> d!16655 m!68505))

(assert (=> d!16655 m!68515))

(declare-fun m!70589 () Bool)

(assert (=> d!16655 m!70589))

(declare-fun m!70591 () Bool)

(assert (=> d!16655 m!70591))

(assert (=> d!16655 m!68499))

(assert (=> b!71457 d!16655))

(declare-fun d!16657 () Bool)

(assert (=> d!16657 (contains!726 (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))) lt!31696)))

(declare-fun lt!32294 () Unit!2006)

(assert (=> d!16657 (= lt!32294 (choose!411 lt!31684 lt!31701 (zeroValue!2096 newMap!16) lt!31696))))

(assert (=> d!16657 (contains!726 lt!31684 lt!31696)))

(assert (=> d!16657 (= (addStillContains!50 lt!31684 lt!31701 (zeroValue!2096 newMap!16) lt!31696) lt!32294)))

(declare-fun bs!3112 () Bool)

(assert (= bs!3112 d!16657))

(assert (=> bs!3112 m!68493))

(assert (=> bs!3112 m!68493))

(assert (=> bs!3112 m!68501))

(declare-fun m!70593 () Bool)

(assert (=> bs!3112 m!70593))

(declare-fun m!70595 () Bool)

(assert (=> bs!3112 m!70595))

(assert (=> b!71457 d!16657))

(declare-fun d!16659 () Bool)

(declare-fun e!47473 () Bool)

(assert (=> d!16659 e!47473))

(declare-fun res!38570 () Bool)

(assert (=> d!16659 (=> (not res!38570) (not e!47473))))

(declare-fun lt!32298 () ListLongMap!1433)

(assert (=> d!16659 (= res!38570 (contains!726 lt!32298 (_1!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!32297 () List!1504)

(assert (=> d!16659 (= lt!32298 (ListLongMap!1434 lt!32297))))

(declare-fun lt!32296 () Unit!2006)

(declare-fun lt!32295 () Unit!2006)

(assert (=> d!16659 (= lt!32296 lt!32295)))

(assert (=> d!16659 (= (getValueByKey!131 lt!32297 (_1!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16659 (= lt!32295 (lemmaContainsTupThenGetReturnValue!50 lt!32297 (_1!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16659 (= lt!32297 (insertStrictlySorted!52 (toList!732 lt!31695) (_1!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16659 (= (+!95 lt!31695 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))) lt!32298)))

(declare-fun b!72574 () Bool)

(declare-fun res!38569 () Bool)

(assert (=> b!72574 (=> (not res!38569) (not e!47473))))

(assert (=> b!72574 (= res!38569 (= (getValueByKey!131 (toList!732 lt!32298) (_1!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))))))))

(declare-fun b!72575 () Bool)

(assert (=> b!72575 (= e!47473 (contains!728 (toList!732 lt!32298) (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16659 res!38570) b!72574))

(assert (= (and b!72574 res!38569) b!72575))

(declare-fun m!70597 () Bool)

(assert (=> d!16659 m!70597))

(declare-fun m!70599 () Bool)

(assert (=> d!16659 m!70599))

(declare-fun m!70601 () Bool)

(assert (=> d!16659 m!70601))

(declare-fun m!70603 () Bool)

(assert (=> d!16659 m!70603))

(declare-fun m!70605 () Bool)

(assert (=> b!72574 m!70605))

(declare-fun m!70607 () Bool)

(assert (=> b!72575 m!70607))

(assert (=> b!71457 d!16659))

(declare-fun d!16661 () Bool)

(assert (=> d!16661 (= (apply!74 (+!95 lt!31686 (tuple2!2139 lt!31687 (minValue!2096 newMap!16))) lt!31688) (apply!74 lt!31686 lt!31688))))

(declare-fun lt!32299 () Unit!2006)

(assert (=> d!16661 (= lt!32299 (choose!410 lt!31686 lt!31687 (minValue!2096 newMap!16) lt!31688))))

(declare-fun e!47474 () Bool)

(assert (=> d!16661 e!47474))

(declare-fun res!38571 () Bool)

(assert (=> d!16661 (=> (not res!38571) (not e!47474))))

(assert (=> d!16661 (= res!38571 (contains!726 lt!31686 lt!31688))))

(assert (=> d!16661 (= (addApplyDifferent!50 lt!31686 lt!31687 (minValue!2096 newMap!16) lt!31688) lt!32299)))

(declare-fun b!72576 () Bool)

(assert (=> b!72576 (= e!47474 (not (= lt!31688 lt!31687)))))

(assert (= (and d!16661 res!38571) b!72576))

(assert (=> d!16661 m!68507))

(assert (=> d!16661 m!68509))

(assert (=> d!16661 m!68491))

(declare-fun m!70609 () Bool)

(assert (=> d!16661 m!70609))

(declare-fun m!70611 () Bool)

(assert (=> d!16661 m!70611))

(assert (=> d!16661 m!68507))

(assert (=> b!71457 d!16661))

(declare-fun d!16663 () Bool)

(assert (=> d!16663 (= (apply!74 (+!95 lt!31686 (tuple2!2139 lt!31687 (minValue!2096 newMap!16))) lt!31688) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31686 (tuple2!2139 lt!31687 (minValue!2096 newMap!16)))) lt!31688)))))

(declare-fun bs!3113 () Bool)

(assert (= bs!3113 d!16663))

(declare-fun m!70613 () Bool)

(assert (=> bs!3113 m!70613))

(assert (=> bs!3113 m!70613))

(declare-fun m!70615 () Bool)

(assert (=> bs!3113 m!70615))

(assert (=> b!71457 d!16663))

(declare-fun d!16665 () Bool)

(assert (=> d!16665 (= (apply!74 lt!31686 lt!31688) (get!1150 (getValueByKey!131 (toList!732 lt!31686) lt!31688)))))

(declare-fun bs!3114 () Bool)

(assert (= bs!3114 d!16665))

(declare-fun m!70617 () Bool)

(assert (=> bs!3114 m!70617))

(assert (=> bs!3114 m!70617))

(declare-fun m!70619 () Bool)

(assert (=> bs!3114 m!70619))

(assert (=> b!71457 d!16665))

(declare-fun d!16667 () Bool)

(declare-fun e!47475 () Bool)

(assert (=> d!16667 e!47475))

(declare-fun res!38573 () Bool)

(assert (=> d!16667 (=> (not res!38573) (not e!47475))))

(declare-fun lt!32303 () ListLongMap!1433)

(assert (=> d!16667 (= res!38573 (contains!726 lt!32303 (_1!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16)))))))

(declare-fun lt!32302 () List!1504)

(assert (=> d!16667 (= lt!32303 (ListLongMap!1434 lt!32302))))

(declare-fun lt!32301 () Unit!2006)

(declare-fun lt!32300 () Unit!2006)

(assert (=> d!16667 (= lt!32301 lt!32300)))

(assert (=> d!16667 (= (getValueByKey!131 lt!32302 (_1!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16)))))))

(assert (=> d!16667 (= lt!32300 (lemmaContainsTupThenGetReturnValue!50 lt!32302 (_1!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16)))))))

(assert (=> d!16667 (= lt!32302 (insertStrictlySorted!52 (toList!732 lt!31685) (_1!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16)))))))

(assert (=> d!16667 (= (+!95 lt!31685 (tuple2!2139 lt!31681 (minValue!2096 newMap!16))) lt!32303)))

(declare-fun b!72577 () Bool)

(declare-fun res!38572 () Bool)

(assert (=> b!72577 (=> (not res!38572) (not e!47475))))

(assert (=> b!72577 (= res!38572 (= (getValueByKey!131 (toList!732 lt!32303) (_1!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31681 (minValue!2096 newMap!16))))))))

(declare-fun b!72578 () Bool)

(assert (=> b!72578 (= e!47475 (contains!728 (toList!732 lt!32303) (tuple2!2139 lt!31681 (minValue!2096 newMap!16))))))

(assert (= (and d!16667 res!38573) b!72577))

(assert (= (and b!72577 res!38572) b!72578))

(declare-fun m!70621 () Bool)

(assert (=> d!16667 m!70621))

(declare-fun m!70623 () Bool)

(assert (=> d!16667 m!70623))

(declare-fun m!70625 () Bool)

(assert (=> d!16667 m!70625))

(declare-fun m!70627 () Bool)

(assert (=> d!16667 m!70627))

(declare-fun m!70629 () Bool)

(assert (=> b!72577 m!70629))

(declare-fun m!70631 () Bool)

(assert (=> b!72578 m!70631))

(assert (=> b!71457 d!16667))

(declare-fun d!16669 () Bool)

(assert (=> d!16669 (= (apply!74 (+!95 lt!31685 (tuple2!2139 lt!31681 (minValue!2096 newMap!16))) lt!31682) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31685 (tuple2!2139 lt!31681 (minValue!2096 newMap!16)))) lt!31682)))))

(declare-fun bs!3115 () Bool)

(assert (= bs!3115 d!16669))

(declare-fun m!70633 () Bool)

(assert (=> bs!3115 m!70633))

(assert (=> bs!3115 m!70633))

(declare-fun m!70635 () Bool)

(assert (=> bs!3115 m!70635))

(assert (=> b!71457 d!16669))

(declare-fun d!16671 () Bool)

(assert (=> d!16671 (= (apply!74 lt!31685 lt!31682) (get!1150 (getValueByKey!131 (toList!732 lt!31685) lt!31682)))))

(declare-fun bs!3116 () Bool)

(assert (= bs!3116 d!16671))

(declare-fun m!70637 () Bool)

(assert (=> bs!3116 m!70637))

(assert (=> bs!3116 m!70637))

(declare-fun m!70639 () Bool)

(assert (=> bs!3116 m!70639))

(assert (=> b!71457 d!16671))

(assert (=> b!71457 d!16157))

(declare-fun d!16673 () Bool)

(declare-fun e!47476 () Bool)

(assert (=> d!16673 e!47476))

(declare-fun res!38575 () Bool)

(assert (=> d!16673 (=> (not res!38575) (not e!47476))))

(declare-fun lt!32307 () ListLongMap!1433)

(assert (=> d!16673 (= res!38575 (contains!726 lt!32307 (_1!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!32306 () List!1504)

(assert (=> d!16673 (= lt!32307 (ListLongMap!1434 lt!32306))))

(declare-fun lt!32305 () Unit!2006)

(declare-fun lt!32304 () Unit!2006)

(assert (=> d!16673 (= lt!32305 lt!32304)))

(assert (=> d!16673 (= (getValueByKey!131 lt!32306 (_1!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16673 (= lt!32304 (lemmaContainsTupThenGetReturnValue!50 lt!32306 (_1!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16673 (= lt!32306 (insertStrictlySorted!52 (toList!732 lt!31684) (_1!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))) (_2!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16673 (= (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))) lt!32307)))

(declare-fun b!72579 () Bool)

(declare-fun res!38574 () Bool)

(assert (=> b!72579 (=> (not res!38574) (not e!47476))))

(assert (=> b!72579 (= res!38574 (= (getValueByKey!131 (toList!732 lt!32307) (_1!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))) (Some!136 (_2!1079 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))))))))

(declare-fun b!72580 () Bool)

(assert (=> b!72580 (= e!47476 (contains!728 (toList!732 lt!32307) (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16673 res!38575) b!72579))

(assert (= (and b!72579 res!38574) b!72580))

(declare-fun m!70641 () Bool)

(assert (=> d!16673 m!70641))

(declare-fun m!70643 () Bool)

(assert (=> d!16673 m!70643))

(declare-fun m!70645 () Bool)

(assert (=> d!16673 m!70645))

(declare-fun m!70647 () Bool)

(assert (=> d!16673 m!70647))

(declare-fun m!70649 () Bool)

(assert (=> b!72579 m!70649))

(declare-fun m!70651 () Bool)

(assert (=> b!72580 m!70651))

(assert (=> b!71457 d!16673))

(declare-fun d!16675 () Bool)

(assert (=> d!16675 (= (apply!74 (+!95 lt!31695 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))) lt!31698) (apply!74 lt!31695 lt!31698))))

(declare-fun lt!32308 () Unit!2006)

(assert (=> d!16675 (= lt!32308 (choose!410 lt!31695 lt!31691 (zeroValue!2096 newMap!16) lt!31698))))

(declare-fun e!47477 () Bool)

(assert (=> d!16675 e!47477))

(declare-fun res!38576 () Bool)

(assert (=> d!16675 (=> (not res!38576) (not e!47477))))

(assert (=> d!16675 (= res!38576 (contains!726 lt!31695 lt!31698))))

(assert (=> d!16675 (= (addApplyDifferent!50 lt!31695 lt!31691 (zeroValue!2096 newMap!16) lt!31698) lt!32308)))

(declare-fun b!72581 () Bool)

(assert (=> b!72581 (= e!47477 (not (= lt!31698 lt!31691)))))

(assert (= (and d!16675 res!38576) b!72581))

(assert (=> d!16675 m!68511))

(assert (=> d!16675 m!68513))

(assert (=> d!16675 m!68497))

(declare-fun m!70653 () Bool)

(assert (=> d!16675 m!70653))

(declare-fun m!70655 () Bool)

(assert (=> d!16675 m!70655))

(assert (=> d!16675 m!68511))

(assert (=> b!71457 d!16675))

(declare-fun d!16677 () Bool)

(assert (=> d!16677 (= (apply!74 (+!95 lt!31695 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16))) lt!31698) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31695 (tuple2!2139 lt!31691 (zeroValue!2096 newMap!16)))) lt!31698)))))

(declare-fun bs!3117 () Bool)

(assert (= bs!3117 d!16677))

(declare-fun m!70657 () Bool)

(assert (=> bs!3117 m!70657))

(assert (=> bs!3117 m!70657))

(declare-fun m!70659 () Bool)

(assert (=> bs!3117 m!70659))

(assert (=> b!71457 d!16677))

(declare-fun d!16679 () Bool)

(assert (=> d!16679 (= (apply!74 lt!31695 lt!31698) (get!1150 (getValueByKey!131 (toList!732 lt!31695) lt!31698)))))

(declare-fun bs!3118 () Bool)

(assert (= bs!3118 d!16679))

(declare-fun m!70661 () Bool)

(assert (=> bs!3118 m!70661))

(assert (=> bs!3118 m!70661))

(declare-fun m!70663 () Bool)

(assert (=> bs!3118 m!70663))

(assert (=> b!71457 d!16679))

(declare-fun d!16681 () Bool)

(declare-fun e!47478 () Bool)

(assert (=> d!16681 e!47478))

(declare-fun res!38577 () Bool)

(assert (=> d!16681 (=> res!38577 e!47478)))

(declare-fun lt!32311 () Bool)

(assert (=> d!16681 (= res!38577 (not lt!32311))))

(declare-fun lt!32309 () Bool)

(assert (=> d!16681 (= lt!32311 lt!32309)))

(declare-fun lt!32310 () Unit!2006)

(declare-fun e!47479 () Unit!2006)

(assert (=> d!16681 (= lt!32310 e!47479)))

(declare-fun c!10732 () Bool)

(assert (=> d!16681 (= c!10732 lt!32309)))

(assert (=> d!16681 (= lt!32309 (containsKey!135 (toList!732 (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))) lt!31696))))

(assert (=> d!16681 (= (contains!726 (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16))) lt!31696) lt!32311)))

(declare-fun b!72582 () Bool)

(declare-fun lt!32312 () Unit!2006)

(assert (=> b!72582 (= e!47479 lt!32312)))

(assert (=> b!72582 (= lt!32312 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))) lt!31696))))

(assert (=> b!72582 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))) lt!31696))))

(declare-fun b!72583 () Bool)

(declare-fun Unit!2076 () Unit!2006)

(assert (=> b!72583 (= e!47479 Unit!2076)))

(declare-fun b!72584 () Bool)

(assert (=> b!72584 (= e!47478 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31684 (tuple2!2139 lt!31701 (zeroValue!2096 newMap!16)))) lt!31696)))))

(assert (= (and d!16681 c!10732) b!72582))

(assert (= (and d!16681 (not c!10732)) b!72583))

(assert (= (and d!16681 (not res!38577)) b!72584))

(declare-fun m!70665 () Bool)

(assert (=> d!16681 m!70665))

(declare-fun m!70667 () Bool)

(assert (=> b!72582 m!70667))

(declare-fun m!70669 () Bool)

(assert (=> b!72582 m!70669))

(assert (=> b!72582 m!70669))

(declare-fun m!70671 () Bool)

(assert (=> b!72582 m!70671))

(assert (=> b!72584 m!70669))

(assert (=> b!72584 m!70669))

(assert (=> b!72584 m!70671))

(assert (=> b!71457 d!16681))

(declare-fun d!16683 () Bool)

(declare-fun lt!32313 () Bool)

(assert (=> d!16683 (= lt!32313 (select (content!74 lt!31457) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun e!47481 () Bool)

(assert (=> d!16683 (= lt!32313 e!47481)))

(declare-fun res!38579 () Bool)

(assert (=> d!16683 (=> (not res!38579) (not e!47481))))

(assert (=> d!16683 (= res!38579 ((_ is Cons!1500) lt!31457))))

(assert (=> d!16683 (= (contains!728 lt!31457 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))) lt!32313)))

(declare-fun b!72585 () Bool)

(declare-fun e!47480 () Bool)

(assert (=> b!72585 (= e!47481 e!47480)))

(declare-fun res!38578 () Bool)

(assert (=> b!72585 (=> res!38578 e!47480)))

(assert (=> b!72585 (= res!38578 (= (h!2086 lt!31457) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!72586 () Bool)

(assert (=> b!72586 (= e!47480 (contains!728 (t!5044 lt!31457) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(assert (= (and d!16683 res!38579) b!72585))

(assert (= (and b!72585 (not res!38578)) b!72586))

(declare-fun m!70673 () Bool)

(assert (=> d!16683 m!70673))

(declare-fun m!70675 () Bool)

(assert (=> d!16683 m!70675))

(declare-fun m!70677 () Bool)

(assert (=> b!72586 m!70677))

(assert (=> b!71432 d!16683))

(declare-fun d!16685 () Bool)

(declare-fun e!47482 () Bool)

(assert (=> d!16685 e!47482))

(declare-fun res!38580 () Bool)

(assert (=> d!16685 (=> res!38580 e!47482)))

(declare-fun lt!32316 () Bool)

(assert (=> d!16685 (= res!38580 (not lt!32316))))

(declare-fun lt!32314 () Bool)

(assert (=> d!16685 (= lt!32316 lt!32314)))

(declare-fun lt!32315 () Unit!2006)

(declare-fun e!47483 () Unit!2006)

(assert (=> d!16685 (= lt!32315 e!47483)))

(declare-fun c!10733 () Bool)

(assert (=> d!16685 (= c!10733 lt!32314)))

(assert (=> d!16685 (= lt!32314 (containsKey!135 (toList!732 lt!31683) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16685 (= (contains!726 lt!31683 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32316)))

(declare-fun b!72587 () Bool)

(declare-fun lt!32317 () Unit!2006)

(assert (=> b!72587 (= e!47483 lt!32317)))

(assert (=> b!72587 (= lt!32317 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31683) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72587 (isDefined!85 (getValueByKey!131 (toList!732 lt!31683) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72588 () Bool)

(declare-fun Unit!2077 () Unit!2006)

(assert (=> b!72588 (= e!47483 Unit!2077)))

(declare-fun b!72589 () Bool)

(assert (=> b!72589 (= e!47482 (isDefined!85 (getValueByKey!131 (toList!732 lt!31683) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16685 c!10733) b!72587))

(assert (= (and d!16685 (not c!10733)) b!72588))

(assert (= (and d!16685 (not res!38580)) b!72589))

(declare-fun m!70679 () Bool)

(assert (=> d!16685 m!70679))

(declare-fun m!70681 () Bool)

(assert (=> b!72587 m!70681))

(assert (=> b!72587 m!69833))

(assert (=> b!72587 m!69833))

(declare-fun m!70683 () Bool)

(assert (=> b!72587 m!70683))

(assert (=> b!72589 m!69833))

(assert (=> b!72589 m!69833))

(assert (=> b!72589 m!70683))

(assert (=> bm!6191 d!16685))

(declare-fun d!16687 () Bool)

(assert (=> d!16687 (= (size!2093 newMap!16) (bvadd (_size!394 newMap!16) (bvsdiv (bvadd (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!71191 d!16687))

(assert (=> b!71525 d!16519))

(assert (=> b!71525 d!16521))

(declare-fun d!16689 () Bool)

(declare-fun res!38581 () Bool)

(declare-fun e!47484 () Bool)

(assert (=> d!16689 (=> res!38581 e!47484)))

(assert (=> d!16689 (= res!38581 (and ((_ is Cons!1500) (toList!732 lt!31396)) (= (_1!1079 (h!2086 (toList!732 lt!31396))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16689 (= (containsKey!135 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47484)))

(declare-fun b!72590 () Bool)

(declare-fun e!47485 () Bool)

(assert (=> b!72590 (= e!47484 e!47485)))

(declare-fun res!38582 () Bool)

(assert (=> b!72590 (=> (not res!38582) (not e!47485))))

(assert (=> b!72590 (= res!38582 (and (or (not ((_ is Cons!1500) (toList!732 lt!31396))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31396))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1500) (toList!732 lt!31396)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31396))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!72591 () Bool)

(assert (=> b!72591 (= e!47485 (containsKey!135 (t!5044 (toList!732 lt!31396)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16689 (not res!38581)) b!72590))

(assert (= (and b!72590 res!38582) b!72591))

(assert (=> b!72591 m!67827))

(declare-fun m!70685 () Bool)

(assert (=> b!72591 m!70685))

(assert (=> d!16021 d!16689))

(declare-fun d!16691 () Bool)

(assert (=> d!16691 (= (apply!74 lt!31476 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1150 (getValueByKey!131 (toList!732 lt!31476) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3119 () Bool)

(assert (= bs!3119 d!16691))

(assert (=> bs!3119 m!68081))

(assert (=> bs!3119 m!70175))

(assert (=> bs!3119 m!70175))

(declare-fun m!70687 () Bool)

(assert (=> bs!3119 m!70687))

(assert (=> b!71173 d!16691))

(assert (=> b!71173 d!16561))

(declare-fun b!72592 () Bool)

(declare-fun e!47486 () Bool)

(declare-fun call!6328 () Bool)

(assert (=> b!72592 (= e!47486 call!6328)))

(declare-fun b!72593 () Bool)

(declare-fun e!47488 () Bool)

(assert (=> b!72593 (= e!47488 call!6328)))

(declare-fun b!72594 () Bool)

(assert (=> b!72594 (= e!47488 e!47486)))

(declare-fun lt!32319 () (_ BitVec 64))

(assert (=> b!72594 (= lt!32319 (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!32320 () Unit!2006)

(assert (=> b!72594 (= lt!32320 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 newMap!16) lt!32319 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!72594 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!32319 #b00000000000000000000000000000000)))

(declare-fun lt!32318 () Unit!2006)

(assert (=> b!72594 (= lt!32318 lt!32320)))

(declare-fun res!38584 () Bool)

(assert (=> b!72594 (= res!38584 (= (seekEntryOrOpen!0 (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3840 newMap!16) (mask!6149 newMap!16)) (Found!245 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!72594 (=> (not res!38584) (not e!47486))))

(declare-fun bm!6325 () Bool)

(assert (=> bm!6325 (= call!6328 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun d!16693 () Bool)

(declare-fun res!38583 () Bool)

(declare-fun e!47487 () Bool)

(assert (=> d!16693 (=> res!38583 e!47487)))

(assert (=> d!16693 (= res!38583 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2089 (_keys!3840 newMap!16))))))

(assert (=> d!16693 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 newMap!16) (mask!6149 newMap!16)) e!47487)))

(declare-fun b!72595 () Bool)

(assert (=> b!72595 (= e!47487 e!47488)))

(declare-fun c!10734 () Bool)

(assert (=> b!72595 (= c!10734 (validKeyInArray!0 (select (arr!1852 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!16693 (not res!38583)) b!72595))

(assert (= (and b!72595 c!10734) b!72594))

(assert (= (and b!72595 (not c!10734)) b!72593))

(assert (= (and b!72594 res!38584) b!72592))

(assert (= (or b!72592 b!72593) bm!6325))

(assert (=> b!72594 m!69631))

(declare-fun m!70689 () Bool)

(assert (=> b!72594 m!70689))

(declare-fun m!70691 () Bool)

(assert (=> b!72594 m!70691))

(assert (=> b!72594 m!69631))

(declare-fun m!70693 () Bool)

(assert (=> b!72594 m!70693))

(declare-fun m!70695 () Bool)

(assert (=> bm!6325 m!70695))

(assert (=> b!72595 m!69631))

(assert (=> b!72595 m!69631))

(assert (=> b!72595 m!69637))

(assert (=> bm!6152 d!16693))

(declare-fun d!16695 () Bool)

(assert (=> d!16695 (isDefined!85 (getValueByKey!131 (toList!732 lt!31426) (_1!1079 lt!31205)))))

(declare-fun lt!32321 () Unit!2006)

(assert (=> d!16695 (= lt!32321 (choose!405 (toList!732 lt!31426) (_1!1079 lt!31205)))))

(declare-fun e!47489 () Bool)

(assert (=> d!16695 e!47489))

(declare-fun res!38585 () Bool)

(assert (=> d!16695 (=> (not res!38585) (not e!47489))))

(assert (=> d!16695 (= res!38585 (isStrictlySorted!286 (toList!732 lt!31426)))))

(assert (=> d!16695 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31426) (_1!1079 lt!31205)) lt!32321)))

(declare-fun b!72596 () Bool)

(assert (=> b!72596 (= e!47489 (containsKey!135 (toList!732 lt!31426) (_1!1079 lt!31205)))))

(assert (= (and d!16695 res!38585) b!72596))

(assert (=> d!16695 m!67977))

(assert (=> d!16695 m!67977))

(assert (=> d!16695 m!68159))

(declare-fun m!70697 () Bool)

(assert (=> d!16695 m!70697))

(declare-fun m!70699 () Bool)

(assert (=> d!16695 m!70699))

(assert (=> b!72596 m!68155))

(assert (=> b!71211 d!16695))

(assert (=> b!71211 d!16121))

(assert (=> b!71211 d!15941))

(declare-fun d!16697 () Bool)

(assert (not d!16697))

(assert (=> b!71603 d!16697))

(assert (=> b!71585 d!16221))

(declare-fun d!16699 () Bool)

(declare-fun e!47490 () Bool)

(assert (=> d!16699 e!47490))

(declare-fun res!38587 () Bool)

(assert (=> d!16699 (=> (not res!38587) (not e!47490))))

(declare-fun lt!32325 () ListLongMap!1433)

(assert (=> d!16699 (= res!38587 (contains!726 lt!32325 (_1!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(declare-fun lt!32324 () List!1504)

(assert (=> d!16699 (= lt!32325 (ListLongMap!1434 lt!32324))))

(declare-fun lt!32323 () Unit!2006)

(declare-fun lt!32322 () Unit!2006)

(assert (=> d!16699 (= lt!32323 lt!32322)))

(assert (=> d!16699 (= (getValueByKey!131 lt!32324 (_1!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16699 (= lt!32322 (lemmaContainsTupThenGetReturnValue!50 lt!32324 (_1!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16699 (= lt!32324 (insertStrictlySorted!52 (toList!732 lt!31788) (_1!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16699 (= (+!95 lt!31788 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!32325)))

(declare-fun b!72597 () Bool)

(declare-fun res!38586 () Bool)

(assert (=> b!72597 (=> (not res!38586) (not e!47490))))

(assert (=> b!72597 (= res!38586 (= (getValueByKey!131 (toList!732 lt!32325) (_1!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))))

(declare-fun b!72598 () Bool)

(assert (=> b!72598 (= e!47490 (contains!728 (toList!732 lt!32325) (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))

(assert (= (and d!16699 res!38587) b!72597))

(assert (= (and b!72597 res!38586) b!72598))

(declare-fun m!70701 () Bool)

(assert (=> d!16699 m!70701))

(declare-fun m!70703 () Bool)

(assert (=> d!16699 m!70703))

(declare-fun m!70705 () Bool)

(assert (=> d!16699 m!70705))

(declare-fun m!70707 () Bool)

(assert (=> d!16699 m!70707))

(declare-fun m!70709 () Bool)

(assert (=> b!72597 m!70709))

(declare-fun m!70711 () Bool)

(assert (=> b!72598 m!70711))

(assert (=> b!71585 d!16699))

(declare-fun d!16701 () Bool)

(assert (=> d!16701 (= (apply!74 lt!31788 lt!31785) (get!1150 (getValueByKey!131 (toList!732 lt!31788) lt!31785)))))

(declare-fun bs!3120 () Bool)

(assert (= bs!3120 d!16701))

(declare-fun m!70713 () Bool)

(assert (=> bs!3120 m!70713))

(assert (=> bs!3120 m!70713))

(declare-fun m!70715 () Bool)

(assert (=> bs!3120 m!70715))

(assert (=> b!71585 d!16701))

(declare-fun d!16703 () Bool)

(assert (=> d!16703 (= (apply!74 (+!95 lt!31788 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!31785) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31788 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) lt!31785)))))

(declare-fun bs!3121 () Bool)

(assert (= bs!3121 d!16703))

(declare-fun m!70717 () Bool)

(assert (=> bs!3121 m!70717))

(assert (=> bs!3121 m!70717))

(declare-fun m!70719 () Bool)

(assert (=> bs!3121 m!70719))

(assert (=> b!71585 d!16703))

(declare-fun d!16705 () Bool)

(declare-fun e!47491 () Bool)

(assert (=> d!16705 e!47491))

(declare-fun res!38588 () Bool)

(assert (=> d!16705 (=> res!38588 e!47491)))

(declare-fun lt!32328 () Bool)

(assert (=> d!16705 (= res!38588 (not lt!32328))))

(declare-fun lt!32326 () Bool)

(assert (=> d!16705 (= lt!32328 lt!32326)))

(declare-fun lt!32327 () Unit!2006)

(declare-fun e!47492 () Unit!2006)

(assert (=> d!16705 (= lt!32327 e!47492)))

(declare-fun c!10735 () Bool)

(assert (=> d!16705 (= c!10735 lt!32326)))

(assert (=> d!16705 (= lt!32326 (containsKey!135 (toList!732 (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) lt!31799))))

(assert (=> d!16705 (= (contains!726 (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!31799) lt!32328)))

(declare-fun b!72599 () Bool)

(declare-fun lt!32329 () Unit!2006)

(assert (=> b!72599 (= e!47492 lt!32329)))

(assert (=> b!72599 (= lt!32329 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) lt!31799))))

(assert (=> b!72599 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) lt!31799))))

(declare-fun b!72600 () Bool)

(declare-fun Unit!2078 () Unit!2006)

(assert (=> b!72600 (= e!47492 Unit!2078)))

(declare-fun b!72601 () Bool)

(assert (=> b!72601 (= e!47491 (isDefined!85 (getValueByKey!131 (toList!732 (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) lt!31799)))))

(assert (= (and d!16705 c!10735) b!72599))

(assert (= (and d!16705 (not c!10735)) b!72600))

(assert (= (and d!16705 (not res!38588)) b!72601))

(declare-fun m!70721 () Bool)

(assert (=> d!16705 m!70721))

(declare-fun m!70723 () Bool)

(assert (=> b!72599 m!70723))

(declare-fun m!70725 () Bool)

(assert (=> b!72599 m!70725))

(assert (=> b!72599 m!70725))

(declare-fun m!70727 () Bool)

(assert (=> b!72599 m!70727))

(assert (=> b!72601 m!70725))

(assert (=> b!72601 m!70725))

(assert (=> b!72601 m!70727))

(assert (=> b!71585 d!16705))

(declare-fun d!16707 () Bool)

(assert (=> d!16707 (= (apply!74 lt!31798 lt!31801) (get!1150 (getValueByKey!131 (toList!732 lt!31798) lt!31801)))))

(declare-fun bs!3122 () Bool)

(assert (= bs!3122 d!16707))

(declare-fun m!70729 () Bool)

(assert (=> bs!3122 m!70729))

(assert (=> bs!3122 m!70729))

(declare-fun m!70731 () Bool)

(assert (=> bs!3122 m!70731))

(assert (=> b!71585 d!16707))

(declare-fun d!16709 () Bool)

(assert (=> d!16709 (= (apply!74 (+!95 lt!31789 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!31791) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31789 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) lt!31791)))))

(declare-fun bs!3123 () Bool)

(assert (= bs!3123 d!16709))

(declare-fun m!70733 () Bool)

(assert (=> bs!3123 m!70733))

(assert (=> bs!3123 m!70733))

(declare-fun m!70735 () Bool)

(assert (=> bs!3123 m!70735))

(assert (=> b!71585 d!16709))

(declare-fun d!16711 () Bool)

(declare-fun e!47493 () Bool)

(assert (=> d!16711 e!47493))

(declare-fun res!38590 () Bool)

(assert (=> d!16711 (=> (not res!38590) (not e!47493))))

(declare-fun lt!32333 () ListLongMap!1433)

(assert (=> d!16711 (= res!38590 (contains!726 lt!32333 (_1!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(declare-fun lt!32332 () List!1504)

(assert (=> d!16711 (= lt!32333 (ListLongMap!1434 lt!32332))))

(declare-fun lt!32331 () Unit!2006)

(declare-fun lt!32330 () Unit!2006)

(assert (=> d!16711 (= lt!32331 lt!32330)))

(assert (=> d!16711 (= (getValueByKey!131 lt!32332 (_1!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16711 (= lt!32330 (lemmaContainsTupThenGetReturnValue!50 lt!32332 (_1!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16711 (= lt!32332 (insertStrictlySorted!52 (toList!732 lt!31798) (_1!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16711 (= (+!95 lt!31798 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!32333)))

(declare-fun b!72602 () Bool)

(declare-fun res!38589 () Bool)

(assert (=> b!72602 (=> (not res!38589) (not e!47493))))

(assert (=> b!72602 (= res!38589 (= (getValueByKey!131 (toList!732 lt!32333) (_1!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))))))))

(declare-fun b!72603 () Bool)

(assert (=> b!72603 (= e!47493 (contains!728 (toList!732 lt!32333) (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))))))

(assert (= (and d!16711 res!38590) b!72602))

(assert (= (and b!72602 res!38589) b!72603))

(declare-fun m!70737 () Bool)

(assert (=> d!16711 m!70737))

(declare-fun m!70739 () Bool)

(assert (=> d!16711 m!70739))

(declare-fun m!70741 () Bool)

(assert (=> d!16711 m!70741))

(declare-fun m!70743 () Bool)

(assert (=> d!16711 m!70743))

(declare-fun m!70745 () Bool)

(assert (=> b!72602 m!70745))

(declare-fun m!70747 () Bool)

(assert (=> b!72603 m!70747))

(assert (=> b!71585 d!16711))

(declare-fun d!16713 () Bool)

(assert (=> d!16713 (= (apply!74 (+!95 lt!31789 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!31791) (apply!74 lt!31789 lt!31791))))

(declare-fun lt!32334 () Unit!2006)

(assert (=> d!16713 (= lt!32334 (choose!410 lt!31789 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) lt!31791))))

(declare-fun e!47494 () Bool)

(assert (=> d!16713 e!47494))

(declare-fun res!38591 () Bool)

(assert (=> d!16713 (=> (not res!38591) (not e!47494))))

(assert (=> d!16713 (= res!38591 (contains!726 lt!31789 lt!31791))))

(assert (=> d!16713 (= (addApplyDifferent!50 lt!31789 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) lt!31791) lt!32334)))

(declare-fun b!72604 () Bool)

(assert (=> b!72604 (= e!47494 (not (= lt!31791 lt!31790)))))

(assert (= (and d!16713 res!38591) b!72604))

(assert (=> d!16713 m!68791))

(assert (=> d!16713 m!68793))

(assert (=> d!16713 m!68775))

(declare-fun m!70749 () Bool)

(assert (=> d!16713 m!70749))

(declare-fun m!70751 () Bool)

(assert (=> d!16713 m!70751))

(assert (=> d!16713 m!68791))

(assert (=> b!71585 d!16713))

(declare-fun d!16715 () Bool)

(assert (=> d!16715 (= (apply!74 (+!95 lt!31798 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!31801) (apply!74 lt!31798 lt!31801))))

(declare-fun lt!32335 () Unit!2006)

(assert (=> d!16715 (= lt!32335 (choose!410 lt!31798 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) lt!31801))))

(declare-fun e!47495 () Bool)

(assert (=> d!16715 e!47495))

(declare-fun res!38592 () Bool)

(assert (=> d!16715 (=> (not res!38592) (not e!47495))))

(assert (=> d!16715 (= res!38592 (contains!726 lt!31798 lt!31801))))

(assert (=> d!16715 (= (addApplyDifferent!50 lt!31798 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) lt!31801) lt!32335)))

(declare-fun b!72605 () Bool)

(assert (=> b!72605 (= e!47495 (not (= lt!31801 lt!31794)))))

(assert (= (and d!16715 res!38592) b!72605))

(assert (=> d!16715 m!68795))

(assert (=> d!16715 m!68797))

(assert (=> d!16715 m!68781))

(declare-fun m!70753 () Bool)

(assert (=> d!16715 m!70753))

(declare-fun m!70755 () Bool)

(assert (=> d!16715 m!70755))

(assert (=> d!16715 m!68795))

(assert (=> b!71585 d!16715))

(declare-fun d!16717 () Bool)

(assert (=> d!16717 (= (apply!74 lt!31789 lt!31791) (get!1150 (getValueByKey!131 (toList!732 lt!31789) lt!31791)))))

(declare-fun bs!3124 () Bool)

(assert (= bs!3124 d!16717))

(declare-fun m!70757 () Bool)

(assert (=> bs!3124 m!70757))

(assert (=> bs!3124 m!70757))

(declare-fun m!70759 () Bool)

(assert (=> bs!3124 m!70759))

(assert (=> b!71585 d!16717))

(declare-fun d!16719 () Bool)

(declare-fun e!47496 () Bool)

(assert (=> d!16719 e!47496))

(declare-fun res!38594 () Bool)

(assert (=> d!16719 (=> (not res!38594) (not e!47496))))

(declare-fun lt!32339 () ListLongMap!1433)

(assert (=> d!16719 (= res!38594 (contains!726 lt!32339 (_1!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(declare-fun lt!32338 () List!1504)

(assert (=> d!16719 (= lt!32339 (ListLongMap!1434 lt!32338))))

(declare-fun lt!32337 () Unit!2006)

(declare-fun lt!32336 () Unit!2006)

(assert (=> d!16719 (= lt!32337 lt!32336)))

(assert (=> d!16719 (= (getValueByKey!131 lt!32338 (_1!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16719 (= lt!32336 (lemmaContainsTupThenGetReturnValue!50 lt!32338 (_1!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16719 (= lt!32338 (insertStrictlySorted!52 (toList!732 lt!31789) (_1!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))))))

(assert (=> d!16719 (= (+!95 lt!31789 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!32339)))

(declare-fun b!72606 () Bool)

(declare-fun res!38593 () Bool)

(assert (=> b!72606 (=> (not res!38593) (not e!47496))))

(assert (=> b!72606 (= res!38593 (= (getValueByKey!131 (toList!732 lt!32339) (_1!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))))

(declare-fun b!72607 () Bool)

(assert (=> b!72607 (= e!47496 (contains!728 (toList!732 lt!32339) (tuple2!2139 lt!31790 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))))))

(assert (= (and d!16719 res!38594) b!72606))

(assert (= (and b!72606 res!38593) b!72607))

(declare-fun m!70761 () Bool)

(assert (=> d!16719 m!70761))

(declare-fun m!70763 () Bool)

(assert (=> d!16719 m!70763))

(declare-fun m!70765 () Bool)

(assert (=> d!16719 m!70765))

(declare-fun m!70767 () Bool)

(assert (=> d!16719 m!70767))

(declare-fun m!70769 () Bool)

(assert (=> b!72606 m!70769))

(declare-fun m!70771 () Bool)

(assert (=> b!72607 m!70771))

(assert (=> b!71585 d!16719))

(declare-fun d!16721 () Bool)

(assert (=> d!16721 (contains!726 (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!31799)))

(declare-fun lt!32340 () Unit!2006)

(assert (=> d!16721 (= lt!32340 (choose!411 lt!31787 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) lt!31799))))

(assert (=> d!16721 (contains!726 lt!31787 lt!31799)))

(assert (=> d!16721 (= (addStillContains!50 lt!31787 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)) lt!31799) lt!32340)))

(declare-fun bs!3125 () Bool)

(assert (= bs!3125 d!16721))

(assert (=> bs!3125 m!68777))

(assert (=> bs!3125 m!68777))

(assert (=> bs!3125 m!68785))

(declare-fun m!70773 () Bool)

(assert (=> bs!3125 m!70773))

(declare-fun m!70775 () Bool)

(assert (=> bs!3125 m!70775))

(assert (=> b!71585 d!16721))

(declare-fun d!16723 () Bool)

(assert (=> d!16723 (= (apply!74 (+!95 lt!31788 (tuple2!2139 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)))) lt!31785) (apply!74 lt!31788 lt!31785))))

(declare-fun lt!32341 () Unit!2006)

(assert (=> d!16723 (= lt!32341 (choose!410 lt!31788 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) lt!31785))))

(declare-fun e!47497 () Bool)

(assert (=> d!16723 e!47497))

(declare-fun res!38595 () Bool)

(assert (=> d!16723 (=> (not res!38595) (not e!47497))))

(assert (=> d!16723 (= res!38595 (contains!726 lt!31788 lt!31785))))

(assert (=> d!16723 (= (addApplyDifferent!50 lt!31788 lt!31784 (ite c!10291 (ite c!10296 (minValue!2096 newMap!16) lt!31204) (minValue!2096 newMap!16)) lt!31785) lt!32341)))

(declare-fun b!72608 () Bool)

(assert (=> b!72608 (= e!47497 (not (= lt!31785 lt!31784)))))

(assert (= (and d!16723 res!38595) b!72608))

(assert (=> d!16723 m!68783))

(assert (=> d!16723 m!68789))

(assert (=> d!16723 m!68799))

(declare-fun m!70777 () Bool)

(assert (=> d!16723 m!70777))

(declare-fun m!70779 () Bool)

(assert (=> d!16723 m!70779))

(assert (=> d!16723 m!68783))

(assert (=> b!71585 d!16723))

(declare-fun d!16725 () Bool)

(declare-fun e!47498 () Bool)

(assert (=> d!16725 e!47498))

(declare-fun res!38597 () Bool)

(assert (=> d!16725 (=> (not res!38597) (not e!47498))))

(declare-fun lt!32345 () ListLongMap!1433)

(assert (=> d!16725 (= res!38597 (contains!726 lt!32345 (_1!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(declare-fun lt!32344 () List!1504)

(assert (=> d!16725 (= lt!32345 (ListLongMap!1434 lt!32344))))

(declare-fun lt!32343 () Unit!2006)

(declare-fun lt!32342 () Unit!2006)

(assert (=> d!16725 (= lt!32343 lt!32342)))

(assert (=> d!16725 (= (getValueByKey!131 lt!32344 (_1!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16725 (= lt!32342 (lemmaContainsTupThenGetReturnValue!50 lt!32344 (_1!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16725 (= lt!32344 (insertStrictlySorted!52 (toList!732 lt!31787) (_1!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) (_2!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16725 (= (+!95 lt!31787 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!32345)))

(declare-fun b!72609 () Bool)

(declare-fun res!38596 () Bool)

(assert (=> b!72609 (=> (not res!38596) (not e!47498))))

(assert (=> b!72609 (= res!38596 (= (getValueByKey!131 (toList!732 lt!32345) (_1!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) (Some!136 (_2!1079 (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))))))))

(declare-fun b!72610 () Bool)

(assert (=> b!72610 (= e!47498 (contains!728 (toList!732 lt!32345) (tuple2!2139 lt!31804 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))))))

(assert (= (and d!16725 res!38597) b!72609))

(assert (= (and b!72609 res!38596) b!72610))

(declare-fun m!70781 () Bool)

(assert (=> d!16725 m!70781))

(declare-fun m!70783 () Bool)

(assert (=> d!16725 m!70783))

(declare-fun m!70785 () Bool)

(assert (=> d!16725 m!70785))

(declare-fun m!70787 () Bool)

(assert (=> d!16725 m!70787))

(declare-fun m!70789 () Bool)

(assert (=> b!72609 m!70789))

(declare-fun m!70791 () Bool)

(assert (=> b!72610 m!70791))

(assert (=> b!71585 d!16725))

(declare-fun d!16727 () Bool)

(assert (=> d!16727 (= (apply!74 (+!95 lt!31798 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16)))) lt!31801) (get!1150 (getValueByKey!131 (toList!732 (+!95 lt!31798 (tuple2!2139 lt!31794 (ite (and c!10291 c!10296) lt!31204 (zeroValue!2096 newMap!16))))) lt!31801)))))

(declare-fun bs!3126 () Bool)

(assert (= bs!3126 d!16727))

(declare-fun m!70793 () Bool)

(assert (=> bs!3126 m!70793))

(assert (=> bs!3126 m!70793))

(declare-fun m!70795 () Bool)

(assert (=> bs!3126 m!70795))

(assert (=> b!71585 d!16727))

(declare-fun d!16729 () Bool)

(declare-fun res!38599 () Bool)

(declare-fun e!47501 () Bool)

(assert (=> d!16729 (=> res!38599 e!47501)))

(assert (=> d!16729 (= res!38599 (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(assert (=> d!16729 (= (arrayNoDuplicates!0 (_keys!3840 (_2!1080 lt!31329)) #b00000000000000000000000000000000 Nil!1500) e!47501)))

(declare-fun b!72611 () Bool)

(declare-fun e!47500 () Bool)

(assert (=> b!72611 (= e!47500 (contains!727 Nil!1500 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(declare-fun b!72612 () Bool)

(declare-fun e!47499 () Bool)

(declare-fun call!6329 () Bool)

(assert (=> b!72612 (= e!47499 call!6329)))

(declare-fun bm!6326 () Bool)

(declare-fun c!10736 () Bool)

(assert (=> bm!6326 (= call!6329 (arrayNoDuplicates!0 (_keys!3840 (_2!1080 lt!31329)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10736 (Cons!1499 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000) Nil!1500) Nil!1500)))))

(declare-fun b!72613 () Bool)

(declare-fun e!47502 () Bool)

(assert (=> b!72613 (= e!47501 e!47502)))

(declare-fun res!38600 () Bool)

(assert (=> b!72613 (=> (not res!38600) (not e!47502))))

(assert (=> b!72613 (= res!38600 (not e!47500))))

(declare-fun res!38598 () Bool)

(assert (=> b!72613 (=> (not res!38598) (not e!47500))))

(assert (=> b!72613 (= res!38598 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(declare-fun b!72614 () Bool)

(assert (=> b!72614 (= e!47499 call!6329)))

(declare-fun b!72615 () Bool)

(assert (=> b!72615 (= e!47502 e!47499)))

(assert (=> b!72615 (= c!10736 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(assert (= (and d!16729 (not res!38599)) b!72613))

(assert (= (and b!72613 res!38598) b!72611))

(assert (= (and b!72613 res!38600) b!72615))

(assert (= (and b!72615 c!10736) b!72614))

(assert (= (and b!72615 (not c!10736)) b!72612))

(assert (= (or b!72614 b!72612) bm!6326))

(assert (=> b!72611 m!70311))

(assert (=> b!72611 m!70311))

(declare-fun m!70797 () Bool)

(assert (=> b!72611 m!70797))

(assert (=> bm!6326 m!70311))

(declare-fun m!70799 () Bool)

(assert (=> bm!6326 m!70799))

(assert (=> b!72613 m!70311))

(assert (=> b!72613 m!70311))

(assert (=> b!72613 m!70313))

(assert (=> b!72615 m!70311))

(assert (=> b!72615 m!70311))

(assert (=> b!72615 m!70313))

(assert (=> b!71539 d!16729))

(declare-fun d!16731 () Bool)

(declare-fun e!47503 () Bool)

(assert (=> d!16731 e!47503))

(declare-fun res!38601 () Bool)

(assert (=> d!16731 (=> res!38601 e!47503)))

(declare-fun lt!32348 () Bool)

(assert (=> d!16731 (= res!38601 (not lt!32348))))

(declare-fun lt!32346 () Bool)

(assert (=> d!16731 (= lt!32348 lt!32346)))

(declare-fun lt!32347 () Unit!2006)

(declare-fun e!47504 () Unit!2006)

(assert (=> d!16731 (= lt!32347 e!47504)))

(declare-fun c!10737 () Bool)

(assert (=> d!16731 (= c!10737 lt!32346)))

(assert (=> d!16731 (= lt!32346 (containsKey!135 (toList!732 lt!31625) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> d!16731 (= (contains!726 lt!31625 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32348)))

(declare-fun b!72616 () Bool)

(declare-fun lt!32349 () Unit!2006)

(assert (=> b!72616 (= e!47504 lt!32349)))

(assert (=> b!72616 (= lt!32349 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31625) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(assert (=> b!72616 (isDefined!85 (getValueByKey!131 (toList!732 lt!31625) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72617 () Bool)

(declare-fun Unit!2079 () Unit!2006)

(assert (=> b!72617 (= e!47504 Unit!2079)))

(declare-fun b!72618 () Bool)

(assert (=> b!72618 (= e!47503 (isDefined!85 (getValueByKey!131 (toList!732 lt!31625) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16731 c!10737) b!72616))

(assert (= (and d!16731 (not c!10737)) b!72617))

(assert (= (and d!16731 (not res!38601)) b!72618))

(declare-fun m!70801 () Bool)

(assert (=> d!16731 m!70801))

(declare-fun m!70803 () Bool)

(assert (=> b!72616 m!70803))

(assert (=> b!72616 m!68315))

(assert (=> b!72616 m!68315))

(declare-fun m!70805 () Bool)

(assert (=> b!72616 m!70805))

(assert (=> b!72618 m!68315))

(assert (=> b!72618 m!68315))

(assert (=> b!72618 m!70805))

(assert (=> d!15895 d!16731))

(declare-fun c!10738 () Bool)

(declare-fun d!16733 () Bool)

(assert (=> d!16733 (= c!10738 (and ((_ is Cons!1500) lt!31624) (= (_1!1079 (h!2086 lt!31624)) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47505 () Option!137)

(assert (=> d!16733 (= (getValueByKey!131 lt!31624 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47505)))

(declare-fun b!72619 () Bool)

(assert (=> b!72619 (= e!47505 (Some!136 (_2!1079 (h!2086 lt!31624))))))

(declare-fun b!72621 () Bool)

(declare-fun e!47506 () Option!137)

(assert (=> b!72621 (= e!47506 (getValueByKey!131 (t!5044 lt!31624) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72620 () Bool)

(assert (=> b!72620 (= e!47505 e!47506)))

(declare-fun c!10739 () Bool)

(assert (=> b!72620 (= c!10739 (and ((_ is Cons!1500) lt!31624) (not (= (_1!1079 (h!2086 lt!31624)) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72622 () Bool)

(assert (=> b!72622 (= e!47506 None!135)))

(assert (= (and d!16733 c!10738) b!72619))

(assert (= (and d!16733 (not c!10738)) b!72620))

(assert (= (and b!72620 c!10739) b!72621))

(assert (= (and b!72620 (not c!10739)) b!72622))

(declare-fun m!70807 () Bool)

(assert (=> b!72621 m!70807))

(assert (=> d!15895 d!16733))

(declare-fun d!16735 () Bool)

(assert (=> d!16735 (= (getValueByKey!131 lt!31624 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) (Some!136 (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun lt!32350 () Unit!2006)

(assert (=> d!16735 (= lt!32350 (choose!407 lt!31624 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun e!47507 () Bool)

(assert (=> d!16735 e!47507))

(declare-fun res!38602 () Bool)

(assert (=> d!16735 (=> (not res!38602) (not e!47507))))

(assert (=> d!16735 (= res!38602 (isStrictlySorted!286 lt!31624))))

(assert (=> d!16735 (= (lemmaContainsTupThenGetReturnValue!50 lt!31624 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32350)))

(declare-fun b!72623 () Bool)

(declare-fun res!38603 () Bool)

(assert (=> b!72623 (=> (not res!38603) (not e!47507))))

(assert (=> b!72623 (= res!38603 (containsKey!135 lt!31624 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72624 () Bool)

(assert (=> b!72624 (= e!47507 (contains!728 lt!31624 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16735 res!38602) b!72623))

(assert (= (and b!72623 res!38603) b!72624))

(assert (=> d!16735 m!68309))

(declare-fun m!70809 () Bool)

(assert (=> d!16735 m!70809))

(declare-fun m!70811 () Bool)

(assert (=> d!16735 m!70811))

(declare-fun m!70813 () Bool)

(assert (=> b!72623 m!70813))

(declare-fun m!70815 () Bool)

(assert (=> b!72624 m!70815))

(assert (=> d!15895 d!16735))

(declare-fun b!72625 () Bool)

(declare-fun e!47509 () List!1504)

(declare-fun call!6331 () List!1504)

(assert (=> b!72625 (= e!47509 call!6331)))

(declare-fun b!72626 () Bool)

(declare-fun res!38604 () Bool)

(declare-fun e!47508 () Bool)

(assert (=> b!72626 (=> (not res!38604) (not e!47508))))

(declare-fun lt!32351 () List!1504)

(assert (=> b!72626 (= res!38604 (containsKey!135 lt!32351 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun c!10741 () Bool)

(declare-fun b!72627 () Bool)

(assert (=> b!72627 (= c!10741 (and ((_ is Cons!1500) (toList!732 lt!31397)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31397))) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47511 () List!1504)

(declare-fun e!47510 () List!1504)

(assert (=> b!72627 (= e!47511 e!47510)))

(declare-fun b!72629 () Bool)

(declare-fun call!6332 () List!1504)

(assert (=> b!72629 (= e!47511 call!6332)))

(declare-fun b!72630 () Bool)

(declare-fun call!6330 () List!1504)

(assert (=> b!72630 (= e!47510 call!6330)))

(declare-fun e!47512 () List!1504)

(declare-fun b!72631 () Bool)

(assert (=> b!72631 (= e!47512 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31397)) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun bm!6327 () Bool)

(assert (=> bm!6327 (= call!6330 call!6332)))

(declare-fun bm!6328 () Bool)

(assert (=> bm!6328 (= call!6332 call!6331)))

(declare-fun bm!6329 () Bool)

(declare-fun c!10740 () Bool)

(assert (=> bm!6329 (= call!6331 ($colon$colon!64 e!47512 (ite c!10740 (h!2086 (toList!732 lt!31397)) (tuple2!2139 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun c!10742 () Bool)

(assert (=> bm!6329 (= c!10742 c!10740)))

(declare-fun c!10743 () Bool)

(declare-fun b!72632 () Bool)

(assert (=> b!72632 (= e!47512 (ite c!10743 (t!5044 (toList!732 lt!31397)) (ite c!10741 (Cons!1500 (h!2086 (toList!732 lt!31397)) (t!5044 (toList!732 lt!31397))) Nil!1501)))))

(declare-fun b!72628 () Bool)

(assert (=> b!72628 (= e!47510 call!6330)))

(declare-fun d!16737 () Bool)

(assert (=> d!16737 e!47508))

(declare-fun res!38605 () Bool)

(assert (=> d!16737 (=> (not res!38605) (not e!47508))))

(assert (=> d!16737 (= res!38605 (isStrictlySorted!286 lt!32351))))

(assert (=> d!16737 (= lt!32351 e!47509)))

(assert (=> d!16737 (= c!10740 (and ((_ is Cons!1500) (toList!732 lt!31397)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31397))) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (=> d!16737 (isStrictlySorted!286 (toList!732 lt!31397))))

(assert (=> d!16737 (= (insertStrictlySorted!52 (toList!732 lt!31397) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992)))))) lt!32351)))

(declare-fun b!72633 () Bool)

(assert (=> b!72633 (= e!47508 (contains!728 lt!32351 (tuple2!2139 (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) (_2!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun b!72634 () Bool)

(assert (=> b!72634 (= e!47509 e!47511)))

(assert (=> b!72634 (= c!10743 (and ((_ is Cons!1500) (toList!732 lt!31397)) (= (_1!1079 (h!2086 (toList!732 lt!31397))) (_1!1079 (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(assert (= (and d!16737 c!10740) b!72625))

(assert (= (and d!16737 (not c!10740)) b!72634))

(assert (= (and b!72634 c!10743) b!72629))

(assert (= (and b!72634 (not c!10743)) b!72627))

(assert (= (and b!72627 c!10741) b!72628))

(assert (= (and b!72627 (not c!10741)) b!72630))

(assert (= (or b!72628 b!72630) bm!6327))

(assert (= (or b!72629 bm!6327) bm!6328))

(assert (= (or b!72625 bm!6328) bm!6329))

(assert (= (and bm!6329 c!10742) b!72631))

(assert (= (and bm!6329 (not c!10742)) b!72632))

(assert (= (and d!16737 res!38605) b!72626))

(assert (= (and b!72626 res!38604) b!72633))

(declare-fun m!70817 () Bool)

(assert (=> bm!6329 m!70817))

(declare-fun m!70819 () Bool)

(assert (=> b!72631 m!70819))

(declare-fun m!70821 () Bool)

(assert (=> b!72626 m!70821))

(declare-fun m!70823 () Bool)

(assert (=> b!72633 m!70823))

(declare-fun m!70825 () Bool)

(assert (=> d!16737 m!70825))

(declare-fun m!70827 () Bool)

(assert (=> d!16737 m!70827))

(assert (=> d!15895 d!16737))

(declare-fun d!16739 () Bool)

(declare-fun c!10744 () Bool)

(assert (=> d!16739 (= c!10744 ((_ is Nil!1501) (toList!732 lt!31451)))))

(declare-fun e!47513 () (InoxSet tuple2!2138))

(assert (=> d!16739 (= (content!74 (toList!732 lt!31451)) e!47513)))

(declare-fun b!72635 () Bool)

(assert (=> b!72635 (= e!47513 ((as const (Array tuple2!2138 Bool)) false))))

(declare-fun b!72636 () Bool)

(assert (=> b!72636 (= e!47513 ((_ map or) (store ((as const (Array tuple2!2138 Bool)) false) (h!2086 (toList!732 lt!31451)) true) (content!74 (t!5044 (toList!732 lt!31451)))))))

(assert (= (and d!16739 c!10744) b!72635))

(assert (= (and d!16739 (not c!10744)) b!72636))

(declare-fun m!70829 () Bool)

(assert (=> b!72636 m!70829))

(assert (=> b!72636 m!70423))

(assert (=> d!16009 d!16739))

(declare-fun d!16741 () Bool)

(declare-fun c!10745 () Bool)

(assert (=> d!16741 (= c!10745 (and ((_ is Cons!1500) (t!5044 lt!31425)) (= (_1!1079 (h!2086 (t!5044 lt!31425))) (_1!1079 lt!31205))))))

(declare-fun e!47514 () Option!137)

(assert (=> d!16741 (= (getValueByKey!131 (t!5044 lt!31425) (_1!1079 lt!31205)) e!47514)))

(declare-fun b!72637 () Bool)

(assert (=> b!72637 (= e!47514 (Some!136 (_2!1079 (h!2086 (t!5044 lt!31425)))))))

(declare-fun b!72639 () Bool)

(declare-fun e!47515 () Option!137)

(assert (=> b!72639 (= e!47515 (getValueByKey!131 (t!5044 (t!5044 lt!31425)) (_1!1079 lt!31205)))))

(declare-fun b!72638 () Bool)

(assert (=> b!72638 (= e!47514 e!47515)))

(declare-fun c!10746 () Bool)

(assert (=> b!72638 (= c!10746 (and ((_ is Cons!1500) (t!5044 lt!31425)) (not (= (_1!1079 (h!2086 (t!5044 lt!31425))) (_1!1079 lt!31205)))))))

(declare-fun b!72640 () Bool)

(assert (=> b!72640 (= e!47515 None!135)))

(assert (= (and d!16741 c!10745) b!72637))

(assert (= (and d!16741 (not c!10745)) b!72638))

(assert (= (and b!72638 c!10746) b!72639))

(assert (= (and b!72638 (not c!10746)) b!72640))

(declare-fun m!70831 () Bool)

(assert (=> b!72639 m!70831))

(assert (=> b!71216 d!16741))

(assert (=> b!71313 d!16545))

(assert (=> b!71313 d!16547))

(declare-fun d!16743 () Bool)

(assert (=> d!16743 (= (content!75 Nil!1500) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!16019 d!16743))

(declare-fun d!16745 () Bool)

(declare-fun lt!32352 () Bool)

(assert (=> d!16745 (= lt!32352 (select (content!74 lt!31506) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun e!47517 () Bool)

(assert (=> d!16745 (= lt!32352 e!47517)))

(declare-fun res!38607 () Bool)

(assert (=> d!16745 (=> (not res!38607) (not e!47517))))

(assert (=> d!16745 (= res!38607 ((_ is Cons!1500) lt!31506))))

(assert (=> d!16745 (= (contains!728 lt!31506 (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))) lt!32352)))

(declare-fun b!72641 () Bool)

(declare-fun e!47516 () Bool)

(assert (=> b!72641 (= e!47517 e!47516)))

(declare-fun res!38606 () Bool)

(assert (=> b!72641 (=> res!38606 e!47516)))

(assert (=> b!72641 (= res!38606 (= (h!2086 lt!31506) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(declare-fun b!72642 () Bool)

(assert (=> b!72642 (= e!47516 (contains!728 (t!5044 lt!31506) (tuple2!2139 (_1!1079 lt!31205) (_2!1079 lt!31205))))))

(assert (= (and d!16745 res!38607) b!72641))

(assert (= (and b!72641 (not res!38606)) b!72642))

(declare-fun m!70833 () Bool)

(assert (=> d!16745 m!70833))

(declare-fun m!70835 () Bool)

(assert (=> d!16745 m!70835))

(declare-fun m!70837 () Bool)

(assert (=> b!72642 m!70837))

(assert (=> b!71252 d!16745))

(declare-fun c!10747 () Bool)

(declare-fun d!16747 () Bool)

(assert (=> d!16747 (= c!10747 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31199))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31199)))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun e!47518 () Option!137)

(assert (=> d!16747 (= (getValueByKey!131 (t!5044 (toList!732 lt!31199)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!47518)))

(declare-fun b!72643 () Bool)

(assert (=> b!72643 (= e!47518 (Some!136 (_2!1079 (h!2086 (t!5044 (toList!732 lt!31199))))))))

(declare-fun e!47519 () Option!137)

(declare-fun b!72645 () Bool)

(assert (=> b!72645 (= e!47519 (getValueByKey!131 (t!5044 (t!5044 (toList!732 lt!31199))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!72644 () Bool)

(assert (=> b!72644 (= e!47518 e!47519)))

(declare-fun c!10748 () Bool)

(assert (=> b!72644 (= c!10748 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31199))) (not (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31199)))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))))

(declare-fun b!72646 () Bool)

(assert (=> b!72646 (= e!47519 None!135)))

(assert (= (and d!16747 c!10747) b!72643))

(assert (= (and d!16747 (not c!10747)) b!72644))

(assert (= (and b!72644 c!10748) b!72645))

(assert (= (and b!72644 (not c!10748)) b!72646))

(assert (=> b!72645 m!67713))

(declare-fun m!70839 () Bool)

(assert (=> b!72645 m!70839))

(assert (=> b!71154 d!16747))

(declare-fun b!72647 () Bool)

(declare-fun e!47529 () Bool)

(declare-fun e!47520 () Bool)

(assert (=> b!72647 (= e!47529 e!47520)))

(declare-fun res!38609 () Bool)

(declare-fun call!6337 () Bool)

(assert (=> b!72647 (= res!38609 call!6337)))

(assert (=> b!72647 (=> (not res!38609) (not e!47520))))

(declare-fun b!72648 () Bool)

(declare-fun e!47531 () ListLongMap!1433)

(declare-fun call!6333 () ListLongMap!1433)

(assert (=> b!72648 (= e!47531 (+!95 call!6333 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (_2!1080 lt!31329)))))))

(declare-fun b!72649 () Bool)

(declare-fun e!47528 () ListLongMap!1433)

(declare-fun call!6338 () ListLongMap!1433)

(assert (=> b!72649 (= e!47528 call!6338)))

(declare-fun b!72650 () Bool)

(declare-fun e!47522 () Unit!2006)

(declare-fun Unit!2080 () Unit!2006)

(assert (=> b!72650 (= e!47522 Unit!2080)))

(declare-fun b!72651 () Bool)

(declare-fun call!6335 () ListLongMap!1433)

(assert (=> b!72651 (= e!47528 call!6335)))

(declare-fun b!72652 () Bool)

(declare-fun e!47524 () Bool)

(assert (=> b!72652 (= e!47524 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(declare-fun bm!6330 () Bool)

(declare-fun call!6334 () ListLongMap!1433)

(assert (=> bm!6330 (= call!6338 call!6334)))

(declare-fun b!72653 () Bool)

(assert (=> b!72653 (= e!47529 (not call!6337))))

(declare-fun bm!6332 () Bool)

(assert (=> bm!6332 (= call!6335 call!6333)))

(declare-fun bm!6333 () Bool)

(declare-fun call!6339 () ListLongMap!1433)

(assert (=> bm!6333 (= call!6334 call!6339)))

(declare-fun b!72654 () Bool)

(declare-fun e!47527 () Bool)

(declare-fun e!47526 () Bool)

(assert (=> b!72654 (= e!47527 e!47526)))

(declare-fun c!10752 () Bool)

(assert (=> b!72654 (= c!10752 (not (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6334 () Bool)

(declare-fun lt!32356 () ListLongMap!1433)

(assert (=> bm!6334 (= call!6337 (contains!726 lt!32356 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72655 () Bool)

(declare-fun e!47525 () Bool)

(assert (=> b!72655 (= e!47525 (= (apply!74 lt!32356 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 (_2!1080 lt!31329))))))

(declare-fun b!72656 () Bool)

(declare-fun e!47523 () ListLongMap!1433)

(assert (=> b!72656 (= e!47531 e!47523)))

(declare-fun c!10749 () Bool)

(assert (=> b!72656 (= c!10749 (and (not (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72657 () Bool)

(declare-fun e!47532 () Bool)

(declare-fun e!47521 () Bool)

(assert (=> b!72657 (= e!47532 e!47521)))

(declare-fun res!38610 () Bool)

(assert (=> b!72657 (=> (not res!38610) (not e!47521))))

(assert (=> b!72657 (= res!38610 (contains!726 lt!32356 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(assert (=> b!72657 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(declare-fun b!72658 () Bool)

(assert (=> b!72658 (= e!47526 e!47525)))

(declare-fun res!38611 () Bool)

(declare-fun call!6336 () Bool)

(assert (=> b!72658 (= res!38611 call!6336)))

(assert (=> b!72658 (=> (not res!38611) (not e!47525))))

(declare-fun bm!6335 () Bool)

(assert (=> bm!6335 (= call!6336 (contains!726 lt!32356 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72659 () Bool)

(assert (=> b!72659 (= e!47523 call!6335)))

(declare-fun b!72660 () Bool)

(assert (=> b!72660 (= e!47521 (= (apply!74 lt!32356 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)) (get!1146 (select (arr!1853 (_values!2175 (_2!1080 lt!31329))) #b00000000000000000000000000000000) (dynLambda!331 (defaultEntry!2192 (_2!1080 lt!31329)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72660 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_values!2175 (_2!1080 lt!31329)))))))

(assert (=> b!72660 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(declare-fun b!72661 () Bool)

(declare-fun lt!32366 () Unit!2006)

(assert (=> b!72661 (= e!47522 lt!32366)))

(declare-fun lt!32357 () ListLongMap!1433)

(assert (=> b!72661 (= lt!32357 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (_2!1080 lt!31329)) (_values!2175 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329)) (extraKeys!2055 (_2!1080 lt!31329)) (zeroValue!2096 (_2!1080 lt!31329)) (minValue!2096 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31329))))))

(declare-fun lt!32374 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32374 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32369 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32369 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000))))

(declare-fun lt!32370 () Unit!2006)

(assert (=> b!72661 (= lt!32370 (addStillContains!50 lt!32357 lt!32374 (zeroValue!2096 (_2!1080 lt!31329)) lt!32369))))

(assert (=> b!72661 (contains!726 (+!95 lt!32357 (tuple2!2139 lt!32374 (zeroValue!2096 (_2!1080 lt!31329)))) lt!32369)))

(declare-fun lt!32362 () Unit!2006)

(assert (=> b!72661 (= lt!32362 lt!32370)))

(declare-fun lt!32359 () ListLongMap!1433)

(assert (=> b!72661 (= lt!32359 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (_2!1080 lt!31329)) (_values!2175 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329)) (extraKeys!2055 (_2!1080 lt!31329)) (zeroValue!2096 (_2!1080 lt!31329)) (minValue!2096 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31329))))))

(declare-fun lt!32360 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32360 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32361 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32361 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000))))

(declare-fun lt!32373 () Unit!2006)

(assert (=> b!72661 (= lt!32373 (addApplyDifferent!50 lt!32359 lt!32360 (minValue!2096 (_2!1080 lt!31329)) lt!32361))))

(assert (=> b!72661 (= (apply!74 (+!95 lt!32359 (tuple2!2139 lt!32360 (minValue!2096 (_2!1080 lt!31329)))) lt!32361) (apply!74 lt!32359 lt!32361))))

(declare-fun lt!32365 () Unit!2006)

(assert (=> b!72661 (= lt!32365 lt!32373)))

(declare-fun lt!32368 () ListLongMap!1433)

(assert (=> b!72661 (= lt!32368 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (_2!1080 lt!31329)) (_values!2175 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329)) (extraKeys!2055 (_2!1080 lt!31329)) (zeroValue!2096 (_2!1080 lt!31329)) (minValue!2096 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31329))))))

(declare-fun lt!32364 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32364 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32371 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32371 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000))))

(declare-fun lt!32363 () Unit!2006)

(assert (=> b!72661 (= lt!32363 (addApplyDifferent!50 lt!32368 lt!32364 (zeroValue!2096 (_2!1080 lt!31329)) lt!32371))))

(assert (=> b!72661 (= (apply!74 (+!95 lt!32368 (tuple2!2139 lt!32364 (zeroValue!2096 (_2!1080 lt!31329)))) lt!32371) (apply!74 lt!32368 lt!32371))))

(declare-fun lt!32367 () Unit!2006)

(assert (=> b!72661 (= lt!32367 lt!32363)))

(declare-fun lt!32358 () ListLongMap!1433)

(assert (=> b!72661 (= lt!32358 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (_2!1080 lt!31329)) (_values!2175 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329)) (extraKeys!2055 (_2!1080 lt!31329)) (zeroValue!2096 (_2!1080 lt!31329)) (minValue!2096 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31329))))))

(declare-fun lt!32354 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32354 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32355 () (_ BitVec 64))

(assert (=> b!72661 (= lt!32355 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000))))

(assert (=> b!72661 (= lt!32366 (addApplyDifferent!50 lt!32358 lt!32354 (minValue!2096 (_2!1080 lt!31329)) lt!32355))))

(assert (=> b!72661 (= (apply!74 (+!95 lt!32358 (tuple2!2139 lt!32354 (minValue!2096 (_2!1080 lt!31329)))) lt!32355) (apply!74 lt!32358 lt!32355))))

(declare-fun b!72662 () Bool)

(assert (=> b!72662 (= e!47526 (not call!6336))))

(declare-fun b!72663 () Bool)

(declare-fun res!38614 () Bool)

(assert (=> b!72663 (=> (not res!38614) (not e!47527))))

(assert (=> b!72663 (= res!38614 e!47532)))

(declare-fun res!38615 () Bool)

(assert (=> b!72663 (=> res!38615 e!47532)))

(assert (=> b!72663 (= res!38615 (not e!47524))))

(declare-fun res!38613 () Bool)

(assert (=> b!72663 (=> (not res!38613) (not e!47524))))

(assert (=> b!72663 (= res!38613 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(declare-fun bm!6336 () Bool)

(assert (=> bm!6336 (= call!6339 (getCurrentListMapNoExtraKeys!59 (_keys!3840 (_2!1080 lt!31329)) (_values!2175 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329)) (extraKeys!2055 (_2!1080 lt!31329)) (zeroValue!2096 (_2!1080 lt!31329)) (minValue!2096 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31329))))))

(declare-fun b!72664 () Bool)

(declare-fun e!47530 () Bool)

(assert (=> b!72664 (= e!47530 (validKeyInArray!0 (select (arr!1852 (_keys!3840 (_2!1080 lt!31329))) #b00000000000000000000000000000000)))))

(declare-fun b!72665 () Bool)

(declare-fun res!38608 () Bool)

(assert (=> b!72665 (=> (not res!38608) (not e!47527))))

(assert (=> b!72665 (= res!38608 e!47529)))

(declare-fun c!10751 () Bool)

(assert (=> b!72665 (= c!10751 (not (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!10753 () Bool)

(declare-fun bm!6331 () Bool)

(assert (=> bm!6331 (= call!6333 (+!95 (ite c!10753 call!6339 (ite c!10749 call!6334 call!6338)) (ite (or c!10753 c!10749) (tuple2!2139 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (_2!1080 lt!31329))) (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (_2!1080 lt!31329))))))))

(declare-fun d!16749 () Bool)

(assert (=> d!16749 e!47527))

(declare-fun res!38612 () Bool)

(assert (=> d!16749 (=> (not res!38612) (not e!47527))))

(assert (=> d!16749 (= res!38612 (or (bvsge #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))))

(declare-fun lt!32353 () ListLongMap!1433)

(assert (=> d!16749 (= lt!32356 lt!32353)))

(declare-fun lt!32372 () Unit!2006)

(assert (=> d!16749 (= lt!32372 e!47522)))

(declare-fun c!10750 () Bool)

(assert (=> d!16749 (= c!10750 e!47530)))

(declare-fun res!38616 () Bool)

(assert (=> d!16749 (=> (not res!38616) (not e!47530))))

(assert (=> d!16749 (= res!38616 (bvslt #b00000000000000000000000000000000 (size!2089 (_keys!3840 (_2!1080 lt!31329)))))))

(assert (=> d!16749 (= lt!32353 e!47531)))

(assert (=> d!16749 (= c!10753 (and (not (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16749 (validMask!0 (mask!6149 (_2!1080 lt!31329)))))

(assert (=> d!16749 (= (getCurrentListMap!425 (_keys!3840 (_2!1080 lt!31329)) (_values!2175 (_2!1080 lt!31329)) (mask!6149 (_2!1080 lt!31329)) (extraKeys!2055 (_2!1080 lt!31329)) (zeroValue!2096 (_2!1080 lt!31329)) (minValue!2096 (_2!1080 lt!31329)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1080 lt!31329))) lt!32356)))

(declare-fun b!72666 () Bool)

(assert (=> b!72666 (= e!47520 (= (apply!74 lt!32356 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 (_2!1080 lt!31329))))))

(declare-fun b!72667 () Bool)

(declare-fun c!10754 () Bool)

(assert (=> b!72667 (= c!10754 (and (not (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (_2!1080 lt!31329)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!72667 (= e!47523 e!47528)))

(assert (= (and d!16749 c!10753) b!72648))

(assert (= (and d!16749 (not c!10753)) b!72656))

(assert (= (and b!72656 c!10749) b!72659))

(assert (= (and b!72656 (not c!10749)) b!72667))

(assert (= (and b!72667 c!10754) b!72651))

(assert (= (and b!72667 (not c!10754)) b!72649))

(assert (= (or b!72651 b!72649) bm!6330))

(assert (= (or b!72659 bm!6330) bm!6333))

(assert (= (or b!72659 b!72651) bm!6332))

(assert (= (or b!72648 bm!6333) bm!6336))

(assert (= (or b!72648 bm!6332) bm!6331))

(assert (= (and d!16749 res!38616) b!72664))

(assert (= (and d!16749 c!10750) b!72661))

(assert (= (and d!16749 (not c!10750)) b!72650))

(assert (= (and d!16749 res!38612) b!72663))

(assert (= (and b!72663 res!38613) b!72652))

(assert (= (and b!72663 (not res!38615)) b!72657))

(assert (= (and b!72657 res!38610) b!72660))

(assert (= (and b!72663 res!38614) b!72665))

(assert (= (and b!72665 c!10751) b!72647))

(assert (= (and b!72665 (not c!10751)) b!72653))

(assert (= (and b!72647 res!38609) b!72666))

(assert (= (or b!72647 b!72653) bm!6334))

(assert (= (and b!72665 res!38608) b!72654))

(assert (= (and b!72654 c!10752) b!72658))

(assert (= (and b!72654 (not c!10752)) b!72662))

(assert (= (and b!72658 res!38611) b!72655))

(assert (= (or b!72658 b!72662) bm!6335))

(declare-fun b_lambda!3253 () Bool)

(assert (=> (not b_lambda!3253) (not b!72660)))

(declare-fun tb!1525 () Bool)

(declare-fun t!5056 () Bool)

(assert (=> (and b!70764 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 (_2!1080 lt!31329))) t!5056) tb!1525))

(declare-fun result!2673 () Bool)

(assert (=> tb!1525 (= result!2673 tp_is_empty!2469)))

(assert (=> b!72660 t!5056))

(declare-fun b_and!4461 () Bool)

(assert (= b_and!4457 (and (=> t!5056 result!2673) b_and!4461)))

(declare-fun t!5058 () Bool)

(declare-fun tb!1527 () Bool)

(assert (=> (and b!70778 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (_2!1080 lt!31329))) t!5058) tb!1527))

(declare-fun result!2675 () Bool)

(assert (= result!2675 result!2673))

(assert (=> b!72660 t!5058))

(declare-fun b_and!4463 () Bool)

(assert (= b_and!4459 (and (=> t!5058 result!2675) b_and!4463)))

(assert (=> b!72657 m!70311))

(assert (=> b!72657 m!70311))

(declare-fun m!70841 () Bool)

(assert (=> b!72657 m!70841))

(declare-fun m!70843 () Bool)

(assert (=> bm!6334 m!70843))

(declare-fun m!70845 () Bool)

(assert (=> bm!6335 m!70845))

(assert (=> b!72652 m!70311))

(assert (=> b!72652 m!70311))

(assert (=> b!72652 m!70313))

(assert (=> b!72661 m!70311))

(declare-fun m!70847 () Bool)

(assert (=> b!72661 m!70847))

(declare-fun m!70849 () Bool)

(assert (=> b!72661 m!70849))

(declare-fun m!70851 () Bool)

(assert (=> b!72661 m!70851))

(declare-fun m!70853 () Bool)

(assert (=> b!72661 m!70853))

(declare-fun m!70855 () Bool)

(assert (=> b!72661 m!70855))

(declare-fun m!70857 () Bool)

(assert (=> b!72661 m!70857))

(assert (=> b!72661 m!70851))

(declare-fun m!70859 () Bool)

(assert (=> b!72661 m!70859))

(declare-fun m!70861 () Bool)

(assert (=> b!72661 m!70861))

(assert (=> b!72661 m!70857))

(declare-fun m!70863 () Bool)

(assert (=> b!72661 m!70863))

(declare-fun m!70865 () Bool)

(assert (=> b!72661 m!70865))

(declare-fun m!70867 () Bool)

(assert (=> b!72661 m!70867))

(assert (=> b!72661 m!70865))

(declare-fun m!70869 () Bool)

(assert (=> b!72661 m!70869))

(declare-fun m!70871 () Bool)

(assert (=> b!72661 m!70871))

(declare-fun m!70873 () Bool)

(assert (=> b!72661 m!70873))

(declare-fun m!70875 () Bool)

(assert (=> b!72661 m!70875))

(declare-fun m!70877 () Bool)

(assert (=> b!72661 m!70877))

(assert (=> b!72661 m!70869))

(assert (=> bm!6336 m!70877))

(declare-fun m!70879 () Bool)

(assert (=> bm!6331 m!70879))

(declare-fun m!70881 () Bool)

(assert (=> b!72666 m!70881))

(declare-fun m!70883 () Bool)

(assert (=> b!72655 m!70883))

(declare-fun m!70885 () Bool)

(assert (=> b!72660 m!70885))

(assert (=> b!72660 m!70885))

(declare-fun m!70887 () Bool)

(assert (=> b!72660 m!70887))

(declare-fun m!70889 () Bool)

(assert (=> b!72660 m!70889))

(assert (=> b!72660 m!70887))

(assert (=> b!72660 m!70311))

(assert (=> b!72660 m!70311))

(declare-fun m!70891 () Bool)

(assert (=> b!72660 m!70891))

(assert (=> b!72664 m!70311))

(assert (=> b!72664 m!70311))

(assert (=> b!72664 m!70313))

(assert (=> d!16749 m!68899))

(declare-fun m!70893 () Bool)

(assert (=> b!72648 m!70893))

(assert (=> d!15847 d!16749))

(declare-fun d!16751 () Bool)

(assert (=> d!16751 (isDefined!85 (getValueByKey!131 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!32375 () Unit!2006)

(assert (=> d!16751 (= lt!32375 (choose!405 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47533 () Bool)

(assert (=> d!16751 e!47533))

(declare-fun res!38617 () Bool)

(assert (=> d!16751 (=> (not res!38617) (not e!47533))))

(assert (=> d!16751 (= res!38617 (isStrictlySorted!286 (toList!732 lt!31396)))))

(assert (=> d!16751 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32375)))

(declare-fun b!72668 () Bool)

(assert (=> b!72668 (= e!47533 (containsKey!135 (toList!732 lt!31396) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16751 res!38617) b!72668))

(assert (=> d!16751 m!67827))

(assert (=> d!16751 m!68669))

(assert (=> d!16751 m!68669))

(assert (=> d!16751 m!68851))

(assert (=> d!16751 m!67827))

(declare-fun m!70895 () Bool)

(assert (=> d!16751 m!70895))

(assert (=> d!16751 m!69115))

(assert (=> b!72668 m!67827))

(assert (=> b!72668 m!68847))

(assert (=> b!71604 d!16751))

(assert (=> b!71604 d!16165))

(assert (=> b!71604 d!16167))

(assert (=> b!71567 d!16557))

(declare-fun d!16753 () Bool)

(assert (=> d!16753 (= (inRange!0 (index!3111 lt!31716) (mask!6149 newMap!16)) (and (bvsge (index!3111 lt!31716) #b00000000000000000000000000000000) (bvslt (index!3111 lt!31716) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!71490 d!16753))

(declare-fun d!16755 () Bool)

(declare-fun res!38618 () Bool)

(declare-fun e!47534 () Bool)

(assert (=> d!16755 (=> res!38618 e!47534)))

(assert (=> d!16755 (= res!38618 (and ((_ is Cons!1500) (t!5044 (toList!732 lt!31199))) (= (_1!1079 (h!2086 (t!5044 (toList!732 lt!31199)))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (=> d!16755 (= (containsKey!135 (t!5044 (toList!732 lt!31199)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!47534)))

(declare-fun b!72669 () Bool)

(declare-fun e!47535 () Bool)

(assert (=> b!72669 (= e!47534 e!47535)))

(declare-fun res!38619 () Bool)

(assert (=> b!72669 (=> (not res!38619) (not e!47535))))

(assert (=> b!72669 (= res!38619 (and (or (not ((_ is Cons!1500) (t!5044 (toList!732 lt!31199)))) (bvsle (_1!1079 (h!2086 (t!5044 (toList!732 lt!31199)))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) ((_ is Cons!1500) (t!5044 (toList!732 lt!31199))) (bvslt (_1!1079 (h!2086 (t!5044 (toList!732 lt!31199)))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun b!72670 () Bool)

(assert (=> b!72670 (= e!47535 (containsKey!135 (t!5044 (t!5044 (toList!732 lt!31199))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!16755 (not res!38618)) b!72669))

(assert (= (and b!72669 res!38619) b!72670))

(assert (=> b!72670 m!67713))

(declare-fun m!70897 () Bool)

(assert (=> b!72670 m!70897))

(assert (=> b!71389 d!16755))

(declare-fun b!72671 () Bool)

(declare-fun e!47537 () List!1504)

(declare-fun call!6341 () List!1504)

(assert (=> b!72671 (= e!47537 call!6341)))

(declare-fun b!72672 () Bool)

(declare-fun res!38620 () Bool)

(declare-fun e!47536 () Bool)

(assert (=> b!72672 (=> (not res!38620) (not e!47536))))

(declare-fun lt!32376 () List!1504)

(assert (=> b!72672 (= res!38620 (containsKey!135 lt!32376 (_1!1079 lt!31200)))))

(declare-fun c!10756 () Bool)

(declare-fun b!72673 () Bool)

(assert (=> b!72673 (= c!10756 (and ((_ is Cons!1500) (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) (bvsgt (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))))) (_1!1079 lt!31200))))))

(declare-fun e!47539 () List!1504)

(declare-fun e!47538 () List!1504)

(assert (=> b!72673 (= e!47539 e!47538)))

(declare-fun b!72675 () Bool)

(declare-fun call!6342 () List!1504)

(assert (=> b!72675 (= e!47539 call!6342)))

(declare-fun b!72676 () Bool)

(declare-fun call!6340 () List!1504)

(assert (=> b!72676 (= e!47538 call!6340)))

(declare-fun e!47540 () List!1504)

(declare-fun b!72677 () Bool)

(assert (=> b!72677 (= e!47540 (insertStrictlySorted!52 (t!5044 (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) (_1!1079 lt!31200) (_2!1079 lt!31200)))))

(declare-fun bm!6337 () Bool)

(assert (=> bm!6337 (= call!6340 call!6342)))

(declare-fun bm!6338 () Bool)

(assert (=> bm!6338 (= call!6342 call!6341)))

(declare-fun c!10755 () Bool)

(declare-fun bm!6339 () Bool)

(assert (=> bm!6339 (= call!6341 ($colon$colon!64 e!47540 (ite c!10755 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200)))))))

(declare-fun c!10757 () Bool)

(assert (=> bm!6339 (= c!10757 c!10755)))

(declare-fun b!72678 () Bool)

(declare-fun c!10758 () Bool)

(assert (=> b!72678 (= e!47540 (ite c!10758 (t!5044 (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) (ite c!10756 (Cons!1500 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) (t!5044 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))))) Nil!1501)))))

(declare-fun b!72674 () Bool)

(assert (=> b!72674 (= e!47538 call!6340)))

(declare-fun d!16757 () Bool)

(assert (=> d!16757 e!47536))

(declare-fun res!38621 () Bool)

(assert (=> d!16757 (=> (not res!38621) (not e!47536))))

(assert (=> d!16757 (= res!38621 (isStrictlySorted!286 lt!32376))))

(assert (=> d!16757 (= lt!32376 e!47537)))

(assert (=> d!16757 (= c!10755 (and ((_ is Cons!1500) (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) (bvslt (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))))) (_1!1079 lt!31200))))))

(assert (=> d!16757 (isStrictlySorted!286 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))))))

(assert (=> d!16757 (= (insertStrictlySorted!52 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))) (_1!1079 lt!31200) (_2!1079 lt!31200)) lt!32376)))

(declare-fun b!72679 () Bool)

(assert (=> b!72679 (= e!47536 (contains!728 lt!32376 (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))))))

(declare-fun b!72680 () Bool)

(assert (=> b!72680 (= e!47537 e!47539)))

(assert (=> b!72680 (= c!10758 (and ((_ is Cons!1500) (t!5044 (toList!732 (+!95 lt!31210 lt!31205)))) (= (_1!1079 (h!2086 (t!5044 (toList!732 (+!95 lt!31210 lt!31205))))) (_1!1079 lt!31200))))))

(assert (= (and d!16757 c!10755) b!72671))

(assert (= (and d!16757 (not c!10755)) b!72680))

(assert (= (and b!72680 c!10758) b!72675))

(assert (= (and b!72680 (not c!10758)) b!72673))

(assert (= (and b!72673 c!10756) b!72674))

(assert (= (and b!72673 (not c!10756)) b!72676))

(assert (= (or b!72674 b!72676) bm!6337))

(assert (= (or b!72675 bm!6337) bm!6338))

(assert (= (or b!72671 bm!6338) bm!6339))

(assert (= (and bm!6339 c!10757) b!72677))

(assert (= (and bm!6339 (not c!10757)) b!72678))

(assert (= (and d!16757 res!38621) b!72672))

(assert (= (and b!72672 res!38620) b!72679))

(declare-fun m!70899 () Bool)

(assert (=> bm!6339 m!70899))

(declare-fun m!70901 () Bool)

(assert (=> b!72677 m!70901))

(declare-fun m!70903 () Bool)

(assert (=> b!72672 m!70903))

(declare-fun m!70905 () Bool)

(assert (=> b!72679 m!70905))

(declare-fun m!70907 () Bool)

(assert (=> d!16757 m!70907))

(assert (=> d!16757 m!69359))

(assert (=> b!71482 d!16757))

(declare-fun d!16759 () Bool)

(declare-fun res!38622 () Bool)

(declare-fun e!47541 () Bool)

(assert (=> d!16759 (=> res!38622 e!47541)))

(assert (=> d!16759 (= res!38622 (and ((_ is Cons!1500) (toList!732 e!46520)) (= (_1!1079 (h!2086 (toList!732 e!46520))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(assert (=> d!16759 (= (containsKey!135 (toList!732 e!46520) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) e!47541)))

(declare-fun b!72681 () Bool)

(declare-fun e!47542 () Bool)

(assert (=> b!72681 (= e!47541 e!47542)))

(declare-fun res!38623 () Bool)

(assert (=> b!72681 (=> (not res!38623) (not e!47542))))

(assert (=> b!72681 (= res!38623 (and (or (not ((_ is Cons!1500) (toList!732 e!46520))) (bvsle (_1!1079 (h!2086 (toList!732 e!46520))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))) ((_ is Cons!1500) (toList!732 e!46520)) (bvslt (_1!1079 (h!2086 (toList!732 e!46520))) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355))))))

(declare-fun b!72682 () Bool)

(assert (=> b!72682 (= e!47542 (containsKey!135 (t!5044 (toList!732 e!46520)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (= (and d!16759 (not res!38622)) b!72681))

(assert (= (and b!72681 res!38623) b!72682))

(assert (=> b!72682 m!67713))

(declare-fun m!70909 () Bool)

(assert (=> b!72682 m!70909))

(assert (=> d!15991 d!16759))

(assert (=> b!71521 d!16045))

(declare-fun b!72695 () Bool)

(declare-fun e!47550 () SeekEntryResult!245)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!72695 (= e!47550 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11017 lt!31642) #b00000000000000000000000000000001) (nextIndex!0 (index!3112 lt!31642) (x!11017 lt!31642) (mask!6149 newMap!16)) (index!3112 lt!31642) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!72696 () Bool)

(declare-fun e!47549 () SeekEntryResult!245)

(assert (=> b!72696 (= e!47549 (Found!245 (index!3112 lt!31642)))))

(declare-fun lt!32382 () SeekEntryResult!245)

(declare-fun d!16761 () Bool)

(assert (=> d!16761 (and (or ((_ is Undefined!245) lt!32382) (not ((_ is Found!245) lt!32382)) (and (bvsge (index!3111 lt!32382) #b00000000000000000000000000000000) (bvslt (index!3111 lt!32382) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!32382) ((_ is Found!245) lt!32382) (not ((_ is MissingVacant!245) lt!32382)) (not (= (index!3113 lt!32382) (index!3112 lt!31642))) (and (bvsge (index!3113 lt!32382) #b00000000000000000000000000000000) (bvslt (index!3113 lt!32382) (size!2089 (_keys!3840 newMap!16))))) (or ((_ is Undefined!245) lt!32382) (ite ((_ is Found!245) lt!32382) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3111 lt!32382)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (and ((_ is MissingVacant!245) lt!32382) (= (index!3113 lt!32382) (index!3112 lt!31642)) (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3113 lt!32382)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!47551 () SeekEntryResult!245)

(assert (=> d!16761 (= lt!32382 e!47551)))

(declare-fun c!10766 () Bool)

(assert (=> d!16761 (= c!10766 (bvsge (x!11017 lt!31642) #b01111111111111111111111111111110))))

(declare-fun lt!32381 () (_ BitVec 64))

(assert (=> d!16761 (= lt!32381 (select (arr!1852 (_keys!3840 newMap!16)) (index!3112 lt!31642)))))

(assert (=> d!16761 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16761 (= (seekKeyOrZeroReturnVacant!0 (x!11017 lt!31642) (index!3112 lt!31642) (index!3112 lt!31642) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!32382)))

(declare-fun b!72697 () Bool)

(declare-fun c!10765 () Bool)

(assert (=> b!72697 (= c!10765 (= lt!32381 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72697 (= e!47549 e!47550)))

(declare-fun b!72698 () Bool)

(assert (=> b!72698 (= e!47551 e!47549)))

(declare-fun c!10767 () Bool)

(assert (=> b!72698 (= c!10767 (= lt!32381 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(declare-fun b!72699 () Bool)

(assert (=> b!72699 (= e!47551 Undefined!245)))

(declare-fun b!72700 () Bool)

(assert (=> b!72700 (= e!47550 (MissingVacant!245 (index!3112 lt!31642)))))

(assert (= (and d!16761 c!10766) b!72699))

(assert (= (and d!16761 (not c!10766)) b!72698))

(assert (= (and b!72698 c!10767) b!72696))

(assert (= (and b!72698 (not c!10767)) b!72697))

(assert (= (and b!72697 c!10765) b!72700))

(assert (= (and b!72697 (not c!10765)) b!72695))

(declare-fun m!70911 () Bool)

(assert (=> b!72695 m!70911))

(assert (=> b!72695 m!70911))

(assert (=> b!72695 m!67713))

(declare-fun m!70913 () Bool)

(assert (=> b!72695 m!70913))

(declare-fun m!70915 () Bool)

(assert (=> d!16761 m!70915))

(declare-fun m!70917 () Bool)

(assert (=> d!16761 m!70917))

(assert (=> d!16761 m!68361))

(assert (=> d!16761 m!68107))

(assert (=> b!71352 d!16761))

(declare-fun d!16763 () Bool)

(declare-fun e!47552 () Bool)

(assert (=> d!16763 e!47552))

(declare-fun res!38624 () Bool)

(assert (=> d!16763 (=> res!38624 e!47552)))

(declare-fun lt!32385 () Bool)

(assert (=> d!16763 (= res!38624 (not lt!32385))))

(declare-fun lt!32383 () Bool)

(assert (=> d!16763 (= lt!32385 lt!32383)))

(declare-fun lt!32384 () Unit!2006)

(declare-fun e!47553 () Unit!2006)

(assert (=> d!16763 (= lt!32384 e!47553)))

(declare-fun c!10768 () Bool)

(assert (=> d!16763 (= c!10768 lt!32383)))

(assert (=> d!16763 (= lt!32383 (containsKey!135 (toList!732 lt!31786) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16763 (= (contains!726 lt!31786 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32385)))

(declare-fun b!72701 () Bool)

(declare-fun lt!32386 () Unit!2006)

(assert (=> b!72701 (= e!47553 lt!32386)))

(assert (=> b!72701 (= lt!32386 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31786) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72701 (isDefined!85 (getValueByKey!131 (toList!732 lt!31786) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72702 () Bool)

(declare-fun Unit!2081 () Unit!2006)

(assert (=> b!72702 (= e!47553 Unit!2081)))

(declare-fun b!72703 () Bool)

(assert (=> b!72703 (= e!47552 (isDefined!85 (getValueByKey!131 (toList!732 lt!31786) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16763 c!10768) b!72701))

(assert (= (and d!16763 (not c!10768)) b!72702))

(assert (= (and d!16763 (not res!38624)) b!72703))

(declare-fun m!70919 () Bool)

(assert (=> d!16763 m!70919))

(declare-fun m!70921 () Bool)

(assert (=> b!72701 m!70921))

(assert (=> b!72701 m!70073))

(assert (=> b!72701 m!70073))

(declare-fun m!70923 () Bool)

(assert (=> b!72701 m!70923))

(assert (=> b!72703 m!70073))

(assert (=> b!72703 m!70073))

(assert (=> b!72703 m!70923))

(assert (=> bm!6213 d!16763))

(declare-fun d!16765 () Bool)

(declare-fun c!10769 () Bool)

(assert (=> d!16765 (= c!10769 (and ((_ is Cons!1500) (toList!732 lt!31729)) (= (_1!1079 (h!2086 (toList!732 lt!31729))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47554 () Option!137)

(assert (=> d!16765 (= (getValueByKey!131 (toList!732 lt!31729) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) e!47554)))

(declare-fun b!72704 () Bool)

(assert (=> b!72704 (= e!47554 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31729)))))))

(declare-fun e!47555 () Option!137)

(declare-fun b!72706 () Bool)

(assert (=> b!72706 (= e!47555 (getValueByKey!131 (t!5044 (toList!732 lt!31729)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!72705 () Bool)

(assert (=> b!72705 (= e!47554 e!47555)))

(declare-fun c!10770 () Bool)

(assert (=> b!72705 (= c!10770 (and ((_ is Cons!1500) (toList!732 lt!31729)) (not (= (_1!1079 (h!2086 (toList!732 lt!31729))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!72707 () Bool)

(assert (=> b!72707 (= e!47555 None!135)))

(assert (= (and d!16765 c!10769) b!72704))

(assert (= (and d!16765 (not c!10769)) b!72705))

(assert (= (and b!72705 c!10770) b!72706))

(assert (= (and b!72705 (not c!10770)) b!72707))

(declare-fun m!70925 () Bool)

(assert (=> b!72706 m!70925))

(assert (=> b!71504 d!16765))

(declare-fun lt!32387 () Bool)

(declare-fun d!16767 () Bool)

(assert (=> d!16767 (= lt!32387 (select (content!74 (toList!732 lt!31625)) (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun e!47557 () Bool)

(assert (=> d!16767 (= lt!32387 e!47557)))

(declare-fun res!38626 () Bool)

(assert (=> d!16767 (=> (not res!38626) (not e!47557))))

(assert (=> d!16767 (= res!38626 ((_ is Cons!1500) (toList!732 lt!31625)))))

(assert (=> d!16767 (= (contains!728 (toList!732 lt!31625) (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))) lt!32387)))

(declare-fun b!72708 () Bool)

(declare-fun e!47556 () Bool)

(assert (=> b!72708 (= e!47557 e!47556)))

(declare-fun res!38625 () Bool)

(assert (=> b!72708 (=> res!38625 e!47556)))

(assert (=> b!72708 (= res!38625 (= (h!2086 (toList!732 lt!31625)) (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(declare-fun b!72709 () Bool)

(assert (=> b!72709 (= e!47556 (contains!728 (t!5044 (toList!732 lt!31625)) (tuple2!2139 lt!31414 (zeroValue!2096 (v!2517 (underlying!261 thiss!992))))))))

(assert (= (and d!16767 res!38626) b!72708))

(assert (= (and b!72708 (not res!38625)) b!72709))

(declare-fun m!70927 () Bool)

(assert (=> d!16767 m!70927))

(declare-fun m!70929 () Bool)

(assert (=> d!16767 m!70929))

(declare-fun m!70931 () Bool)

(assert (=> b!72709 m!70931))

(assert (=> b!71332 d!16767))

(declare-fun b!72728 () Bool)

(declare-fun e!47568 () Bool)

(declare-fun lt!32392 () SeekEntryResult!245)

(assert (=> b!72728 (= e!47568 (bvsge (x!11017 lt!32392) #b01111111111111111111111111111110))))

(declare-fun e!47571 () SeekEntryResult!245)

(declare-fun b!72729 () Bool)

(assert (=> b!72729 (= e!47571 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (mask!6149 newMap!16)) #b00000000000000000000000000000000 (mask!6149 newMap!16)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!72731 () Bool)

(declare-fun e!47572 () Bool)

(assert (=> b!72731 (= e!47568 e!47572)))

(declare-fun res!38634 () Bool)

(assert (=> b!72731 (= res!38634 (and ((_ is Intermediate!245) lt!32392) (not (undefined!1057 lt!32392)) (bvslt (x!11017 lt!32392) #b01111111111111111111111111111110) (bvsge (x!11017 lt!32392) #b00000000000000000000000000000000) (bvsge (x!11017 lt!32392) #b00000000000000000000000000000000)))))

(assert (=> b!72731 (=> (not res!38634) (not e!47572))))

(declare-fun b!72732 () Bool)

(assert (=> b!72732 (= e!47571 (Intermediate!245 false (toIndex!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (mask!6149 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!72733 () Bool)

(assert (=> b!72733 (and (bvsge (index!3112 lt!32392) #b00000000000000000000000000000000) (bvslt (index!3112 lt!32392) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun e!47570 () Bool)

(assert (=> b!72733 (= e!47570 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3112 lt!32392)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72734 () Bool)

(declare-fun e!47569 () SeekEntryResult!245)

(assert (=> b!72734 (= e!47569 (Intermediate!245 true (toIndex!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (mask!6149 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!72730 () Bool)

(assert (=> b!72730 (and (bvsge (index!3112 lt!32392) #b00000000000000000000000000000000) (bvslt (index!3112 lt!32392) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun res!38633 () Bool)

(assert (=> b!72730 (= res!38633 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3112 lt!32392)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72730 (=> res!38633 e!47570)))

(declare-fun d!16769 () Bool)

(assert (=> d!16769 e!47568))

(declare-fun c!10778 () Bool)

(assert (=> d!16769 (= c!10778 (and ((_ is Intermediate!245) lt!32392) (undefined!1057 lt!32392)))))

(assert (=> d!16769 (= lt!32392 e!47569)))

(declare-fun c!10779 () Bool)

(assert (=> d!16769 (= c!10779 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!32393 () (_ BitVec 64))

(assert (=> d!16769 (= lt!32393 (select (arr!1852 (_keys!3840 newMap!16)) (toIndex!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (mask!6149 newMap!16))))))

(assert (=> d!16769 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16769 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (mask!6149 newMap!16)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!32392)))

(declare-fun b!72735 () Bool)

(assert (=> b!72735 (and (bvsge (index!3112 lt!32392) #b00000000000000000000000000000000) (bvslt (index!3112 lt!32392) (size!2089 (_keys!3840 newMap!16))))))

(declare-fun res!38635 () Bool)

(assert (=> b!72735 (= res!38635 (= (select (arr!1852 (_keys!3840 newMap!16)) (index!3112 lt!32392)) (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)))))

(assert (=> b!72735 (=> res!38635 e!47570)))

(assert (=> b!72735 (= e!47572 e!47570)))

(declare-fun b!72736 () Bool)

(assert (=> b!72736 (= e!47569 e!47571)))

(declare-fun c!10777 () Bool)

(assert (=> b!72736 (= c!10777 (or (= lt!32393 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355)) (= (bvadd lt!32393 lt!32393) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16769 c!10779) b!72734))

(assert (= (and d!16769 (not c!10779)) b!72736))

(assert (= (and b!72736 c!10777) b!72732))

(assert (= (and b!72736 (not c!10777)) b!72729))

(assert (= (and d!16769 c!10778) b!72728))

(assert (= (and d!16769 (not c!10778)) b!72731))

(assert (= (and b!72731 res!38634) b!72735))

(assert (= (and b!72735 (not res!38635)) b!72730))

(assert (= (and b!72730 (not res!38633)) b!72733))

(declare-fun m!70933 () Bool)

(assert (=> b!72730 m!70933))

(assert (=> b!72733 m!70933))

(assert (=> b!72735 m!70933))

(assert (=> d!16769 m!68367))

(declare-fun m!70935 () Bool)

(assert (=> d!16769 m!70935))

(assert (=> d!16769 m!68107))

(assert (=> b!72729 m!68367))

(declare-fun m!70937 () Bool)

(assert (=> b!72729 m!70937))

(assert (=> b!72729 m!70937))

(assert (=> b!72729 m!67713))

(declare-fun m!70939 () Bool)

(assert (=> b!72729 m!70939))

(assert (=> d!15913 d!16769))

(declare-fun d!16771 () Bool)

(declare-fun lt!32399 () (_ BitVec 32))

(declare-fun lt!32398 () (_ BitVec 32))

(assert (=> d!16771 (= lt!32399 (bvmul (bvxor lt!32398 (bvlshr lt!32398 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!16771 (= lt!32398 ((_ extract 31 0) (bvand (bvxor (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvlshr (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!16771 (and (bvsge (mask!6149 newMap!16) #b00000000000000000000000000000000) (let ((res!38636 (let ((h!2088 ((_ extract 31 0) (bvand (bvxor (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (bvlshr (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11120 (bvmul (bvxor h!2088 (bvlshr h!2088 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11120 (bvlshr x!11120 #b00000000000000000000000000001101)) (mask!6149 newMap!16)))))) (and (bvslt res!38636 (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001)) (bvsge res!38636 #b00000000000000000000000000000000))))))

(assert (=> d!16771 (= (toIndex!0 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) (mask!6149 newMap!16)) (bvand (bvxor lt!32399 (bvlshr lt!32399 #b00000000000000000000000000001101)) (mask!6149 newMap!16)))))

(assert (=> d!15913 d!16771))

(assert (=> d!15913 d!16073))

(assert (=> b!71169 d!16045))

(declare-fun d!16773 () Bool)

(assert (=> d!16773 (= (apply!74 lt!31683 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1150 (getValueByKey!131 (toList!732 lt!31683) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3127 () Bool)

(assert (= bs!3127 d!16773))

(assert (=> bs!3127 m!69675))

(assert (=> bs!3127 m!69675))

(declare-fun m!70941 () Bool)

(assert (=> bs!3127 m!70941))

(assert (=> b!71451 d!16773))

(assert (=> b!71196 d!16583))

(assert (=> b!71196 d!16409))

(declare-fun d!16775 () Bool)

(declare-fun e!47573 () Bool)

(assert (=> d!16775 e!47573))

(declare-fun res!38637 () Bool)

(assert (=> d!16775 (=> res!38637 e!47573)))

(declare-fun lt!32402 () Bool)

(assert (=> d!16775 (= res!38637 (not lt!32402))))

(declare-fun lt!32400 () Bool)

(assert (=> d!16775 (= lt!32402 lt!32400)))

(declare-fun lt!32401 () Unit!2006)

(declare-fun e!47574 () Unit!2006)

(assert (=> d!16775 (= lt!32401 e!47574)))

(declare-fun c!10780 () Bool)

(assert (=> d!16775 (= c!10780 lt!32400)))

(assert (=> d!16775 (= lt!32400 (containsKey!135 (toList!732 lt!31729) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> d!16775 (= (contains!726 lt!31729 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!32402)))

(declare-fun b!72737 () Bool)

(declare-fun lt!32403 () Unit!2006)

(assert (=> b!72737 (= e!47574 lt!32403)))

(assert (=> b!72737 (= lt!32403 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31729) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(assert (=> b!72737 (isDefined!85 (getValueByKey!131 (toList!732 lt!31729) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!72738 () Bool)

(declare-fun Unit!2082 () Unit!2006)

(assert (=> b!72738 (= e!47574 Unit!2082)))

(declare-fun b!72739 () Bool)

(assert (=> b!72739 (= e!47573 (isDefined!85 (getValueByKey!131 (toList!732 lt!31729) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16775 c!10780) b!72737))

(assert (= (and d!16775 (not c!10780)) b!72738))

(assert (= (and d!16775 (not res!38637)) b!72739))

(declare-fun m!70943 () Bool)

(assert (=> d!16775 m!70943))

(declare-fun m!70945 () Bool)

(assert (=> b!72737 m!70945))

(assert (=> b!72737 m!68621))

(assert (=> b!72737 m!68621))

(declare-fun m!70947 () Bool)

(assert (=> b!72737 m!70947))

(assert (=> b!72739 m!68621))

(assert (=> b!72739 m!68621))

(assert (=> b!72739 m!70947))

(assert (=> d!15977 d!16775))

(declare-fun d!16777 () Bool)

(declare-fun c!10781 () Bool)

(assert (=> d!16777 (= c!10781 (and ((_ is Cons!1500) lt!31728) (= (_1!1079 (h!2086 lt!31728)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47575 () Option!137)

(assert (=> d!16777 (= (getValueByKey!131 lt!31728 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) e!47575)))

(declare-fun b!72740 () Bool)

(assert (=> b!72740 (= e!47575 (Some!136 (_2!1079 (h!2086 lt!31728))))))

(declare-fun b!72742 () Bool)

(declare-fun e!47576 () Option!137)

(assert (=> b!72742 (= e!47576 (getValueByKey!131 (t!5044 lt!31728) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!72741 () Bool)

(assert (=> b!72741 (= e!47575 e!47576)))

(declare-fun c!10782 () Bool)

(assert (=> b!72741 (= c!10782 (and ((_ is Cons!1500) lt!31728) (not (= (_1!1079 (h!2086 lt!31728)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun b!72743 () Bool)

(assert (=> b!72743 (= e!47576 None!135)))

(assert (= (and d!16777 c!10781) b!72740))

(assert (= (and d!16777 (not c!10781)) b!72741))

(assert (= (and b!72741 c!10782) b!72742))

(assert (= (and b!72741 (not c!10782)) b!72743))

(declare-fun m!70949 () Bool)

(assert (=> b!72742 m!70949))

(assert (=> d!15977 d!16777))

(declare-fun d!16779 () Bool)

(assert (=> d!16779 (= (getValueByKey!131 lt!31728 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) (Some!136 (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun lt!32404 () Unit!2006)

(assert (=> d!16779 (= lt!32404 (choose!407 lt!31728 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun e!47577 () Bool)

(assert (=> d!16779 e!47577))

(declare-fun res!38638 () Bool)

(assert (=> d!16779 (=> (not res!38638) (not e!47577))))

(assert (=> d!16779 (= res!38638 (isStrictlySorted!286 lt!31728))))

(assert (=> d!16779 (= (lemmaContainsTupThenGetReturnValue!50 lt!31728 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!32404)))

(declare-fun b!72744 () Bool)

(declare-fun res!38639 () Bool)

(assert (=> b!72744 (=> (not res!38639) (not e!47577))))

(assert (=> b!72744 (= res!38639 (containsKey!135 lt!31728 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!72745 () Bool)

(assert (=> b!72745 (= e!47577 (contains!728 lt!31728 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16779 res!38638) b!72744))

(assert (= (and b!72744 res!38639) b!72745))

(assert (=> d!16779 m!68615))

(declare-fun m!70951 () Bool)

(assert (=> d!16779 m!70951))

(declare-fun m!70953 () Bool)

(assert (=> d!16779 m!70953))

(declare-fun m!70955 () Bool)

(assert (=> b!72744 m!70955))

(declare-fun m!70957 () Bool)

(assert (=> b!72745 m!70957))

(assert (=> d!15977 d!16779))

(declare-fun b!72746 () Bool)

(declare-fun e!47579 () List!1504)

(declare-fun call!6344 () List!1504)

(assert (=> b!72746 (= e!47579 call!6344)))

(declare-fun b!72747 () Bool)

(declare-fun res!38640 () Bool)

(declare-fun e!47578 () Bool)

(assert (=> b!72747 (=> (not res!38640) (not e!47578))))

(declare-fun lt!32405 () List!1504)

(assert (=> b!72747 (= res!38640 (containsKey!135 lt!32405 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun b!72748 () Bool)

(declare-fun c!10784 () Bool)

(assert (=> b!72748 (= c!10784 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvsgt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun e!47581 () List!1504)

(declare-fun e!47580 () List!1504)

(assert (=> b!72748 (= e!47581 e!47580)))

(declare-fun b!72750 () Bool)

(declare-fun call!6345 () List!1504)

(assert (=> b!72750 (= e!47581 call!6345)))

(declare-fun b!72751 () Bool)

(declare-fun call!6343 () List!1504)

(assert (=> b!72751 (= e!47580 call!6343)))

(declare-fun e!47582 () List!1504)

(declare-fun b!72752 () Bool)

(assert (=> b!72752 (= e!47582 (insertStrictlySorted!52 (t!5044 (toList!732 lt!31210)) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))

(declare-fun bm!6340 () Bool)

(assert (=> bm!6340 (= call!6343 call!6345)))

(declare-fun bm!6341 () Bool)

(assert (=> bm!6341 (= call!6345 call!6344)))

(declare-fun c!10783 () Bool)

(declare-fun bm!6342 () Bool)

(assert (=> bm!6342 (= call!6344 ($colon$colon!64 e!47582 (ite c!10783 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))))))))

(declare-fun c!10785 () Bool)

(assert (=> bm!6342 (= c!10785 c!10783)))

(declare-fun c!10786 () Bool)

(declare-fun b!72753 () Bool)

(assert (=> b!72753 (= e!47582 (ite c!10786 (t!5044 (toList!732 lt!31210)) (ite c!10784 (Cons!1500 (h!2086 (toList!732 lt!31210)) (t!5044 (toList!732 lt!31210))) Nil!1501)))))

(declare-fun b!72749 () Bool)

(assert (=> b!72749 (= e!47580 call!6343)))

(declare-fun d!16781 () Bool)

(assert (=> d!16781 e!47578))

(declare-fun res!38641 () Bool)

(assert (=> d!16781 (=> (not res!38641) (not e!47578))))

(assert (=> d!16781 (= res!38641 (isStrictlySorted!286 lt!32405))))

(assert (=> d!16781 (= lt!32405 e!47579)))

(assert (=> d!16781 (= c!10783 (and ((_ is Cons!1500) (toList!732 lt!31210)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (=> d!16781 (isStrictlySorted!286 (toList!732 lt!31210))))

(assert (=> d!16781 (= (insertStrictlySorted!52 (toList!732 lt!31210) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204))) lt!32405)))

(declare-fun b!72754 () Bool)

(assert (=> b!72754 (= e!47578 (contains!728 lt!32405 (tuple2!2139 (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)) (_2!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(declare-fun b!72755 () Bool)

(assert (=> b!72755 (= e!47579 e!47581)))

(assert (=> b!72755 (= c!10786 (and ((_ is Cons!1500) (toList!732 lt!31210)) (= (_1!1079 (h!2086 (toList!732 lt!31210))) (_1!1079 (tuple2!2139 (select (arr!1852 (_keys!3840 (v!2517 (underlying!261 thiss!992)))) from!355) lt!31204)))))))

(assert (= (and d!16781 c!10783) b!72746))

(assert (= (and d!16781 (not c!10783)) b!72755))

(assert (= (and b!72755 c!10786) b!72750))

(assert (= (and b!72755 (not c!10786)) b!72748))

(assert (= (and b!72748 c!10784) b!72749))

(assert (= (and b!72748 (not c!10784)) b!72751))

(assert (= (or b!72749 b!72751) bm!6340))

(assert (= (or b!72750 bm!6340) bm!6341))

(assert (= (or b!72746 bm!6341) bm!6342))

(assert (= (and bm!6342 c!10785) b!72752))

(assert (= (and bm!6342 (not c!10785)) b!72753))

(assert (= (and d!16781 res!38641) b!72747))

(assert (= (and b!72747 res!38640) b!72754))

(declare-fun m!70959 () Bool)

(assert (=> bm!6342 m!70959))

(declare-fun m!70961 () Bool)

(assert (=> b!72752 m!70961))

(declare-fun m!70963 () Bool)

(assert (=> b!72747 m!70963))

(declare-fun m!70965 () Bool)

(assert (=> b!72754 m!70965))

(declare-fun m!70967 () Bool)

(assert (=> d!16781 m!70967))

(assert (=> d!16781 m!68417))

(assert (=> d!15977 d!16781))

(assert (=> b!71192 d!16687))

(assert (=> b!71174 d!16091))

(assert (=> d!15943 d!15783))

(declare-fun d!16783 () Bool)

(declare-fun res!38642 () Bool)

(declare-fun e!47583 () Bool)

(assert (=> d!16783 (=> res!38642 e!47583)))

(assert (=> d!16783 (= res!38642 (and ((_ is Cons!1500) lt!31450) (= (_1!1079 (h!2086 lt!31450)) (_1!1079 lt!31200))))))

(assert (=> d!16783 (= (containsKey!135 lt!31450 (_1!1079 lt!31200)) e!47583)))

(declare-fun b!72756 () Bool)

(declare-fun e!47584 () Bool)

(assert (=> b!72756 (= e!47583 e!47584)))

(declare-fun res!38643 () Bool)

(assert (=> b!72756 (=> (not res!38643) (not e!47584))))

(assert (=> b!72756 (= res!38643 (and (or (not ((_ is Cons!1500) lt!31450)) (bvsle (_1!1079 (h!2086 lt!31450)) (_1!1079 lt!31200))) ((_ is Cons!1500) lt!31450) (bvslt (_1!1079 (h!2086 lt!31450)) (_1!1079 lt!31200))))))

(declare-fun b!72757 () Bool)

(assert (=> b!72757 (= e!47584 (containsKey!135 (t!5044 lt!31450) (_1!1079 lt!31200)))))

(assert (= (and d!16783 (not res!38642)) b!72756))

(assert (= (and b!72756 res!38643) b!72757))

(declare-fun m!70969 () Bool)

(assert (=> b!72757 m!70969))

(assert (=> b!71474 d!16783))

(declare-fun d!16785 () Bool)

(declare-fun res!38644 () Bool)

(declare-fun e!47585 () Bool)

(assert (=> d!16785 (=> res!38644 e!47585)))

(assert (=> d!16785 (= res!38644 (and ((_ is Cons!1500) (toList!732 lt!31442)) (= (_1!1079 (h!2086 (toList!732 lt!31442))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16785 (= (containsKey!135 (toList!732 lt!31442) #b1000000000000000000000000000000000000000000000000000000000000000) e!47585)))

(declare-fun b!72758 () Bool)

(declare-fun e!47586 () Bool)

(assert (=> b!72758 (= e!47585 e!47586)))

(declare-fun res!38645 () Bool)

(assert (=> b!72758 (=> (not res!38645) (not e!47586))))

(assert (=> b!72758 (= res!38645 (and (or (not ((_ is Cons!1500) (toList!732 lt!31442))) (bvsle (_1!1079 (h!2086 (toList!732 lt!31442))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!732 lt!31442)) (bvslt (_1!1079 (h!2086 (toList!732 lt!31442))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72759 () Bool)

(assert (=> b!72759 (= e!47586 (containsKey!135 (t!5044 (toList!732 lt!31442)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16785 (not res!38644)) b!72758))

(assert (= (and b!72758 res!38645) b!72759))

(declare-fun m!70971 () Bool)

(assert (=> b!72759 m!70971))

(assert (=> d!15983 d!16785))

(declare-fun d!16787 () Bool)

(declare-fun c!10787 () Bool)

(assert (=> d!16787 (= c!10787 (and ((_ is Cons!1500) (toList!732 lt!31496)) (= (_1!1079 (h!2086 (toList!732 lt!31496))) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992))))))))))

(declare-fun e!47587 () Option!137)

(assert (=> d!16787 (= (getValueByKey!131 (toList!732 lt!31496) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))) e!47587)))

(declare-fun b!72760 () Bool)

(assert (=> b!72760 (= e!47587 (Some!136 (_2!1079 (h!2086 (toList!732 lt!31496)))))))

(declare-fun b!72762 () Bool)

(declare-fun e!47588 () Option!137)

(assert (=> b!72762 (= e!47588 (getValueByKey!131 (t!5044 (toList!732 lt!31496)) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))

(declare-fun b!72761 () Bool)

(assert (=> b!72761 (= e!47587 e!47588)))

(declare-fun c!10788 () Bool)

(assert (=> b!72761 (= c!10788 (and ((_ is Cons!1500) (toList!732 lt!31496)) (not (= (_1!1079 (h!2086 (toList!732 lt!31496))) (_1!1079 (tuple2!2139 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2517 (underlying!261 thiss!992)))))))))))

(declare-fun b!72763 () Bool)

(assert (=> b!72763 (= e!47588 None!135)))

(assert (= (and d!16787 c!10787) b!72760))

(assert (= (and d!16787 (not c!10787)) b!72761))

(assert (= (and b!72761 c!10788) b!72762))

(assert (= (and b!72761 (not c!10788)) b!72763))

(declare-fun m!70973 () Bool)

(assert (=> b!72762 m!70973))

(assert (=> b!71209 d!16787))

(declare-fun d!16789 () Bool)

(declare-fun e!47589 () Bool)

(assert (=> d!16789 e!47589))

(declare-fun res!38646 () Bool)

(assert (=> d!16789 (=> res!38646 e!47589)))

(declare-fun lt!32408 () Bool)

(assert (=> d!16789 (= res!38646 (not lt!32408))))

(declare-fun lt!32406 () Bool)

(assert (=> d!16789 (= lt!32408 lt!32406)))

(declare-fun lt!32407 () Unit!2006)

(declare-fun e!47590 () Unit!2006)

(assert (=> d!16789 (= lt!32407 e!47590)))

(declare-fun c!10789 () Bool)

(assert (=> d!16789 (= c!10789 lt!32406)))

(assert (=> d!16789 (= lt!32406 (containsKey!135 (toList!732 lt!31759) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16789 (= (contains!726 lt!31759 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32408)))

(declare-fun b!72764 () Bool)

(declare-fun lt!32409 () Unit!2006)

(assert (=> b!72764 (= e!47590 lt!32409)))

(assert (=> b!72764 (= lt!32409 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!732 lt!31759) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72764 (isDefined!85 (getValueByKey!131 (toList!732 lt!31759) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72765 () Bool)

(declare-fun Unit!2083 () Unit!2006)

(assert (=> b!72765 (= e!47590 Unit!2083)))

(declare-fun b!72766 () Bool)

(assert (=> b!72766 (= e!47589 (isDefined!85 (getValueByKey!131 (toList!732 lt!31759) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16789 c!10789) b!72764))

(assert (= (and d!16789 (not c!10789)) b!72765))

(assert (= (and d!16789 (not res!38646)) b!72766))

(declare-fun m!70975 () Bool)

(assert (=> d!16789 m!70975))

(declare-fun m!70977 () Bool)

(assert (=> b!72764 m!70977))

(assert (=> b!72764 m!69733))

(assert (=> b!72764 m!69733))

(declare-fun m!70979 () Bool)

(assert (=> b!72764 m!70979))

(assert (=> b!72766 m!69733))

(assert (=> b!72766 m!69733))

(assert (=> b!72766 m!70979))

(assert (=> bm!6206 d!16789))

(declare-fun d!16791 () Bool)

(assert (=> d!16791 (= ($colon$colon!64 e!46747 (ite c!10403 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200)))) (Cons!1500 (ite c!10403 (h!2086 (toList!732 lt!31210)) (tuple2!2139 (_1!1079 lt!31200) (_2!1079 lt!31200))) e!46747))))

(assert (=> bm!6183 d!16791))

(declare-fun d!16793 () Bool)

(declare-fun lt!32410 () Bool)

(assert (=> d!16793 (= lt!32410 (select (content!74 (t!5044 (toList!732 lt!31462))) lt!31200))))

(declare-fun e!47592 () Bool)

(assert (=> d!16793 (= lt!32410 e!47592)))

(declare-fun res!38648 () Bool)

(assert (=> d!16793 (=> (not res!38648) (not e!47592))))

(assert (=> d!16793 (= res!38648 ((_ is Cons!1500) (t!5044 (toList!732 lt!31462))))))

(assert (=> d!16793 (= (contains!728 (t!5044 (toList!732 lt!31462)) lt!31200) lt!32410)))

(declare-fun b!72767 () Bool)

(declare-fun e!47591 () Bool)

(assert (=> b!72767 (= e!47592 e!47591)))

(declare-fun res!38647 () Bool)

(assert (=> b!72767 (=> res!38647 e!47591)))

(assert (=> b!72767 (= res!38647 (= (h!2086 (t!5044 (toList!732 lt!31462))) lt!31200))))

(declare-fun b!72768 () Bool)

(assert (=> b!72768 (= e!47591 (contains!728 (t!5044 (t!5044 (toList!732 lt!31462))) lt!31200))))

(assert (= (and d!16793 res!38648) b!72767))

(assert (= (and b!72767 (not res!38647)) b!72768))

(assert (=> d!16793 m!68887))

(declare-fun m!70981 () Bool)

(assert (=> d!16793 m!70981))

(declare-fun m!70983 () Bool)

(assert (=> b!72768 m!70983))

(assert (=> b!71531 d!16793))

(declare-fun condMapEmpty!3159 () Bool)

(declare-fun mapDefault!3159 () ValueCell!891)

(assert (=> mapNonEmpty!3157 (= condMapEmpty!3159 (= mapRest!3157 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3159)))))

(declare-fun e!47593 () Bool)

(declare-fun mapRes!3159 () Bool)

(assert (=> mapNonEmpty!3157 (= tp!8503 (and e!47593 mapRes!3159))))

(declare-fun b!72770 () Bool)

(assert (=> b!72770 (= e!47593 tp_is_empty!2469)))

(declare-fun b!72769 () Bool)

(declare-fun e!47594 () Bool)

(assert (=> b!72769 (= e!47594 tp_is_empty!2469)))

(declare-fun mapIsEmpty!3159 () Bool)

(assert (=> mapIsEmpty!3159 mapRes!3159))

(declare-fun mapNonEmpty!3159 () Bool)

(declare-fun tp!8505 () Bool)

(assert (=> mapNonEmpty!3159 (= mapRes!3159 (and tp!8505 e!47594))))

(declare-fun mapKey!3159 () (_ BitVec 32))

(declare-fun mapValue!3159 () ValueCell!891)

(declare-fun mapRest!3159 () (Array (_ BitVec 32) ValueCell!891))

(assert (=> mapNonEmpty!3159 (= mapRest!3157 (store mapRest!3159 mapKey!3159 mapValue!3159))))

(assert (= (and mapNonEmpty!3157 condMapEmpty!3159) mapIsEmpty!3159))

(assert (= (and mapNonEmpty!3157 (not condMapEmpty!3159)) mapNonEmpty!3159))

(assert (= (and mapNonEmpty!3159 ((_ is ValueCellFull!891) mapValue!3159)) b!72769))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!891) mapDefault!3159)) b!72770))

(declare-fun m!70985 () Bool)

(assert (=> mapNonEmpty!3159 m!70985))

(declare-fun condMapEmpty!3160 () Bool)

(declare-fun mapDefault!3160 () ValueCell!891)

(assert (=> mapNonEmpty!3158 (= condMapEmpty!3160 (= mapRest!3158 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3160)))))

(declare-fun e!47595 () Bool)

(declare-fun mapRes!3160 () Bool)

(assert (=> mapNonEmpty!3158 (= tp!8504 (and e!47595 mapRes!3160))))

(declare-fun b!72772 () Bool)

(assert (=> b!72772 (= e!47595 tp_is_empty!2469)))

(declare-fun b!72771 () Bool)

(declare-fun e!47596 () Bool)

(assert (=> b!72771 (= e!47596 tp_is_empty!2469)))

(declare-fun mapIsEmpty!3160 () Bool)

(assert (=> mapIsEmpty!3160 mapRes!3160))

(declare-fun mapNonEmpty!3160 () Bool)

(declare-fun tp!8506 () Bool)

(assert (=> mapNonEmpty!3160 (= mapRes!3160 (and tp!8506 e!47596))))

(declare-fun mapValue!3160 () ValueCell!891)

(declare-fun mapKey!3160 () (_ BitVec 32))

(declare-fun mapRest!3160 () (Array (_ BitVec 32) ValueCell!891))

(assert (=> mapNonEmpty!3160 (= mapRest!3158 (store mapRest!3160 mapKey!3160 mapValue!3160))))

(assert (= (and mapNonEmpty!3158 condMapEmpty!3160) mapIsEmpty!3160))

(assert (= (and mapNonEmpty!3158 (not condMapEmpty!3160)) mapNonEmpty!3160))

(assert (= (and mapNonEmpty!3160 ((_ is ValueCellFull!891) mapValue!3160)) b!72771))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!891) mapDefault!3160)) b!72772))

(declare-fun m!70987 () Bool)

(assert (=> mapNonEmpty!3160 m!70987))

(declare-fun b_lambda!3255 () Bool)

(assert (= b_lambda!3237 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3255)))

(declare-fun b_lambda!3257 () Bool)

(assert (= b_lambda!3243 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3257)))

(declare-fun b_lambda!3259 () Bool)

(assert (= b_lambda!3225 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3259)))

(declare-fun b_lambda!3261 () Bool)

(assert (= b_lambda!3251 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3261)))

(declare-fun b_lambda!3263 () Bool)

(assert (= b_lambda!3249 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3263)))

(declare-fun b_lambda!3265 () Bool)

(assert (= b_lambda!3231 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3265)))

(declare-fun b_lambda!3267 () Bool)

(assert (= b_lambda!3247 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3267)))

(declare-fun b_lambda!3269 () Bool)

(assert (= b_lambda!3239 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3269)))

(declare-fun b_lambda!3271 () Bool)

(assert (= b_lambda!3233 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3271)))

(declare-fun b_lambda!3273 () Bool)

(assert (= b_lambda!3229 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3273)))

(declare-fun b_lambda!3275 () Bool)

(assert (= b_lambda!3235 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3275)))

(declare-fun b_lambda!3277 () Bool)

(assert (= b_lambda!3227 (or (and b!70764 b_free!2105) (and b!70778 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))))) b_lambda!3277)))

(declare-fun b_lambda!3279 () Bool)

(assert (= b_lambda!3241 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3279)))

(declare-fun b_lambda!3281 () Bool)

(assert (= b_lambda!3245 (or (and b!70764 b_free!2105 (= (defaultEntry!2192 (v!2517 (underlying!261 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70778 b_free!2107) b_lambda!3281)))

(check-sat (not b!71795) (not d!16101) (not b!72642) (not b!71701) (not b!72288) (not b!72250) (not b!72354) (not d!16145) (not b!71996) (not b!72313) (not b!71870) (not d!16565) (not d!16583) (not d!16527) (not d!16321) (not bm!6323) (not b!71808) (not b!71656) (not b!72618) (not b!72609) (not b!71825) (not d!16251) (not b_lambda!3221) (not b!72204) (not b!72013) (not b!71984) (not b!71687) (not b_lambda!3255) (not b!72536) (not b!72672) (not b!72603) (not b!72450) (not d!16645) (not d!16691) (not b!72385) (not b!72473) (not b!71649) (not d!16301) (not b!72494) (not b!72161) (not bm!6301) (not b!72670) (not b!71741) (not b!71899) (not b!72554) (not bm!6264) (not b!72183) (not b!72102) (not d!16241) (not b!72001) (not b!72451) (not b!72607) (not b!72210) (not d!16707) (not b!72032) (not b!71889) (not b!72240) (not b!71841) (not d!16147) (not b!72623) (not b!72497) (not b!71750) (not b!72187) (not d!16463) (not b!72006) (not b!71712) (not d!16051) (not b!71757) (not b!72661) (not d!16091) (not bm!6231) (not b!72224) (not b!72624) (not d!16431) (not b!71994) (not b!72405) (not d!16219) (not d!16363) (not b!72737) (not b!72599) (not b!72486) (not b!71692) (not b!72580) (not b!72378) (not b!71933) (not d!16327) (not b!72523) (not d!16667) (not b!72131) (not d!16469) (not d!16159) (not b!72084) (not b!72595) (not b!71862) (not b!72004) (not d!16653) (not d!16103) (not b!72602) (not b!72589) (not d!16367) tp_is_empty!2469 (not d!16615) (not d!16403) (not b!72065) (not b_lambda!3215) (not bm!6277) (not b!71893) (not d!16291) (not b!72233) (not bm!6300) (not b!72202) (not b!72146) (not b_lambda!3253) (not d!16679) (not b!72242) (not b!72189) (not b!72350) (not b!72088) (not b!72080) (not d!16391) (not bm!6269) (not b!72316) (not d!16507) (not b!72118) (not d!16449) (not d!16701) (not d!16279) (not b!71760) (not d!16451) (not b!71783) (not b!71954) (not d!16709) (not b!71738) (not b!71805) (not d!16277) (not b!72078) (not b!71988) (not bm!6329) (not bm!6339) (not b!71672) (not b!72306) (not b!72192) (not d!16551) (not d!16727) (not d!16221) (not d!16481) (not b!72633) (not bm!6320) (not b!72296) (not b!72011) (not d!16503) (not bm!6279) (not b!71898) (not d!16769) (not bm!6284) (not bm!6270) (not b!71998) (not b!71959) (not d!16703) (not b!72252) (not b!72025) (not b!71813) (not b!72281) (not b!72017) (not d!16309) (not b!72709) (not b!72601) (not d!16401) (not b!71786) (not bm!6266) (not bm!6334) (not d!16127) (not b_lambda!3217) (not b!72572) (not b!72549) (not d!16489) (not b!72571) (not b!71752) (not b!72417) (not b!72200) (not d!16265) (not d!16699) (not b!72036) (not b!71621) (not d!16513) (not d!16789) (not b!72091) (not b!71901) (not b!72285) (not bm!6296) (not b!72621) (not b!72401) (not b!72124) (not b!71875) (not b!72586) (not bm!6262) (not d!16139) (not b!72539) (not b!71956) (not bm!6241) (not b!71810) (not b!71788) (not b!72330) (not b!71939) (not b!72448) (not b!71706) (not d!16063) (not d!16435) (not bm!6281) (not b!71657) (not b!72454) (not bm!6315) (not d!16173) (not d!16257) (not d!16519) (not b!72108) (not bm!6228) (not d!16115) (not d!16655) (not d!16263) (not b!72156) (not d!16677) (not d!16379) (not bm!6242) (not b!71799) (not b!71916) (not bm!6299) (not d!16273) (not b!71867) (not b!72151) (not b!71790) (not d!16681) (not b!72086) (not b!72158) (not b!72574) (not bm!6289) (not b!72301) (not bm!6255) (not d!16517) (not d!16411) (not b!72170) (not b!72270) (not b!72511) (not bm!6286) (not b!71877) (not d!16567) (not d!16405) (not b!72471) (not b!72582) (not b!72022) (not d!16757) (not d!16175) (not bm!6254) (not b!71860) (not d!16487) (not b!72236) (not b!72137) (not d!16731) (not b!71880) (not b!72099) (not b!71802) (not bm!6308) (not b!71952) (not b!72393) (not b!72520) (not b!71694) (not b!71729) (not bm!6322) (not d!16559) (not d!16423) (not d!16081) (not b!72652) (not d!16049) (not d!16223) (not d!16611) (not b!71695) (not b!71937) (not b!72706) (not b!72367) (not d!16123) (not b!72507) (not b!72352) (not b!71730) (not d!16191) (not b!72219) (not b!71640) (not b!71721) (not d!16725) (not b!71731) (not b!71654) (not b!72297) (not d!16553) (not b!72645) (not b!71910) (not b!72569) (not d!16121) (not b!72565) (not bm!6220) (not d!16545) (not bm!6259) (not b!71995) (not b!72098) (not bm!6234) (not b!72071) (not b!72266) (not b!72237) (not b!72597) (not d!16763) (not b!72655) (not d!16455) (not b!71702) (not b!72070) (not d!16723) (not b_lambda!3267) (not b!72747) (not b!71664) (not b!72615) (not b!71908) (not b!71748) (not d!16535) (not b!71735) (not b!72115) (not b!72636) (not b!72205) (not b!71850) (not b!72328) (not b!72082) (not d!16197) (not b!72412) (not d!16393) (not b!71627) (not b!71646) (not d!16105) (not d!16537) (not b!71792) (not b!71651) (not b!72660) (not b!71858) (not b!72560) (not d!16075) (not d!16629) (not b!72254) (not d!16057) (not b!72231) (not mapNonEmpty!3160) (not b!72431) (not d!16523) (not b!71960) (not b!71945) (not b!71855) (not bm!6272) (not b!72153) (not d!16573) (not b!72176) (not b!72376) (not d!16307) (not b!72682) (not b_lambda!3281) (not d!16419) (not d!16289) (not d!16079) (not b!71883) (not b!72543) (not b!72745) (not d!16261) (not d!16415) (not b!72546) (not d!16427) (not b!72449) (not d!16509) (not b!71740) (not d!16213) (not b!72498) (not d!16207) (not bm!6312) (not b!72729) (not b!71951) (not b!72361) (not d!16313) (not b_lambda!3269) (not b!72563) (not b!71816) (not d!16253) (not b!71697) (not d!16543) (not b!72207) (not bm!6331) (not b!72318) (not b_lambda!3277) (not bm!6309) (not b!72476) (not d!16317) (not bm!6324) (not d!16155) (not d!16647) (not bm!6336) (not b!71853) (not b!71772) (not b!72272) (not b!72245) (not b!72453) (not b!71769) (not b!72594) (not b!71918) (not b!72466) (not b!72228) (not d!16683) (not b!72015) (not b!72514) (not b!72442) (not b!72577) (not b!72488) (not b_lambda!3257) (not b!71928) (not b!72657) (not b!72703) (not bm!6342) (not d!16717) (not d!16315) (not d!16633) (not b!72455) (not b!72648) (not b!72166) (not b!71966) (not b!71733) (not b!72136) (not b!72062) (not d!16343) (not b!71950) (not b!71914) (not b!71976) (not b!71707) (not b!72325) (not b_lambda!3203) (not b!72003) (not b!72579) (not d!16475) (not b!72341) (not b!72263) (not b!72332) (not b!72180) (not d!16749) (not d!16097) (not b_lambda!3275) (not b!72303) (not b!71962) (not b!72222) (not bm!6280) (not d!16417) (not b!72754) (not b!72516) (not b!72315) (not b!71943) (not b!72074) (not b_lambda!3201) (not b!72460) (not b!72068) (not d!16661) (not b!71865) (not d!16685) (not d!16779) (not b!71848) (not bm!6256) (not b!72463) (not b!71754) (not b!72744) (not b!72531) (not bm!6290) (not bm!6223) (not b!72103) (not b!72023) (not d!16443) (not d!16137) (not b!71828) (not b!71949) (not d!16129) (not d!16383) (not b!71935) (not b!72505) (not d!16587) (not d!16243) (not bm!6294) (not d!16109) (not d!16673) (not b!72116) (not d!16217) (not b_lambda!3263) (not b!72101) (not b!72564) (not b!71713) (not d!16143) (not d!16077) (not b!72762) (not d!16719) (not d!16781) (not b!71724) (not b!72611) (not b!72551) (not d!16511) (not b!72214) (not b!72113) (not b!72409) (not b!71776) (not b!72343) (not b!72528) (not d!16285) (not d!16181) (not d!16649) (not d!16465) (not b!72357) (not d!16711) (not d!16497) (not b!71888) (not d!16531) (not b!72190) (not d!16485) (not d!16761) (not b!72323) (not b!72462) (not b!72596) (not b!72742) (not b!72185) (not b!72481) (not b!71851) (not b!72397) (not b!72394) (not b!72668) (not b_lambda!3279) (not b!72701) (not d!16287) (not b!72766) (not b!72173) (not d!16467) (not bm!6227) (not b!72334) (not d!16337) (not d!16445) (not b!72369) (not d!16715) (not b!72626) (not d!16323) (not b!72364) (not b_lambda!3265) (not d!16165) (not b_lambda!3261) (not b!72403) (not d!16365) (not b!71696) (not d!16581) (not b!72294) (not b!72503) (not b!72444) (not b!71743) (not b!71906) (not b!72437) (not d!16231) (not d!16695) (not d!16275) (not d!16505) (not b!72664) (not b!71979) (not b!72550) (not b!71947) (not d!16157) (not b!71819) (not b!71789) (not b!71926) (not d!16199) (not b!72338) (not b!71699) (not d!16161) (not d!16657) (not d!16529) (not d!16609) (not b!72363) (not bm!6249) (not b!71823) (not d!16061) (not b!72587) (not bm!6226) (not b!72020) (not b!71623) (not b!72764) (not b!71815) (not bm!6335) (not bm!6306) (not b!72276) (not b!72144) (not b!71779) (not d!16563) (not b!72399) (not b_lambda!3271) (not b!71767) (not b!72140) (not b!72479) (not b!71625) (not b!72631) (not b_lambda!3199) (not b!72126) (not d!16479) (not d!16457) (not b!72244) (not b!71782) (not b!71638) (not b!71635) (not b_lambda!3273) (not b!72537) (not b!72197) (not bm!6246) (not d!16493) (not d!16601) (not b!72076) (not d!16775) (not b!71719) (not bm!6278) (not d!16361) (not b!72358) (not d!16659) (not b!72284) (not b!71703) (not b!72757) (not d!16269) (not d!16271) (not d!16333) (not b!71647) (not b!72371) (not b!72269) (not bm!6271) (not d!16663) (not d!16767) (not b!71923) (not b!72133) (not b!71762) (not d!16471) (not b!72149) (not b!72679) (not d!16705) (not b!72759) (not b!72308) (not b!71690) (not b!71843) (not b!71896) (not d!16267) (not b!72752) (not b!71831) (not b!71973) (not b!71836) (not b!71833) (not b!71912) (not b!72695) (not b!72264) (not d!16095) (not b!72434) (not bm!6326) (not d!16621) (not b!71773) (not b!72566) (not b!72519) (not d!16135) (not b!72388) (not d!16525) (not b!72030) (not b!72468) (not b!71683) (not d!16737) (not b!72172) (not b!71868) (not bm!6303) (not b!72429) (not b!72584) (not b!72355) (not d!16607) (not d!16671) (not b!72425) (not bm!6307) (not b!72666) (not b!72502) (not d!16283) (not b!72121) (not b!71806) (not d!16083) (not b!72677) (not d!16385) (not d!16461) (not bm!6321) (not b!71920) (not b!72542) (not d!16433) (not d!16421) (not b!72768) (not b_lambda!3191) (not b!71717) (not d!16055) (not b!71680) (not b!71732) (not d!16751) (not bm!6263) (not b!72194) (not b!71710) (not b!71727) (not b!72739) (not b!72491) (not b!72639) (not b!72616) (not b!71882) (not d!16499) (not b!72310) (not b!71659) (not b!71992) (not d!16209) (not d!16235) (not b!71845) (not b!71887) (not d!16735) (not d!16281) (not b!71643) (not b!71964) (not d!16387) (not b_next!2105) (not d!16201) (not b!72366) (not b!71961) (not b!71968) (not d!16773) (not b!71781) (not d!16195) (not b!71669) (not d!16229) (not b!72159) (not bm!6291) (not d!16593) (not d!16187) (not b!72034) (not b!72123) (not b!72426) (not bm!6219) (not d!16331) (not d!16793) (not d!16669) (not d!16447) (not b!72111) (not b!71676) (not b!72423) (not b_next!2107) (not b!72500) (not b!72381) (not b!72591) (not d!16355) (not d!16713) (not b!72421) (not d!16665) (not mapNonEmpty!3159) (not d!16329) (not b_lambda!3219) (not b!72305) (not d!16189) (not b!72347) (not b!71784) (not b_lambda!3223) (not b!72470) (not b!72217) (not b!71759) (not b!71885) (not b!72178) (not d!16539) b_and!4463 (not b!72105) (not bm!6274) (not bm!6317) (not b!72168) (not d!16745) (not b!72613) (not b!72290) (not d!16151) (not b!71826) (not b_lambda!3259) (not d!16371) (not d!16533) (not b!72606) (not bm!6243) (not bm!6235) (not d!16591) (not b!72457) (not b!72095) (not b!72307) (not b!71891) (not b!71881) (not d!16131) (not b!72578) (not b!71684) (not b!72598) (not b!71834) (not b!72575) (not b!72073) b_and!4461 (not d!16259) (not b!71629) (not bm!6325) (not b!71967) (not b!72390) (not b!72418) (not b!72557) (not b!71715) (not bm!6218) (not b!71666) (not d!16029) (not b!72279) (not b!72447) (not b!71970) (not bm!6238) (not b!71946) (not d!16675) (not b!72299) (not b!71971) (not b!72346) (not d!16149) (not b!72414) (not d!16373) (not b!72525) (not b!71821) (not d!16721) (not b!72610) (not d!16227) (not d!16603) (not b!71941) (not b!72478) (not d!16205))
(check-sat b_and!4461 b_and!4463 (not b_next!2105) (not b_next!2107))
