; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!134818 () Bool)

(assert start!134818)

(declare-fun res!1073860 () Bool)

(declare-fun e!876323 () Bool)

(assert (=> start!134818 (=> (not res!1073860) (not e!876323))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134818 (= res!1073860 (validMask!0 mask!889))))

(assert (=> start!134818 e!876323))

(assert (=> start!134818 true))

(declare-datatypes ((array!104879 0))(
  ( (array!104880 (arr!50607 (Array (_ BitVec 32) (_ BitVec 64))) (size!51158 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104879)

(declare-fun array_inv!39252 (array!104879) Bool)

(assert (=> start!134818 (array_inv!39252 _keys!600)))

(declare-fun b!1571607 () Bool)

(declare-fun res!1073861 () Bool)

(assert (=> b!1571607 (=> (not res!1073861) (not e!876323))))

(assert (=> b!1571607 (= res!1073861 (= (size!51158 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571608 () Bool)

(declare-fun res!1073859 () Bool)

(assert (=> b!1571608 (=> (not res!1073859) (not e!876323))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571608 (= res!1073859 (validKeyInArray!0 k!754))))

(declare-fun b!1571609 () Bool)

(declare-fun lt!673627 () (_ BitVec 32))

(assert (=> b!1571609 (= e!876323 (and (bvsge mask!889 #b00000000000000000000000000000000) (or (bvslt lt!673627 #b00000000000000000000000000000000) (bvsge lt!673627 (bvadd #b00000000000000000000000000000001 mask!889)))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571609 (= lt!673627 (toIndex!0 k!754 mask!889))))

(assert (= (and start!134818 res!1073860) b!1571607))

(assert (= (and b!1571607 res!1073861) b!1571608))

(assert (= (and b!1571608 res!1073859) b!1571609))

(declare-fun m!1445537 () Bool)

(assert (=> start!134818 m!1445537))

(declare-fun m!1445539 () Bool)

(assert (=> start!134818 m!1445539))

(declare-fun m!1445541 () Bool)

(assert (=> b!1571608 m!1445541))

(declare-fun m!1445543 () Bool)

(assert (=> b!1571609 m!1445543))

(push 1)

(assert (not start!134818))

(assert (not b!1571608))

(assert (not b!1571609))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!164559 () Bool)

(assert (=> d!164559 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134818 d!164559))

(declare-fun d!164569 () Bool)

(assert (=> d!164569 (= (array_inv!39252 _keys!600) (bvsge (size!51158 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134818 d!164569))

(declare-fun d!164571 () Bool)

(assert (=> d!164571 (= (validKeyInArray!0 k!754) (and (not (= k!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571608 d!164571))

(declare-fun d!164573 () Bool)

(declare-fun lt!673645 () (_ BitVec 32))

(declare-fun lt!673644 () (_ BitVec 32))

(assert (=> d!164573 (= lt!673645 (bvmul (bvxor lt!673644 (bvlshr lt!673644 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164573 (= lt!673644 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164573 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073864 (let ((h!38371 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141319 (bvmul (bvxor h!38371 (bvlshr h!38371 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141319 (bvlshr x!141319 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073864 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073864 #b00000000000000000000000000000000))))))

(assert (=> d!164573 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!673645 (bvlshr lt!673645 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571609 d!164573))

(push 1)

(check-sat)

