; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9436 () Bool)

(assert start!9436)

(declare-fun b!68443 () Bool)

(declare-fun b_free!2081 () Bool)

(declare-fun b_next!2081 () Bool)

(assert (=> b!68443 (= b_free!2081 (not b_next!2081))))

(declare-fun tp!8405 () Bool)

(declare-fun b_and!4209 () Bool)

(assert (=> b!68443 (= tp!8405 b_and!4209)))

(declare-fun b!68428 () Bool)

(declare-fun b_free!2083 () Bool)

(declare-fun b_next!2083 () Bool)

(assert (=> b!68428 (= b_free!2083 (not b_next!2083))))

(declare-fun tp!8403 () Bool)

(declare-fun b_and!4211 () Bool)

(assert (=> b!68428 (= tp!8403 b_and!4211)))

(declare-fun b!68424 () Bool)

(declare-fun e!44857 () Bool)

(declare-fun e!44846 () Bool)

(declare-fun mapRes!3101 () Bool)

(assert (=> b!68424 (= e!44857 (and e!44846 mapRes!3101))))

(declare-fun condMapEmpty!3102 () Bool)

(declare-datatypes ((V!2923 0))(
  ( (V!2924 (val!1273 Int)) )
))
(declare-datatypes ((array!3854 0))(
  ( (array!3855 (arr!1840 (Array (_ BitVec 32) (_ BitVec 64))) (size!2076 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!885 0))(
  ( (ValueCellFull!885 (v!2494 V!2923)) (EmptyCell!885) )
))
(declare-datatypes ((array!3856 0))(
  ( (array!3857 (arr!1841 (Array (_ BitVec 32) ValueCell!885)) (size!2077 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!678 0))(
  ( (LongMapFixedSize!679 (defaultEntry!2168 Int) (mask!6113 (_ BitVec 32)) (extraKeys!2035 (_ BitVec 32)) (zeroValue!2074 V!2923) (minValue!2074 V!2923) (_size!388 (_ BitVec 32)) (_keys!3812 array!3854) (_values!2151 array!3856) (_vacant!388 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!488 0))(
  ( (Cell!489 (v!2495 LongMapFixedSize!678)) )
))
(declare-datatypes ((LongMap!488 0))(
  ( (LongMap!489 (underlying!255 Cell!488)) )
))
(declare-fun thiss!992 () LongMap!488)

(declare-fun mapDefault!3102 () ValueCell!885)

(assert (=> b!68424 (= condMapEmpty!3102 (= (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3102)))))

(declare-fun b!68425 () Bool)

(declare-fun e!44845 () Bool)

(assert (=> b!68425 (= e!44845 (or (not (= (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6113 (v!2495 (underlying!255 thiss!992)))))) (= (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun mapIsEmpty!3101 () Bool)

(declare-fun mapRes!3102 () Bool)

(assert (=> mapIsEmpty!3101 mapRes!3102))

(declare-fun b!68426 () Bool)

(declare-fun e!44849 () Bool)

(assert (=> b!68426 (= e!44849 (not e!44845))))

(declare-fun res!36805 () Bool)

(assert (=> b!68426 (=> res!36805 e!44845)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!68426 (= res!36805 (not (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992))))))))

(declare-datatypes ((tuple2!2118 0))(
  ( (tuple2!2119 (_1!1069 (_ BitVec 64)) (_2!1069 V!2923)) )
))
(declare-datatypes ((List!1494 0))(
  ( (Nil!1491) (Cons!1490 (h!2075 tuple2!2118) (t!5001 List!1494)) )
))
(declare-datatypes ((ListLongMap!1421 0))(
  ( (ListLongMap!1422 (toList!726 List!1494)) )
))
(declare-fun lt!29768 () ListLongMap!1421)

(declare-fun lt!29775 () tuple2!2118)

(declare-fun lt!29777 () tuple2!2118)

(declare-fun +!89 (ListLongMap!1421 tuple2!2118) ListLongMap!1421)

(assert (=> b!68426 (= (+!89 (+!89 lt!29768 lt!29775) lt!29777) (+!89 (+!89 lt!29768 lt!29777) lt!29775))))

(assert (=> b!68426 (= lt!29777 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lt!29778 () V!2923)

(assert (=> b!68426 (= lt!29775 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))

(declare-datatypes ((Unit!1913 0))(
  ( (Unit!1914) )
))
(declare-fun lt!29776 () Unit!1913)

(declare-fun addCommutativeForDiffKeys!8 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64) V!2923) Unit!1913)

(assert (=> b!68426 (= lt!29776 (addCommutativeForDiffKeys!8 lt!29768 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!53 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) ListLongMap!1421)

(assert (=> b!68426 (= lt!29768 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68427 () Bool)

(declare-fun e!44855 () Bool)

(declare-fun tp_is_empty!2457 () Bool)

(assert (=> b!68427 (= e!44855 tp_is_empty!2457)))

(declare-fun e!44851 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!678)

(declare-fun e!44850 () Bool)

(declare-fun array_inv!1089 (array!3854) Bool)

(declare-fun array_inv!1090 (array!3856) Bool)

(assert (=> b!68428 (= e!44850 (and tp!8403 tp_is_empty!2457 (array_inv!1089 (_keys!3812 newMap!16)) (array_inv!1090 (_values!2151 newMap!16)) e!44851))))

(declare-fun b!68429 () Bool)

(declare-fun e!44858 () Bool)

(declare-fun e!44859 () Bool)

(assert (=> b!68429 (= e!44858 e!44859)))

(declare-fun res!36806 () Bool)

(declare-fun e!44861 () Bool)

(assert (=> start!9436 (=> (not res!36806) (not e!44861))))

(declare-fun valid!281 (LongMap!488) Bool)

(assert (=> start!9436 (= res!36806 (valid!281 thiss!992))))

(assert (=> start!9436 e!44861))

(declare-fun e!44860 () Bool)

(assert (=> start!9436 e!44860))

(assert (=> start!9436 true))

(assert (=> start!9436 e!44850))

(declare-fun mapIsEmpty!3102 () Bool)

(assert (=> mapIsEmpty!3102 mapRes!3101))

(declare-fun b!68430 () Bool)

(declare-fun e!44848 () Bool)

(assert (=> b!68430 (= e!44848 tp_is_empty!2457)))

(declare-fun b!68431 () Bool)

(declare-fun res!36804 () Bool)

(assert (=> b!68431 (=> (not res!36804) (not e!44861))))

(declare-fun valid!282 (LongMapFixedSize!678) Bool)

(assert (=> b!68431 (= res!36804 (valid!282 newMap!16))))

(declare-fun b!68432 () Bool)

(declare-fun res!36809 () Bool)

(assert (=> b!68432 (=> (not res!36809) (not e!44861))))

(assert (=> b!68432 (= res!36809 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6113 newMap!16)) (_size!388 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68433 () Bool)

(declare-fun e!44852 () Bool)

(assert (=> b!68433 (= e!44852 e!44849)))

(declare-fun res!36810 () Bool)

(assert (=> b!68433 (=> (not res!36810) (not e!44849))))

(declare-datatypes ((tuple2!2120 0))(
  ( (tuple2!2121 (_1!1070 Bool) (_2!1070 LongMapFixedSize!678)) )
))
(declare-fun lt!29774 () tuple2!2120)

(assert (=> b!68433 (= res!36810 (and (_1!1070 lt!29774) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!29773 () Unit!1913)

(declare-fun e!44854 () Unit!1913)

(assert (=> b!68433 (= lt!29773 e!44854)))

(declare-fun c!9679 () Bool)

(declare-fun lt!29772 () ListLongMap!1421)

(declare-fun contains!720 (ListLongMap!1421 (_ BitVec 64)) Bool)

(assert (=> b!68433 (= c!9679 (contains!720 lt!29772 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun update!98 (LongMapFixedSize!678 (_ BitVec 64) V!2923) tuple2!2120)

(assert (=> b!68433 (= lt!29774 (update!98 newMap!16 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))

(declare-fun b!68434 () Bool)

(declare-fun e!44856 () Bool)

(assert (=> b!68434 (= e!44856 e!44852)))

(declare-fun res!36807 () Bool)

(assert (=> b!68434 (=> (not res!36807) (not e!44852))))

(assert (=> b!68434 (= res!36807 (and (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1133 (ValueCell!885 V!2923) V!2923)

(declare-fun dynLambda!325 (Int (_ BitVec 64)) V!2923)

(assert (=> b!68434 (= lt!29778 (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68435 () Bool)

(declare-fun e!44853 () Bool)

(assert (=> b!68435 (= e!44851 (and e!44853 mapRes!3102))))

(declare-fun condMapEmpty!3101 () Bool)

(declare-fun mapDefault!3101 () ValueCell!885)

(assert (=> b!68435 (= condMapEmpty!3101 (= (arr!1841 (_values!2151 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3101)))))

(declare-fun mapNonEmpty!3101 () Bool)

(declare-fun tp!8404 () Bool)

(assert (=> mapNonEmpty!3101 (= mapRes!3102 (and tp!8404 e!44848))))

(declare-fun mapRest!3101 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3101 () ValueCell!885)

(declare-fun mapKey!3101 () (_ BitVec 32))

(assert (=> mapNonEmpty!3101 (= (arr!1841 (_values!2151 newMap!16)) (store mapRest!3101 mapKey!3101 mapValue!3101))))

(declare-fun b!68436 () Bool)

(assert (=> b!68436 (= e!44861 e!44856)))

(declare-fun res!36811 () Bool)

(assert (=> b!68436 (=> (not res!36811) (not e!44856))))

(declare-fun lt!29771 () ListLongMap!1421)

(assert (=> b!68436 (= res!36811 (= lt!29771 lt!29772))))

(declare-fun map!1147 (LongMapFixedSize!678) ListLongMap!1421)

(assert (=> b!68436 (= lt!29772 (map!1147 newMap!16))))

(declare-fun getCurrentListMap!421 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) ListLongMap!1421)

(assert (=> b!68436 (= lt!29771 (getCurrentListMap!421 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68437 () Bool)

(declare-fun Unit!1915 () Unit!1913)

(assert (=> b!68437 (= e!44854 Unit!1915)))

(declare-fun lt!29770 () Unit!1913)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!47 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1913)

(assert (=> b!68437 (= lt!29770 (lemmaListMapContainsThenArrayContainsFrom!47 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3854 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!68437 (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!29769 () Unit!1913)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3854 (_ BitVec 32) (_ BitVec 32)) Unit!1913)

(assert (=> b!68437 (= lt!29769 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1495 0))(
  ( (Nil!1492) (Cons!1491 (h!2076 (_ BitVec 64)) (t!5002 List!1495)) )
))
(declare-fun arrayNoDuplicates!0 (array!3854 (_ BitVec 32) List!1495) Bool)

(assert (=> b!68437 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) from!355 Nil!1492)))

(declare-fun lt!29779 () Unit!1913)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3854 (_ BitVec 32) (_ BitVec 64) List!1495) Unit!1913)

(assert (=> b!68437 (= lt!29779 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492)))))

(assert (=> b!68437 false))

(declare-fun b!68438 () Bool)

(assert (=> b!68438 (= e!44860 e!44858)))

(declare-fun b!68439 () Bool)

(declare-fun res!36808 () Bool)

(assert (=> b!68439 (=> (not res!36808) (not e!44861))))

(assert (=> b!68439 (= res!36808 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!68440 () Bool)

(assert (=> b!68440 (= e!44853 tp_is_empty!2457)))

(declare-fun b!68441 () Bool)

(declare-fun Unit!1916 () Unit!1913)

(assert (=> b!68441 (= e!44854 Unit!1916)))

(declare-fun b!68442 () Bool)

(assert (=> b!68442 (= e!44846 tp_is_empty!2457)))

(assert (=> b!68443 (= e!44859 (and tp!8405 tp_is_empty!2457 (array_inv!1089 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (array_inv!1090 (_values!2151 (v!2495 (underlying!255 thiss!992)))) e!44857))))

(declare-fun mapNonEmpty!3102 () Bool)

(declare-fun tp!8406 () Bool)

(assert (=> mapNonEmpty!3102 (= mapRes!3101 (and tp!8406 e!44855))))

(declare-fun mapRest!3102 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3102 () ValueCell!885)

(declare-fun mapKey!3102 () (_ BitVec 32))

(assert (=> mapNonEmpty!3102 (= (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (store mapRest!3102 mapKey!3102 mapValue!3102))))

(assert (= (and start!9436 res!36806) b!68439))

(assert (= (and b!68439 res!36808) b!68431))

(assert (= (and b!68431 res!36804) b!68432))

(assert (= (and b!68432 res!36809) b!68436))

(assert (= (and b!68436 res!36811) b!68434))

(assert (= (and b!68434 res!36807) b!68433))

(assert (= (and b!68433 c!9679) b!68437))

(assert (= (and b!68433 (not c!9679)) b!68441))

(assert (= (and b!68433 res!36810) b!68426))

(assert (= (and b!68426 (not res!36805)) b!68425))

(assert (= (and b!68424 condMapEmpty!3102) mapIsEmpty!3102))

(assert (= (and b!68424 (not condMapEmpty!3102)) mapNonEmpty!3102))

(get-info :version)

(assert (= (and mapNonEmpty!3102 ((_ is ValueCellFull!885) mapValue!3102)) b!68427))

(assert (= (and b!68424 ((_ is ValueCellFull!885) mapDefault!3102)) b!68442))

(assert (= b!68443 b!68424))

(assert (= b!68429 b!68443))

(assert (= b!68438 b!68429))

(assert (= start!9436 b!68438))

(assert (= (and b!68435 condMapEmpty!3101) mapIsEmpty!3101))

(assert (= (and b!68435 (not condMapEmpty!3101)) mapNonEmpty!3101))

(assert (= (and mapNonEmpty!3101 ((_ is ValueCellFull!885) mapValue!3101)) b!68430))

(assert (= (and b!68435 ((_ is ValueCellFull!885) mapDefault!3101)) b!68440))

(assert (= b!68428 b!68435))

(assert (= start!9436 b!68428))

(declare-fun b_lambda!3075 () Bool)

(assert (=> (not b_lambda!3075) (not b!68434)))

(declare-fun t!4998 () Bool)

(declare-fun tb!1481 () Bool)

(assert (=> (and b!68443 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) t!4998) tb!1481))

(declare-fun result!2609 () Bool)

(assert (=> tb!1481 (= result!2609 tp_is_empty!2457)))

(assert (=> b!68434 t!4998))

(declare-fun b_and!4213 () Bool)

(assert (= b_and!4209 (and (=> t!4998 result!2609) b_and!4213)))

(declare-fun t!5000 () Bool)

(declare-fun tb!1483 () Bool)

(assert (=> (and b!68428 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) t!5000) tb!1483))

(declare-fun result!2613 () Bool)

(assert (= result!2613 result!2609))

(assert (=> b!68434 t!5000))

(declare-fun b_and!4215 () Bool)

(assert (= b_and!4211 (and (=> t!5000 result!2613) b_and!4215)))

(declare-fun m!64043 () Bool)

(assert (=> b!68434 m!64043))

(declare-fun m!64045 () Bool)

(assert (=> b!68434 m!64045))

(declare-fun m!64047 () Bool)

(assert (=> b!68434 m!64047))

(assert (=> b!68434 m!64045))

(assert (=> b!68434 m!64047))

(declare-fun m!64049 () Bool)

(assert (=> b!68434 m!64049))

(declare-fun m!64051 () Bool)

(assert (=> b!68443 m!64051))

(declare-fun m!64053 () Bool)

(assert (=> b!68443 m!64053))

(declare-fun m!64055 () Bool)

(assert (=> b!68437 m!64055))

(declare-fun m!64057 () Bool)

(assert (=> b!68437 m!64057))

(assert (=> b!68437 m!64043))

(declare-fun m!64059 () Bool)

(assert (=> b!68437 m!64059))

(assert (=> b!68437 m!64043))

(assert (=> b!68437 m!64043))

(declare-fun m!64061 () Bool)

(assert (=> b!68437 m!64061))

(assert (=> b!68437 m!64043))

(declare-fun m!64063 () Bool)

(assert (=> b!68437 m!64063))

(declare-fun m!64065 () Bool)

(assert (=> b!68426 m!64065))

(declare-fun m!64067 () Bool)

(assert (=> b!68426 m!64067))

(assert (=> b!68426 m!64043))

(declare-fun m!64069 () Bool)

(assert (=> b!68426 m!64069))

(assert (=> b!68426 m!64043))

(declare-fun m!64071 () Bool)

(assert (=> b!68426 m!64071))

(assert (=> b!68426 m!64065))

(declare-fun m!64073 () Bool)

(assert (=> b!68426 m!64073))

(declare-fun m!64075 () Bool)

(assert (=> b!68426 m!64075))

(assert (=> b!68426 m!64071))

(declare-fun m!64077 () Bool)

(assert (=> b!68426 m!64077))

(declare-fun m!64079 () Bool)

(assert (=> b!68428 m!64079))

(declare-fun m!64081 () Bool)

(assert (=> b!68428 m!64081))

(declare-fun m!64083 () Bool)

(assert (=> start!9436 m!64083))

(declare-fun m!64085 () Bool)

(assert (=> mapNonEmpty!3102 m!64085))

(declare-fun m!64087 () Bool)

(assert (=> b!68431 m!64087))

(declare-fun m!64089 () Bool)

(assert (=> mapNonEmpty!3101 m!64089))

(declare-fun m!64091 () Bool)

(assert (=> b!68436 m!64091))

(declare-fun m!64093 () Bool)

(assert (=> b!68436 m!64093))

(assert (=> b!68433 m!64043))

(assert (=> b!68433 m!64043))

(declare-fun m!64095 () Bool)

(assert (=> b!68433 m!64095))

(assert (=> b!68433 m!64043))

(declare-fun m!64097 () Bool)

(assert (=> b!68433 m!64097))

(check-sat (not start!9436) (not b_lambda!3075) b_and!4215 (not b_next!2081) (not b!68436) (not mapNonEmpty!3101) (not b!68433) (not b!68426) (not b!68437) (not b!68431) (not b_next!2083) (not b!68428) b_and!4213 (not mapNonEmpty!3102) tp_is_empty!2457 (not b!68434) (not b!68443))
(check-sat b_and!4213 b_and!4215 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun b_lambda!3079 () Bool)

(assert (= b_lambda!3075 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3079)))

(check-sat (not start!9436) b_and!4215 (not b_next!2081) (not b!68436) (not mapNonEmpty!3101) (not b!68433) (not b!68426) (not b_lambda!3079) (not b!68437) (not b!68431) (not b_next!2083) (not b!68428) b_and!4213 (not mapNonEmpty!3102) tp_is_empty!2457 (not b!68434) (not b!68443))
(check-sat b_and!4213 b_and!4215 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun d!14711 () Bool)

(assert (=> d!14711 (= (valid!281 thiss!992) (valid!282 (v!2495 (underlying!255 thiss!992))))))

(declare-fun bs!2934 () Bool)

(assert (= bs!2934 d!14711))

(declare-fun m!64155 () Bool)

(assert (=> bs!2934 m!64155))

(assert (=> start!9436 d!14711))

(declare-fun b!68532 () Bool)

(declare-fun lt!29836 () ListLongMap!1421)

(declare-fun e!44930 () Bool)

(assert (=> b!68532 (= e!44930 (= lt!29836 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun d!14713 () Bool)

(declare-fun e!44931 () Bool)

(assert (=> d!14713 e!44931))

(declare-fun res!36847 () Bool)

(assert (=> d!14713 (=> (not res!36847) (not e!44931))))

(assert (=> d!14713 (= res!36847 (not (contains!720 lt!29836 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!44934 () ListLongMap!1421)

(assert (=> d!14713 (= lt!29836 e!44934)))

(declare-fun c!9693 () Bool)

(assert (=> d!14713 (= c!9693 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!14713 (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992))))))

(assert (=> d!14713 (= (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) lt!29836)))

(declare-fun b!68533 () Bool)

(declare-fun res!36845 () Bool)

(assert (=> b!68533 (=> (not res!36845) (not e!44931))))

(assert (=> b!68533 (= res!36845 (not (contains!720 lt!29836 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!5760 () Bool)

(declare-fun call!5763 () ListLongMap!1421)

(assert (=> bm!5760 (= call!5763 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68534 () Bool)

(declare-fun isEmpty!315 (ListLongMap!1421) Bool)

(assert (=> b!68534 (= e!44930 (isEmpty!315 lt!29836))))

(declare-fun b!68535 () Bool)

(declare-fun e!44936 () Bool)

(declare-fun e!44935 () Bool)

(assert (=> b!68535 (= e!44936 e!44935)))

(assert (=> b!68535 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun res!36846 () Bool)

(assert (=> b!68535 (= res!36846 (contains!720 lt!29836 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68535 (=> (not res!36846) (not e!44935))))

(declare-fun b!68536 () Bool)

(assert (=> b!68536 (= e!44934 (ListLongMap!1422 Nil!1491))))

(declare-fun b!68537 () Bool)

(assert (=> b!68537 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> b!68537 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun apply!73 (ListLongMap!1421 (_ BitVec 64)) V!2923)

(assert (=> b!68537 (= e!44935 (= (apply!73 lt!29836 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!68538 () Bool)

(declare-fun e!44933 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!68538 (= e!44933 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68538 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!68539 () Bool)

(declare-fun lt!29831 () Unit!1913)

(declare-fun lt!29834 () Unit!1913)

(assert (=> b!68539 (= lt!29831 lt!29834)))

(declare-fun lt!29832 () ListLongMap!1421)

(declare-fun lt!29835 () (_ BitVec 64))

(declare-fun lt!29833 () (_ BitVec 64))

(declare-fun lt!29830 () V!2923)

(assert (=> b!68539 (not (contains!720 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)) lt!29833))))

(declare-fun addStillNotContains!24 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1913)

(assert (=> b!68539 (= lt!29834 (addStillNotContains!24 lt!29832 lt!29835 lt!29830 lt!29833))))

(assert (=> b!68539 (= lt!29833 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!68539 (= lt!29830 (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!68539 (= lt!29835 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!68539 (= lt!29832 call!5763)))

(declare-fun e!44932 () ListLongMap!1421)

(assert (=> b!68539 (= e!44932 (+!89 call!5763 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68540 () Bool)

(assert (=> b!68540 (= e!44932 call!5763)))

(declare-fun b!68541 () Bool)

(assert (=> b!68541 (= e!44934 e!44932)))

(declare-fun c!9694 () Bool)

(assert (=> b!68541 (= c!9694 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68542 () Bool)

(assert (=> b!68542 (= e!44936 e!44930)))

(declare-fun c!9691 () Bool)

(assert (=> b!68542 (= c!9691 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!68543 () Bool)

(assert (=> b!68543 (= e!44931 e!44936)))

(declare-fun c!9692 () Bool)

(assert (=> b!68543 (= c!9692 e!44933)))

(declare-fun res!36844 () Bool)

(assert (=> b!68543 (=> (not res!36844) (not e!44933))))

(assert (=> b!68543 (= res!36844 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14713 c!9693) b!68536))

(assert (= (and d!14713 (not c!9693)) b!68541))

(assert (= (and b!68541 c!9694) b!68539))

(assert (= (and b!68541 (not c!9694)) b!68540))

(assert (= (or b!68539 b!68540) bm!5760))

(assert (= (and d!14713 res!36847) b!68533))

(assert (= (and b!68533 res!36845) b!68543))

(assert (= (and b!68543 res!36844) b!68538))

(assert (= (and b!68543 c!9692) b!68535))

(assert (= (and b!68543 (not c!9692)) b!68542))

(assert (= (and b!68535 res!36846) b!68537))

(assert (= (and b!68542 c!9691) b!68532))

(assert (= (and b!68542 (not c!9691)) b!68534))

(declare-fun b_lambda!3081 () Bool)

(assert (=> (not b_lambda!3081) (not b!68537)))

(assert (=> b!68537 t!4998))

(declare-fun b_and!4225 () Bool)

(assert (= b_and!4213 (and (=> t!4998 result!2609) b_and!4225)))

(assert (=> b!68537 t!5000))

(declare-fun b_and!4227 () Bool)

(assert (= b_and!4215 (and (=> t!5000 result!2613) b_and!4227)))

(declare-fun b_lambda!3083 () Bool)

(assert (=> (not b_lambda!3083) (not b!68539)))

(assert (=> b!68539 t!4998))

(declare-fun b_and!4229 () Bool)

(assert (= b_and!4225 (and (=> t!4998 result!2609) b_and!4229)))

(assert (=> b!68539 t!5000))

(declare-fun b_and!4231 () Bool)

(assert (= b_and!4227 (and (=> t!5000 result!2613) b_and!4231)))

(declare-fun m!64157 () Bool)

(assert (=> d!14713 m!64157))

(assert (=> d!14713 m!64067))

(declare-fun m!64159 () Bool)

(assert (=> b!68535 m!64159))

(assert (=> b!68535 m!64159))

(declare-fun m!64161 () Bool)

(assert (=> b!68535 m!64161))

(declare-fun m!64163 () Bool)

(assert (=> b!68534 m!64163))

(declare-fun m!64165 () Bool)

(assert (=> b!68532 m!64165))

(declare-fun m!64167 () Bool)

(assert (=> b!68533 m!64167))

(declare-fun m!64169 () Bool)

(assert (=> b!68537 m!64169))

(assert (=> b!68537 m!64169))

(assert (=> b!68537 m!64047))

(declare-fun m!64171 () Bool)

(assert (=> b!68537 m!64171))

(assert (=> b!68537 m!64159))

(assert (=> b!68537 m!64159))

(declare-fun m!64173 () Bool)

(assert (=> b!68537 m!64173))

(assert (=> b!68537 m!64047))

(assert (=> bm!5760 m!64165))

(assert (=> b!68541 m!64159))

(assert (=> b!68541 m!64159))

(declare-fun m!64175 () Bool)

(assert (=> b!68541 m!64175))

(assert (=> b!68538 m!64159))

(assert (=> b!68538 m!64159))

(assert (=> b!68538 m!64175))

(declare-fun m!64177 () Bool)

(assert (=> b!68539 m!64177))

(assert (=> b!68539 m!64169))

(assert (=> b!68539 m!64047))

(assert (=> b!68539 m!64171))

(declare-fun m!64179 () Bool)

(assert (=> b!68539 m!64179))

(assert (=> b!68539 m!64159))

(declare-fun m!64181 () Bool)

(assert (=> b!68539 m!64181))

(assert (=> b!68539 m!64047))

(assert (=> b!68539 m!64179))

(declare-fun m!64183 () Bool)

(assert (=> b!68539 m!64183))

(assert (=> b!68539 m!64169))

(assert (=> b!68426 d!14713))

(declare-fun d!14715 () Bool)

(declare-fun e!44939 () Bool)

(assert (=> d!14715 e!44939))

(declare-fun res!36853 () Bool)

(assert (=> d!14715 (=> (not res!36853) (not e!44939))))

(declare-fun lt!29847 () ListLongMap!1421)

(assert (=> d!14715 (= res!36853 (contains!720 lt!29847 (_1!1069 lt!29777)))))

(declare-fun lt!29848 () List!1494)

(assert (=> d!14715 (= lt!29847 (ListLongMap!1422 lt!29848))))

(declare-fun lt!29845 () Unit!1913)

(declare-fun lt!29846 () Unit!1913)

(assert (=> d!14715 (= lt!29845 lt!29846)))

(declare-datatypes ((Option!136 0))(
  ( (Some!135 (v!2499 V!2923)) (None!134) )
))
(declare-fun getValueByKey!130 (List!1494 (_ BitVec 64)) Option!136)

(assert (=> d!14715 (= (getValueByKey!130 lt!29848 (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777)))))

(declare-fun lemmaContainsTupThenGetReturnValue!49 (List!1494 (_ BitVec 64) V!2923) Unit!1913)

(assert (=> d!14715 (= lt!29846 (lemmaContainsTupThenGetReturnValue!49 lt!29848 (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(declare-fun insertStrictlySorted!51 (List!1494 (_ BitVec 64) V!2923) List!1494)

(assert (=> d!14715 (= lt!29848 (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(assert (=> d!14715 (= (+!89 lt!29768 lt!29777) lt!29847)))

(declare-fun b!68548 () Bool)

(declare-fun res!36852 () Bool)

(assert (=> b!68548 (=> (not res!36852) (not e!44939))))

(assert (=> b!68548 (= res!36852 (= (getValueByKey!130 (toList!726 lt!29847) (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777))))))

(declare-fun b!68549 () Bool)

(declare-fun contains!721 (List!1494 tuple2!2118) Bool)

(assert (=> b!68549 (= e!44939 (contains!721 (toList!726 lt!29847) lt!29777))))

(assert (= (and d!14715 res!36853) b!68548))

(assert (= (and b!68548 res!36852) b!68549))

(declare-fun m!64185 () Bool)

(assert (=> d!14715 m!64185))

(declare-fun m!64187 () Bool)

(assert (=> d!14715 m!64187))

(declare-fun m!64189 () Bool)

(assert (=> d!14715 m!64189))

(declare-fun m!64191 () Bool)

(assert (=> d!14715 m!64191))

(declare-fun m!64193 () Bool)

(assert (=> b!68548 m!64193))

(declare-fun m!64195 () Bool)

(assert (=> b!68549 m!64195))

(assert (=> b!68426 d!14715))

(declare-fun d!14717 () Bool)

(declare-fun e!44940 () Bool)

(assert (=> d!14717 e!44940))

(declare-fun res!36855 () Bool)

(assert (=> d!14717 (=> (not res!36855) (not e!44940))))

(declare-fun lt!29851 () ListLongMap!1421)

(assert (=> d!14717 (= res!36855 (contains!720 lt!29851 (_1!1069 lt!29775)))))

(declare-fun lt!29852 () List!1494)

(assert (=> d!14717 (= lt!29851 (ListLongMap!1422 lt!29852))))

(declare-fun lt!29849 () Unit!1913)

(declare-fun lt!29850 () Unit!1913)

(assert (=> d!14717 (= lt!29849 lt!29850)))

(assert (=> d!14717 (= (getValueByKey!130 lt!29852 (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775)))))

(assert (=> d!14717 (= lt!29850 (lemmaContainsTupThenGetReturnValue!49 lt!29852 (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(assert (=> d!14717 (= lt!29852 (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(assert (=> d!14717 (= (+!89 lt!29768 lt!29775) lt!29851)))

(declare-fun b!68550 () Bool)

(declare-fun res!36854 () Bool)

(assert (=> b!68550 (=> (not res!36854) (not e!44940))))

(assert (=> b!68550 (= res!36854 (= (getValueByKey!130 (toList!726 lt!29851) (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775))))))

(declare-fun b!68551 () Bool)

(assert (=> b!68551 (= e!44940 (contains!721 (toList!726 lt!29851) lt!29775))))

(assert (= (and d!14717 res!36855) b!68550))

(assert (= (and b!68550 res!36854) b!68551))

(declare-fun m!64197 () Bool)

(assert (=> d!14717 m!64197))

(declare-fun m!64199 () Bool)

(assert (=> d!14717 m!64199))

(declare-fun m!64201 () Bool)

(assert (=> d!14717 m!64201))

(declare-fun m!64203 () Bool)

(assert (=> d!14717 m!64203))

(declare-fun m!64205 () Bool)

(assert (=> b!68550 m!64205))

(declare-fun m!64207 () Bool)

(assert (=> b!68551 m!64207))

(assert (=> b!68426 d!14717))

(declare-fun d!14719 () Bool)

(assert (=> d!14719 (= (+!89 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (+!89 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(declare-fun lt!29855 () Unit!1913)

(declare-fun choose!388 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64) V!2923) Unit!1913)

(assert (=> d!14719 (= lt!29855 (choose!388 lt!29768 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))

(assert (=> d!14719 (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14719 (= (addCommutativeForDiffKeys!8 lt!29768 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) lt!29855)))

(declare-fun bs!2935 () Bool)

(assert (= bs!2935 d!14719))

(declare-fun m!64209 () Bool)

(assert (=> bs!2935 m!64209))

(declare-fun m!64211 () Bool)

(assert (=> bs!2935 m!64211))

(assert (=> bs!2935 m!64209))

(assert (=> bs!2935 m!64043))

(declare-fun m!64213 () Bool)

(assert (=> bs!2935 m!64213))

(declare-fun m!64215 () Bool)

(assert (=> bs!2935 m!64215))

(declare-fun m!64217 () Bool)

(assert (=> bs!2935 m!64217))

(assert (=> bs!2935 m!64215))

(assert (=> b!68426 d!14719))

(declare-fun d!14721 () Bool)

(assert (=> d!14721 (= (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992)))) (and (or (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000001111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000011111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000001111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000011111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000001111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000011111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000001111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000011111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000001111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000011111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000001111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000011111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000001111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000011111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000111111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000001111111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000011111111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000111111111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00001111111111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00011111111111111111111111111111) (= (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!68426 d!14721))

(declare-fun d!14723 () Bool)

(declare-fun e!44941 () Bool)

(assert (=> d!14723 e!44941))

(declare-fun res!36857 () Bool)

(assert (=> d!14723 (=> (not res!36857) (not e!44941))))

(declare-fun lt!29858 () ListLongMap!1421)

(assert (=> d!14723 (= res!36857 (contains!720 lt!29858 (_1!1069 lt!29775)))))

(declare-fun lt!29859 () List!1494)

(assert (=> d!14723 (= lt!29858 (ListLongMap!1422 lt!29859))))

(declare-fun lt!29856 () Unit!1913)

(declare-fun lt!29857 () Unit!1913)

(assert (=> d!14723 (= lt!29856 lt!29857)))

(assert (=> d!14723 (= (getValueByKey!130 lt!29859 (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775)))))

(assert (=> d!14723 (= lt!29857 (lemmaContainsTupThenGetReturnValue!49 lt!29859 (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(assert (=> d!14723 (= lt!29859 (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 lt!29777)) (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(assert (=> d!14723 (= (+!89 (+!89 lt!29768 lt!29777) lt!29775) lt!29858)))

(declare-fun b!68552 () Bool)

(declare-fun res!36856 () Bool)

(assert (=> b!68552 (=> (not res!36856) (not e!44941))))

(assert (=> b!68552 (= res!36856 (= (getValueByKey!130 (toList!726 lt!29858) (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775))))))

(declare-fun b!68553 () Bool)

(assert (=> b!68553 (= e!44941 (contains!721 (toList!726 lt!29858) lt!29775))))

(assert (= (and d!14723 res!36857) b!68552))

(assert (= (and b!68552 res!36856) b!68553))

(declare-fun m!64219 () Bool)

(assert (=> d!14723 m!64219))

(declare-fun m!64221 () Bool)

(assert (=> d!14723 m!64221))

(declare-fun m!64223 () Bool)

(assert (=> d!14723 m!64223))

(declare-fun m!64225 () Bool)

(assert (=> d!14723 m!64225))

(declare-fun m!64227 () Bool)

(assert (=> b!68552 m!64227))

(declare-fun m!64229 () Bool)

(assert (=> b!68553 m!64229))

(assert (=> b!68426 d!14723))

(declare-fun d!14725 () Bool)

(declare-fun e!44942 () Bool)

(assert (=> d!14725 e!44942))

(declare-fun res!36859 () Bool)

(assert (=> d!14725 (=> (not res!36859) (not e!44942))))

(declare-fun lt!29862 () ListLongMap!1421)

(assert (=> d!14725 (= res!36859 (contains!720 lt!29862 (_1!1069 lt!29777)))))

(declare-fun lt!29863 () List!1494)

(assert (=> d!14725 (= lt!29862 (ListLongMap!1422 lt!29863))))

(declare-fun lt!29860 () Unit!1913)

(declare-fun lt!29861 () Unit!1913)

(assert (=> d!14725 (= lt!29860 lt!29861)))

(assert (=> d!14725 (= (getValueByKey!130 lt!29863 (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777)))))

(assert (=> d!14725 (= lt!29861 (lemmaContainsTupThenGetReturnValue!49 lt!29863 (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(assert (=> d!14725 (= lt!29863 (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 lt!29775)) (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(assert (=> d!14725 (= (+!89 (+!89 lt!29768 lt!29775) lt!29777) lt!29862)))

(declare-fun b!68554 () Bool)

(declare-fun res!36858 () Bool)

(assert (=> b!68554 (=> (not res!36858) (not e!44942))))

(assert (=> b!68554 (= res!36858 (= (getValueByKey!130 (toList!726 lt!29862) (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777))))))

(declare-fun b!68555 () Bool)

(assert (=> b!68555 (= e!44942 (contains!721 (toList!726 lt!29862) lt!29777))))

(assert (= (and d!14725 res!36859) b!68554))

(assert (= (and b!68554 res!36858) b!68555))

(declare-fun m!64231 () Bool)

(assert (=> d!14725 m!64231))

(declare-fun m!64233 () Bool)

(assert (=> d!14725 m!64233))

(declare-fun m!64235 () Bool)

(assert (=> d!14725 m!64235))

(declare-fun m!64237 () Bool)

(assert (=> d!14725 m!64237))

(declare-fun m!64239 () Bool)

(assert (=> b!68554 m!64239))

(declare-fun m!64241 () Bool)

(assert (=> b!68555 m!64241))

(assert (=> b!68426 d!14725))

(declare-fun d!14727 () Bool)

(declare-fun res!36866 () Bool)

(declare-fun e!44945 () Bool)

(assert (=> d!14727 (=> (not res!36866) (not e!44945))))

(declare-fun simpleValid!48 (LongMapFixedSize!678) Bool)

(assert (=> d!14727 (= res!36866 (simpleValid!48 newMap!16))))

(assert (=> d!14727 (= (valid!282 newMap!16) e!44945)))

(declare-fun b!68562 () Bool)

(declare-fun res!36867 () Bool)

(assert (=> b!68562 (=> (not res!36867) (not e!44945))))

(declare-fun arrayCountValidKeys!0 (array!3854 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!68562 (= res!36867 (= (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (_size!388 newMap!16)))))

(declare-fun b!68563 () Bool)

(declare-fun res!36868 () Bool)

(assert (=> b!68563 (=> (not res!36868) (not e!44945))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3854 (_ BitVec 32)) Bool)

(assert (=> b!68563 (= res!36868 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!68564 () Bool)

(assert (=> b!68564 (= e!44945 (arrayNoDuplicates!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!14727 res!36866) b!68562))

(assert (= (and b!68562 res!36867) b!68563))

(assert (= (and b!68563 res!36868) b!68564))

(declare-fun m!64243 () Bool)

(assert (=> d!14727 m!64243))

(declare-fun m!64245 () Bool)

(assert (=> b!68562 m!64245))

(declare-fun m!64247 () Bool)

(assert (=> b!68563 m!64247))

(declare-fun m!64249 () Bool)

(assert (=> b!68564 m!64249))

(assert (=> b!68431 d!14727))

(declare-fun d!14729 () Bool)

(assert (=> d!14729 (= (map!1147 newMap!16) (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bs!2936 () Bool)

(assert (= bs!2936 d!14729))

(declare-fun m!64251 () Bool)

(assert (=> bs!2936 m!64251))

(assert (=> b!68436 d!14729))

(declare-fun b!68607 () Bool)

(declare-fun res!36889 () Bool)

(declare-fun e!44974 () Bool)

(assert (=> b!68607 (=> (not res!36889) (not e!44974))))

(declare-fun e!44979 () Bool)

(assert (=> b!68607 (= res!36889 e!44979)))

(declare-fun c!9709 () Bool)

(assert (=> b!68607 (= c!9709 (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68608 () Bool)

(declare-fun res!36894 () Bool)

(assert (=> b!68608 (=> (not res!36894) (not e!44974))))

(declare-fun e!44980 () Bool)

(assert (=> b!68608 (= res!36894 e!44980)))

(declare-fun res!36895 () Bool)

(assert (=> b!68608 (=> res!36895 e!44980)))

(declare-fun e!44984 () Bool)

(assert (=> b!68608 (= res!36895 (not e!44984))))

(declare-fun res!36892 () Bool)

(assert (=> b!68608 (=> (not res!36892) (not e!44984))))

(assert (=> b!68608 (= res!36892 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun bm!5775 () Bool)

(declare-fun call!5779 () ListLongMap!1421)

(declare-fun call!5781 () ListLongMap!1421)

(assert (=> bm!5775 (= call!5779 call!5781)))

(declare-fun b!68610 () Bool)

(declare-fun e!44978 () ListLongMap!1421)

(declare-fun call!5778 () ListLongMap!1421)

(assert (=> b!68610 (= e!44978 call!5778)))

(declare-fun b!68611 () Bool)

(declare-fun e!44983 () ListLongMap!1421)

(declare-fun e!44973 () ListLongMap!1421)

(assert (=> b!68611 (= e!44983 e!44973)))

(declare-fun c!9712 () Bool)

(assert (=> b!68611 (= c!9712 (and (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5776 () Bool)

(declare-fun call!5783 () Bool)

(declare-fun lt!29926 () ListLongMap!1421)

(assert (=> bm!5776 (= call!5783 (contains!720 lt!29926 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68612 () Bool)

(assert (=> b!68612 (= e!44973 call!5778)))

(declare-fun b!68613 () Bool)

(declare-fun e!44972 () Bool)

(declare-fun e!44976 () Bool)

(assert (=> b!68613 (= e!44972 e!44976)))

(declare-fun res!36890 () Bool)

(assert (=> b!68613 (= res!36890 call!5783)))

(assert (=> b!68613 (=> (not res!36890) (not e!44976))))

(declare-fun b!68614 () Bool)

(declare-fun call!5780 () ListLongMap!1421)

(assert (=> b!68614 (= e!44978 call!5780)))

(declare-fun b!68615 () Bool)

(declare-fun e!44977 () Bool)

(assert (=> b!68615 (= e!44977 (= (apply!73 lt!29926 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68615 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> b!68615 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!68616 () Bool)

(assert (=> b!68616 (= e!44974 e!44972)))

(declare-fun c!9710 () Bool)

(assert (=> b!68616 (= c!9710 (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14731 () Bool)

(assert (=> d!14731 e!44974))

(declare-fun res!36893 () Bool)

(assert (=> d!14731 (=> (not res!36893) (not e!44974))))

(assert (=> d!14731 (= res!36893 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun lt!29918 () ListLongMap!1421)

(assert (=> d!14731 (= lt!29926 lt!29918)))

(declare-fun lt!29922 () Unit!1913)

(declare-fun e!44975 () Unit!1913)

(assert (=> d!14731 (= lt!29922 e!44975)))

(declare-fun c!9711 () Bool)

(declare-fun e!44981 () Bool)

(assert (=> d!14731 (= c!9711 e!44981)))

(declare-fun res!36891 () Bool)

(assert (=> d!14731 (=> (not res!36891) (not e!44981))))

(assert (=> d!14731 (= res!36891 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!14731 (= lt!29918 e!44983)))

(declare-fun c!9708 () Bool)

(assert (=> d!14731 (= c!9708 (and (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14731 (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992))))))

(assert (=> d!14731 (= (getCurrentListMap!421 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) lt!29926)))

(declare-fun b!68609 () Bool)

(assert (=> b!68609 (= e!44972 (not call!5783))))

(declare-fun bm!5777 () Bool)

(assert (=> bm!5777 (= call!5780 call!5779)))

(declare-fun bm!5778 () Bool)

(assert (=> bm!5778 (= call!5781 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68617 () Bool)

(declare-fun Unit!1919 () Unit!1913)

(assert (=> b!68617 (= e!44975 Unit!1919)))

(declare-fun b!68618 () Bool)

(declare-fun e!44982 () Bool)

(assert (=> b!68618 (= e!44979 e!44982)))

(declare-fun res!36888 () Bool)

(declare-fun call!5784 () Bool)

(assert (=> b!68618 (= res!36888 call!5784)))

(assert (=> b!68618 (=> (not res!36888) (not e!44982))))

(declare-fun b!68619 () Bool)

(assert (=> b!68619 (= e!44976 (= (apply!73 lt!29926 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68620 () Bool)

(assert (=> b!68620 (= e!44984 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!5779 () Bool)

(assert (=> bm!5779 (= call!5784 (contains!720 lt!29926 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68621 () Bool)

(declare-fun c!9707 () Bool)

(assert (=> b!68621 (= c!9707 (and (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68621 (= e!44973 e!44978)))

(declare-fun call!5782 () ListLongMap!1421)

(declare-fun bm!5780 () Bool)

(assert (=> bm!5780 (= call!5782 (+!89 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)) (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!68622 () Bool)

(assert (=> b!68622 (= e!44983 (+!89 call!5782 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!68623 () Bool)

(declare-fun lt!29917 () Unit!1913)

(assert (=> b!68623 (= e!44975 lt!29917)))

(declare-fun lt!29924 () ListLongMap!1421)

(assert (=> b!68623 (= lt!29924 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun lt!29910 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29910 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29916 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29916 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29928 () Unit!1913)

(declare-fun addStillContains!49 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1913)

(assert (=> b!68623 (= lt!29928 (addStillContains!49 lt!29924 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29916))))

(assert (=> b!68623 (contains!720 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29916)))

(declare-fun lt!29915 () Unit!1913)

(assert (=> b!68623 (= lt!29915 lt!29928)))

(declare-fun lt!29912 () ListLongMap!1421)

(assert (=> b!68623 (= lt!29912 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun lt!29927 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29927 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29920 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29920 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29908 () Unit!1913)

(declare-fun addApplyDifferent!49 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1913)

(assert (=> b!68623 (= lt!29908 (addApplyDifferent!49 lt!29912 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29920))))

(assert (=> b!68623 (= (apply!73 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29920) (apply!73 lt!29912 lt!29920))))

(declare-fun lt!29913 () Unit!1913)

(assert (=> b!68623 (= lt!29913 lt!29908)))

(declare-fun lt!29909 () ListLongMap!1421)

(assert (=> b!68623 (= lt!29909 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun lt!29925 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29925 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29911 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29911 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29921 () Unit!1913)

(assert (=> b!68623 (= lt!29921 (addApplyDifferent!49 lt!29909 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29911))))

(assert (=> b!68623 (= (apply!73 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29911) (apply!73 lt!29909 lt!29911))))

(declare-fun lt!29919 () Unit!1913)

(assert (=> b!68623 (= lt!29919 lt!29921)))

(declare-fun lt!29929 () ListLongMap!1421)

(assert (=> b!68623 (= lt!29929 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun lt!29914 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29914 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29923 () (_ BitVec 64))

(assert (=> b!68623 (= lt!29923 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!68623 (= lt!29917 (addApplyDifferent!49 lt!29929 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29923))))

(assert (=> b!68623 (= (apply!73 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29923) (apply!73 lt!29929 lt!29923))))

(declare-fun b!68624 () Bool)

(assert (=> b!68624 (= e!44981 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!5781 () Bool)

(assert (=> bm!5781 (= call!5778 call!5782)))

(declare-fun b!68625 () Bool)

(assert (=> b!68625 (= e!44979 (not call!5784))))

(declare-fun b!68626 () Bool)

(assert (=> b!68626 (= e!44982 (= (apply!73 lt!29926 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68627 () Bool)

(assert (=> b!68627 (= e!44980 e!44977)))

(declare-fun res!36887 () Bool)

(assert (=> b!68627 (=> (not res!36887) (not e!44977))))

(assert (=> b!68627 (= res!36887 (contains!720 lt!29926 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68627 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14731 c!9708) b!68622))

(assert (= (and d!14731 (not c!9708)) b!68611))

(assert (= (and b!68611 c!9712) b!68612))

(assert (= (and b!68611 (not c!9712)) b!68621))

(assert (= (and b!68621 c!9707) b!68610))

(assert (= (and b!68621 (not c!9707)) b!68614))

(assert (= (or b!68610 b!68614) bm!5777))

(assert (= (or b!68612 bm!5777) bm!5775))

(assert (= (or b!68612 b!68610) bm!5781))

(assert (= (or b!68622 bm!5775) bm!5778))

(assert (= (or b!68622 bm!5781) bm!5780))

(assert (= (and d!14731 res!36891) b!68624))

(assert (= (and d!14731 c!9711) b!68623))

(assert (= (and d!14731 (not c!9711)) b!68617))

(assert (= (and d!14731 res!36893) b!68608))

(assert (= (and b!68608 res!36892) b!68620))

(assert (= (and b!68608 (not res!36895)) b!68627))

(assert (= (and b!68627 res!36887) b!68615))

(assert (= (and b!68608 res!36894) b!68607))

(assert (= (and b!68607 c!9709) b!68618))

(assert (= (and b!68607 (not c!9709)) b!68625))

(assert (= (and b!68618 res!36888) b!68626))

(assert (= (or b!68618 b!68625) bm!5779))

(assert (= (and b!68607 res!36889) b!68616))

(assert (= (and b!68616 c!9710) b!68613))

(assert (= (and b!68616 (not c!9710)) b!68609))

(assert (= (and b!68613 res!36890) b!68619))

(assert (= (or b!68613 b!68609) bm!5776))

(declare-fun b_lambda!3085 () Bool)

(assert (=> (not b_lambda!3085) (not b!68615)))

(assert (=> b!68615 t!4998))

(declare-fun b_and!4233 () Bool)

(assert (= b_and!4229 (and (=> t!4998 result!2609) b_and!4233)))

(assert (=> b!68615 t!5000))

(declare-fun b_and!4235 () Bool)

(assert (= b_and!4231 (and (=> t!5000 result!2613) b_and!4235)))

(assert (=> b!68627 m!64159))

(assert (=> b!68627 m!64159))

(declare-fun m!64253 () Bool)

(assert (=> b!68627 m!64253))

(declare-fun m!64255 () Bool)

(assert (=> b!68619 m!64255))

(declare-fun m!64257 () Bool)

(assert (=> b!68626 m!64257))

(declare-fun m!64259 () Bool)

(assert (=> bm!5780 m!64259))

(assert (=> d!14731 m!64067))

(declare-fun m!64261 () Bool)

(assert (=> bm!5779 m!64261))

(assert (=> b!68615 m!64159))

(assert (=> b!68615 m!64047))

(assert (=> b!68615 m!64159))

(declare-fun m!64263 () Bool)

(assert (=> b!68615 m!64263))

(assert (=> b!68615 m!64169))

(assert (=> b!68615 m!64169))

(assert (=> b!68615 m!64047))

(assert (=> b!68615 m!64171))

(declare-fun m!64265 () Bool)

(assert (=> b!68622 m!64265))

(assert (=> b!68623 m!64159))

(declare-fun m!64267 () Bool)

(assert (=> b!68623 m!64267))

(declare-fun m!64269 () Bool)

(assert (=> b!68623 m!64269))

(declare-fun m!64271 () Bool)

(assert (=> b!68623 m!64271))

(declare-fun m!64273 () Bool)

(assert (=> b!68623 m!64273))

(assert (=> b!68623 m!64075))

(declare-fun m!64275 () Bool)

(assert (=> b!68623 m!64275))

(declare-fun m!64277 () Bool)

(assert (=> b!68623 m!64277))

(declare-fun m!64279 () Bool)

(assert (=> b!68623 m!64279))

(declare-fun m!64281 () Bool)

(assert (=> b!68623 m!64281))

(declare-fun m!64283 () Bool)

(assert (=> b!68623 m!64283))

(declare-fun m!64285 () Bool)

(assert (=> b!68623 m!64285))

(declare-fun m!64287 () Bool)

(assert (=> b!68623 m!64287))

(assert (=> b!68623 m!64277))

(declare-fun m!64289 () Bool)

(assert (=> b!68623 m!64289))

(declare-fun m!64291 () Bool)

(assert (=> b!68623 m!64291))

(assert (=> b!68623 m!64287))

(declare-fun m!64293 () Bool)

(assert (=> b!68623 m!64293))

(assert (=> b!68623 m!64289))

(assert (=> b!68623 m!64281))

(declare-fun m!64295 () Bool)

(assert (=> b!68623 m!64295))

(assert (=> b!68624 m!64159))

(assert (=> b!68624 m!64159))

(assert (=> b!68624 m!64175))

(assert (=> b!68620 m!64159))

(assert (=> b!68620 m!64159))

(assert (=> b!68620 m!64175))

(declare-fun m!64297 () Bool)

(assert (=> bm!5776 m!64297))

(assert (=> bm!5778 m!64075))

(assert (=> b!68436 d!14731))

(declare-fun d!14733 () Bool)

(assert (=> d!14733 (= (array_inv!1089 (_keys!3812 newMap!16)) (bvsge (size!2076 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68428 d!14733))

(declare-fun d!14735 () Bool)

(assert (=> d!14735 (= (array_inv!1090 (_values!2151 newMap!16)) (bvsge (size!2077 (_values!2151 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68428 d!14735))

(declare-fun d!14737 () Bool)

(assert (=> d!14737 (not (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29932 () Unit!1913)

(declare-fun choose!68 (array!3854 (_ BitVec 32) (_ BitVec 64) List!1495) Unit!1913)

(assert (=> d!14737 (= lt!29932 (choose!68 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492)))))

(assert (=> d!14737 (bvslt (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14737 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492)) lt!29932)))

(declare-fun bs!2937 () Bool)

(assert (= bs!2937 d!14737))

(assert (=> bs!2937 m!64043))

(assert (=> bs!2937 m!64061))

(assert (=> bs!2937 m!64043))

(declare-fun m!64299 () Bool)

(assert (=> bs!2937 m!64299))

(assert (=> b!68437 d!14737))

(declare-fun d!14739 () Bool)

(assert (=> d!14739 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) from!355 Nil!1492)))

(declare-fun lt!29935 () Unit!1913)

(declare-fun choose!39 (array!3854 (_ BitVec 32) (_ BitVec 32)) Unit!1913)

(assert (=> d!14739 (= lt!29935 (choose!39 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!14739 (bvslt (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14739 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 from!355) lt!29935)))

(declare-fun bs!2938 () Bool)

(assert (= bs!2938 d!14739))

(assert (=> bs!2938 m!64057))

(declare-fun m!64301 () Bool)

(assert (=> bs!2938 m!64301))

(assert (=> b!68437 d!14739))

(declare-fun d!14741 () Bool)

(declare-fun res!36900 () Bool)

(declare-fun e!44989 () Bool)

(assert (=> d!14741 (=> res!36900 e!44989)))

(assert (=> d!14741 (= res!36900 (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14741 (= (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!44989)))

(declare-fun b!68632 () Bool)

(declare-fun e!44990 () Bool)

(assert (=> b!68632 (= e!44989 e!44990)))

(declare-fun res!36901 () Bool)

(assert (=> b!68632 (=> (not res!36901) (not e!44990))))

(assert (=> b!68632 (= res!36901 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!68633 () Bool)

(assert (=> b!68633 (= e!44990 (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!14741 (not res!36900)) b!68632))

(assert (= (and b!68632 res!36901) b!68633))

(assert (=> d!14741 m!64159))

(assert (=> b!68633 m!64043))

(declare-fun m!64303 () Bool)

(assert (=> b!68633 m!64303))

(assert (=> b!68437 d!14741))

(declare-fun d!14743 () Bool)

(declare-fun e!44993 () Bool)

(assert (=> d!14743 e!44993))

(declare-fun c!9715 () Bool)

(assert (=> d!14743 (= c!9715 (and (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!29938 () Unit!1913)

(declare-fun choose!389 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1913)

(assert (=> d!14743 (= lt!29938 (choose!389 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(assert (=> d!14743 (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992))))))

(assert (=> d!14743 (= (lemmaListMapContainsThenArrayContainsFrom!47 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) lt!29938)))

(declare-fun b!68638 () Bool)

(assert (=> b!68638 (= e!44993 (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!68639 () Bool)

(assert (=> b!68639 (= e!44993 (ite (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14743 c!9715) b!68638))

(assert (= (and d!14743 (not c!9715)) b!68639))

(assert (=> d!14743 m!64043))

(declare-fun m!64305 () Bool)

(assert (=> d!14743 m!64305))

(assert (=> d!14743 m!64067))

(assert (=> b!68638 m!64043))

(assert (=> b!68638 m!64061))

(assert (=> b!68437 d!14743))

(declare-fun b!68650 () Bool)

(declare-fun e!45002 () Bool)

(declare-fun contains!722 (List!1495 (_ BitVec 64)) Bool)

(assert (=> b!68650 (= e!45002 (contains!722 Nil!1492 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68651 () Bool)

(declare-fun e!45003 () Bool)

(declare-fun call!5787 () Bool)

(assert (=> b!68651 (= e!45003 call!5787)))

(declare-fun bm!5784 () Bool)

(declare-fun c!9718 () Bool)

(assert (=> bm!5784 (= call!5787 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)))))

(declare-fun d!14745 () Bool)

(declare-fun res!36910 () Bool)

(declare-fun e!45005 () Bool)

(assert (=> d!14745 (=> res!36910 e!45005)))

(assert (=> d!14745 (= res!36910 (bvsge from!355 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!14745 (= (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) from!355 Nil!1492) e!45005)))

(declare-fun b!68652 () Bool)

(declare-fun e!45004 () Bool)

(assert (=> b!68652 (= e!45004 e!45003)))

(assert (=> b!68652 (= c!9718 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68653 () Bool)

(assert (=> b!68653 (= e!45003 call!5787)))

(declare-fun b!68654 () Bool)

(assert (=> b!68654 (= e!45005 e!45004)))

(declare-fun res!36909 () Bool)

(assert (=> b!68654 (=> (not res!36909) (not e!45004))))

(assert (=> b!68654 (= res!36909 (not e!45002))))

(declare-fun res!36908 () Bool)

(assert (=> b!68654 (=> (not res!36908) (not e!45002))))

(assert (=> b!68654 (= res!36908 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!14745 (not res!36910)) b!68654))

(assert (= (and b!68654 res!36908) b!68650))

(assert (= (and b!68654 res!36909) b!68652))

(assert (= (and b!68652 c!9718) b!68653))

(assert (= (and b!68652 (not c!9718)) b!68651))

(assert (= (or b!68653 b!68651) bm!5784))

(assert (=> b!68650 m!64043))

(assert (=> b!68650 m!64043))

(declare-fun m!64307 () Bool)

(assert (=> b!68650 m!64307))

(assert (=> bm!5784 m!64043))

(declare-fun m!64309 () Bool)

(assert (=> bm!5784 m!64309))

(assert (=> b!68652 m!64043))

(assert (=> b!68652 m!64043))

(declare-fun m!64311 () Bool)

(assert (=> b!68652 m!64311))

(assert (=> b!68654 m!64043))

(assert (=> b!68654 m!64043))

(assert (=> b!68654 m!64311))

(assert (=> b!68437 d!14745))

(declare-fun d!14747 () Bool)

(declare-fun e!45010 () Bool)

(assert (=> d!14747 e!45010))

(declare-fun res!36913 () Bool)

(assert (=> d!14747 (=> res!36913 e!45010)))

(declare-fun lt!29949 () Bool)

(assert (=> d!14747 (= res!36913 (not lt!29949))))

(declare-fun lt!29950 () Bool)

(assert (=> d!14747 (= lt!29949 lt!29950)))

(declare-fun lt!29948 () Unit!1913)

(declare-fun e!45011 () Unit!1913)

(assert (=> d!14747 (= lt!29948 e!45011)))

(declare-fun c!9721 () Bool)

(assert (=> d!14747 (= c!9721 lt!29950)))

(declare-fun containsKey!134 (List!1494 (_ BitVec 64)) Bool)

(assert (=> d!14747 (= lt!29950 (containsKey!134 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14747 (= (contains!720 lt!29772 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!29949)))

(declare-fun b!68661 () Bool)

(declare-fun lt!29947 () Unit!1913)

(assert (=> b!68661 (= e!45011 lt!29947)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!83 (List!1494 (_ BitVec 64)) Unit!1913)

(assert (=> b!68661 (= lt!29947 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun isDefined!84 (Option!136) Bool)

(assert (=> b!68661 (isDefined!84 (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68662 () Bool)

(declare-fun Unit!1920 () Unit!1913)

(assert (=> b!68662 (= e!45011 Unit!1920)))

(declare-fun b!68663 () Bool)

(assert (=> b!68663 (= e!45010 (isDefined!84 (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (= (and d!14747 c!9721) b!68661))

(assert (= (and d!14747 (not c!9721)) b!68662))

(assert (= (and d!14747 (not res!36913)) b!68663))

(assert (=> d!14747 m!64043))

(declare-fun m!64313 () Bool)

(assert (=> d!14747 m!64313))

(assert (=> b!68661 m!64043))

(declare-fun m!64315 () Bool)

(assert (=> b!68661 m!64315))

(assert (=> b!68661 m!64043))

(declare-fun m!64317 () Bool)

(assert (=> b!68661 m!64317))

(assert (=> b!68661 m!64317))

(declare-fun m!64319 () Bool)

(assert (=> b!68661 m!64319))

(assert (=> b!68663 m!64043))

(assert (=> b!68663 m!64317))

(assert (=> b!68663 m!64317))

(assert (=> b!68663 m!64319))

(assert (=> b!68433 d!14747))

(declare-fun bm!5833 () Bool)

(declare-fun call!5837 () Unit!1913)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1913)

(assert (=> bm!5833 (= call!5837 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(declare-fun b!68744 () Bool)

(declare-fun res!36943 () Bool)

(declare-fun e!45073 () Bool)

(assert (=> b!68744 (=> (not res!36943) (not e!45073))))

(declare-fun call!5856 () Bool)

(assert (=> b!68744 (= res!36943 call!5856)))

(declare-fun e!45058 () Bool)

(assert (=> b!68744 (= e!45058 e!45073)))

(declare-fun b!68745 () Bool)

(declare-fun e!45056 () Bool)

(declare-fun call!5851 () Bool)

(assert (=> b!68745 (= e!45056 (not call!5851))))

(declare-fun b!68746 () Bool)

(declare-fun e!45065 () Bool)

(declare-fun e!45059 () Bool)

(assert (=> b!68746 (= e!45065 e!45059)))

(declare-fun res!36951 () Bool)

(declare-fun call!5850 () ListLongMap!1421)

(assert (=> b!68746 (= res!36951 (contains!720 call!5850 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> b!68746 (=> (not res!36951) (not e!45059))))

(declare-fun bm!5834 () Bool)

(declare-datatypes ((SeekEntryResult!244 0))(
  ( (MissingZero!244 (index!3105 (_ BitVec 32))) (Found!244 (index!3106 (_ BitVec 32))) (Intermediate!244 (undefined!1056 Bool) (index!3107 (_ BitVec 32)) (x!10858 (_ BitVec 32))) (Undefined!244) (MissingVacant!244 (index!3108 (_ BitVec 32))) )
))
(declare-fun call!5854 () SeekEntryResult!244)

(declare-fun call!5840 () SeekEntryResult!244)

(assert (=> bm!5834 (= call!5854 call!5840)))

(declare-fun b!68747 () Bool)

(declare-fun e!45054 () Unit!1913)

(declare-fun lt!30015 () Unit!1913)

(assert (=> b!68747 (= e!45054 lt!30015)))

(assert (=> b!68747 (= lt!30015 call!5837)))

(declare-fun lt!30010 () SeekEntryResult!244)

(assert (=> b!68747 (= lt!30010 call!5854)))

(declare-fun res!36942 () Bool)

(assert (=> b!68747 (= res!36942 ((_ is Found!244) lt!30010))))

(declare-fun e!45060 () Bool)

(assert (=> b!68747 (=> (not res!36942) (not e!45060))))

(assert (=> b!68747 e!45060))

(declare-fun b!68748 () Bool)

(declare-fun res!36950 () Bool)

(declare-fun e!45072 () Bool)

(assert (=> b!68748 (=> (not res!36950) (not e!45072))))

(declare-fun lt!30013 () SeekEntryResult!244)

(assert (=> b!68748 (= res!36950 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3105 lt!30013)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68749 () Bool)

(declare-fun e!45055 () Bool)

(declare-fun call!5848 () Bool)

(assert (=> b!68749 (= e!45055 (not call!5848))))

(declare-fun b!68750 () Bool)

(declare-fun e!45069 () Bool)

(assert (=> b!68750 (= e!45069 ((_ is Undefined!244) lt!30013))))

(declare-fun b!68751 () Bool)

(assert (=> b!68751 (= e!45069 e!45056)))

(declare-fun res!36944 () Bool)

(declare-fun call!5847 () Bool)

(assert (=> b!68751 (= res!36944 call!5847)))

(assert (=> b!68751 (=> (not res!36944) (not e!45056))))

(declare-fun b!68752 () Bool)

(declare-fun Unit!1921 () Unit!1913)

(assert (=> b!68752 (= e!45054 Unit!1921)))

(declare-fun lt!30022 () Unit!1913)

(declare-fun call!5855 () Unit!1913)

(assert (=> b!68752 (= lt!30022 call!5855)))

(declare-fun lt!30005 () SeekEntryResult!244)

(assert (=> b!68752 (= lt!30005 call!5854)))

(declare-fun c!9748 () Bool)

(assert (=> b!68752 (= c!9748 ((_ is MissingZero!244) lt!30005))))

(assert (=> b!68752 e!45058))

(declare-fun lt!30021 () Unit!1913)

(assert (=> b!68752 (= lt!30021 lt!30022)))

(assert (=> b!68752 false))

(declare-fun b!68753 () Bool)

(declare-fun lt!30031 () Unit!1913)

(declare-fun e!45063 () Unit!1913)

(assert (=> b!68753 (= lt!30031 e!45063)))

(declare-fun c!9755 () Bool)

(declare-fun call!5841 () Bool)

(assert (=> b!68753 (= c!9755 call!5841)))

(declare-fun e!45066 () tuple2!2120)

(assert (=> b!68753 (= e!45066 (tuple2!2121 false newMap!16))))

(declare-fun bm!5835 () Bool)

(declare-fun lt!30024 () tuple2!2120)

(assert (=> bm!5835 (= call!5850 (map!1147 (_2!1070 lt!30024)))))

(declare-fun bm!5836 () Bool)

(declare-fun call!5836 () SeekEntryResult!244)

(assert (=> bm!5836 (= call!5836 call!5840)))

(declare-fun b!68754 () Bool)

(declare-fun lt!30014 () Unit!1913)

(declare-fun lt!30026 () Unit!1913)

(assert (=> b!68754 (= lt!30014 lt!30026)))

(declare-fun call!5844 () ListLongMap!1421)

(declare-fun lt!30007 () SeekEntryResult!244)

(assert (=> b!68754 (contains!720 call!5844 (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))))

(declare-fun lt!30029 () array!3856)

(declare-fun lemmaValidKeyInArrayIsInListMap!80 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) Unit!1913)

(assert (=> b!68754 (= lt!30026 (lemmaValidKeyInArrayIsInListMap!80 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (defaultEntry!2168 newMap!16)))))

(assert (=> b!68754 (= lt!30029 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))))))

(declare-fun lt!30006 () Unit!1913)

(declare-fun lt!30019 () Unit!1913)

(assert (=> b!68754 (= lt!30006 lt!30019)))

(declare-fun call!5852 () ListLongMap!1421)

(assert (=> b!68754 (= call!5852 (getCurrentListMap!421 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1913)

(assert (=> b!68754 (= lt!30019 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30008 () Unit!1913)

(assert (=> b!68754 (= lt!30008 e!45054)))

(declare-fun c!9759 () Bool)

(assert (=> b!68754 (= c!9759 call!5841)))

(declare-fun e!45057 () tuple2!2120)

(assert (=> b!68754 (= e!45057 (tuple2!2121 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (_size!388 newMap!16) (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (_vacant!388 newMap!16))))))

(declare-fun bm!5837 () Bool)

(declare-fun call!5857 () ListLongMap!1421)

(declare-fun call!5849 () ListLongMap!1421)

(assert (=> bm!5837 (= call!5857 call!5849)))

(declare-fun b!68755 () Bool)

(declare-fun res!36954 () Bool)

(assert (=> b!68755 (=> (not res!36954) (not e!45072))))

(assert (=> b!68755 (= res!36954 call!5847)))

(declare-fun e!45067 () Bool)

(assert (=> b!68755 (= e!45067 e!45072)))

(declare-fun d!14749 () Bool)

(declare-fun e!45074 () Bool)

(assert (=> d!14749 e!45074))

(declare-fun res!36948 () Bool)

(assert (=> d!14749 (=> (not res!36948) (not e!45074))))

(assert (=> d!14749 (= res!36948 (valid!282 (_2!1070 lt!30024)))))

(declare-fun e!45062 () tuple2!2120)

(assert (=> d!14749 (= lt!30024 e!45062)))

(declare-fun c!9749 () Bool)

(assert (=> d!14749 (= c!9749 (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvneg (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (=> d!14749 (valid!282 newMap!16)))

(assert (=> d!14749 (= (update!98 newMap!16 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778) lt!30024)))

(declare-fun call!5859 () ListLongMap!1421)

(declare-fun lt!30028 () (_ BitVec 32))

(declare-fun c!9751 () Bool)

(declare-fun lt!30016 () (_ BitVec 32))

(declare-fun bm!5838 () Bool)

(assert (=> bm!5838 (= call!5859 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!68756 () Bool)

(assert (=> b!68756 (= e!45073 (not call!5848))))

(declare-fun bm!5839 () Bool)

(declare-fun call!5838 () Bool)

(assert (=> bm!5839 (= call!5847 call!5838)))

(declare-fun b!68757 () Bool)

(declare-fun lt!30023 () tuple2!2120)

(declare-fun call!5853 () tuple2!2120)

(assert (=> b!68757 (= lt!30023 call!5853)))

(assert (=> b!68757 (= e!45057 (tuple2!2121 (_1!1070 lt!30023) (_2!1070 lt!30023)))))

(declare-fun b!68758 () Bool)

(declare-fun e!45064 () ListLongMap!1421)

(assert (=> b!68758 (= e!45064 call!5844)))

(declare-fun e!45061 () Bool)

(declare-fun b!68759 () Bool)

(declare-fun lt!30025 () SeekEntryResult!244)

(assert (=> b!68759 (= e!45061 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30025)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68760 () Bool)

(declare-fun e!45070 () Bool)

(assert (=> b!68760 (= e!45070 e!45055)))

(declare-fun res!36952 () Bool)

(assert (=> b!68760 (= res!36952 call!5856)))

(assert (=> b!68760 (=> (not res!36952) (not e!45055))))

(declare-fun bm!5840 () Bool)

(assert (=> bm!5840 (= call!5844 call!5849)))

(declare-fun b!68761 () Bool)

(declare-fun res!36947 () Bool)

(assert (=> b!68761 (= res!36947 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30013)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68761 (=> (not res!36947) (not e!45056))))

(declare-fun b!68762 () Bool)

(declare-fun c!9750 () Bool)

(assert (=> b!68762 (= c!9750 ((_ is MissingVacant!244) lt!30005))))

(assert (=> b!68762 (= e!45058 e!45070)))

(declare-fun b!68763 () Bool)

(declare-fun res!36946 () Bool)

(assert (=> b!68763 (= res!36946 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30005)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68763 (=> (not res!36946) (not e!45055))))

(declare-fun call!5839 () Bool)

(declare-fun bm!5841 () Bool)

(assert (=> bm!5841 (= call!5839 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68764 () Bool)

(declare-fun lt!30012 () Unit!1913)

(declare-fun lt!30027 () Unit!1913)

(assert (=> b!68764 (= lt!30012 lt!30027)))

(declare-fun call!5842 () ListLongMap!1421)

(declare-fun call!5858 () ListLongMap!1421)

(assert (=> b!68764 (= call!5842 call!5858)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!22 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1913)

(assert (=> b!68764 (= lt!30027 (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30016 (zeroValue!2074 newMap!16) lt!29778 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)))))

(assert (=> b!68764 (= lt!30016 (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!45068 () tuple2!2120)

(assert (=> b!68764 (= e!45068 (tuple2!2121 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) lt!29778 (minValue!2074 newMap!16) (_size!388 newMap!16) (_keys!3812 newMap!16) (_values!2151 newMap!16) (_vacant!388 newMap!16))))))

(declare-fun b!68765 () Bool)

(assert (=> b!68765 (= e!45062 e!45066)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3854 (_ BitVec 32)) SeekEntryResult!244)

(assert (=> b!68765 (= lt!30007 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun c!9756 () Bool)

(assert (=> b!68765 (= c!9756 ((_ is Undefined!244) lt!30007))))

(declare-fun b!68766 () Bool)

(declare-fun res!36953 () Bool)

(assert (=> b!68766 (= res!36953 call!5838)))

(assert (=> b!68766 (=> (not res!36953) (not e!45061))))

(declare-fun b!68767 () Bool)

(assert (=> b!68767 (= e!45072 (not call!5851))))

(declare-fun bm!5842 () Bool)

(assert (=> bm!5842 (= call!5848 call!5839)))

(declare-fun bm!5843 () Bool)

(declare-fun call!5846 () Bool)

(assert (=> bm!5843 (= call!5838 call!5846)))

(declare-fun b!68768 () Bool)

(declare-fun e!45071 () tuple2!2120)

(declare-fun lt!30018 () tuple2!2120)

(assert (=> b!68768 (= e!45071 (tuple2!2121 (_1!1070 lt!30018) (_2!1070 lt!30018)))))

(assert (=> b!68768 (= lt!30018 call!5853)))

(declare-fun b!68769 () Bool)

(assert (=> b!68769 (= e!45064 call!5859)))

(declare-fun b!68770 () Bool)

(assert (=> b!68770 (= e!45060 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30010)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun bm!5844 () Bool)

(assert (=> bm!5844 (= call!5849 (getCurrentListMap!421 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!68771 () Bool)

(assert (=> b!68771 (= e!45071 e!45057)))

(declare-fun c!9754 () Bool)

(assert (=> b!68771 (= c!9754 ((_ is MissingZero!244) lt!30007))))

(declare-fun bm!5845 () Bool)

(assert (=> bm!5845 (= call!5842 call!5852)))

(declare-fun call!5845 () ListLongMap!1421)

(declare-fun b!68772 () Bool)

(assert (=> b!68772 (= e!45059 (= call!5850 (+!89 call!5845 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!68773 () Bool)

(declare-fun res!36945 () Bool)

(assert (=> b!68773 (=> (not res!36945) (not e!45073))))

(assert (=> b!68773 (= res!36945 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3105 lt!30005)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5846 () Bool)

(declare-fun call!5843 () Bool)

(assert (=> bm!5846 (= call!5843 call!5846)))

(declare-fun b!68774 () Bool)

(declare-fun lt!30020 () Unit!1913)

(assert (=> b!68774 (= e!45063 lt!30020)))

(assert (=> b!68774 (= lt!30020 call!5855)))

(assert (=> b!68774 (= lt!30013 call!5836)))

(declare-fun c!9753 () Bool)

(assert (=> b!68774 (= c!9753 ((_ is MissingZero!244) lt!30013))))

(assert (=> b!68774 e!45067))

(declare-fun bm!5847 () Bool)

(assert (=> bm!5847 (= call!5856 call!5843)))

(declare-fun b!68775 () Bool)

(assert (=> b!68775 (= e!45062 e!45068)))

(assert (=> b!68775 (= c!9751 (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5848 () Bool)

(declare-fun c!9758 () Bool)

(declare-fun updateHelperNewKey!22 (LongMapFixedSize!678 (_ BitVec 64) V!2923 (_ BitVec 32)) tuple2!2120)

(assert (=> bm!5848 (= call!5853 (updateHelperNewKey!22 newMap!16 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))

(declare-fun bm!5849 () Bool)

(assert (=> bm!5849 (= call!5851 call!5839)))

(declare-fun bm!5850 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1913)

(assert (=> bm!5850 (= call!5855 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(declare-fun bm!5851 () Bool)

(assert (=> bm!5851 (= call!5858 call!5859)))

(declare-fun bm!5852 () Bool)

(declare-fun c!9752 () Bool)

(assert (=> bm!5852 (= c!9752 c!9756)))

(assert (=> bm!5852 (= call!5841 (contains!720 e!45064 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68776 () Bool)

(assert (=> b!68776 (= c!9758 ((_ is MissingVacant!244) lt!30007))))

(assert (=> b!68776 (= e!45066 e!45071)))

(declare-fun b!68777 () Bool)

(assert (=> b!68777 (= e!45070 ((_ is Undefined!244) lt!30005))))

(declare-fun bm!5853 () Bool)

(assert (=> bm!5853 (= call!5852 (+!89 (ite c!9749 call!5857 call!5859) (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!68778 () Bool)

(assert (=> b!68778 (= e!45074 e!45065)))

(declare-fun c!9760 () Bool)

(assert (=> b!68778 (= c!9760 (_1!1070 lt!30024))))

(declare-fun bm!5854 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5854 (= call!5846 (inRange!0 (ite c!9756 (ite c!9755 (index!3106 lt!30025) (ite c!9753 (index!3105 lt!30013) (index!3108 lt!30013))) (ite c!9759 (index!3106 lt!30010) (ite c!9748 (index!3105 lt!30005) (index!3108 lt!30005)))) (mask!6113 newMap!16)))))

(declare-fun bm!5855 () Bool)

(assert (=> bm!5855 (= call!5845 (map!1147 newMap!16))))

(declare-fun b!68779 () Bool)

(assert (=> b!68779 (= e!45065 (= call!5850 call!5845))))

(declare-fun bm!5856 () Bool)

(assert (=> bm!5856 (= call!5840 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!68780 () Bool)

(declare-fun c!9757 () Bool)

(assert (=> b!68780 (= c!9757 ((_ is MissingVacant!244) lt!30013))))

(assert (=> b!68780 (= e!45067 e!45069)))

(declare-fun b!68781 () Bool)

(declare-fun lt!30030 () Unit!1913)

(declare-fun lt!30017 () Unit!1913)

(assert (=> b!68781 (= lt!30030 lt!30017)))

(assert (=> b!68781 (= call!5842 call!5858)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1913)

(assert (=> b!68781 (= lt!30017 (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30028 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29778 (defaultEntry!2168 newMap!16)))))

(assert (=> b!68781 (= lt!30028 (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!68781 (= e!45068 (tuple2!2121 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) (zeroValue!2074 newMap!16) lt!29778 (_size!388 newMap!16) (_keys!3812 newMap!16) (_values!2151 newMap!16) (_vacant!388 newMap!16))))))

(declare-fun b!68782 () Bool)

(declare-fun Unit!1922 () Unit!1913)

(assert (=> b!68782 (= e!45063 Unit!1922)))

(declare-fun lt!30011 () Unit!1913)

(assert (=> b!68782 (= lt!30011 call!5837)))

(assert (=> b!68782 (= lt!30025 call!5836)))

(declare-fun res!36955 () Bool)

(assert (=> b!68782 (= res!36955 ((_ is Found!244) lt!30025))))

(assert (=> b!68782 (=> (not res!36955) (not e!45061))))

(assert (=> b!68782 e!45061))

(declare-fun lt!30009 () Unit!1913)

(assert (=> b!68782 (= lt!30009 lt!30011)))

(assert (=> b!68782 false))

(declare-fun b!68783 () Bool)

(declare-fun res!36949 () Bool)

(assert (=> b!68783 (= res!36949 call!5843)))

(assert (=> b!68783 (=> (not res!36949) (not e!45060))))

(assert (= (and d!14749 c!9749) b!68775))

(assert (= (and d!14749 (not c!9749)) b!68765))

(assert (= (and b!68775 c!9751) b!68764))

(assert (= (and b!68775 (not c!9751)) b!68781))

(assert (= (or b!68764 b!68781) bm!5851))

(assert (= (or b!68764 b!68781) bm!5837))

(assert (= (or b!68764 b!68781) bm!5845))

(assert (= (and b!68765 c!9756) b!68753))

(assert (= (and b!68765 (not c!9756)) b!68776))

(assert (= (and b!68753 c!9755) b!68782))

(assert (= (and b!68753 (not c!9755)) b!68774))

(assert (= (and b!68782 res!36955) b!68766))

(assert (= (and b!68766 res!36953) b!68759))

(assert (= (and b!68774 c!9753) b!68755))

(assert (= (and b!68774 (not c!9753)) b!68780))

(assert (= (and b!68755 res!36954) b!68748))

(assert (= (and b!68748 res!36950) b!68767))

(assert (= (and b!68780 c!9757) b!68751))

(assert (= (and b!68780 (not c!9757)) b!68750))

(assert (= (and b!68751 res!36944) b!68761))

(assert (= (and b!68761 res!36947) b!68745))

(assert (= (or b!68755 b!68751) bm!5839))

(assert (= (or b!68767 b!68745) bm!5849))

(assert (= (or b!68766 bm!5839) bm!5843))

(assert (= (or b!68782 b!68774) bm!5836))

(assert (= (and b!68776 c!9758) b!68768))

(assert (= (and b!68776 (not c!9758)) b!68771))

(assert (= (and b!68771 c!9754) b!68757))

(assert (= (and b!68771 (not c!9754)) b!68754))

(assert (= (and b!68754 c!9759) b!68747))

(assert (= (and b!68754 (not c!9759)) b!68752))

(assert (= (and b!68747 res!36942) b!68783))

(assert (= (and b!68783 res!36949) b!68770))

(assert (= (and b!68752 c!9748) b!68744))

(assert (= (and b!68752 (not c!9748)) b!68762))

(assert (= (and b!68744 res!36943) b!68773))

(assert (= (and b!68773 res!36945) b!68756))

(assert (= (and b!68762 c!9750) b!68760))

(assert (= (and b!68762 (not c!9750)) b!68777))

(assert (= (and b!68760 res!36952) b!68763))

(assert (= (and b!68763 res!36946) b!68749))

(assert (= (or b!68744 b!68760) bm!5847))

(assert (= (or b!68756 b!68749) bm!5842))

(assert (= (or b!68783 bm!5847) bm!5846))

(assert (= (or b!68747 b!68752) bm!5834))

(assert (= (or b!68768 b!68757) bm!5848))

(assert (= (or b!68774 b!68752) bm!5850))

(assert (= (or b!68753 b!68754) bm!5840))

(assert (= (or bm!5849 bm!5842) bm!5841))

(assert (= (or bm!5843 bm!5846) bm!5854))

(assert (= (or bm!5836 bm!5834) bm!5856))

(assert (= (or b!68782 b!68747) bm!5833))

(assert (= (or b!68753 b!68754) bm!5852))

(assert (= (and bm!5852 c!9752) b!68758))

(assert (= (and bm!5852 (not c!9752)) b!68769))

(assert (= (or bm!5837 bm!5840) bm!5844))

(assert (= (or bm!5851 b!68754 b!68769) bm!5838))

(assert (= (or bm!5845 b!68754) bm!5853))

(assert (= (and d!14749 res!36948) b!68778))

(assert (= (and b!68778 c!9760) b!68746))

(assert (= (and b!68778 (not c!9760)) b!68779))

(assert (= (and b!68746 res!36951) b!68772))

(assert (= (or b!68772 b!68779) bm!5855))

(assert (= (or b!68746 b!68772 b!68779) bm!5835))

(declare-fun m!64321 () Bool)

(assert (=> bm!5854 m!64321))

(declare-fun m!64323 () Bool)

(assert (=> b!68754 m!64323))

(declare-fun m!64325 () Bool)

(assert (=> b!68754 m!64325))

(declare-fun m!64327 () Bool)

(assert (=> b!68754 m!64327))

(declare-fun m!64329 () Bool)

(assert (=> b!68754 m!64329))

(assert (=> b!68754 m!64043))

(declare-fun m!64331 () Bool)

(assert (=> b!68754 m!64331))

(declare-fun m!64333 () Bool)

(assert (=> b!68754 m!64333))

(assert (=> b!68754 m!64325))

(assert (=> bm!5852 m!64043))

(declare-fun m!64335 () Bool)

(assert (=> bm!5852 m!64335))

(declare-fun m!64337 () Bool)

(assert (=> b!68772 m!64337))

(declare-fun m!64339 () Bool)

(assert (=> b!68764 m!64339))

(assert (=> bm!5856 m!64043))

(declare-fun m!64341 () Bool)

(assert (=> bm!5856 m!64341))

(assert (=> bm!5850 m!64043))

(declare-fun m!64343 () Bool)

(assert (=> bm!5850 m!64343))

(declare-fun m!64345 () Bool)

(assert (=> b!68781 m!64345))

(declare-fun m!64347 () Bool)

(assert (=> b!68773 m!64347))

(assert (=> b!68746 m!64043))

(declare-fun m!64349 () Bool)

(assert (=> b!68746 m!64349))

(assert (=> bm!5841 m!64043))

(declare-fun m!64351 () Bool)

(assert (=> bm!5841 m!64351))

(assert (=> bm!5855 m!64091))

(declare-fun m!64353 () Bool)

(assert (=> b!68763 m!64353))

(declare-fun m!64355 () Bool)

(assert (=> b!68759 m!64355))

(declare-fun m!64357 () Bool)

(assert (=> bm!5844 m!64357))

(declare-fun m!64359 () Bool)

(assert (=> b!68748 m!64359))

(declare-fun m!64361 () Bool)

(assert (=> b!68761 m!64361))

(declare-fun m!64363 () Bool)

(assert (=> bm!5853 m!64363))

(declare-fun m!64365 () Bool)

(assert (=> bm!5838 m!64365))

(assert (=> b!68765 m!64043))

(assert (=> b!68765 m!64341))

(declare-fun m!64367 () Bool)

(assert (=> bm!5835 m!64367))

(declare-fun m!64369 () Bool)

(assert (=> d!14749 m!64369))

(assert (=> d!14749 m!64087))

(declare-fun m!64371 () Bool)

(assert (=> b!68770 m!64371))

(assert (=> bm!5833 m!64043))

(declare-fun m!64373 () Bool)

(assert (=> bm!5833 m!64373))

(assert (=> bm!5848 m!64043))

(declare-fun m!64375 () Bool)

(assert (=> bm!5848 m!64375))

(assert (=> b!68433 d!14749))

(declare-fun d!14751 () Bool)

(assert (=> d!14751 (= (array_inv!1089 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvsge (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68443 d!14751))

(declare-fun d!14753 () Bool)

(assert (=> d!14753 (= (array_inv!1090 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvsge (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68443 d!14753))

(declare-fun d!14755 () Bool)

(declare-fun c!9763 () Bool)

(assert (=> d!14755 (= c!9763 ((_ is ValueCellFull!885) (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun e!45077 () V!2923)

(assert (=> d!14755 (= (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45077)))

(declare-fun b!68788 () Bool)

(declare-fun get!1135 (ValueCell!885 V!2923) V!2923)

(assert (=> b!68788 (= e!45077 (get!1135 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68789 () Bool)

(declare-fun get!1136 (ValueCell!885 V!2923) V!2923)

(assert (=> b!68789 (= e!45077 (get!1136 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14755 c!9763) b!68788))

(assert (= (and d!14755 (not c!9763)) b!68789))

(assert (=> b!68788 m!64045))

(assert (=> b!68788 m!64047))

(declare-fun m!64377 () Bool)

(assert (=> b!68788 m!64377))

(assert (=> b!68789 m!64045))

(assert (=> b!68789 m!64047))

(declare-fun m!64379 () Bool)

(assert (=> b!68789 m!64379))

(assert (=> b!68434 d!14755))

(declare-fun mapNonEmpty!3111 () Bool)

(declare-fun mapRes!3111 () Bool)

(declare-fun tp!8421 () Bool)

(declare-fun e!45082 () Bool)

(assert (=> mapNonEmpty!3111 (= mapRes!3111 (and tp!8421 e!45082))))

(declare-fun mapKey!3111 () (_ BitVec 32))

(declare-fun mapRest!3111 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3111 () ValueCell!885)

(assert (=> mapNonEmpty!3111 (= mapRest!3101 (store mapRest!3111 mapKey!3111 mapValue!3111))))

(declare-fun mapIsEmpty!3111 () Bool)

(assert (=> mapIsEmpty!3111 mapRes!3111))

(declare-fun condMapEmpty!3111 () Bool)

(declare-fun mapDefault!3111 () ValueCell!885)

(assert (=> mapNonEmpty!3101 (= condMapEmpty!3111 (= mapRest!3101 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3111)))))

(declare-fun e!45083 () Bool)

(assert (=> mapNonEmpty!3101 (= tp!8404 (and e!45083 mapRes!3111))))

(declare-fun b!68796 () Bool)

(assert (=> b!68796 (= e!45082 tp_is_empty!2457)))

(declare-fun b!68797 () Bool)

(assert (=> b!68797 (= e!45083 tp_is_empty!2457)))

(assert (= (and mapNonEmpty!3101 condMapEmpty!3111) mapIsEmpty!3111))

(assert (= (and mapNonEmpty!3101 (not condMapEmpty!3111)) mapNonEmpty!3111))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!885) mapValue!3111)) b!68796))

(assert (= (and mapNonEmpty!3101 ((_ is ValueCellFull!885) mapDefault!3111)) b!68797))

(declare-fun m!64381 () Bool)

(assert (=> mapNonEmpty!3111 m!64381))

(declare-fun mapNonEmpty!3112 () Bool)

(declare-fun mapRes!3112 () Bool)

(declare-fun tp!8422 () Bool)

(declare-fun e!45084 () Bool)

(assert (=> mapNonEmpty!3112 (= mapRes!3112 (and tp!8422 e!45084))))

(declare-fun mapValue!3112 () ValueCell!885)

(declare-fun mapKey!3112 () (_ BitVec 32))

(declare-fun mapRest!3112 () (Array (_ BitVec 32) ValueCell!885))

(assert (=> mapNonEmpty!3112 (= mapRest!3102 (store mapRest!3112 mapKey!3112 mapValue!3112))))

(declare-fun mapIsEmpty!3112 () Bool)

(assert (=> mapIsEmpty!3112 mapRes!3112))

(declare-fun condMapEmpty!3112 () Bool)

(declare-fun mapDefault!3112 () ValueCell!885)

(assert (=> mapNonEmpty!3102 (= condMapEmpty!3112 (= mapRest!3102 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3112)))))

(declare-fun e!45085 () Bool)

(assert (=> mapNonEmpty!3102 (= tp!8406 (and e!45085 mapRes!3112))))

(declare-fun b!68798 () Bool)

(assert (=> b!68798 (= e!45084 tp_is_empty!2457)))

(declare-fun b!68799 () Bool)

(assert (=> b!68799 (= e!45085 tp_is_empty!2457)))

(assert (= (and mapNonEmpty!3102 condMapEmpty!3112) mapIsEmpty!3112))

(assert (= (and mapNonEmpty!3102 (not condMapEmpty!3112)) mapNonEmpty!3112))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!885) mapValue!3112)) b!68798))

(assert (= (and mapNonEmpty!3102 ((_ is ValueCellFull!885) mapDefault!3112)) b!68799))

(declare-fun m!64383 () Bool)

(assert (=> mapNonEmpty!3112 m!64383))

(declare-fun b_lambda!3087 () Bool)

(assert (= b_lambda!3081 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3087)))

(declare-fun b_lambda!3089 () Bool)

(assert (= b_lambda!3085 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3089)))

(declare-fun b_lambda!3091 () Bool)

(assert (= b_lambda!3083 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3091)))

(check-sat tp_is_empty!2457 (not b_next!2081) (not mapNonEmpty!3111) (not d!14739) (not b!68638) (not b!68550) (not b!68661) (not b!68650) (not bm!5833) (not bm!5855) (not b!68533) (not b!68754) (not bm!5835) (not b_lambda!3091) (not mapNonEmpty!3112) (not b!68551) (not bm!5853) (not b!68619) (not bm!5850) (not b!68552) (not b!68537) (not bm!5848) (not b!68633) (not b!68539) (not b!68534) (not d!14725) (not b!68564) (not d!14737) (not b!68788) (not b_lambda!3087) (not b!68663) (not b!68541) (not d!14731) (not d!14711) (not b!68626) (not bm!5844) (not d!14743) (not bm!5778) (not bm!5776) (not d!14729) (not bm!5780) (not b!68620) (not b_lambda!3089) (not b!68627) (not b!68772) (not b!68623) (not bm!5838) (not b!68562) (not bm!5841) (not b!68622) (not b!68548) (not b!68563) (not d!14749) (not d!14715) (not d!14719) (not b!68553) (not b!68765) (not b!68532) (not d!14727) (not b_lambda!3079) (not d!14747) (not bm!5784) (not d!14713) b_and!4235 (not bm!5852) (not d!14723) (not bm!5854) (not b!68535) (not b!68615) (not b!68624) (not b!68549) (not b!68652) (not d!14717) b_and!4233 (not b!68538) (not b!68764) (not b!68654) (not b!68746) (not b!68789) (not b!68781) (not bm!5760) (not b!68554) (not bm!5779) (not b_next!2083) (not bm!5856) (not b!68555))
(check-sat b_and!4233 b_and!4235 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun d!14757 () Bool)

(assert (=> d!14757 (= (+!89 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (+!89 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (=> d!14757 true))

(declare-fun _$28!115 () Unit!1913)

(assert (=> d!14757 (= (choose!388 lt!29768 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) _$28!115)))

(declare-fun bs!2939 () Bool)

(assert (= bs!2939 d!14757))

(assert (=> bs!2939 m!64215))

(assert (=> bs!2939 m!64215))

(assert (=> bs!2939 m!64217))

(assert (=> bs!2939 m!64209))

(assert (=> bs!2939 m!64209))

(assert (=> bs!2939 m!64211))

(assert (=> d!14719 d!14757))

(declare-fun d!14759 () Bool)

(declare-fun e!45086 () Bool)

(assert (=> d!14759 e!45086))

(declare-fun res!36957 () Bool)

(assert (=> d!14759 (=> (not res!36957) (not e!45086))))

(declare-fun lt!30034 () ListLongMap!1421)

(assert (=> d!14759 (= res!36957 (contains!720 lt!30034 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30035 () List!1494)

(assert (=> d!14759 (= lt!30034 (ListLongMap!1422 lt!30035))))

(declare-fun lt!30032 () Unit!1913)

(declare-fun lt!30033 () Unit!1913)

(assert (=> d!14759 (= lt!30032 lt!30033)))

(assert (=> d!14759 (= (getValueByKey!130 lt!30035 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14759 (= lt!30033 (lemmaContainsTupThenGetReturnValue!49 lt!30035 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14759 (= lt!30035 (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14759 (= (+!89 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30034)))

(declare-fun b!68800 () Bool)

(declare-fun res!36956 () Bool)

(assert (=> b!68800 (=> (not res!36956) (not e!45086))))

(assert (=> b!68800 (= res!36956 (= (getValueByKey!130 (toList!726 lt!30034) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!68801 () Bool)

(assert (=> b!68801 (= e!45086 (contains!721 (toList!726 lt!30034) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14759 res!36957) b!68800))

(assert (= (and b!68800 res!36956) b!68801))

(declare-fun m!64385 () Bool)

(assert (=> d!14759 m!64385))

(declare-fun m!64387 () Bool)

(assert (=> d!14759 m!64387))

(declare-fun m!64389 () Bool)

(assert (=> d!14759 m!64389))

(declare-fun m!64391 () Bool)

(assert (=> d!14759 m!64391))

(declare-fun m!64393 () Bool)

(assert (=> b!68800 m!64393))

(declare-fun m!64395 () Bool)

(assert (=> b!68801 m!64395))

(assert (=> d!14719 d!14759))

(declare-fun d!14761 () Bool)

(declare-fun e!45087 () Bool)

(assert (=> d!14761 e!45087))

(declare-fun res!36959 () Bool)

(assert (=> d!14761 (=> (not res!36959) (not e!45087))))

(declare-fun lt!30038 () ListLongMap!1421)

(assert (=> d!14761 (= res!36959 (contains!720 lt!30038 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30039 () List!1494)

(assert (=> d!14761 (= lt!30038 (ListLongMap!1422 lt!30039))))

(declare-fun lt!30036 () Unit!1913)

(declare-fun lt!30037 () Unit!1913)

(assert (=> d!14761 (= lt!30036 lt!30037)))

(assert (=> d!14761 (= (getValueByKey!130 lt!30039 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14761 (= lt!30037 (lemmaContainsTupThenGetReturnValue!49 lt!30039 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14761 (= lt!30039 (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14761 (= (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30038)))

(declare-fun b!68802 () Bool)

(declare-fun res!36958 () Bool)

(assert (=> b!68802 (=> (not res!36958) (not e!45087))))

(assert (=> b!68802 (= res!36958 (= (getValueByKey!130 (toList!726 lt!30038) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!68803 () Bool)

(assert (=> b!68803 (= e!45087 (contains!721 (toList!726 lt!30038) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14761 res!36959) b!68802))

(assert (= (and b!68802 res!36958) b!68803))

(declare-fun m!64397 () Bool)

(assert (=> d!14761 m!64397))

(declare-fun m!64399 () Bool)

(assert (=> d!14761 m!64399))

(declare-fun m!64401 () Bool)

(assert (=> d!14761 m!64401))

(declare-fun m!64403 () Bool)

(assert (=> d!14761 m!64403))

(declare-fun m!64405 () Bool)

(assert (=> b!68802 m!64405))

(declare-fun m!64407 () Bool)

(assert (=> b!68803 m!64407))

(assert (=> d!14719 d!14761))

(declare-fun d!14763 () Bool)

(declare-fun e!45088 () Bool)

(assert (=> d!14763 e!45088))

(declare-fun res!36961 () Bool)

(assert (=> d!14763 (=> (not res!36961) (not e!45088))))

(declare-fun lt!30042 () ListLongMap!1421)

(assert (=> d!14763 (= res!36961 (contains!720 lt!30042 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!30043 () List!1494)

(assert (=> d!14763 (= lt!30042 (ListLongMap!1422 lt!30043))))

(declare-fun lt!30040 () Unit!1913)

(declare-fun lt!30041 () Unit!1913)

(assert (=> d!14763 (= lt!30040 lt!30041)))

(assert (=> d!14763 (= (getValueByKey!130 lt!30043 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14763 (= lt!30041 (lemmaContainsTupThenGetReturnValue!49 lt!30043 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14763 (= lt!30043 (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14763 (= (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30042)))

(declare-fun b!68804 () Bool)

(declare-fun res!36960 () Bool)

(assert (=> b!68804 (=> (not res!36960) (not e!45088))))

(assert (=> b!68804 (= res!36960 (= (getValueByKey!130 (toList!726 lt!30042) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!68805 () Bool)

(assert (=> b!68805 (= e!45088 (contains!721 (toList!726 lt!30042) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!14763 res!36961) b!68804))

(assert (= (and b!68804 res!36960) b!68805))

(declare-fun m!64409 () Bool)

(assert (=> d!14763 m!64409))

(declare-fun m!64411 () Bool)

(assert (=> d!14763 m!64411))

(declare-fun m!64413 () Bool)

(assert (=> d!14763 m!64413))

(declare-fun m!64415 () Bool)

(assert (=> d!14763 m!64415))

(declare-fun m!64417 () Bool)

(assert (=> b!68804 m!64417))

(declare-fun m!64419 () Bool)

(assert (=> b!68805 m!64419))

(assert (=> d!14719 d!14763))

(declare-fun d!14765 () Bool)

(declare-fun e!45089 () Bool)

(assert (=> d!14765 e!45089))

(declare-fun res!36963 () Bool)

(assert (=> d!14765 (=> (not res!36963) (not e!45089))))

(declare-fun lt!30046 () ListLongMap!1421)

(assert (=> d!14765 (= res!36963 (contains!720 lt!30046 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!30047 () List!1494)

(assert (=> d!14765 (= lt!30046 (ListLongMap!1422 lt!30047))))

(declare-fun lt!30044 () Unit!1913)

(declare-fun lt!30045 () Unit!1913)

(assert (=> d!14765 (= lt!30044 lt!30045)))

(assert (=> d!14765 (= (getValueByKey!130 lt!30047 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14765 (= lt!30045 (lemmaContainsTupThenGetReturnValue!49 lt!30047 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14765 (= lt!30047 (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14765 (= (+!89 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30046)))

(declare-fun b!68806 () Bool)

(declare-fun res!36962 () Bool)

(assert (=> b!68806 (=> (not res!36962) (not e!45089))))

(assert (=> b!68806 (= res!36962 (= (getValueByKey!130 (toList!726 lt!30046) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!68807 () Bool)

(assert (=> b!68807 (= e!45089 (contains!721 (toList!726 lt!30046) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!14765 res!36963) b!68806))

(assert (= (and b!68806 res!36962) b!68807))

(declare-fun m!64421 () Bool)

(assert (=> d!14765 m!64421))

(declare-fun m!64423 () Bool)

(assert (=> d!14765 m!64423))

(declare-fun m!64425 () Bool)

(assert (=> d!14765 m!64425))

(declare-fun m!64427 () Bool)

(assert (=> d!14765 m!64427))

(declare-fun m!64429 () Bool)

(assert (=> b!68806 m!64429))

(declare-fun m!64431 () Bool)

(assert (=> b!68807 m!64431))

(assert (=> d!14719 d!14765))

(declare-fun d!14767 () Bool)

(declare-fun e!45090 () Bool)

(assert (=> d!14767 e!45090))

(declare-fun res!36964 () Bool)

(assert (=> d!14767 (=> res!36964 e!45090)))

(declare-fun lt!30050 () Bool)

(assert (=> d!14767 (= res!36964 (not lt!30050))))

(declare-fun lt!30051 () Bool)

(assert (=> d!14767 (= lt!30050 lt!30051)))

(declare-fun lt!30049 () Unit!1913)

(declare-fun e!45091 () Unit!1913)

(assert (=> d!14767 (= lt!30049 e!45091)))

(declare-fun c!9764 () Bool)

(assert (=> d!14767 (= c!9764 lt!30051)))

(assert (=> d!14767 (= lt!30051 (containsKey!134 (toList!726 lt!29851) (_1!1069 lt!29775)))))

(assert (=> d!14767 (= (contains!720 lt!29851 (_1!1069 lt!29775)) lt!30050)))

(declare-fun b!68808 () Bool)

(declare-fun lt!30048 () Unit!1913)

(assert (=> b!68808 (= e!45091 lt!30048)))

(assert (=> b!68808 (= lt!30048 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29851) (_1!1069 lt!29775)))))

(assert (=> b!68808 (isDefined!84 (getValueByKey!130 (toList!726 lt!29851) (_1!1069 lt!29775)))))

(declare-fun b!68809 () Bool)

(declare-fun Unit!1923 () Unit!1913)

(assert (=> b!68809 (= e!45091 Unit!1923)))

(declare-fun b!68810 () Bool)

(assert (=> b!68810 (= e!45090 (isDefined!84 (getValueByKey!130 (toList!726 lt!29851) (_1!1069 lt!29775))))))

(assert (= (and d!14767 c!9764) b!68808))

(assert (= (and d!14767 (not c!9764)) b!68809))

(assert (= (and d!14767 (not res!36964)) b!68810))

(declare-fun m!64433 () Bool)

(assert (=> d!14767 m!64433))

(declare-fun m!64435 () Bool)

(assert (=> b!68808 m!64435))

(assert (=> b!68808 m!64205))

(assert (=> b!68808 m!64205))

(declare-fun m!64437 () Bool)

(assert (=> b!68808 m!64437))

(assert (=> b!68810 m!64205))

(assert (=> b!68810 m!64205))

(assert (=> b!68810 m!64437))

(assert (=> d!14717 d!14767))

(declare-fun b!68822 () Bool)

(declare-fun e!45097 () Option!136)

(assert (=> b!68822 (= e!45097 None!134)))

(declare-fun d!14769 () Bool)

(declare-fun c!9769 () Bool)

(assert (=> d!14769 (= c!9769 (and ((_ is Cons!1490) lt!29852) (= (_1!1069 (h!2075 lt!29852)) (_1!1069 lt!29775))))))

(declare-fun e!45096 () Option!136)

(assert (=> d!14769 (= (getValueByKey!130 lt!29852 (_1!1069 lt!29775)) e!45096)))

(declare-fun b!68819 () Bool)

(assert (=> b!68819 (= e!45096 (Some!135 (_2!1069 (h!2075 lt!29852))))))

(declare-fun b!68821 () Bool)

(assert (=> b!68821 (= e!45097 (getValueByKey!130 (t!5001 lt!29852) (_1!1069 lt!29775)))))

(declare-fun b!68820 () Bool)

(assert (=> b!68820 (= e!45096 e!45097)))

(declare-fun c!9770 () Bool)

(assert (=> b!68820 (= c!9770 (and ((_ is Cons!1490) lt!29852) (not (= (_1!1069 (h!2075 lt!29852)) (_1!1069 lt!29775)))))))

(assert (= (and d!14769 c!9769) b!68819))

(assert (= (and d!14769 (not c!9769)) b!68820))

(assert (= (and b!68820 c!9770) b!68821))

(assert (= (and b!68820 (not c!9770)) b!68822))

(declare-fun m!64439 () Bool)

(assert (=> b!68821 m!64439))

(assert (=> d!14717 d!14769))

(declare-fun d!14771 () Bool)

(assert (=> d!14771 (= (getValueByKey!130 lt!29852 (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775)))))

(declare-fun lt!30054 () Unit!1913)

(declare-fun choose!390 (List!1494 (_ BitVec 64) V!2923) Unit!1913)

(assert (=> d!14771 (= lt!30054 (choose!390 lt!29852 (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(declare-fun e!45100 () Bool)

(assert (=> d!14771 e!45100))

(declare-fun res!36969 () Bool)

(assert (=> d!14771 (=> (not res!36969) (not e!45100))))

(declare-fun isStrictlySorted!285 (List!1494) Bool)

(assert (=> d!14771 (= res!36969 (isStrictlySorted!285 lt!29852))))

(assert (=> d!14771 (= (lemmaContainsTupThenGetReturnValue!49 lt!29852 (_1!1069 lt!29775) (_2!1069 lt!29775)) lt!30054)))

(declare-fun b!68827 () Bool)

(declare-fun res!36970 () Bool)

(assert (=> b!68827 (=> (not res!36970) (not e!45100))))

(assert (=> b!68827 (= res!36970 (containsKey!134 lt!29852 (_1!1069 lt!29775)))))

(declare-fun b!68828 () Bool)

(assert (=> b!68828 (= e!45100 (contains!721 lt!29852 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(assert (= (and d!14771 res!36969) b!68827))

(assert (= (and b!68827 res!36970) b!68828))

(assert (=> d!14771 m!64199))

(declare-fun m!64441 () Bool)

(assert (=> d!14771 m!64441))

(declare-fun m!64443 () Bool)

(assert (=> d!14771 m!64443))

(declare-fun m!64445 () Bool)

(assert (=> b!68827 m!64445))

(declare-fun m!64447 () Bool)

(assert (=> b!68828 m!64447))

(assert (=> d!14717 d!14771))

(declare-fun bm!5863 () Bool)

(declare-fun call!5866 () List!1494)

(declare-fun call!5868 () List!1494)

(assert (=> bm!5863 (= call!5866 call!5868)))

(declare-fun b!68849 () Bool)

(declare-fun e!45114 () List!1494)

(declare-fun call!5867 () List!1494)

(assert (=> b!68849 (= e!45114 call!5867)))

(declare-fun b!68850 () Bool)

(declare-fun e!45113 () List!1494)

(assert (=> b!68850 (= e!45113 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29768)) (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(declare-fun b!68852 () Bool)

(declare-fun res!36976 () Bool)

(declare-fun e!45112 () Bool)

(assert (=> b!68852 (=> (not res!36976) (not e!45112))))

(declare-fun lt!30057 () List!1494)

(assert (=> b!68852 (= res!36976 (containsKey!134 lt!30057 (_1!1069 lt!29775)))))

(declare-fun b!68853 () Bool)

(declare-fun e!45111 () List!1494)

(declare-fun e!45115 () List!1494)

(assert (=> b!68853 (= e!45111 e!45115)))

(declare-fun c!9779 () Bool)

(assert (=> b!68853 (= c!9779 (and ((_ is Cons!1490) (toList!726 lt!29768)) (= (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 lt!29775))))))

(declare-fun c!9780 () Bool)

(declare-fun b!68854 () Bool)

(assert (=> b!68854 (= e!45113 (ite c!9779 (t!5001 (toList!726 lt!29768)) (ite c!9780 (Cons!1490 (h!2075 (toList!726 lt!29768)) (t!5001 (toList!726 lt!29768))) Nil!1491)))))

(declare-fun b!68855 () Bool)

(assert (=> b!68855 (= e!45114 call!5867)))

(declare-fun b!68856 () Bool)

(assert (=> b!68856 (= e!45115 call!5866)))

(declare-fun b!68857 () Bool)

(assert (=> b!68857 (= e!45111 call!5868)))

(declare-fun bm!5864 () Bool)

(declare-fun c!9781 () Bool)

(declare-fun $colon$colon!63 (List!1494 tuple2!2118) List!1494)

(assert (=> bm!5864 (= call!5868 ($colon$colon!63 e!45113 (ite c!9781 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775)))))))

(declare-fun c!9782 () Bool)

(assert (=> bm!5864 (= c!9782 c!9781)))

(declare-fun b!68858 () Bool)

(assert (=> b!68858 (= e!45112 (contains!721 lt!30057 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun bm!5865 () Bool)

(assert (=> bm!5865 (= call!5867 call!5866)))

(declare-fun b!68851 () Bool)

(assert (=> b!68851 (= c!9780 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 lt!29775))))))

(assert (=> b!68851 (= e!45115 e!45114)))

(declare-fun d!14773 () Bool)

(assert (=> d!14773 e!45112))

(declare-fun res!36975 () Bool)

(assert (=> d!14773 (=> (not res!36975) (not e!45112))))

(assert (=> d!14773 (= res!36975 (isStrictlySorted!285 lt!30057))))

(assert (=> d!14773 (= lt!30057 e!45111)))

(assert (=> d!14773 (= c!9781 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 lt!29775))))))

(assert (=> d!14773 (isStrictlySorted!285 (toList!726 lt!29768))))

(assert (=> d!14773 (= (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 lt!29775) (_2!1069 lt!29775)) lt!30057)))

(assert (= (and d!14773 c!9781) b!68857))

(assert (= (and d!14773 (not c!9781)) b!68853))

(assert (= (and b!68853 c!9779) b!68856))

(assert (= (and b!68853 (not c!9779)) b!68851))

(assert (= (and b!68851 c!9780) b!68855))

(assert (= (and b!68851 (not c!9780)) b!68849))

(assert (= (or b!68855 b!68849) bm!5865))

(assert (= (or b!68856 bm!5865) bm!5863))

(assert (= (or b!68857 bm!5863) bm!5864))

(assert (= (and bm!5864 c!9782) b!68850))

(assert (= (and bm!5864 (not c!9782)) b!68854))

(assert (= (and d!14773 res!36975) b!68852))

(assert (= (and b!68852 res!36976) b!68858))

(declare-fun m!64449 () Bool)

(assert (=> b!68850 m!64449))

(declare-fun m!64451 () Bool)

(assert (=> d!14773 m!64451))

(declare-fun m!64453 () Bool)

(assert (=> d!14773 m!64453))

(declare-fun m!64455 () Bool)

(assert (=> b!68852 m!64455))

(declare-fun m!64457 () Bool)

(assert (=> bm!5864 m!64457))

(declare-fun m!64459 () Bool)

(assert (=> b!68858 m!64459))

(assert (=> d!14717 d!14773))

(declare-fun d!14775 () Bool)

(assert (=> d!14775 (= (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (and (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68654 d!14775))

(declare-fun b!68893 () Bool)

(declare-fun e!45137 () Unit!1913)

(declare-fun Unit!1924 () Unit!1913)

(assert (=> b!68893 (= e!45137 Unit!1924)))

(declare-fun lt!30119 () Unit!1913)

(assert (=> b!68893 (= lt!30119 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30121 () SeekEntryResult!244)

(declare-fun call!5879 () SeekEntryResult!244)

(assert (=> b!68893 (= lt!30121 call!5879)))

(declare-fun res!36998 () Bool)

(assert (=> b!68893 (= res!36998 ((_ is Found!244) lt!30121))))

(declare-fun e!45133 () Bool)

(assert (=> b!68893 (=> (not res!36998) (not e!45133))))

(assert (=> b!68893 e!45133))

(declare-fun lt!30123 () Unit!1913)

(assert (=> b!68893 (= lt!30123 lt!30119)))

(assert (=> b!68893 false))

(declare-fun b!68894 () Bool)

(declare-fun e!45132 () Bool)

(declare-fun call!5880 () Bool)

(assert (=> b!68894 (= e!45132 (not call!5880))))

(declare-fun b!68895 () Bool)

(declare-fun e!45135 () Unit!1913)

(declare-fun Unit!1925 () Unit!1913)

(assert (=> b!68895 (= e!45135 Unit!1925)))

(declare-fun lt!30140 () Unit!1913)

(declare-fun lemmaArrayContainsKeyThenInListMap!11 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1913)

(assert (=> b!68895 (= lt!30140 (lemmaArrayContainsKeyThenInListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> b!68895 (contains!720 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))

(declare-fun lt!30120 () Unit!1913)

(assert (=> b!68895 (= lt!30120 lt!30140)))

(assert (=> b!68895 false))

(declare-fun e!45134 () Bool)

(declare-fun lt!30126 () tuple2!2120)

(declare-fun b!68896 () Bool)

(assert (=> b!68896 (= e!45134 (= (map!1147 (_2!1070 lt!30126)) (+!89 (map!1147 newMap!16) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!68897 () Bool)

(declare-fun e!45138 () Bool)

(declare-fun lt!30124 () SeekEntryResult!244)

(assert (=> b!68897 (= e!45138 ((_ is Undefined!244) lt!30124))))

(declare-fun b!68898 () Bool)

(assert (=> b!68898 (= e!45133 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30121)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun d!14777 () Bool)

(assert (=> d!14777 e!45134))

(declare-fun res!36995 () Bool)

(assert (=> d!14777 (=> (not res!36995) (not e!45134))))

(assert (=> d!14777 (= res!36995 (_1!1070 lt!30126))))

(assert (=> d!14777 (= lt!30126 (tuple2!2121 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd (_size!388 newMap!16) #b00000000000000000000000000000001) (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (_vacant!388 newMap!16))))))

(declare-fun lt!30135 () Unit!1913)

(declare-fun lt!30128 () Unit!1913)

(assert (=> d!14777 (= lt!30135 lt!30128)))

(declare-fun lt!30138 () array!3856)

(declare-fun lt!30132 () array!3854)

(assert (=> d!14777 (contains!720 (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))

(assert (=> d!14777 (= lt!30128 (lemmaValidKeyInArrayIsInListMap!80 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14777 (= lt!30138 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))))))

(assert (=> d!14777 (= lt!30132 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun lt!30145 () Unit!1913)

(declare-fun lt!30141 () Unit!1913)

(assert (=> d!14777 (= lt!30145 lt!30141)))

(declare-fun lt!30137 () array!3854)

(assert (=> d!14777 (= (arrayCountValidKeys!0 lt!30137 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3854 (_ BitVec 32)) Unit!1913)

(assert (=> d!14777 (= lt!30141 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30137 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))

(assert (=> d!14777 (= lt!30137 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun lt!30127 () Unit!1913)

(declare-fun lt!30125 () Unit!1913)

(assert (=> d!14777 (= lt!30127 lt!30125)))

(declare-fun lt!30139 () array!3854)

(assert (=> d!14777 (arrayContainsKey!0 lt!30139 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3854 (_ BitVec 64) (_ BitVec 32)) Unit!1913)

(assert (=> d!14777 (= lt!30125 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30139 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))

(assert (=> d!14777 (= lt!30139 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun lt!30134 () Unit!1913)

(declare-fun lt!30147 () Unit!1913)

(assert (=> d!14777 (= lt!30134 lt!30147)))

(assert (=> d!14777 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (getCurrentListMap!421 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!11 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1913)

(assert (=> d!14777 (= lt!30147 (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30146 () Unit!1913)

(declare-fun lt!30136 () Unit!1913)

(assert (=> d!14777 (= lt!30146 lt!30136)))

(assert (=> d!14777 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (mask!6113 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3854 (_ BitVec 32) (_ BitVec 32)) Unit!1913)

(assert (=> d!14777 (= lt!30136 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (mask!6113 newMap!16)))))

(declare-fun lt!30122 () Unit!1913)

(declare-fun lt!30131 () Unit!1913)

(assert (=> d!14777 (= lt!30122 lt!30131)))

(assert (=> d!14777 (= (arrayCountValidKeys!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3854 (_ BitVec 32) (_ BitVec 64)) Unit!1913)

(assert (=> d!14777 (= lt!30131 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3812 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun lt!30144 () Unit!1913)

(declare-fun lt!30142 () Unit!1913)

(assert (=> d!14777 (= lt!30144 lt!30142)))

(declare-fun lt!30133 () (_ BitVec 32))

(declare-fun lt!30118 () List!1495)

(assert (=> d!14777 (arrayNoDuplicates!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) lt!30133 lt!30118)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3854 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1495) Unit!1913)

(assert (=> d!14777 (= lt!30142 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) lt!30133 lt!30118))))

(assert (=> d!14777 (= lt!30118 Nil!1492)))

(assert (=> d!14777 (= lt!30133 #b00000000000000000000000000000000)))

(declare-fun lt!30143 () Unit!1913)

(assert (=> d!14777 (= lt!30143 e!45135)))

(declare-fun c!9792 () Bool)

(assert (=> d!14777 (= c!9792 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!30130 () Unit!1913)

(assert (=> d!14777 (= lt!30130 e!45137)))

(declare-fun c!9793 () Bool)

(assert (=> d!14777 (= c!9793 (contains!720 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14777 (valid!282 newMap!16)))

(assert (=> d!14777 (= (updateHelperNewKey!22 newMap!16 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))) lt!30126)))

(declare-fun b!68899 () Bool)

(declare-fun e!45136 () Bool)

(assert (=> b!68899 (= e!45136 (not call!5880))))

(declare-fun b!68900 () Bool)

(assert (=> b!68900 (= e!45138 e!45136)))

(declare-fun res!37001 () Bool)

(declare-fun call!5878 () Bool)

(assert (=> b!68900 (= res!37001 call!5878)))

(assert (=> b!68900 (=> (not res!37001) (not e!45136))))

(declare-fun b!68901 () Bool)

(declare-fun res!37003 () Bool)

(assert (=> b!68901 (=> (not res!37003) (not e!45134))))

(assert (=> b!68901 (= res!37003 (valid!282 (_2!1070 lt!30126)))))

(declare-fun b!68902 () Bool)

(declare-fun res!36997 () Bool)

(assert (=> b!68902 (=> (not res!36997) (not e!45132))))

(assert (=> b!68902 (= res!36997 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3105 lt!30124)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5874 () Bool)

(declare-fun c!9794 () Bool)

(declare-fun call!5877 () Bool)

(assert (=> bm!5874 (= call!5877 (inRange!0 (ite c!9793 (index!3106 lt!30121) (ite c!9794 (index!3105 lt!30124) (index!3108 lt!30124))) (mask!6113 newMap!16)))))

(declare-fun b!68903 () Bool)

(declare-fun res!37002 () Bool)

(assert (=> b!68903 (=> (not res!37002) (not e!45132))))

(assert (=> b!68903 (= res!37002 call!5878)))

(declare-fun e!45139 () Bool)

(assert (=> b!68903 (= e!45139 e!45132)))

(declare-fun b!68904 () Bool)

(declare-fun Unit!1926 () Unit!1913)

(assert (=> b!68904 (= e!45135 Unit!1926)))

(declare-fun b!68905 () Bool)

(declare-fun lt!30129 () Unit!1913)

(assert (=> b!68905 (= e!45137 lt!30129)))

(assert (=> b!68905 (= lt!30129 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(assert (=> b!68905 (= lt!30124 call!5879)))

(assert (=> b!68905 (= c!9794 ((_ is MissingZero!244) lt!30124))))

(assert (=> b!68905 e!45139))

(declare-fun b!68906 () Bool)

(declare-fun c!9791 () Bool)

(assert (=> b!68906 (= c!9791 ((_ is MissingVacant!244) lt!30124))))

(assert (=> b!68906 (= e!45139 e!45138)))

(declare-fun b!68907 () Bool)

(declare-fun res!36999 () Bool)

(assert (=> b!68907 (= res!36999 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30124)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68907 (=> (not res!36999) (not e!45136))))

(declare-fun bm!5875 () Bool)

(assert (=> bm!5875 (= call!5878 call!5877)))

(declare-fun b!68908 () Bool)

(declare-fun res!36996 () Bool)

(assert (=> b!68908 (= res!36996 call!5877)))

(assert (=> b!68908 (=> (not res!36996) (not e!45133))))

(declare-fun bm!5876 () Bool)

(assert (=> bm!5876 (= call!5880 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!5877 () Bool)

(assert (=> bm!5877 (= call!5879 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!68909 () Bool)

(declare-fun res!37000 () Bool)

(assert (=> b!68909 (=> (not res!37000) (not e!45134))))

(assert (=> b!68909 (= res!37000 (contains!720 (map!1147 (_2!1070 lt!30126)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!14777 c!9793) b!68893))

(assert (= (and d!14777 (not c!9793)) b!68905))

(assert (= (and b!68893 res!36998) b!68908))

(assert (= (and b!68908 res!36996) b!68898))

(assert (= (and b!68905 c!9794) b!68903))

(assert (= (and b!68905 (not c!9794)) b!68906))

(assert (= (and b!68903 res!37002) b!68902))

(assert (= (and b!68902 res!36997) b!68894))

(assert (= (and b!68906 c!9791) b!68900))

(assert (= (and b!68906 (not c!9791)) b!68897))

(assert (= (and b!68900 res!37001) b!68907))

(assert (= (and b!68907 res!36999) b!68899))

(assert (= (or b!68903 b!68900) bm!5875))

(assert (= (or b!68894 b!68899) bm!5876))

(assert (= (or b!68908 bm!5875) bm!5874))

(assert (= (or b!68893 b!68905) bm!5877))

(assert (= (and d!14777 c!9792) b!68895))

(assert (= (and d!14777 (not c!9792)) b!68904))

(assert (= (and d!14777 res!36995) b!68901))

(assert (= (and b!68901 res!37003) b!68909))

(assert (= (and b!68909 res!37000) b!68896))

(assert (=> b!68893 m!64043))

(assert (=> b!68893 m!64373))

(declare-fun m!64461 () Bool)

(assert (=> d!14777 m!64461))

(assert (=> d!14777 m!64087))

(assert (=> d!14777 m!64043))

(assert (=> d!14777 m!64351))

(assert (=> d!14777 m!64251))

(declare-fun m!64463 () Bool)

(assert (=> d!14777 m!64463))

(declare-fun m!64465 () Bool)

(assert (=> d!14777 m!64465))

(declare-fun m!64467 () Bool)

(assert (=> d!14777 m!64467))

(assert (=> d!14777 m!64043))

(declare-fun m!64469 () Bool)

(assert (=> d!14777 m!64469))

(assert (=> d!14777 m!64245))

(assert (=> d!14777 m!64043))

(declare-fun m!64471 () Bool)

(assert (=> d!14777 m!64471))

(declare-fun m!64473 () Bool)

(assert (=> d!14777 m!64473))

(assert (=> d!14777 m!64043))

(declare-fun m!64475 () Bool)

(assert (=> d!14777 m!64475))

(assert (=> d!14777 m!64043))

(declare-fun m!64477 () Bool)

(assert (=> d!14777 m!64477))

(declare-fun m!64479 () Bool)

(assert (=> d!14777 m!64479))

(declare-fun m!64481 () Bool)

(assert (=> d!14777 m!64481))

(declare-fun m!64483 () Bool)

(assert (=> d!14777 m!64483))

(assert (=> d!14777 m!64043))

(declare-fun m!64485 () Bool)

(assert (=> d!14777 m!64485))

(assert (=> d!14777 m!64479))

(assert (=> d!14777 m!64483))

(declare-fun m!64487 () Bool)

(assert (=> d!14777 m!64487))

(assert (=> d!14777 m!64251))

(assert (=> d!14777 m!64043))

(declare-fun m!64489 () Bool)

(assert (=> d!14777 m!64489))

(declare-fun m!64491 () Bool)

(assert (=> d!14777 m!64491))

(assert (=> d!14777 m!64043))

(declare-fun m!64493 () Bool)

(assert (=> d!14777 m!64493))

(assert (=> d!14777 m!64251))

(declare-fun m!64495 () Bool)

(assert (=> d!14777 m!64495))

(declare-fun m!64497 () Bool)

(assert (=> d!14777 m!64497))

(declare-fun m!64499 () Bool)

(assert (=> d!14777 m!64499))

(assert (=> bm!5877 m!64043))

(assert (=> bm!5877 m!64341))

(declare-fun m!64501 () Bool)

(assert (=> b!68901 m!64501))

(declare-fun m!64503 () Bool)

(assert (=> b!68909 m!64503))

(assert (=> b!68909 m!64503))

(assert (=> b!68909 m!64043))

(declare-fun m!64505 () Bool)

(assert (=> b!68909 m!64505))

(assert (=> b!68895 m!64043))

(declare-fun m!64507 () Bool)

(assert (=> b!68895 m!64507))

(assert (=> b!68895 m!64251))

(assert (=> b!68895 m!64251))

(assert (=> b!68895 m!64043))

(assert (=> b!68895 m!64489))

(declare-fun m!64509 () Bool)

(assert (=> bm!5874 m!64509))

(assert (=> b!68905 m!64043))

(assert (=> b!68905 m!64343))

(declare-fun m!64511 () Bool)

(assert (=> b!68907 m!64511))

(assert (=> b!68896 m!64503))

(assert (=> b!68896 m!64091))

(assert (=> b!68896 m!64091))

(declare-fun m!64513 () Bool)

(assert (=> b!68896 m!64513))

(declare-fun m!64515 () Bool)

(assert (=> b!68898 m!64515))

(declare-fun m!64517 () Bool)

(assert (=> b!68902 m!64517))

(assert (=> bm!5876 m!64043))

(assert (=> bm!5876 m!64351))

(assert (=> bm!5848 d!14777))

(assert (=> b!68652 d!14775))

(declare-fun d!14779 () Bool)

(declare-fun e!45140 () Bool)

(assert (=> d!14779 e!45140))

(declare-fun res!37004 () Bool)

(assert (=> d!14779 (=> res!37004 e!45140)))

(declare-fun lt!30150 () Bool)

(assert (=> d!14779 (= res!37004 (not lt!30150))))

(declare-fun lt!30151 () Bool)

(assert (=> d!14779 (= lt!30150 lt!30151)))

(declare-fun lt!30149 () Unit!1913)

(declare-fun e!45141 () Unit!1913)

(assert (=> d!14779 (= lt!30149 e!45141)))

(declare-fun c!9795 () Bool)

(assert (=> d!14779 (= c!9795 lt!30151)))

(assert (=> d!14779 (= lt!30151 (containsKey!134 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14779 (= (contains!720 call!5850 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30150)))

(declare-fun b!68910 () Bool)

(declare-fun lt!30148 () Unit!1913)

(assert (=> b!68910 (= e!45141 lt!30148)))

(assert (=> b!68910 (= lt!30148 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> b!68910 (isDefined!84 (getValueByKey!130 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68911 () Bool)

(declare-fun Unit!1927 () Unit!1913)

(assert (=> b!68911 (= e!45141 Unit!1927)))

(declare-fun b!68912 () Bool)

(assert (=> b!68912 (= e!45140 (isDefined!84 (getValueByKey!130 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (= (and d!14779 c!9795) b!68910))

(assert (= (and d!14779 (not c!9795)) b!68911))

(assert (= (and d!14779 (not res!37004)) b!68912))

(assert (=> d!14779 m!64043))

(declare-fun m!64519 () Bool)

(assert (=> d!14779 m!64519))

(assert (=> b!68910 m!64043))

(declare-fun m!64521 () Bool)

(assert (=> b!68910 m!64521))

(assert (=> b!68910 m!64043))

(declare-fun m!64523 () Bool)

(assert (=> b!68910 m!64523))

(assert (=> b!68910 m!64523))

(declare-fun m!64525 () Bool)

(assert (=> b!68910 m!64525))

(assert (=> b!68912 m!64043))

(assert (=> b!68912 m!64523))

(assert (=> b!68912 m!64523))

(assert (=> b!68912 m!64525))

(assert (=> b!68746 d!14779))

(declare-fun b!68913 () Bool)

(declare-fun lt!30158 () ListLongMap!1421)

(declare-fun e!45142 () Bool)

(assert (=> b!68913 (= e!45142 (= lt!30158 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun d!14781 () Bool)

(declare-fun e!45143 () Bool)

(assert (=> d!14781 e!45143))

(declare-fun res!37008 () Bool)

(assert (=> d!14781 (=> (not res!37008) (not e!45143))))

(assert (=> d!14781 (= res!37008 (not (contains!720 lt!30158 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45146 () ListLongMap!1421)

(assert (=> d!14781 (= lt!30158 e!45146)))

(declare-fun c!9798 () Bool)

(assert (=> d!14781 (= c!9798 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!14781 (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992))))))

(assert (=> d!14781 (= (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) lt!30158)))

(declare-fun b!68914 () Bool)

(declare-fun res!37006 () Bool)

(assert (=> b!68914 (=> (not res!37006) (not e!45143))))

(assert (=> b!68914 (= res!37006 (not (contains!720 lt!30158 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!5878 () Bool)

(declare-fun call!5881 () ListLongMap!1421)

(assert (=> bm!5878 (= call!5881 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!68915 () Bool)

(assert (=> b!68915 (= e!45142 (isEmpty!315 lt!30158))))

(declare-fun b!68916 () Bool)

(declare-fun e!45148 () Bool)

(declare-fun e!45147 () Bool)

(assert (=> b!68916 (= e!45148 e!45147)))

(assert (=> b!68916 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun res!37007 () Bool)

(assert (=> b!68916 (= res!37007 (contains!720 lt!30158 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!68916 (=> (not res!37007) (not e!45147))))

(declare-fun b!68917 () Bool)

(assert (=> b!68917 (= e!45146 (ListLongMap!1422 Nil!1491))))

(declare-fun b!68918 () Bool)

(assert (=> b!68918 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> b!68918 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> b!68918 (= e!45147 (= (apply!73 lt!30158 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!68919 () Bool)

(declare-fun e!45145 () Bool)

(assert (=> b!68919 (= e!45145 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!68919 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!68920 () Bool)

(declare-fun lt!30153 () Unit!1913)

(declare-fun lt!30156 () Unit!1913)

(assert (=> b!68920 (= lt!30153 lt!30156)))

(declare-fun lt!30154 () ListLongMap!1421)

(declare-fun lt!30152 () V!2923)

(declare-fun lt!30155 () (_ BitVec 64))

(declare-fun lt!30157 () (_ BitVec 64))

(assert (=> b!68920 (not (contains!720 (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152)) lt!30155))))

(assert (=> b!68920 (= lt!30156 (addStillNotContains!24 lt!30154 lt!30157 lt!30152 lt!30155))))

(assert (=> b!68920 (= lt!30155 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!68920 (= lt!30152 (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!68920 (= lt!30157 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!68920 (= lt!30154 call!5881)))

(declare-fun e!45144 () ListLongMap!1421)

(assert (=> b!68920 (= e!45144 (+!89 call!5881 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68921 () Bool)

(assert (=> b!68921 (= e!45144 call!5881)))

(declare-fun b!68922 () Bool)

(assert (=> b!68922 (= e!45146 e!45144)))

(declare-fun c!9799 () Bool)

(assert (=> b!68922 (= c!9799 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!68923 () Bool)

(assert (=> b!68923 (= e!45148 e!45142)))

(declare-fun c!9796 () Bool)

(assert (=> b!68923 (= c!9796 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!68924 () Bool)

(assert (=> b!68924 (= e!45143 e!45148)))

(declare-fun c!9797 () Bool)

(assert (=> b!68924 (= c!9797 e!45145)))

(declare-fun res!37005 () Bool)

(assert (=> b!68924 (=> (not res!37005) (not e!45145))))

(assert (=> b!68924 (= res!37005 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14781 c!9798) b!68917))

(assert (= (and d!14781 (not c!9798)) b!68922))

(assert (= (and b!68922 c!9799) b!68920))

(assert (= (and b!68922 (not c!9799)) b!68921))

(assert (= (or b!68920 b!68921) bm!5878))

(assert (= (and d!14781 res!37008) b!68914))

(assert (= (and b!68914 res!37006) b!68924))

(assert (= (and b!68924 res!37005) b!68919))

(assert (= (and b!68924 c!9797) b!68916))

(assert (= (and b!68924 (not c!9797)) b!68923))

(assert (= (and b!68916 res!37007) b!68918))

(assert (= (and b!68923 c!9796) b!68913))

(assert (= (and b!68923 (not c!9796)) b!68915))

(declare-fun b_lambda!3093 () Bool)

(assert (=> (not b_lambda!3093) (not b!68918)))

(assert (=> b!68918 t!4998))

(declare-fun b_and!4237 () Bool)

(assert (= b_and!4233 (and (=> t!4998 result!2609) b_and!4237)))

(assert (=> b!68918 t!5000))

(declare-fun b_and!4239 () Bool)

(assert (= b_and!4235 (and (=> t!5000 result!2613) b_and!4239)))

(declare-fun b_lambda!3095 () Bool)

(assert (=> (not b_lambda!3095) (not b!68920)))

(assert (=> b!68920 t!4998))

(declare-fun b_and!4241 () Bool)

(assert (= b_and!4237 (and (=> t!4998 result!2609) b_and!4241)))

(assert (=> b!68920 t!5000))

(declare-fun b_and!4243 () Bool)

(assert (= b_and!4239 (and (=> t!5000 result!2613) b_and!4243)))

(declare-fun m!64527 () Bool)

(assert (=> d!14781 m!64527))

(assert (=> d!14781 m!64067))

(declare-fun m!64529 () Bool)

(assert (=> b!68916 m!64529))

(assert (=> b!68916 m!64529))

(declare-fun m!64531 () Bool)

(assert (=> b!68916 m!64531))

(declare-fun m!64533 () Bool)

(assert (=> b!68915 m!64533))

(declare-fun m!64535 () Bool)

(assert (=> b!68913 m!64535))

(declare-fun m!64537 () Bool)

(assert (=> b!68914 m!64537))

(declare-fun m!64539 () Bool)

(assert (=> b!68918 m!64539))

(assert (=> b!68918 m!64539))

(assert (=> b!68918 m!64047))

(declare-fun m!64541 () Bool)

(assert (=> b!68918 m!64541))

(assert (=> b!68918 m!64529))

(assert (=> b!68918 m!64529))

(declare-fun m!64543 () Bool)

(assert (=> b!68918 m!64543))

(assert (=> b!68918 m!64047))

(assert (=> bm!5878 m!64535))

(assert (=> b!68922 m!64529))

(assert (=> b!68922 m!64529))

(declare-fun m!64545 () Bool)

(assert (=> b!68922 m!64545))

(assert (=> b!68919 m!64529))

(assert (=> b!68919 m!64529))

(assert (=> b!68919 m!64545))

(declare-fun m!64547 () Bool)

(assert (=> b!68920 m!64547))

(assert (=> b!68920 m!64539))

(assert (=> b!68920 m!64047))

(assert (=> b!68920 m!64541))

(declare-fun m!64549 () Bool)

(assert (=> b!68920 m!64549))

(assert (=> b!68920 m!64529))

(declare-fun m!64551 () Bool)

(assert (=> b!68920 m!64551))

(assert (=> b!68920 m!64047))

(assert (=> b!68920 m!64549))

(declare-fun m!64553 () Bool)

(assert (=> b!68920 m!64553))

(assert (=> b!68920 m!64539))

(assert (=> b!68532 d!14781))

(declare-fun d!14783 () Bool)

(declare-fun res!37009 () Bool)

(declare-fun e!45149 () Bool)

(assert (=> d!14783 (=> res!37009 e!45149)))

(assert (=> d!14783 (= res!37009 (= (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14783 (= (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45149)))

(declare-fun b!68925 () Bool)

(declare-fun e!45150 () Bool)

(assert (=> b!68925 (= e!45149 e!45150)))

(declare-fun res!37010 () Bool)

(assert (=> b!68925 (=> (not res!37010) (not e!45150))))

(assert (=> b!68925 (= res!37010 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!68926 () Bool)

(assert (=> b!68926 (= e!45150 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14783 (not res!37009)) b!68925))

(assert (= (and b!68925 res!37010) b!68926))

(declare-fun m!64555 () Bool)

(assert (=> d!14783 m!64555))

(assert (=> b!68926 m!64043))

(declare-fun m!64557 () Bool)

(assert (=> b!68926 m!64557))

(assert (=> bm!5841 d!14783))

(declare-fun b!68930 () Bool)

(declare-fun e!45152 () Option!136)

(assert (=> b!68930 (= e!45152 None!134)))

(declare-fun d!14785 () Bool)

(declare-fun c!9800 () Bool)

(assert (=> d!14785 (= c!9800 (and ((_ is Cons!1490) (toList!726 lt!29847)) (= (_1!1069 (h!2075 (toList!726 lt!29847))) (_1!1069 lt!29777))))))

(declare-fun e!45151 () Option!136)

(assert (=> d!14785 (= (getValueByKey!130 (toList!726 lt!29847) (_1!1069 lt!29777)) e!45151)))

(declare-fun b!68927 () Bool)

(assert (=> b!68927 (= e!45151 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29847)))))))

(declare-fun b!68929 () Bool)

(assert (=> b!68929 (= e!45152 (getValueByKey!130 (t!5001 (toList!726 lt!29847)) (_1!1069 lt!29777)))))

(declare-fun b!68928 () Bool)

(assert (=> b!68928 (= e!45151 e!45152)))

(declare-fun c!9801 () Bool)

(assert (=> b!68928 (= c!9801 (and ((_ is Cons!1490) (toList!726 lt!29847)) (not (= (_1!1069 (h!2075 (toList!726 lt!29847))) (_1!1069 lt!29777)))))))

(assert (= (and d!14785 c!9800) b!68927))

(assert (= (and d!14785 (not c!9800)) b!68928))

(assert (= (and b!68928 c!9801) b!68929))

(assert (= (and b!68928 (not c!9801)) b!68930))

(declare-fun m!64559 () Bool)

(assert (=> b!68929 m!64559))

(assert (=> b!68548 d!14785))

(declare-fun d!14787 () Bool)

(declare-fun res!37011 () Bool)

(declare-fun e!45153 () Bool)

(assert (=> d!14787 (=> res!37011 e!45153)))

(assert (=> d!14787 (= res!37011 (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14787 (= (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!45153)))

(declare-fun b!68931 () Bool)

(declare-fun e!45154 () Bool)

(assert (=> b!68931 (= e!45153 e!45154)))

(declare-fun res!37012 () Bool)

(assert (=> b!68931 (=> (not res!37012) (not e!45154))))

(assert (=> b!68931 (= res!37012 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!68932 () Bool)

(assert (=> b!68932 (= e!45154 (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14787 (not res!37011)) b!68931))

(assert (= (and b!68931 res!37012) b!68932))

(assert (=> d!14787 m!64529))

(assert (=> b!68932 m!64043))

(declare-fun m!64561 () Bool)

(assert (=> b!68932 m!64561))

(assert (=> b!68633 d!14787))

(assert (=> bm!5778 d!14713))

(declare-fun b!68949 () Bool)

(declare-fun e!45164 () Bool)

(declare-fun call!5886 () Bool)

(assert (=> b!68949 (= e!45164 (not call!5886))))

(declare-fun b!68950 () Bool)

(declare-fun e!45165 () Bool)

(assert (=> b!68950 (= e!45165 (not call!5886))))

(declare-fun b!68951 () Bool)

(declare-fun lt!30164 () SeekEntryResult!244)

(assert (=> b!68951 (and (bvsge (index!3105 lt!30164) #b00000000000000000000000000000000) (bvslt (index!3105 lt!30164) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun res!37023 () Bool)

(assert (=> b!68951 (= res!37023 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3105 lt!30164)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68951 (=> (not res!37023) (not e!45164))))

(declare-fun b!68952 () Bool)

(declare-fun res!37022 () Bool)

(assert (=> b!68952 (=> (not res!37022) (not e!45165))))

(declare-fun call!5887 () Bool)

(assert (=> b!68952 (= res!37022 call!5887)))

(declare-fun e!45163 () Bool)

(assert (=> b!68952 (= e!45163 e!45165)))

(declare-fun bm!5883 () Bool)

(declare-fun c!9806 () Bool)

(assert (=> bm!5883 (= call!5887 (inRange!0 (ite c!9806 (index!3105 lt!30164) (index!3108 lt!30164)) (mask!6113 newMap!16)))))

(declare-fun b!68953 () Bool)

(declare-fun res!37024 () Bool)

(assert (=> b!68953 (=> (not res!37024) (not e!45165))))

(assert (=> b!68953 (= res!37024 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30164)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68953 (and (bvsge (index!3108 lt!30164) #b00000000000000000000000000000000) (bvslt (index!3108 lt!30164) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5884 () Bool)

(assert (=> bm!5884 (= call!5886 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68954 () Bool)

(declare-fun e!45166 () Bool)

(assert (=> b!68954 (= e!45166 e!45164)))

(declare-fun res!37021 () Bool)

(assert (=> b!68954 (= res!37021 call!5887)))

(assert (=> b!68954 (=> (not res!37021) (not e!45164))))

(declare-fun b!68955 () Bool)

(assert (=> b!68955 (= e!45166 e!45163)))

(declare-fun c!9807 () Bool)

(assert (=> b!68955 (= c!9807 ((_ is MissingVacant!244) lt!30164))))

(declare-fun d!14789 () Bool)

(assert (=> d!14789 e!45166))

(assert (=> d!14789 (= c!9806 ((_ is MissingZero!244) lt!30164))))

(assert (=> d!14789 (= lt!30164 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun lt!30163 () Unit!1913)

(declare-fun choose!391 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1913)

(assert (=> d!14789 (= lt!30163 (choose!391 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14789 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14789 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) lt!30163)))

(declare-fun b!68956 () Bool)

(assert (=> b!68956 (= e!45163 ((_ is Undefined!244) lt!30164))))

(assert (= (and d!14789 c!9806) b!68954))

(assert (= (and d!14789 (not c!9806)) b!68955))

(assert (= (and b!68954 res!37021) b!68951))

(assert (= (and b!68951 res!37023) b!68949))

(assert (= (and b!68955 c!9807) b!68952))

(assert (= (and b!68955 (not c!9807)) b!68956))

(assert (= (and b!68952 res!37022) b!68953))

(assert (= (and b!68953 res!37024) b!68950))

(assert (= (or b!68954 b!68952) bm!5883))

(assert (= (or b!68949 b!68950) bm!5884))

(assert (=> bm!5884 m!64043))

(assert (=> bm!5884 m!64351))

(declare-fun m!64563 () Bool)

(assert (=> b!68953 m!64563))

(declare-fun m!64565 () Bool)

(assert (=> b!68951 m!64565))

(assert (=> d!14789 m!64043))

(assert (=> d!14789 m!64341))

(assert (=> d!14789 m!64043))

(declare-fun m!64567 () Bool)

(assert (=> d!14789 m!64567))

(declare-fun m!64569 () Bool)

(assert (=> d!14789 m!64569))

(declare-fun m!64571 () Bool)

(assert (=> bm!5883 m!64571))

(assert (=> bm!5850 d!14789))

(declare-fun d!14791 () Bool)

(declare-fun e!45169 () Bool)

(assert (=> d!14791 e!45169))

(declare-fun c!9810 () Bool)

(assert (=> d!14791 (= c!9810 (and (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!14791 true))

(declare-fun _$29!84 () Unit!1913)

(assert (=> d!14791 (= (choose!389 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) _$29!84)))

(declare-fun b!68961 () Bool)

(assert (=> b!68961 (= e!45169 (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!68962 () Bool)

(assert (=> b!68962 (= e!45169 (ite (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14791 c!9810) b!68961))

(assert (= (and d!14791 (not c!9810)) b!68962))

(assert (=> b!68961 m!64043))

(assert (=> b!68961 m!64061))

(assert (=> d!14743 d!14791))

(assert (=> d!14743 d!14721))

(declare-fun d!14793 () Bool)

(assert (=> d!14793 (= (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68620 d!14793))

(assert (=> bm!5760 d!14781))

(declare-fun b!68975 () Bool)

(declare-fun e!45178 () SeekEntryResult!244)

(declare-fun lt!30171 () SeekEntryResult!244)

(assert (=> b!68975 (= e!45178 (MissingZero!244 (index!3107 lt!30171)))))

(declare-fun b!68976 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3854 (_ BitVec 32)) SeekEntryResult!244)

(assert (=> b!68976 (= e!45178 (seekKeyOrZeroReturnVacant!0 (x!10858 lt!30171) (index!3107 lt!30171) (index!3107 lt!30171) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!68977 () Bool)

(declare-fun e!45176 () SeekEntryResult!244)

(assert (=> b!68977 (= e!45176 Undefined!244)))

(declare-fun lt!30172 () SeekEntryResult!244)

(declare-fun d!14795 () Bool)

(assert (=> d!14795 (and (or ((_ is Undefined!244) lt!30172) (not ((_ is Found!244) lt!30172)) (and (bvsge (index!3106 lt!30172) #b00000000000000000000000000000000) (bvslt (index!3106 lt!30172) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30172) ((_ is Found!244) lt!30172) (not ((_ is MissingZero!244) lt!30172)) (and (bvsge (index!3105 lt!30172) #b00000000000000000000000000000000) (bvslt (index!3105 lt!30172) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30172) ((_ is Found!244) lt!30172) ((_ is MissingZero!244) lt!30172) (not ((_ is MissingVacant!244) lt!30172)) (and (bvsge (index!3108 lt!30172) #b00000000000000000000000000000000) (bvslt (index!3108 lt!30172) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30172) (ite ((_ is Found!244) lt!30172) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30172)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (ite ((_ is MissingZero!244) lt!30172) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3105 lt!30172)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!244) lt!30172) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30172)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14795 (= lt!30172 e!45176)))

(declare-fun c!9819 () Bool)

(assert (=> d!14795 (= c!9819 (and ((_ is Intermediate!244) lt!30171) (undefined!1056 lt!30171)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3854 (_ BitVec 32)) SeekEntryResult!244)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!14795 (= lt!30171 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (mask!6113 newMap!16)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!14795 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14795 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30172)))

(declare-fun b!68978 () Bool)

(declare-fun e!45177 () SeekEntryResult!244)

(assert (=> b!68978 (= e!45176 e!45177)))

(declare-fun lt!30173 () (_ BitVec 64))

(assert (=> b!68978 (= lt!30173 (select (arr!1840 (_keys!3812 newMap!16)) (index!3107 lt!30171)))))

(declare-fun c!9818 () Bool)

(assert (=> b!68978 (= c!9818 (= lt!30173 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68979 () Bool)

(assert (=> b!68979 (= e!45177 (Found!244 (index!3107 lt!30171)))))

(declare-fun b!68980 () Bool)

(declare-fun c!9817 () Bool)

(assert (=> b!68980 (= c!9817 (= lt!30173 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68980 (= e!45177 e!45178)))

(assert (= (and d!14795 c!9819) b!68977))

(assert (= (and d!14795 (not c!9819)) b!68978))

(assert (= (and b!68978 c!9818) b!68979))

(assert (= (and b!68978 (not c!9818)) b!68980))

(assert (= (and b!68980 c!9817) b!68975))

(assert (= (and b!68980 (not c!9817)) b!68976))

(assert (=> b!68976 m!64043))

(declare-fun m!64573 () Bool)

(assert (=> b!68976 m!64573))

(declare-fun m!64575 () Bool)

(assert (=> d!14795 m!64575))

(declare-fun m!64577 () Bool)

(assert (=> d!14795 m!64577))

(assert (=> d!14795 m!64043))

(declare-fun m!64579 () Bool)

(assert (=> d!14795 m!64579))

(assert (=> d!14795 m!64579))

(assert (=> d!14795 m!64043))

(declare-fun m!64581 () Bool)

(assert (=> d!14795 m!64581))

(declare-fun m!64583 () Bool)

(assert (=> d!14795 m!64583))

(assert (=> d!14795 m!64569))

(declare-fun m!64585 () Bool)

(assert (=> b!68978 m!64585))

(assert (=> b!68765 d!14795))

(declare-fun d!14797 () Bool)

(declare-fun e!45179 () Bool)

(assert (=> d!14797 e!45179))

(declare-fun res!37025 () Bool)

(assert (=> d!14797 (=> res!37025 e!45179)))

(declare-fun lt!30176 () Bool)

(assert (=> d!14797 (= res!37025 (not lt!30176))))

(declare-fun lt!30177 () Bool)

(assert (=> d!14797 (= lt!30176 lt!30177)))

(declare-fun lt!30175 () Unit!1913)

(declare-fun e!45180 () Unit!1913)

(assert (=> d!14797 (= lt!30175 e!45180)))

(declare-fun c!9820 () Bool)

(assert (=> d!14797 (= c!9820 lt!30177)))

(assert (=> d!14797 (= lt!30177 (containsKey!134 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14797 (= (contains!720 lt!29836 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30176)))

(declare-fun b!68981 () Bool)

(declare-fun lt!30174 () Unit!1913)

(assert (=> b!68981 (= e!45180 lt!30174)))

(assert (=> b!68981 (= lt!30174 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68981 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68982 () Bool)

(declare-fun Unit!1928 () Unit!1913)

(assert (=> b!68982 (= e!45180 Unit!1928)))

(declare-fun b!68983 () Bool)

(assert (=> b!68983 (= e!45179 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14797 c!9820) b!68981))

(assert (= (and d!14797 (not c!9820)) b!68982))

(assert (= (and d!14797 (not res!37025)) b!68983))

(declare-fun m!64587 () Bool)

(assert (=> d!14797 m!64587))

(declare-fun m!64589 () Bool)

(assert (=> b!68981 m!64589))

(declare-fun m!64591 () Bool)

(assert (=> b!68981 m!64591))

(assert (=> b!68981 m!64591))

(declare-fun m!64593 () Bool)

(assert (=> b!68981 m!64593))

(assert (=> b!68983 m!64591))

(assert (=> b!68983 m!64591))

(assert (=> b!68983 m!64593))

(assert (=> d!14713 d!14797))

(assert (=> d!14713 d!14721))

(declare-fun b!68987 () Bool)

(declare-fun e!45182 () Option!136)

(assert (=> b!68987 (= e!45182 None!134)))

(declare-fun d!14799 () Bool)

(declare-fun c!9821 () Bool)

(assert (=> d!14799 (= c!9821 (and ((_ is Cons!1490) (toList!726 lt!29851)) (= (_1!1069 (h!2075 (toList!726 lt!29851))) (_1!1069 lt!29775))))))

(declare-fun e!45181 () Option!136)

(assert (=> d!14799 (= (getValueByKey!130 (toList!726 lt!29851) (_1!1069 lt!29775)) e!45181)))

(declare-fun b!68984 () Bool)

(assert (=> b!68984 (= e!45181 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29851)))))))

(declare-fun b!68986 () Bool)

(assert (=> b!68986 (= e!45182 (getValueByKey!130 (t!5001 (toList!726 lt!29851)) (_1!1069 lt!29775)))))

(declare-fun b!68985 () Bool)

(assert (=> b!68985 (= e!45181 e!45182)))

(declare-fun c!9822 () Bool)

(assert (=> b!68985 (= c!9822 (and ((_ is Cons!1490) (toList!726 lt!29851)) (not (= (_1!1069 (h!2075 (toList!726 lt!29851))) (_1!1069 lt!29775)))))))

(assert (= (and d!14799 c!9821) b!68984))

(assert (= (and d!14799 (not c!9821)) b!68985))

(assert (= (and b!68985 c!9822) b!68986))

(assert (= (and b!68985 (not c!9822)) b!68987))

(declare-fun m!64595 () Bool)

(assert (=> b!68986 m!64595))

(assert (=> b!68550 d!14799))

(declare-fun d!14801 () Bool)

(declare-fun e!45183 () Bool)

(assert (=> d!14801 e!45183))

(declare-fun res!37026 () Bool)

(assert (=> d!14801 (=> res!37026 e!45183)))

(declare-fun lt!30180 () Bool)

(assert (=> d!14801 (= res!37026 (not lt!30180))))

(declare-fun lt!30181 () Bool)

(assert (=> d!14801 (= lt!30180 lt!30181)))

(declare-fun lt!30179 () Unit!1913)

(declare-fun e!45184 () Unit!1913)

(assert (=> d!14801 (= lt!30179 e!45184)))

(declare-fun c!9823 () Bool)

(assert (=> d!14801 (= c!9823 lt!30181)))

(assert (=> d!14801 (= lt!30181 (containsKey!134 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14801 (= (contains!720 e!45064 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30180)))

(declare-fun b!68988 () Bool)

(declare-fun lt!30178 () Unit!1913)

(assert (=> b!68988 (= e!45184 lt!30178)))

(assert (=> b!68988 (= lt!30178 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> b!68988 (isDefined!84 (getValueByKey!130 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!68989 () Bool)

(declare-fun Unit!1929 () Unit!1913)

(assert (=> b!68989 (= e!45184 Unit!1929)))

(declare-fun b!68990 () Bool)

(assert (=> b!68990 (= e!45183 (isDefined!84 (getValueByKey!130 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (= (and d!14801 c!9823) b!68988))

(assert (= (and d!14801 (not c!9823)) b!68989))

(assert (= (and d!14801 (not res!37026)) b!68990))

(assert (=> d!14801 m!64043))

(declare-fun m!64597 () Bool)

(assert (=> d!14801 m!64597))

(assert (=> b!68988 m!64043))

(declare-fun m!64599 () Bool)

(assert (=> b!68988 m!64599))

(assert (=> b!68988 m!64043))

(declare-fun m!64601 () Bool)

(assert (=> b!68988 m!64601))

(assert (=> b!68988 m!64601))

(declare-fun m!64603 () Bool)

(assert (=> b!68988 m!64603))

(assert (=> b!68990 m!64043))

(assert (=> b!68990 m!64601))

(assert (=> b!68990 m!64601))

(assert (=> b!68990 m!64603))

(assert (=> bm!5852 d!14801))

(assert (=> d!14739 d!14745))

(declare-fun d!14803 () Bool)

(assert (=> d!14803 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) from!355 Nil!1492)))

(assert (=> d!14803 true))

(declare-fun _$71!90 () Unit!1913)

(assert (=> d!14803 (= (choose!39 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!90)))

(declare-fun bs!2940 () Bool)

(assert (= bs!2940 d!14803))

(assert (=> bs!2940 m!64057))

(assert (=> d!14739 d!14803))

(declare-fun d!14805 () Bool)

(declare-fun res!37031 () Bool)

(declare-fun e!45189 () Bool)

(assert (=> d!14805 (=> res!37031 e!45189)))

(assert (=> d!14805 (= res!37031 (and ((_ is Cons!1490) (toList!726 lt!29772)) (= (_1!1069 (h!2075 (toList!726 lt!29772))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (=> d!14805 (= (containsKey!134 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45189)))

(declare-fun b!68995 () Bool)

(declare-fun e!45190 () Bool)

(assert (=> b!68995 (= e!45189 e!45190)))

(declare-fun res!37032 () Bool)

(assert (=> b!68995 (=> (not res!37032) (not e!45190))))

(assert (=> b!68995 (= res!37032 (and (or (not ((_ is Cons!1490) (toList!726 lt!29772))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29772))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) ((_ is Cons!1490) (toList!726 lt!29772)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29772))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun b!68996 () Bool)

(assert (=> b!68996 (= e!45190 (containsKey!134 (t!5001 (toList!726 lt!29772)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!14805 (not res!37031)) b!68995))

(assert (= (and b!68995 res!37032) b!68996))

(assert (=> b!68996 m!64043))

(declare-fun m!64605 () Bool)

(assert (=> b!68996 m!64605))

(assert (=> d!14747 d!14805))

(declare-fun d!14807 () Bool)

(assert (=> d!14807 (= (get!1136 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68789 d!14807))

(declare-fun b!69005 () Bool)

(declare-fun e!45195 () (_ BitVec 32))

(assert (=> b!69005 (= e!45195 #b00000000000000000000000000000000)))

(declare-fun b!69006 () Bool)

(declare-fun e!45196 () (_ BitVec 32))

(assert (=> b!69006 (= e!45195 e!45196)))

(declare-fun c!9828 () Bool)

(assert (=> b!69006 (= c!9828 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5887 () Bool)

(declare-fun call!5890 () (_ BitVec 32))

(assert (=> bm!5887 (= call!5890 (arrayCountValidKeys!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69007 () Bool)

(assert (=> b!69007 (= e!45196 call!5890)))

(declare-fun d!14809 () Bool)

(declare-fun lt!30184 () (_ BitVec 32))

(assert (=> d!14809 (and (bvsge lt!30184 #b00000000000000000000000000000000) (bvsle lt!30184 (bvsub (size!2076 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14809 (= lt!30184 e!45195)))

(declare-fun c!9829 () Bool)

(assert (=> d!14809 (= c!9829 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14809 (and (bvsle #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2076 (_keys!3812 newMap!16)) (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14809 (= (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) lt!30184)))

(declare-fun b!69008 () Bool)

(assert (=> b!69008 (= e!45196 (bvadd #b00000000000000000000000000000001 call!5890))))

(assert (= (and d!14809 c!9829) b!69005))

(assert (= (and d!14809 (not c!9829)) b!69006))

(assert (= (and b!69006 c!9828) b!69008))

(assert (= (and b!69006 (not c!9828)) b!69007))

(assert (= (or b!69008 b!69007) bm!5887))

(assert (=> b!69006 m!64555))

(assert (=> b!69006 m!64555))

(declare-fun m!64607 () Bool)

(assert (=> b!69006 m!64607))

(declare-fun m!64609 () Bool)

(assert (=> bm!5887 m!64609))

(assert (=> b!68562 d!14809))

(declare-fun d!14811 () Bool)

(declare-fun e!45197 () Bool)

(assert (=> d!14811 e!45197))

(declare-fun res!37033 () Bool)

(assert (=> d!14811 (=> res!37033 e!45197)))

(declare-fun lt!30187 () Bool)

(assert (=> d!14811 (= res!37033 (not lt!30187))))

(declare-fun lt!30188 () Bool)

(assert (=> d!14811 (= lt!30187 lt!30188)))

(declare-fun lt!30186 () Unit!1913)

(declare-fun e!45198 () Unit!1913)

(assert (=> d!14811 (= lt!30186 e!45198)))

(declare-fun c!9830 () Bool)

(assert (=> d!14811 (= c!9830 lt!30188)))

(assert (=> d!14811 (= lt!30188 (containsKey!134 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!14811 (= (contains!720 lt!29836 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30187)))

(declare-fun b!69009 () Bool)

(declare-fun lt!30185 () Unit!1913)

(assert (=> b!69009 (= e!45198 lt!30185)))

(assert (=> b!69009 (= lt!30185 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!69009 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69010 () Bool)

(declare-fun Unit!1930 () Unit!1913)

(assert (=> b!69010 (= e!45198 Unit!1930)))

(declare-fun b!69011 () Bool)

(assert (=> b!69011 (= e!45197 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!14811 c!9830) b!69009))

(assert (= (and d!14811 (not c!9830)) b!69010))

(assert (= (and d!14811 (not res!37033)) b!69011))

(assert (=> d!14811 m!64159))

(declare-fun m!64611 () Bool)

(assert (=> d!14811 m!64611))

(assert (=> b!69009 m!64159))

(declare-fun m!64613 () Bool)

(assert (=> b!69009 m!64613))

(assert (=> b!69009 m!64159))

(declare-fun m!64615 () Bool)

(assert (=> b!69009 m!64615))

(assert (=> b!69009 m!64615))

(declare-fun m!64617 () Bool)

(assert (=> b!69009 m!64617))

(assert (=> b!69011 m!64159))

(assert (=> b!69011 m!64615))

(assert (=> b!69011 m!64615))

(assert (=> b!69011 m!64617))

(assert (=> b!68535 d!14811))

(declare-fun d!14813 () Bool)

(declare-fun c!9831 () Bool)

(assert (=> d!14813 (= c!9831 ((_ is ValueCellFull!885) (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45199 () V!2923)

(assert (=> d!14813 (= (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45199)))

(declare-fun b!69012 () Bool)

(assert (=> b!69012 (= e!45199 (get!1135 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69013 () Bool)

(assert (=> b!69013 (= e!45199 (get!1136 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14813 c!9831) b!69012))

(assert (= (and d!14813 (not c!9831)) b!69013))

(assert (=> b!69012 m!64169))

(assert (=> b!69012 m!64047))

(declare-fun m!64619 () Bool)

(assert (=> b!69012 m!64619))

(assert (=> b!69013 m!64169))

(assert (=> b!69013 m!64047))

(declare-fun m!64621 () Bool)

(assert (=> b!69013 m!64621))

(assert (=> b!68539 d!14813))

(declare-fun d!14815 () Bool)

(assert (=> d!14815 (not (contains!720 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)) lt!29833))))

(declare-fun lt!30191 () Unit!1913)

(declare-fun choose!392 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1913)

(assert (=> d!14815 (= lt!30191 (choose!392 lt!29832 lt!29835 lt!29830 lt!29833))))

(declare-fun e!45202 () Bool)

(assert (=> d!14815 e!45202))

(declare-fun res!37036 () Bool)

(assert (=> d!14815 (=> (not res!37036) (not e!45202))))

(assert (=> d!14815 (= res!37036 (not (contains!720 lt!29832 lt!29833)))))

(assert (=> d!14815 (= (addStillNotContains!24 lt!29832 lt!29835 lt!29830 lt!29833) lt!30191)))

(declare-fun b!69017 () Bool)

(assert (=> b!69017 (= e!45202 (not (= lt!29835 lt!29833)))))

(assert (= (and d!14815 res!37036) b!69017))

(assert (=> d!14815 m!64179))

(assert (=> d!14815 m!64179))

(assert (=> d!14815 m!64183))

(declare-fun m!64623 () Bool)

(assert (=> d!14815 m!64623))

(declare-fun m!64625 () Bool)

(assert (=> d!14815 m!64625))

(assert (=> b!68539 d!14815))

(declare-fun d!14817 () Bool)

(declare-fun e!45203 () Bool)

(assert (=> d!14817 e!45203))

(declare-fun res!37038 () Bool)

(assert (=> d!14817 (=> (not res!37038) (not e!45203))))

(declare-fun lt!30194 () ListLongMap!1421)

(assert (=> d!14817 (= res!37038 (contains!720 lt!30194 (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun lt!30195 () List!1494)

(assert (=> d!14817 (= lt!30194 (ListLongMap!1422 lt!30195))))

(declare-fun lt!30192 () Unit!1913)

(declare-fun lt!30193 () Unit!1913)

(assert (=> d!14817 (= lt!30192 lt!30193)))

(assert (=> d!14817 (= (getValueByKey!130 lt!30195 (_1!1069 (tuple2!2119 lt!29835 lt!29830))) (Some!135 (_2!1069 (tuple2!2119 lt!29835 lt!29830))))))

(assert (=> d!14817 (= lt!30193 (lemmaContainsTupThenGetReturnValue!49 lt!30195 (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830))))))

(assert (=> d!14817 (= lt!30195 (insertStrictlySorted!51 (toList!726 lt!29832) (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830))))))

(assert (=> d!14817 (= (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)) lt!30194)))

(declare-fun b!69018 () Bool)

(declare-fun res!37037 () Bool)

(assert (=> b!69018 (=> (not res!37037) (not e!45203))))

(assert (=> b!69018 (= res!37037 (= (getValueByKey!130 (toList!726 lt!30194) (_1!1069 (tuple2!2119 lt!29835 lt!29830))) (Some!135 (_2!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(declare-fun b!69019 () Bool)

(assert (=> b!69019 (= e!45203 (contains!721 (toList!726 lt!30194) (tuple2!2119 lt!29835 lt!29830)))))

(assert (= (and d!14817 res!37038) b!69018))

(assert (= (and b!69018 res!37037) b!69019))

(declare-fun m!64627 () Bool)

(assert (=> d!14817 m!64627))

(declare-fun m!64629 () Bool)

(assert (=> d!14817 m!64629))

(declare-fun m!64631 () Bool)

(assert (=> d!14817 m!64631))

(declare-fun m!64633 () Bool)

(assert (=> d!14817 m!64633))

(declare-fun m!64635 () Bool)

(assert (=> b!69018 m!64635))

(declare-fun m!64637 () Bool)

(assert (=> b!69019 m!64637))

(assert (=> b!68539 d!14817))

(declare-fun d!14819 () Bool)

(declare-fun e!45204 () Bool)

(assert (=> d!14819 e!45204))

(declare-fun res!37040 () Bool)

(assert (=> d!14819 (=> (not res!37040) (not e!45204))))

(declare-fun lt!30198 () ListLongMap!1421)

(assert (=> d!14819 (= res!37040 (contains!720 lt!30198 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30199 () List!1494)

(assert (=> d!14819 (= lt!30198 (ListLongMap!1422 lt!30199))))

(declare-fun lt!30196 () Unit!1913)

(declare-fun lt!30197 () Unit!1913)

(assert (=> d!14819 (= lt!30196 lt!30197)))

(assert (=> d!14819 (= (getValueByKey!130 lt!30199 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14819 (= lt!30197 (lemmaContainsTupThenGetReturnValue!49 lt!30199 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14819 (= lt!30199 (insertStrictlySorted!51 (toList!726 call!5763) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14819 (= (+!89 call!5763 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30198)))

(declare-fun b!69020 () Bool)

(declare-fun res!37039 () Bool)

(assert (=> b!69020 (=> (not res!37039) (not e!45204))))

(assert (=> b!69020 (= res!37039 (= (getValueByKey!130 (toList!726 lt!30198) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!69021 () Bool)

(assert (=> b!69021 (= e!45204 (contains!721 (toList!726 lt!30198) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14819 res!37040) b!69020))

(assert (= (and b!69020 res!37039) b!69021))

(declare-fun m!64639 () Bool)

(assert (=> d!14819 m!64639))

(declare-fun m!64641 () Bool)

(assert (=> d!14819 m!64641))

(declare-fun m!64643 () Bool)

(assert (=> d!14819 m!64643))

(declare-fun m!64645 () Bool)

(assert (=> d!14819 m!64645))

(declare-fun m!64647 () Bool)

(assert (=> b!69020 m!64647))

(declare-fun m!64649 () Bool)

(assert (=> b!69021 m!64649))

(assert (=> b!68539 d!14819))

(declare-fun d!14821 () Bool)

(declare-fun e!45205 () Bool)

(assert (=> d!14821 e!45205))

(declare-fun res!37041 () Bool)

(assert (=> d!14821 (=> res!37041 e!45205)))

(declare-fun lt!30202 () Bool)

(assert (=> d!14821 (= res!37041 (not lt!30202))))

(declare-fun lt!30203 () Bool)

(assert (=> d!14821 (= lt!30202 lt!30203)))

(declare-fun lt!30201 () Unit!1913)

(declare-fun e!45206 () Unit!1913)

(assert (=> d!14821 (= lt!30201 e!45206)))

(declare-fun c!9832 () Bool)

(assert (=> d!14821 (= c!9832 lt!30203)))

(assert (=> d!14821 (= lt!30203 (containsKey!134 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833))))

(assert (=> d!14821 (= (contains!720 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)) lt!29833) lt!30202)))

(declare-fun b!69022 () Bool)

(declare-fun lt!30200 () Unit!1913)

(assert (=> b!69022 (= e!45206 lt!30200)))

(assert (=> b!69022 (= lt!30200 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833))))

(assert (=> b!69022 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833))))

(declare-fun b!69023 () Bool)

(declare-fun Unit!1931 () Unit!1913)

(assert (=> b!69023 (= e!45206 Unit!1931)))

(declare-fun b!69024 () Bool)

(assert (=> b!69024 (= e!45205 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833)))))

(assert (= (and d!14821 c!9832) b!69022))

(assert (= (and d!14821 (not c!9832)) b!69023))

(assert (= (and d!14821 (not res!37041)) b!69024))

(declare-fun m!64651 () Bool)

(assert (=> d!14821 m!64651))

(declare-fun m!64653 () Bool)

(assert (=> b!69022 m!64653))

(declare-fun m!64655 () Bool)

(assert (=> b!69022 m!64655))

(assert (=> b!69022 m!64655))

(declare-fun m!64657 () Bool)

(assert (=> b!69022 m!64657))

(assert (=> b!69024 m!64655))

(assert (=> b!69024 m!64655))

(assert (=> b!69024 m!64657))

(assert (=> b!68539 d!14821))

(declare-fun b!69025 () Bool)

(declare-fun e!45207 () Bool)

(assert (=> b!69025 (= e!45207 (contains!722 Nil!1492 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69026 () Bool)

(declare-fun e!45208 () Bool)

(declare-fun call!5891 () Bool)

(assert (=> b!69026 (= e!45208 call!5891)))

(declare-fun bm!5888 () Bool)

(declare-fun c!9833 () Bool)

(assert (=> bm!5888 (= call!5891 (arrayNoDuplicates!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9833 (Cons!1491 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492)))))

(declare-fun d!14823 () Bool)

(declare-fun res!37044 () Bool)

(declare-fun e!45210 () Bool)

(assert (=> d!14823 (=> res!37044 e!45210)))

(assert (=> d!14823 (= res!37044 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14823 (= (arrayNoDuplicates!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 Nil!1492) e!45210)))

(declare-fun b!69027 () Bool)

(declare-fun e!45209 () Bool)

(assert (=> b!69027 (= e!45209 e!45208)))

(assert (=> b!69027 (= c!9833 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69028 () Bool)

(assert (=> b!69028 (= e!45208 call!5891)))

(declare-fun b!69029 () Bool)

(assert (=> b!69029 (= e!45210 e!45209)))

(declare-fun res!37043 () Bool)

(assert (=> b!69029 (=> (not res!37043) (not e!45209))))

(assert (=> b!69029 (= res!37043 (not e!45207))))

(declare-fun res!37042 () Bool)

(assert (=> b!69029 (=> (not res!37042) (not e!45207))))

(assert (=> b!69029 (= res!37042 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!14823 (not res!37044)) b!69029))

(assert (= (and b!69029 res!37042) b!69025))

(assert (= (and b!69029 res!37043) b!69027))

(assert (= (and b!69027 c!9833) b!69028))

(assert (= (and b!69027 (not c!9833)) b!69026))

(assert (= (or b!69028 b!69026) bm!5888))

(assert (=> b!69025 m!64555))

(assert (=> b!69025 m!64555))

(declare-fun m!64659 () Bool)

(assert (=> b!69025 m!64659))

(assert (=> bm!5888 m!64555))

(declare-fun m!64661 () Bool)

(assert (=> bm!5888 m!64661))

(assert (=> b!69027 m!64555))

(assert (=> b!69027 m!64555))

(assert (=> b!69027 m!64607))

(assert (=> b!69029 m!64555))

(assert (=> b!69029 m!64555))

(assert (=> b!69029 m!64607))

(assert (=> b!68564 d!14823))

(declare-fun d!14825 () Bool)

(declare-fun e!45211 () Bool)

(assert (=> d!14825 e!45211))

(declare-fun res!37046 () Bool)

(assert (=> d!14825 (=> (not res!37046) (not e!45211))))

(declare-fun lt!30206 () ListLongMap!1421)

(assert (=> d!14825 (= res!37046 (contains!720 lt!30206 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30207 () List!1494)

(assert (=> d!14825 (= lt!30206 (ListLongMap!1422 lt!30207))))

(declare-fun lt!30204 () Unit!1913)

(declare-fun lt!30205 () Unit!1913)

(assert (=> d!14825 (= lt!30204 lt!30205)))

(assert (=> d!14825 (= (getValueByKey!130 lt!30207 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14825 (= lt!30205 (lemmaContainsTupThenGetReturnValue!49 lt!30207 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14825 (= lt!30207 (insertStrictlySorted!51 (toList!726 call!5782) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14825 (= (+!89 call!5782 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30206)))

(declare-fun b!69030 () Bool)

(declare-fun res!37045 () Bool)

(assert (=> b!69030 (=> (not res!37045) (not e!45211))))

(assert (=> b!69030 (= res!37045 (= (getValueByKey!130 (toList!726 lt!30206) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69031 () Bool)

(assert (=> b!69031 (= e!45211 (contains!721 (toList!726 lt!30206) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14825 res!37046) b!69030))

(assert (= (and b!69030 res!37045) b!69031))

(declare-fun m!64663 () Bool)

(assert (=> d!14825 m!64663))

(declare-fun m!64665 () Bool)

(assert (=> d!14825 m!64665))

(declare-fun m!64667 () Bool)

(assert (=> d!14825 m!64667))

(declare-fun m!64669 () Bool)

(assert (=> d!14825 m!64669))

(declare-fun m!64671 () Bool)

(assert (=> b!69030 m!64671))

(declare-fun m!64673 () Bool)

(assert (=> b!69031 m!64673))

(assert (=> b!68622 d!14825))

(assert (=> bm!5855 d!14729))

(assert (=> b!68638 d!14741))

(declare-fun d!14827 () Bool)

(declare-fun get!1137 (Option!136) V!2923)

(assert (=> d!14827 (= (apply!73 lt!29836 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1137 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2941 () Bool)

(assert (= bs!2941 d!14827))

(assert (=> bs!2941 m!64159))

(assert (=> bs!2941 m!64615))

(assert (=> bs!2941 m!64615))

(declare-fun m!64675 () Bool)

(assert (=> bs!2941 m!64675))

(assert (=> b!68537 d!14827))

(assert (=> b!68537 d!14813))

(declare-fun d!14829 () Bool)

(assert (=> d!14829 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30210 () Unit!1913)

(declare-fun choose!393 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1913)

(assert (=> d!14829 (= lt!30210 (choose!393 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30028 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29778 (defaultEntry!2168 newMap!16)))))

(assert (=> d!14829 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14829 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30028 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29778 (defaultEntry!2168 newMap!16)) lt!30210)))

(declare-fun bs!2942 () Bool)

(assert (= bs!2942 d!14829))

(declare-fun m!64677 () Bool)

(assert (=> bs!2942 m!64677))

(assert (=> bs!2942 m!64251))

(declare-fun m!64679 () Bool)

(assert (=> bs!2942 m!64679))

(declare-fun m!64681 () Bool)

(assert (=> bs!2942 m!64681))

(assert (=> bs!2942 m!64251))

(assert (=> bs!2942 m!64569))

(assert (=> b!68781 d!14829))

(assert (=> b!68541 d!14793))

(declare-fun d!14831 () Bool)

(declare-fun lt!30213 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!72 (List!1494) (InoxSet tuple2!2118))

(assert (=> d!14831 (= lt!30213 (select (content!72 (toList!726 lt!29858)) lt!29775))))

(declare-fun e!45216 () Bool)

(assert (=> d!14831 (= lt!30213 e!45216)))

(declare-fun res!37052 () Bool)

(assert (=> d!14831 (=> (not res!37052) (not e!45216))))

(assert (=> d!14831 (= res!37052 ((_ is Cons!1490) (toList!726 lt!29858)))))

(assert (=> d!14831 (= (contains!721 (toList!726 lt!29858) lt!29775) lt!30213)))

(declare-fun b!69036 () Bool)

(declare-fun e!45217 () Bool)

(assert (=> b!69036 (= e!45216 e!45217)))

(declare-fun res!37051 () Bool)

(assert (=> b!69036 (=> res!37051 e!45217)))

(assert (=> b!69036 (= res!37051 (= (h!2075 (toList!726 lt!29858)) lt!29775))))

(declare-fun b!69037 () Bool)

(assert (=> b!69037 (= e!45217 (contains!721 (t!5001 (toList!726 lt!29858)) lt!29775))))

(assert (= (and d!14831 res!37052) b!69036))

(assert (= (and b!69036 (not res!37051)) b!69037))

(declare-fun m!64683 () Bool)

(assert (=> d!14831 m!64683))

(declare-fun m!64685 () Bool)

(assert (=> d!14831 m!64685))

(declare-fun m!64687 () Bool)

(assert (=> b!69037 m!64687))

(assert (=> b!68553 d!14831))

(declare-fun b!69038 () Bool)

(declare-fun res!37055 () Bool)

(declare-fun e!45220 () Bool)

(assert (=> b!69038 (=> (not res!37055) (not e!45220))))

(declare-fun e!45225 () Bool)

(assert (=> b!69038 (= res!37055 e!45225)))

(declare-fun c!9836 () Bool)

(assert (=> b!69038 (= c!9836 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69039 () Bool)

(declare-fun res!37060 () Bool)

(assert (=> b!69039 (=> (not res!37060) (not e!45220))))

(declare-fun e!45226 () Bool)

(assert (=> b!69039 (= res!37060 e!45226)))

(declare-fun res!37061 () Bool)

(assert (=> b!69039 (=> res!37061 e!45226)))

(declare-fun e!45230 () Bool)

(assert (=> b!69039 (= res!37061 (not e!45230))))

(declare-fun res!37058 () Bool)

(assert (=> b!69039 (=> (not res!37058) (not e!45230))))

(assert (=> b!69039 (= res!37058 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5889 () Bool)

(declare-fun call!5893 () ListLongMap!1421)

(declare-fun call!5895 () ListLongMap!1421)

(assert (=> bm!5889 (= call!5893 call!5895)))

(declare-fun b!69041 () Bool)

(declare-fun e!45224 () ListLongMap!1421)

(declare-fun call!5892 () ListLongMap!1421)

(assert (=> b!69041 (= e!45224 call!5892)))

(declare-fun b!69042 () Bool)

(declare-fun e!45229 () ListLongMap!1421)

(declare-fun e!45219 () ListLongMap!1421)

(assert (=> b!69042 (= e!45229 e!45219)))

(declare-fun c!9839 () Bool)

(assert (=> b!69042 (= c!9839 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5890 () Bool)

(declare-fun call!5897 () Bool)

(declare-fun lt!30232 () ListLongMap!1421)

(assert (=> bm!5890 (= call!5897 (contains!720 lt!30232 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69043 () Bool)

(assert (=> b!69043 (= e!45219 call!5892)))

(declare-fun b!69044 () Bool)

(declare-fun e!45218 () Bool)

(declare-fun e!45222 () Bool)

(assert (=> b!69044 (= e!45218 e!45222)))

(declare-fun res!37056 () Bool)

(assert (=> b!69044 (= res!37056 call!5897)))

(assert (=> b!69044 (=> (not res!37056) (not e!45222))))

(declare-fun b!69045 () Bool)

(declare-fun call!5894 () ListLongMap!1421)

(assert (=> b!69045 (= e!45224 call!5894)))

(declare-fun b!69046 () Bool)

(declare-fun e!45223 () Bool)

(assert (=> b!69046 (= e!45223 (= (apply!73 lt!30232 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69046 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029))))))

(assert (=> b!69046 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69047 () Bool)

(assert (=> b!69047 (= e!45220 e!45218)))

(declare-fun c!9837 () Bool)

(assert (=> b!69047 (= c!9837 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14833 () Bool)

(assert (=> d!14833 e!45220))

(declare-fun res!37059 () Bool)

(assert (=> d!14833 (=> (not res!37059) (not e!45220))))

(assert (=> d!14833 (= res!37059 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun lt!30224 () ListLongMap!1421)

(assert (=> d!14833 (= lt!30232 lt!30224)))

(declare-fun lt!30228 () Unit!1913)

(declare-fun e!45221 () Unit!1913)

(assert (=> d!14833 (= lt!30228 e!45221)))

(declare-fun c!9838 () Bool)

(declare-fun e!45227 () Bool)

(assert (=> d!14833 (= c!9838 e!45227)))

(declare-fun res!37057 () Bool)

(assert (=> d!14833 (=> (not res!37057) (not e!45227))))

(assert (=> d!14833 (= res!37057 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14833 (= lt!30224 e!45229)))

(declare-fun c!9835 () Bool)

(assert (=> d!14833 (= c!9835 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14833 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14833 (= (getCurrentListMap!421 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30232)))

(declare-fun b!69040 () Bool)

(assert (=> b!69040 (= e!45218 (not call!5897))))

(declare-fun bm!5891 () Bool)

(assert (=> bm!5891 (= call!5894 call!5893)))

(declare-fun bm!5892 () Bool)

(assert (=> bm!5892 (= call!5895 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69048 () Bool)

(declare-fun Unit!1932 () Unit!1913)

(assert (=> b!69048 (= e!45221 Unit!1932)))

(declare-fun b!69049 () Bool)

(declare-fun e!45228 () Bool)

(assert (=> b!69049 (= e!45225 e!45228)))

(declare-fun res!37054 () Bool)

(declare-fun call!5898 () Bool)

(assert (=> b!69049 (= res!37054 call!5898)))

(assert (=> b!69049 (=> (not res!37054) (not e!45228))))

(declare-fun b!69050 () Bool)

(assert (=> b!69050 (= e!45222 (= (apply!73 lt!30232 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69051 () Bool)

(assert (=> b!69051 (= e!45230 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5893 () Bool)

(assert (=> bm!5893 (= call!5898 (contains!720 lt!30232 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69052 () Bool)

(declare-fun c!9834 () Bool)

(assert (=> b!69052 (= c!9834 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69052 (= e!45219 e!45224)))

(declare-fun bm!5894 () Bool)

(declare-fun call!5896 () ListLongMap!1421)

(assert (=> bm!5894 (= call!5896 (+!89 (ite c!9835 call!5895 (ite c!9839 call!5893 call!5894)) (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun b!69053 () Bool)

(assert (=> b!69053 (= e!45229 (+!89 call!5896 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69054 () Bool)

(declare-fun lt!30223 () Unit!1913)

(assert (=> b!69054 (= e!45221 lt!30223)))

(declare-fun lt!30230 () ListLongMap!1421)

(assert (=> b!69054 (= lt!30230 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30216 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30216 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30222 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30222 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30234 () Unit!1913)

(assert (=> b!69054 (= lt!30234 (addStillContains!49 lt!30230 lt!30216 (zeroValue!2074 newMap!16) lt!30222))))

(assert (=> b!69054 (contains!720 (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))) lt!30222)))

(declare-fun lt!30221 () Unit!1913)

(assert (=> b!69054 (= lt!30221 lt!30234)))

(declare-fun lt!30218 () ListLongMap!1421)

(assert (=> b!69054 (= lt!30218 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30233 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30233 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30226 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30226 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30214 () Unit!1913)

(assert (=> b!69054 (= lt!30214 (addApplyDifferent!49 lt!30218 lt!30233 (minValue!2074 newMap!16) lt!30226))))

(assert (=> b!69054 (= (apply!73 (+!89 lt!30218 (tuple2!2119 lt!30233 (minValue!2074 newMap!16))) lt!30226) (apply!73 lt!30218 lt!30226))))

(declare-fun lt!30219 () Unit!1913)

(assert (=> b!69054 (= lt!30219 lt!30214)))

(declare-fun lt!30215 () ListLongMap!1421)

(assert (=> b!69054 (= lt!30215 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30231 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30231 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30217 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30217 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30227 () Unit!1913)

(assert (=> b!69054 (= lt!30227 (addApplyDifferent!49 lt!30215 lt!30231 (zeroValue!2074 newMap!16) lt!30217))))

(assert (=> b!69054 (= (apply!73 (+!89 lt!30215 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))) lt!30217) (apply!73 lt!30215 lt!30217))))

(declare-fun lt!30225 () Unit!1913)

(assert (=> b!69054 (= lt!30225 lt!30227)))

(declare-fun lt!30235 () ListLongMap!1421)

(assert (=> b!69054 (= lt!30235 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30220 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30220 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30229 () (_ BitVec 64))

(assert (=> b!69054 (= lt!30229 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69054 (= lt!30223 (addApplyDifferent!49 lt!30235 lt!30220 (minValue!2074 newMap!16) lt!30229))))

(assert (=> b!69054 (= (apply!73 (+!89 lt!30235 (tuple2!2119 lt!30220 (minValue!2074 newMap!16))) lt!30229) (apply!73 lt!30235 lt!30229))))

(declare-fun b!69055 () Bool)

(assert (=> b!69055 (= e!45227 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5895 () Bool)

(assert (=> bm!5895 (= call!5892 call!5896)))

(declare-fun b!69056 () Bool)

(assert (=> b!69056 (= e!45225 (not call!5898))))

(declare-fun b!69057 () Bool)

(assert (=> b!69057 (= e!45228 (= (apply!73 lt!30232 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69058 () Bool)

(assert (=> b!69058 (= e!45226 e!45223)))

(declare-fun res!37053 () Bool)

(assert (=> b!69058 (=> (not res!37053) (not e!45223))))

(assert (=> b!69058 (= res!37053 (contains!720 lt!30232 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69058 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!14833 c!9835) b!69053))

(assert (= (and d!14833 (not c!9835)) b!69042))

(assert (= (and b!69042 c!9839) b!69043))

(assert (= (and b!69042 (not c!9839)) b!69052))

(assert (= (and b!69052 c!9834) b!69041))

(assert (= (and b!69052 (not c!9834)) b!69045))

(assert (= (or b!69041 b!69045) bm!5891))

(assert (= (or b!69043 bm!5891) bm!5889))

(assert (= (or b!69043 b!69041) bm!5895))

(assert (= (or b!69053 bm!5889) bm!5892))

(assert (= (or b!69053 bm!5895) bm!5894))

(assert (= (and d!14833 res!37057) b!69055))

(assert (= (and d!14833 c!9838) b!69054))

(assert (= (and d!14833 (not c!9838)) b!69048))

(assert (= (and d!14833 res!37059) b!69039))

(assert (= (and b!69039 res!37058) b!69051))

(assert (= (and b!69039 (not res!37061)) b!69058))

(assert (= (and b!69058 res!37053) b!69046))

(assert (= (and b!69039 res!37060) b!69038))

(assert (= (and b!69038 c!9836) b!69049))

(assert (= (and b!69038 (not c!9836)) b!69056))

(assert (= (and b!69049 res!37054) b!69057))

(assert (= (or b!69049 b!69056) bm!5893))

(assert (= (and b!69038 res!37055) b!69047))

(assert (= (and b!69047 c!9837) b!69044))

(assert (= (and b!69047 (not c!9837)) b!69040))

(assert (= (and b!69044 res!37056) b!69050))

(assert (= (or b!69044 b!69040) bm!5890))

(declare-fun b_lambda!3097 () Bool)

(assert (=> (not b_lambda!3097) (not b!69046)))

(declare-fun tb!1489 () Bool)

(declare-fun t!5009 () Bool)

(assert (=> (and b!68443 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16)) t!5009) tb!1489))

(declare-fun result!2623 () Bool)

(assert (=> tb!1489 (= result!2623 tp_is_empty!2457)))

(assert (=> b!69046 t!5009))

(declare-fun b_and!4245 () Bool)

(assert (= b_and!4241 (and (=> t!5009 result!2623) b_and!4245)))

(declare-fun t!5011 () Bool)

(declare-fun tb!1491 () Bool)

(assert (=> (and b!68428 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 newMap!16)) t!5011) tb!1491))

(declare-fun result!2625 () Bool)

(assert (= result!2625 result!2623))

(assert (=> b!69046 t!5011))

(declare-fun b_and!4247 () Bool)

(assert (= b_and!4243 (and (=> t!5011 result!2625) b_and!4247)))

(assert (=> b!69058 m!64555))

(assert (=> b!69058 m!64555))

(declare-fun m!64689 () Bool)

(assert (=> b!69058 m!64689))

(declare-fun m!64691 () Bool)

(assert (=> b!69050 m!64691))

(declare-fun m!64693 () Bool)

(assert (=> b!69057 m!64693))

(declare-fun m!64695 () Bool)

(assert (=> bm!5894 m!64695))

(assert (=> d!14833 m!64569))

(declare-fun m!64697 () Bool)

(assert (=> bm!5893 m!64697))

(assert (=> b!69046 m!64555))

(declare-fun m!64699 () Bool)

(assert (=> b!69046 m!64699))

(assert (=> b!69046 m!64555))

(declare-fun m!64701 () Bool)

(assert (=> b!69046 m!64701))

(declare-fun m!64703 () Bool)

(assert (=> b!69046 m!64703))

(assert (=> b!69046 m!64703))

(assert (=> b!69046 m!64699))

(declare-fun m!64705 () Bool)

(assert (=> b!69046 m!64705))

(declare-fun m!64707 () Bool)

(assert (=> b!69053 m!64707))

(assert (=> b!69054 m!64555))

(declare-fun m!64709 () Bool)

(assert (=> b!69054 m!64709))

(declare-fun m!64711 () Bool)

(assert (=> b!69054 m!64711))

(declare-fun m!64713 () Bool)

(assert (=> b!69054 m!64713))

(declare-fun m!64715 () Bool)

(assert (=> b!69054 m!64715))

(declare-fun m!64717 () Bool)

(assert (=> b!69054 m!64717))

(declare-fun m!64719 () Bool)

(assert (=> b!69054 m!64719))

(declare-fun m!64721 () Bool)

(assert (=> b!69054 m!64721))

(declare-fun m!64723 () Bool)

(assert (=> b!69054 m!64723))

(declare-fun m!64725 () Bool)

(assert (=> b!69054 m!64725))

(declare-fun m!64727 () Bool)

(assert (=> b!69054 m!64727))

(declare-fun m!64729 () Bool)

(assert (=> b!69054 m!64729))

(declare-fun m!64731 () Bool)

(assert (=> b!69054 m!64731))

(assert (=> b!69054 m!64721))

(declare-fun m!64733 () Bool)

(assert (=> b!69054 m!64733))

(declare-fun m!64735 () Bool)

(assert (=> b!69054 m!64735))

(assert (=> b!69054 m!64731))

(declare-fun m!64737 () Bool)

(assert (=> b!69054 m!64737))

(assert (=> b!69054 m!64733))

(assert (=> b!69054 m!64725))

(declare-fun m!64739 () Bool)

(assert (=> b!69054 m!64739))

(assert (=> b!69055 m!64555))

(assert (=> b!69055 m!64555))

(assert (=> b!69055 m!64607))

(assert (=> b!69051 m!64555))

(assert (=> b!69051 m!64555))

(assert (=> b!69051 m!64607))

(declare-fun m!64741 () Bool)

(assert (=> bm!5890 m!64741))

(assert (=> bm!5892 m!64717))

(assert (=> bm!5844 d!14833))

(declare-fun b!69059 () Bool)

(declare-fun res!37064 () Bool)

(declare-fun e!45233 () Bool)

(assert (=> b!69059 (=> (not res!37064) (not e!45233))))

(declare-fun e!45238 () Bool)

(assert (=> b!69059 (= res!37064 e!45238)))

(declare-fun c!9842 () Bool)

(assert (=> b!69059 (= c!9842 (not (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69060 () Bool)

(declare-fun res!37069 () Bool)

(assert (=> b!69060 (=> (not res!37069) (not e!45233))))

(declare-fun e!45239 () Bool)

(assert (=> b!69060 (= res!37069 e!45239)))

(declare-fun res!37070 () Bool)

(assert (=> b!69060 (=> res!37070 e!45239)))

(declare-fun e!45243 () Bool)

(assert (=> b!69060 (= res!37070 (not e!45243))))

(declare-fun res!37067 () Bool)

(assert (=> b!69060 (=> (not res!37067) (not e!45243))))

(assert (=> b!69060 (= res!37067 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5896 () Bool)

(declare-fun call!5900 () ListLongMap!1421)

(declare-fun call!5902 () ListLongMap!1421)

(assert (=> bm!5896 (= call!5900 call!5902)))

(declare-fun b!69062 () Bool)

(declare-fun e!45237 () ListLongMap!1421)

(declare-fun call!5899 () ListLongMap!1421)

(assert (=> b!69062 (= e!45237 call!5899)))

(declare-fun b!69063 () Bool)

(declare-fun e!45242 () ListLongMap!1421)

(declare-fun e!45232 () ListLongMap!1421)

(assert (=> b!69063 (= e!45242 e!45232)))

(declare-fun c!9845 () Bool)

(assert (=> b!69063 (= c!9845 (and (not (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5897 () Bool)

(declare-fun call!5904 () Bool)

(declare-fun lt!30254 () ListLongMap!1421)

(assert (=> bm!5897 (= call!5904 (contains!720 lt!30254 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69064 () Bool)

(assert (=> b!69064 (= e!45232 call!5899)))

(declare-fun b!69065 () Bool)

(declare-fun e!45231 () Bool)

(declare-fun e!45235 () Bool)

(assert (=> b!69065 (= e!45231 e!45235)))

(declare-fun res!37065 () Bool)

(assert (=> b!69065 (= res!37065 call!5904)))

(assert (=> b!69065 (=> (not res!37065) (not e!45235))))

(declare-fun b!69066 () Bool)

(declare-fun call!5901 () ListLongMap!1421)

(assert (=> b!69066 (= e!45237 call!5901)))

(declare-fun b!69067 () Bool)

(declare-fun e!45236 () Bool)

(assert (=> b!69067 (= e!45236 (= (apply!73 lt!30254 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69067 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_values!2151 newMap!16))))))

(assert (=> b!69067 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69068 () Bool)

(assert (=> b!69068 (= e!45233 e!45231)))

(declare-fun c!9843 () Bool)

(assert (=> b!69068 (= c!9843 (not (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14835 () Bool)

(assert (=> d!14835 e!45233))

(declare-fun res!37068 () Bool)

(assert (=> d!14835 (=> (not res!37068) (not e!45233))))

(assert (=> d!14835 (= res!37068 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun lt!30246 () ListLongMap!1421)

(assert (=> d!14835 (= lt!30254 lt!30246)))

(declare-fun lt!30250 () Unit!1913)

(declare-fun e!45234 () Unit!1913)

(assert (=> d!14835 (= lt!30250 e!45234)))

(declare-fun c!9844 () Bool)

(declare-fun e!45240 () Bool)

(assert (=> d!14835 (= c!9844 e!45240)))

(declare-fun res!37066 () Bool)

(assert (=> d!14835 (=> (not res!37066) (not e!45240))))

(assert (=> d!14835 (= res!37066 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14835 (= lt!30246 e!45242)))

(declare-fun c!9841 () Bool)

(assert (=> d!14835 (= c!9841 (and (not (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14835 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14835 (= (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30254)))

(declare-fun b!69061 () Bool)

(assert (=> b!69061 (= e!45231 (not call!5904))))

(declare-fun bm!5898 () Bool)

(assert (=> bm!5898 (= call!5901 call!5900)))

(declare-fun bm!5899 () Bool)

(assert (=> bm!5899 (= call!5902 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69069 () Bool)

(declare-fun Unit!1933 () Unit!1913)

(assert (=> b!69069 (= e!45234 Unit!1933)))

(declare-fun b!69070 () Bool)

(declare-fun e!45241 () Bool)

(assert (=> b!69070 (= e!45238 e!45241)))

(declare-fun res!37063 () Bool)

(declare-fun call!5905 () Bool)

(assert (=> b!69070 (= res!37063 call!5905)))

(assert (=> b!69070 (=> (not res!37063) (not e!45241))))

(declare-fun b!69071 () Bool)

(assert (=> b!69071 (= e!45235 (= (apply!73 lt!30254 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))

(declare-fun b!69072 () Bool)

(assert (=> b!69072 (= e!45243 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5900 () Bool)

(assert (=> bm!5900 (= call!5905 (contains!720 lt!30254 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!9840 () Bool)

(declare-fun b!69073 () Bool)

(assert (=> b!69073 (= c!9840 (and (not (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69073 (= e!45232 e!45237)))

(declare-fun call!5903 () ListLongMap!1421)

(declare-fun bm!5901 () Bool)

(assert (=> bm!5901 (= call!5903 (+!89 (ite c!9841 call!5902 (ite c!9845 call!5900 call!5901)) (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(declare-fun b!69074 () Bool)

(assert (=> b!69074 (= e!45242 (+!89 call!5903 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))

(declare-fun b!69075 () Bool)

(declare-fun lt!30245 () Unit!1913)

(assert (=> b!69075 (= e!45234 lt!30245)))

(declare-fun lt!30252 () ListLongMap!1421)

(assert (=> b!69075 (= lt!30252 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30238 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30238 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30244 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30244 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30256 () Unit!1913)

(assert (=> b!69075 (= lt!30256 (addStillContains!49 lt!30252 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) lt!30244))))

(assert (=> b!69075 (contains!720 (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30244)))

(declare-fun lt!30243 () Unit!1913)

(assert (=> b!69075 (= lt!30243 lt!30256)))

(declare-fun lt!30240 () ListLongMap!1421)

(assert (=> b!69075 (= lt!30240 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30255 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30255 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30248 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30248 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30236 () Unit!1913)

(assert (=> b!69075 (= lt!30236 (addApplyDifferent!49 lt!30240 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) lt!30248))))

(assert (=> b!69075 (= (apply!73 (+!89 lt!30240 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30248) (apply!73 lt!30240 lt!30248))))

(declare-fun lt!30241 () Unit!1913)

(assert (=> b!69075 (= lt!30241 lt!30236)))

(declare-fun lt!30237 () ListLongMap!1421)

(assert (=> b!69075 (= lt!30237 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30253 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30253 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30239 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30239 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30249 () Unit!1913)

(assert (=> b!69075 (= lt!30249 (addApplyDifferent!49 lt!30237 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) lt!30239))))

(assert (=> b!69075 (= (apply!73 (+!89 lt!30237 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30239) (apply!73 lt!30237 lt!30239))))

(declare-fun lt!30247 () Unit!1913)

(assert (=> b!69075 (= lt!30247 lt!30249)))

(declare-fun lt!30257 () ListLongMap!1421)

(assert (=> b!69075 (= lt!30257 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30242 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30242 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30251 () (_ BitVec 64))

(assert (=> b!69075 (= lt!30251 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69075 (= lt!30245 (addApplyDifferent!49 lt!30257 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) lt!30251))))

(assert (=> b!69075 (= (apply!73 (+!89 lt!30257 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30251) (apply!73 lt!30257 lt!30251))))

(declare-fun b!69076 () Bool)

(assert (=> b!69076 (= e!45240 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5902 () Bool)

(assert (=> bm!5902 (= call!5899 call!5903)))

(declare-fun b!69077 () Bool)

(assert (=> b!69077 (= e!45238 (not call!5905))))

(declare-fun b!69078 () Bool)

(assert (=> b!69078 (= e!45241 (= (apply!73 lt!30254 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))

(declare-fun b!69079 () Bool)

(assert (=> b!69079 (= e!45239 e!45236)))

(declare-fun res!37062 () Bool)

(assert (=> b!69079 (=> (not res!37062) (not e!45236))))

(assert (=> b!69079 (= res!37062 (contains!720 lt!30254 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69079 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!14835 c!9841) b!69074))

(assert (= (and d!14835 (not c!9841)) b!69063))

(assert (= (and b!69063 c!9845) b!69064))

(assert (= (and b!69063 (not c!9845)) b!69073))

(assert (= (and b!69073 c!9840) b!69062))

(assert (= (and b!69073 (not c!9840)) b!69066))

(assert (= (or b!69062 b!69066) bm!5898))

(assert (= (or b!69064 bm!5898) bm!5896))

(assert (= (or b!69064 b!69062) bm!5902))

(assert (= (or b!69074 bm!5896) bm!5899))

(assert (= (or b!69074 bm!5902) bm!5901))

(assert (= (and d!14835 res!37066) b!69076))

(assert (= (and d!14835 c!9844) b!69075))

(assert (= (and d!14835 (not c!9844)) b!69069))

(assert (= (and d!14835 res!37068) b!69060))

(assert (= (and b!69060 res!37067) b!69072))

(assert (= (and b!69060 (not res!37070)) b!69079))

(assert (= (and b!69079 res!37062) b!69067))

(assert (= (and b!69060 res!37069) b!69059))

(assert (= (and b!69059 c!9842) b!69070))

(assert (= (and b!69059 (not c!9842)) b!69077))

(assert (= (and b!69070 res!37063) b!69078))

(assert (= (or b!69070 b!69077) bm!5900))

(assert (= (and b!69059 res!37064) b!69068))

(assert (= (and b!69068 c!9843) b!69065))

(assert (= (and b!69068 (not c!9843)) b!69061))

(assert (= (and b!69065 res!37065) b!69071))

(assert (= (or b!69065 b!69061) bm!5897))

(declare-fun b_lambda!3099 () Bool)

(assert (=> (not b_lambda!3099) (not b!69067)))

(assert (=> b!69067 t!5009))

(declare-fun b_and!4249 () Bool)

(assert (= b_and!4245 (and (=> t!5009 result!2623) b_and!4249)))

(assert (=> b!69067 t!5011))

(declare-fun b_and!4251 () Bool)

(assert (= b_and!4247 (and (=> t!5011 result!2625) b_and!4251)))

(assert (=> b!69079 m!64555))

(assert (=> b!69079 m!64555))

(declare-fun m!64743 () Bool)

(assert (=> b!69079 m!64743))

(declare-fun m!64745 () Bool)

(assert (=> b!69071 m!64745))

(declare-fun m!64747 () Bool)

(assert (=> b!69078 m!64747))

(declare-fun m!64749 () Bool)

(assert (=> bm!5901 m!64749))

(assert (=> d!14835 m!64569))

(declare-fun m!64751 () Bool)

(assert (=> bm!5900 m!64751))

(assert (=> b!69067 m!64555))

(assert (=> b!69067 m!64699))

(assert (=> b!69067 m!64555))

(declare-fun m!64753 () Bool)

(assert (=> b!69067 m!64753))

(declare-fun m!64755 () Bool)

(assert (=> b!69067 m!64755))

(assert (=> b!69067 m!64755))

(assert (=> b!69067 m!64699))

(declare-fun m!64757 () Bool)

(assert (=> b!69067 m!64757))

(declare-fun m!64759 () Bool)

(assert (=> b!69074 m!64759))

(assert (=> b!69075 m!64555))

(declare-fun m!64761 () Bool)

(assert (=> b!69075 m!64761))

(declare-fun m!64763 () Bool)

(assert (=> b!69075 m!64763))

(declare-fun m!64765 () Bool)

(assert (=> b!69075 m!64765))

(declare-fun m!64767 () Bool)

(assert (=> b!69075 m!64767))

(declare-fun m!64769 () Bool)

(assert (=> b!69075 m!64769))

(declare-fun m!64771 () Bool)

(assert (=> b!69075 m!64771))

(declare-fun m!64773 () Bool)

(assert (=> b!69075 m!64773))

(declare-fun m!64775 () Bool)

(assert (=> b!69075 m!64775))

(declare-fun m!64777 () Bool)

(assert (=> b!69075 m!64777))

(declare-fun m!64779 () Bool)

(assert (=> b!69075 m!64779))

(declare-fun m!64781 () Bool)

(assert (=> b!69075 m!64781))

(declare-fun m!64783 () Bool)

(assert (=> b!69075 m!64783))

(assert (=> b!69075 m!64773))

(declare-fun m!64785 () Bool)

(assert (=> b!69075 m!64785))

(declare-fun m!64787 () Bool)

(assert (=> b!69075 m!64787))

(assert (=> b!69075 m!64783))

(declare-fun m!64789 () Bool)

(assert (=> b!69075 m!64789))

(assert (=> b!69075 m!64785))

(assert (=> b!69075 m!64777))

(declare-fun m!64791 () Bool)

(assert (=> b!69075 m!64791))

(assert (=> b!69076 m!64555))

(assert (=> b!69076 m!64555))

(assert (=> b!69076 m!64607))

(assert (=> b!69072 m!64555))

(assert (=> b!69072 m!64555))

(assert (=> b!69072 m!64607))

(declare-fun m!64793 () Bool)

(assert (=> bm!5897 m!64793))

(assert (=> bm!5899 m!64769))

(assert (=> bm!5838 d!14835))

(assert (=> b!68624 d!14793))

(assert (=> bm!5856 d!14795))

(declare-fun d!14837 () Bool)

(declare-fun lt!30260 () Bool)

(declare-fun content!73 (List!1495) (InoxSet (_ BitVec 64)))

(assert (=> d!14837 (= lt!30260 (select (content!73 Nil!1492) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun e!45248 () Bool)

(assert (=> d!14837 (= lt!30260 e!45248)))

(declare-fun res!37076 () Bool)

(assert (=> d!14837 (=> (not res!37076) (not e!45248))))

(assert (=> d!14837 (= res!37076 ((_ is Cons!1491) Nil!1492))))

(assert (=> d!14837 (= (contains!722 Nil!1492 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30260)))

(declare-fun b!69084 () Bool)

(declare-fun e!45249 () Bool)

(assert (=> b!69084 (= e!45248 e!45249)))

(declare-fun res!37075 () Bool)

(assert (=> b!69084 (=> res!37075 e!45249)))

(assert (=> b!69084 (= res!37075 (= (h!2076 Nil!1492) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!69085 () Bool)

(assert (=> b!69085 (= e!45249 (contains!722 (t!5002 Nil!1492) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!14837 res!37076) b!69084))

(assert (= (and b!69084 (not res!37075)) b!69085))

(declare-fun m!64795 () Bool)

(assert (=> d!14837 m!64795))

(assert (=> d!14837 m!64043))

(declare-fun m!64797 () Bool)

(assert (=> d!14837 m!64797))

(assert (=> b!69085 m!64043))

(declare-fun m!64799 () Bool)

(assert (=> b!69085 m!64799))

(assert (=> b!68650 d!14837))

(declare-fun d!14839 () Bool)

(declare-fun e!45250 () Bool)

(assert (=> d!14839 e!45250))

(declare-fun res!37077 () Bool)

(assert (=> d!14839 (=> res!37077 e!45250)))

(declare-fun lt!30263 () Bool)

(assert (=> d!14839 (= res!37077 (not lt!30263))))

(declare-fun lt!30264 () Bool)

(assert (=> d!14839 (= lt!30263 lt!30264)))

(declare-fun lt!30262 () Unit!1913)

(declare-fun e!45251 () Unit!1913)

(assert (=> d!14839 (= lt!30262 e!45251)))

(declare-fun c!9846 () Bool)

(assert (=> d!14839 (= c!9846 lt!30264)))

(assert (=> d!14839 (= lt!30264 (containsKey!134 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14839 (= (contains!720 lt!29926 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30263)))

(declare-fun b!69086 () Bool)

(declare-fun lt!30261 () Unit!1913)

(assert (=> b!69086 (= e!45251 lt!30261)))

(assert (=> b!69086 (= lt!30261 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69086 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69087 () Bool)

(declare-fun Unit!1934 () Unit!1913)

(assert (=> b!69087 (= e!45251 Unit!1934)))

(declare-fun b!69088 () Bool)

(assert (=> b!69088 (= e!45250 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14839 c!9846) b!69086))

(assert (= (and d!14839 (not c!9846)) b!69087))

(assert (= (and d!14839 (not res!37077)) b!69088))

(declare-fun m!64801 () Bool)

(assert (=> d!14839 m!64801))

(declare-fun m!64803 () Bool)

(assert (=> b!69086 m!64803))

(declare-fun m!64805 () Bool)

(assert (=> b!69086 m!64805))

(assert (=> b!69086 m!64805))

(declare-fun m!64807 () Bool)

(assert (=> b!69086 m!64807))

(assert (=> b!69088 m!64805))

(assert (=> b!69088 m!64805))

(assert (=> b!69088 m!64807))

(assert (=> bm!5776 d!14839))

(declare-fun d!14841 () Bool)

(declare-fun e!45252 () Bool)

(assert (=> d!14841 e!45252))

(declare-fun res!37078 () Bool)

(assert (=> d!14841 (=> res!37078 e!45252)))

(declare-fun lt!30267 () Bool)

(assert (=> d!14841 (= res!37078 (not lt!30267))))

(declare-fun lt!30268 () Bool)

(assert (=> d!14841 (= lt!30267 lt!30268)))

(declare-fun lt!30266 () Unit!1913)

(declare-fun e!45253 () Unit!1913)

(assert (=> d!14841 (= lt!30266 e!45253)))

(declare-fun c!9847 () Bool)

(assert (=> d!14841 (= c!9847 lt!30268)))

(assert (=> d!14841 (= lt!30268 (containsKey!134 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!14841 (= (contains!720 lt!29926 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30267)))

(declare-fun b!69089 () Bool)

(declare-fun lt!30265 () Unit!1913)

(assert (=> b!69089 (= e!45253 lt!30265)))

(assert (=> b!69089 (= lt!30265 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!69089 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69090 () Bool)

(declare-fun Unit!1935 () Unit!1913)

(assert (=> b!69090 (= e!45253 Unit!1935)))

(declare-fun b!69091 () Bool)

(assert (=> b!69091 (= e!45252 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!14841 c!9847) b!69089))

(assert (= (and d!14841 (not c!9847)) b!69090))

(assert (= (and d!14841 (not res!37078)) b!69091))

(assert (=> d!14841 m!64159))

(declare-fun m!64809 () Bool)

(assert (=> d!14841 m!64809))

(assert (=> b!69089 m!64159))

(declare-fun m!64811 () Bool)

(assert (=> b!69089 m!64811))

(assert (=> b!69089 m!64159))

(declare-fun m!64813 () Bool)

(assert (=> b!69089 m!64813))

(assert (=> b!69089 m!64813))

(declare-fun m!64815 () Bool)

(assert (=> b!69089 m!64815))

(assert (=> b!69091 m!64159))

(assert (=> b!69091 m!64813))

(assert (=> b!69091 m!64813))

(assert (=> b!69091 m!64815))

(assert (=> b!68627 d!14841))

(declare-fun d!14843 () Bool)

(declare-fun lt!30269 () Bool)

(assert (=> d!14843 (= lt!30269 (select (content!72 (toList!726 lt!29862)) lt!29777))))

(declare-fun e!45254 () Bool)

(assert (=> d!14843 (= lt!30269 e!45254)))

(declare-fun res!37080 () Bool)

(assert (=> d!14843 (=> (not res!37080) (not e!45254))))

(assert (=> d!14843 (= res!37080 ((_ is Cons!1490) (toList!726 lt!29862)))))

(assert (=> d!14843 (= (contains!721 (toList!726 lt!29862) lt!29777) lt!30269)))

(declare-fun b!69092 () Bool)

(declare-fun e!45255 () Bool)

(assert (=> b!69092 (= e!45254 e!45255)))

(declare-fun res!37079 () Bool)

(assert (=> b!69092 (=> res!37079 e!45255)))

(assert (=> b!69092 (= res!37079 (= (h!2075 (toList!726 lt!29862)) lt!29777))))

(declare-fun b!69093 () Bool)

(assert (=> b!69093 (= e!45255 (contains!721 (t!5001 (toList!726 lt!29862)) lt!29777))))

(assert (= (and d!14843 res!37080) b!69092))

(assert (= (and b!69092 (not res!37079)) b!69093))

(declare-fun m!64817 () Bool)

(assert (=> d!14843 m!64817))

(declare-fun m!64819 () Bool)

(assert (=> d!14843 m!64819))

(declare-fun m!64821 () Bool)

(assert (=> b!69093 m!64821))

(assert (=> b!68555 d!14843))

(declare-fun d!14845 () Bool)

(declare-fun e!45256 () Bool)

(assert (=> d!14845 e!45256))

(declare-fun res!37081 () Bool)

(assert (=> d!14845 (=> res!37081 e!45256)))

(declare-fun lt!30272 () Bool)

(assert (=> d!14845 (= res!37081 (not lt!30272))))

(declare-fun lt!30273 () Bool)

(assert (=> d!14845 (= lt!30272 lt!30273)))

(declare-fun lt!30271 () Unit!1913)

(declare-fun e!45257 () Unit!1913)

(assert (=> d!14845 (= lt!30271 e!45257)))

(declare-fun c!9848 () Bool)

(assert (=> d!14845 (= c!9848 lt!30273)))

(assert (=> d!14845 (= lt!30273 (containsKey!134 (toList!726 lt!29847) (_1!1069 lt!29777)))))

(assert (=> d!14845 (= (contains!720 lt!29847 (_1!1069 lt!29777)) lt!30272)))

(declare-fun b!69094 () Bool)

(declare-fun lt!30270 () Unit!1913)

(assert (=> b!69094 (= e!45257 lt!30270)))

(assert (=> b!69094 (= lt!30270 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29847) (_1!1069 lt!29777)))))

(assert (=> b!69094 (isDefined!84 (getValueByKey!130 (toList!726 lt!29847) (_1!1069 lt!29777)))))

(declare-fun b!69095 () Bool)

(declare-fun Unit!1936 () Unit!1913)

(assert (=> b!69095 (= e!45257 Unit!1936)))

(declare-fun b!69096 () Bool)

(assert (=> b!69096 (= e!45256 (isDefined!84 (getValueByKey!130 (toList!726 lt!29847) (_1!1069 lt!29777))))))

(assert (= (and d!14845 c!9848) b!69094))

(assert (= (and d!14845 (not c!9848)) b!69095))

(assert (= (and d!14845 (not res!37081)) b!69096))

(declare-fun m!64823 () Bool)

(assert (=> d!14845 m!64823))

(declare-fun m!64825 () Bool)

(assert (=> b!69094 m!64825))

(assert (=> b!69094 m!64193))

(assert (=> b!69094 m!64193))

(declare-fun m!64827 () Bool)

(assert (=> b!69094 m!64827))

(assert (=> b!69096 m!64193))

(assert (=> b!69096 m!64193))

(assert (=> b!69096 m!64827))

(assert (=> d!14715 d!14845))

(declare-fun b!69100 () Bool)

(declare-fun e!45259 () Option!136)

(assert (=> b!69100 (= e!45259 None!134)))

(declare-fun d!14847 () Bool)

(declare-fun c!9849 () Bool)

(assert (=> d!14847 (= c!9849 (and ((_ is Cons!1490) lt!29848) (= (_1!1069 (h!2075 lt!29848)) (_1!1069 lt!29777))))))

(declare-fun e!45258 () Option!136)

(assert (=> d!14847 (= (getValueByKey!130 lt!29848 (_1!1069 lt!29777)) e!45258)))

(declare-fun b!69097 () Bool)

(assert (=> b!69097 (= e!45258 (Some!135 (_2!1069 (h!2075 lt!29848))))))

(declare-fun b!69099 () Bool)

(assert (=> b!69099 (= e!45259 (getValueByKey!130 (t!5001 lt!29848) (_1!1069 lt!29777)))))

(declare-fun b!69098 () Bool)

(assert (=> b!69098 (= e!45258 e!45259)))

(declare-fun c!9850 () Bool)

(assert (=> b!69098 (= c!9850 (and ((_ is Cons!1490) lt!29848) (not (= (_1!1069 (h!2075 lt!29848)) (_1!1069 lt!29777)))))))

(assert (= (and d!14847 c!9849) b!69097))

(assert (= (and d!14847 (not c!9849)) b!69098))

(assert (= (and b!69098 c!9850) b!69099))

(assert (= (and b!69098 (not c!9850)) b!69100))

(declare-fun m!64829 () Bool)

(assert (=> b!69099 m!64829))

(assert (=> d!14715 d!14847))

(declare-fun d!14849 () Bool)

(assert (=> d!14849 (= (getValueByKey!130 lt!29848 (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777)))))

(declare-fun lt!30274 () Unit!1913)

(assert (=> d!14849 (= lt!30274 (choose!390 lt!29848 (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(declare-fun e!45260 () Bool)

(assert (=> d!14849 e!45260))

(declare-fun res!37082 () Bool)

(assert (=> d!14849 (=> (not res!37082) (not e!45260))))

(assert (=> d!14849 (= res!37082 (isStrictlySorted!285 lt!29848))))

(assert (=> d!14849 (= (lemmaContainsTupThenGetReturnValue!49 lt!29848 (_1!1069 lt!29777) (_2!1069 lt!29777)) lt!30274)))

(declare-fun b!69101 () Bool)

(declare-fun res!37083 () Bool)

(assert (=> b!69101 (=> (not res!37083) (not e!45260))))

(assert (=> b!69101 (= res!37083 (containsKey!134 lt!29848 (_1!1069 lt!29777)))))

(declare-fun b!69102 () Bool)

(assert (=> b!69102 (= e!45260 (contains!721 lt!29848 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(assert (= (and d!14849 res!37082) b!69101))

(assert (= (and b!69101 res!37083) b!69102))

(assert (=> d!14849 m!64187))

(declare-fun m!64831 () Bool)

(assert (=> d!14849 m!64831))

(declare-fun m!64833 () Bool)

(assert (=> d!14849 m!64833))

(declare-fun m!64835 () Bool)

(assert (=> b!69101 m!64835))

(declare-fun m!64837 () Bool)

(assert (=> b!69102 m!64837))

(assert (=> d!14715 d!14849))

(declare-fun bm!5903 () Bool)

(declare-fun call!5906 () List!1494)

(declare-fun call!5908 () List!1494)

(assert (=> bm!5903 (= call!5906 call!5908)))

(declare-fun b!69103 () Bool)

(declare-fun e!45264 () List!1494)

(declare-fun call!5907 () List!1494)

(assert (=> b!69103 (= e!45264 call!5907)))

(declare-fun b!69104 () Bool)

(declare-fun e!45263 () List!1494)

(assert (=> b!69104 (= e!45263 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29768)) (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(declare-fun b!69106 () Bool)

(declare-fun res!37085 () Bool)

(declare-fun e!45262 () Bool)

(assert (=> b!69106 (=> (not res!37085) (not e!45262))))

(declare-fun lt!30275 () List!1494)

(assert (=> b!69106 (= res!37085 (containsKey!134 lt!30275 (_1!1069 lt!29777)))))

(declare-fun b!69107 () Bool)

(declare-fun e!45261 () List!1494)

(declare-fun e!45265 () List!1494)

(assert (=> b!69107 (= e!45261 e!45265)))

(declare-fun c!9851 () Bool)

(assert (=> b!69107 (= c!9851 (and ((_ is Cons!1490) (toList!726 lt!29768)) (= (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 lt!29777))))))

(declare-fun c!9852 () Bool)

(declare-fun b!69108 () Bool)

(assert (=> b!69108 (= e!45263 (ite c!9851 (t!5001 (toList!726 lt!29768)) (ite c!9852 (Cons!1490 (h!2075 (toList!726 lt!29768)) (t!5001 (toList!726 lt!29768))) Nil!1491)))))

(declare-fun b!69109 () Bool)

(assert (=> b!69109 (= e!45264 call!5907)))

(declare-fun b!69110 () Bool)

(assert (=> b!69110 (= e!45265 call!5906)))

(declare-fun b!69111 () Bool)

(assert (=> b!69111 (= e!45261 call!5908)))

(declare-fun bm!5904 () Bool)

(declare-fun c!9853 () Bool)

(assert (=> bm!5904 (= call!5908 ($colon$colon!63 e!45263 (ite c!9853 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777)))))))

(declare-fun c!9854 () Bool)

(assert (=> bm!5904 (= c!9854 c!9853)))

(declare-fun b!69112 () Bool)

(assert (=> b!69112 (= e!45262 (contains!721 lt!30275 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun bm!5905 () Bool)

(assert (=> bm!5905 (= call!5907 call!5906)))

(declare-fun b!69105 () Bool)

(assert (=> b!69105 (= c!9852 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 lt!29777))))))

(assert (=> b!69105 (= e!45265 e!45264)))

(declare-fun d!14851 () Bool)

(assert (=> d!14851 e!45262))

(declare-fun res!37084 () Bool)

(assert (=> d!14851 (=> (not res!37084) (not e!45262))))

(assert (=> d!14851 (= res!37084 (isStrictlySorted!285 lt!30275))))

(assert (=> d!14851 (= lt!30275 e!45261)))

(assert (=> d!14851 (= c!9853 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 lt!29777))))))

(assert (=> d!14851 (isStrictlySorted!285 (toList!726 lt!29768))))

(assert (=> d!14851 (= (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 lt!29777) (_2!1069 lt!29777)) lt!30275)))

(assert (= (and d!14851 c!9853) b!69111))

(assert (= (and d!14851 (not c!9853)) b!69107))

(assert (= (and b!69107 c!9851) b!69110))

(assert (= (and b!69107 (not c!9851)) b!69105))

(assert (= (and b!69105 c!9852) b!69109))

(assert (= (and b!69105 (not c!9852)) b!69103))

(assert (= (or b!69109 b!69103) bm!5905))

(assert (= (or b!69110 bm!5905) bm!5903))

(assert (= (or b!69111 bm!5903) bm!5904))

(assert (= (and bm!5904 c!9854) b!69104))

(assert (= (and bm!5904 (not c!9854)) b!69108))

(assert (= (and d!14851 res!37084) b!69106))

(assert (= (and b!69106 res!37085) b!69112))

(declare-fun m!64839 () Bool)

(assert (=> b!69104 m!64839))

(declare-fun m!64841 () Bool)

(assert (=> d!14851 m!64841))

(assert (=> d!14851 m!64453))

(declare-fun m!64843 () Bool)

(assert (=> b!69106 m!64843))

(declare-fun m!64845 () Bool)

(assert (=> bm!5904 m!64845))

(declare-fun m!64847 () Bool)

(assert (=> b!69112 m!64847))

(assert (=> d!14715 d!14851))

(declare-fun b!69113 () Bool)

(declare-fun e!45266 () Bool)

(assert (=> b!69113 (= e!45266 (contains!722 (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69114 () Bool)

(declare-fun e!45267 () Bool)

(declare-fun call!5909 () Bool)

(assert (=> b!69114 (= e!45267 call!5909)))

(declare-fun bm!5906 () Bool)

(declare-fun c!9855 () Bool)

(assert (=> bm!5906 (= call!5909 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9855 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492))))))

(declare-fun d!14853 () Bool)

(declare-fun res!37088 () Bool)

(declare-fun e!45269 () Bool)

(assert (=> d!14853 (=> res!37088 e!45269)))

(assert (=> d!14853 (= res!37088 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!14853 (= (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) e!45269)))

(declare-fun b!69115 () Bool)

(declare-fun e!45268 () Bool)

(assert (=> b!69115 (= e!45268 e!45267)))

(assert (=> b!69115 (= c!9855 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69116 () Bool)

(assert (=> b!69116 (= e!45267 call!5909)))

(declare-fun b!69117 () Bool)

(assert (=> b!69117 (= e!45269 e!45268)))

(declare-fun res!37087 () Bool)

(assert (=> b!69117 (=> (not res!37087) (not e!45268))))

(assert (=> b!69117 (= res!37087 (not e!45266))))

(declare-fun res!37086 () Bool)

(assert (=> b!69117 (=> (not res!37086) (not e!45266))))

(assert (=> b!69117 (= res!37086 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!14853 (not res!37088)) b!69117))

(assert (= (and b!69117 res!37086) b!69113))

(assert (= (and b!69117 res!37087) b!69115))

(assert (= (and b!69115 c!9855) b!69116))

(assert (= (and b!69115 (not c!9855)) b!69114))

(assert (= (or b!69116 b!69114) bm!5906))

(declare-fun m!64849 () Bool)

(assert (=> b!69113 m!64849))

(assert (=> b!69113 m!64849))

(declare-fun m!64851 () Bool)

(assert (=> b!69113 m!64851))

(assert (=> bm!5906 m!64849))

(declare-fun m!64853 () Bool)

(assert (=> bm!5906 m!64853))

(assert (=> b!69115 m!64849))

(assert (=> b!69115 m!64849))

(declare-fun m!64855 () Bool)

(assert (=> b!69115 m!64855))

(assert (=> b!69117 m!64849))

(assert (=> b!69117 m!64849))

(assert (=> b!69117 m!64855))

(assert (=> bm!5784 d!14853))

(declare-fun d!14855 () Bool)

(declare-fun e!45272 () Bool)

(assert (=> d!14855 e!45272))

(declare-fun res!37093 () Bool)

(assert (=> d!14855 (=> (not res!37093) (not e!45272))))

(declare-fun lt!30280 () SeekEntryResult!244)

(assert (=> d!14855 (= res!37093 ((_ is Found!244) lt!30280))))

(assert (=> d!14855 (= lt!30280 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun lt!30281 () Unit!1913)

(declare-fun choose!394 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1913)

(assert (=> d!14855 (= lt!30281 (choose!394 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14855 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14855 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) lt!30281)))

(declare-fun b!69122 () Bool)

(declare-fun res!37094 () Bool)

(assert (=> b!69122 (=> (not res!37094) (not e!45272))))

(assert (=> b!69122 (= res!37094 (inRange!0 (index!3106 lt!30280) (mask!6113 newMap!16)))))

(declare-fun b!69123 () Bool)

(assert (=> b!69123 (= e!45272 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30280)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> b!69123 (and (bvsge (index!3106 lt!30280) #b00000000000000000000000000000000) (bvslt (index!3106 lt!30280) (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!14855 res!37093) b!69122))

(assert (= (and b!69122 res!37094) b!69123))

(assert (=> d!14855 m!64043))

(assert (=> d!14855 m!64341))

(assert (=> d!14855 m!64043))

(declare-fun m!64857 () Bool)

(assert (=> d!14855 m!64857))

(assert (=> d!14855 m!64569))

(declare-fun m!64859 () Bool)

(assert (=> b!69122 m!64859))

(declare-fun m!64861 () Bool)

(assert (=> b!69123 m!64861))

(assert (=> bm!5833 d!14855))

(declare-fun d!14857 () Bool)

(assert (=> d!14857 (isDefined!84 (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun lt!30284 () Unit!1913)

(declare-fun choose!395 (List!1494 (_ BitVec 64)) Unit!1913)

(assert (=> d!14857 (= lt!30284 (choose!395 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun e!45275 () Bool)

(assert (=> d!14857 e!45275))

(declare-fun res!37097 () Bool)

(assert (=> d!14857 (=> (not res!37097) (not e!45275))))

(assert (=> d!14857 (= res!37097 (isStrictlySorted!285 (toList!726 lt!29772)))))

(assert (=> d!14857 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30284)))

(declare-fun b!69126 () Bool)

(assert (=> b!69126 (= e!45275 (containsKey!134 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!14857 res!37097) b!69126))

(assert (=> d!14857 m!64043))

(assert (=> d!14857 m!64317))

(assert (=> d!14857 m!64317))

(assert (=> d!14857 m!64319))

(assert (=> d!14857 m!64043))

(declare-fun m!64863 () Bool)

(assert (=> d!14857 m!64863))

(declare-fun m!64865 () Bool)

(assert (=> d!14857 m!64865))

(assert (=> b!69126 m!64043))

(assert (=> b!69126 m!64313))

(assert (=> b!68661 d!14857))

(declare-fun d!14859 () Bool)

(declare-fun isEmpty!316 (Option!136) Bool)

(assert (=> d!14859 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(declare-fun bs!2943 () Bool)

(assert (= bs!2943 d!14859))

(assert (=> bs!2943 m!64317))

(declare-fun m!64867 () Bool)

(assert (=> bs!2943 m!64867))

(assert (=> b!68661 d!14859))

(declare-fun b!69130 () Bool)

(declare-fun e!45277 () Option!136)

(assert (=> b!69130 (= e!45277 None!134)))

(declare-fun d!14861 () Bool)

(declare-fun c!9856 () Bool)

(assert (=> d!14861 (= c!9856 (and ((_ is Cons!1490) (toList!726 lt!29772)) (= (_1!1069 (h!2075 (toList!726 lt!29772))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun e!45276 () Option!136)

(assert (=> d!14861 (= (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45276)))

(declare-fun b!69127 () Bool)

(assert (=> b!69127 (= e!45276 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29772)))))))

(declare-fun b!69129 () Bool)

(assert (=> b!69129 (= e!45277 (getValueByKey!130 (t!5001 (toList!726 lt!29772)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!69128 () Bool)

(assert (=> b!69128 (= e!45276 e!45277)))

(declare-fun c!9857 () Bool)

(assert (=> b!69128 (= c!9857 (and ((_ is Cons!1490) (toList!726 lt!29772)) (not (= (_1!1069 (h!2075 (toList!726 lt!29772))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(assert (= (and d!14861 c!9856) b!69127))

(assert (= (and d!14861 (not c!9856)) b!69128))

(assert (= (and b!69128 c!9857) b!69129))

(assert (= (and b!69128 (not c!9857)) b!69130))

(assert (=> b!69129 m!64043))

(declare-fun m!64869 () Bool)

(assert (=> b!69129 m!64869))

(assert (=> b!68661 d!14861))

(declare-fun d!14863 () Bool)

(assert (=> d!14863 (= (apply!73 lt!29926 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1137 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2944 () Bool)

(assert (= bs!2944 d!14863))

(assert (=> bs!2944 m!64159))

(assert (=> bs!2944 m!64813))

(assert (=> bs!2944 m!64813))

(declare-fun m!64871 () Bool)

(assert (=> bs!2944 m!64871))

(assert (=> b!68615 d!14863))

(assert (=> b!68615 d!14813))

(declare-fun b!69131 () Bool)

(declare-fun res!37100 () Bool)

(declare-fun e!45280 () Bool)

(assert (=> b!69131 (=> (not res!37100) (not e!45280))))

(declare-fun e!45285 () Bool)

(assert (=> b!69131 (= res!37100 e!45285)))

(declare-fun c!9860 () Bool)

(assert (=> b!69131 (= c!9860 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69132 () Bool)

(declare-fun res!37105 () Bool)

(assert (=> b!69132 (=> (not res!37105) (not e!45280))))

(declare-fun e!45286 () Bool)

(assert (=> b!69132 (= res!37105 e!45286)))

(declare-fun res!37106 () Bool)

(assert (=> b!69132 (=> res!37106 e!45286)))

(declare-fun e!45290 () Bool)

(assert (=> b!69132 (= res!37106 (not e!45290))))

(declare-fun res!37103 () Bool)

(assert (=> b!69132 (=> (not res!37103) (not e!45290))))

(assert (=> b!69132 (= res!37103 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5907 () Bool)

(declare-fun call!5911 () ListLongMap!1421)

(declare-fun call!5913 () ListLongMap!1421)

(assert (=> bm!5907 (= call!5911 call!5913)))

(declare-fun b!69134 () Bool)

(declare-fun e!45284 () ListLongMap!1421)

(declare-fun call!5910 () ListLongMap!1421)

(assert (=> b!69134 (= e!45284 call!5910)))

(declare-fun b!69135 () Bool)

(declare-fun e!45289 () ListLongMap!1421)

(declare-fun e!45279 () ListLongMap!1421)

(assert (=> b!69135 (= e!45289 e!45279)))

(declare-fun c!9863 () Bool)

(assert (=> b!69135 (= c!9863 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5908 () Bool)

(declare-fun call!5915 () Bool)

(declare-fun lt!30303 () ListLongMap!1421)

(assert (=> bm!5908 (= call!5915 (contains!720 lt!30303 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69136 () Bool)

(assert (=> b!69136 (= e!45279 call!5910)))

(declare-fun b!69137 () Bool)

(declare-fun e!45278 () Bool)

(declare-fun e!45282 () Bool)

(assert (=> b!69137 (= e!45278 e!45282)))

(declare-fun res!37101 () Bool)

(assert (=> b!69137 (= res!37101 call!5915)))

(assert (=> b!69137 (=> (not res!37101) (not e!45282))))

(declare-fun b!69138 () Bool)

(declare-fun call!5912 () ListLongMap!1421)

(assert (=> b!69138 (= e!45284 call!5912)))

(declare-fun b!69139 () Bool)

(declare-fun e!45283 () Bool)

(assert (=> b!69139 (= e!45283 (= (apply!73 lt!30303 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69139 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_values!2151 newMap!16))))))

(assert (=> b!69139 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69140 () Bool)

(assert (=> b!69140 (= e!45280 e!45278)))

(declare-fun c!9861 () Bool)

(assert (=> b!69140 (= c!9861 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14865 () Bool)

(assert (=> d!14865 e!45280))

(declare-fun res!37104 () Bool)

(assert (=> d!14865 (=> (not res!37104) (not e!45280))))

(assert (=> d!14865 (= res!37104 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun lt!30295 () ListLongMap!1421)

(assert (=> d!14865 (= lt!30303 lt!30295)))

(declare-fun lt!30299 () Unit!1913)

(declare-fun e!45281 () Unit!1913)

(assert (=> d!14865 (= lt!30299 e!45281)))

(declare-fun c!9862 () Bool)

(declare-fun e!45287 () Bool)

(assert (=> d!14865 (= c!9862 e!45287)))

(declare-fun res!37102 () Bool)

(assert (=> d!14865 (=> (not res!37102) (not e!45287))))

(assert (=> d!14865 (= res!37102 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14865 (= lt!30295 e!45289)))

(declare-fun c!9859 () Bool)

(assert (=> d!14865 (= c!9859 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14865 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14865 (= (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30303)))

(declare-fun b!69133 () Bool)

(assert (=> b!69133 (= e!45278 (not call!5915))))

(declare-fun bm!5909 () Bool)

(assert (=> bm!5909 (= call!5912 call!5911)))

(declare-fun bm!5910 () Bool)

(assert (=> bm!5910 (= call!5913 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69141 () Bool)

(declare-fun Unit!1937 () Unit!1913)

(assert (=> b!69141 (= e!45281 Unit!1937)))

(declare-fun b!69142 () Bool)

(declare-fun e!45288 () Bool)

(assert (=> b!69142 (= e!45285 e!45288)))

(declare-fun res!37099 () Bool)

(declare-fun call!5916 () Bool)

(assert (=> b!69142 (= res!37099 call!5916)))

(assert (=> b!69142 (=> (not res!37099) (not e!45288))))

(declare-fun b!69143 () Bool)

(assert (=> b!69143 (= e!45282 (= (apply!73 lt!30303 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69144 () Bool)

(assert (=> b!69144 (= e!45290 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5911 () Bool)

(assert (=> bm!5911 (= call!5916 (contains!720 lt!30303 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69145 () Bool)

(declare-fun c!9858 () Bool)

(assert (=> b!69145 (= c!9858 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69145 (= e!45279 e!45284)))

(declare-fun bm!5912 () Bool)

(declare-fun call!5914 () ListLongMap!1421)

(assert (=> bm!5912 (= call!5914 (+!89 (ite c!9859 call!5913 (ite c!9863 call!5911 call!5912)) (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun b!69146 () Bool)

(assert (=> b!69146 (= e!45289 (+!89 call!5914 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69147 () Bool)

(declare-fun lt!30294 () Unit!1913)

(assert (=> b!69147 (= e!45281 lt!30294)))

(declare-fun lt!30301 () ListLongMap!1421)

(assert (=> b!69147 (= lt!30301 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30287 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30287 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30293 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30293 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30305 () Unit!1913)

(assert (=> b!69147 (= lt!30305 (addStillContains!49 lt!30301 lt!30287 (zeroValue!2074 newMap!16) lt!30293))))

(assert (=> b!69147 (contains!720 (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))) lt!30293)))

(declare-fun lt!30292 () Unit!1913)

(assert (=> b!69147 (= lt!30292 lt!30305)))

(declare-fun lt!30289 () ListLongMap!1421)

(assert (=> b!69147 (= lt!30289 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30304 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30304 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30297 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30297 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30285 () Unit!1913)

(assert (=> b!69147 (= lt!30285 (addApplyDifferent!49 lt!30289 lt!30304 (minValue!2074 newMap!16) lt!30297))))

(assert (=> b!69147 (= (apply!73 (+!89 lt!30289 (tuple2!2119 lt!30304 (minValue!2074 newMap!16))) lt!30297) (apply!73 lt!30289 lt!30297))))

(declare-fun lt!30290 () Unit!1913)

(assert (=> b!69147 (= lt!30290 lt!30285)))

(declare-fun lt!30286 () ListLongMap!1421)

(assert (=> b!69147 (= lt!30286 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30302 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30302 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30288 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30288 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30298 () Unit!1913)

(assert (=> b!69147 (= lt!30298 (addApplyDifferent!49 lt!30286 lt!30302 (zeroValue!2074 newMap!16) lt!30288))))

(assert (=> b!69147 (= (apply!73 (+!89 lt!30286 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))) lt!30288) (apply!73 lt!30286 lt!30288))))

(declare-fun lt!30296 () Unit!1913)

(assert (=> b!69147 (= lt!30296 lt!30298)))

(declare-fun lt!30306 () ListLongMap!1421)

(assert (=> b!69147 (= lt!30306 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30291 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30291 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30300 () (_ BitVec 64))

(assert (=> b!69147 (= lt!30300 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69147 (= lt!30294 (addApplyDifferent!49 lt!30306 lt!30291 (minValue!2074 newMap!16) lt!30300))))

(assert (=> b!69147 (= (apply!73 (+!89 lt!30306 (tuple2!2119 lt!30291 (minValue!2074 newMap!16))) lt!30300) (apply!73 lt!30306 lt!30300))))

(declare-fun b!69148 () Bool)

(assert (=> b!69148 (= e!45287 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5913 () Bool)

(assert (=> bm!5913 (= call!5910 call!5914)))

(declare-fun b!69149 () Bool)

(assert (=> b!69149 (= e!45285 (not call!5916))))

(declare-fun b!69150 () Bool)

(assert (=> b!69150 (= e!45288 (= (apply!73 lt!30303 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69151 () Bool)

(assert (=> b!69151 (= e!45286 e!45283)))

(declare-fun res!37098 () Bool)

(assert (=> b!69151 (=> (not res!37098) (not e!45283))))

(assert (=> b!69151 (= res!37098 (contains!720 lt!30303 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69151 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!14865 c!9859) b!69146))

(assert (= (and d!14865 (not c!9859)) b!69135))

(assert (= (and b!69135 c!9863) b!69136))

(assert (= (and b!69135 (not c!9863)) b!69145))

(assert (= (and b!69145 c!9858) b!69134))

(assert (= (and b!69145 (not c!9858)) b!69138))

(assert (= (or b!69134 b!69138) bm!5909))

(assert (= (or b!69136 bm!5909) bm!5907))

(assert (= (or b!69136 b!69134) bm!5913))

(assert (= (or b!69146 bm!5907) bm!5910))

(assert (= (or b!69146 bm!5913) bm!5912))

(assert (= (and d!14865 res!37102) b!69148))

(assert (= (and d!14865 c!9862) b!69147))

(assert (= (and d!14865 (not c!9862)) b!69141))

(assert (= (and d!14865 res!37104) b!69132))

(assert (= (and b!69132 res!37103) b!69144))

(assert (= (and b!69132 (not res!37106)) b!69151))

(assert (= (and b!69151 res!37098) b!69139))

(assert (= (and b!69132 res!37105) b!69131))

(assert (= (and b!69131 c!9860) b!69142))

(assert (= (and b!69131 (not c!9860)) b!69149))

(assert (= (and b!69142 res!37099) b!69150))

(assert (= (or b!69142 b!69149) bm!5911))

(assert (= (and b!69131 res!37100) b!69140))

(assert (= (and b!69140 c!9861) b!69137))

(assert (= (and b!69140 (not c!9861)) b!69133))

(assert (= (and b!69137 res!37101) b!69143))

(assert (= (or b!69137 b!69133) bm!5908))

(declare-fun b_lambda!3101 () Bool)

(assert (=> (not b_lambda!3101) (not b!69139)))

(assert (=> b!69139 t!5009))

(declare-fun b_and!4253 () Bool)

(assert (= b_and!4249 (and (=> t!5009 result!2623) b_and!4253)))

(assert (=> b!69139 t!5011))

(declare-fun b_and!4255 () Bool)

(assert (= b_and!4251 (and (=> t!5011 result!2625) b_and!4255)))

(assert (=> b!69151 m!64555))

(assert (=> b!69151 m!64555))

(declare-fun m!64873 () Bool)

(assert (=> b!69151 m!64873))

(declare-fun m!64875 () Bool)

(assert (=> b!69143 m!64875))

(declare-fun m!64877 () Bool)

(assert (=> b!69150 m!64877))

(declare-fun m!64879 () Bool)

(assert (=> bm!5912 m!64879))

(assert (=> d!14865 m!64569))

(declare-fun m!64881 () Bool)

(assert (=> bm!5911 m!64881))

(assert (=> b!69139 m!64555))

(assert (=> b!69139 m!64699))

(assert (=> b!69139 m!64555))

(declare-fun m!64883 () Bool)

(assert (=> b!69139 m!64883))

(assert (=> b!69139 m!64755))

(assert (=> b!69139 m!64755))

(assert (=> b!69139 m!64699))

(assert (=> b!69139 m!64757))

(declare-fun m!64885 () Bool)

(assert (=> b!69146 m!64885))

(assert (=> b!69147 m!64555))

(declare-fun m!64887 () Bool)

(assert (=> b!69147 m!64887))

(declare-fun m!64889 () Bool)

(assert (=> b!69147 m!64889))

(declare-fun m!64891 () Bool)

(assert (=> b!69147 m!64891))

(declare-fun m!64893 () Bool)

(assert (=> b!69147 m!64893))

(declare-fun m!64895 () Bool)

(assert (=> b!69147 m!64895))

(declare-fun m!64897 () Bool)

(assert (=> b!69147 m!64897))

(declare-fun m!64899 () Bool)

(assert (=> b!69147 m!64899))

(declare-fun m!64901 () Bool)

(assert (=> b!69147 m!64901))

(declare-fun m!64903 () Bool)

(assert (=> b!69147 m!64903))

(declare-fun m!64905 () Bool)

(assert (=> b!69147 m!64905))

(declare-fun m!64907 () Bool)

(assert (=> b!69147 m!64907))

(declare-fun m!64909 () Bool)

(assert (=> b!69147 m!64909))

(assert (=> b!69147 m!64899))

(declare-fun m!64911 () Bool)

(assert (=> b!69147 m!64911))

(declare-fun m!64913 () Bool)

(assert (=> b!69147 m!64913))

(assert (=> b!69147 m!64909))

(declare-fun m!64915 () Bool)

(assert (=> b!69147 m!64915))

(assert (=> b!69147 m!64911))

(assert (=> b!69147 m!64903))

(declare-fun m!64917 () Bool)

(assert (=> b!69147 m!64917))

(assert (=> b!69148 m!64555))

(assert (=> b!69148 m!64555))

(assert (=> b!69148 m!64607))

(assert (=> b!69144 m!64555))

(assert (=> b!69144 m!64555))

(assert (=> b!69144 m!64607))

(declare-fun m!64919 () Bool)

(assert (=> bm!5908 m!64919))

(assert (=> bm!5910 m!64895))

(assert (=> d!14729 d!14865))

(declare-fun d!14867 () Bool)

(declare-fun lt!30307 () Bool)

(assert (=> d!14867 (= lt!30307 (select (content!72 (toList!726 lt!29847)) lt!29777))))

(declare-fun e!45291 () Bool)

(assert (=> d!14867 (= lt!30307 e!45291)))

(declare-fun res!37108 () Bool)

(assert (=> d!14867 (=> (not res!37108) (not e!45291))))

(assert (=> d!14867 (= res!37108 ((_ is Cons!1490) (toList!726 lt!29847)))))

(assert (=> d!14867 (= (contains!721 (toList!726 lt!29847) lt!29777) lt!30307)))

(declare-fun b!69152 () Bool)

(declare-fun e!45292 () Bool)

(assert (=> b!69152 (= e!45291 e!45292)))

(declare-fun res!37107 () Bool)

(assert (=> b!69152 (=> res!37107 e!45292)))

(assert (=> b!69152 (= res!37107 (= (h!2075 (toList!726 lt!29847)) lt!29777))))

(declare-fun b!69153 () Bool)

(assert (=> b!69153 (= e!45292 (contains!721 (t!5001 (toList!726 lt!29847)) lt!29777))))

(assert (= (and d!14867 res!37108) b!69152))

(assert (= (and b!69152 (not res!37107)) b!69153))

(declare-fun m!64921 () Bool)

(assert (=> d!14867 m!64921))

(declare-fun m!64923 () Bool)

(assert (=> d!14867 m!64923))

(declare-fun m!64925 () Bool)

(assert (=> b!69153 m!64925))

(assert (=> b!68549 d!14867))

(declare-fun d!14869 () Bool)

(assert (=> d!14869 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30310 () Unit!1913)

(declare-fun choose!396 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1913)

(assert (=> d!14869 (= lt!30310 (choose!396 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30016 (zeroValue!2074 newMap!16) lt!29778 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14869 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14869 (= (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30016 (zeroValue!2074 newMap!16) lt!29778 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)) lt!30310)))

(declare-fun bs!2945 () Bool)

(assert (= bs!2945 d!14869))

(declare-fun m!64927 () Bool)

(assert (=> bs!2945 m!64927))

(assert (=> bs!2945 m!64251))

(declare-fun m!64929 () Bool)

(assert (=> bs!2945 m!64929))

(assert (=> bs!2945 m!64251))

(assert (=> bs!2945 m!64569))

(declare-fun m!64931 () Bool)

(assert (=> bs!2945 m!64931))

(assert (=> b!68764 d!14869))

(assert (=> b!68663 d!14859))

(assert (=> b!68663 d!14861))

(declare-fun d!14871 () Bool)

(declare-fun e!45293 () Bool)

(assert (=> d!14871 e!45293))

(declare-fun res!37109 () Bool)

(assert (=> d!14871 (=> res!37109 e!45293)))

(declare-fun lt!30313 () Bool)

(assert (=> d!14871 (= res!37109 (not lt!30313))))

(declare-fun lt!30314 () Bool)

(assert (=> d!14871 (= lt!30313 lt!30314)))

(declare-fun lt!30312 () Unit!1913)

(declare-fun e!45294 () Unit!1913)

(assert (=> d!14871 (= lt!30312 e!45294)))

(declare-fun c!9864 () Bool)

(assert (=> d!14871 (= c!9864 lt!30314)))

(assert (=> d!14871 (= lt!30314 (containsKey!134 (toList!726 lt!29862) (_1!1069 lt!29777)))))

(assert (=> d!14871 (= (contains!720 lt!29862 (_1!1069 lt!29777)) lt!30313)))

(declare-fun b!69154 () Bool)

(declare-fun lt!30311 () Unit!1913)

(assert (=> b!69154 (= e!45294 lt!30311)))

(assert (=> b!69154 (= lt!30311 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29862) (_1!1069 lt!29777)))))

(assert (=> b!69154 (isDefined!84 (getValueByKey!130 (toList!726 lt!29862) (_1!1069 lt!29777)))))

(declare-fun b!69155 () Bool)

(declare-fun Unit!1938 () Unit!1913)

(assert (=> b!69155 (= e!45294 Unit!1938)))

(declare-fun b!69156 () Bool)

(assert (=> b!69156 (= e!45293 (isDefined!84 (getValueByKey!130 (toList!726 lt!29862) (_1!1069 lt!29777))))))

(assert (= (and d!14871 c!9864) b!69154))

(assert (= (and d!14871 (not c!9864)) b!69155))

(assert (= (and d!14871 (not res!37109)) b!69156))

(declare-fun m!64933 () Bool)

(assert (=> d!14871 m!64933))

(declare-fun m!64935 () Bool)

(assert (=> b!69154 m!64935))

(assert (=> b!69154 m!64239))

(assert (=> b!69154 m!64239))

(declare-fun m!64937 () Bool)

(assert (=> b!69154 m!64937))

(assert (=> b!69156 m!64239))

(assert (=> b!69156 m!64239))

(assert (=> b!69156 m!64937))

(assert (=> d!14725 d!14871))

(declare-fun b!69160 () Bool)

(declare-fun e!45296 () Option!136)

(assert (=> b!69160 (= e!45296 None!134)))

(declare-fun d!14873 () Bool)

(declare-fun c!9865 () Bool)

(assert (=> d!14873 (= c!9865 (and ((_ is Cons!1490) lt!29863) (= (_1!1069 (h!2075 lt!29863)) (_1!1069 lt!29777))))))

(declare-fun e!45295 () Option!136)

(assert (=> d!14873 (= (getValueByKey!130 lt!29863 (_1!1069 lt!29777)) e!45295)))

(declare-fun b!69157 () Bool)

(assert (=> b!69157 (= e!45295 (Some!135 (_2!1069 (h!2075 lt!29863))))))

(declare-fun b!69159 () Bool)

(assert (=> b!69159 (= e!45296 (getValueByKey!130 (t!5001 lt!29863) (_1!1069 lt!29777)))))

(declare-fun b!69158 () Bool)

(assert (=> b!69158 (= e!45295 e!45296)))

(declare-fun c!9866 () Bool)

(assert (=> b!69158 (= c!9866 (and ((_ is Cons!1490) lt!29863) (not (= (_1!1069 (h!2075 lt!29863)) (_1!1069 lt!29777)))))))

(assert (= (and d!14873 c!9865) b!69157))

(assert (= (and d!14873 (not c!9865)) b!69158))

(assert (= (and b!69158 c!9866) b!69159))

(assert (= (and b!69158 (not c!9866)) b!69160))

(declare-fun m!64939 () Bool)

(assert (=> b!69159 m!64939))

(assert (=> d!14725 d!14873))

(declare-fun d!14875 () Bool)

(assert (=> d!14875 (= (getValueByKey!130 lt!29863 (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777)))))

(declare-fun lt!30315 () Unit!1913)

(assert (=> d!14875 (= lt!30315 (choose!390 lt!29863 (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(declare-fun e!45297 () Bool)

(assert (=> d!14875 e!45297))

(declare-fun res!37110 () Bool)

(assert (=> d!14875 (=> (not res!37110) (not e!45297))))

(assert (=> d!14875 (= res!37110 (isStrictlySorted!285 lt!29863))))

(assert (=> d!14875 (= (lemmaContainsTupThenGetReturnValue!49 lt!29863 (_1!1069 lt!29777) (_2!1069 lt!29777)) lt!30315)))

(declare-fun b!69161 () Bool)

(declare-fun res!37111 () Bool)

(assert (=> b!69161 (=> (not res!37111) (not e!45297))))

(assert (=> b!69161 (= res!37111 (containsKey!134 lt!29863 (_1!1069 lt!29777)))))

(declare-fun b!69162 () Bool)

(assert (=> b!69162 (= e!45297 (contains!721 lt!29863 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(assert (= (and d!14875 res!37110) b!69161))

(assert (= (and b!69161 res!37111) b!69162))

(assert (=> d!14875 m!64233))

(declare-fun m!64941 () Bool)

(assert (=> d!14875 m!64941))

(declare-fun m!64943 () Bool)

(assert (=> d!14875 m!64943))

(declare-fun m!64945 () Bool)

(assert (=> b!69161 m!64945))

(declare-fun m!64947 () Bool)

(assert (=> b!69162 m!64947))

(assert (=> d!14725 d!14875))

(declare-fun bm!5914 () Bool)

(declare-fun call!5917 () List!1494)

(declare-fun call!5919 () List!1494)

(assert (=> bm!5914 (= call!5917 call!5919)))

(declare-fun b!69163 () Bool)

(declare-fun e!45301 () List!1494)

(declare-fun call!5918 () List!1494)

(assert (=> b!69163 (= e!45301 call!5918)))

(declare-fun e!45300 () List!1494)

(declare-fun b!69164 () Bool)

(assert (=> b!69164 (= e!45300 (insertStrictlySorted!51 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))) (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(declare-fun b!69166 () Bool)

(declare-fun res!37113 () Bool)

(declare-fun e!45299 () Bool)

(assert (=> b!69166 (=> (not res!37113) (not e!45299))))

(declare-fun lt!30316 () List!1494)

(assert (=> b!69166 (= res!37113 (containsKey!134 lt!30316 (_1!1069 lt!29777)))))

(declare-fun b!69167 () Bool)

(declare-fun e!45298 () List!1494)

(declare-fun e!45302 () List!1494)

(assert (=> b!69167 (= e!45298 e!45302)))

(declare-fun c!9867 () Bool)

(assert (=> b!69167 (= c!9867 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 lt!29775))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29775)))) (_1!1069 lt!29777))))))

(declare-fun b!69168 () Bool)

(declare-fun c!9868 () Bool)

(assert (=> b!69168 (= e!45300 (ite c!9867 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))) (ite c!9868 (Cons!1490 (h!2075 (toList!726 (+!89 lt!29768 lt!29775))) (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) Nil!1491)))))

(declare-fun b!69169 () Bool)

(assert (=> b!69169 (= e!45301 call!5918)))

(declare-fun b!69170 () Bool)

(assert (=> b!69170 (= e!45302 call!5917)))

(declare-fun b!69171 () Bool)

(assert (=> b!69171 (= e!45298 call!5919)))

(declare-fun c!9869 () Bool)

(declare-fun bm!5915 () Bool)

(assert (=> bm!5915 (= call!5919 ($colon$colon!63 e!45300 (ite c!9869 (h!2075 (toList!726 (+!89 lt!29768 lt!29775))) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777)))))))

(declare-fun c!9870 () Bool)

(assert (=> bm!5915 (= c!9870 c!9869)))

(declare-fun b!69172 () Bool)

(assert (=> b!69172 (= e!45299 (contains!721 lt!30316 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun bm!5916 () Bool)

(assert (=> bm!5916 (= call!5918 call!5917)))

(declare-fun b!69165 () Bool)

(assert (=> b!69165 (= c!9868 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 lt!29775))) (bvsgt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29775)))) (_1!1069 lt!29777))))))

(assert (=> b!69165 (= e!45302 e!45301)))

(declare-fun d!14877 () Bool)

(assert (=> d!14877 e!45299))

(declare-fun res!37112 () Bool)

(assert (=> d!14877 (=> (not res!37112) (not e!45299))))

(assert (=> d!14877 (= res!37112 (isStrictlySorted!285 lt!30316))))

(assert (=> d!14877 (= lt!30316 e!45298)))

(assert (=> d!14877 (= c!9869 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 lt!29775))) (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29775)))) (_1!1069 lt!29777))))))

(assert (=> d!14877 (isStrictlySorted!285 (toList!726 (+!89 lt!29768 lt!29775)))))

(assert (=> d!14877 (= (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 lt!29775)) (_1!1069 lt!29777) (_2!1069 lt!29777)) lt!30316)))

(assert (= (and d!14877 c!9869) b!69171))

(assert (= (and d!14877 (not c!9869)) b!69167))

(assert (= (and b!69167 c!9867) b!69170))

(assert (= (and b!69167 (not c!9867)) b!69165))

(assert (= (and b!69165 c!9868) b!69169))

(assert (= (and b!69165 (not c!9868)) b!69163))

(assert (= (or b!69169 b!69163) bm!5916))

(assert (= (or b!69170 bm!5916) bm!5914))

(assert (= (or b!69171 bm!5914) bm!5915))

(assert (= (and bm!5915 c!9870) b!69164))

(assert (= (and bm!5915 (not c!9870)) b!69168))

(assert (= (and d!14877 res!37112) b!69166))

(assert (= (and b!69166 res!37113) b!69172))

(declare-fun m!64949 () Bool)

(assert (=> b!69164 m!64949))

(declare-fun m!64951 () Bool)

(assert (=> d!14877 m!64951))

(declare-fun m!64953 () Bool)

(assert (=> d!14877 m!64953))

(declare-fun m!64955 () Bool)

(assert (=> b!69166 m!64955))

(declare-fun m!64957 () Bool)

(assert (=> bm!5915 m!64957))

(declare-fun m!64959 () Bool)

(assert (=> b!69172 m!64959))

(assert (=> d!14725 d!14877))

(declare-fun d!14879 () Bool)

(assert (=> d!14879 (= (apply!73 lt!29926 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2946 () Bool)

(assert (= bs!2946 d!14879))

(assert (=> bs!2946 m!64805))

(assert (=> bs!2946 m!64805))

(declare-fun m!64961 () Bool)

(assert (=> bs!2946 m!64961))

(assert (=> b!68619 d!14879))

(declare-fun d!14881 () Bool)

(declare-fun lt!30317 () Bool)

(assert (=> d!14881 (= lt!30317 (select (content!72 (toList!726 lt!29851)) lt!29775))))

(declare-fun e!45303 () Bool)

(assert (=> d!14881 (= lt!30317 e!45303)))

(declare-fun res!37115 () Bool)

(assert (=> d!14881 (=> (not res!37115) (not e!45303))))

(assert (=> d!14881 (= res!37115 ((_ is Cons!1490) (toList!726 lt!29851)))))

(assert (=> d!14881 (= (contains!721 (toList!726 lt!29851) lt!29775) lt!30317)))

(declare-fun b!69173 () Bool)

(declare-fun e!45304 () Bool)

(assert (=> b!69173 (= e!45303 e!45304)))

(declare-fun res!37114 () Bool)

(assert (=> b!69173 (=> res!37114 e!45304)))

(assert (=> b!69173 (= res!37114 (= (h!2075 (toList!726 lt!29851)) lt!29775))))

(declare-fun b!69174 () Bool)

(assert (=> b!69174 (= e!45304 (contains!721 (t!5001 (toList!726 lt!29851)) lt!29775))))

(assert (= (and d!14881 res!37115) b!69173))

(assert (= (and b!69173 (not res!37114)) b!69174))

(declare-fun m!64963 () Bool)

(assert (=> d!14881 m!64963))

(declare-fun m!64965 () Bool)

(assert (=> d!14881 m!64965))

(declare-fun m!64967 () Bool)

(assert (=> b!69174 m!64967))

(assert (=> b!68551 d!14881))

(declare-fun d!14883 () Bool)

(declare-fun e!45305 () Bool)

(assert (=> d!14883 e!45305))

(declare-fun res!37116 () Bool)

(assert (=> d!14883 (=> res!37116 e!45305)))

(declare-fun lt!30320 () Bool)

(assert (=> d!14883 (= res!37116 (not lt!30320))))

(declare-fun lt!30321 () Bool)

(assert (=> d!14883 (= lt!30320 lt!30321)))

(declare-fun lt!30319 () Unit!1913)

(declare-fun e!45306 () Unit!1913)

(assert (=> d!14883 (= lt!30319 e!45306)))

(declare-fun c!9871 () Bool)

(assert (=> d!14883 (= c!9871 lt!30321)))

(assert (=> d!14883 (= lt!30321 (containsKey!134 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14883 (= (contains!720 lt!29836 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30320)))

(declare-fun b!69175 () Bool)

(declare-fun lt!30318 () Unit!1913)

(assert (=> b!69175 (= e!45306 lt!30318)))

(assert (=> b!69175 (= lt!30318 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69175 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69176 () Bool)

(declare-fun Unit!1939 () Unit!1913)

(assert (=> b!69176 (= e!45306 Unit!1939)))

(declare-fun b!69177 () Bool)

(assert (=> b!69177 (= e!45305 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14883 c!9871) b!69175))

(assert (= (and d!14883 (not c!9871)) b!69176))

(assert (= (and d!14883 (not res!37116)) b!69177))

(declare-fun m!64969 () Bool)

(assert (=> d!14883 m!64969))

(declare-fun m!64971 () Bool)

(assert (=> b!69175 m!64971))

(declare-fun m!64973 () Bool)

(assert (=> b!69175 m!64973))

(assert (=> b!69175 m!64973))

(declare-fun m!64975 () Bool)

(assert (=> b!69175 m!64975))

(assert (=> b!69177 m!64973))

(assert (=> b!69177 m!64973))

(assert (=> b!69177 m!64975))

(assert (=> b!68533 d!14883))

(declare-fun d!14885 () Bool)

(declare-fun e!45307 () Bool)

(assert (=> d!14885 e!45307))

(declare-fun res!37117 () Bool)

(assert (=> d!14885 (=> res!37117 e!45307)))

(declare-fun lt!30324 () Bool)

(assert (=> d!14885 (= res!37117 (not lt!30324))))

(declare-fun lt!30325 () Bool)

(assert (=> d!14885 (= lt!30324 lt!30325)))

(declare-fun lt!30323 () Unit!1913)

(declare-fun e!45308 () Unit!1913)

(assert (=> d!14885 (= lt!30323 e!45308)))

(declare-fun c!9872 () Bool)

(assert (=> d!14885 (= c!9872 lt!30325)))

(assert (=> d!14885 (= lt!30325 (containsKey!134 (toList!726 lt!29858) (_1!1069 lt!29775)))))

(assert (=> d!14885 (= (contains!720 lt!29858 (_1!1069 lt!29775)) lt!30324)))

(declare-fun b!69178 () Bool)

(declare-fun lt!30322 () Unit!1913)

(assert (=> b!69178 (= e!45308 lt!30322)))

(assert (=> b!69178 (= lt!30322 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29858) (_1!1069 lt!29775)))))

(assert (=> b!69178 (isDefined!84 (getValueByKey!130 (toList!726 lt!29858) (_1!1069 lt!29775)))))

(declare-fun b!69179 () Bool)

(declare-fun Unit!1940 () Unit!1913)

(assert (=> b!69179 (= e!45308 Unit!1940)))

(declare-fun b!69180 () Bool)

(assert (=> b!69180 (= e!45307 (isDefined!84 (getValueByKey!130 (toList!726 lt!29858) (_1!1069 lt!29775))))))

(assert (= (and d!14885 c!9872) b!69178))

(assert (= (and d!14885 (not c!9872)) b!69179))

(assert (= (and d!14885 (not res!37117)) b!69180))

(declare-fun m!64977 () Bool)

(assert (=> d!14885 m!64977))

(declare-fun m!64979 () Bool)

(assert (=> b!69178 m!64979))

(assert (=> b!69178 m!64227))

(assert (=> b!69178 m!64227))

(declare-fun m!64981 () Bool)

(assert (=> b!69178 m!64981))

(assert (=> b!69180 m!64227))

(assert (=> b!69180 m!64227))

(assert (=> b!69180 m!64981))

(assert (=> d!14723 d!14885))

(declare-fun b!69184 () Bool)

(declare-fun e!45310 () Option!136)

(assert (=> b!69184 (= e!45310 None!134)))

(declare-fun d!14887 () Bool)

(declare-fun c!9873 () Bool)

(assert (=> d!14887 (= c!9873 (and ((_ is Cons!1490) lt!29859) (= (_1!1069 (h!2075 lt!29859)) (_1!1069 lt!29775))))))

(declare-fun e!45309 () Option!136)

(assert (=> d!14887 (= (getValueByKey!130 lt!29859 (_1!1069 lt!29775)) e!45309)))

(declare-fun b!69181 () Bool)

(assert (=> b!69181 (= e!45309 (Some!135 (_2!1069 (h!2075 lt!29859))))))

(declare-fun b!69183 () Bool)

(assert (=> b!69183 (= e!45310 (getValueByKey!130 (t!5001 lt!29859) (_1!1069 lt!29775)))))

(declare-fun b!69182 () Bool)

(assert (=> b!69182 (= e!45309 e!45310)))

(declare-fun c!9874 () Bool)

(assert (=> b!69182 (= c!9874 (and ((_ is Cons!1490) lt!29859) (not (= (_1!1069 (h!2075 lt!29859)) (_1!1069 lt!29775)))))))

(assert (= (and d!14887 c!9873) b!69181))

(assert (= (and d!14887 (not c!9873)) b!69182))

(assert (= (and b!69182 c!9874) b!69183))

(assert (= (and b!69182 (not c!9874)) b!69184))

(declare-fun m!64983 () Bool)

(assert (=> b!69183 m!64983))

(assert (=> d!14723 d!14887))

(declare-fun d!14889 () Bool)

(assert (=> d!14889 (= (getValueByKey!130 lt!29859 (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775)))))

(declare-fun lt!30326 () Unit!1913)

(assert (=> d!14889 (= lt!30326 (choose!390 lt!29859 (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(declare-fun e!45311 () Bool)

(assert (=> d!14889 e!45311))

(declare-fun res!37118 () Bool)

(assert (=> d!14889 (=> (not res!37118) (not e!45311))))

(assert (=> d!14889 (= res!37118 (isStrictlySorted!285 lt!29859))))

(assert (=> d!14889 (= (lemmaContainsTupThenGetReturnValue!49 lt!29859 (_1!1069 lt!29775) (_2!1069 lt!29775)) lt!30326)))

(declare-fun b!69185 () Bool)

(declare-fun res!37119 () Bool)

(assert (=> b!69185 (=> (not res!37119) (not e!45311))))

(assert (=> b!69185 (= res!37119 (containsKey!134 lt!29859 (_1!1069 lt!29775)))))

(declare-fun b!69186 () Bool)

(assert (=> b!69186 (= e!45311 (contains!721 lt!29859 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(assert (= (and d!14889 res!37118) b!69185))

(assert (= (and b!69185 res!37119) b!69186))

(assert (=> d!14889 m!64221))

(declare-fun m!64985 () Bool)

(assert (=> d!14889 m!64985))

(declare-fun m!64987 () Bool)

(assert (=> d!14889 m!64987))

(declare-fun m!64989 () Bool)

(assert (=> b!69185 m!64989))

(declare-fun m!64991 () Bool)

(assert (=> b!69186 m!64991))

(assert (=> d!14723 d!14889))

(declare-fun bm!5917 () Bool)

(declare-fun call!5920 () List!1494)

(declare-fun call!5922 () List!1494)

(assert (=> bm!5917 (= call!5920 call!5922)))

(declare-fun b!69187 () Bool)

(declare-fun e!45315 () List!1494)

(declare-fun call!5921 () List!1494)

(assert (=> b!69187 (= e!45315 call!5921)))

(declare-fun e!45314 () List!1494)

(declare-fun b!69188 () Bool)

(assert (=> b!69188 (= e!45314 (insertStrictlySorted!51 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))) (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(declare-fun b!69190 () Bool)

(declare-fun res!37121 () Bool)

(declare-fun e!45313 () Bool)

(assert (=> b!69190 (=> (not res!37121) (not e!45313))))

(declare-fun lt!30327 () List!1494)

(assert (=> b!69190 (= res!37121 (containsKey!134 lt!30327 (_1!1069 lt!29775)))))

(declare-fun b!69191 () Bool)

(declare-fun e!45312 () List!1494)

(declare-fun e!45316 () List!1494)

(assert (=> b!69191 (= e!45312 e!45316)))

(declare-fun c!9875 () Bool)

(assert (=> b!69191 (= c!9875 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 lt!29777))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29777)))) (_1!1069 lt!29775))))))

(declare-fun b!69192 () Bool)

(declare-fun c!9876 () Bool)

(assert (=> b!69192 (= e!45314 (ite c!9875 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))) (ite c!9876 (Cons!1490 (h!2075 (toList!726 (+!89 lt!29768 lt!29777))) (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) Nil!1491)))))

(declare-fun b!69193 () Bool)

(assert (=> b!69193 (= e!45315 call!5921)))

(declare-fun b!69194 () Bool)

(assert (=> b!69194 (= e!45316 call!5920)))

(declare-fun b!69195 () Bool)

(assert (=> b!69195 (= e!45312 call!5922)))

(declare-fun bm!5918 () Bool)

(declare-fun c!9877 () Bool)

(assert (=> bm!5918 (= call!5922 ($colon$colon!63 e!45314 (ite c!9877 (h!2075 (toList!726 (+!89 lt!29768 lt!29777))) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775)))))))

(declare-fun c!9878 () Bool)

(assert (=> bm!5918 (= c!9878 c!9877)))

(declare-fun b!69196 () Bool)

(assert (=> b!69196 (= e!45313 (contains!721 lt!30327 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun bm!5919 () Bool)

(assert (=> bm!5919 (= call!5921 call!5920)))

(declare-fun b!69189 () Bool)

(assert (=> b!69189 (= c!9876 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 lt!29777))) (bvsgt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29777)))) (_1!1069 lt!29775))))))

(assert (=> b!69189 (= e!45316 e!45315)))

(declare-fun d!14891 () Bool)

(assert (=> d!14891 e!45313))

(declare-fun res!37120 () Bool)

(assert (=> d!14891 (=> (not res!37120) (not e!45313))))

(assert (=> d!14891 (= res!37120 (isStrictlySorted!285 lt!30327))))

(assert (=> d!14891 (= lt!30327 e!45312)))

(assert (=> d!14891 (= c!9877 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 lt!29777))) (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29777)))) (_1!1069 lt!29775))))))

(assert (=> d!14891 (isStrictlySorted!285 (toList!726 (+!89 lt!29768 lt!29777)))))

(assert (=> d!14891 (= (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 lt!29777)) (_1!1069 lt!29775) (_2!1069 lt!29775)) lt!30327)))

(assert (= (and d!14891 c!9877) b!69195))

(assert (= (and d!14891 (not c!9877)) b!69191))

(assert (= (and b!69191 c!9875) b!69194))

(assert (= (and b!69191 (not c!9875)) b!69189))

(assert (= (and b!69189 c!9876) b!69193))

(assert (= (and b!69189 (not c!9876)) b!69187))

(assert (= (or b!69193 b!69187) bm!5919))

(assert (= (or b!69194 bm!5919) bm!5917))

(assert (= (or b!69195 bm!5917) bm!5918))

(assert (= (and bm!5918 c!9878) b!69188))

(assert (= (and bm!5918 (not c!9878)) b!69192))

(assert (= (and d!14891 res!37120) b!69190))

(assert (= (and b!69190 res!37121) b!69196))

(declare-fun m!64993 () Bool)

(assert (=> b!69188 m!64993))

(declare-fun m!64995 () Bool)

(assert (=> d!14891 m!64995))

(declare-fun m!64997 () Bool)

(assert (=> d!14891 m!64997))

(declare-fun m!64999 () Bool)

(assert (=> b!69190 m!64999))

(declare-fun m!65001 () Bool)

(assert (=> bm!5918 m!65001))

(declare-fun m!65003 () Bool)

(assert (=> b!69196 m!65003))

(assert (=> d!14723 d!14891))

(declare-fun d!14893 () Bool)

(declare-fun e!45317 () Bool)

(assert (=> d!14893 e!45317))

(declare-fun res!37123 () Bool)

(assert (=> d!14893 (=> (not res!37123) (not e!45317))))

(declare-fun lt!30330 () ListLongMap!1421)

(assert (=> d!14893 (= res!37123 (contains!720 lt!30330 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun lt!30331 () List!1494)

(assert (=> d!14893 (= lt!30330 (ListLongMap!1422 lt!30331))))

(declare-fun lt!30328 () Unit!1913)

(declare-fun lt!30329 () Unit!1913)

(assert (=> d!14893 (= lt!30328 lt!30329)))

(assert (=> d!14893 (= (getValueByKey!130 lt!30331 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) (Some!135 (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!14893 (= lt!30329 (lemmaContainsTupThenGetReturnValue!49 lt!30331 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!14893 (= lt!30331 (insertStrictlySorted!51 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!14893 (= (+!89 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)) (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30330)))

(declare-fun b!69197 () Bool)

(declare-fun res!37122 () Bool)

(assert (=> b!69197 (=> (not res!37122) (not e!45317))))

(assert (=> b!69197 (= res!37122 (= (getValueByKey!130 (toList!726 lt!30330) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) (Some!135 (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun b!69198 () Bool)

(assert (=> b!69198 (= e!45317 (contains!721 (toList!726 lt!30330) (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (= (and d!14893 res!37123) b!69197))

(assert (= (and b!69197 res!37122) b!69198))

(declare-fun m!65005 () Bool)

(assert (=> d!14893 m!65005))

(declare-fun m!65007 () Bool)

(assert (=> d!14893 m!65007))

(declare-fun m!65009 () Bool)

(assert (=> d!14893 m!65009))

(declare-fun m!65011 () Bool)

(assert (=> d!14893 m!65011))

(declare-fun m!65013 () Bool)

(assert (=> b!69197 m!65013))

(declare-fun m!65015 () Bool)

(assert (=> b!69198 m!65015))

(assert (=> bm!5780 d!14893))

(declare-fun d!14895 () Bool)

(assert (=> d!14895 (= (get!1135 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2494 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> b!68788 d!14895))

(declare-fun d!14897 () Bool)

(assert (=> d!14897 (= (map!1147 (_2!1070 lt!30024)) (getCurrentListMap!421 (_keys!3812 (_2!1070 lt!30024)) (_values!2151 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024)) (extraKeys!2035 (_2!1070 lt!30024)) (zeroValue!2074 (_2!1070 lt!30024)) (minValue!2074 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30024))))))

(declare-fun bs!2947 () Bool)

(assert (= bs!2947 d!14897))

(declare-fun m!65017 () Bool)

(assert (=> bs!2947 m!65017))

(assert (=> bm!5835 d!14897))

(declare-fun b!69208 () Bool)

(declare-fun res!37133 () Bool)

(declare-fun e!45320 () Bool)

(assert (=> b!69208 (=> (not res!37133) (not e!45320))))

(declare-fun size!2080 (LongMapFixedSize!678) (_ BitVec 32))

(assert (=> b!69208 (= res!37133 (bvsge (size!2080 newMap!16) (_size!388 newMap!16)))))

(declare-fun b!69207 () Bool)

(declare-fun res!37132 () Bool)

(assert (=> b!69207 (=> (not res!37132) (not e!45320))))

(assert (=> b!69207 (= res!37132 (and (= (size!2077 (_values!2151 newMap!16)) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001)) (= (size!2076 (_keys!3812 newMap!16)) (size!2077 (_values!2151 newMap!16))) (bvsge (_size!388 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!388 newMap!16) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!69210 () Bool)

(assert (=> b!69210 (= e!45320 (and (bvsge (extraKeys!2035 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2035 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!388 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!14899 () Bool)

(declare-fun res!37135 () Bool)

(assert (=> d!14899 (=> (not res!37135) (not e!45320))))

(assert (=> d!14899 (= res!37135 (validMask!0 (mask!6113 newMap!16)))))

(assert (=> d!14899 (= (simpleValid!48 newMap!16) e!45320)))

(declare-fun b!69209 () Bool)

(declare-fun res!37134 () Bool)

(assert (=> b!69209 (=> (not res!37134) (not e!45320))))

(assert (=> b!69209 (= res!37134 (= (size!2080 newMap!16) (bvadd (_size!388 newMap!16) (bvsdiv (bvadd (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!14899 res!37135) b!69207))

(assert (= (and b!69207 res!37132) b!69208))

(assert (= (and b!69208 res!37133) b!69209))

(assert (= (and b!69209 res!37134) b!69210))

(declare-fun m!65019 () Bool)

(assert (=> b!69208 m!65019))

(assert (=> d!14899 m!64569))

(assert (=> b!69209 m!65019))

(assert (=> d!14727 d!14899))

(declare-fun d!14901 () Bool)

(declare-fun e!45321 () Bool)

(assert (=> d!14901 e!45321))

(declare-fun res!37137 () Bool)

(assert (=> d!14901 (=> (not res!37137) (not e!45321))))

(declare-fun lt!30334 () ListLongMap!1421)

(assert (=> d!14901 (= res!37137 (contains!720 lt!30334 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun lt!30335 () List!1494)

(assert (=> d!14901 (= lt!30334 (ListLongMap!1422 lt!30335))))

(declare-fun lt!30332 () Unit!1913)

(declare-fun lt!30333 () Unit!1913)

(assert (=> d!14901 (= lt!30332 lt!30333)))

(assert (=> d!14901 (= (getValueByKey!130 lt!30335 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (Some!135 (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> d!14901 (= lt!30333 (lemmaContainsTupThenGetReturnValue!49 lt!30335 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> d!14901 (= lt!30335 (insertStrictlySorted!51 (toList!726 (ite c!9749 call!5857 call!5859)) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> d!14901 (= (+!89 (ite c!9749 call!5857 call!5859) (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30334)))

(declare-fun b!69211 () Bool)

(declare-fun res!37136 () Bool)

(assert (=> b!69211 (=> (not res!37136) (not e!45321))))

(assert (=> b!69211 (= res!37136 (= (getValueByKey!130 (toList!726 lt!30334) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (Some!135 (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun b!69212 () Bool)

(assert (=> b!69212 (= e!45321 (contains!721 (toList!726 lt!30334) (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (= (and d!14901 res!37137) b!69211))

(assert (= (and b!69211 res!37136) b!69212))

(declare-fun m!65021 () Bool)

(assert (=> d!14901 m!65021))

(declare-fun m!65023 () Bool)

(assert (=> d!14901 m!65023))

(declare-fun m!65025 () Bool)

(assert (=> d!14901 m!65025))

(declare-fun m!65027 () Bool)

(assert (=> d!14901 m!65027))

(declare-fun m!65029 () Bool)

(assert (=> b!69211 m!65029))

(declare-fun m!65031 () Bool)

(assert (=> b!69212 m!65031))

(assert (=> bm!5853 d!14901))

(declare-fun d!14903 () Bool)

(declare-fun e!45322 () Bool)

(assert (=> d!14903 e!45322))

(declare-fun res!37138 () Bool)

(assert (=> d!14903 (=> res!37138 e!45322)))

(declare-fun lt!30338 () Bool)

(assert (=> d!14903 (= res!37138 (not lt!30338))))

(declare-fun lt!30339 () Bool)

(assert (=> d!14903 (= lt!30338 lt!30339)))

(declare-fun lt!30337 () Unit!1913)

(declare-fun e!45323 () Unit!1913)

(assert (=> d!14903 (= lt!30337 e!45323)))

(declare-fun c!9879 () Bool)

(assert (=> d!14903 (= c!9879 lt!30339)))

(assert (=> d!14903 (= lt!30339 (containsKey!134 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14903 (= (contains!720 lt!29926 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30338)))

(declare-fun b!69213 () Bool)

(declare-fun lt!30336 () Unit!1913)

(assert (=> b!69213 (= e!45323 lt!30336)))

(assert (=> b!69213 (= lt!30336 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69213 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69214 () Bool)

(declare-fun Unit!1941 () Unit!1913)

(assert (=> b!69214 (= e!45323 Unit!1941)))

(declare-fun b!69215 () Bool)

(assert (=> b!69215 (= e!45322 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14903 c!9879) b!69213))

(assert (= (and d!14903 (not c!9879)) b!69214))

(assert (= (and d!14903 (not res!37138)) b!69215))

(declare-fun m!65033 () Bool)

(assert (=> d!14903 m!65033))

(declare-fun m!65035 () Bool)

(assert (=> b!69213 m!65035))

(declare-fun m!65037 () Bool)

(assert (=> b!69213 m!65037))

(assert (=> b!69213 m!65037))

(declare-fun m!65039 () Bool)

(assert (=> b!69213 m!65039))

(assert (=> b!69215 m!65037))

(assert (=> b!69215 m!65037))

(assert (=> b!69215 m!65039))

(assert (=> bm!5779 d!14903))

(assert (=> d!14731 d!14721))

(declare-fun d!14905 () Bool)

(declare-fun isEmpty!317 (List!1494) Bool)

(assert (=> d!14905 (= (isEmpty!315 lt!29836) (isEmpty!317 (toList!726 lt!29836)))))

(declare-fun bs!2948 () Bool)

(assert (= bs!2948 d!14905))

(declare-fun m!65041 () Bool)

(assert (=> bs!2948 m!65041))

(assert (=> b!68534 d!14905))

(declare-fun d!14907 () Bool)

(assert (=> d!14907 (= (apply!73 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29911) (apply!73 lt!29909 lt!29911))))

(declare-fun lt!30342 () Unit!1913)

(declare-fun choose!397 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1913)

(assert (=> d!14907 (= lt!30342 (choose!397 lt!29909 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29911))))

(declare-fun e!45326 () Bool)

(assert (=> d!14907 e!45326))

(declare-fun res!37141 () Bool)

(assert (=> d!14907 (=> (not res!37141) (not e!45326))))

(assert (=> d!14907 (= res!37141 (contains!720 lt!29909 lt!29911))))

(assert (=> d!14907 (= (addApplyDifferent!49 lt!29909 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29911) lt!30342)))

(declare-fun b!69219 () Bool)

(assert (=> b!69219 (= e!45326 (not (= lt!29911 lt!29925)))))

(assert (= (and d!14907 res!37141) b!69219))

(declare-fun m!65043 () Bool)

(assert (=> d!14907 m!65043))

(assert (=> d!14907 m!64287))

(assert (=> d!14907 m!64293))

(declare-fun m!65045 () Bool)

(assert (=> d!14907 m!65045))

(assert (=> d!14907 m!64287))

(assert (=> d!14907 m!64273))

(assert (=> b!68623 d!14907))

(declare-fun d!14909 () Bool)

(assert (=> d!14909 (= (apply!73 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29920) (apply!73 lt!29912 lt!29920))))

(declare-fun lt!30343 () Unit!1913)

(assert (=> d!14909 (= lt!30343 (choose!397 lt!29912 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29920))))

(declare-fun e!45327 () Bool)

(assert (=> d!14909 e!45327))

(declare-fun res!37142 () Bool)

(assert (=> d!14909 (=> (not res!37142) (not e!45327))))

(assert (=> d!14909 (= res!37142 (contains!720 lt!29912 lt!29920))))

(assert (=> d!14909 (= (addApplyDifferent!49 lt!29912 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29920) lt!30343)))

(declare-fun b!69220 () Bool)

(assert (=> b!69220 (= e!45327 (not (= lt!29920 lt!29927)))))

(assert (= (and d!14909 res!37142) b!69220))

(declare-fun m!65047 () Bool)

(assert (=> d!14909 m!65047))

(assert (=> d!14909 m!64281))

(assert (=> d!14909 m!64295))

(declare-fun m!65049 () Bool)

(assert (=> d!14909 m!65049))

(assert (=> d!14909 m!64281))

(assert (=> d!14909 m!64267))

(assert (=> b!68623 d!14909))

(declare-fun d!14911 () Bool)

(assert (=> d!14911 (= (apply!73 lt!29909 lt!29911) (get!1137 (getValueByKey!130 (toList!726 lt!29909) lt!29911)))))

(declare-fun bs!2949 () Bool)

(assert (= bs!2949 d!14911))

(declare-fun m!65051 () Bool)

(assert (=> bs!2949 m!65051))

(assert (=> bs!2949 m!65051))

(declare-fun m!65053 () Bool)

(assert (=> bs!2949 m!65053))

(assert (=> b!68623 d!14911))

(declare-fun d!14913 () Bool)

(assert (=> d!14913 (= (apply!73 lt!29912 lt!29920) (get!1137 (getValueByKey!130 (toList!726 lt!29912) lt!29920)))))

(declare-fun bs!2950 () Bool)

(assert (= bs!2950 d!14913))

(declare-fun m!65055 () Bool)

(assert (=> bs!2950 m!65055))

(assert (=> bs!2950 m!65055))

(declare-fun m!65057 () Bool)

(assert (=> bs!2950 m!65057))

(assert (=> b!68623 d!14913))

(declare-fun d!14915 () Bool)

(declare-fun e!45328 () Bool)

(assert (=> d!14915 e!45328))

(declare-fun res!37144 () Bool)

(assert (=> d!14915 (=> (not res!37144) (not e!45328))))

(declare-fun lt!30346 () ListLongMap!1421)

(assert (=> d!14915 (= res!37144 (contains!720 lt!30346 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30347 () List!1494)

(assert (=> d!14915 (= lt!30346 (ListLongMap!1422 lt!30347))))

(declare-fun lt!30344 () Unit!1913)

(declare-fun lt!30345 () Unit!1913)

(assert (=> d!14915 (= lt!30344 lt!30345)))

(assert (=> d!14915 (= (getValueByKey!130 lt!30347 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14915 (= lt!30345 (lemmaContainsTupThenGetReturnValue!49 lt!30347 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14915 (= lt!30347 (insertStrictlySorted!51 (toList!726 lt!29924) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14915 (= (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30346)))

(declare-fun b!69221 () Bool)

(declare-fun res!37143 () Bool)

(assert (=> b!69221 (=> (not res!37143) (not e!45328))))

(assert (=> b!69221 (= res!37143 (= (getValueByKey!130 (toList!726 lt!30346) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69222 () Bool)

(assert (=> b!69222 (= e!45328 (contains!721 (toList!726 lt!30346) (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14915 res!37144) b!69221))

(assert (= (and b!69221 res!37143) b!69222))

(declare-fun m!65059 () Bool)

(assert (=> d!14915 m!65059))

(declare-fun m!65061 () Bool)

(assert (=> d!14915 m!65061))

(declare-fun m!65063 () Bool)

(assert (=> d!14915 m!65063))

(declare-fun m!65065 () Bool)

(assert (=> d!14915 m!65065))

(declare-fun m!65067 () Bool)

(assert (=> b!69221 m!65067))

(declare-fun m!65069 () Bool)

(assert (=> b!69222 m!65069))

(assert (=> b!68623 d!14915))

(declare-fun d!14917 () Bool)

(assert (=> d!14917 (contains!720 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29916)))

(declare-fun lt!30350 () Unit!1913)

(declare-fun choose!398 (ListLongMap!1421 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1913)

(assert (=> d!14917 (= lt!30350 (choose!398 lt!29924 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29916))))

(assert (=> d!14917 (contains!720 lt!29924 lt!29916)))

(assert (=> d!14917 (= (addStillContains!49 lt!29924 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29916) lt!30350)))

(declare-fun bs!2951 () Bool)

(assert (= bs!2951 d!14917))

(assert (=> bs!2951 m!64289))

(assert (=> bs!2951 m!64289))

(assert (=> bs!2951 m!64291))

(declare-fun m!65071 () Bool)

(assert (=> bs!2951 m!65071))

(declare-fun m!65073 () Bool)

(assert (=> bs!2951 m!65073))

(assert (=> b!68623 d!14917))

(declare-fun d!14919 () Bool)

(declare-fun e!45329 () Bool)

(assert (=> d!14919 e!45329))

(declare-fun res!37146 () Bool)

(assert (=> d!14919 (=> (not res!37146) (not e!45329))))

(declare-fun lt!30353 () ListLongMap!1421)

(assert (=> d!14919 (= res!37146 (contains!720 lt!30353 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30354 () List!1494)

(assert (=> d!14919 (= lt!30353 (ListLongMap!1422 lt!30354))))

(declare-fun lt!30351 () Unit!1913)

(declare-fun lt!30352 () Unit!1913)

(assert (=> d!14919 (= lt!30351 lt!30352)))

(assert (=> d!14919 (= (getValueByKey!130 lt!30354 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14919 (= lt!30352 (lemmaContainsTupThenGetReturnValue!49 lt!30354 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14919 (= lt!30354 (insertStrictlySorted!51 (toList!726 lt!29909) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14919 (= (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30353)))

(declare-fun b!69224 () Bool)

(declare-fun res!37145 () Bool)

(assert (=> b!69224 (=> (not res!37145) (not e!45329))))

(assert (=> b!69224 (= res!37145 (= (getValueByKey!130 (toList!726 lt!30353) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69225 () Bool)

(assert (=> b!69225 (= e!45329 (contains!721 (toList!726 lt!30353) (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14919 res!37146) b!69224))

(assert (= (and b!69224 res!37145) b!69225))

(declare-fun m!65075 () Bool)

(assert (=> d!14919 m!65075))

(declare-fun m!65077 () Bool)

(assert (=> d!14919 m!65077))

(declare-fun m!65079 () Bool)

(assert (=> d!14919 m!65079))

(declare-fun m!65081 () Bool)

(assert (=> d!14919 m!65081))

(declare-fun m!65083 () Bool)

(assert (=> b!69224 m!65083))

(declare-fun m!65085 () Bool)

(assert (=> b!69225 m!65085))

(assert (=> b!68623 d!14919))

(assert (=> b!68623 d!14713))

(declare-fun d!14921 () Bool)

(assert (=> d!14921 (= (apply!73 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29923) (apply!73 lt!29929 lt!29923))))

(declare-fun lt!30355 () Unit!1913)

(assert (=> d!14921 (= lt!30355 (choose!397 lt!29929 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29923))))

(declare-fun e!45330 () Bool)

(assert (=> d!14921 e!45330))

(declare-fun res!37147 () Bool)

(assert (=> d!14921 (=> (not res!37147) (not e!45330))))

(assert (=> d!14921 (= res!37147 (contains!720 lt!29929 lt!29923))))

(assert (=> d!14921 (= (addApplyDifferent!49 lt!29929 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29923) lt!30355)))

(declare-fun b!69226 () Bool)

(assert (=> b!69226 (= e!45330 (not (= lt!29923 lt!29914)))))

(assert (= (and d!14921 res!37147) b!69226))

(declare-fun m!65087 () Bool)

(assert (=> d!14921 m!65087))

(assert (=> d!14921 m!64277))

(assert (=> d!14921 m!64279))

(declare-fun m!65089 () Bool)

(assert (=> d!14921 m!65089))

(assert (=> d!14921 m!64277))

(assert (=> d!14921 m!64285))

(assert (=> b!68623 d!14921))

(declare-fun d!14923 () Bool)

(assert (=> d!14923 (= (apply!73 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29911) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29911)))))

(declare-fun bs!2952 () Bool)

(assert (= bs!2952 d!14923))

(declare-fun m!65091 () Bool)

(assert (=> bs!2952 m!65091))

(assert (=> bs!2952 m!65091))

(declare-fun m!65093 () Bool)

(assert (=> bs!2952 m!65093))

(assert (=> b!68623 d!14923))

(declare-fun d!14925 () Bool)

(assert (=> d!14925 (= (apply!73 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29923) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29923)))))

(declare-fun bs!2953 () Bool)

(assert (= bs!2953 d!14925))

(declare-fun m!65095 () Bool)

(assert (=> bs!2953 m!65095))

(assert (=> bs!2953 m!65095))

(declare-fun m!65097 () Bool)

(assert (=> bs!2953 m!65097))

(assert (=> b!68623 d!14925))

(declare-fun d!14927 () Bool)

(assert (=> d!14927 (= (apply!73 lt!29929 lt!29923) (get!1137 (getValueByKey!130 (toList!726 lt!29929) lt!29923)))))

(declare-fun bs!2954 () Bool)

(assert (= bs!2954 d!14927))

(declare-fun m!65099 () Bool)

(assert (=> bs!2954 m!65099))

(assert (=> bs!2954 m!65099))

(declare-fun m!65101 () Bool)

(assert (=> bs!2954 m!65101))

(assert (=> b!68623 d!14927))

(declare-fun d!14929 () Bool)

(declare-fun e!45331 () Bool)

(assert (=> d!14929 e!45331))

(declare-fun res!37149 () Bool)

(assert (=> d!14929 (=> (not res!37149) (not e!45331))))

(declare-fun lt!30358 () ListLongMap!1421)

(assert (=> d!14929 (= res!37149 (contains!720 lt!30358 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30359 () List!1494)

(assert (=> d!14929 (= lt!30358 (ListLongMap!1422 lt!30359))))

(declare-fun lt!30356 () Unit!1913)

(declare-fun lt!30357 () Unit!1913)

(assert (=> d!14929 (= lt!30356 lt!30357)))

(assert (=> d!14929 (= (getValueByKey!130 lt!30359 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14929 (= lt!30357 (lemmaContainsTupThenGetReturnValue!49 lt!30359 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14929 (= lt!30359 (insertStrictlySorted!51 (toList!726 lt!29912) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14929 (= (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30358)))

(declare-fun b!69227 () Bool)

(declare-fun res!37148 () Bool)

(assert (=> b!69227 (=> (not res!37148) (not e!45331))))

(assert (=> b!69227 (= res!37148 (= (getValueByKey!130 (toList!726 lt!30358) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69228 () Bool)

(assert (=> b!69228 (= e!45331 (contains!721 (toList!726 lt!30358) (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14929 res!37149) b!69227))

(assert (= (and b!69227 res!37148) b!69228))

(declare-fun m!65103 () Bool)

(assert (=> d!14929 m!65103))

(declare-fun m!65105 () Bool)

(assert (=> d!14929 m!65105))

(declare-fun m!65107 () Bool)

(assert (=> d!14929 m!65107))

(declare-fun m!65109 () Bool)

(assert (=> d!14929 m!65109))

(declare-fun m!65111 () Bool)

(assert (=> b!69227 m!65111))

(declare-fun m!65113 () Bool)

(assert (=> b!69228 m!65113))

(assert (=> b!68623 d!14929))

(declare-fun d!14931 () Bool)

(assert (=> d!14931 (= (apply!73 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29920) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29920)))))

(declare-fun bs!2955 () Bool)

(assert (= bs!2955 d!14931))

(declare-fun m!65115 () Bool)

(assert (=> bs!2955 m!65115))

(assert (=> bs!2955 m!65115))

(declare-fun m!65117 () Bool)

(assert (=> bs!2955 m!65117))

(assert (=> b!68623 d!14931))

(declare-fun d!14933 () Bool)

(declare-fun e!45332 () Bool)

(assert (=> d!14933 e!45332))

(declare-fun res!37150 () Bool)

(assert (=> d!14933 (=> res!37150 e!45332)))

(declare-fun lt!30362 () Bool)

(assert (=> d!14933 (= res!37150 (not lt!30362))))

(declare-fun lt!30363 () Bool)

(assert (=> d!14933 (= lt!30362 lt!30363)))

(declare-fun lt!30361 () Unit!1913)

(declare-fun e!45333 () Unit!1913)

(assert (=> d!14933 (= lt!30361 e!45333)))

(declare-fun c!9880 () Bool)

(assert (=> d!14933 (= c!9880 lt!30363)))

(assert (=> d!14933 (= lt!30363 (containsKey!134 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916))))

(assert (=> d!14933 (= (contains!720 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29916) lt!30362)))

(declare-fun b!69229 () Bool)

(declare-fun lt!30360 () Unit!1913)

(assert (=> b!69229 (= e!45333 lt!30360)))

(assert (=> b!69229 (= lt!30360 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916))))

(assert (=> b!69229 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916))))

(declare-fun b!69230 () Bool)

(declare-fun Unit!1942 () Unit!1913)

(assert (=> b!69230 (= e!45333 Unit!1942)))

(declare-fun b!69231 () Bool)

(assert (=> b!69231 (= e!45332 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916)))))

(assert (= (and d!14933 c!9880) b!69229))

(assert (= (and d!14933 (not c!9880)) b!69230))

(assert (= (and d!14933 (not res!37150)) b!69231))

(declare-fun m!65119 () Bool)

(assert (=> d!14933 m!65119))

(declare-fun m!65121 () Bool)

(assert (=> b!69229 m!65121))

(declare-fun m!65123 () Bool)

(assert (=> b!69229 m!65123))

(assert (=> b!69229 m!65123))

(declare-fun m!65125 () Bool)

(assert (=> b!69229 m!65125))

(assert (=> b!69231 m!65123))

(assert (=> b!69231 m!65123))

(assert (=> b!69231 m!65125))

(assert (=> b!68623 d!14933))

(declare-fun d!14935 () Bool)

(declare-fun e!45334 () Bool)

(assert (=> d!14935 e!45334))

(declare-fun res!37152 () Bool)

(assert (=> d!14935 (=> (not res!37152) (not e!45334))))

(declare-fun lt!30366 () ListLongMap!1421)

(assert (=> d!14935 (= res!37152 (contains!720 lt!30366 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30367 () List!1494)

(assert (=> d!14935 (= lt!30366 (ListLongMap!1422 lt!30367))))

(declare-fun lt!30364 () Unit!1913)

(declare-fun lt!30365 () Unit!1913)

(assert (=> d!14935 (= lt!30364 lt!30365)))

(assert (=> d!14935 (= (getValueByKey!130 lt!30367 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14935 (= lt!30365 (lemmaContainsTupThenGetReturnValue!49 lt!30367 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14935 (= lt!30367 (insertStrictlySorted!51 (toList!726 lt!29929) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!14935 (= (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30366)))

(declare-fun b!69232 () Bool)

(declare-fun res!37151 () Bool)

(assert (=> b!69232 (=> (not res!37151) (not e!45334))))

(assert (=> b!69232 (= res!37151 (= (getValueByKey!130 (toList!726 lt!30366) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69233 () Bool)

(assert (=> b!69233 (= e!45334 (contains!721 (toList!726 lt!30366) (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!14935 res!37152) b!69232))

(assert (= (and b!69232 res!37151) b!69233))

(declare-fun m!65127 () Bool)

(assert (=> d!14935 m!65127))

(declare-fun m!65129 () Bool)

(assert (=> d!14935 m!65129))

(declare-fun m!65131 () Bool)

(assert (=> d!14935 m!65131))

(declare-fun m!65133 () Bool)

(assert (=> d!14935 m!65133))

(declare-fun m!65135 () Bool)

(assert (=> b!69232 m!65135))

(declare-fun m!65137 () Bool)

(assert (=> b!69233 m!65137))

(assert (=> b!68623 d!14935))

(assert (=> b!68538 d!14793))

(declare-fun d!14937 () Bool)

(declare-fun e!45335 () Bool)

(assert (=> d!14937 e!45335))

(declare-fun res!37153 () Bool)

(assert (=> d!14937 (=> res!37153 e!45335)))

(declare-fun lt!30370 () Bool)

(assert (=> d!14937 (= res!37153 (not lt!30370))))

(declare-fun lt!30371 () Bool)

(assert (=> d!14937 (= lt!30370 lt!30371)))

(declare-fun lt!30369 () Unit!1913)

(declare-fun e!45336 () Unit!1913)

(assert (=> d!14937 (= lt!30369 e!45336)))

(declare-fun c!9881 () Bool)

(assert (=> d!14937 (= c!9881 lt!30371)))

(assert (=> d!14937 (= lt!30371 (containsKey!134 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(assert (=> d!14937 (= (contains!720 call!5844 (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))) lt!30370)))

(declare-fun b!69234 () Bool)

(declare-fun lt!30368 () Unit!1913)

(assert (=> b!69234 (= e!45336 lt!30368)))

(assert (=> b!69234 (= lt!30368 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(assert (=> b!69234 (isDefined!84 (getValueByKey!130 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(declare-fun b!69235 () Bool)

(declare-fun Unit!1943 () Unit!1913)

(assert (=> b!69235 (= e!45336 Unit!1943)))

(declare-fun b!69236 () Bool)

(assert (=> b!69236 (= e!45335 (isDefined!84 (getValueByKey!130 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))))))

(assert (= (and d!14937 c!9881) b!69234))

(assert (= (and d!14937 (not c!9881)) b!69235))

(assert (= (and d!14937 (not res!37153)) b!69236))

(assert (=> d!14937 m!64325))

(declare-fun m!65139 () Bool)

(assert (=> d!14937 m!65139))

(assert (=> b!69234 m!64325))

(declare-fun m!65141 () Bool)

(assert (=> b!69234 m!65141))

(assert (=> b!69234 m!64325))

(declare-fun m!65143 () Bool)

(assert (=> b!69234 m!65143))

(assert (=> b!69234 m!65143))

(declare-fun m!65145 () Bool)

(assert (=> b!69234 m!65145))

(assert (=> b!69236 m!64325))

(assert (=> b!69236 m!65143))

(assert (=> b!69236 m!65143))

(assert (=> b!69236 m!65145))

(assert (=> b!68754 d!14937))

(declare-fun d!14939 () Bool)

(declare-fun e!45339 () Bool)

(assert (=> d!14939 e!45339))

(declare-fun res!37156 () Bool)

(assert (=> d!14939 (=> (not res!37156) (not e!45339))))

(assert (=> d!14939 (= res!37156 (and (bvsge (index!3106 lt!30007) #b00000000000000000000000000000000) (bvslt (index!3106 lt!30007) (size!2076 (_keys!3812 newMap!16)))))))

(declare-fun lt!30374 () Unit!1913)

(declare-fun choose!399 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) Unit!1913)

(assert (=> d!14939 (= lt!30374 (choose!399 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14939 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14939 (= (lemmaValidKeyInArrayIsInListMap!80 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (defaultEntry!2168 newMap!16)) lt!30374)))

(declare-fun b!69239 () Bool)

(assert (=> b!69239 (= e!45339 (contains!720 (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(assert (= (and d!14939 res!37156) b!69239))

(declare-fun m!65147 () Bool)

(assert (=> d!14939 m!65147))

(assert (=> d!14939 m!64569))

(declare-fun m!65149 () Bool)

(assert (=> b!69239 m!65149))

(assert (=> b!69239 m!64325))

(assert (=> b!69239 m!65149))

(assert (=> b!69239 m!64325))

(declare-fun m!65151 () Bool)

(assert (=> b!69239 m!65151))

(assert (=> b!68754 d!14939))

(declare-fun b!69240 () Bool)

(declare-fun res!37159 () Bool)

(declare-fun e!45342 () Bool)

(assert (=> b!69240 (=> (not res!37159) (not e!45342))))

(declare-fun e!45347 () Bool)

(assert (=> b!69240 (= res!37159 e!45347)))

(declare-fun c!9884 () Bool)

(assert (=> b!69240 (= c!9884 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69241 () Bool)

(declare-fun res!37164 () Bool)

(assert (=> b!69241 (=> (not res!37164) (not e!45342))))

(declare-fun e!45348 () Bool)

(assert (=> b!69241 (= res!37164 e!45348)))

(declare-fun res!37165 () Bool)

(assert (=> b!69241 (=> res!37165 e!45348)))

(declare-fun e!45352 () Bool)

(assert (=> b!69241 (= res!37165 (not e!45352))))

(declare-fun res!37162 () Bool)

(assert (=> b!69241 (=> (not res!37162) (not e!45352))))

(assert (=> b!69241 (= res!37162 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5920 () Bool)

(declare-fun call!5924 () ListLongMap!1421)

(declare-fun call!5926 () ListLongMap!1421)

(assert (=> bm!5920 (= call!5924 call!5926)))

(declare-fun b!69243 () Bool)

(declare-fun e!45346 () ListLongMap!1421)

(declare-fun call!5923 () ListLongMap!1421)

(assert (=> b!69243 (= e!45346 call!5923)))

(declare-fun b!69244 () Bool)

(declare-fun e!45351 () ListLongMap!1421)

(declare-fun e!45341 () ListLongMap!1421)

(assert (=> b!69244 (= e!45351 e!45341)))

(declare-fun c!9887 () Bool)

(assert (=> b!69244 (= c!9887 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5921 () Bool)

(declare-fun call!5928 () Bool)

(declare-fun lt!30393 () ListLongMap!1421)

(assert (=> bm!5921 (= call!5928 (contains!720 lt!30393 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69245 () Bool)

(assert (=> b!69245 (= e!45341 call!5923)))

(declare-fun b!69246 () Bool)

(declare-fun e!45340 () Bool)

(declare-fun e!45344 () Bool)

(assert (=> b!69246 (= e!45340 e!45344)))

(declare-fun res!37160 () Bool)

(assert (=> b!69246 (= res!37160 call!5928)))

(assert (=> b!69246 (=> (not res!37160) (not e!45344))))

(declare-fun b!69247 () Bool)

(declare-fun call!5925 () ListLongMap!1421)

(assert (=> b!69247 (= e!45346 call!5925)))

(declare-fun e!45345 () Bool)

(declare-fun b!69248 () Bool)

(assert (=> b!69248 (= e!45345 (= (apply!73 lt!30393 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69248 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))))))))

(assert (=> b!69248 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69249 () Bool)

(assert (=> b!69249 (= e!45342 e!45340)))

(declare-fun c!9885 () Bool)

(assert (=> b!69249 (= c!9885 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14941 () Bool)

(assert (=> d!14941 e!45342))

(declare-fun res!37163 () Bool)

(assert (=> d!14941 (=> (not res!37163) (not e!45342))))

(assert (=> d!14941 (= res!37163 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun lt!30385 () ListLongMap!1421)

(assert (=> d!14941 (= lt!30393 lt!30385)))

(declare-fun lt!30389 () Unit!1913)

(declare-fun e!45343 () Unit!1913)

(assert (=> d!14941 (= lt!30389 e!45343)))

(declare-fun c!9886 () Bool)

(declare-fun e!45349 () Bool)

(assert (=> d!14941 (= c!9886 e!45349)))

(declare-fun res!37161 () Bool)

(assert (=> d!14941 (=> (not res!37161) (not e!45349))))

(assert (=> d!14941 (= res!37161 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14941 (= lt!30385 e!45351)))

(declare-fun c!9883 () Bool)

(assert (=> d!14941 (= c!9883 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14941 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14941 (= (getCurrentListMap!421 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30393)))

(declare-fun b!69242 () Bool)

(assert (=> b!69242 (= e!45340 (not call!5928))))

(declare-fun bm!5922 () Bool)

(assert (=> bm!5922 (= call!5925 call!5924)))

(declare-fun bm!5923 () Bool)

(assert (=> bm!5923 (= call!5926 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69250 () Bool)

(declare-fun Unit!1944 () Unit!1913)

(assert (=> b!69250 (= e!45343 Unit!1944)))

(declare-fun b!69251 () Bool)

(declare-fun e!45350 () Bool)

(assert (=> b!69251 (= e!45347 e!45350)))

(declare-fun res!37158 () Bool)

(declare-fun call!5929 () Bool)

(assert (=> b!69251 (= res!37158 call!5929)))

(assert (=> b!69251 (=> (not res!37158) (not e!45350))))

(declare-fun b!69252 () Bool)

(assert (=> b!69252 (= e!45344 (= (apply!73 lt!30393 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69253 () Bool)

(assert (=> b!69253 (= e!45352 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5924 () Bool)

(assert (=> bm!5924 (= call!5929 (contains!720 lt!30393 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69254 () Bool)

(declare-fun c!9882 () Bool)

(assert (=> b!69254 (= c!9882 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69254 (= e!45341 e!45346)))

(declare-fun bm!5925 () Bool)

(declare-fun call!5927 () ListLongMap!1421)

(assert (=> bm!5925 (= call!5927 (+!89 (ite c!9883 call!5926 (ite c!9887 call!5924 call!5925)) (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun b!69255 () Bool)

(assert (=> b!69255 (= e!45351 (+!89 call!5927 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69256 () Bool)

(declare-fun lt!30384 () Unit!1913)

(assert (=> b!69256 (= e!45343 lt!30384)))

(declare-fun lt!30391 () ListLongMap!1421)

(assert (=> b!69256 (= lt!30391 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30377 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30377 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30383 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30383 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30395 () Unit!1913)

(assert (=> b!69256 (= lt!30395 (addStillContains!49 lt!30391 lt!30377 (zeroValue!2074 newMap!16) lt!30383))))

(assert (=> b!69256 (contains!720 (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))) lt!30383)))

(declare-fun lt!30382 () Unit!1913)

(assert (=> b!69256 (= lt!30382 lt!30395)))

(declare-fun lt!30379 () ListLongMap!1421)

(assert (=> b!69256 (= lt!30379 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30394 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30394 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30387 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30387 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30375 () Unit!1913)

(assert (=> b!69256 (= lt!30375 (addApplyDifferent!49 lt!30379 lt!30394 (minValue!2074 newMap!16) lt!30387))))

(assert (=> b!69256 (= (apply!73 (+!89 lt!30379 (tuple2!2119 lt!30394 (minValue!2074 newMap!16))) lt!30387) (apply!73 lt!30379 lt!30387))))

(declare-fun lt!30380 () Unit!1913)

(assert (=> b!69256 (= lt!30380 lt!30375)))

(declare-fun lt!30376 () ListLongMap!1421)

(assert (=> b!69256 (= lt!30376 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30392 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30392 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30378 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30378 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30388 () Unit!1913)

(assert (=> b!69256 (= lt!30388 (addApplyDifferent!49 lt!30376 lt!30392 (zeroValue!2074 newMap!16) lt!30378))))

(assert (=> b!69256 (= (apply!73 (+!89 lt!30376 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))) lt!30378) (apply!73 lt!30376 lt!30378))))

(declare-fun lt!30386 () Unit!1913)

(assert (=> b!69256 (= lt!30386 lt!30388)))

(declare-fun lt!30396 () ListLongMap!1421)

(assert (=> b!69256 (= lt!30396 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30381 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30381 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30390 () (_ BitVec 64))

(assert (=> b!69256 (= lt!30390 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69256 (= lt!30384 (addApplyDifferent!49 lt!30396 lt!30381 (minValue!2074 newMap!16) lt!30390))))

(assert (=> b!69256 (= (apply!73 (+!89 lt!30396 (tuple2!2119 lt!30381 (minValue!2074 newMap!16))) lt!30390) (apply!73 lt!30396 lt!30390))))

(declare-fun b!69257 () Bool)

(assert (=> b!69257 (= e!45349 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5926 () Bool)

(assert (=> bm!5926 (= call!5923 call!5927)))

(declare-fun b!69258 () Bool)

(assert (=> b!69258 (= e!45347 (not call!5929))))

(declare-fun b!69259 () Bool)

(assert (=> b!69259 (= e!45350 (= (apply!73 lt!30393 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69260 () Bool)

(assert (=> b!69260 (= e!45348 e!45345)))

(declare-fun res!37157 () Bool)

(assert (=> b!69260 (=> (not res!37157) (not e!45345))))

(assert (=> b!69260 (= res!37157 (contains!720 lt!30393 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69260 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!14941 c!9883) b!69255))

(assert (= (and d!14941 (not c!9883)) b!69244))

(assert (= (and b!69244 c!9887) b!69245))

(assert (= (and b!69244 (not c!9887)) b!69254))

(assert (= (and b!69254 c!9882) b!69243))

(assert (= (and b!69254 (not c!9882)) b!69247))

(assert (= (or b!69243 b!69247) bm!5922))

(assert (= (or b!69245 bm!5922) bm!5920))

(assert (= (or b!69245 b!69243) bm!5926))

(assert (= (or b!69255 bm!5920) bm!5923))

(assert (= (or b!69255 bm!5926) bm!5925))

(assert (= (and d!14941 res!37161) b!69257))

(assert (= (and d!14941 c!9886) b!69256))

(assert (= (and d!14941 (not c!9886)) b!69250))

(assert (= (and d!14941 res!37163) b!69241))

(assert (= (and b!69241 res!37162) b!69253))

(assert (= (and b!69241 (not res!37165)) b!69260))

(assert (= (and b!69260 res!37157) b!69248))

(assert (= (and b!69241 res!37164) b!69240))

(assert (= (and b!69240 c!9884) b!69251))

(assert (= (and b!69240 (not c!9884)) b!69258))

(assert (= (and b!69251 res!37158) b!69259))

(assert (= (or b!69251 b!69258) bm!5924))

(assert (= (and b!69240 res!37159) b!69249))

(assert (= (and b!69249 c!9885) b!69246))

(assert (= (and b!69249 (not c!9885)) b!69242))

(assert (= (and b!69246 res!37160) b!69252))

(assert (= (or b!69246 b!69242) bm!5921))

(declare-fun b_lambda!3103 () Bool)

(assert (=> (not b_lambda!3103) (not b!69248)))

(assert (=> b!69248 t!5009))

(declare-fun b_and!4257 () Bool)

(assert (= b_and!4253 (and (=> t!5009 result!2623) b_and!4257)))

(assert (=> b!69248 t!5011))

(declare-fun b_and!4259 () Bool)

(assert (= b_and!4255 (and (=> t!5011 result!2625) b_and!4259)))

(assert (=> b!69260 m!64555))

(assert (=> b!69260 m!64555))

(declare-fun m!65153 () Bool)

(assert (=> b!69260 m!65153))

(declare-fun m!65155 () Bool)

(assert (=> b!69252 m!65155))

(declare-fun m!65157 () Bool)

(assert (=> b!69259 m!65157))

(declare-fun m!65159 () Bool)

(assert (=> bm!5925 m!65159))

(assert (=> d!14941 m!64569))

(declare-fun m!65161 () Bool)

(assert (=> bm!5924 m!65161))

(assert (=> b!69248 m!64555))

(assert (=> b!69248 m!64699))

(assert (=> b!69248 m!64555))

(declare-fun m!65163 () Bool)

(assert (=> b!69248 m!65163))

(declare-fun m!65165 () Bool)

(assert (=> b!69248 m!65165))

(assert (=> b!69248 m!65165))

(assert (=> b!69248 m!64699))

(declare-fun m!65167 () Bool)

(assert (=> b!69248 m!65167))

(declare-fun m!65169 () Bool)

(assert (=> b!69255 m!65169))

(assert (=> b!69256 m!64555))

(declare-fun m!65171 () Bool)

(assert (=> b!69256 m!65171))

(declare-fun m!65173 () Bool)

(assert (=> b!69256 m!65173))

(declare-fun m!65175 () Bool)

(assert (=> b!69256 m!65175))

(declare-fun m!65177 () Bool)

(assert (=> b!69256 m!65177))

(declare-fun m!65179 () Bool)

(assert (=> b!69256 m!65179))

(declare-fun m!65181 () Bool)

(assert (=> b!69256 m!65181))

(declare-fun m!65183 () Bool)

(assert (=> b!69256 m!65183))

(declare-fun m!65185 () Bool)

(assert (=> b!69256 m!65185))

(declare-fun m!65187 () Bool)

(assert (=> b!69256 m!65187))

(declare-fun m!65189 () Bool)

(assert (=> b!69256 m!65189))

(declare-fun m!65191 () Bool)

(assert (=> b!69256 m!65191))

(declare-fun m!65193 () Bool)

(assert (=> b!69256 m!65193))

(assert (=> b!69256 m!65183))

(declare-fun m!65195 () Bool)

(assert (=> b!69256 m!65195))

(declare-fun m!65197 () Bool)

(assert (=> b!69256 m!65197))

(assert (=> b!69256 m!65193))

(declare-fun m!65199 () Bool)

(assert (=> b!69256 m!65199))

(assert (=> b!69256 m!65195))

(assert (=> b!69256 m!65187))

(declare-fun m!65201 () Bool)

(assert (=> b!69256 m!65201))

(assert (=> b!69257 m!64555))

(assert (=> b!69257 m!64555))

(assert (=> b!69257 m!64607))

(assert (=> b!69253 m!64555))

(assert (=> b!69253 m!64555))

(assert (=> b!69253 m!64607))

(declare-fun m!65203 () Bool)

(assert (=> bm!5921 m!65203))

(assert (=> bm!5923 m!65179))

(assert (=> b!68754 d!14941))

(declare-fun d!14943 () Bool)

(declare-fun e!45355 () Bool)

(assert (=> d!14943 e!45355))

(declare-fun res!37168 () Bool)

(assert (=> d!14943 (=> (not res!37168) (not e!45355))))

(assert (=> d!14943 (= res!37168 (and (bvsge (index!3106 lt!30007) #b00000000000000000000000000000000) (bvslt (index!3106 lt!30007) (size!2077 (_values!2151 newMap!16)))))))

(declare-fun lt!30399 () Unit!1913)

(declare-fun choose!400 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1913)

(assert (=> d!14943 (= lt!30399 (choose!400 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (defaultEntry!2168 newMap!16)))))

(assert (=> d!14943 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14943 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (defaultEntry!2168 newMap!16)) lt!30399)))

(declare-fun b!69263 () Bool)

(assert (=> b!69263 (= e!45355 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (getCurrentListMap!421 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))))

(assert (= (and d!14943 res!37168) b!69263))

(assert (=> d!14943 m!64043))

(declare-fun m!65205 () Bool)

(assert (=> d!14943 m!65205))

(assert (=> d!14943 m!64569))

(assert (=> b!69263 m!64251))

(assert (=> b!69263 m!64251))

(assert (=> b!69263 m!64463))

(assert (=> b!69263 m!64323))

(assert (=> b!69263 m!64333))

(assert (=> b!68754 d!14943))

(declare-fun d!14945 () Bool)

(assert (=> d!14945 (= (inRange!0 (ite c!9756 (ite c!9755 (index!3106 lt!30025) (ite c!9753 (index!3105 lt!30013) (index!3108 lt!30013))) (ite c!9759 (index!3106 lt!30010) (ite c!9748 (index!3105 lt!30005) (index!3108 lt!30005)))) (mask!6113 newMap!16)) (and (bvsge (ite c!9756 (ite c!9755 (index!3106 lt!30025) (ite c!9753 (index!3105 lt!30013) (index!3108 lt!30013))) (ite c!9759 (index!3106 lt!30010) (ite c!9748 (index!3105 lt!30005) (index!3108 lt!30005)))) #b00000000000000000000000000000000) (bvslt (ite c!9756 (ite c!9755 (index!3106 lt!30025) (ite c!9753 (index!3105 lt!30013) (index!3108 lt!30013))) (ite c!9759 (index!3106 lt!30010) (ite c!9748 (index!3105 lt!30005) (index!3108 lt!30005)))) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5854 d!14945))

(declare-fun b!69272 () Bool)

(declare-fun e!45363 () Bool)

(declare-fun e!45362 () Bool)

(assert (=> b!69272 (= e!45363 e!45362)))

(declare-fun c!9890 () Bool)

(assert (=> b!69272 (= c!9890 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69273 () Bool)

(declare-fun call!5932 () Bool)

(assert (=> b!69273 (= e!45362 call!5932)))

(declare-fun b!69274 () Bool)

(declare-fun e!45364 () Bool)

(assert (=> b!69274 (= e!45362 e!45364)))

(declare-fun lt!30408 () (_ BitVec 64))

(assert (=> b!69274 (= lt!30408 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30406 () Unit!1913)

(assert (=> b!69274 (= lt!30406 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 newMap!16) lt!30408 #b00000000000000000000000000000000))))

(assert (=> b!69274 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30408 #b00000000000000000000000000000000)))

(declare-fun lt!30407 () Unit!1913)

(assert (=> b!69274 (= lt!30407 lt!30406)))

(declare-fun res!37173 () Bool)

(assert (=> b!69274 (= res!37173 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!69274 (=> (not res!37173) (not e!45364))))

(declare-fun bm!5929 () Bool)

(assert (=> bm!5929 (= call!5932 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!69275 () Bool)

(assert (=> b!69275 (= e!45364 call!5932)))

(declare-fun d!14947 () Bool)

(declare-fun res!37174 () Bool)

(assert (=> d!14947 (=> res!37174 e!45363)))

(assert (=> d!14947 (= res!37174 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!14947 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 newMap!16) (mask!6113 newMap!16)) e!45363)))

(assert (= (and d!14947 (not res!37174)) b!69272))

(assert (= (and b!69272 c!9890) b!69274))

(assert (= (and b!69272 (not c!9890)) b!69273))

(assert (= (and b!69274 res!37173) b!69275))

(assert (= (or b!69275 b!69273) bm!5929))

(assert (=> b!69272 m!64555))

(assert (=> b!69272 m!64555))

(assert (=> b!69272 m!64607))

(assert (=> b!69274 m!64555))

(declare-fun m!65207 () Bool)

(assert (=> b!69274 m!65207))

(declare-fun m!65209 () Bool)

(assert (=> b!69274 m!65209))

(assert (=> b!69274 m!64555))

(declare-fun m!65211 () Bool)

(assert (=> b!69274 m!65211))

(declare-fun m!65213 () Bool)

(assert (=> bm!5929 m!65213))

(assert (=> b!68563 d!14947))

(declare-fun b!69279 () Bool)

(declare-fun e!45366 () Option!136)

(assert (=> b!69279 (= e!45366 None!134)))

(declare-fun d!14949 () Bool)

(declare-fun c!9891 () Bool)

(assert (=> d!14949 (= c!9891 (and ((_ is Cons!1490) (toList!726 lt!29862)) (= (_1!1069 (h!2075 (toList!726 lt!29862))) (_1!1069 lt!29777))))))

(declare-fun e!45365 () Option!136)

(assert (=> d!14949 (= (getValueByKey!130 (toList!726 lt!29862) (_1!1069 lt!29777)) e!45365)))

(declare-fun b!69276 () Bool)

(assert (=> b!69276 (= e!45365 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29862)))))))

(declare-fun b!69278 () Bool)

(assert (=> b!69278 (= e!45366 (getValueByKey!130 (t!5001 (toList!726 lt!29862)) (_1!1069 lt!29777)))))

(declare-fun b!69277 () Bool)

(assert (=> b!69277 (= e!45365 e!45366)))

(declare-fun c!9892 () Bool)

(assert (=> b!69277 (= c!9892 (and ((_ is Cons!1490) (toList!726 lt!29862)) (not (= (_1!1069 (h!2075 (toList!726 lt!29862))) (_1!1069 lt!29777)))))))

(assert (= (and d!14949 c!9891) b!69276))

(assert (= (and d!14949 (not c!9891)) b!69277))

(assert (= (and b!69277 c!9892) b!69278))

(assert (= (and b!69277 (not c!9892)) b!69279))

(declare-fun m!65215 () Bool)

(assert (=> b!69278 m!65215))

(assert (=> b!68554 d!14949))

(declare-fun d!14951 () Bool)

(declare-fun res!37175 () Bool)

(declare-fun e!45367 () Bool)

(assert (=> d!14951 (=> (not res!37175) (not e!45367))))

(assert (=> d!14951 (= res!37175 (simpleValid!48 (_2!1070 lt!30024)))))

(assert (=> d!14951 (= (valid!282 (_2!1070 lt!30024)) e!45367)))

(declare-fun b!69280 () Bool)

(declare-fun res!37176 () Bool)

(assert (=> b!69280 (=> (not res!37176) (not e!45367))))

(assert (=> b!69280 (= res!37176 (= (arrayCountValidKeys!0 (_keys!3812 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))) (_size!388 (_2!1070 lt!30024))))))

(declare-fun b!69281 () Bool)

(declare-fun res!37177 () Bool)

(assert (=> b!69281 (=> (not res!37177) (not e!45367))))

(assert (=> b!69281 (= res!37177 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024))))))

(declare-fun b!69282 () Bool)

(assert (=> b!69282 (= e!45367 (arrayNoDuplicates!0 (_keys!3812 (_2!1070 lt!30024)) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!14951 res!37175) b!69280))

(assert (= (and b!69280 res!37176) b!69281))

(assert (= (and b!69281 res!37177) b!69282))

(declare-fun m!65217 () Bool)

(assert (=> d!14951 m!65217))

(declare-fun m!65219 () Bool)

(assert (=> b!69280 m!65219))

(declare-fun m!65221 () Bool)

(assert (=> b!69281 m!65221))

(declare-fun m!65223 () Bool)

(assert (=> b!69282 m!65223))

(assert (=> d!14749 d!14951))

(assert (=> d!14749 d!14727))

(declare-fun d!14953 () Bool)

(declare-fun res!37178 () Bool)

(declare-fun e!45368 () Bool)

(assert (=> d!14953 (=> (not res!37178) (not e!45368))))

(assert (=> d!14953 (= res!37178 (simpleValid!48 (v!2495 (underlying!255 thiss!992))))))

(assert (=> d!14953 (= (valid!282 (v!2495 (underlying!255 thiss!992))) e!45368)))

(declare-fun b!69283 () Bool)

(declare-fun res!37179 () Bool)

(assert (=> b!69283 (=> (not res!37179) (not e!45368))))

(assert (=> b!69283 (= res!37179 (= (arrayCountValidKeys!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))) (_size!388 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!69284 () Bool)

(declare-fun res!37180 () Bool)

(assert (=> b!69284 (=> (not res!37180) (not e!45368))))

(assert (=> b!69284 (= res!37180 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!69285 () Bool)

(assert (=> b!69285 (= e!45368 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!14953 res!37178) b!69283))

(assert (= (and b!69283 res!37179) b!69284))

(assert (= (and b!69284 res!37180) b!69285))

(declare-fun m!65225 () Bool)

(assert (=> d!14953 m!65225))

(declare-fun m!65227 () Bool)

(assert (=> b!69283 m!65227))

(declare-fun m!65229 () Bool)

(assert (=> b!69284 m!65229))

(declare-fun m!65231 () Bool)

(assert (=> b!69285 m!65231))

(assert (=> d!14711 d!14953))

(declare-fun b!69289 () Bool)

(declare-fun e!45370 () Option!136)

(assert (=> b!69289 (= e!45370 None!134)))

(declare-fun d!14955 () Bool)

(declare-fun c!9893 () Bool)

(assert (=> d!14955 (= c!9893 (and ((_ is Cons!1490) (toList!726 lt!29858)) (= (_1!1069 (h!2075 (toList!726 lt!29858))) (_1!1069 lt!29775))))))

(declare-fun e!45369 () Option!136)

(assert (=> d!14955 (= (getValueByKey!130 (toList!726 lt!29858) (_1!1069 lt!29775)) e!45369)))

(declare-fun b!69286 () Bool)

(assert (=> b!69286 (= e!45369 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29858)))))))

(declare-fun b!69288 () Bool)

(assert (=> b!69288 (= e!45370 (getValueByKey!130 (t!5001 (toList!726 lt!29858)) (_1!1069 lt!29775)))))

(declare-fun b!69287 () Bool)

(assert (=> b!69287 (= e!45369 e!45370)))

(declare-fun c!9894 () Bool)

(assert (=> b!69287 (= c!9894 (and ((_ is Cons!1490) (toList!726 lt!29858)) (not (= (_1!1069 (h!2075 (toList!726 lt!29858))) (_1!1069 lt!29775)))))))

(assert (= (and d!14955 c!9893) b!69286))

(assert (= (and d!14955 (not c!9893)) b!69287))

(assert (= (and b!69287 c!9894) b!69288))

(assert (= (and b!69287 (not c!9894)) b!69289))

(declare-fun m!65233 () Bool)

(assert (=> b!69288 m!65233))

(assert (=> b!68552 d!14955))

(assert (=> d!14737 d!14741))

(declare-fun d!14957 () Bool)

(assert (=> d!14957 (not (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!14957 true))

(declare-fun _$68!49 () Unit!1913)

(assert (=> d!14957 (= (choose!68 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492)) _$68!49)))

(declare-fun bs!2956 () Bool)

(assert (= bs!2956 d!14957))

(assert (=> bs!2956 m!64043))

(assert (=> bs!2956 m!64061))

(assert (=> d!14737 d!14957))

(declare-fun d!14959 () Bool)

(declare-fun e!45371 () Bool)

(assert (=> d!14959 e!45371))

(declare-fun res!37182 () Bool)

(assert (=> d!14959 (=> (not res!37182) (not e!45371))))

(declare-fun lt!30411 () ListLongMap!1421)

(assert (=> d!14959 (= res!37182 (contains!720 lt!30411 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!30412 () List!1494)

(assert (=> d!14959 (= lt!30411 (ListLongMap!1422 lt!30412))))

(declare-fun lt!30409 () Unit!1913)

(declare-fun lt!30410 () Unit!1913)

(assert (=> d!14959 (= lt!30409 lt!30410)))

(assert (=> d!14959 (= (getValueByKey!130 lt!30412 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14959 (= lt!30410 (lemmaContainsTupThenGetReturnValue!49 lt!30412 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14959 (= lt!30412 (insertStrictlySorted!51 (toList!726 call!5845) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!14959 (= (+!89 call!5845 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30411)))

(declare-fun b!69290 () Bool)

(declare-fun res!37181 () Bool)

(assert (=> b!69290 (=> (not res!37181) (not e!45371))))

(assert (=> b!69290 (= res!37181 (= (getValueByKey!130 (toList!726 lt!30411) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69291 () Bool)

(assert (=> b!69291 (= e!45371 (contains!721 (toList!726 lt!30411) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!14959 res!37182) b!69290))

(assert (= (and b!69290 res!37181) b!69291))

(declare-fun m!65235 () Bool)

(assert (=> d!14959 m!65235))

(declare-fun m!65237 () Bool)

(assert (=> d!14959 m!65237))

(declare-fun m!65239 () Bool)

(assert (=> d!14959 m!65239))

(declare-fun m!65241 () Bool)

(assert (=> d!14959 m!65241))

(declare-fun m!65243 () Bool)

(assert (=> b!69290 m!65243))

(declare-fun m!65245 () Bool)

(assert (=> b!69291 m!65245))

(assert (=> b!68772 d!14959))

(declare-fun d!14961 () Bool)

(assert (=> d!14961 (= (apply!73 lt!29926 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2957 () Bool)

(assert (= bs!2957 d!14961))

(assert (=> bs!2957 m!65037))

(assert (=> bs!2957 m!65037))

(declare-fun m!65247 () Bool)

(assert (=> bs!2957 m!65247))

(assert (=> b!68626 d!14961))

(declare-fun mapNonEmpty!3113 () Bool)

(declare-fun mapRes!3113 () Bool)

(declare-fun tp!8423 () Bool)

(declare-fun e!45372 () Bool)

(assert (=> mapNonEmpty!3113 (= mapRes!3113 (and tp!8423 e!45372))))

(declare-fun mapRest!3113 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3113 () ValueCell!885)

(declare-fun mapKey!3113 () (_ BitVec 32))

(assert (=> mapNonEmpty!3113 (= mapRest!3111 (store mapRest!3113 mapKey!3113 mapValue!3113))))

(declare-fun mapIsEmpty!3113 () Bool)

(assert (=> mapIsEmpty!3113 mapRes!3113))

(declare-fun condMapEmpty!3113 () Bool)

(declare-fun mapDefault!3113 () ValueCell!885)

(assert (=> mapNonEmpty!3111 (= condMapEmpty!3113 (= mapRest!3111 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3113)))))

(declare-fun e!45373 () Bool)

(assert (=> mapNonEmpty!3111 (= tp!8421 (and e!45373 mapRes!3113))))

(declare-fun b!69292 () Bool)

(assert (=> b!69292 (= e!45372 tp_is_empty!2457)))

(declare-fun b!69293 () Bool)

(assert (=> b!69293 (= e!45373 tp_is_empty!2457)))

(assert (= (and mapNonEmpty!3111 condMapEmpty!3113) mapIsEmpty!3113))

(assert (= (and mapNonEmpty!3111 (not condMapEmpty!3113)) mapNonEmpty!3113))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!885) mapValue!3113)) b!69292))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!885) mapDefault!3113)) b!69293))

(declare-fun m!65249 () Bool)

(assert (=> mapNonEmpty!3113 m!65249))

(declare-fun mapNonEmpty!3114 () Bool)

(declare-fun mapRes!3114 () Bool)

(declare-fun tp!8424 () Bool)

(declare-fun e!45374 () Bool)

(assert (=> mapNonEmpty!3114 (= mapRes!3114 (and tp!8424 e!45374))))

(declare-fun mapKey!3114 () (_ BitVec 32))

(declare-fun mapValue!3114 () ValueCell!885)

(declare-fun mapRest!3114 () (Array (_ BitVec 32) ValueCell!885))

(assert (=> mapNonEmpty!3114 (= mapRest!3112 (store mapRest!3114 mapKey!3114 mapValue!3114))))

(declare-fun mapIsEmpty!3114 () Bool)

(assert (=> mapIsEmpty!3114 mapRes!3114))

(declare-fun condMapEmpty!3114 () Bool)

(declare-fun mapDefault!3114 () ValueCell!885)

(assert (=> mapNonEmpty!3112 (= condMapEmpty!3114 (= mapRest!3112 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3114)))))

(declare-fun e!45375 () Bool)

(assert (=> mapNonEmpty!3112 (= tp!8422 (and e!45375 mapRes!3114))))

(declare-fun b!69294 () Bool)

(assert (=> b!69294 (= e!45374 tp_is_empty!2457)))

(declare-fun b!69295 () Bool)

(assert (=> b!69295 (= e!45375 tp_is_empty!2457)))

(assert (= (and mapNonEmpty!3112 condMapEmpty!3114) mapIsEmpty!3114))

(assert (= (and mapNonEmpty!3112 (not condMapEmpty!3114)) mapNonEmpty!3114))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!885) mapValue!3114)) b!69294))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!885) mapDefault!3114)) b!69295))

(declare-fun m!65251 () Bool)

(assert (=> mapNonEmpty!3114 m!65251))

(declare-fun b_lambda!3105 () Bool)

(assert (= b_lambda!3099 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3105)))

(declare-fun b_lambda!3107 () Bool)

(assert (= b_lambda!3101 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3107)))

(declare-fun b_lambda!3109 () Bool)

(assert (= b_lambda!3093 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3109)))

(declare-fun b_lambda!3111 () Bool)

(assert (= b_lambda!3097 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3111)))

(declare-fun b_lambda!3113 () Bool)

(assert (= b_lambda!3095 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3113)))

(declare-fun b_lambda!3115 () Bool)

(assert (= b_lambda!3103 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3115)))

(check-sat (not b!69227) (not d!14815) (not d!14909) (not b!68827) (not d!14767) (not bm!5929) (not bm!5925) (not bm!5923) (not b!69180) (not b!68821) (not b!68801) (not d!14897) (not d!14759) (not d!14843) (not b_lambda!3091) (not d!14881) (not b!69112) (not b!69186) (not bm!5876) (not b!69291) (not b!68918) (not d!14893) (not bm!5908) (not b!69093) (not b!69086) tp_is_empty!2457 (not b!69067) (not bm!5904) (not bm!5924) (not b!69260) (not d!14863) (not b!69232) (not d!14903) (not b!68905) (not b!68929) (not bm!5894) (not d!14931) (not d!14857) (not d!14941) (not b!69094) (not b!69172) (not d!14779) (not mapNonEmpty!3113) (not b!69099) (not b!69236) (not b!69029) (not b!69076) (not b!68909) (not b_lambda!3087) (not b!69166) (not b!69088) (not b!69101) (not b!68802) (not b!69021) (not b!68915) (not b!69153) (not b!69234) (not b!69122) (not b!69091) (not d!14937) (not bm!5901) (not d!14839) (not d!14795) (not b!69037) (not bm!5921) (not b!68926) (not b!69096) (not b!69013) (not b_next!2081) (not b!69174) (not b!68988) (not b!69209) (not b!69178) (not b!68983) (not b!69144) (not b!69053) (not bm!5874) (not b!69104) (not b!68805) (not b_lambda!3111) (not d!14877) (not b!69024) (not b!69139) (not b!68922) (not d!14891) (not b!69022) (not b!69197) (not b!69006) (not b_lambda!3089) (not b!69030) (not b!68896) (not b!68919) (not d!14883) (not bm!5918) (not b!69282) (not b!69257) (not d!14899) (not bm!5887) (not b!69229) (not d!14935) b_and!4257 (not mapNonEmpty!3114) (not b!69274) (not b!69255) (not d!14829) (not b!68858) (not b!68804) (not b!69224) (not b!68976) (not b!69198) (not b!69278) b_and!4259 (not d!14773) (not b!68914) (not b!69147) (not b!68808) (not b!69196) (not b_lambda!3115) (not d!14811) (not b!68800) (not b!69046) (not b!69151) (not b!69222) (not b!69263) (not d!14827) (not bm!5878) (not d!14851) (not b!69248) (not d!14835) (not b!68901) (not b!69115) (not d!14933) (not b!68810) (not b_lambda!3109) (not d!14927) (not b!69057) (not b!69175) (not b!69011) (not d!14961) (not b!69281) (not d!14803) (not d!14825) (not bm!5864) (not b!68996) (not d!14865) (not bm!5899) (not b!69054) (not b!69233) (not d!14789) (not bm!5892) (not bm!5911) (not b!69159) (not d!14771) (not b!68916) (not d!14879) (not b!69156) (not b!69012) (not d!14943) (not b!69177) (not d!14833) (not b!69272) (not b!69050) (not b!69143) (not b!68986) (not b!69018) (not bm!5884) (not b!68803) (not b_lambda!3079) (not b!69113) (not b!69208) (not d!14797) (not bm!5888) (not b!69285) (not bm!5897) (not b!69211) (not d!14819) (not b!69126) (not b!69025) (not b!69085) (not d!14919) (not d!14875) (not b!68852) (not b!69185) (not b!68932) (not d!14885) (not b!69129) (not d!14869) (not b!69280) (not b!69117) (not bm!5890) (not b!69190) (not d!14907) (not b!69183) (not b_lambda!3113) (not b!69212) (not b!69009) (not b!69148) (not d!14757) (not bm!5910) (not b!69051) (not b!68961) (not d!14821) (not b!69252) (not b!69102) (not b!69288) (not b!69259) (not b!69283) (not b!69154) (not b!68990) (not bm!5906) (not d!14939) (not b!69213) (not d!14957) (not d!14845) (not b!68910) (not b!69290) (not d!14855) (not b!69019) (not b!68913) (not b!69228) (not b!68912) (not b!68893) (not b!68806) (not d!14841) (not b!69027) (not b!69071) (not d!14917) (not b!69253) (not d!14901) (not b!69188) (not d!14761) (not b!69150) (not b!69031) (not b!68895) (not b!69164) (not b!69079) (not d!14781) (not b!69239) (not b_lambda!3105) (not d!14849) (not d!14951) (not d!14925) (not b!69055) (not b!69221) (not b!68850) (not d!14859) (not d!14915) (not d!14953) (not b!69284) (not d!14801) (not b!69256) (not b!69058) (not b!68920) (not d!14905) (not d!14923) (not b!69231) (not d!14817) (not d!14777) (not d!14959) (not d!14913) (not bm!5883) (not d!14765) (not d!14763) (not b!68807) (not bm!5900) (not b!69162) (not b!69020) (not d!14837) (not b!69075) (not bm!5915) (not d!14831) (not b!69072) (not b!69215) (not b!68828) (not bm!5893) (not b!69074) (not d!14929) (not b!69161) (not b_lambda!3107) (not bm!5877) (not b!69078) (not d!14889) (not d!14921) (not b_next!2083) (not d!14871) (not b!69146) (not b!69225) (not d!14911) (not b!68981) (not b!69106) (not bm!5912) (not d!14867) (not b!69089))
(check-sat b_and!4257 b_and!4259 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun b!69299 () Bool)

(declare-fun e!45377 () Option!136)

(assert (=> b!69299 (= e!45377 None!134)))

(declare-fun d!14963 () Bool)

(declare-fun c!9895 () Bool)

(assert (=> d!14963 (= c!9895 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29862))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29862)))) (_1!1069 lt!29777))))))

(declare-fun e!45376 () Option!136)

(assert (=> d!14963 (= (getValueByKey!130 (t!5001 (toList!726 lt!29862)) (_1!1069 lt!29777)) e!45376)))

(declare-fun b!69296 () Bool)

(assert (=> b!69296 (= e!45376 (Some!135 (_2!1069 (h!2075 (t!5001 (toList!726 lt!29862))))))))

(declare-fun b!69298 () Bool)

(assert (=> b!69298 (= e!45377 (getValueByKey!130 (t!5001 (t!5001 (toList!726 lt!29862))) (_1!1069 lt!29777)))))

(declare-fun b!69297 () Bool)

(assert (=> b!69297 (= e!45376 e!45377)))

(declare-fun c!9896 () Bool)

(assert (=> b!69297 (= c!9896 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29862))) (not (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29862)))) (_1!1069 lt!29777)))))))

(assert (= (and d!14963 c!9895) b!69296))

(assert (= (and d!14963 (not c!9895)) b!69297))

(assert (= (and b!69297 c!9896) b!69298))

(assert (= (and b!69297 (not c!9896)) b!69299))

(declare-fun m!65253 () Bool)

(assert (=> b!69298 m!65253))

(assert (=> b!69278 d!14963))

(declare-fun d!14965 () Bool)

(assert (=> d!14965 (= (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29923)) (v!2499 (getValueByKey!130 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29923)))))

(assert (=> d!14925 d!14965))

(declare-fun b!69303 () Bool)

(declare-fun e!45379 () Option!136)

(assert (=> b!69303 (= e!45379 None!134)))

(declare-fun c!9897 () Bool)

(declare-fun d!14967 () Bool)

(assert (=> d!14967 (= c!9897 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29923)))))

(declare-fun e!45378 () Option!136)

(assert (=> d!14967 (= (getValueByKey!130 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29923) e!45378)))

(declare-fun b!69300 () Bool)

(assert (=> b!69300 (= e!45378 (Some!135 (_2!1069 (h!2075 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))))

(declare-fun b!69302 () Bool)

(assert (=> b!69302 (= e!45379 (getValueByKey!130 (t!5001 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!29923))))

(declare-fun b!69301 () Bool)

(assert (=> b!69301 (= e!45378 e!45379)))

(declare-fun c!9898 () Bool)

(assert (=> b!69301 (= c!9898 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) (not (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29923))))))

(assert (= (and d!14967 c!9897) b!69300))

(assert (= (and d!14967 (not c!9897)) b!69301))

(assert (= (and b!69301 c!9898) b!69302))

(assert (= (and b!69301 (not c!9898)) b!69303))

(declare-fun m!65255 () Bool)

(assert (=> b!69302 m!65255))

(assert (=> d!14925 d!14967))

(declare-fun d!14969 () Bool)

(declare-fun e!45380 () Bool)

(assert (=> d!14969 e!45380))

(declare-fun res!37184 () Bool)

(assert (=> d!14969 (=> (not res!37184) (not e!45380))))

(declare-fun lt!30415 () ListLongMap!1421)

(assert (=> d!14969 (= res!37184 (contains!720 lt!30415 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(declare-fun lt!30416 () List!1494)

(assert (=> d!14969 (= lt!30415 (ListLongMap!1422 lt!30416))))

(declare-fun lt!30413 () Unit!1913)

(declare-fun lt!30414 () Unit!1913)

(assert (=> d!14969 (= lt!30413 lt!30414)))

(assert (=> d!14969 (= (getValueByKey!130 lt!30416 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!14969 (= lt!30414 (lemmaContainsTupThenGetReturnValue!49 lt!30416 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!14969 (= lt!30416 (insertStrictlySorted!51 (toList!726 call!5903) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!14969 (= (+!89 call!5903 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30415)))

(declare-fun b!69304 () Bool)

(declare-fun res!37183 () Bool)

(assert (=> b!69304 (=> (not res!37183) (not e!45380))))

(assert (=> b!69304 (= res!37183 (= (getValueByKey!130 (toList!726 lt!30415) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))))

(declare-fun b!69305 () Bool)

(assert (=> b!69305 (= e!45380 (contains!721 (toList!726 lt!30415) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))

(assert (= (and d!14969 res!37184) b!69304))

(assert (= (and b!69304 res!37183) b!69305))

(declare-fun m!65257 () Bool)

(assert (=> d!14969 m!65257))

(declare-fun m!65259 () Bool)

(assert (=> d!14969 m!65259))

(declare-fun m!65261 () Bool)

(assert (=> d!14969 m!65261))

(declare-fun m!65263 () Bool)

(assert (=> d!14969 m!65263))

(declare-fun m!65265 () Bool)

(assert (=> b!69304 m!65265))

(declare-fun m!65267 () Bool)

(assert (=> b!69305 m!65267))

(assert (=> b!69074 d!14969))

(declare-fun d!14971 () Bool)

(declare-fun res!37185 () Bool)

(declare-fun e!45381 () Bool)

(assert (=> d!14971 (=> res!37185 e!45381)))

(assert (=> d!14971 (= res!37185 (= (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!14971 (= (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!45381)))

(declare-fun b!69306 () Bool)

(declare-fun e!45382 () Bool)

(assert (=> b!69306 (= e!45381 e!45382)))

(declare-fun res!37186 () Bool)

(assert (=> b!69306 (=> (not res!37186) (not e!45382))))

(assert (=> b!69306 (= res!37186 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69307 () Bool)

(assert (=> b!69307 (= e!45382 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14971 (not res!37185)) b!69306))

(assert (= (and b!69306 res!37186) b!69307))

(declare-fun m!65269 () Bool)

(assert (=> d!14971 m!65269))

(assert (=> b!69307 m!64043))

(declare-fun m!65271 () Bool)

(assert (=> b!69307 m!65271))

(assert (=> b!68926 d!14971))

(declare-fun d!14973 () Bool)

(declare-fun e!45383 () Bool)

(assert (=> d!14973 e!45383))

(declare-fun res!37187 () Bool)

(assert (=> d!14973 (=> res!37187 e!45383)))

(declare-fun lt!30419 () Bool)

(assert (=> d!14973 (= res!37187 (not lt!30419))))

(declare-fun lt!30420 () Bool)

(assert (=> d!14973 (= lt!30419 lt!30420)))

(declare-fun lt!30418 () Unit!1913)

(declare-fun e!45384 () Unit!1913)

(assert (=> d!14973 (= lt!30418 e!45384)))

(declare-fun c!9899 () Bool)

(assert (=> d!14973 (= c!9899 lt!30420)))

(assert (=> d!14973 (= lt!30420 (containsKey!134 (toList!726 lt!29929) lt!29923))))

(assert (=> d!14973 (= (contains!720 lt!29929 lt!29923) lt!30419)))

(declare-fun b!69308 () Bool)

(declare-fun lt!30417 () Unit!1913)

(assert (=> b!69308 (= e!45384 lt!30417)))

(assert (=> b!69308 (= lt!30417 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29929) lt!29923))))

(assert (=> b!69308 (isDefined!84 (getValueByKey!130 (toList!726 lt!29929) lt!29923))))

(declare-fun b!69309 () Bool)

(declare-fun Unit!1945 () Unit!1913)

(assert (=> b!69309 (= e!45384 Unit!1945)))

(declare-fun b!69310 () Bool)

(assert (=> b!69310 (= e!45383 (isDefined!84 (getValueByKey!130 (toList!726 lt!29929) lt!29923)))))

(assert (= (and d!14973 c!9899) b!69308))

(assert (= (and d!14973 (not c!9899)) b!69309))

(assert (= (and d!14973 (not res!37187)) b!69310))

(declare-fun m!65273 () Bool)

(assert (=> d!14973 m!65273))

(declare-fun m!65275 () Bool)

(assert (=> b!69308 m!65275))

(assert (=> b!69308 m!65099))

(assert (=> b!69308 m!65099))

(declare-fun m!65277 () Bool)

(assert (=> b!69308 m!65277))

(assert (=> b!69310 m!65099))

(assert (=> b!69310 m!65099))

(assert (=> b!69310 m!65277))

(assert (=> d!14921 d!14973))

(declare-fun d!14975 () Bool)

(assert (=> d!14975 (= (apply!73 (+!89 lt!29929 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29923) (apply!73 lt!29929 lt!29923))))

(assert (=> d!14975 true))

(declare-fun _$34!791 () Unit!1913)

(assert (=> d!14975 (= (choose!397 lt!29929 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29923) _$34!791)))

(declare-fun bs!2958 () Bool)

(assert (= bs!2958 d!14975))

(assert (=> bs!2958 m!64277))

(assert (=> bs!2958 m!64277))

(assert (=> bs!2958 m!64279))

(assert (=> bs!2958 m!64285))

(assert (=> d!14921 d!14975))

(assert (=> d!14921 d!14935))

(assert (=> d!14921 d!14925))

(assert (=> d!14921 d!14927))

(declare-fun d!14977 () Bool)

(declare-fun lt!30421 () Bool)

(assert (=> d!14977 (= lt!30421 (select (content!72 lt!29848) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun e!45385 () Bool)

(assert (=> d!14977 (= lt!30421 e!45385)))

(declare-fun res!37189 () Bool)

(assert (=> d!14977 (=> (not res!37189) (not e!45385))))

(assert (=> d!14977 (= res!37189 ((_ is Cons!1490) lt!29848))))

(assert (=> d!14977 (= (contains!721 lt!29848 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))) lt!30421)))

(declare-fun b!69312 () Bool)

(declare-fun e!45386 () Bool)

(assert (=> b!69312 (= e!45385 e!45386)))

(declare-fun res!37188 () Bool)

(assert (=> b!69312 (=> res!37188 e!45386)))

(assert (=> b!69312 (= res!37188 (= (h!2075 lt!29848) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun b!69313 () Bool)

(assert (=> b!69313 (= e!45386 (contains!721 (t!5001 lt!29848) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(assert (= (and d!14977 res!37189) b!69312))

(assert (= (and b!69312 (not res!37188)) b!69313))

(declare-fun m!65279 () Bool)

(assert (=> d!14977 m!65279))

(declare-fun m!65281 () Bool)

(assert (=> d!14977 m!65281))

(declare-fun m!65283 () Bool)

(assert (=> b!69313 m!65283))

(assert (=> b!69102 d!14977))

(declare-fun d!14979 () Bool)

(assert (=> d!14979 (contains!720 (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))))

(assert (=> d!14979 true))

(declare-fun _$16!90 () Unit!1913)

(assert (=> d!14979 (= (choose!399 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (defaultEntry!2168 newMap!16)) _$16!90)))

(declare-fun bs!2959 () Bool)

(assert (= bs!2959 d!14979))

(assert (=> bs!2959 m!65149))

(assert (=> bs!2959 m!64325))

(assert (=> bs!2959 m!65149))

(assert (=> bs!2959 m!64325))

(assert (=> bs!2959 m!65151))

(assert (=> d!14939 d!14979))

(declare-fun d!14981 () Bool)

(assert (=> d!14981 (= (validMask!0 (mask!6113 newMap!16)) (and (or (= (mask!6113 newMap!16) #b00000000000000000000000000000111) (= (mask!6113 newMap!16) #b00000000000000000000000000001111) (= (mask!6113 newMap!16) #b00000000000000000000000000011111) (= (mask!6113 newMap!16) #b00000000000000000000000000111111) (= (mask!6113 newMap!16) #b00000000000000000000000001111111) (= (mask!6113 newMap!16) #b00000000000000000000000011111111) (= (mask!6113 newMap!16) #b00000000000000000000000111111111) (= (mask!6113 newMap!16) #b00000000000000000000001111111111) (= (mask!6113 newMap!16) #b00000000000000000000011111111111) (= (mask!6113 newMap!16) #b00000000000000000000111111111111) (= (mask!6113 newMap!16) #b00000000000000000001111111111111) (= (mask!6113 newMap!16) #b00000000000000000011111111111111) (= (mask!6113 newMap!16) #b00000000000000000111111111111111) (= (mask!6113 newMap!16) #b00000000000000001111111111111111) (= (mask!6113 newMap!16) #b00000000000000011111111111111111) (= (mask!6113 newMap!16) #b00000000000000111111111111111111) (= (mask!6113 newMap!16) #b00000000000001111111111111111111) (= (mask!6113 newMap!16) #b00000000000011111111111111111111) (= (mask!6113 newMap!16) #b00000000000111111111111111111111) (= (mask!6113 newMap!16) #b00000000001111111111111111111111) (= (mask!6113 newMap!16) #b00000000011111111111111111111111) (= (mask!6113 newMap!16) #b00000000111111111111111111111111) (= (mask!6113 newMap!16) #b00000001111111111111111111111111) (= (mask!6113 newMap!16) #b00000011111111111111111111111111) (= (mask!6113 newMap!16) #b00000111111111111111111111111111) (= (mask!6113 newMap!16) #b00001111111111111111111111111111) (= (mask!6113 newMap!16) #b00011111111111111111111111111111) (= (mask!6113 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6113 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!14939 d!14981))

(declare-fun d!14983 () Bool)

(declare-fun e!45387 () Bool)

(assert (=> d!14983 e!45387))

(declare-fun res!37191 () Bool)

(assert (=> d!14983 (=> (not res!37191) (not e!45387))))

(declare-fun lt!30424 () ListLongMap!1421)

(assert (=> d!14983 (= res!37191 (contains!720 lt!30424 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun lt!30425 () List!1494)

(assert (=> d!14983 (= lt!30424 (ListLongMap!1422 lt!30425))))

(declare-fun lt!30422 () Unit!1913)

(declare-fun lt!30423 () Unit!1913)

(assert (=> d!14983 (= lt!30422 lt!30423)))

(assert (=> d!14983 (= (getValueByKey!130 lt!30425 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!14983 (= lt!30423 (lemmaContainsTupThenGetReturnValue!49 lt!30425 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!14983 (= lt!30425 (insertStrictlySorted!51 (toList!726 call!5927) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!14983 (= (+!89 call!5927 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) lt!30424)))

(declare-fun b!69314 () Bool)

(declare-fun res!37190 () Bool)

(assert (=> b!69314 (=> (not res!37190) (not e!45387))))

(assert (=> b!69314 (= res!37190 (= (getValueByKey!130 (toList!726 lt!30424) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun b!69315 () Bool)

(assert (=> b!69315 (= e!45387 (contains!721 (toList!726 lt!30424) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(assert (= (and d!14983 res!37191) b!69314))

(assert (= (and b!69314 res!37190) b!69315))

(declare-fun m!65285 () Bool)

(assert (=> d!14983 m!65285))

(declare-fun m!65287 () Bool)

(assert (=> d!14983 m!65287))

(declare-fun m!65289 () Bool)

(assert (=> d!14983 m!65289))

(declare-fun m!65291 () Bool)

(assert (=> d!14983 m!65291))

(declare-fun m!65293 () Bool)

(assert (=> b!69314 m!65293))

(declare-fun m!65295 () Bool)

(assert (=> b!69315 m!65295))

(assert (=> b!69255 d!14983))

(declare-fun bm!5930 () Bool)

(declare-fun call!5933 () List!1494)

(declare-fun call!5935 () List!1494)

(assert (=> bm!5930 (= call!5933 call!5935)))

(declare-fun b!69316 () Bool)

(declare-fun e!45391 () List!1494)

(declare-fun call!5934 () List!1494)

(assert (=> b!69316 (= e!45391 call!5934)))

(declare-fun b!69317 () Bool)

(declare-fun e!45390 () List!1494)

(assert (=> b!69317 (= e!45390 (insertStrictlySorted!51 (t!5001 (t!5001 (toList!726 lt!29768))) (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(declare-fun b!69319 () Bool)

(declare-fun res!37193 () Bool)

(declare-fun e!45389 () Bool)

(assert (=> b!69319 (=> (not res!37193) (not e!45389))))

(declare-fun lt!30426 () List!1494)

(assert (=> b!69319 (= res!37193 (containsKey!134 lt!30426 (_1!1069 lt!29775)))))

(declare-fun b!69320 () Bool)

(declare-fun e!45388 () List!1494)

(declare-fun e!45392 () List!1494)

(assert (=> b!69320 (= e!45388 e!45392)))

(declare-fun c!9900 () Bool)

(assert (=> b!69320 (= c!9900 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29768))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29768)))) (_1!1069 lt!29775))))))

(declare-fun b!69321 () Bool)

(declare-fun c!9901 () Bool)

(assert (=> b!69321 (= e!45390 (ite c!9900 (t!5001 (t!5001 (toList!726 lt!29768))) (ite c!9901 (Cons!1490 (h!2075 (t!5001 (toList!726 lt!29768))) (t!5001 (t!5001 (toList!726 lt!29768)))) Nil!1491)))))

(declare-fun b!69322 () Bool)

(assert (=> b!69322 (= e!45391 call!5934)))

(declare-fun b!69323 () Bool)

(assert (=> b!69323 (= e!45392 call!5933)))

(declare-fun b!69324 () Bool)

(assert (=> b!69324 (= e!45388 call!5935)))

(declare-fun c!9902 () Bool)

(declare-fun bm!5931 () Bool)

(assert (=> bm!5931 (= call!5935 ($colon$colon!63 e!45390 (ite c!9902 (h!2075 (t!5001 (toList!726 lt!29768))) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775)))))))

(declare-fun c!9903 () Bool)

(assert (=> bm!5931 (= c!9903 c!9902)))

(declare-fun b!69325 () Bool)

(assert (=> b!69325 (= e!45389 (contains!721 lt!30426 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun bm!5932 () Bool)

(assert (=> bm!5932 (= call!5934 call!5933)))

(declare-fun b!69318 () Bool)

(assert (=> b!69318 (= c!9901 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29768))) (bvsgt (_1!1069 (h!2075 (t!5001 (toList!726 lt!29768)))) (_1!1069 lt!29775))))))

(assert (=> b!69318 (= e!45392 e!45391)))

(declare-fun d!14985 () Bool)

(assert (=> d!14985 e!45389))

(declare-fun res!37192 () Bool)

(assert (=> d!14985 (=> (not res!37192) (not e!45389))))

(assert (=> d!14985 (= res!37192 (isStrictlySorted!285 lt!30426))))

(assert (=> d!14985 (= lt!30426 e!45388)))

(assert (=> d!14985 (= c!9902 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29768))) (bvslt (_1!1069 (h!2075 (t!5001 (toList!726 lt!29768)))) (_1!1069 lt!29775))))))

(assert (=> d!14985 (isStrictlySorted!285 (t!5001 (toList!726 lt!29768)))))

(assert (=> d!14985 (= (insertStrictlySorted!51 (t!5001 (toList!726 lt!29768)) (_1!1069 lt!29775) (_2!1069 lt!29775)) lt!30426)))

(assert (= (and d!14985 c!9902) b!69324))

(assert (= (and d!14985 (not c!9902)) b!69320))

(assert (= (and b!69320 c!9900) b!69323))

(assert (= (and b!69320 (not c!9900)) b!69318))

(assert (= (and b!69318 c!9901) b!69322))

(assert (= (and b!69318 (not c!9901)) b!69316))

(assert (= (or b!69322 b!69316) bm!5932))

(assert (= (or b!69323 bm!5932) bm!5930))

(assert (= (or b!69324 bm!5930) bm!5931))

(assert (= (and bm!5931 c!9903) b!69317))

(assert (= (and bm!5931 (not c!9903)) b!69321))

(assert (= (and d!14985 res!37192) b!69319))

(assert (= (and b!69319 res!37193) b!69325))

(declare-fun m!65297 () Bool)

(assert (=> b!69317 m!65297))

(declare-fun m!65299 () Bool)

(assert (=> d!14985 m!65299))

(declare-fun m!65301 () Bool)

(assert (=> d!14985 m!65301))

(declare-fun m!65303 () Bool)

(assert (=> b!69319 m!65303))

(declare-fun m!65305 () Bool)

(assert (=> bm!5931 m!65305))

(declare-fun m!65307 () Bool)

(assert (=> b!69325 m!65307))

(assert (=> b!68850 d!14985))

(declare-fun d!14987 () Bool)

(assert (=> d!14987 (= (get!1135 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2494 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!69012 d!14987))

(declare-fun b!69329 () Bool)

(declare-fun e!45394 () Option!136)

(assert (=> b!69329 (= e!45394 None!134)))

(declare-fun d!14989 () Bool)

(declare-fun c!9904 () Bool)

(assert (=> d!14989 (= c!9904 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29772))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29772)))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun e!45393 () Option!136)

(assert (=> d!14989 (= (getValueByKey!130 (t!5001 (toList!726 lt!29772)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45393)))

(declare-fun b!69326 () Bool)

(assert (=> b!69326 (= e!45393 (Some!135 (_2!1069 (h!2075 (t!5001 (toList!726 lt!29772))))))))

(declare-fun b!69328 () Bool)

(assert (=> b!69328 (= e!45394 (getValueByKey!130 (t!5001 (t!5001 (toList!726 lt!29772))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!69327 () Bool)

(assert (=> b!69327 (= e!45393 e!45394)))

(declare-fun c!9905 () Bool)

(assert (=> b!69327 (= c!9905 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29772))) (not (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29772)))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(assert (= (and d!14989 c!9904) b!69326))

(assert (= (and d!14989 (not c!9904)) b!69327))

(assert (= (and b!69327 c!9905) b!69328))

(assert (= (and b!69327 (not c!9905)) b!69329))

(assert (=> b!69328 m!64043))

(declare-fun m!65309 () Bool)

(assert (=> b!69328 m!65309))

(assert (=> b!69129 d!14989))

(declare-fun d!14991 () Bool)

(assert (=> d!14991 (= (size!2080 newMap!16) (bvadd (_size!388 newMap!16) (bvsdiv (bvadd (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!69208 d!14991))

(declare-fun d!14993 () Bool)

(assert (=> d!14993 (= (apply!73 lt!30303 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30303) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2960 () Bool)

(assert (= bs!2960 d!14993))

(declare-fun m!65311 () Bool)

(assert (=> bs!2960 m!65311))

(assert (=> bs!2960 m!65311))

(declare-fun m!65313 () Bool)

(assert (=> bs!2960 m!65313))

(assert (=> b!69143 d!14993))

(declare-fun d!14995 () Bool)

(declare-fun res!37194 () Bool)

(declare-fun e!45395 () Bool)

(assert (=> d!14995 (=> res!37194 e!45395)))

(assert (=> d!14995 (= res!37194 (and ((_ is Cons!1490) (toList!726 lt!29858)) (= (_1!1069 (h!2075 (toList!726 lt!29858))) (_1!1069 lt!29775))))))

(assert (=> d!14995 (= (containsKey!134 (toList!726 lt!29858) (_1!1069 lt!29775)) e!45395)))

(declare-fun b!69330 () Bool)

(declare-fun e!45396 () Bool)

(assert (=> b!69330 (= e!45395 e!45396)))

(declare-fun res!37195 () Bool)

(assert (=> b!69330 (=> (not res!37195) (not e!45396))))

(assert (=> b!69330 (= res!37195 (and (or (not ((_ is Cons!1490) (toList!726 lt!29858))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29858))) (_1!1069 lt!29775))) ((_ is Cons!1490) (toList!726 lt!29858)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29858))) (_1!1069 lt!29775))))))

(declare-fun b!69331 () Bool)

(assert (=> b!69331 (= e!45396 (containsKey!134 (t!5001 (toList!726 lt!29858)) (_1!1069 lt!29775)))))

(assert (= (and d!14995 (not res!37194)) b!69330))

(assert (= (and b!69330 res!37195) b!69331))

(declare-fun m!65315 () Bool)

(assert (=> b!69331 m!65315))

(assert (=> d!14885 d!14995))

(declare-fun d!14997 () Bool)

(declare-fun e!45397 () Bool)

(assert (=> d!14997 e!45397))

(declare-fun res!37196 () Bool)

(assert (=> d!14997 (=> res!37196 e!45397)))

(declare-fun lt!30429 () Bool)

(assert (=> d!14997 (= res!37196 (not lt!30429))))

(declare-fun lt!30430 () Bool)

(assert (=> d!14997 (= lt!30429 lt!30430)))

(declare-fun lt!30428 () Unit!1913)

(declare-fun e!45398 () Unit!1913)

(assert (=> d!14997 (= lt!30428 e!45398)))

(declare-fun c!9906 () Bool)

(assert (=> d!14997 (= c!9906 lt!30430)))

(assert (=> d!14997 (= lt!30430 (containsKey!134 (toList!726 lt!30158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14997 (= (contains!720 lt!30158 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30429)))

(declare-fun b!69332 () Bool)

(declare-fun lt!30427 () Unit!1913)

(assert (=> b!69332 (= e!45398 lt!30427)))

(assert (=> b!69332 (= lt!30427 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69332 (isDefined!84 (getValueByKey!130 (toList!726 lt!30158) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69333 () Bool)

(declare-fun Unit!1946 () Unit!1913)

(assert (=> b!69333 (= e!45398 Unit!1946)))

(declare-fun b!69334 () Bool)

(assert (=> b!69334 (= e!45397 (isDefined!84 (getValueByKey!130 (toList!726 lt!30158) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14997 c!9906) b!69332))

(assert (= (and d!14997 (not c!9906)) b!69333))

(assert (= (and d!14997 (not res!37196)) b!69334))

(declare-fun m!65317 () Bool)

(assert (=> d!14997 m!65317))

(declare-fun m!65319 () Bool)

(assert (=> b!69332 m!65319))

(declare-fun m!65321 () Bool)

(assert (=> b!69332 m!65321))

(assert (=> b!69332 m!65321))

(declare-fun m!65323 () Bool)

(assert (=> b!69332 m!65323))

(assert (=> b!69334 m!65321))

(assert (=> b!69334 m!65321))

(assert (=> b!69334 m!65323))

(assert (=> d!14781 d!14997))

(assert (=> d!14781 d!14721))

(declare-fun d!14999 () Bool)

(declare-fun e!45399 () Bool)

(assert (=> d!14999 e!45399))

(declare-fun res!37197 () Bool)

(assert (=> d!14999 (=> res!37197 e!45399)))

(declare-fun lt!30433 () Bool)

(assert (=> d!14999 (= res!37197 (not lt!30433))))

(declare-fun lt!30434 () Bool)

(assert (=> d!14999 (= lt!30433 lt!30434)))

(declare-fun lt!30432 () Unit!1913)

(declare-fun e!45400 () Unit!1913)

(assert (=> d!14999 (= lt!30432 e!45400)))

(declare-fun c!9907 () Bool)

(assert (=> d!14999 (= c!9907 lt!30434)))

(assert (=> d!14999 (= lt!30434 (containsKey!134 (toList!726 lt!30158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14999 (= (contains!720 lt!30158 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30433)))

(declare-fun b!69335 () Bool)

(declare-fun lt!30431 () Unit!1913)

(assert (=> b!69335 (= e!45400 lt!30431)))

(assert (=> b!69335 (= lt!30431 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69335 (isDefined!84 (getValueByKey!130 (toList!726 lt!30158) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69336 () Bool)

(declare-fun Unit!1947 () Unit!1913)

(assert (=> b!69336 (= e!45400 Unit!1947)))

(declare-fun b!69337 () Bool)

(assert (=> b!69337 (= e!45399 (isDefined!84 (getValueByKey!130 (toList!726 lt!30158) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14999 c!9907) b!69335))

(assert (= (and d!14999 (not c!9907)) b!69336))

(assert (= (and d!14999 (not res!37197)) b!69337))

(declare-fun m!65325 () Bool)

(assert (=> d!14999 m!65325))

(declare-fun m!65327 () Bool)

(assert (=> b!69335 m!65327))

(declare-fun m!65329 () Bool)

(assert (=> b!69335 m!65329))

(assert (=> b!69335 m!65329))

(declare-fun m!65331 () Bool)

(assert (=> b!69335 m!65331))

(assert (=> b!69337 m!65329))

(assert (=> b!69337 m!65329))

(assert (=> b!69337 m!65331))

(assert (=> b!68914 d!14999))

(declare-fun d!15001 () Bool)

(declare-fun c!9910 () Bool)

(assert (=> d!15001 (= c!9910 ((_ is Nil!1491) (toList!726 lt!29847)))))

(declare-fun e!45403 () (InoxSet tuple2!2118))

(assert (=> d!15001 (= (content!72 (toList!726 lt!29847)) e!45403)))

(declare-fun b!69342 () Bool)

(assert (=> b!69342 (= e!45403 ((as const (Array tuple2!2118 Bool)) false))))

(declare-fun b!69343 () Bool)

(assert (=> b!69343 (= e!45403 ((_ map or) (store ((as const (Array tuple2!2118 Bool)) false) (h!2075 (toList!726 lt!29847)) true) (content!72 (t!5001 (toList!726 lt!29847)))))))

(assert (= (and d!15001 c!9910) b!69342))

(assert (= (and d!15001 (not c!9910)) b!69343))

(declare-fun m!65333 () Bool)

(assert (=> b!69343 m!65333))

(declare-fun m!65335 () Bool)

(assert (=> b!69343 m!65335))

(assert (=> d!14867 d!15001))

(declare-fun d!15003 () Bool)

(declare-fun res!37198 () Bool)

(declare-fun e!45404 () Bool)

(assert (=> d!15003 (=> res!37198 e!45404)))

(assert (=> d!15003 (= res!37198 (and ((_ is Cons!1490) lt!30327) (= (_1!1069 (h!2075 lt!30327)) (_1!1069 lt!29775))))))

(assert (=> d!15003 (= (containsKey!134 lt!30327 (_1!1069 lt!29775)) e!45404)))

(declare-fun b!69344 () Bool)

(declare-fun e!45405 () Bool)

(assert (=> b!69344 (= e!45404 e!45405)))

(declare-fun res!37199 () Bool)

(assert (=> b!69344 (=> (not res!37199) (not e!45405))))

(assert (=> b!69344 (= res!37199 (and (or (not ((_ is Cons!1490) lt!30327)) (bvsle (_1!1069 (h!2075 lt!30327)) (_1!1069 lt!29775))) ((_ is Cons!1490) lt!30327) (bvslt (_1!1069 (h!2075 lt!30327)) (_1!1069 lt!29775))))))

(declare-fun b!69345 () Bool)

(assert (=> b!69345 (= e!45405 (containsKey!134 (t!5001 lt!30327) (_1!1069 lt!29775)))))

(assert (= (and d!15003 (not res!37198)) b!69344))

(assert (= (and b!69344 res!37199) b!69345))

(declare-fun m!65337 () Bool)

(assert (=> b!69345 m!65337))

(assert (=> b!69190 d!15003))

(declare-fun b!69346 () Bool)

(declare-fun res!37202 () Bool)

(declare-fun e!45408 () Bool)

(assert (=> b!69346 (=> (not res!37202) (not e!45408))))

(declare-fun e!45413 () Bool)

(assert (=> b!69346 (= res!37202 e!45413)))

(declare-fun c!9913 () Bool)

(assert (=> b!69346 (= c!9913 (not (= (bvand lt!30028 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69347 () Bool)

(declare-fun res!37207 () Bool)

(assert (=> b!69347 (=> (not res!37207) (not e!45408))))

(declare-fun e!45414 () Bool)

(assert (=> b!69347 (= res!37207 e!45414)))

(declare-fun res!37208 () Bool)

(assert (=> b!69347 (=> res!37208 e!45414)))

(declare-fun e!45418 () Bool)

(assert (=> b!69347 (= res!37208 (not e!45418))))

(declare-fun res!37205 () Bool)

(assert (=> b!69347 (=> (not res!37205) (not e!45418))))

(assert (=> b!69347 (= res!37205 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5933 () Bool)

(declare-fun call!5937 () ListLongMap!1421)

(declare-fun call!5939 () ListLongMap!1421)

(assert (=> bm!5933 (= call!5937 call!5939)))

(declare-fun b!69349 () Bool)

(declare-fun e!45412 () ListLongMap!1421)

(declare-fun call!5936 () ListLongMap!1421)

(assert (=> b!69349 (= e!45412 call!5936)))

(declare-fun b!69350 () Bool)

(declare-fun e!45417 () ListLongMap!1421)

(declare-fun e!45407 () ListLongMap!1421)

(assert (=> b!69350 (= e!45417 e!45407)))

(declare-fun c!9916 () Bool)

(assert (=> b!69350 (= c!9916 (and (not (= (bvand lt!30028 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!30028 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5934 () Bool)

(declare-fun call!5941 () Bool)

(declare-fun lt!30453 () ListLongMap!1421)

(assert (=> bm!5934 (= call!5941 (contains!720 lt!30453 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69351 () Bool)

(assert (=> b!69351 (= e!45407 call!5936)))

(declare-fun b!69352 () Bool)

(declare-fun e!45406 () Bool)

(declare-fun e!45410 () Bool)

(assert (=> b!69352 (= e!45406 e!45410)))

(declare-fun res!37203 () Bool)

(assert (=> b!69352 (= res!37203 call!5941)))

(assert (=> b!69352 (=> (not res!37203) (not e!45410))))

(declare-fun b!69353 () Bool)

(declare-fun call!5938 () ListLongMap!1421)

(assert (=> b!69353 (= e!45412 call!5938)))

(declare-fun b!69354 () Bool)

(declare-fun e!45411 () Bool)

(assert (=> b!69354 (= e!45411 (= (apply!73 lt!30453 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69354 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_values!2151 newMap!16))))))

(assert (=> b!69354 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69355 () Bool)

(assert (=> b!69355 (= e!45408 e!45406)))

(declare-fun c!9914 () Bool)

(assert (=> b!69355 (= c!9914 (not (= (bvand lt!30028 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!15005 () Bool)

(assert (=> d!15005 e!45408))

(declare-fun res!37206 () Bool)

(assert (=> d!15005 (=> (not res!37206) (not e!45408))))

(assert (=> d!15005 (= res!37206 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun lt!30445 () ListLongMap!1421)

(assert (=> d!15005 (= lt!30453 lt!30445)))

(declare-fun lt!30449 () Unit!1913)

(declare-fun e!45409 () Unit!1913)

(assert (=> d!15005 (= lt!30449 e!45409)))

(declare-fun c!9915 () Bool)

(declare-fun e!45415 () Bool)

(assert (=> d!15005 (= c!9915 e!45415)))

(declare-fun res!37204 () Bool)

(assert (=> d!15005 (=> (not res!37204) (not e!45415))))

(assert (=> d!15005 (= res!37204 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15005 (= lt!30445 e!45417)))

(declare-fun c!9912 () Bool)

(assert (=> d!15005 (= c!9912 (and (not (= (bvand lt!30028 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!30028 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15005 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15005 (= (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30453)))

(declare-fun b!69348 () Bool)

(assert (=> b!69348 (= e!45406 (not call!5941))))

(declare-fun bm!5935 () Bool)

(assert (=> bm!5935 (= call!5938 call!5937)))

(declare-fun bm!5936 () Bool)

(assert (=> bm!5936 (= call!5939 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69356 () Bool)

(declare-fun Unit!1948 () Unit!1913)

(assert (=> b!69356 (= e!45409 Unit!1948)))

(declare-fun b!69357 () Bool)

(declare-fun e!45416 () Bool)

(assert (=> b!69357 (= e!45413 e!45416)))

(declare-fun res!37201 () Bool)

(declare-fun call!5942 () Bool)

(assert (=> b!69357 (= res!37201 call!5942)))

(assert (=> b!69357 (=> (not res!37201) (not e!45416))))

(declare-fun b!69358 () Bool)

(assert (=> b!69358 (= e!45410 (= (apply!73 lt!30453 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29778))))

(declare-fun b!69359 () Bool)

(assert (=> b!69359 (= e!45418 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5937 () Bool)

(assert (=> bm!5937 (= call!5942 (contains!720 lt!30453 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69360 () Bool)

(declare-fun c!9911 () Bool)

(assert (=> b!69360 (= c!9911 (and (not (= (bvand lt!30028 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!30028 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69360 (= e!45407 e!45412)))

(declare-fun bm!5938 () Bool)

(declare-fun call!5940 () ListLongMap!1421)

(assert (=> bm!5938 (= call!5940 (+!89 (ite c!9912 call!5939 (ite c!9916 call!5937 call!5938)) (ite (or c!9912 c!9916) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(declare-fun b!69361 () Bool)

(assert (=> b!69361 (= e!45417 (+!89 call!5940 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)))))

(declare-fun b!69362 () Bool)

(declare-fun lt!30444 () Unit!1913)

(assert (=> b!69362 (= e!45409 lt!30444)))

(declare-fun lt!30451 () ListLongMap!1421)

(assert (=> b!69362 (= lt!30451 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30437 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30437 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30443 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30443 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30455 () Unit!1913)

(assert (=> b!69362 (= lt!30455 (addStillContains!49 lt!30451 lt!30437 (zeroValue!2074 newMap!16) lt!30443))))

(assert (=> b!69362 (contains!720 (+!89 lt!30451 (tuple2!2119 lt!30437 (zeroValue!2074 newMap!16))) lt!30443)))

(declare-fun lt!30442 () Unit!1913)

(assert (=> b!69362 (= lt!30442 lt!30455)))

(declare-fun lt!30439 () ListLongMap!1421)

(assert (=> b!69362 (= lt!30439 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30454 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30454 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30447 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30447 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30435 () Unit!1913)

(assert (=> b!69362 (= lt!30435 (addApplyDifferent!49 lt!30439 lt!30454 lt!29778 lt!30447))))

(assert (=> b!69362 (= (apply!73 (+!89 lt!30439 (tuple2!2119 lt!30454 lt!29778)) lt!30447) (apply!73 lt!30439 lt!30447))))

(declare-fun lt!30440 () Unit!1913)

(assert (=> b!69362 (= lt!30440 lt!30435)))

(declare-fun lt!30436 () ListLongMap!1421)

(assert (=> b!69362 (= lt!30436 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30452 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30452 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30438 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30438 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30448 () Unit!1913)

(assert (=> b!69362 (= lt!30448 (addApplyDifferent!49 lt!30436 lt!30452 (zeroValue!2074 newMap!16) lt!30438))))

(assert (=> b!69362 (= (apply!73 (+!89 lt!30436 (tuple2!2119 lt!30452 (zeroValue!2074 newMap!16))) lt!30438) (apply!73 lt!30436 lt!30438))))

(declare-fun lt!30446 () Unit!1913)

(assert (=> b!69362 (= lt!30446 lt!30448)))

(declare-fun lt!30456 () ListLongMap!1421)

(assert (=> b!69362 (= lt!30456 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30441 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30441 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30450 () (_ BitVec 64))

(assert (=> b!69362 (= lt!30450 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69362 (= lt!30444 (addApplyDifferent!49 lt!30456 lt!30441 lt!29778 lt!30450))))

(assert (=> b!69362 (= (apply!73 (+!89 lt!30456 (tuple2!2119 lt!30441 lt!29778)) lt!30450) (apply!73 lt!30456 lt!30450))))

(declare-fun b!69363 () Bool)

(assert (=> b!69363 (= e!45415 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5939 () Bool)

(assert (=> bm!5939 (= call!5936 call!5940)))

(declare-fun b!69364 () Bool)

(assert (=> b!69364 (= e!45413 (not call!5942))))

(declare-fun b!69365 () Bool)

(assert (=> b!69365 (= e!45416 (= (apply!73 lt!30453 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69366 () Bool)

(assert (=> b!69366 (= e!45414 e!45411)))

(declare-fun res!37200 () Bool)

(assert (=> b!69366 (=> (not res!37200) (not e!45411))))

(assert (=> b!69366 (= res!37200 (contains!720 lt!30453 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69366 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!15005 c!9912) b!69361))

(assert (= (and d!15005 (not c!9912)) b!69350))

(assert (= (and b!69350 c!9916) b!69351))

(assert (= (and b!69350 (not c!9916)) b!69360))

(assert (= (and b!69360 c!9911) b!69349))

(assert (= (and b!69360 (not c!9911)) b!69353))

(assert (= (or b!69349 b!69353) bm!5935))

(assert (= (or b!69351 bm!5935) bm!5933))

(assert (= (or b!69351 b!69349) bm!5939))

(assert (= (or b!69361 bm!5933) bm!5936))

(assert (= (or b!69361 bm!5939) bm!5938))

(assert (= (and d!15005 res!37204) b!69363))

(assert (= (and d!15005 c!9915) b!69362))

(assert (= (and d!15005 (not c!9915)) b!69356))

(assert (= (and d!15005 res!37206) b!69347))

(assert (= (and b!69347 res!37205) b!69359))

(assert (= (and b!69347 (not res!37208)) b!69366))

(assert (= (and b!69366 res!37200) b!69354))

(assert (= (and b!69347 res!37207) b!69346))

(assert (= (and b!69346 c!9913) b!69357))

(assert (= (and b!69346 (not c!9913)) b!69364))

(assert (= (and b!69357 res!37201) b!69365))

(assert (= (or b!69357 b!69364) bm!5937))

(assert (= (and b!69346 res!37202) b!69355))

(assert (= (and b!69355 c!9914) b!69352))

(assert (= (and b!69355 (not c!9914)) b!69348))

(assert (= (and b!69352 res!37203) b!69358))

(assert (= (or b!69352 b!69348) bm!5934))

(declare-fun b_lambda!3117 () Bool)

(assert (=> (not b_lambda!3117) (not b!69354)))

(assert (=> b!69354 t!5009))

(declare-fun b_and!4261 () Bool)

(assert (= b_and!4257 (and (=> t!5009 result!2623) b_and!4261)))

(assert (=> b!69354 t!5011))

(declare-fun b_and!4263 () Bool)

(assert (= b_and!4259 (and (=> t!5011 result!2625) b_and!4263)))

(assert (=> b!69366 m!64555))

(assert (=> b!69366 m!64555))

(declare-fun m!65339 () Bool)

(assert (=> b!69366 m!65339))

(declare-fun m!65341 () Bool)

(assert (=> b!69358 m!65341))

(declare-fun m!65343 () Bool)

(assert (=> b!69365 m!65343))

(declare-fun m!65345 () Bool)

(assert (=> bm!5938 m!65345))

(assert (=> d!15005 m!64569))

(declare-fun m!65347 () Bool)

(assert (=> bm!5937 m!65347))

(assert (=> b!69354 m!64555))

(assert (=> b!69354 m!64699))

(assert (=> b!69354 m!64555))

(declare-fun m!65349 () Bool)

(assert (=> b!69354 m!65349))

(assert (=> b!69354 m!64755))

(assert (=> b!69354 m!64755))

(assert (=> b!69354 m!64699))

(assert (=> b!69354 m!64757))

(declare-fun m!65351 () Bool)

(assert (=> b!69361 m!65351))

(assert (=> b!69362 m!64555))

(declare-fun m!65353 () Bool)

(assert (=> b!69362 m!65353))

(declare-fun m!65355 () Bool)

(assert (=> b!69362 m!65355))

(declare-fun m!65357 () Bool)

(assert (=> b!69362 m!65357))

(declare-fun m!65359 () Bool)

(assert (=> b!69362 m!65359))

(declare-fun m!65361 () Bool)

(assert (=> b!69362 m!65361))

(declare-fun m!65363 () Bool)

(assert (=> b!69362 m!65363))

(declare-fun m!65365 () Bool)

(assert (=> b!69362 m!65365))

(declare-fun m!65367 () Bool)

(assert (=> b!69362 m!65367))

(declare-fun m!65369 () Bool)

(assert (=> b!69362 m!65369))

(declare-fun m!65371 () Bool)

(assert (=> b!69362 m!65371))

(declare-fun m!65373 () Bool)

(assert (=> b!69362 m!65373))

(declare-fun m!65375 () Bool)

(assert (=> b!69362 m!65375))

(assert (=> b!69362 m!65365))

(declare-fun m!65377 () Bool)

(assert (=> b!69362 m!65377))

(declare-fun m!65379 () Bool)

(assert (=> b!69362 m!65379))

(assert (=> b!69362 m!65375))

(declare-fun m!65381 () Bool)

(assert (=> b!69362 m!65381))

(assert (=> b!69362 m!65377))

(assert (=> b!69362 m!65369))

(declare-fun m!65383 () Bool)

(assert (=> b!69362 m!65383))

(assert (=> b!69363 m!64555))

(assert (=> b!69363 m!64555))

(assert (=> b!69363 m!64607))

(assert (=> b!69359 m!64555))

(assert (=> b!69359 m!64555))

(assert (=> b!69359 m!64607))

(declare-fun m!65385 () Bool)

(assert (=> bm!5934 m!65385))

(assert (=> bm!5936 m!65361))

(assert (=> d!14829 d!15005))

(assert (=> d!14829 d!14865))

(declare-fun d!15007 () Bool)

(declare-fun e!45419 () Bool)

(assert (=> d!15007 e!45419))

(declare-fun res!37210 () Bool)

(assert (=> d!15007 (=> (not res!37210) (not e!45419))))

(declare-fun lt!30459 () ListLongMap!1421)

(assert (=> d!15007 (= res!37210 (contains!720 lt!30459 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(declare-fun lt!30460 () List!1494)

(assert (=> d!15007 (= lt!30459 (ListLongMap!1422 lt!30460))))

(declare-fun lt!30457 () Unit!1913)

(declare-fun lt!30458 () Unit!1913)

(assert (=> d!15007 (= lt!30457 lt!30458)))

(assert (=> d!15007 (= (getValueByKey!130 lt!30460 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(assert (=> d!15007 (= lt!30458 (lemmaContainsTupThenGetReturnValue!49 lt!30460 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(assert (=> d!15007 (= lt!30460 (insertStrictlySorted!51 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(assert (=> d!15007 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) lt!30459)))

(declare-fun b!69367 () Bool)

(declare-fun res!37209 () Bool)

(assert (=> b!69367 (=> (not res!37209) (not e!45419))))

(assert (=> b!69367 (= res!37209 (= (getValueByKey!130 (toList!726 lt!30459) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)))))))

(declare-fun b!69368 () Bool)

(assert (=> b!69368 (= e!45419 (contains!721 (toList!726 lt!30459) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)))))

(assert (= (and d!15007 res!37210) b!69367))

(assert (= (and b!69367 res!37209) b!69368))

(declare-fun m!65387 () Bool)

(assert (=> d!15007 m!65387))

(declare-fun m!65389 () Bool)

(assert (=> d!15007 m!65389))

(declare-fun m!65391 () Bool)

(assert (=> d!15007 m!65391))

(declare-fun m!65393 () Bool)

(assert (=> d!15007 m!65393))

(declare-fun m!65395 () Bool)

(assert (=> b!69367 m!65395))

(declare-fun m!65397 () Bool)

(assert (=> b!69368 m!65397))

(assert (=> d!14829 d!15007))

(assert (=> d!14829 d!14981))

(declare-fun d!15009 () Bool)

(assert (=> d!15009 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30028 (zeroValue!2074 newMap!16) lt!29778 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15009 true))

(declare-fun _$8!58 () Unit!1913)

(assert (=> d!15009 (= (choose!393 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30028 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29778 (defaultEntry!2168 newMap!16)) _$8!58)))

(declare-fun bs!2961 () Bool)

(assert (= bs!2961 d!15009))

(assert (=> bs!2961 m!64251))

(assert (=> bs!2961 m!64251))

(assert (=> bs!2961 m!64679))

(assert (=> bs!2961 m!64677))

(assert (=> d!14829 d!15009))

(assert (=> b!68893 d!14855))

(declare-fun d!15011 () Bool)

(assert (=> d!15011 (= ($colon$colon!63 e!45113 (ite c!9781 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775)))) (Cons!1490 (ite c!9781 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))) e!45113))))

(assert (=> bm!5864 d!15011))

(declare-fun d!15013 () Bool)

(assert (=> d!15013 (= (isEmpty!317 (toList!726 lt!29836)) ((_ is Nil!1491) (toList!726 lt!29836)))))

(assert (=> d!14905 d!15013))

(declare-fun d!15015 () Bool)

(declare-fun e!45420 () Bool)

(assert (=> d!15015 e!45420))

(declare-fun res!37212 () Bool)

(assert (=> d!15015 (=> (not res!37212) (not e!45420))))

(declare-fun lt!30463 () ListLongMap!1421)

(assert (=> d!15015 (= res!37212 (contains!720 lt!30463 (_1!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun lt!30464 () List!1494)

(assert (=> d!15015 (= lt!30463 (ListLongMap!1422 lt!30464))))

(declare-fun lt!30461 () Unit!1913)

(declare-fun lt!30462 () Unit!1913)

(assert (=> d!15015 (= lt!30461 lt!30462)))

(assert (=> d!15015 (= (getValueByKey!130 lt!30464 (_1!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15015 (= lt!30462 (lemmaContainsTupThenGetReturnValue!49 lt!30464 (_1!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15015 (= lt!30464 (insertStrictlySorted!51 (toList!726 (ite c!9835 call!5895 (ite c!9839 call!5893 call!5894))) (_1!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15015 (= (+!89 (ite c!9835 call!5895 (ite c!9839 call!5893 call!5894)) (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) lt!30463)))

(declare-fun b!69369 () Bool)

(declare-fun res!37211 () Bool)

(assert (=> b!69369 (=> (not res!37211) (not e!45420))))

(assert (=> b!69369 (= res!37211 (= (getValueByKey!130 (toList!726 lt!30463) (_1!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))))

(declare-fun b!69370 () Bool)

(assert (=> b!69370 (= e!45420 (contains!721 (toList!726 lt!30463) (ite (or c!9835 c!9839) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (= (and d!15015 res!37212) b!69369))

(assert (= (and b!69369 res!37211) b!69370))

(declare-fun m!65399 () Bool)

(assert (=> d!15015 m!65399))

(declare-fun m!65401 () Bool)

(assert (=> d!15015 m!65401))

(declare-fun m!65403 () Bool)

(assert (=> d!15015 m!65403))

(declare-fun m!65405 () Bool)

(assert (=> d!15015 m!65405))

(declare-fun m!65407 () Bool)

(assert (=> b!69369 m!65407))

(declare-fun m!65409 () Bool)

(assert (=> b!69370 m!65409))

(assert (=> bm!5894 d!15015))

(declare-fun d!15017 () Bool)

(assert (=> d!15017 (= (get!1137 (getValueByKey!130 (toList!726 lt!29909) lt!29911)) (v!2499 (getValueByKey!130 (toList!726 lt!29909) lt!29911)))))

(assert (=> d!14911 d!15017))

(declare-fun b!69374 () Bool)

(declare-fun e!45422 () Option!136)

(assert (=> b!69374 (= e!45422 None!134)))

(declare-fun d!15019 () Bool)

(declare-fun c!9917 () Bool)

(assert (=> d!15019 (= c!9917 (and ((_ is Cons!1490) (toList!726 lt!29909)) (= (_1!1069 (h!2075 (toList!726 lt!29909))) lt!29911)))))

(declare-fun e!45421 () Option!136)

(assert (=> d!15019 (= (getValueByKey!130 (toList!726 lt!29909) lt!29911) e!45421)))

(declare-fun b!69371 () Bool)

(assert (=> b!69371 (= e!45421 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29909)))))))

(declare-fun b!69373 () Bool)

(assert (=> b!69373 (= e!45422 (getValueByKey!130 (t!5001 (toList!726 lt!29909)) lt!29911))))

(declare-fun b!69372 () Bool)

(assert (=> b!69372 (= e!45421 e!45422)))

(declare-fun c!9918 () Bool)

(assert (=> b!69372 (= c!9918 (and ((_ is Cons!1490) (toList!726 lt!29909)) (not (= (_1!1069 (h!2075 (toList!726 lt!29909))) lt!29911))))))

(assert (= (and d!15019 c!9917) b!69371))

(assert (= (and d!15019 (not c!9917)) b!69372))

(assert (= (and b!69372 c!9918) b!69373))

(assert (= (and b!69372 (not c!9918)) b!69374))

(declare-fun m!65411 () Bool)

(assert (=> b!69373 m!65411))

(assert (=> d!14911 d!15019))

(declare-fun lt!30470 () SeekEntryResult!244)

(declare-fun d!15021 () Bool)

(assert (=> d!15021 (and (or ((_ is Undefined!244) lt!30470) (not ((_ is Found!244) lt!30470)) (and (bvsge (index!3106 lt!30470) #b00000000000000000000000000000000) (bvslt (index!3106 lt!30470) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30470) ((_ is Found!244) lt!30470) (not ((_ is MissingVacant!244) lt!30470)) (not (= (index!3108 lt!30470) (index!3107 lt!30171))) (and (bvsge (index!3108 lt!30470) #b00000000000000000000000000000000) (bvslt (index!3108 lt!30470) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30470) (ite ((_ is Found!244) lt!30470) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30470)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (and ((_ is MissingVacant!244) lt!30470) (= (index!3108 lt!30470) (index!3107 lt!30171)) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30470)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!45431 () SeekEntryResult!244)

(assert (=> d!15021 (= lt!30470 e!45431)))

(declare-fun c!9926 () Bool)

(assert (=> d!15021 (= c!9926 (bvsge (x!10858 lt!30171) #b01111111111111111111111111111110))))

(declare-fun lt!30469 () (_ BitVec 64))

(assert (=> d!15021 (= lt!30469 (select (arr!1840 (_keys!3812 newMap!16)) (index!3107 lt!30171)))))

(assert (=> d!15021 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15021 (= (seekKeyOrZeroReturnVacant!0 (x!10858 lt!30171) (index!3107 lt!30171) (index!3107 lt!30171) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30470)))

(declare-fun b!69387 () Bool)

(declare-fun e!45429 () SeekEntryResult!244)

(assert (=> b!69387 (= e!45429 (MissingVacant!244 (index!3107 lt!30171)))))

(declare-fun b!69388 () Bool)

(declare-fun e!45430 () SeekEntryResult!244)

(assert (=> b!69388 (= e!45431 e!45430)))

(declare-fun c!9925 () Bool)

(assert (=> b!69388 (= c!9925 (= lt!30469 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!69389 () Bool)

(assert (=> b!69389 (= e!45430 (Found!244 (index!3107 lt!30171)))))

(declare-fun b!69390 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!69390 (= e!45429 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10858 lt!30171) #b00000000000000000000000000000001) (nextIndex!0 (index!3107 lt!30171) (x!10858 lt!30171) (mask!6113 newMap!16)) (index!3107 lt!30171) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!69391 () Bool)

(assert (=> b!69391 (= e!45431 Undefined!244)))

(declare-fun b!69392 () Bool)

(declare-fun c!9927 () Bool)

(assert (=> b!69392 (= c!9927 (= lt!30469 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69392 (= e!45430 e!45429)))

(assert (= (and d!15021 c!9926) b!69391))

(assert (= (and d!15021 (not c!9926)) b!69388))

(assert (= (and b!69388 c!9925) b!69389))

(assert (= (and b!69388 (not c!9925)) b!69392))

(assert (= (and b!69392 c!9927) b!69387))

(assert (= (and b!69392 (not c!9927)) b!69390))

(declare-fun m!65413 () Bool)

(assert (=> d!15021 m!65413))

(declare-fun m!65415 () Bool)

(assert (=> d!15021 m!65415))

(assert (=> d!15021 m!64585))

(assert (=> d!15021 m!64569))

(declare-fun m!65417 () Bool)

(assert (=> b!69390 m!65417))

(assert (=> b!69390 m!65417))

(assert (=> b!69390 m!64043))

(declare-fun m!65419 () Bool)

(assert (=> b!69390 m!65419))

(assert (=> b!68976 d!15021))

(assert (=> d!14855 d!14795))

(declare-fun d!15023 () Bool)

(declare-fun e!45434 () Bool)

(assert (=> d!15023 e!45434))

(declare-fun res!37217 () Bool)

(assert (=> d!15023 (=> (not res!37217) (not e!45434))))

(declare-fun lt!30473 () SeekEntryResult!244)

(assert (=> d!15023 (= res!37217 ((_ is Found!244) lt!30473))))

(assert (=> d!15023 (= lt!30473 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!15023 true))

(declare-fun _$33!54 () Unit!1913)

(assert (=> d!15023 (= (choose!394 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) _$33!54)))

(declare-fun b!69397 () Bool)

(declare-fun res!37218 () Bool)

(assert (=> b!69397 (=> (not res!37218) (not e!45434))))

(assert (=> b!69397 (= res!37218 (inRange!0 (index!3106 lt!30473) (mask!6113 newMap!16)))))

(declare-fun b!69398 () Bool)

(assert (=> b!69398 (= e!45434 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30473)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!15023 res!37217) b!69397))

(assert (= (and b!69397 res!37218) b!69398))

(assert (=> d!15023 m!64043))

(assert (=> d!15023 m!64341))

(declare-fun m!65421 () Bool)

(assert (=> b!69397 m!65421))

(declare-fun m!65423 () Bool)

(assert (=> b!69398 m!65423))

(assert (=> d!14855 d!15023))

(assert (=> d!14855 d!14981))

(declare-fun d!15025 () Bool)

(declare-fun res!37219 () Bool)

(declare-fun e!45435 () Bool)

(assert (=> d!15025 (=> (not res!37219) (not e!45435))))

(assert (=> d!15025 (= res!37219 (simpleValid!48 (_2!1070 lt!30126)))))

(assert (=> d!15025 (= (valid!282 (_2!1070 lt!30126)) e!45435)))

(declare-fun b!69399 () Bool)

(declare-fun res!37220 () Bool)

(assert (=> b!69399 (=> (not res!37220) (not e!45435))))

(assert (=> b!69399 (= res!37220 (= (arrayCountValidKeys!0 (_keys!3812 (_2!1070 lt!30126)) #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30126)))) (_size!388 (_2!1070 lt!30126))))))

(declare-fun b!69400 () Bool)

(declare-fun res!37221 () Bool)

(assert (=> b!69400 (=> (not res!37221) (not e!45435))))

(assert (=> b!69400 (= res!37221 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (_2!1070 lt!30126)) (mask!6113 (_2!1070 lt!30126))))))

(declare-fun b!69401 () Bool)

(assert (=> b!69401 (= e!45435 (arrayNoDuplicates!0 (_keys!3812 (_2!1070 lt!30126)) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!15025 res!37219) b!69399))

(assert (= (and b!69399 res!37220) b!69400))

(assert (= (and b!69400 res!37221) b!69401))

(declare-fun m!65425 () Bool)

(assert (=> d!15025 m!65425))

(declare-fun m!65427 () Bool)

(assert (=> b!69399 m!65427))

(declare-fun m!65429 () Bool)

(assert (=> b!69400 m!65429))

(declare-fun m!65431 () Bool)

(assert (=> b!69401 m!65431))

(assert (=> b!68901 d!15025))

(declare-fun d!15027 () Bool)

(assert (=> d!15027 (= (get!1137 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2499 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14827 d!15027))

(declare-fun b!69405 () Bool)

(declare-fun e!45437 () Option!136)

(assert (=> b!69405 (= e!45437 None!134)))

(declare-fun d!15029 () Bool)

(declare-fun c!9928 () Bool)

(assert (=> d!15029 (= c!9928 (and ((_ is Cons!1490) (toList!726 lt!29836)) (= (_1!1069 (h!2075 (toList!726 lt!29836))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!45436 () Option!136)

(assert (=> d!15029 (= (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45436)))

(declare-fun b!69402 () Bool)

(assert (=> b!69402 (= e!45436 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29836)))))))

(declare-fun b!69404 () Bool)

(assert (=> b!69404 (= e!45437 (getValueByKey!130 (t!5001 (toList!726 lt!29836)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69403 () Bool)

(assert (=> b!69403 (= e!45436 e!45437)))

(declare-fun c!9929 () Bool)

(assert (=> b!69403 (= c!9929 (and ((_ is Cons!1490) (toList!726 lt!29836)) (not (= (_1!1069 (h!2075 (toList!726 lt!29836))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!15029 c!9928) b!69402))

(assert (= (and d!15029 (not c!9928)) b!69403))

(assert (= (and b!69403 c!9929) b!69404))

(assert (= (and b!69403 (not c!9929)) b!69405))

(assert (=> b!69404 m!64159))

(declare-fun m!65433 () Bool)

(assert (=> b!69404 m!65433))

(assert (=> d!14827 d!15029))

(declare-fun lt!30474 () Bool)

(declare-fun d!15031 () Bool)

(assert (=> d!15031 (= lt!30474 (select (content!72 (toList!726 lt!30046)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(declare-fun e!45438 () Bool)

(assert (=> d!15031 (= lt!30474 e!45438)))

(declare-fun res!37223 () Bool)

(assert (=> d!15031 (=> (not res!37223) (not e!45438))))

(assert (=> d!15031 (= res!37223 ((_ is Cons!1490) (toList!726 lt!30046)))))

(assert (=> d!15031 (= (contains!721 (toList!726 lt!30046) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30474)))

(declare-fun b!69406 () Bool)

(declare-fun e!45439 () Bool)

(assert (=> b!69406 (= e!45438 e!45439)))

(declare-fun res!37222 () Bool)

(assert (=> b!69406 (=> res!37222 e!45439)))

(assert (=> b!69406 (= res!37222 (= (h!2075 (toList!726 lt!30046)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(declare-fun b!69407 () Bool)

(assert (=> b!69407 (= e!45439 (contains!721 (t!5001 (toList!726 lt!30046)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!15031 res!37223) b!69406))

(assert (= (and b!69406 (not res!37222)) b!69407))

(declare-fun m!65435 () Bool)

(assert (=> d!15031 m!65435))

(declare-fun m!65437 () Bool)

(assert (=> d!15031 m!65437))

(declare-fun m!65439 () Bool)

(assert (=> b!69407 m!65439))

(assert (=> b!68807 d!15031))

(declare-fun d!15033 () Bool)

(declare-fun lt!30475 () Bool)

(assert (=> d!15033 (= lt!30475 (select (content!72 lt!29863) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun e!45440 () Bool)

(assert (=> d!15033 (= lt!30475 e!45440)))

(declare-fun res!37225 () Bool)

(assert (=> d!15033 (=> (not res!37225) (not e!45440))))

(assert (=> d!15033 (= res!37225 ((_ is Cons!1490) lt!29863))))

(assert (=> d!15033 (= (contains!721 lt!29863 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))) lt!30475)))

(declare-fun b!69408 () Bool)

(declare-fun e!45441 () Bool)

(assert (=> b!69408 (= e!45440 e!45441)))

(declare-fun res!37224 () Bool)

(assert (=> b!69408 (=> res!37224 e!45441)))

(assert (=> b!69408 (= res!37224 (= (h!2075 lt!29863) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun b!69409 () Bool)

(assert (=> b!69409 (= e!45441 (contains!721 (t!5001 lt!29863) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(assert (= (and d!15033 res!37225) b!69408))

(assert (= (and b!69408 (not res!37224)) b!69409))

(declare-fun m!65441 () Bool)

(assert (=> d!15033 m!65441))

(declare-fun m!65443 () Bool)

(assert (=> d!15033 m!65443))

(declare-fun m!65445 () Bool)

(assert (=> b!69409 m!65445))

(assert (=> b!69162 d!15033))

(assert (=> d!14907 d!14919))

(assert (=> d!14907 d!14911))

(assert (=> d!14907 d!14923))

(declare-fun d!15035 () Bool)

(declare-fun e!45442 () Bool)

(assert (=> d!15035 e!45442))

(declare-fun res!37226 () Bool)

(assert (=> d!15035 (=> res!37226 e!45442)))

(declare-fun lt!30478 () Bool)

(assert (=> d!15035 (= res!37226 (not lt!30478))))

(declare-fun lt!30479 () Bool)

(assert (=> d!15035 (= lt!30478 lt!30479)))

(declare-fun lt!30477 () Unit!1913)

(declare-fun e!45443 () Unit!1913)

(assert (=> d!15035 (= lt!30477 e!45443)))

(declare-fun c!9930 () Bool)

(assert (=> d!15035 (= c!9930 lt!30479)))

(assert (=> d!15035 (= lt!30479 (containsKey!134 (toList!726 lt!29909) lt!29911))))

(assert (=> d!15035 (= (contains!720 lt!29909 lt!29911) lt!30478)))

(declare-fun b!69410 () Bool)

(declare-fun lt!30476 () Unit!1913)

(assert (=> b!69410 (= e!45443 lt!30476)))

(assert (=> b!69410 (= lt!30476 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29909) lt!29911))))

(assert (=> b!69410 (isDefined!84 (getValueByKey!130 (toList!726 lt!29909) lt!29911))))

(declare-fun b!69411 () Bool)

(declare-fun Unit!1949 () Unit!1913)

(assert (=> b!69411 (= e!45443 Unit!1949)))

(declare-fun b!69412 () Bool)

(assert (=> b!69412 (= e!45442 (isDefined!84 (getValueByKey!130 (toList!726 lt!29909) lt!29911)))))

(assert (= (and d!15035 c!9930) b!69410))

(assert (= (and d!15035 (not c!9930)) b!69411))

(assert (= (and d!15035 (not res!37226)) b!69412))

(declare-fun m!65447 () Bool)

(assert (=> d!15035 m!65447))

(declare-fun m!65449 () Bool)

(assert (=> b!69410 m!65449))

(assert (=> b!69410 m!65051))

(assert (=> b!69410 m!65051))

(declare-fun m!65451 () Bool)

(assert (=> b!69410 m!65451))

(assert (=> b!69412 m!65051))

(assert (=> b!69412 m!65051))

(assert (=> b!69412 m!65451))

(assert (=> d!14907 d!15035))

(declare-fun d!15037 () Bool)

(assert (=> d!15037 (= (apply!73 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29911) (apply!73 lt!29909 lt!29911))))

(assert (=> d!15037 true))

(declare-fun _$34!792 () Unit!1913)

(assert (=> d!15037 (= (choose!397 lt!29909 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29911) _$34!792)))

(declare-fun bs!2962 () Bool)

(assert (= bs!2962 d!15037))

(assert (=> bs!2962 m!64287))

(assert (=> bs!2962 m!64287))

(assert (=> bs!2962 m!64293))

(assert (=> bs!2962 m!64273))

(assert (=> d!14907 d!15037))

(declare-fun d!15039 () Bool)

(assert (=> d!15039 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29851) (_1!1069 lt!29775))) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29851) (_1!1069 lt!29775)))))))

(declare-fun bs!2963 () Bool)

(assert (= bs!2963 d!15039))

(assert (=> bs!2963 m!64205))

(declare-fun m!65453 () Bool)

(assert (=> bs!2963 m!65453))

(assert (=> b!68810 d!15039))

(assert (=> b!68810 d!14799))

(declare-fun d!15041 () Bool)

(assert (=> d!15041 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29847) (_1!1069 lt!29777))) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29847) (_1!1069 lt!29777)))))))

(declare-fun bs!2964 () Bool)

(assert (= bs!2964 d!15041))

(assert (=> bs!2964 m!64193))

(declare-fun m!65455 () Bool)

(assert (=> bs!2964 m!65455))

(assert (=> b!69096 d!15041))

(assert (=> b!69096 d!14785))

(declare-fun d!15043 () Bool)

(declare-fun res!37227 () Bool)

(declare-fun e!45444 () Bool)

(assert (=> d!15043 (=> res!37227 e!45444)))

(assert (=> d!15043 (= res!37227 (and ((_ is Cons!1490) lt!29848) (= (_1!1069 (h!2075 lt!29848)) (_1!1069 lt!29777))))))

(assert (=> d!15043 (= (containsKey!134 lt!29848 (_1!1069 lt!29777)) e!45444)))

(declare-fun b!69413 () Bool)

(declare-fun e!45445 () Bool)

(assert (=> b!69413 (= e!45444 e!45445)))

(declare-fun res!37228 () Bool)

(assert (=> b!69413 (=> (not res!37228) (not e!45445))))

(assert (=> b!69413 (= res!37228 (and (or (not ((_ is Cons!1490) lt!29848)) (bvsle (_1!1069 (h!2075 lt!29848)) (_1!1069 lt!29777))) ((_ is Cons!1490) lt!29848) (bvslt (_1!1069 (h!2075 lt!29848)) (_1!1069 lt!29777))))))

(declare-fun b!69414 () Bool)

(assert (=> b!69414 (= e!45445 (containsKey!134 (t!5001 lt!29848) (_1!1069 lt!29777)))))

(assert (= (and d!15043 (not res!37227)) b!69413))

(assert (= (and b!69413 res!37228) b!69414))

(declare-fun m!65457 () Bool)

(assert (=> b!69414 m!65457))

(assert (=> b!69101 d!15043))

(declare-fun d!15045 () Bool)

(declare-fun e!45446 () Bool)

(assert (=> d!15045 e!45446))

(declare-fun res!37230 () Bool)

(assert (=> d!15045 (=> (not res!37230) (not e!45446))))

(declare-fun lt!30482 () ListLongMap!1421)

(assert (=> d!15045 (= res!37230 (contains!720 lt!30482 (_1!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))))

(declare-fun lt!30483 () List!1494)

(assert (=> d!15045 (= lt!30482 (ListLongMap!1422 lt!30483))))

(declare-fun lt!30480 () Unit!1913)

(declare-fun lt!30481 () Unit!1913)

(assert (=> d!15045 (= lt!30480 lt!30481)))

(assert (=> d!15045 (= (getValueByKey!130 lt!30483 (_1!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))) (Some!135 (_2!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))))

(assert (=> d!15045 (= lt!30481 (lemmaContainsTupThenGetReturnValue!49 lt!30483 (_1!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (_2!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))))

(assert (=> d!15045 (= lt!30483 (insertStrictlySorted!51 (toList!726 (ite c!9841 call!5902 (ite c!9845 call!5900 call!5901))) (_1!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (_2!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))))

(assert (=> d!15045 (= (+!89 (ite c!9841 call!5902 (ite c!9845 call!5900 call!5901)) (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) lt!30482)))

(declare-fun b!69415 () Bool)

(declare-fun res!37229 () Bool)

(assert (=> b!69415 (=> (not res!37229) (not e!45446))))

(assert (=> b!69415 (= res!37229 (= (getValueByKey!130 (toList!726 lt!30482) (_1!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))) (Some!135 (_2!1069 (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))))

(declare-fun b!69416 () Bool)

(assert (=> b!69416 (= e!45446 (contains!721 (toList!726 lt!30482) (ite (or c!9841 c!9845) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (= (and d!15045 res!37230) b!69415))

(assert (= (and b!69415 res!37229) b!69416))

(declare-fun m!65459 () Bool)

(assert (=> d!15045 m!65459))

(declare-fun m!65461 () Bool)

(assert (=> d!15045 m!65461))

(declare-fun m!65463 () Bool)

(assert (=> d!15045 m!65463))

(declare-fun m!65465 () Bool)

(assert (=> d!15045 m!65465))

(declare-fun m!65467 () Bool)

(assert (=> b!69415 m!65467))

(declare-fun m!65469 () Bool)

(assert (=> b!69416 m!65469))

(assert (=> bm!5901 d!15045))

(declare-fun d!15047 () Bool)

(declare-fun e!45447 () Bool)

(assert (=> d!15047 e!45447))

(declare-fun res!37232 () Bool)

(assert (=> d!15047 (=> (not res!37232) (not e!45447))))

(declare-fun lt!30486 () ListLongMap!1421)

(assert (=> d!15047 (= res!37232 (contains!720 lt!30486 (_1!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun lt!30487 () List!1494)

(assert (=> d!15047 (= lt!30486 (ListLongMap!1422 lt!30487))))

(declare-fun lt!30484 () Unit!1913)

(declare-fun lt!30485 () Unit!1913)

(assert (=> d!15047 (= lt!30484 lt!30485)))

(assert (=> d!15047 (= (getValueByKey!130 lt!30487 (_1!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15047 (= lt!30485 (lemmaContainsTupThenGetReturnValue!49 lt!30487 (_1!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15047 (= lt!30487 (insertStrictlySorted!51 (toList!726 (ite c!9883 call!5926 (ite c!9887 call!5924 call!5925))) (_1!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15047 (= (+!89 (ite c!9883 call!5926 (ite c!9887 call!5924 call!5925)) (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) lt!30486)))

(declare-fun b!69417 () Bool)

(declare-fun res!37231 () Bool)

(assert (=> b!69417 (=> (not res!37231) (not e!45447))))

(assert (=> b!69417 (= res!37231 (= (getValueByKey!130 (toList!726 lt!30486) (_1!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))))

(declare-fun b!69418 () Bool)

(assert (=> b!69418 (= e!45447 (contains!721 (toList!726 lt!30486) (ite (or c!9883 c!9887) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (= (and d!15047 res!37232) b!69417))

(assert (= (and b!69417 res!37231) b!69418))

(declare-fun m!65471 () Bool)

(assert (=> d!15047 m!65471))

(declare-fun m!65473 () Bool)

(assert (=> d!15047 m!65473))

(declare-fun m!65475 () Bool)

(assert (=> d!15047 m!65475))

(declare-fun m!65477 () Bool)

(assert (=> d!15047 m!65477))

(declare-fun m!65479 () Bool)

(assert (=> b!69417 m!65479))

(declare-fun m!65481 () Bool)

(assert (=> b!69418 m!65481))

(assert (=> bm!5925 d!15047))

(declare-fun d!15049 () Bool)

(declare-fun res!37233 () Bool)

(declare-fun e!45448 () Bool)

(assert (=> d!15049 (=> res!37233 e!45448)))

(assert (=> d!15049 (= res!37233 (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!15049 (= (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!45448)))

(declare-fun b!69419 () Bool)

(declare-fun e!45449 () Bool)

(assert (=> b!69419 (= e!45448 e!45449)))

(declare-fun res!37234 () Bool)

(assert (=> b!69419 (=> (not res!37234) (not e!45449))))

(assert (=> b!69419 (= res!37234 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!69420 () Bool)

(assert (=> b!69420 (= e!45449 (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15049 (not res!37233)) b!69419))

(assert (= (and b!69419 res!37234) b!69420))

(declare-fun m!65483 () Bool)

(assert (=> d!15049 m!65483))

(assert (=> b!69420 m!64043))

(declare-fun m!65485 () Bool)

(assert (=> b!69420 m!65485))

(assert (=> b!68932 d!15049))

(declare-fun d!15051 () Bool)

(assert (=> d!15051 (= (get!1137 (getValueByKey!130 (toList!726 lt!29929) lt!29923)) (v!2499 (getValueByKey!130 (toList!726 lt!29929) lt!29923)))))

(assert (=> d!14927 d!15051))

(declare-fun b!69424 () Bool)

(declare-fun e!45451 () Option!136)

(assert (=> b!69424 (= e!45451 None!134)))

(declare-fun d!15053 () Bool)

(declare-fun c!9931 () Bool)

(assert (=> d!15053 (= c!9931 (and ((_ is Cons!1490) (toList!726 lt!29929)) (= (_1!1069 (h!2075 (toList!726 lt!29929))) lt!29923)))))

(declare-fun e!45450 () Option!136)

(assert (=> d!15053 (= (getValueByKey!130 (toList!726 lt!29929) lt!29923) e!45450)))

(declare-fun b!69421 () Bool)

(assert (=> b!69421 (= e!45450 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29929)))))))

(declare-fun b!69423 () Bool)

(assert (=> b!69423 (= e!45451 (getValueByKey!130 (t!5001 (toList!726 lt!29929)) lt!29923))))

(declare-fun b!69422 () Bool)

(assert (=> b!69422 (= e!45450 e!45451)))

(declare-fun c!9932 () Bool)

(assert (=> b!69422 (= c!9932 (and ((_ is Cons!1490) (toList!726 lt!29929)) (not (= (_1!1069 (h!2075 (toList!726 lt!29929))) lt!29923))))))

(assert (= (and d!15053 c!9931) b!69421))

(assert (= (and d!15053 (not c!9931)) b!69422))

(assert (= (and b!69422 c!9932) b!69423))

(assert (= (and b!69422 (not c!9932)) b!69424))

(declare-fun m!65487 () Bool)

(assert (=> b!69423 m!65487))

(assert (=> d!14927 d!15053))

(declare-fun b!69425 () Bool)

(declare-fun e!45453 () Bool)

(declare-fun e!45452 () Bool)

(assert (=> b!69425 (= e!45453 e!45452)))

(declare-fun c!9933 () Bool)

(assert (=> b!69425 (= c!9933 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!69426 () Bool)

(declare-fun call!5943 () Bool)

(assert (=> b!69426 (= e!45452 call!5943)))

(declare-fun b!69427 () Bool)

(declare-fun e!45454 () Bool)

(assert (=> b!69427 (= e!45452 e!45454)))

(declare-fun lt!30490 () (_ BitVec 64))

(assert (=> b!69427 (= lt!30490 (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!30488 () Unit!1913)

(assert (=> b!69427 (= lt!30488 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 newMap!16) lt!30490 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!69427 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30490 #b00000000000000000000000000000000)))

(declare-fun lt!30489 () Unit!1913)

(assert (=> b!69427 (= lt!30489 lt!30488)))

(declare-fun res!37235 () Bool)

(assert (=> b!69427 (= res!37235 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3812 newMap!16) (mask!6113 newMap!16)) (Found!244 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!69427 (=> (not res!37235) (not e!45454))))

(declare-fun bm!5940 () Bool)

(assert (=> bm!5940 (= call!5943 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!69428 () Bool)

(assert (=> b!69428 (= e!45454 call!5943)))

(declare-fun d!15055 () Bool)

(declare-fun res!37236 () Bool)

(assert (=> d!15055 (=> res!37236 e!45453)))

(assert (=> d!15055 (= res!37236 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15055 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 newMap!16) (mask!6113 newMap!16)) e!45453)))

(assert (= (and d!15055 (not res!37236)) b!69425))

(assert (= (and b!69425 c!9933) b!69427))

(assert (= (and b!69425 (not c!9933)) b!69426))

(assert (= (and b!69427 res!37235) b!69428))

(assert (= (or b!69428 b!69426) bm!5940))

(assert (=> b!69425 m!65269))

(assert (=> b!69425 m!65269))

(declare-fun m!65489 () Bool)

(assert (=> b!69425 m!65489))

(assert (=> b!69427 m!65269))

(declare-fun m!65491 () Bool)

(assert (=> b!69427 m!65491))

(declare-fun m!65493 () Bool)

(assert (=> b!69427 m!65493))

(assert (=> b!69427 m!65269))

(declare-fun m!65495 () Bool)

(assert (=> b!69427 m!65495))

(declare-fun m!65497 () Bool)

(assert (=> bm!5940 m!65497))

(assert (=> bm!5929 d!15055))

(declare-fun d!15057 () Bool)

(assert (=> d!15057 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30491 () Unit!1913)

(assert (=> d!15057 (= lt!30491 (choose!395 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45455 () Bool)

(assert (=> d!15057 e!45455))

(declare-fun res!37237 () Bool)

(assert (=> d!15057 (=> (not res!37237) (not e!45455))))

(assert (=> d!15057 (= res!37237 (isStrictlySorted!285 (toList!726 lt!29926)))))

(assert (=> d!15057 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000) lt!30491)))

(declare-fun b!69429 () Bool)

(assert (=> b!69429 (= e!45455 (containsKey!134 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15057 res!37237) b!69429))

(assert (=> d!15057 m!64805))

(assert (=> d!15057 m!64805))

(assert (=> d!15057 m!64807))

(declare-fun m!65499 () Bool)

(assert (=> d!15057 m!65499))

(declare-fun m!65501 () Bool)

(assert (=> d!15057 m!65501))

(assert (=> b!69429 m!64801))

(assert (=> b!69086 d!15057))

(declare-fun d!15059 () Bool)

(assert (=> d!15059 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2965 () Bool)

(assert (= bs!2965 d!15059))

(assert (=> bs!2965 m!64805))

(declare-fun m!65503 () Bool)

(assert (=> bs!2965 m!65503))

(assert (=> b!69086 d!15059))

(declare-fun b!69433 () Bool)

(declare-fun e!45457 () Option!136)

(assert (=> b!69433 (= e!45457 None!134)))

(declare-fun d!15061 () Bool)

(declare-fun c!9934 () Bool)

(assert (=> d!15061 (= c!9934 (and ((_ is Cons!1490) (toList!726 lt!29926)) (= (_1!1069 (h!2075 (toList!726 lt!29926))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45456 () Option!136)

(assert (=> d!15061 (= (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000) e!45456)))

(declare-fun b!69430 () Bool)

(assert (=> b!69430 (= e!45456 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29926)))))))

(declare-fun b!69432 () Bool)

(assert (=> b!69432 (= e!45457 (getValueByKey!130 (t!5001 (toList!726 lt!29926)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69431 () Bool)

(assert (=> b!69431 (= e!45456 e!45457)))

(declare-fun c!9935 () Bool)

(assert (=> b!69431 (= c!9935 (and ((_ is Cons!1490) (toList!726 lt!29926)) (not (= (_1!1069 (h!2075 (toList!726 lt!29926))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15061 c!9934) b!69430))

(assert (= (and d!15061 (not c!9934)) b!69431))

(assert (= (and b!69431 c!9935) b!69432))

(assert (= (and b!69431 (not c!9935)) b!69433))

(declare-fun m!65505 () Bool)

(assert (=> b!69432 m!65505))

(assert (=> b!69086 d!15061))

(declare-fun d!15063 () Bool)

(assert (=> d!15063 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (getCurrentListMap!421 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15063 true))

(declare-fun _$5!74 () Unit!1913)

(assert (=> d!15063 (= (choose!400 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3106 lt!30007) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (defaultEntry!2168 newMap!16)) _$5!74)))

(declare-fun bs!2966 () Bool)

(assert (= bs!2966 d!15063))

(assert (=> bs!2966 m!64251))

(assert (=> bs!2966 m!64251))

(assert (=> bs!2966 m!64463))

(assert (=> bs!2966 m!64323))

(assert (=> bs!2966 m!64333))

(assert (=> d!14943 d!15063))

(assert (=> d!14943 d!14981))

(declare-fun d!15065 () Bool)

(assert (=> d!15065 (= (content!73 Nil!1492) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!14837 d!15065))

(declare-fun d!15067 () Bool)

(assert (not d!15067))

(assert (=> b!69085 d!15067))

(declare-fun d!15069 () Bool)

(declare-fun e!45458 () Bool)

(assert (=> d!15069 e!45458))

(declare-fun res!37238 () Bool)

(assert (=> d!15069 (=> res!37238 e!45458)))

(declare-fun lt!30494 () Bool)

(assert (=> d!15069 (= res!37238 (not lt!30494))))

(declare-fun lt!30495 () Bool)

(assert (=> d!15069 (= lt!30494 lt!30495)))

(declare-fun lt!30493 () Unit!1913)

(declare-fun e!45459 () Unit!1913)

(assert (=> d!15069 (= lt!30493 e!45459)))

(declare-fun c!9936 () Bool)

(assert (=> d!15069 (= c!9936 lt!30495)))

(assert (=> d!15069 (= lt!30495 (containsKey!134 (toList!726 lt!30046) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15069 (= (contains!720 lt!30046 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30494)))

(declare-fun b!69434 () Bool)

(declare-fun lt!30492 () Unit!1913)

(assert (=> b!69434 (= e!45459 lt!30492)))

(assert (=> b!69434 (= lt!30492 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30046) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> b!69434 (isDefined!84 (getValueByKey!130 (toList!726 lt!30046) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69435 () Bool)

(declare-fun Unit!1950 () Unit!1913)

(assert (=> b!69435 (= e!45459 Unit!1950)))

(declare-fun b!69436 () Bool)

(assert (=> b!69436 (= e!45458 (isDefined!84 (getValueByKey!130 (toList!726 lt!30046) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (= (and d!15069 c!9936) b!69434))

(assert (= (and d!15069 (not c!9936)) b!69435))

(assert (= (and d!15069 (not res!37238)) b!69436))

(declare-fun m!65507 () Bool)

(assert (=> d!15069 m!65507))

(declare-fun m!65509 () Bool)

(assert (=> b!69434 m!65509))

(assert (=> b!69434 m!64429))

(assert (=> b!69434 m!64429))

(declare-fun m!65511 () Bool)

(assert (=> b!69434 m!65511))

(assert (=> b!69436 m!64429))

(assert (=> b!69436 m!64429))

(assert (=> b!69436 m!65511))

(assert (=> d!14765 d!15069))

(declare-fun b!69440 () Bool)

(declare-fun e!45461 () Option!136)

(assert (=> b!69440 (= e!45461 None!134)))

(declare-fun c!9937 () Bool)

(declare-fun d!15071 () Bool)

(assert (=> d!15071 (= c!9937 (and ((_ is Cons!1490) lt!30047) (= (_1!1069 (h!2075 lt!30047)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun e!45460 () Option!136)

(assert (=> d!15071 (= (getValueByKey!130 lt!30047 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) e!45460)))

(declare-fun b!69437 () Bool)

(assert (=> b!69437 (= e!45460 (Some!135 (_2!1069 (h!2075 lt!30047))))))

(declare-fun b!69439 () Bool)

(assert (=> b!69439 (= e!45461 (getValueByKey!130 (t!5001 lt!30047) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69438 () Bool)

(assert (=> b!69438 (= e!45460 e!45461)))

(declare-fun c!9938 () Bool)

(assert (=> b!69438 (= c!9938 (and ((_ is Cons!1490) lt!30047) (not (= (_1!1069 (h!2075 lt!30047)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15071 c!9937) b!69437))

(assert (= (and d!15071 (not c!9937)) b!69438))

(assert (= (and b!69438 c!9938) b!69439))

(assert (= (and b!69438 (not c!9938)) b!69440))

(declare-fun m!65513 () Bool)

(assert (=> b!69439 m!65513))

(assert (=> d!14765 d!15071))

(declare-fun d!15073 () Bool)

(assert (=> d!15073 (= (getValueByKey!130 lt!30047 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!30496 () Unit!1913)

(assert (=> d!15073 (= lt!30496 (choose!390 lt!30047 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun e!45462 () Bool)

(assert (=> d!15073 e!45462))

(declare-fun res!37239 () Bool)

(assert (=> d!15073 (=> (not res!37239) (not e!45462))))

(assert (=> d!15073 (= res!37239 (isStrictlySorted!285 lt!30047))))

(assert (=> d!15073 (= (lemmaContainsTupThenGetReturnValue!49 lt!30047 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30496)))

(declare-fun b!69441 () Bool)

(declare-fun res!37240 () Bool)

(assert (=> b!69441 (=> (not res!37240) (not e!45462))))

(assert (=> b!69441 (= res!37240 (containsKey!134 lt!30047 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69442 () Bool)

(assert (=> b!69442 (= e!45462 (contains!721 lt!30047 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (= (and d!15073 res!37239) b!69441))

(assert (= (and b!69441 res!37240) b!69442))

(assert (=> d!15073 m!64423))

(declare-fun m!65515 () Bool)

(assert (=> d!15073 m!65515))

(declare-fun m!65517 () Bool)

(assert (=> d!15073 m!65517))

(declare-fun m!65519 () Bool)

(assert (=> b!69441 m!65519))

(declare-fun m!65521 () Bool)

(assert (=> b!69442 m!65521))

(assert (=> d!14765 d!15073))

(declare-fun bm!5941 () Bool)

(declare-fun call!5944 () List!1494)

(declare-fun call!5946 () List!1494)

(assert (=> bm!5941 (= call!5944 call!5946)))

(declare-fun b!69443 () Bool)

(declare-fun e!45466 () List!1494)

(declare-fun call!5945 () List!1494)

(assert (=> b!69443 (= e!45466 call!5945)))

(declare-fun b!69444 () Bool)

(declare-fun e!45465 () List!1494)

(assert (=> b!69444 (= e!45465 (insertStrictlySorted!51 (t!5001 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69446 () Bool)

(declare-fun res!37242 () Bool)

(declare-fun e!45464 () Bool)

(assert (=> b!69446 (=> (not res!37242) (not e!45464))))

(declare-fun lt!30497 () List!1494)

(assert (=> b!69446 (= res!37242 (containsKey!134 lt!30497 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69447 () Bool)

(declare-fun e!45463 () List!1494)

(declare-fun e!45467 () List!1494)

(assert (=> b!69447 (= e!45463 e!45467)))

(declare-fun c!9939 () Bool)

(assert (=> b!69447 (= c!9939 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69448 () Bool)

(declare-fun c!9940 () Bool)

(assert (=> b!69448 (= e!45465 (ite c!9939 (t!5001 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (ite c!9940 (Cons!1490 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (t!5001 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) Nil!1491)))))

(declare-fun b!69449 () Bool)

(assert (=> b!69449 (= e!45466 call!5945)))

(declare-fun b!69450 () Bool)

(assert (=> b!69450 (= e!45467 call!5944)))

(declare-fun b!69451 () Bool)

(assert (=> b!69451 (= e!45463 call!5946)))

(declare-fun bm!5942 () Bool)

(declare-fun c!9941 () Bool)

(assert (=> bm!5942 (= call!5946 ($colon$colon!63 e!45465 (ite c!9941 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun c!9942 () Bool)

(assert (=> bm!5942 (= c!9942 c!9941)))

(declare-fun b!69452 () Bool)

(assert (=> b!69452 (= e!45464 (contains!721 lt!30497 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun bm!5943 () Bool)

(assert (=> bm!5943 (= call!5945 call!5944)))

(declare-fun b!69445 () Bool)

(assert (=> b!69445 (= c!9940 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (bvsgt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> b!69445 (= e!45467 e!45466)))

(declare-fun d!15075 () Bool)

(assert (=> d!15075 e!45464))

(declare-fun res!37241 () Bool)

(assert (=> d!15075 (=> (not res!37241) (not e!45464))))

(assert (=> d!15075 (= res!37241 (isStrictlySorted!285 lt!30497))))

(assert (=> d!15075 (= lt!30497 e!45463)))

(assert (=> d!15075 (= c!9941 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> d!15075 (isStrictlySorted!285 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15075 (= (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30497)))

(assert (= (and d!15075 c!9941) b!69451))

(assert (= (and d!15075 (not c!9941)) b!69447))

(assert (= (and b!69447 c!9939) b!69450))

(assert (= (and b!69447 (not c!9939)) b!69445))

(assert (= (and b!69445 c!9940) b!69449))

(assert (= (and b!69445 (not c!9940)) b!69443))

(assert (= (or b!69449 b!69443) bm!5943))

(assert (= (or b!69450 bm!5943) bm!5941))

(assert (= (or b!69451 bm!5941) bm!5942))

(assert (= (and bm!5942 c!9942) b!69444))

(assert (= (and bm!5942 (not c!9942)) b!69448))

(assert (= (and d!15075 res!37241) b!69446))

(assert (= (and b!69446 res!37242) b!69452))

(declare-fun m!65523 () Bool)

(assert (=> b!69444 m!65523))

(declare-fun m!65525 () Bool)

(assert (=> d!15075 m!65525))

(declare-fun m!65527 () Bool)

(assert (=> d!15075 m!65527))

(declare-fun m!65529 () Bool)

(assert (=> b!69446 m!65529))

(declare-fun m!65531 () Bool)

(assert (=> bm!5942 m!65531))

(declare-fun m!65533 () Bool)

(assert (=> b!69452 m!65533))

(assert (=> d!14765 d!15075))

(declare-fun d!15077 () Bool)

(declare-fun lt!30498 () Bool)

(assert (=> d!15077 (= lt!30498 (select (content!72 (toList!726 lt!30366)) (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun e!45468 () Bool)

(assert (=> d!15077 (= lt!30498 e!45468)))

(declare-fun res!37244 () Bool)

(assert (=> d!15077 (=> (not res!37244) (not e!45468))))

(assert (=> d!15077 (= res!37244 ((_ is Cons!1490) (toList!726 lt!30366)))))

(assert (=> d!15077 (= (contains!721 (toList!726 lt!30366) (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30498)))

(declare-fun b!69453 () Bool)

(declare-fun e!45469 () Bool)

(assert (=> b!69453 (= e!45468 e!45469)))

(declare-fun res!37243 () Bool)

(assert (=> b!69453 (=> res!37243 e!45469)))

(assert (=> b!69453 (= res!37243 (= (h!2075 (toList!726 lt!30366)) (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!69454 () Bool)

(assert (=> b!69454 (= e!45469 (contains!721 (t!5001 (toList!726 lt!30366)) (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15077 res!37244) b!69453))

(assert (= (and b!69453 (not res!37243)) b!69454))

(declare-fun m!65535 () Bool)

(assert (=> d!15077 m!65535))

(declare-fun m!65537 () Bool)

(assert (=> d!15077 m!65537))

(declare-fun m!65539 () Bool)

(assert (=> b!69454 m!65539))

(assert (=> b!69233 d!15077))

(declare-fun d!15079 () Bool)

(declare-fun lt!30499 () Bool)

(assert (=> d!15079 (= lt!30499 (select (content!73 Nil!1492) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45470 () Bool)

(assert (=> d!15079 (= lt!30499 e!45470)))

(declare-fun res!37246 () Bool)

(assert (=> d!15079 (=> (not res!37246) (not e!45470))))

(assert (=> d!15079 (= res!37246 ((_ is Cons!1491) Nil!1492))))

(assert (=> d!15079 (= (contains!722 Nil!1492 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30499)))

(declare-fun b!69455 () Bool)

(declare-fun e!45471 () Bool)

(assert (=> b!69455 (= e!45470 e!45471)))

(declare-fun res!37245 () Bool)

(assert (=> b!69455 (=> res!37245 e!45471)))

(assert (=> b!69455 (= res!37245 (= (h!2076 Nil!1492) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69456 () Bool)

(assert (=> b!69456 (= e!45471 (contains!722 (t!5002 Nil!1492) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15079 res!37246) b!69455))

(assert (= (and b!69455 (not res!37245)) b!69456))

(assert (=> d!15079 m!64795))

(assert (=> d!15079 m!64555))

(declare-fun m!65541 () Bool)

(assert (=> d!15079 m!65541))

(assert (=> b!69456 m!64555))

(declare-fun m!65543 () Bool)

(assert (=> b!69456 m!65543))

(assert (=> b!69025 d!15079))

(declare-fun b!69457 () Bool)

(declare-fun e!45472 () Bool)

(declare-fun lt!30506 () ListLongMap!1421)

(assert (=> b!69457 (= e!45472 (= lt!30506 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun d!15081 () Bool)

(declare-fun e!45473 () Bool)

(assert (=> d!15081 e!45473))

(declare-fun res!37250 () Bool)

(assert (=> d!15081 (=> (not res!37250) (not e!45473))))

(assert (=> d!15081 (= res!37250 (not (contains!720 lt!30506 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45476 () ListLongMap!1421)

(assert (=> d!15081 (= lt!30506 e!45476)))

(declare-fun c!9945 () Bool)

(assert (=> d!15081 (= c!9945 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!15081 (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992))))))

(assert (=> d!15081 (= (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))) lt!30506)))

(declare-fun b!69458 () Bool)

(declare-fun res!37248 () Bool)

(assert (=> b!69458 (=> (not res!37248) (not e!45473))))

(assert (=> b!69458 (= res!37248 (not (contains!720 lt!30506 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!5944 () Bool)

(declare-fun call!5947 () ListLongMap!1421)

(assert (=> bm!5944 (= call!5947 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (_values!2151 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992))) (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) (minValue!2074 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!69459 () Bool)

(assert (=> b!69459 (= e!45472 (isEmpty!315 lt!30506))))

(declare-fun b!69460 () Bool)

(declare-fun e!45478 () Bool)

(declare-fun e!45477 () Bool)

(assert (=> b!69460 (= e!45478 e!45477)))

(assert (=> b!69460 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun res!37249 () Bool)

(assert (=> b!69460 (= res!37249 (contains!720 lt!30506 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!69460 (=> (not res!37249) (not e!45477))))

(declare-fun b!69461 () Bool)

(assert (=> b!69461 (= e!45476 (ListLongMap!1422 Nil!1491))))

(declare-fun b!69462 () Bool)

(assert (=> b!69462 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> b!69462 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> b!69462 (= e!45477 (= (apply!73 lt!30506 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69463 () Bool)

(declare-fun e!45475 () Bool)

(assert (=> b!69463 (= e!45475 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!69463 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!69464 () Bool)

(declare-fun lt!30501 () Unit!1913)

(declare-fun lt!30504 () Unit!1913)

(assert (=> b!69464 (= lt!30501 lt!30504)))

(declare-fun lt!30503 () (_ BitVec 64))

(declare-fun lt!30500 () V!2923)

(declare-fun lt!30502 () ListLongMap!1421)

(declare-fun lt!30505 () (_ BitVec 64))

(assert (=> b!69464 (not (contains!720 (+!89 lt!30502 (tuple2!2119 lt!30505 lt!30500)) lt!30503))))

(assert (=> b!69464 (= lt!30504 (addStillNotContains!24 lt!30502 lt!30505 lt!30500 lt!30503))))

(assert (=> b!69464 (= lt!30503 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69464 (= lt!30500 (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69464 (= lt!30505 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!69464 (= lt!30502 call!5947)))

(declare-fun e!45474 () ListLongMap!1421)

(assert (=> b!69464 (= e!45474 (+!89 call!5947 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69465 () Bool)

(assert (=> b!69465 (= e!45474 call!5947)))

(declare-fun b!69466 () Bool)

(assert (=> b!69466 (= e!45476 e!45474)))

(declare-fun c!9946 () Bool)

(assert (=> b!69466 (= c!9946 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!69467 () Bool)

(assert (=> b!69467 (= e!45478 e!45472)))

(declare-fun c!9943 () Bool)

(assert (=> b!69467 (= c!9943 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!69468 () Bool)

(assert (=> b!69468 (= e!45473 e!45478)))

(declare-fun c!9944 () Bool)

(assert (=> b!69468 (= c!9944 e!45475)))

(declare-fun res!37247 () Bool)

(assert (=> b!69468 (=> (not res!37247) (not e!45475))))

(assert (=> b!69468 (= res!37247 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15081 c!9945) b!69461))

(assert (= (and d!15081 (not c!9945)) b!69466))

(assert (= (and b!69466 c!9946) b!69464))

(assert (= (and b!69466 (not c!9946)) b!69465))

(assert (= (or b!69464 b!69465) bm!5944))

(assert (= (and d!15081 res!37250) b!69458))

(assert (= (and b!69458 res!37248) b!69468))

(assert (= (and b!69468 res!37247) b!69463))

(assert (= (and b!69468 c!9944) b!69460))

(assert (= (and b!69468 (not c!9944)) b!69467))

(assert (= (and b!69460 res!37249) b!69462))

(assert (= (and b!69467 c!9943) b!69457))

(assert (= (and b!69467 (not c!9943)) b!69459))

(declare-fun b_lambda!3119 () Bool)

(assert (=> (not b_lambda!3119) (not b!69462)))

(assert (=> b!69462 t!4998))

(declare-fun b_and!4265 () Bool)

(assert (= b_and!4261 (and (=> t!4998 result!2609) b_and!4265)))

(assert (=> b!69462 t!5000))

(declare-fun b_and!4267 () Bool)

(assert (= b_and!4263 (and (=> t!5000 result!2613) b_and!4267)))

(declare-fun b_lambda!3121 () Bool)

(assert (=> (not b_lambda!3121) (not b!69464)))

(assert (=> b!69464 t!4998))

(declare-fun b_and!4269 () Bool)

(assert (= b_and!4265 (and (=> t!4998 result!2609) b_and!4269)))

(assert (=> b!69464 t!5000))

(declare-fun b_and!4271 () Bool)

(assert (= b_and!4267 (and (=> t!5000 result!2613) b_and!4271)))

(declare-fun m!65545 () Bool)

(assert (=> d!15081 m!65545))

(assert (=> d!15081 m!64067))

(assert (=> b!69460 m!65483))

(assert (=> b!69460 m!65483))

(declare-fun m!65547 () Bool)

(assert (=> b!69460 m!65547))

(declare-fun m!65549 () Bool)

(assert (=> b!69459 m!65549))

(declare-fun m!65551 () Bool)

(assert (=> b!69457 m!65551))

(declare-fun m!65553 () Bool)

(assert (=> b!69458 m!65553))

(declare-fun m!65555 () Bool)

(assert (=> b!69462 m!65555))

(assert (=> b!69462 m!65555))

(assert (=> b!69462 m!64047))

(declare-fun m!65557 () Bool)

(assert (=> b!69462 m!65557))

(assert (=> b!69462 m!65483))

(assert (=> b!69462 m!65483))

(declare-fun m!65559 () Bool)

(assert (=> b!69462 m!65559))

(assert (=> b!69462 m!64047))

(assert (=> bm!5944 m!65551))

(assert (=> b!69466 m!65483))

(assert (=> b!69466 m!65483))

(declare-fun m!65561 () Bool)

(assert (=> b!69466 m!65561))

(assert (=> b!69463 m!65483))

(assert (=> b!69463 m!65483))

(assert (=> b!69463 m!65561))

(declare-fun m!65563 () Bool)

(assert (=> b!69464 m!65563))

(assert (=> b!69464 m!65555))

(assert (=> b!69464 m!64047))

(assert (=> b!69464 m!65557))

(declare-fun m!65565 () Bool)

(assert (=> b!69464 m!65565))

(assert (=> b!69464 m!65483))

(declare-fun m!65567 () Bool)

(assert (=> b!69464 m!65567))

(assert (=> b!69464 m!64047))

(assert (=> b!69464 m!65565))

(declare-fun m!65569 () Bool)

(assert (=> b!69464 m!65569))

(assert (=> b!69464 m!65555))

(assert (=> b!68913 d!15081))

(declare-fun d!15083 () Bool)

(assert (=> d!15083 (= (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69148 d!15083))

(declare-fun d!15085 () Bool)

(declare-fun e!45479 () Bool)

(assert (=> d!15085 e!45479))

(declare-fun res!37252 () Bool)

(assert (=> d!15085 (=> (not res!37252) (not e!45479))))

(declare-fun lt!30509 () ListLongMap!1421)

(assert (=> d!15085 (= res!37252 (contains!720 lt!30509 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!30510 () List!1494)

(assert (=> d!15085 (= lt!30509 (ListLongMap!1422 lt!30510))))

(declare-fun lt!30507 () Unit!1913)

(declare-fun lt!30508 () Unit!1913)

(assert (=> d!15085 (= lt!30507 lt!30508)))

(assert (=> d!15085 (= (getValueByKey!130 lt!30510 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15085 (= lt!30508 (lemmaContainsTupThenGetReturnValue!49 lt!30510 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15085 (= lt!30510 (insertStrictlySorted!51 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15085 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30509)))

(declare-fun b!69469 () Bool)

(declare-fun res!37251 () Bool)

(assert (=> b!69469 (=> (not res!37251) (not e!45479))))

(assert (=> b!69469 (= res!37251 (= (getValueByKey!130 (toList!726 lt!30509) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69470 () Bool)

(assert (=> b!69470 (= e!45479 (contains!721 (toList!726 lt!30509) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!15085 res!37252) b!69469))

(assert (= (and b!69469 res!37251) b!69470))

(declare-fun m!65571 () Bool)

(assert (=> d!15085 m!65571))

(declare-fun m!65573 () Bool)

(assert (=> d!15085 m!65573))

(declare-fun m!65575 () Bool)

(assert (=> d!15085 m!65575))

(declare-fun m!65577 () Bool)

(assert (=> d!15085 m!65577))

(declare-fun m!65579 () Bool)

(assert (=> b!69469 m!65579))

(declare-fun m!65581 () Bool)

(assert (=> b!69470 m!65581))

(assert (=> b!69263 d!15085))

(assert (=> b!69263 d!14865))

(assert (=> b!69263 d!14941))

(declare-fun d!15087 () Bool)

(assert (=> d!15087 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29862) (_1!1069 lt!29777))) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29862) (_1!1069 lt!29777)))))))

(declare-fun bs!2967 () Bool)

(assert (= bs!2967 d!15087))

(assert (=> bs!2967 m!64239))

(declare-fun m!65583 () Bool)

(assert (=> bs!2967 m!65583))

(assert (=> b!69156 d!15087))

(assert (=> b!69156 d!14949))

(declare-fun d!15089 () Bool)

(declare-fun lt!30511 () Bool)

(assert (=> d!15089 (= lt!30511 (select (content!72 (t!5001 (toList!726 lt!29847))) lt!29777))))

(declare-fun e!45480 () Bool)

(assert (=> d!15089 (= lt!30511 e!45480)))

(declare-fun res!37254 () Bool)

(assert (=> d!15089 (=> (not res!37254) (not e!45480))))

(assert (=> d!15089 (= res!37254 ((_ is Cons!1490) (t!5001 (toList!726 lt!29847))))))

(assert (=> d!15089 (= (contains!721 (t!5001 (toList!726 lt!29847)) lt!29777) lt!30511)))

(declare-fun b!69471 () Bool)

(declare-fun e!45481 () Bool)

(assert (=> b!69471 (= e!45480 e!45481)))

(declare-fun res!37253 () Bool)

(assert (=> b!69471 (=> res!37253 e!45481)))

(assert (=> b!69471 (= res!37253 (= (h!2075 (t!5001 (toList!726 lt!29847))) lt!29777))))

(declare-fun b!69472 () Bool)

(assert (=> b!69472 (= e!45481 (contains!721 (t!5001 (t!5001 (toList!726 lt!29847))) lt!29777))))

(assert (= (and d!15089 res!37254) b!69471))

(assert (= (and b!69471 (not res!37253)) b!69472))

(assert (=> d!15089 m!65335))

(declare-fun m!65585 () Bool)

(assert (=> d!15089 m!65585))

(declare-fun m!65587 () Bool)

(assert (=> b!69472 m!65587))

(assert (=> b!69153 d!15089))

(declare-fun d!15091 () Bool)

(declare-fun lt!30512 () Bool)

(assert (=> d!15091 (= lt!30512 (select (content!72 lt!30327) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun e!45482 () Bool)

(assert (=> d!15091 (= lt!30512 e!45482)))

(declare-fun res!37256 () Bool)

(assert (=> d!15091 (=> (not res!37256) (not e!45482))))

(assert (=> d!15091 (= res!37256 ((_ is Cons!1490) lt!30327))))

(assert (=> d!15091 (= (contains!721 lt!30327 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))) lt!30512)))

(declare-fun b!69473 () Bool)

(declare-fun e!45483 () Bool)

(assert (=> b!69473 (= e!45482 e!45483)))

(declare-fun res!37255 () Bool)

(assert (=> b!69473 (=> res!37255 e!45483)))

(assert (=> b!69473 (= res!37255 (= (h!2075 lt!30327) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun b!69474 () Bool)

(assert (=> b!69474 (= e!45483 (contains!721 (t!5001 lt!30327) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(assert (= (and d!15091 res!37256) b!69473))

(assert (= (and b!69473 (not res!37255)) b!69474))

(declare-fun m!65589 () Bool)

(assert (=> d!15091 m!65589))

(declare-fun m!65591 () Bool)

(assert (=> d!15091 m!65591))

(declare-fun m!65593 () Bool)

(assert (=> b!69474 m!65593))

(assert (=> b!69196 d!15091))

(declare-fun d!15093 () Bool)

(assert (=> d!15093 (= (isDefined!84 (getValueByKey!130 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))) (not (isEmpty!316 (getValueByKey!130 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))))

(declare-fun bs!2968 () Bool)

(assert (= bs!2968 d!15093))

(assert (=> bs!2968 m!65143))

(declare-fun m!65595 () Bool)

(assert (=> bs!2968 m!65595))

(assert (=> b!69236 d!15093))

(declare-fun b!69478 () Bool)

(declare-fun e!45485 () Option!136)

(assert (=> b!69478 (= e!45485 None!134)))

(declare-fun c!9947 () Bool)

(declare-fun d!15095 () Bool)

(assert (=> d!15095 (= c!9947 (and ((_ is Cons!1490) (toList!726 call!5844)) (= (_1!1069 (h!2075 (toList!726 call!5844))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))))))

(declare-fun e!45484 () Option!136)

(assert (=> d!15095 (= (getValueByKey!130 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))) e!45484)))

(declare-fun b!69475 () Bool)

(assert (=> b!69475 (= e!45484 (Some!135 (_2!1069 (h!2075 (toList!726 call!5844)))))))

(declare-fun b!69477 () Bool)

(assert (=> b!69477 (= e!45485 (getValueByKey!130 (t!5001 (toList!726 call!5844)) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(declare-fun b!69476 () Bool)

(assert (=> b!69476 (= e!45484 e!45485)))

(declare-fun c!9948 () Bool)

(assert (=> b!69476 (= c!9948 (and ((_ is Cons!1490) (toList!726 call!5844)) (not (= (_1!1069 (h!2075 (toList!726 call!5844))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))))

(assert (= (and d!15095 c!9947) b!69475))

(assert (= (and d!15095 (not c!9947)) b!69476))

(assert (= (and b!69476 c!9948) b!69477))

(assert (= (and b!69476 (not c!9948)) b!69478))

(assert (=> b!69477 m!64325))

(declare-fun m!65597 () Bool)

(assert (=> b!69477 m!65597))

(assert (=> b!69236 d!15095))

(assert (=> d!14815 d!14821))

(assert (=> d!14815 d!14817))

(declare-fun d!15097 () Bool)

(assert (=> d!15097 (not (contains!720 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)) lt!29833))))

(assert (=> d!15097 true))

(declare-fun _$36!295 () Unit!1913)

(assert (=> d!15097 (= (choose!392 lt!29832 lt!29835 lt!29830 lt!29833) _$36!295)))

(declare-fun bs!2969 () Bool)

(assert (= bs!2969 d!15097))

(assert (=> bs!2969 m!64179))

(assert (=> bs!2969 m!64179))

(assert (=> bs!2969 m!64183))

(assert (=> d!14815 d!15097))

(declare-fun d!15099 () Bool)

(declare-fun e!45486 () Bool)

(assert (=> d!15099 e!45486))

(declare-fun res!37257 () Bool)

(assert (=> d!15099 (=> res!37257 e!45486)))

(declare-fun lt!30515 () Bool)

(assert (=> d!15099 (= res!37257 (not lt!30515))))

(declare-fun lt!30516 () Bool)

(assert (=> d!15099 (= lt!30515 lt!30516)))

(declare-fun lt!30514 () Unit!1913)

(declare-fun e!45487 () Unit!1913)

(assert (=> d!15099 (= lt!30514 e!45487)))

(declare-fun c!9949 () Bool)

(assert (=> d!15099 (= c!9949 lt!30516)))

(assert (=> d!15099 (= lt!30516 (containsKey!134 (toList!726 lt!29832) lt!29833))))

(assert (=> d!15099 (= (contains!720 lt!29832 lt!29833) lt!30515)))

(declare-fun b!69480 () Bool)

(declare-fun lt!30513 () Unit!1913)

(assert (=> b!69480 (= e!45487 lt!30513)))

(assert (=> b!69480 (= lt!30513 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29832) lt!29833))))

(assert (=> b!69480 (isDefined!84 (getValueByKey!130 (toList!726 lt!29832) lt!29833))))

(declare-fun b!69481 () Bool)

(declare-fun Unit!1951 () Unit!1913)

(assert (=> b!69481 (= e!45487 Unit!1951)))

(declare-fun b!69482 () Bool)

(assert (=> b!69482 (= e!45486 (isDefined!84 (getValueByKey!130 (toList!726 lt!29832) lt!29833)))))

(assert (= (and d!15099 c!9949) b!69480))

(assert (= (and d!15099 (not c!9949)) b!69481))

(assert (= (and d!15099 (not res!37257)) b!69482))

(declare-fun m!65599 () Bool)

(assert (=> d!15099 m!65599))

(declare-fun m!65601 () Bool)

(assert (=> b!69480 m!65601))

(declare-fun m!65603 () Bool)

(assert (=> b!69480 m!65603))

(assert (=> b!69480 m!65603))

(declare-fun m!65605 () Bool)

(assert (=> b!69480 m!65605))

(assert (=> b!69482 m!65603))

(assert (=> b!69482 m!65603))

(assert (=> b!69482 m!65605))

(assert (=> d!14815 d!15099))

(declare-fun d!15101 () Bool)

(assert (=> d!15101 (= (isDefined!84 (getValueByKey!130 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) (not (isEmpty!316 (getValueByKey!130 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(declare-fun bs!2970 () Bool)

(assert (= bs!2970 d!15101))

(assert (=> bs!2970 m!64523))

(declare-fun m!65607 () Bool)

(assert (=> bs!2970 m!65607))

(assert (=> b!68912 d!15101))

(declare-fun b!69486 () Bool)

(declare-fun e!45489 () Option!136)

(assert (=> b!69486 (= e!45489 None!134)))

(declare-fun d!15103 () Bool)

(declare-fun c!9950 () Bool)

(assert (=> d!15103 (= c!9950 (and ((_ is Cons!1490) (toList!726 call!5850)) (= (_1!1069 (h!2075 (toList!726 call!5850))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun e!45488 () Option!136)

(assert (=> d!15103 (= (getValueByKey!130 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45488)))

(declare-fun b!69483 () Bool)

(assert (=> b!69483 (= e!45488 (Some!135 (_2!1069 (h!2075 (toList!726 call!5850)))))))

(declare-fun b!69485 () Bool)

(assert (=> b!69485 (= e!45489 (getValueByKey!130 (t!5001 (toList!726 call!5850)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!69484 () Bool)

(assert (=> b!69484 (= e!45488 e!45489)))

(declare-fun c!9951 () Bool)

(assert (=> b!69484 (= c!9951 (and ((_ is Cons!1490) (toList!726 call!5850)) (not (= (_1!1069 (h!2075 (toList!726 call!5850))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(assert (= (and d!15103 c!9950) b!69483))

(assert (= (and d!15103 (not c!9950)) b!69484))

(assert (= (and b!69484 c!9951) b!69485))

(assert (= (and b!69484 (not c!9951)) b!69486))

(assert (=> b!69485 m!64043))

(declare-fun m!65609 () Bool)

(assert (=> b!69485 m!65609))

(assert (=> b!68912 d!15103))

(declare-fun d!15105 () Bool)

(declare-fun res!37258 () Bool)

(declare-fun e!45490 () Bool)

(assert (=> d!15105 (=> res!37258 e!45490)))

(assert (=> d!15105 (= res!37258 (and ((_ is Cons!1490) (toList!726 lt!29926)) (= (_1!1069 (h!2075 (toList!726 lt!29926))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15105 (= (containsKey!134 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000) e!45490)))

(declare-fun b!69487 () Bool)

(declare-fun e!45491 () Bool)

(assert (=> b!69487 (= e!45490 e!45491)))

(declare-fun res!37259 () Bool)

(assert (=> b!69487 (=> (not res!37259) (not e!45491))))

(assert (=> b!69487 (= res!37259 (and (or (not ((_ is Cons!1490) (toList!726 lt!29926))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29926))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!726 lt!29926)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29926))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69488 () Bool)

(assert (=> b!69488 (= e!45491 (containsKey!134 (t!5001 (toList!726 lt!29926)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15105 (not res!37258)) b!69487))

(assert (= (and b!69487 res!37259) b!69488))

(declare-fun m!65611 () Bool)

(assert (=> b!69488 m!65611))

(assert (=> d!14839 d!15105))

(declare-fun b!69492 () Bool)

(declare-fun e!45493 () Option!136)

(assert (=> b!69492 (= e!45493 None!134)))

(declare-fun c!9952 () Bool)

(declare-fun d!15107 () Bool)

(assert (=> d!15107 (= c!9952 (and ((_ is Cons!1490) (toList!726 lt!30046)) (= (_1!1069 (h!2075 (toList!726 lt!30046))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun e!45492 () Option!136)

(assert (=> d!15107 (= (getValueByKey!130 (toList!726 lt!30046) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) e!45492)))

(declare-fun b!69489 () Bool)

(assert (=> b!69489 (= e!45492 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30046)))))))

(declare-fun b!69491 () Bool)

(assert (=> b!69491 (= e!45493 (getValueByKey!130 (t!5001 (toList!726 lt!30046)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69490 () Bool)

(assert (=> b!69490 (= e!45492 e!45493)))

(declare-fun c!9953 () Bool)

(assert (=> b!69490 (= c!9953 (and ((_ is Cons!1490) (toList!726 lt!30046)) (not (= (_1!1069 (h!2075 (toList!726 lt!30046))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15107 c!9952) b!69489))

(assert (= (and d!15107 (not c!9952)) b!69490))

(assert (= (and b!69490 c!9953) b!69491))

(assert (= (and b!69490 (not c!9953)) b!69492))

(declare-fun m!65613 () Bool)

(assert (=> b!69491 m!65613))

(assert (=> b!68806 d!15107))

(declare-fun d!15109 () Bool)

(declare-fun res!37260 () Bool)

(declare-fun e!45494 () Bool)

(assert (=> d!15109 (=> res!37260 e!45494)))

(assert (=> d!15109 (= res!37260 (and ((_ is Cons!1490) lt!29863) (= (_1!1069 (h!2075 lt!29863)) (_1!1069 lt!29777))))))

(assert (=> d!15109 (= (containsKey!134 lt!29863 (_1!1069 lt!29777)) e!45494)))

(declare-fun b!69493 () Bool)

(declare-fun e!45495 () Bool)

(assert (=> b!69493 (= e!45494 e!45495)))

(declare-fun res!37261 () Bool)

(assert (=> b!69493 (=> (not res!37261) (not e!45495))))

(assert (=> b!69493 (= res!37261 (and (or (not ((_ is Cons!1490) lt!29863)) (bvsle (_1!1069 (h!2075 lt!29863)) (_1!1069 lt!29777))) ((_ is Cons!1490) lt!29863) (bvslt (_1!1069 (h!2075 lt!29863)) (_1!1069 lt!29777))))))

(declare-fun b!69494 () Bool)

(assert (=> b!69494 (= e!45495 (containsKey!134 (t!5001 lt!29863) (_1!1069 lt!29777)))))

(assert (= (and d!15109 (not res!37260)) b!69493))

(assert (= (and b!69493 res!37261) b!69494))

(declare-fun m!65615 () Bool)

(assert (=> b!69494 m!65615))

(assert (=> b!69161 d!15109))

(declare-fun d!15111 () Bool)

(assert (=> d!15111 (not (contains!720 (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152)) lt!30155))))

(declare-fun lt!30517 () Unit!1913)

(assert (=> d!15111 (= lt!30517 (choose!392 lt!30154 lt!30157 lt!30152 lt!30155))))

(declare-fun e!45496 () Bool)

(assert (=> d!15111 e!45496))

(declare-fun res!37262 () Bool)

(assert (=> d!15111 (=> (not res!37262) (not e!45496))))

(assert (=> d!15111 (= res!37262 (not (contains!720 lt!30154 lt!30155)))))

(assert (=> d!15111 (= (addStillNotContains!24 lt!30154 lt!30157 lt!30152 lt!30155) lt!30517)))

(declare-fun b!69495 () Bool)

(assert (=> b!69495 (= e!45496 (not (= lt!30157 lt!30155)))))

(assert (= (and d!15111 res!37262) b!69495))

(assert (=> d!15111 m!64549))

(assert (=> d!15111 m!64549))

(assert (=> d!15111 m!64553))

(declare-fun m!65617 () Bool)

(assert (=> d!15111 m!65617))

(declare-fun m!65619 () Bool)

(assert (=> d!15111 m!65619))

(assert (=> b!68920 d!15111))

(declare-fun d!15113 () Bool)

(declare-fun e!45497 () Bool)

(assert (=> d!15113 e!45497))

(declare-fun res!37264 () Bool)

(assert (=> d!15113 (=> (not res!37264) (not e!45497))))

(declare-fun lt!30520 () ListLongMap!1421)

(assert (=> d!15113 (= res!37264 (contains!720 lt!30520 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30521 () List!1494)

(assert (=> d!15113 (= lt!30520 (ListLongMap!1422 lt!30521))))

(declare-fun lt!30518 () Unit!1913)

(declare-fun lt!30519 () Unit!1913)

(assert (=> d!15113 (= lt!30518 lt!30519)))

(assert (=> d!15113 (= (getValueByKey!130 lt!30521 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15113 (= lt!30519 (lemmaContainsTupThenGetReturnValue!49 lt!30521 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15113 (= lt!30521 (insertStrictlySorted!51 (toList!726 call!5881) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15113 (= (+!89 call!5881 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30520)))

(declare-fun b!69496 () Bool)

(declare-fun res!37263 () Bool)

(assert (=> b!69496 (=> (not res!37263) (not e!45497))))

(assert (=> b!69496 (= res!37263 (= (getValueByKey!130 (toList!726 lt!30520) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!69497 () Bool)

(assert (=> b!69497 (= e!45497 (contains!721 (toList!726 lt!30520) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15113 res!37264) b!69496))

(assert (= (and b!69496 res!37263) b!69497))

(declare-fun m!65621 () Bool)

(assert (=> d!15113 m!65621))

(declare-fun m!65623 () Bool)

(assert (=> d!15113 m!65623))

(declare-fun m!65625 () Bool)

(assert (=> d!15113 m!65625))

(declare-fun m!65627 () Bool)

(assert (=> d!15113 m!65627))

(declare-fun m!65629 () Bool)

(assert (=> b!69496 m!65629))

(declare-fun m!65631 () Bool)

(assert (=> b!69497 m!65631))

(assert (=> b!68920 d!15113))

(declare-fun d!15115 () Bool)

(declare-fun e!45498 () Bool)

(assert (=> d!15115 e!45498))

(declare-fun res!37266 () Bool)

(assert (=> d!15115 (=> (not res!37266) (not e!45498))))

(declare-fun lt!30524 () ListLongMap!1421)

(assert (=> d!15115 (= res!37266 (contains!720 lt!30524 (_1!1069 (tuple2!2119 lt!30157 lt!30152))))))

(declare-fun lt!30525 () List!1494)

(assert (=> d!15115 (= lt!30524 (ListLongMap!1422 lt!30525))))

(declare-fun lt!30522 () Unit!1913)

(declare-fun lt!30523 () Unit!1913)

(assert (=> d!15115 (= lt!30522 lt!30523)))

(assert (=> d!15115 (= (getValueByKey!130 lt!30525 (_1!1069 (tuple2!2119 lt!30157 lt!30152))) (Some!135 (_2!1069 (tuple2!2119 lt!30157 lt!30152))))))

(assert (=> d!15115 (= lt!30523 (lemmaContainsTupThenGetReturnValue!49 lt!30525 (_1!1069 (tuple2!2119 lt!30157 lt!30152)) (_2!1069 (tuple2!2119 lt!30157 lt!30152))))))

(assert (=> d!15115 (= lt!30525 (insertStrictlySorted!51 (toList!726 lt!30154) (_1!1069 (tuple2!2119 lt!30157 lt!30152)) (_2!1069 (tuple2!2119 lt!30157 lt!30152))))))

(assert (=> d!15115 (= (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152)) lt!30524)))

(declare-fun b!69498 () Bool)

(declare-fun res!37265 () Bool)

(assert (=> b!69498 (=> (not res!37265) (not e!45498))))

(assert (=> b!69498 (= res!37265 (= (getValueByKey!130 (toList!726 lt!30524) (_1!1069 (tuple2!2119 lt!30157 lt!30152))) (Some!135 (_2!1069 (tuple2!2119 lt!30157 lt!30152)))))))

(declare-fun b!69499 () Bool)

(assert (=> b!69499 (= e!45498 (contains!721 (toList!726 lt!30524) (tuple2!2119 lt!30157 lt!30152)))))

(assert (= (and d!15115 res!37266) b!69498))

(assert (= (and b!69498 res!37265) b!69499))

(declare-fun m!65633 () Bool)

(assert (=> d!15115 m!65633))

(declare-fun m!65635 () Bool)

(assert (=> d!15115 m!65635))

(declare-fun m!65637 () Bool)

(assert (=> d!15115 m!65637))

(declare-fun m!65639 () Bool)

(assert (=> d!15115 m!65639))

(declare-fun m!65641 () Bool)

(assert (=> b!69498 m!65641))

(declare-fun m!65643 () Bool)

(assert (=> b!69499 m!65643))

(assert (=> b!68920 d!15115))

(declare-fun d!15117 () Bool)

(declare-fun c!9954 () Bool)

(assert (=> d!15117 (= c!9954 ((_ is ValueCellFull!885) (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!45499 () V!2923)

(assert (=> d!15117 (= (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45499)))

(declare-fun b!69500 () Bool)

(assert (=> b!69500 (= e!45499 (get!1135 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69501 () Bool)

(assert (=> b!69501 (= e!45499 (get!1136 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15117 c!9954) b!69500))

(assert (= (and d!15117 (not c!9954)) b!69501))

(assert (=> b!69500 m!64539))

(assert (=> b!69500 m!64047))

(declare-fun m!65645 () Bool)

(assert (=> b!69500 m!65645))

(assert (=> b!69501 m!64539))

(assert (=> b!69501 m!64047))

(declare-fun m!65647 () Bool)

(assert (=> b!69501 m!65647))

(assert (=> b!68920 d!15117))

(declare-fun d!15119 () Bool)

(declare-fun e!45500 () Bool)

(assert (=> d!15119 e!45500))

(declare-fun res!37267 () Bool)

(assert (=> d!15119 (=> res!37267 e!45500)))

(declare-fun lt!30528 () Bool)

(assert (=> d!15119 (= res!37267 (not lt!30528))))

(declare-fun lt!30529 () Bool)

(assert (=> d!15119 (= lt!30528 lt!30529)))

(declare-fun lt!30527 () Unit!1913)

(declare-fun e!45501 () Unit!1913)

(assert (=> d!15119 (= lt!30527 e!45501)))

(declare-fun c!9955 () Bool)

(assert (=> d!15119 (= c!9955 lt!30529)))

(assert (=> d!15119 (= lt!30529 (containsKey!134 (toList!726 (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152))) lt!30155))))

(assert (=> d!15119 (= (contains!720 (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152)) lt!30155) lt!30528)))

(declare-fun b!69502 () Bool)

(declare-fun lt!30526 () Unit!1913)

(assert (=> b!69502 (= e!45501 lt!30526)))

(assert (=> b!69502 (= lt!30526 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152))) lt!30155))))

(assert (=> b!69502 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152))) lt!30155))))

(declare-fun b!69503 () Bool)

(declare-fun Unit!1952 () Unit!1913)

(assert (=> b!69503 (= e!45501 Unit!1952)))

(declare-fun b!69504 () Bool)

(assert (=> b!69504 (= e!45500 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30154 (tuple2!2119 lt!30157 lt!30152))) lt!30155)))))

(assert (= (and d!15119 c!9955) b!69502))

(assert (= (and d!15119 (not c!9955)) b!69503))

(assert (= (and d!15119 (not res!37267)) b!69504))

(declare-fun m!65649 () Bool)

(assert (=> d!15119 m!65649))

(declare-fun m!65651 () Bool)

(assert (=> b!69502 m!65651))

(declare-fun m!65653 () Bool)

(assert (=> b!69502 m!65653))

(assert (=> b!69502 m!65653))

(declare-fun m!65655 () Bool)

(assert (=> b!69502 m!65655))

(assert (=> b!69504 m!65653))

(assert (=> b!69504 m!65653))

(assert (=> b!69504 m!65655))

(assert (=> b!68920 d!15119))

(declare-fun d!15121 () Bool)

(declare-fun e!45502 () Bool)

(assert (=> d!15121 e!45502))

(declare-fun res!37268 () Bool)

(assert (=> d!15121 (=> res!37268 e!45502)))

(declare-fun lt!30532 () Bool)

(assert (=> d!15121 (= res!37268 (not lt!30532))))

(declare-fun lt!30533 () Bool)

(assert (=> d!15121 (= lt!30532 lt!30533)))

(declare-fun lt!30531 () Unit!1913)

(declare-fun e!45503 () Unit!1913)

(assert (=> d!15121 (= lt!30531 e!45503)))

(declare-fun c!9956 () Bool)

(assert (=> d!15121 (= c!9956 lt!30533)))

(assert (=> d!15121 (= lt!30533 (containsKey!134 (toList!726 lt!30303) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15121 (= (contains!720 lt!30303 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30532)))

(declare-fun b!69505 () Bool)

(declare-fun lt!30530 () Unit!1913)

(assert (=> b!69505 (= e!45503 lt!30530)))

(assert (=> b!69505 (= lt!30530 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30303) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69505 (isDefined!84 (getValueByKey!130 (toList!726 lt!30303) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69506 () Bool)

(declare-fun Unit!1953 () Unit!1913)

(assert (=> b!69506 (= e!45503 Unit!1953)))

(declare-fun b!69507 () Bool)

(assert (=> b!69507 (= e!45502 (isDefined!84 (getValueByKey!130 (toList!726 lt!30303) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15121 c!9956) b!69505))

(assert (= (and d!15121 (not c!9956)) b!69506))

(assert (= (and d!15121 (not res!37268)) b!69507))

(declare-fun m!65657 () Bool)

(assert (=> d!15121 m!65657))

(declare-fun m!65659 () Bool)

(assert (=> b!69505 m!65659))

(assert (=> b!69505 m!65311))

(assert (=> b!69505 m!65311))

(declare-fun m!65661 () Bool)

(assert (=> b!69505 m!65661))

(assert (=> b!69507 m!65311))

(assert (=> b!69507 m!65311))

(assert (=> b!69507 m!65661))

(assert (=> bm!5908 d!15121))

(declare-fun d!15123 () Bool)

(assert (=> d!15123 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2971 () Bool)

(assert (= bs!2971 d!15123))

(assert (=> bs!2971 m!64973))

(declare-fun m!65663 () Bool)

(assert (=> bs!2971 m!65663))

(assert (=> b!69177 d!15123))

(declare-fun b!69511 () Bool)

(declare-fun e!45505 () Option!136)

(assert (=> b!69511 (= e!45505 None!134)))

(declare-fun d!15125 () Bool)

(declare-fun c!9957 () Bool)

(assert (=> d!15125 (= c!9957 (and ((_ is Cons!1490) (toList!726 lt!29836)) (= (_1!1069 (h!2075 (toList!726 lt!29836))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45504 () Option!136)

(assert (=> d!15125 (= (getValueByKey!130 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000) e!45504)))

(declare-fun b!69508 () Bool)

(assert (=> b!69508 (= e!45504 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29836)))))))

(declare-fun b!69510 () Bool)

(assert (=> b!69510 (= e!45505 (getValueByKey!130 (t!5001 (toList!726 lt!29836)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69509 () Bool)

(assert (=> b!69509 (= e!45504 e!45505)))

(declare-fun c!9958 () Bool)

(assert (=> b!69509 (= c!9958 (and ((_ is Cons!1490) (toList!726 lt!29836)) (not (= (_1!1069 (h!2075 (toList!726 lt!29836))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15125 c!9957) b!69508))

(assert (= (and d!15125 (not c!9957)) b!69509))

(assert (= (and b!69509 c!9958) b!69510))

(assert (= (and b!69509 (not c!9958)) b!69511))

(declare-fun m!65665 () Bool)

(assert (=> b!69510 m!65665))

(assert (=> b!69177 d!15125))

(declare-fun d!15127 () Bool)

(declare-fun c!9959 () Bool)

(assert (=> d!15127 (= c!9959 ((_ is Nil!1491) (toList!726 lt!29862)))))

(declare-fun e!45506 () (InoxSet tuple2!2118))

(assert (=> d!15127 (= (content!72 (toList!726 lt!29862)) e!45506)))

(declare-fun b!69512 () Bool)

(assert (=> b!69512 (= e!45506 ((as const (Array tuple2!2118 Bool)) false))))

(declare-fun b!69513 () Bool)

(assert (=> b!69513 (= e!45506 ((_ map or) (store ((as const (Array tuple2!2118 Bool)) false) (h!2075 (toList!726 lt!29862)) true) (content!72 (t!5001 (toList!726 lt!29862)))))))

(assert (= (and d!15127 c!9959) b!69512))

(assert (= (and d!15127 (not c!9959)) b!69513))

(declare-fun m!65667 () Bool)

(assert (=> b!69513 m!65667))

(declare-fun m!65669 () Bool)

(assert (=> b!69513 m!65669))

(assert (=> d!14843 d!15127))

(declare-fun d!15129 () Bool)

(assert (=> d!15129 (= (get!1137 (getValueByKey!130 (toList!726 lt!29912) lt!29920)) (v!2499 (getValueByKey!130 (toList!726 lt!29912) lt!29920)))))

(assert (=> d!14913 d!15129))

(declare-fun b!69517 () Bool)

(declare-fun e!45508 () Option!136)

(assert (=> b!69517 (= e!45508 None!134)))

(declare-fun d!15131 () Bool)

(declare-fun c!9960 () Bool)

(assert (=> d!15131 (= c!9960 (and ((_ is Cons!1490) (toList!726 lt!29912)) (= (_1!1069 (h!2075 (toList!726 lt!29912))) lt!29920)))))

(declare-fun e!45507 () Option!136)

(assert (=> d!15131 (= (getValueByKey!130 (toList!726 lt!29912) lt!29920) e!45507)))

(declare-fun b!69514 () Bool)

(assert (=> b!69514 (= e!45507 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29912)))))))

(declare-fun b!69516 () Bool)

(assert (=> b!69516 (= e!45508 (getValueByKey!130 (t!5001 (toList!726 lt!29912)) lt!29920))))

(declare-fun b!69515 () Bool)

(assert (=> b!69515 (= e!45507 e!45508)))

(declare-fun c!9961 () Bool)

(assert (=> b!69515 (= c!9961 (and ((_ is Cons!1490) (toList!726 lt!29912)) (not (= (_1!1069 (h!2075 (toList!726 lt!29912))) lt!29920))))))

(assert (= (and d!15131 c!9960) b!69514))

(assert (= (and d!15131 (not c!9960)) b!69515))

(assert (= (and b!69515 c!9961) b!69516))

(assert (= (and b!69515 (not c!9961)) b!69517))

(declare-fun m!65671 () Bool)

(assert (=> b!69516 m!65671))

(assert (=> d!14913 d!15131))

(declare-fun d!15133 () Bool)

(declare-fun e!45509 () Bool)

(assert (=> d!15133 e!45509))

(declare-fun res!37269 () Bool)

(assert (=> d!15133 (=> res!37269 e!45509)))

(declare-fun lt!30536 () Bool)

(assert (=> d!15133 (= res!37269 (not lt!30536))))

(declare-fun lt!30537 () Bool)

(assert (=> d!15133 (= lt!30536 lt!30537)))

(declare-fun lt!30535 () Unit!1913)

(declare-fun e!45510 () Unit!1913)

(assert (=> d!15133 (= lt!30535 e!45510)))

(declare-fun c!9962 () Bool)

(assert (=> d!15133 (= c!9962 lt!30537)))

(assert (=> d!15133 (= lt!30537 (containsKey!134 (toList!726 lt!30366) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15133 (= (contains!720 lt!30366 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30536)))

(declare-fun b!69518 () Bool)

(declare-fun lt!30534 () Unit!1913)

(assert (=> b!69518 (= e!45510 lt!30534)))

(assert (=> b!69518 (= lt!30534 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30366) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> b!69518 (isDefined!84 (getValueByKey!130 (toList!726 lt!30366) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69519 () Bool)

(declare-fun Unit!1954 () Unit!1913)

(assert (=> b!69519 (= e!45510 Unit!1954)))

(declare-fun b!69520 () Bool)

(assert (=> b!69520 (= e!45509 (isDefined!84 (getValueByKey!130 (toList!726 lt!30366) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15133 c!9962) b!69518))

(assert (= (and d!15133 (not c!9962)) b!69519))

(assert (= (and d!15133 (not res!37269)) b!69520))

(declare-fun m!65673 () Bool)

(assert (=> d!15133 m!65673))

(declare-fun m!65675 () Bool)

(assert (=> b!69518 m!65675))

(assert (=> b!69518 m!65135))

(assert (=> b!69518 m!65135))

(declare-fun m!65677 () Bool)

(assert (=> b!69518 m!65677))

(assert (=> b!69520 m!65135))

(assert (=> b!69520 m!65135))

(assert (=> b!69520 m!65677))

(assert (=> d!14935 d!15133))

(declare-fun b!69524 () Bool)

(declare-fun e!45512 () Option!136)

(assert (=> b!69524 (= e!45512 None!134)))

(declare-fun d!15135 () Bool)

(declare-fun c!9963 () Bool)

(assert (=> d!15135 (= c!9963 (and ((_ is Cons!1490) lt!30367) (= (_1!1069 (h!2075 lt!30367)) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45511 () Option!136)

(assert (=> d!15135 (= (getValueByKey!130 lt!30367 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45511)))

(declare-fun b!69521 () Bool)

(assert (=> b!69521 (= e!45511 (Some!135 (_2!1069 (h!2075 lt!30367))))))

(declare-fun b!69523 () Bool)

(assert (=> b!69523 (= e!45512 (getValueByKey!130 (t!5001 lt!30367) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69522 () Bool)

(assert (=> b!69522 (= e!45511 e!45512)))

(declare-fun c!9964 () Bool)

(assert (=> b!69522 (= c!9964 (and ((_ is Cons!1490) lt!30367) (not (= (_1!1069 (h!2075 lt!30367)) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15135 c!9963) b!69521))

(assert (= (and d!15135 (not c!9963)) b!69522))

(assert (= (and b!69522 c!9964) b!69523))

(assert (= (and b!69522 (not c!9964)) b!69524))

(declare-fun m!65679 () Bool)

(assert (=> b!69523 m!65679))

(assert (=> d!14935 d!15135))

(declare-fun d!15137 () Bool)

(assert (=> d!15137 (= (getValueByKey!130 lt!30367 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30538 () Unit!1913)

(assert (=> d!15137 (= lt!30538 (choose!390 lt!30367 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!45513 () Bool)

(assert (=> d!15137 e!45513))

(declare-fun res!37270 () Bool)

(assert (=> d!15137 (=> (not res!37270) (not e!45513))))

(assert (=> d!15137 (= res!37270 (isStrictlySorted!285 lt!30367))))

(assert (=> d!15137 (= (lemmaContainsTupThenGetReturnValue!49 lt!30367 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30538)))

(declare-fun b!69525 () Bool)

(declare-fun res!37271 () Bool)

(assert (=> b!69525 (=> (not res!37271) (not e!45513))))

(assert (=> b!69525 (= res!37271 (containsKey!134 lt!30367 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69526 () Bool)

(assert (=> b!69526 (= e!45513 (contains!721 lt!30367 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15137 res!37270) b!69525))

(assert (= (and b!69525 res!37271) b!69526))

(assert (=> d!15137 m!65129))

(declare-fun m!65681 () Bool)

(assert (=> d!15137 m!65681))

(declare-fun m!65683 () Bool)

(assert (=> d!15137 m!65683))

(declare-fun m!65685 () Bool)

(assert (=> b!69525 m!65685))

(declare-fun m!65687 () Bool)

(assert (=> b!69526 m!65687))

(assert (=> d!14935 d!15137))

(declare-fun bm!5945 () Bool)

(declare-fun call!5948 () List!1494)

(declare-fun call!5950 () List!1494)

(assert (=> bm!5945 (= call!5948 call!5950)))

(declare-fun b!69527 () Bool)

(declare-fun e!45517 () List!1494)

(declare-fun call!5949 () List!1494)

(assert (=> b!69527 (= e!45517 call!5949)))

(declare-fun b!69528 () Bool)

(declare-fun e!45516 () List!1494)

(assert (=> b!69528 (= e!45516 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29929)) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69530 () Bool)

(declare-fun res!37273 () Bool)

(declare-fun e!45515 () Bool)

(assert (=> b!69530 (=> (not res!37273) (not e!45515))))

(declare-fun lt!30539 () List!1494)

(assert (=> b!69530 (= res!37273 (containsKey!134 lt!30539 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69531 () Bool)

(declare-fun e!45514 () List!1494)

(declare-fun e!45518 () List!1494)

(assert (=> b!69531 (= e!45514 e!45518)))

(declare-fun c!9965 () Bool)

(assert (=> b!69531 (= c!9965 (and ((_ is Cons!1490) (toList!726 lt!29929)) (= (_1!1069 (h!2075 (toList!726 lt!29929))) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun c!9966 () Bool)

(declare-fun b!69532 () Bool)

(assert (=> b!69532 (= e!45516 (ite c!9965 (t!5001 (toList!726 lt!29929)) (ite c!9966 (Cons!1490 (h!2075 (toList!726 lt!29929)) (t!5001 (toList!726 lt!29929))) Nil!1491)))))

(declare-fun b!69533 () Bool)

(assert (=> b!69533 (= e!45517 call!5949)))

(declare-fun b!69534 () Bool)

(assert (=> b!69534 (= e!45518 call!5948)))

(declare-fun b!69535 () Bool)

(assert (=> b!69535 (= e!45514 call!5950)))

(declare-fun c!9967 () Bool)

(declare-fun bm!5946 () Bool)

(assert (=> bm!5946 (= call!5950 ($colon$colon!63 e!45516 (ite c!9967 (h!2075 (toList!726 lt!29929)) (tuple2!2119 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!9968 () Bool)

(assert (=> bm!5946 (= c!9968 c!9967)))

(declare-fun b!69536 () Bool)

(assert (=> b!69536 (= e!45515 (contains!721 lt!30539 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun bm!5947 () Bool)

(assert (=> bm!5947 (= call!5949 call!5948)))

(declare-fun b!69529 () Bool)

(assert (=> b!69529 (= c!9966 (and ((_ is Cons!1490) (toList!726 lt!29929)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29929))) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!69529 (= e!45518 e!45517)))

(declare-fun d!15139 () Bool)

(assert (=> d!15139 e!45515))

(declare-fun res!37272 () Bool)

(assert (=> d!15139 (=> (not res!37272) (not e!45515))))

(assert (=> d!15139 (= res!37272 (isStrictlySorted!285 lt!30539))))

(assert (=> d!15139 (= lt!30539 e!45514)))

(assert (=> d!15139 (= c!9967 (and ((_ is Cons!1490) (toList!726 lt!29929)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29929))) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15139 (isStrictlySorted!285 (toList!726 lt!29929))))

(assert (=> d!15139 (= (insertStrictlySorted!51 (toList!726 lt!29929) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30539)))

(assert (= (and d!15139 c!9967) b!69535))

(assert (= (and d!15139 (not c!9967)) b!69531))

(assert (= (and b!69531 c!9965) b!69534))

(assert (= (and b!69531 (not c!9965)) b!69529))

(assert (= (and b!69529 c!9966) b!69533))

(assert (= (and b!69529 (not c!9966)) b!69527))

(assert (= (or b!69533 b!69527) bm!5947))

(assert (= (or b!69534 bm!5947) bm!5945))

(assert (= (or b!69535 bm!5945) bm!5946))

(assert (= (and bm!5946 c!9968) b!69528))

(assert (= (and bm!5946 (not c!9968)) b!69532))

(assert (= (and d!15139 res!37272) b!69530))

(assert (= (and b!69530 res!37273) b!69536))

(declare-fun m!65689 () Bool)

(assert (=> b!69528 m!65689))

(declare-fun m!65691 () Bool)

(assert (=> d!15139 m!65691))

(declare-fun m!65693 () Bool)

(assert (=> d!15139 m!65693))

(declare-fun m!65695 () Bool)

(assert (=> b!69530 m!65695))

(declare-fun m!65697 () Bool)

(assert (=> bm!5946 m!65697))

(declare-fun m!65699 () Bool)

(assert (=> b!69536 m!65699))

(assert (=> d!14935 d!15139))

(declare-fun lt!30540 () Bool)

(declare-fun d!15141 () Bool)

(assert (=> d!15141 (= lt!30540 (select (content!72 (toList!726 lt!30358)) (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun e!45519 () Bool)

(assert (=> d!15141 (= lt!30540 e!45519)))

(declare-fun res!37275 () Bool)

(assert (=> d!15141 (=> (not res!37275) (not e!45519))))

(assert (=> d!15141 (= res!37275 ((_ is Cons!1490) (toList!726 lt!30358)))))

(assert (=> d!15141 (= (contains!721 (toList!726 lt!30358) (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30540)))

(declare-fun b!69537 () Bool)

(declare-fun e!45520 () Bool)

(assert (=> b!69537 (= e!45519 e!45520)))

(declare-fun res!37274 () Bool)

(assert (=> b!69537 (=> res!37274 e!45520)))

(assert (=> b!69537 (= res!37274 (= (h!2075 (toList!726 lt!30358)) (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!69538 () Bool)

(assert (=> b!69538 (= e!45520 (contains!721 (t!5001 (toList!726 lt!30358)) (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15141 res!37275) b!69537))

(assert (= (and b!69537 (not res!37274)) b!69538))

(declare-fun m!65701 () Bool)

(assert (=> d!15141 m!65701))

(declare-fun m!65703 () Bool)

(assert (=> d!15141 m!65703))

(declare-fun m!65705 () Bool)

(assert (=> b!69538 m!65705))

(assert (=> b!69228 d!15141))

(assert (=> d!14869 d!14865))

(declare-fun d!15143 () Bool)

(declare-fun e!45521 () Bool)

(assert (=> d!15143 e!45521))

(declare-fun res!37277 () Bool)

(assert (=> d!15143 (=> (not res!37277) (not e!45521))))

(declare-fun lt!30543 () ListLongMap!1421)

(assert (=> d!15143 (= res!37277 (contains!720 lt!30543 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(declare-fun lt!30544 () List!1494)

(assert (=> d!15143 (= lt!30543 (ListLongMap!1422 lt!30544))))

(declare-fun lt!30541 () Unit!1913)

(declare-fun lt!30542 () Unit!1913)

(assert (=> d!15143 (= lt!30541 lt!30542)))

(assert (=> d!15143 (= (getValueByKey!130 lt!30544 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(assert (=> d!15143 (= lt!30542 (lemmaContainsTupThenGetReturnValue!49 lt!30544 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(assert (=> d!15143 (= lt!30544 (insertStrictlySorted!51 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778))))))

(assert (=> d!15143 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778)) lt!30543)))

(declare-fun b!69539 () Bool)

(declare-fun res!37276 () Bool)

(assert (=> b!69539 (=> (not res!37276) (not e!45521))))

(assert (=> b!69539 (= res!37276 (= (getValueByKey!130 (toList!726 lt!30543) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778)))))))

(declare-fun b!69540 () Bool)

(assert (=> b!69540 (= e!45521 (contains!721 (toList!726 lt!30543) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778)))))

(assert (= (and d!15143 res!37277) b!69539))

(assert (= (and b!69539 res!37276) b!69540))

(declare-fun m!65707 () Bool)

(assert (=> d!15143 m!65707))

(declare-fun m!65709 () Bool)

(assert (=> d!15143 m!65709))

(declare-fun m!65711 () Bool)

(assert (=> d!15143 m!65711))

(declare-fun m!65713 () Bool)

(assert (=> d!15143 m!65713))

(declare-fun m!65715 () Bool)

(assert (=> b!69539 m!65715))

(declare-fun m!65717 () Bool)

(assert (=> b!69540 m!65717))

(assert (=> d!14869 d!15143))

(assert (=> d!14869 d!14981))

(declare-fun b!69541 () Bool)

(declare-fun res!37280 () Bool)

(declare-fun e!45524 () Bool)

(assert (=> b!69541 (=> (not res!37280) (not e!45524))))

(declare-fun e!45529 () Bool)

(assert (=> b!69541 (= res!37280 e!45529)))

(declare-fun c!9971 () Bool)

(assert (=> b!69541 (= c!9971 (not (= (bvand lt!30016 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69542 () Bool)

(declare-fun res!37285 () Bool)

(assert (=> b!69542 (=> (not res!37285) (not e!45524))))

(declare-fun e!45530 () Bool)

(assert (=> b!69542 (= res!37285 e!45530)))

(declare-fun res!37286 () Bool)

(assert (=> b!69542 (=> res!37286 e!45530)))

(declare-fun e!45534 () Bool)

(assert (=> b!69542 (= res!37286 (not e!45534))))

(declare-fun res!37283 () Bool)

(assert (=> b!69542 (=> (not res!37283) (not e!45534))))

(assert (=> b!69542 (= res!37283 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5948 () Bool)

(declare-fun call!5952 () ListLongMap!1421)

(declare-fun call!5954 () ListLongMap!1421)

(assert (=> bm!5948 (= call!5952 call!5954)))

(declare-fun b!69544 () Bool)

(declare-fun e!45528 () ListLongMap!1421)

(declare-fun call!5951 () ListLongMap!1421)

(assert (=> b!69544 (= e!45528 call!5951)))

(declare-fun b!69545 () Bool)

(declare-fun e!45533 () ListLongMap!1421)

(declare-fun e!45523 () ListLongMap!1421)

(assert (=> b!69545 (= e!45533 e!45523)))

(declare-fun c!9974 () Bool)

(assert (=> b!69545 (= c!9974 (and (not (= (bvand lt!30016 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!30016 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5949 () Bool)

(declare-fun call!5956 () Bool)

(declare-fun lt!30563 () ListLongMap!1421)

(assert (=> bm!5949 (= call!5956 (contains!720 lt!30563 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69546 () Bool)

(assert (=> b!69546 (= e!45523 call!5951)))

(declare-fun b!69547 () Bool)

(declare-fun e!45522 () Bool)

(declare-fun e!45526 () Bool)

(assert (=> b!69547 (= e!45522 e!45526)))

(declare-fun res!37281 () Bool)

(assert (=> b!69547 (= res!37281 call!5956)))

(assert (=> b!69547 (=> (not res!37281) (not e!45526))))

(declare-fun b!69548 () Bool)

(declare-fun call!5953 () ListLongMap!1421)

(assert (=> b!69548 (= e!45528 call!5953)))

(declare-fun b!69549 () Bool)

(declare-fun e!45527 () Bool)

(assert (=> b!69549 (= e!45527 (= (apply!73 lt!30563 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69549 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_values!2151 newMap!16))))))

(assert (=> b!69549 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69550 () Bool)

(assert (=> b!69550 (= e!45524 e!45522)))

(declare-fun c!9972 () Bool)

(assert (=> b!69550 (= c!9972 (not (= (bvand lt!30016 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!15145 () Bool)

(assert (=> d!15145 e!45524))

(declare-fun res!37284 () Bool)

(assert (=> d!15145 (=> (not res!37284) (not e!45524))))

(assert (=> d!15145 (= res!37284 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun lt!30555 () ListLongMap!1421)

(assert (=> d!15145 (= lt!30563 lt!30555)))

(declare-fun lt!30559 () Unit!1913)

(declare-fun e!45525 () Unit!1913)

(assert (=> d!15145 (= lt!30559 e!45525)))

(declare-fun c!9973 () Bool)

(declare-fun e!45531 () Bool)

(assert (=> d!15145 (= c!9973 e!45531)))

(declare-fun res!37282 () Bool)

(assert (=> d!15145 (=> (not res!37282) (not e!45531))))

(assert (=> d!15145 (= res!37282 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15145 (= lt!30555 e!45533)))

(declare-fun c!9970 () Bool)

(assert (=> d!15145 (= c!9970 (and (not (= (bvand lt!30016 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!30016 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15145 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15145 (= (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30563)))

(declare-fun b!69543 () Bool)

(assert (=> b!69543 (= e!45522 (not call!5956))))

(declare-fun bm!5950 () Bool)

(assert (=> bm!5950 (= call!5953 call!5952)))

(declare-fun bm!5951 () Bool)

(assert (=> bm!5951 (= call!5954 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69551 () Bool)

(declare-fun Unit!1955 () Unit!1913)

(assert (=> b!69551 (= e!45525 Unit!1955)))

(declare-fun b!69552 () Bool)

(declare-fun e!45532 () Bool)

(assert (=> b!69552 (= e!45529 e!45532)))

(declare-fun res!37279 () Bool)

(declare-fun call!5957 () Bool)

(assert (=> b!69552 (= res!37279 call!5957)))

(assert (=> b!69552 (=> (not res!37279) (not e!45532))))

(declare-fun b!69553 () Bool)

(assert (=> b!69553 (= e!45526 (= (apply!73 lt!30563 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69554 () Bool)

(assert (=> b!69554 (= e!45534 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5952 () Bool)

(assert (=> bm!5952 (= call!5957 (contains!720 lt!30563 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69555 () Bool)

(declare-fun c!9969 () Bool)

(assert (=> b!69555 (= c!9969 (and (not (= (bvand lt!30016 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!30016 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69555 (= e!45523 e!45528)))

(declare-fun call!5955 () ListLongMap!1421)

(declare-fun bm!5953 () Bool)

(assert (=> bm!5953 (= call!5955 (+!89 (ite c!9970 call!5954 (ite c!9974 call!5952 call!5953)) (ite (or c!9970 c!9974) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun b!69556 () Bool)

(assert (=> b!69556 (= e!45533 (+!89 call!5955 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69557 () Bool)

(declare-fun lt!30554 () Unit!1913)

(assert (=> b!69557 (= e!45525 lt!30554)))

(declare-fun lt!30561 () ListLongMap!1421)

(assert (=> b!69557 (= lt!30561 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30547 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30547 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30553 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30553 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30565 () Unit!1913)

(assert (=> b!69557 (= lt!30565 (addStillContains!49 lt!30561 lt!30547 lt!29778 lt!30553))))

(assert (=> b!69557 (contains!720 (+!89 lt!30561 (tuple2!2119 lt!30547 lt!29778)) lt!30553)))

(declare-fun lt!30552 () Unit!1913)

(assert (=> b!69557 (= lt!30552 lt!30565)))

(declare-fun lt!30549 () ListLongMap!1421)

(assert (=> b!69557 (= lt!30549 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30564 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30564 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30557 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30557 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30545 () Unit!1913)

(assert (=> b!69557 (= lt!30545 (addApplyDifferent!49 lt!30549 lt!30564 (minValue!2074 newMap!16) lt!30557))))

(assert (=> b!69557 (= (apply!73 (+!89 lt!30549 (tuple2!2119 lt!30564 (minValue!2074 newMap!16))) lt!30557) (apply!73 lt!30549 lt!30557))))

(declare-fun lt!30550 () Unit!1913)

(assert (=> b!69557 (= lt!30550 lt!30545)))

(declare-fun lt!30546 () ListLongMap!1421)

(assert (=> b!69557 (= lt!30546 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30562 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30562 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30548 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30548 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30558 () Unit!1913)

(assert (=> b!69557 (= lt!30558 (addApplyDifferent!49 lt!30546 lt!30562 lt!29778 lt!30548))))

(assert (=> b!69557 (= (apply!73 (+!89 lt!30546 (tuple2!2119 lt!30562 lt!29778)) lt!30548) (apply!73 lt!30546 lt!30548))))

(declare-fun lt!30556 () Unit!1913)

(assert (=> b!69557 (= lt!30556 lt!30558)))

(declare-fun lt!30566 () ListLongMap!1421)

(assert (=> b!69557 (= lt!30566 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30551 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30551 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30560 () (_ BitVec 64))

(assert (=> b!69557 (= lt!30560 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69557 (= lt!30554 (addApplyDifferent!49 lt!30566 lt!30551 (minValue!2074 newMap!16) lt!30560))))

(assert (=> b!69557 (= (apply!73 (+!89 lt!30566 (tuple2!2119 lt!30551 (minValue!2074 newMap!16))) lt!30560) (apply!73 lt!30566 lt!30560))))

(declare-fun b!69558 () Bool)

(assert (=> b!69558 (= e!45531 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5954 () Bool)

(assert (=> bm!5954 (= call!5951 call!5955)))

(declare-fun b!69559 () Bool)

(assert (=> b!69559 (= e!45529 (not call!5957))))

(declare-fun b!69560 () Bool)

(assert (=> b!69560 (= e!45532 (= (apply!73 lt!30563 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29778))))

(declare-fun b!69561 () Bool)

(assert (=> b!69561 (= e!45530 e!45527)))

(declare-fun res!37278 () Bool)

(assert (=> b!69561 (=> (not res!37278) (not e!45527))))

(assert (=> b!69561 (= res!37278 (contains!720 lt!30563 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69561 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!15145 c!9970) b!69556))

(assert (= (and d!15145 (not c!9970)) b!69545))

(assert (= (and b!69545 c!9974) b!69546))

(assert (= (and b!69545 (not c!9974)) b!69555))

(assert (= (and b!69555 c!9969) b!69544))

(assert (= (and b!69555 (not c!9969)) b!69548))

(assert (= (or b!69544 b!69548) bm!5950))

(assert (= (or b!69546 bm!5950) bm!5948))

(assert (= (or b!69546 b!69544) bm!5954))

(assert (= (or b!69556 bm!5948) bm!5951))

(assert (= (or b!69556 bm!5954) bm!5953))

(assert (= (and d!15145 res!37282) b!69558))

(assert (= (and d!15145 c!9973) b!69557))

(assert (= (and d!15145 (not c!9973)) b!69551))

(assert (= (and d!15145 res!37284) b!69542))

(assert (= (and b!69542 res!37283) b!69554))

(assert (= (and b!69542 (not res!37286)) b!69561))

(assert (= (and b!69561 res!37278) b!69549))

(assert (= (and b!69542 res!37285) b!69541))

(assert (= (and b!69541 c!9971) b!69552))

(assert (= (and b!69541 (not c!9971)) b!69559))

(assert (= (and b!69552 res!37279) b!69560))

(assert (= (or b!69552 b!69559) bm!5952))

(assert (= (and b!69541 res!37280) b!69550))

(assert (= (and b!69550 c!9972) b!69547))

(assert (= (and b!69550 (not c!9972)) b!69543))

(assert (= (and b!69547 res!37281) b!69553))

(assert (= (or b!69547 b!69543) bm!5949))

(declare-fun b_lambda!3123 () Bool)

(assert (=> (not b_lambda!3123) (not b!69549)))

(assert (=> b!69549 t!5009))

(declare-fun b_and!4273 () Bool)

(assert (= b_and!4269 (and (=> t!5009 result!2623) b_and!4273)))

(assert (=> b!69549 t!5011))

(declare-fun b_and!4275 () Bool)

(assert (= b_and!4271 (and (=> t!5011 result!2625) b_and!4275)))

(assert (=> b!69561 m!64555))

(assert (=> b!69561 m!64555))

(declare-fun m!65719 () Bool)

(assert (=> b!69561 m!65719))

(declare-fun m!65721 () Bool)

(assert (=> b!69553 m!65721))

(declare-fun m!65723 () Bool)

(assert (=> b!69560 m!65723))

(declare-fun m!65725 () Bool)

(assert (=> bm!5953 m!65725))

(assert (=> d!15145 m!64569))

(declare-fun m!65727 () Bool)

(assert (=> bm!5952 m!65727))

(assert (=> b!69549 m!64555))

(assert (=> b!69549 m!64699))

(assert (=> b!69549 m!64555))

(declare-fun m!65729 () Bool)

(assert (=> b!69549 m!65729))

(assert (=> b!69549 m!64755))

(assert (=> b!69549 m!64755))

(assert (=> b!69549 m!64699))

(assert (=> b!69549 m!64757))

(declare-fun m!65731 () Bool)

(assert (=> b!69556 m!65731))

(assert (=> b!69557 m!64555))

(declare-fun m!65733 () Bool)

(assert (=> b!69557 m!65733))

(declare-fun m!65735 () Bool)

(assert (=> b!69557 m!65735))

(declare-fun m!65737 () Bool)

(assert (=> b!69557 m!65737))

(declare-fun m!65739 () Bool)

(assert (=> b!69557 m!65739))

(declare-fun m!65741 () Bool)

(assert (=> b!69557 m!65741))

(declare-fun m!65743 () Bool)

(assert (=> b!69557 m!65743))

(declare-fun m!65745 () Bool)

(assert (=> b!69557 m!65745))

(declare-fun m!65747 () Bool)

(assert (=> b!69557 m!65747))

(declare-fun m!65749 () Bool)

(assert (=> b!69557 m!65749))

(declare-fun m!65751 () Bool)

(assert (=> b!69557 m!65751))

(declare-fun m!65753 () Bool)

(assert (=> b!69557 m!65753))

(declare-fun m!65755 () Bool)

(assert (=> b!69557 m!65755))

(assert (=> b!69557 m!65745))

(declare-fun m!65757 () Bool)

(assert (=> b!69557 m!65757))

(declare-fun m!65759 () Bool)

(assert (=> b!69557 m!65759))

(assert (=> b!69557 m!65755))

(declare-fun m!65761 () Bool)

(assert (=> b!69557 m!65761))

(assert (=> b!69557 m!65757))

(assert (=> b!69557 m!65749))

(declare-fun m!65763 () Bool)

(assert (=> b!69557 m!65763))

(assert (=> b!69558 m!64555))

(assert (=> b!69558 m!64555))

(assert (=> b!69558 m!64607))

(assert (=> b!69554 m!64555))

(assert (=> b!69554 m!64555))

(assert (=> b!69554 m!64607))

(declare-fun m!65765 () Bool)

(assert (=> bm!5949 m!65765))

(assert (=> bm!5951 m!65741))

(assert (=> d!14869 d!15145))

(declare-fun d!15147 () Bool)

(assert (=> d!15147 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30016 lt!29778 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15147 true))

(declare-fun _$7!56 () Unit!1913)

(assert (=> d!15147 (= (choose!396 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30016 (zeroValue!2074 newMap!16) lt!29778 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)) _$7!56)))

(declare-fun bs!2972 () Bool)

(assert (= bs!2972 d!15147))

(assert (=> bs!2972 m!64251))

(assert (=> bs!2972 m!64251))

(assert (=> bs!2972 m!64929))

(assert (=> bs!2972 m!64931))

(assert (=> d!14869 d!15147))

(declare-fun d!15149 () Bool)

(declare-fun e!45535 () Bool)

(assert (=> d!15149 e!45535))

(declare-fun res!37287 () Bool)

(assert (=> d!15149 (=> res!37287 e!45535)))

(declare-fun lt!30569 () Bool)

(assert (=> d!15149 (= res!37287 (not lt!30569))))

(declare-fun lt!30570 () Bool)

(assert (=> d!15149 (= lt!30569 lt!30570)))

(declare-fun lt!30568 () Unit!1913)

(declare-fun e!45536 () Unit!1913)

(assert (=> d!15149 (= lt!30568 e!45536)))

(declare-fun c!9975 () Bool)

(assert (=> d!15149 (= c!9975 lt!30570)))

(assert (=> d!15149 (= lt!30570 (containsKey!134 (toList!726 lt!30232) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15149 (= (contains!720 lt!30232 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30569)))

(declare-fun b!69562 () Bool)

(declare-fun lt!30567 () Unit!1913)

(assert (=> b!69562 (= e!45536 lt!30567)))

(assert (=> b!69562 (= lt!30567 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30232) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69562 (isDefined!84 (getValueByKey!130 (toList!726 lt!30232) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69563 () Bool)

(declare-fun Unit!1956 () Unit!1913)

(assert (=> b!69563 (= e!45536 Unit!1956)))

(declare-fun b!69564 () Bool)

(assert (=> b!69564 (= e!45535 (isDefined!84 (getValueByKey!130 (toList!726 lt!30232) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15149 c!9975) b!69562))

(assert (= (and d!15149 (not c!9975)) b!69563))

(assert (= (and d!15149 (not res!37287)) b!69564))

(assert (=> d!15149 m!64555))

(declare-fun m!65767 () Bool)

(assert (=> d!15149 m!65767))

(assert (=> b!69562 m!64555))

(declare-fun m!65769 () Bool)

(assert (=> b!69562 m!65769))

(assert (=> b!69562 m!64555))

(declare-fun m!65771 () Bool)

(assert (=> b!69562 m!65771))

(assert (=> b!69562 m!65771))

(declare-fun m!65773 () Bool)

(assert (=> b!69562 m!65773))

(assert (=> b!69564 m!64555))

(assert (=> b!69564 m!65771))

(assert (=> b!69564 m!65771))

(assert (=> b!69564 m!65773))

(assert (=> b!69058 d!15149))

(declare-fun d!15151 () Bool)

(declare-fun lt!30571 () Bool)

(assert (=> d!15151 (= lt!30571 (select (content!72 (toList!726 lt!30334)) (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun e!45537 () Bool)

(assert (=> d!15151 (= lt!30571 e!45537)))

(declare-fun res!37289 () Bool)

(assert (=> d!15151 (=> (not res!37289) (not e!45537))))

(assert (=> d!15151 (= res!37289 ((_ is Cons!1490) (toList!726 lt!30334)))))

(assert (=> d!15151 (= (contains!721 (toList!726 lt!30334) (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30571)))

(declare-fun b!69565 () Bool)

(declare-fun e!45538 () Bool)

(assert (=> b!69565 (= e!45537 e!45538)))

(declare-fun res!37288 () Bool)

(assert (=> b!69565 (=> res!37288 e!45538)))

(assert (=> b!69565 (= res!37288 (= (h!2075 (toList!726 lt!30334)) (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69566 () Bool)

(assert (=> b!69566 (= e!45538 (contains!721 (t!5001 (toList!726 lt!30334)) (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (= (and d!15151 res!37289) b!69565))

(assert (= (and b!69565 (not res!37288)) b!69566))

(declare-fun m!65775 () Bool)

(assert (=> d!15151 m!65775))

(declare-fun m!65777 () Bool)

(assert (=> d!15151 m!65777))

(declare-fun m!65779 () Bool)

(assert (=> b!69566 m!65779))

(assert (=> b!69212 d!15151))

(declare-fun lt!30572 () Bool)

(declare-fun d!15153 () Bool)

(assert (=> d!15153 (= lt!30572 (select (content!72 (toList!726 lt!30194)) (tuple2!2119 lt!29835 lt!29830)))))

(declare-fun e!45539 () Bool)

(assert (=> d!15153 (= lt!30572 e!45539)))

(declare-fun res!37291 () Bool)

(assert (=> d!15153 (=> (not res!37291) (not e!45539))))

(assert (=> d!15153 (= res!37291 ((_ is Cons!1490) (toList!726 lt!30194)))))

(assert (=> d!15153 (= (contains!721 (toList!726 lt!30194) (tuple2!2119 lt!29835 lt!29830)) lt!30572)))

(declare-fun b!69567 () Bool)

(declare-fun e!45540 () Bool)

(assert (=> b!69567 (= e!45539 e!45540)))

(declare-fun res!37290 () Bool)

(assert (=> b!69567 (=> res!37290 e!45540)))

(assert (=> b!69567 (= res!37290 (= (h!2075 (toList!726 lt!30194)) (tuple2!2119 lt!29835 lt!29830)))))

(declare-fun b!69568 () Bool)

(assert (=> b!69568 (= e!45540 (contains!721 (t!5001 (toList!726 lt!30194)) (tuple2!2119 lt!29835 lt!29830)))))

(assert (= (and d!15153 res!37291) b!69567))

(assert (= (and b!69567 (not res!37290)) b!69568))

(declare-fun m!65781 () Bool)

(assert (=> d!15153 m!65781))

(declare-fun m!65783 () Bool)

(assert (=> d!15153 m!65783))

(declare-fun m!65785 () Bool)

(assert (=> b!69568 m!65785))

(assert (=> b!69019 d!15153))

(declare-fun d!15155 () Bool)

(declare-fun e!45541 () Bool)

(assert (=> d!15155 e!45541))

(declare-fun res!37292 () Bool)

(assert (=> d!15155 (=> res!37292 e!45541)))

(declare-fun lt!30575 () Bool)

(assert (=> d!15155 (= res!37292 (not lt!30575))))

(declare-fun lt!30576 () Bool)

(assert (=> d!15155 (= lt!30575 lt!30576)))

(declare-fun lt!30574 () Unit!1913)

(declare-fun e!45542 () Unit!1913)

(assert (=> d!15155 (= lt!30574 e!45542)))

(declare-fun c!9976 () Bool)

(assert (=> d!15155 (= c!9976 lt!30576)))

(assert (=> d!15155 (= lt!30576 (containsKey!134 (toList!726 lt!29912) lt!29920))))

(assert (=> d!15155 (= (contains!720 lt!29912 lt!29920) lt!30575)))

(declare-fun b!69569 () Bool)

(declare-fun lt!30573 () Unit!1913)

(assert (=> b!69569 (= e!45542 lt!30573)))

(assert (=> b!69569 (= lt!30573 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29912) lt!29920))))

(assert (=> b!69569 (isDefined!84 (getValueByKey!130 (toList!726 lt!29912) lt!29920))))

(declare-fun b!69570 () Bool)

(declare-fun Unit!1957 () Unit!1913)

(assert (=> b!69570 (= e!45542 Unit!1957)))

(declare-fun b!69571 () Bool)

(assert (=> b!69571 (= e!45541 (isDefined!84 (getValueByKey!130 (toList!726 lt!29912) lt!29920)))))

(assert (= (and d!15155 c!9976) b!69569))

(assert (= (and d!15155 (not c!9976)) b!69570))

(assert (= (and d!15155 (not res!37292)) b!69571))

(declare-fun m!65787 () Bool)

(assert (=> d!15155 m!65787))

(declare-fun m!65789 () Bool)

(assert (=> b!69569 m!65789))

(assert (=> b!69569 m!65055))

(assert (=> b!69569 m!65055))

(declare-fun m!65791 () Bool)

(assert (=> b!69569 m!65791))

(assert (=> b!69571 m!65055))

(assert (=> b!69571 m!65055))

(assert (=> b!69571 m!65791))

(assert (=> d!14909 d!15155))

(assert (=> d!14909 d!14913))

(declare-fun d!15157 () Bool)

(assert (=> d!15157 (= (apply!73 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29920) (apply!73 lt!29912 lt!29920))))

(assert (=> d!15157 true))

(declare-fun _$34!793 () Unit!1913)

(assert (=> d!15157 (= (choose!397 lt!29912 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29920) _$34!793)))

(declare-fun bs!2973 () Bool)

(assert (= bs!2973 d!15157))

(assert (=> bs!2973 m!64281))

(assert (=> bs!2973 m!64281))

(assert (=> bs!2973 m!64295))

(assert (=> bs!2973 m!64267))

(assert (=> d!14909 d!15157))

(assert (=> d!14909 d!14929))

(assert (=> d!14909 d!14931))

(declare-fun d!15159 () Bool)

(assert (=> d!15159 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2974 () Bool)

(assert (= bs!2974 d!15159))

(assert (=> bs!2974 m!65037))

(declare-fun m!65793 () Bool)

(assert (=> bs!2974 m!65793))

(assert (=> b!69215 d!15159))

(declare-fun b!69575 () Bool)

(declare-fun e!45544 () Option!136)

(assert (=> b!69575 (= e!45544 None!134)))

(declare-fun d!15161 () Bool)

(declare-fun c!9977 () Bool)

(assert (=> d!15161 (= c!9977 (and ((_ is Cons!1490) (toList!726 lt!29926)) (= (_1!1069 (h!2075 (toList!726 lt!29926))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45543 () Option!136)

(assert (=> d!15161 (= (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000) e!45543)))

(declare-fun b!69572 () Bool)

(assert (=> b!69572 (= e!45543 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29926)))))))

(declare-fun b!69574 () Bool)

(assert (=> b!69574 (= e!45544 (getValueByKey!130 (t!5001 (toList!726 lt!29926)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69573 () Bool)

(assert (=> b!69573 (= e!45543 e!45544)))

(declare-fun c!9978 () Bool)

(assert (=> b!69573 (= c!9978 (and ((_ is Cons!1490) (toList!726 lt!29926)) (not (= (_1!1069 (h!2075 (toList!726 lt!29926))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15161 c!9977) b!69572))

(assert (= (and d!15161 (not c!9977)) b!69573))

(assert (= (and b!69573 c!9978) b!69574))

(assert (= (and b!69573 (not c!9978)) b!69575))

(declare-fun m!65795 () Bool)

(assert (=> b!69574 m!65795))

(assert (=> b!69215 d!15161))

(declare-fun d!15163 () Bool)

(assert (=> d!15163 (= (apply!73 lt!30232 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1137 (getValueByKey!130 (toList!726 lt!30232) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2975 () Bool)

(assert (= bs!2975 d!15163))

(assert (=> bs!2975 m!64555))

(assert (=> bs!2975 m!65771))

(assert (=> bs!2975 m!65771))

(declare-fun m!65797 () Bool)

(assert (=> bs!2975 m!65797))

(assert (=> b!69046 d!15163))

(declare-fun d!15165 () Bool)

(declare-fun c!9979 () Bool)

(assert (=> d!15165 (= c!9979 ((_ is ValueCellFull!885) (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000)))))

(declare-fun e!45545 () V!2923)

(assert (=> d!15165 (= (get!1133 (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45545)))

(declare-fun b!69576 () Bool)

(assert (=> b!69576 (= e!45545 (get!1135 (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69577 () Bool)

(assert (=> b!69577 (= e!45545 (get!1136 (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15165 c!9979) b!69576))

(assert (= (and d!15165 (not c!9979)) b!69577))

(assert (=> b!69576 m!64703))

(assert (=> b!69576 m!64699))

(declare-fun m!65799 () Bool)

(assert (=> b!69576 m!65799))

(assert (=> b!69577 m!64703))

(assert (=> b!69577 m!64699))

(declare-fun m!65801 () Bool)

(assert (=> b!69577 m!65801))

(assert (=> b!69046 d!15165))

(assert (=> d!14803 d!14745))

(declare-fun d!15167 () Bool)

(assert (=> d!15167 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30408 #b00000000000000000000000000000000)))

(declare-fun lt!30579 () Unit!1913)

(declare-fun choose!13 (array!3854 (_ BitVec 64) (_ BitVec 32)) Unit!1913)

(assert (=> d!15167 (= lt!30579 (choose!13 (_keys!3812 newMap!16) lt!30408 #b00000000000000000000000000000000))))

(assert (=> d!15167 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!15167 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 newMap!16) lt!30408 #b00000000000000000000000000000000) lt!30579)))

(declare-fun bs!2976 () Bool)

(assert (= bs!2976 d!15167))

(assert (=> bs!2976 m!65209))

(declare-fun m!65803 () Bool)

(assert (=> bs!2976 m!65803))

(assert (=> b!69274 d!15167))

(declare-fun d!15169 () Bool)

(declare-fun res!37293 () Bool)

(declare-fun e!45546 () Bool)

(assert (=> d!15169 (=> res!37293 e!45546)))

(assert (=> d!15169 (= res!37293 (= (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) lt!30408))))

(assert (=> d!15169 (= (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30408 #b00000000000000000000000000000000) e!45546)))

(declare-fun b!69578 () Bool)

(declare-fun e!45547 () Bool)

(assert (=> b!69578 (= e!45546 e!45547)))

(declare-fun res!37294 () Bool)

(assert (=> b!69578 (=> (not res!37294) (not e!45547))))

(assert (=> b!69578 (= res!37294 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69579 () Bool)

(assert (=> b!69579 (= e!45547 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30408 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15169 (not res!37293)) b!69578))

(assert (= (and b!69578 res!37294) b!69579))

(assert (=> d!15169 m!64555))

(declare-fun m!65805 () Bool)

(assert (=> b!69579 m!65805))

(assert (=> b!69274 d!15169))

(declare-fun b!69580 () Bool)

(declare-fun e!45550 () SeekEntryResult!244)

(declare-fun lt!30580 () SeekEntryResult!244)

(assert (=> b!69580 (= e!45550 (MissingZero!244 (index!3107 lt!30580)))))

(declare-fun b!69581 () Bool)

(assert (=> b!69581 (= e!45550 (seekKeyOrZeroReturnVacant!0 (x!10858 lt!30580) (index!3107 lt!30580) (index!3107 lt!30580) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!69582 () Bool)

(declare-fun e!45548 () SeekEntryResult!244)

(assert (=> b!69582 (= e!45548 Undefined!244)))

(declare-fun d!15171 () Bool)

(declare-fun lt!30581 () SeekEntryResult!244)

(assert (=> d!15171 (and (or ((_ is Undefined!244) lt!30581) (not ((_ is Found!244) lt!30581)) (and (bvsge (index!3106 lt!30581) #b00000000000000000000000000000000) (bvslt (index!3106 lt!30581) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30581) ((_ is Found!244) lt!30581) (not ((_ is MissingZero!244) lt!30581)) (and (bvsge (index!3105 lt!30581) #b00000000000000000000000000000000) (bvslt (index!3105 lt!30581) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30581) ((_ is Found!244) lt!30581) ((_ is MissingZero!244) lt!30581) (not ((_ is MissingVacant!244) lt!30581)) (and (bvsge (index!3108 lt!30581) #b00000000000000000000000000000000) (bvslt (index!3108 lt!30581) (size!2076 (_keys!3812 newMap!16))))) (or ((_ is Undefined!244) lt!30581) (ite ((_ is Found!244) lt!30581) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30581)) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!244) lt!30581) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3105 lt!30581)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!244) lt!30581) (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30581)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15171 (= lt!30581 e!45548)))

(declare-fun c!9982 () Bool)

(assert (=> d!15171 (= c!9982 (and ((_ is Intermediate!244) lt!30580) (undefined!1056 lt!30580)))))

(assert (=> d!15171 (= lt!30580 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (mask!6113 newMap!16)) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!15171 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15171 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30581)))

(declare-fun b!69583 () Bool)

(declare-fun e!45549 () SeekEntryResult!244)

(assert (=> b!69583 (= e!45548 e!45549)))

(declare-fun lt!30582 () (_ BitVec 64))

(assert (=> b!69583 (= lt!30582 (select (arr!1840 (_keys!3812 newMap!16)) (index!3107 lt!30580)))))

(declare-fun c!9981 () Bool)

(assert (=> b!69583 (= c!9981 (= lt!30582 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69584 () Bool)

(assert (=> b!69584 (= e!45549 (Found!244 (index!3107 lt!30580)))))

(declare-fun b!69585 () Bool)

(declare-fun c!9980 () Bool)

(assert (=> b!69585 (= c!9980 (= lt!30582 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69585 (= e!45549 e!45550)))

(assert (= (and d!15171 c!9982) b!69582))

(assert (= (and d!15171 (not c!9982)) b!69583))

(assert (= (and b!69583 c!9981) b!69584))

(assert (= (and b!69583 (not c!9981)) b!69585))

(assert (= (and b!69585 c!9980) b!69580))

(assert (= (and b!69585 (not c!9980)) b!69581))

(assert (=> b!69581 m!64555))

(declare-fun m!65807 () Bool)

(assert (=> b!69581 m!65807))

(declare-fun m!65809 () Bool)

(assert (=> d!15171 m!65809))

(declare-fun m!65811 () Bool)

(assert (=> d!15171 m!65811))

(assert (=> d!15171 m!64555))

(declare-fun m!65813 () Bool)

(assert (=> d!15171 m!65813))

(assert (=> d!15171 m!65813))

(assert (=> d!15171 m!64555))

(declare-fun m!65815 () Bool)

(assert (=> d!15171 m!65815))

(declare-fun m!65817 () Bool)

(assert (=> d!15171 m!65817))

(assert (=> d!15171 m!64569))

(declare-fun m!65819 () Bool)

(assert (=> b!69583 m!65819))

(assert (=> b!69274 d!15171))

(declare-fun bm!5955 () Bool)

(declare-fun call!5958 () List!1494)

(declare-fun call!5960 () List!1494)

(assert (=> bm!5955 (= call!5958 call!5960)))

(declare-fun b!69586 () Bool)

(declare-fun e!45554 () List!1494)

(declare-fun call!5959 () List!1494)

(assert (=> b!69586 (= e!45554 call!5959)))

(declare-fun e!45553 () List!1494)

(declare-fun b!69587 () Bool)

(assert (=> b!69587 (= e!45553 (insertStrictlySorted!51 (t!5001 (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) (_1!1069 lt!29775) (_2!1069 lt!29775)))))

(declare-fun b!69589 () Bool)

(declare-fun res!37296 () Bool)

(declare-fun e!45552 () Bool)

(assert (=> b!69589 (=> (not res!37296) (not e!45552))))

(declare-fun lt!30583 () List!1494)

(assert (=> b!69589 (= res!37296 (containsKey!134 lt!30583 (_1!1069 lt!29775)))))

(declare-fun b!69590 () Bool)

(declare-fun e!45551 () List!1494)

(declare-fun e!45555 () List!1494)

(assert (=> b!69590 (= e!45551 e!45555)))

(declare-fun c!9983 () Bool)

(assert (=> b!69590 (= c!9983 (and ((_ is Cons!1490) (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) (= (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))))) (_1!1069 lt!29775))))))

(declare-fun b!69591 () Bool)

(declare-fun c!9984 () Bool)

(assert (=> b!69591 (= e!45553 (ite c!9983 (t!5001 (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) (ite c!9984 (Cons!1490 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) (t!5001 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))))) Nil!1491)))))

(declare-fun b!69592 () Bool)

(assert (=> b!69592 (= e!45554 call!5959)))

(declare-fun b!69593 () Bool)

(assert (=> b!69593 (= e!45555 call!5958)))

(declare-fun b!69594 () Bool)

(assert (=> b!69594 (= e!45551 call!5960)))

(declare-fun bm!5956 () Bool)

(declare-fun c!9985 () Bool)

(assert (=> bm!5956 (= call!5960 ($colon$colon!63 e!45553 (ite c!9985 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775)))))))

(declare-fun c!9986 () Bool)

(assert (=> bm!5956 (= c!9986 c!9985)))

(declare-fun b!69595 () Bool)

(assert (=> b!69595 (= e!45552 (contains!721 lt!30583 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun bm!5957 () Bool)

(assert (=> bm!5957 (= call!5959 call!5958)))

(declare-fun b!69588 () Bool)

(assert (=> b!69588 (= c!9984 (and ((_ is Cons!1490) (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) (bvsgt (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))))) (_1!1069 lt!29775))))))

(assert (=> b!69588 (= e!45555 e!45554)))

(declare-fun d!15173 () Bool)

(assert (=> d!15173 e!45552))

(declare-fun res!37295 () Bool)

(assert (=> d!15173 (=> (not res!37295) (not e!45552))))

(assert (=> d!15173 (= res!37295 (isStrictlySorted!285 lt!30583))))

(assert (=> d!15173 (= lt!30583 e!45551)))

(assert (=> d!15173 (= c!9985 (and ((_ is Cons!1490) (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))) (bvslt (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))))) (_1!1069 lt!29775))))))

(assert (=> d!15173 (isStrictlySorted!285 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))))))

(assert (=> d!15173 (= (insertStrictlySorted!51 (t!5001 (toList!726 (+!89 lt!29768 lt!29777))) (_1!1069 lt!29775) (_2!1069 lt!29775)) lt!30583)))

(assert (= (and d!15173 c!9985) b!69594))

(assert (= (and d!15173 (not c!9985)) b!69590))

(assert (= (and b!69590 c!9983) b!69593))

(assert (= (and b!69590 (not c!9983)) b!69588))

(assert (= (and b!69588 c!9984) b!69592))

(assert (= (and b!69588 (not c!9984)) b!69586))

(assert (= (or b!69592 b!69586) bm!5957))

(assert (= (or b!69593 bm!5957) bm!5955))

(assert (= (or b!69594 bm!5955) bm!5956))

(assert (= (and bm!5956 c!9986) b!69587))

(assert (= (and bm!5956 (not c!9986)) b!69591))

(assert (= (and d!15173 res!37295) b!69589))

(assert (= (and b!69589 res!37296) b!69595))

(declare-fun m!65821 () Bool)

(assert (=> b!69587 m!65821))

(declare-fun m!65823 () Bool)

(assert (=> d!15173 m!65823))

(declare-fun m!65825 () Bool)

(assert (=> d!15173 m!65825))

(declare-fun m!65827 () Bool)

(assert (=> b!69589 m!65827))

(declare-fun m!65829 () Bool)

(assert (=> bm!5956 m!65829))

(declare-fun m!65831 () Bool)

(assert (=> b!69595 m!65831))

(assert (=> b!69188 d!15173))

(assert (=> bm!5884 d!14783))

(declare-fun d!15175 () Bool)

(assert (=> d!15175 (= (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69117 d!15175))

(declare-fun b!69599 () Bool)

(declare-fun e!45557 () Option!136)

(assert (=> b!69599 (= e!45557 None!134)))

(declare-fun d!15177 () Bool)

(declare-fun c!9987 () Bool)

(assert (=> d!15177 (= c!9987 (and ((_ is Cons!1490) (toList!726 lt!30366)) (= (_1!1069 (h!2075 (toList!726 lt!30366))) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45556 () Option!136)

(assert (=> d!15177 (= (getValueByKey!130 (toList!726 lt!30366) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45556)))

(declare-fun b!69596 () Bool)

(assert (=> b!69596 (= e!45556 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30366)))))))

(declare-fun b!69598 () Bool)

(assert (=> b!69598 (= e!45557 (getValueByKey!130 (t!5001 (toList!726 lt!30366)) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69597 () Bool)

(assert (=> b!69597 (= e!45556 e!45557)))

(declare-fun c!9988 () Bool)

(assert (=> b!69597 (= c!9988 (and ((_ is Cons!1490) (toList!726 lt!30366)) (not (= (_1!1069 (h!2075 (toList!726 lt!30366))) (_1!1069 (tuple2!2119 lt!29914 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15177 c!9987) b!69596))

(assert (= (and d!15177 (not c!9987)) b!69597))

(assert (= (and b!69597 c!9988) b!69598))

(assert (= (and b!69597 (not c!9988)) b!69599))

(declare-fun m!65833 () Bool)

(assert (=> b!69598 m!65833))

(assert (=> b!69232 d!15177))

(declare-fun d!15179 () Bool)

(declare-fun c!9989 () Bool)

(assert (=> d!15179 (= c!9989 ((_ is Nil!1491) (toList!726 lt!29858)))))

(declare-fun e!45558 () (InoxSet tuple2!2118))

(assert (=> d!15179 (= (content!72 (toList!726 lt!29858)) e!45558)))

(declare-fun b!69600 () Bool)

(assert (=> b!69600 (= e!45558 ((as const (Array tuple2!2118 Bool)) false))))

(declare-fun b!69601 () Bool)

(assert (=> b!69601 (= e!45558 ((_ map or) (store ((as const (Array tuple2!2118 Bool)) false) (h!2075 (toList!726 lt!29858)) true) (content!72 (t!5001 (toList!726 lt!29858)))))))

(assert (= (and d!15179 c!9989) b!69600))

(assert (= (and d!15179 (not c!9989)) b!69601))

(declare-fun m!65835 () Bool)

(assert (=> b!69601 m!65835))

(declare-fun m!65837 () Bool)

(assert (=> b!69601 m!65837))

(assert (=> d!14831 d!15179))

(declare-fun d!15181 () Bool)

(declare-fun e!45559 () Bool)

(assert (=> d!15181 e!45559))

(declare-fun res!37297 () Bool)

(assert (=> d!15181 (=> res!37297 e!45559)))

(declare-fun lt!30586 () Bool)

(assert (=> d!15181 (= res!37297 (not lt!30586))))

(declare-fun lt!30587 () Bool)

(assert (=> d!15181 (= lt!30586 lt!30587)))

(declare-fun lt!30585 () Unit!1913)

(declare-fun e!45560 () Unit!1913)

(assert (=> d!15181 (= lt!30585 e!45560)))

(declare-fun c!9990 () Bool)

(assert (=> d!15181 (= c!9990 lt!30587)))

(assert (=> d!15181 (= lt!30587 (containsKey!134 (toList!726 lt!30254) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15181 (= (contains!720 lt!30254 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30586)))

(declare-fun b!69602 () Bool)

(declare-fun lt!30584 () Unit!1913)

(assert (=> b!69602 (= e!45560 lt!30584)))

(assert (=> b!69602 (= lt!30584 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30254) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69602 (isDefined!84 (getValueByKey!130 (toList!726 lt!30254) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69603 () Bool)

(declare-fun Unit!1958 () Unit!1913)

(assert (=> b!69603 (= e!45560 Unit!1958)))

(declare-fun b!69604 () Bool)

(assert (=> b!69604 (= e!45559 (isDefined!84 (getValueByKey!130 (toList!726 lt!30254) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15181 c!9990) b!69602))

(assert (= (and d!15181 (not c!9990)) b!69603))

(assert (= (and d!15181 (not res!37297)) b!69604))

(assert (=> d!15181 m!64555))

(declare-fun m!65839 () Bool)

(assert (=> d!15181 m!65839))

(assert (=> b!69602 m!64555))

(declare-fun m!65841 () Bool)

(assert (=> b!69602 m!65841))

(assert (=> b!69602 m!64555))

(declare-fun m!65843 () Bool)

(assert (=> b!69602 m!65843))

(assert (=> b!69602 m!65843))

(declare-fun m!65845 () Bool)

(assert (=> b!69602 m!65845))

(assert (=> b!69604 m!64555))

(assert (=> b!69604 m!65843))

(assert (=> b!69604 m!65843))

(assert (=> b!69604 m!65845))

(assert (=> b!69079 d!15181))

(declare-fun d!15183 () Bool)

(declare-fun c!9991 () Bool)

(assert (=> d!15183 (= c!9991 ((_ is Nil!1491) (toList!726 lt!29851)))))

(declare-fun e!45561 () (InoxSet tuple2!2118))

(assert (=> d!15183 (= (content!72 (toList!726 lt!29851)) e!45561)))

(declare-fun b!69605 () Bool)

(assert (=> b!69605 (= e!45561 ((as const (Array tuple2!2118 Bool)) false))))

(declare-fun b!69606 () Bool)

(assert (=> b!69606 (= e!45561 ((_ map or) (store ((as const (Array tuple2!2118 Bool)) false) (h!2075 (toList!726 lt!29851)) true) (content!72 (t!5001 (toList!726 lt!29851)))))))

(assert (= (and d!15183 c!9991) b!69605))

(assert (= (and d!15183 (not c!9991)) b!69606))

(declare-fun m!65847 () Bool)

(assert (=> b!69606 m!65847))

(declare-fun m!65849 () Bool)

(assert (=> b!69606 m!65849))

(assert (=> d!14881 d!15183))

(declare-fun d!15185 () Bool)

(declare-fun e!45562 () Bool)

(assert (=> d!15185 e!45562))

(declare-fun res!37298 () Bool)

(assert (=> d!15185 (=> res!37298 e!45562)))

(declare-fun lt!30590 () Bool)

(assert (=> d!15185 (= res!37298 (not lt!30590))))

(declare-fun lt!30591 () Bool)

(assert (=> d!15185 (= lt!30590 lt!30591)))

(declare-fun lt!30589 () Unit!1913)

(declare-fun e!45563 () Unit!1913)

(assert (=> d!15185 (= lt!30589 e!45563)))

(declare-fun c!9992 () Bool)

(assert (=> d!15185 (= c!9992 lt!30591)))

(assert (=> d!15185 (= lt!30591 (containsKey!134 (toList!726 lt!30393) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15185 (= (contains!720 lt!30393 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30590)))

(declare-fun b!69607 () Bool)

(declare-fun lt!30588 () Unit!1913)

(assert (=> b!69607 (= e!45563 lt!30588)))

(assert (=> b!69607 (= lt!30588 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30393) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69607 (isDefined!84 (getValueByKey!130 (toList!726 lt!30393) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69608 () Bool)

(declare-fun Unit!1959 () Unit!1913)

(assert (=> b!69608 (= e!45563 Unit!1959)))

(declare-fun b!69609 () Bool)

(assert (=> b!69609 (= e!45562 (isDefined!84 (getValueByKey!130 (toList!726 lt!30393) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15185 c!9992) b!69607))

(assert (= (and d!15185 (not c!9992)) b!69608))

(assert (= (and d!15185 (not res!37298)) b!69609))

(assert (=> d!15185 m!64555))

(declare-fun m!65851 () Bool)

(assert (=> d!15185 m!65851))

(assert (=> b!69607 m!64555))

(declare-fun m!65853 () Bool)

(assert (=> b!69607 m!65853))

(assert (=> b!69607 m!64555))

(declare-fun m!65855 () Bool)

(assert (=> b!69607 m!65855))

(assert (=> b!69607 m!65855))

(declare-fun m!65857 () Bool)

(assert (=> b!69607 m!65857))

(assert (=> b!69609 m!64555))

(assert (=> b!69609 m!65855))

(assert (=> b!69609 m!65855))

(assert (=> b!69609 m!65857))

(assert (=> b!69260 d!15185))

(declare-fun d!15187 () Bool)

(declare-fun e!45564 () Bool)

(assert (=> d!15187 e!45564))

(declare-fun res!37299 () Bool)

(assert (=> d!15187 (=> res!37299 e!45564)))

(declare-fun lt!30594 () Bool)

(assert (=> d!15187 (= res!37299 (not lt!30594))))

(declare-fun lt!30595 () Bool)

(assert (=> d!15187 (= lt!30594 lt!30595)))

(declare-fun lt!30593 () Unit!1913)

(declare-fun e!45565 () Unit!1913)

(assert (=> d!15187 (= lt!30593 e!45565)))

(declare-fun c!9993 () Bool)

(assert (=> d!15187 (= c!9993 lt!30595)))

(assert (=> d!15187 (= lt!30595 (containsKey!134 (toList!726 lt!30232) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15187 (= (contains!720 lt!30232 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30594)))

(declare-fun b!69610 () Bool)

(declare-fun lt!30592 () Unit!1913)

(assert (=> b!69610 (= e!45565 lt!30592)))

(assert (=> b!69610 (= lt!30592 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30232) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69610 (isDefined!84 (getValueByKey!130 (toList!726 lt!30232) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69611 () Bool)

(declare-fun Unit!1960 () Unit!1913)

(assert (=> b!69611 (= e!45565 Unit!1960)))

(declare-fun b!69612 () Bool)

(assert (=> b!69612 (= e!45564 (isDefined!84 (getValueByKey!130 (toList!726 lt!30232) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15187 c!9993) b!69610))

(assert (= (and d!15187 (not c!9993)) b!69611))

(assert (= (and d!15187 (not res!37299)) b!69612))

(declare-fun m!65859 () Bool)

(assert (=> d!15187 m!65859))

(declare-fun m!65861 () Bool)

(assert (=> b!69610 m!65861))

(declare-fun m!65863 () Bool)

(assert (=> b!69610 m!65863))

(assert (=> b!69610 m!65863))

(declare-fun m!65865 () Bool)

(assert (=> b!69610 m!65865))

(assert (=> b!69612 m!65863))

(assert (=> b!69612 m!65863))

(assert (=> b!69612 m!65865))

(assert (=> bm!5893 d!15187))

(declare-fun d!15189 () Bool)

(declare-fun e!45566 () Bool)

(assert (=> d!15189 e!45566))

(declare-fun res!37301 () Bool)

(assert (=> d!15189 (=> (not res!37301) (not e!45566))))

(declare-fun lt!30598 () ListLongMap!1421)

(assert (=> d!15189 (= res!37301 (contains!720 lt!30598 (_1!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30599 () List!1494)

(assert (=> d!15189 (= lt!30598 (ListLongMap!1422 lt!30599))))

(declare-fun lt!30596 () Unit!1913)

(declare-fun lt!30597 () Unit!1913)

(assert (=> d!15189 (= lt!30596 lt!30597)))

(assert (=> d!15189 (= (getValueByKey!130 lt!30599 (_1!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15189 (= lt!30597 (lemmaContainsTupThenGetReturnValue!49 lt!30599 (_1!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15189 (= lt!30599 (insertStrictlySorted!51 (toList!726 lt!30286) (_1!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15189 (= (+!89 lt!30286 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))) lt!30598)))

(declare-fun b!69613 () Bool)

(declare-fun res!37300 () Bool)

(assert (=> b!69613 (=> (not res!37300) (not e!45566))))

(assert (=> b!69613 (= res!37300 (= (getValueByKey!130 (toList!726 lt!30598) (_1!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))))))))

(declare-fun b!69614 () Bool)

(assert (=> b!69614 (= e!45566 (contains!721 (toList!726 lt!30598) (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15189 res!37301) b!69613))

(assert (= (and b!69613 res!37300) b!69614))

(declare-fun m!65867 () Bool)

(assert (=> d!15189 m!65867))

(declare-fun m!65869 () Bool)

(assert (=> d!15189 m!65869))

(declare-fun m!65871 () Bool)

(assert (=> d!15189 m!65871))

(declare-fun m!65873 () Bool)

(assert (=> d!15189 m!65873))

(declare-fun m!65875 () Bool)

(assert (=> b!69613 m!65875))

(declare-fun m!65877 () Bool)

(assert (=> b!69614 m!65877))

(assert (=> b!69147 d!15189))

(declare-fun d!15191 () Bool)

(declare-fun e!45567 () Bool)

(assert (=> d!15191 e!45567))

(declare-fun res!37303 () Bool)

(assert (=> d!15191 (=> (not res!37303) (not e!45567))))

(declare-fun lt!30602 () ListLongMap!1421)

(assert (=> d!15191 (= res!37303 (contains!720 lt!30602 (_1!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30603 () List!1494)

(assert (=> d!15191 (= lt!30602 (ListLongMap!1422 lt!30603))))

(declare-fun lt!30600 () Unit!1913)

(declare-fun lt!30601 () Unit!1913)

(assert (=> d!15191 (= lt!30600 lt!30601)))

(assert (=> d!15191 (= (getValueByKey!130 lt!30603 (_1!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15191 (= lt!30601 (lemmaContainsTupThenGetReturnValue!49 lt!30603 (_1!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15191 (= lt!30603 (insertStrictlySorted!51 (toList!726 lt!30301) (_1!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15191 (= (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))) lt!30602)))

(declare-fun b!69615 () Bool)

(declare-fun res!37302 () Bool)

(assert (=> b!69615 (=> (not res!37302) (not e!45567))))

(assert (=> b!69615 (= res!37302 (= (getValueByKey!130 (toList!726 lt!30602) (_1!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))))))))

(declare-fun b!69616 () Bool)

(assert (=> b!69616 (= e!45567 (contains!721 (toList!726 lt!30602) (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15191 res!37303) b!69615))

(assert (= (and b!69615 res!37302) b!69616))

(declare-fun m!65879 () Bool)

(assert (=> d!15191 m!65879))

(declare-fun m!65881 () Bool)

(assert (=> d!15191 m!65881))

(declare-fun m!65883 () Bool)

(assert (=> d!15191 m!65883))

(declare-fun m!65885 () Bool)

(assert (=> d!15191 m!65885))

(declare-fun m!65887 () Bool)

(assert (=> b!69615 m!65887))

(declare-fun m!65889 () Bool)

(assert (=> b!69616 m!65889))

(assert (=> b!69147 d!15191))

(declare-fun d!15193 () Bool)

(assert (=> d!15193 (= (apply!73 lt!30306 lt!30300) (get!1137 (getValueByKey!130 (toList!726 lt!30306) lt!30300)))))

(declare-fun bs!2977 () Bool)

(assert (= bs!2977 d!15193))

(declare-fun m!65891 () Bool)

(assert (=> bs!2977 m!65891))

(assert (=> bs!2977 m!65891))

(declare-fun m!65893 () Bool)

(assert (=> bs!2977 m!65893))

(assert (=> b!69147 d!15193))

(declare-fun d!15195 () Bool)

(assert (=> d!15195 (= (apply!73 lt!30289 lt!30297) (get!1137 (getValueByKey!130 (toList!726 lt!30289) lt!30297)))))

(declare-fun bs!2978 () Bool)

(assert (= bs!2978 d!15195))

(declare-fun m!65895 () Bool)

(assert (=> bs!2978 m!65895))

(assert (=> bs!2978 m!65895))

(declare-fun m!65897 () Bool)

(assert (=> bs!2978 m!65897))

(assert (=> b!69147 d!15195))

(declare-fun d!15197 () Bool)

(assert (=> d!15197 (= (apply!73 (+!89 lt!30286 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))) lt!30288) (apply!73 lt!30286 lt!30288))))

(declare-fun lt!30604 () Unit!1913)

(assert (=> d!15197 (= lt!30604 (choose!397 lt!30286 lt!30302 (zeroValue!2074 newMap!16) lt!30288))))

(declare-fun e!45568 () Bool)

(assert (=> d!15197 e!45568))

(declare-fun res!37304 () Bool)

(assert (=> d!15197 (=> (not res!37304) (not e!45568))))

(assert (=> d!15197 (= res!37304 (contains!720 lt!30286 lt!30288))))

(assert (=> d!15197 (= (addApplyDifferent!49 lt!30286 lt!30302 (zeroValue!2074 newMap!16) lt!30288) lt!30604)))

(declare-fun b!69617 () Bool)

(assert (=> b!69617 (= e!45568 (not (= lt!30288 lt!30302)))))

(assert (= (and d!15197 res!37304) b!69617))

(declare-fun m!65899 () Bool)

(assert (=> d!15197 m!65899))

(assert (=> d!15197 m!64909))

(assert (=> d!15197 m!64915))

(declare-fun m!65901 () Bool)

(assert (=> d!15197 m!65901))

(assert (=> d!15197 m!64909))

(assert (=> d!15197 m!64893))

(assert (=> b!69147 d!15197))

(declare-fun d!15199 () Bool)

(assert (=> d!15199 (= (apply!73 (+!89 lt!30289 (tuple2!2119 lt!30304 (minValue!2074 newMap!16))) lt!30297) (apply!73 lt!30289 lt!30297))))

(declare-fun lt!30605 () Unit!1913)

(assert (=> d!15199 (= lt!30605 (choose!397 lt!30289 lt!30304 (minValue!2074 newMap!16) lt!30297))))

(declare-fun e!45569 () Bool)

(assert (=> d!15199 e!45569))

(declare-fun res!37305 () Bool)

(assert (=> d!15199 (=> (not res!37305) (not e!45569))))

(assert (=> d!15199 (= res!37305 (contains!720 lt!30289 lt!30297))))

(assert (=> d!15199 (= (addApplyDifferent!49 lt!30289 lt!30304 (minValue!2074 newMap!16) lt!30297) lt!30605)))

(declare-fun b!69618 () Bool)

(assert (=> b!69618 (= e!45569 (not (= lt!30297 lt!30304)))))

(assert (= (and d!15199 res!37305) b!69618))

(declare-fun m!65903 () Bool)

(assert (=> d!15199 m!65903))

(assert (=> d!15199 m!64903))

(assert (=> d!15199 m!64917))

(declare-fun m!65905 () Bool)

(assert (=> d!15199 m!65905))

(assert (=> d!15199 m!64903))

(assert (=> d!15199 m!64887))

(assert (=> b!69147 d!15199))

(declare-fun d!15201 () Bool)

(declare-fun e!45570 () Bool)

(assert (=> d!15201 e!45570))

(declare-fun res!37306 () Bool)

(assert (=> d!15201 (=> res!37306 e!45570)))

(declare-fun lt!30608 () Bool)

(assert (=> d!15201 (= res!37306 (not lt!30608))))

(declare-fun lt!30609 () Bool)

(assert (=> d!15201 (= lt!30608 lt!30609)))

(declare-fun lt!30607 () Unit!1913)

(declare-fun e!45571 () Unit!1913)

(assert (=> d!15201 (= lt!30607 e!45571)))

(declare-fun c!9994 () Bool)

(assert (=> d!15201 (= c!9994 lt!30609)))

(assert (=> d!15201 (= lt!30609 (containsKey!134 (toList!726 (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))) lt!30293))))

(assert (=> d!15201 (= (contains!720 (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))) lt!30293) lt!30608)))

(declare-fun b!69619 () Bool)

(declare-fun lt!30606 () Unit!1913)

(assert (=> b!69619 (= e!45571 lt!30606)))

(assert (=> b!69619 (= lt!30606 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))) lt!30293))))

(assert (=> b!69619 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))) lt!30293))))

(declare-fun b!69620 () Bool)

(declare-fun Unit!1961 () Unit!1913)

(assert (=> b!69620 (= e!45571 Unit!1961)))

(declare-fun b!69621 () Bool)

(assert (=> b!69621 (= e!45570 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16)))) lt!30293)))))

(assert (= (and d!15201 c!9994) b!69619))

(assert (= (and d!15201 (not c!9994)) b!69620))

(assert (= (and d!15201 (not res!37306)) b!69621))

(declare-fun m!65907 () Bool)

(assert (=> d!15201 m!65907))

(declare-fun m!65909 () Bool)

(assert (=> b!69619 m!65909))

(declare-fun m!65911 () Bool)

(assert (=> b!69619 m!65911))

(assert (=> b!69619 m!65911))

(declare-fun m!65913 () Bool)

(assert (=> b!69619 m!65913))

(assert (=> b!69621 m!65911))

(assert (=> b!69621 m!65911))

(assert (=> b!69621 m!65913))

(assert (=> b!69147 d!15201))

(declare-fun d!15203 () Bool)

(declare-fun e!45572 () Bool)

(assert (=> d!15203 e!45572))

(declare-fun res!37308 () Bool)

(assert (=> d!15203 (=> (not res!37308) (not e!45572))))

(declare-fun lt!30612 () ListLongMap!1421)

(assert (=> d!15203 (= res!37308 (contains!720 lt!30612 (_1!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16)))))))

(declare-fun lt!30613 () List!1494)

(assert (=> d!15203 (= lt!30612 (ListLongMap!1422 lt!30613))))

(declare-fun lt!30610 () Unit!1913)

(declare-fun lt!30611 () Unit!1913)

(assert (=> d!15203 (= lt!30610 lt!30611)))

(assert (=> d!15203 (= (getValueByKey!130 lt!30613 (_1!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16)))))))

(assert (=> d!15203 (= lt!30611 (lemmaContainsTupThenGetReturnValue!49 lt!30613 (_1!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16)))))))

(assert (=> d!15203 (= lt!30613 (insertStrictlySorted!51 (toList!726 lt!30306) (_1!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16)))))))

(assert (=> d!15203 (= (+!89 lt!30306 (tuple2!2119 lt!30291 (minValue!2074 newMap!16))) lt!30612)))

(declare-fun b!69622 () Bool)

(declare-fun res!37307 () Bool)

(assert (=> b!69622 (=> (not res!37307) (not e!45572))))

(assert (=> b!69622 (= res!37307 (= (getValueByKey!130 (toList!726 lt!30612) (_1!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30291 (minValue!2074 newMap!16))))))))

(declare-fun b!69623 () Bool)

(assert (=> b!69623 (= e!45572 (contains!721 (toList!726 lt!30612) (tuple2!2119 lt!30291 (minValue!2074 newMap!16))))))

(assert (= (and d!15203 res!37308) b!69622))

(assert (= (and b!69622 res!37307) b!69623))

(declare-fun m!65915 () Bool)

(assert (=> d!15203 m!65915))

(declare-fun m!65917 () Bool)

(assert (=> d!15203 m!65917))

(declare-fun m!65919 () Bool)

(assert (=> d!15203 m!65919))

(declare-fun m!65921 () Bool)

(assert (=> d!15203 m!65921))

(declare-fun m!65923 () Bool)

(assert (=> b!69622 m!65923))

(declare-fun m!65925 () Bool)

(assert (=> b!69623 m!65925))

(assert (=> b!69147 d!15203))

(declare-fun b!69624 () Bool)

(declare-fun e!45573 () Bool)

(declare-fun lt!30620 () ListLongMap!1421)

(assert (=> b!69624 (= e!45573 (= lt!30620 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16))))))

(declare-fun d!15205 () Bool)

(declare-fun e!45574 () Bool)

(assert (=> d!15205 e!45574))

(declare-fun res!37312 () Bool)

(assert (=> d!15205 (=> (not res!37312) (not e!45574))))

(assert (=> d!15205 (= res!37312 (not (contains!720 lt!30620 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45577 () ListLongMap!1421)

(assert (=> d!15205 (= lt!30620 e!45577)))

(declare-fun c!9997 () Bool)

(assert (=> d!15205 (= c!9997 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15205 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15205 (= (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30620)))

(declare-fun b!69625 () Bool)

(declare-fun res!37310 () Bool)

(assert (=> b!69625 (=> (not res!37310) (not e!45574))))

(assert (=> b!69625 (= res!37310 (not (contains!720 lt!30620 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!5958 () Bool)

(declare-fun call!5961 () ListLongMap!1421)

(assert (=> bm!5958 (= call!5961 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16)))))

(declare-fun b!69626 () Bool)

(assert (=> b!69626 (= e!45573 (isEmpty!315 lt!30620))))

(declare-fun b!69627 () Bool)

(declare-fun e!45579 () Bool)

(declare-fun e!45578 () Bool)

(assert (=> b!69627 (= e!45579 e!45578)))

(assert (=> b!69627 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun res!37311 () Bool)

(assert (=> b!69627 (= res!37311 (contains!720 lt!30620 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69627 (=> (not res!37311) (not e!45578))))

(declare-fun b!69628 () Bool)

(assert (=> b!69628 (= e!45577 (ListLongMap!1422 Nil!1491))))

(declare-fun b!69629 () Bool)

(assert (=> b!69629 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> b!69629 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_values!2151 newMap!16))))))

(assert (=> b!69629 (= e!45578 (= (apply!73 lt!30620 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69630 () Bool)

(declare-fun e!45576 () Bool)

(assert (=> b!69630 (= e!45576 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69630 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69631 () Bool)

(declare-fun lt!30615 () Unit!1913)

(declare-fun lt!30618 () Unit!1913)

(assert (=> b!69631 (= lt!30615 lt!30618)))

(declare-fun lt!30619 () (_ BitVec 64))

(declare-fun lt!30614 () V!2923)

(declare-fun lt!30616 () ListLongMap!1421)

(declare-fun lt!30617 () (_ BitVec 64))

(assert (=> b!69631 (not (contains!720 (+!89 lt!30616 (tuple2!2119 lt!30619 lt!30614)) lt!30617))))

(assert (=> b!69631 (= lt!30618 (addStillNotContains!24 lt!30616 lt!30619 lt!30614 lt!30617))))

(assert (=> b!69631 (= lt!30617 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69631 (= lt!30614 (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69631 (= lt!30619 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69631 (= lt!30616 call!5961)))

(declare-fun e!45575 () ListLongMap!1421)

(assert (=> b!69631 (= e!45575 (+!89 call!5961 (tuple2!2119 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69632 () Bool)

(assert (=> b!69632 (= e!45575 call!5961)))

(declare-fun b!69633 () Bool)

(assert (=> b!69633 (= e!45577 e!45575)))

(declare-fun c!9998 () Bool)

(assert (=> b!69633 (= c!9998 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69634 () Bool)

(assert (=> b!69634 (= e!45579 e!45573)))

(declare-fun c!9995 () Bool)

(assert (=> b!69634 (= c!9995 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69635 () Bool)

(assert (=> b!69635 (= e!45574 e!45579)))

(declare-fun c!9996 () Bool)

(assert (=> b!69635 (= c!9996 e!45576)))

(declare-fun res!37309 () Bool)

(assert (=> b!69635 (=> (not res!37309) (not e!45576))))

(assert (=> b!69635 (= res!37309 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!15205 c!9997) b!69628))

(assert (= (and d!15205 (not c!9997)) b!69633))

(assert (= (and b!69633 c!9998) b!69631))

(assert (= (and b!69633 (not c!9998)) b!69632))

(assert (= (or b!69631 b!69632) bm!5958))

(assert (= (and d!15205 res!37312) b!69625))

(assert (= (and b!69625 res!37310) b!69635))

(assert (= (and b!69635 res!37309) b!69630))

(assert (= (and b!69635 c!9996) b!69627))

(assert (= (and b!69635 (not c!9996)) b!69634))

(assert (= (and b!69627 res!37311) b!69629))

(assert (= (and b!69634 c!9995) b!69624))

(assert (= (and b!69634 (not c!9995)) b!69626))

(declare-fun b_lambda!3125 () Bool)

(assert (=> (not b_lambda!3125) (not b!69629)))

(assert (=> b!69629 t!5009))

(declare-fun b_and!4277 () Bool)

(assert (= b_and!4273 (and (=> t!5009 result!2623) b_and!4277)))

(assert (=> b!69629 t!5011))

(declare-fun b_and!4279 () Bool)

(assert (= b_and!4275 (and (=> t!5011 result!2625) b_and!4279)))

(declare-fun b_lambda!3127 () Bool)

(assert (=> (not b_lambda!3127) (not b!69631)))

(assert (=> b!69631 t!5009))

(declare-fun b_and!4281 () Bool)

(assert (= b_and!4277 (and (=> t!5009 result!2623) b_and!4281)))

(assert (=> b!69631 t!5011))

(declare-fun b_and!4283 () Bool)

(assert (= b_and!4279 (and (=> t!5011 result!2625) b_and!4283)))

(declare-fun m!65927 () Bool)

(assert (=> d!15205 m!65927))

(assert (=> d!15205 m!64569))

(assert (=> b!69627 m!64555))

(assert (=> b!69627 m!64555))

(declare-fun m!65929 () Bool)

(assert (=> b!69627 m!65929))

(declare-fun m!65931 () Bool)

(assert (=> b!69626 m!65931))

(declare-fun m!65933 () Bool)

(assert (=> b!69624 m!65933))

(declare-fun m!65935 () Bool)

(assert (=> b!69625 m!65935))

(assert (=> b!69629 m!64755))

(assert (=> b!69629 m!64755))

(assert (=> b!69629 m!64699))

(assert (=> b!69629 m!64757))

(assert (=> b!69629 m!64555))

(assert (=> b!69629 m!64555))

(declare-fun m!65937 () Bool)

(assert (=> b!69629 m!65937))

(assert (=> b!69629 m!64699))

(assert (=> bm!5958 m!65933))

(assert (=> b!69633 m!64555))

(assert (=> b!69633 m!64555))

(assert (=> b!69633 m!64607))

(assert (=> b!69630 m!64555))

(assert (=> b!69630 m!64555))

(assert (=> b!69630 m!64607))

(declare-fun m!65939 () Bool)

(assert (=> b!69631 m!65939))

(assert (=> b!69631 m!64755))

(assert (=> b!69631 m!64699))

(assert (=> b!69631 m!64757))

(declare-fun m!65941 () Bool)

(assert (=> b!69631 m!65941))

(assert (=> b!69631 m!64555))

(declare-fun m!65943 () Bool)

(assert (=> b!69631 m!65943))

(assert (=> b!69631 m!64699))

(assert (=> b!69631 m!65941))

(declare-fun m!65945 () Bool)

(assert (=> b!69631 m!65945))

(assert (=> b!69631 m!64755))

(assert (=> b!69147 d!15205))

(declare-fun d!15207 () Bool)

(assert (=> d!15207 (= (apply!73 (+!89 lt!30306 (tuple2!2119 lt!30291 (minValue!2074 newMap!16))) lt!30300) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30306 (tuple2!2119 lt!30291 (minValue!2074 newMap!16)))) lt!30300)))))

(declare-fun bs!2979 () Bool)

(assert (= bs!2979 d!15207))

(declare-fun m!65947 () Bool)

(assert (=> bs!2979 m!65947))

(assert (=> bs!2979 m!65947))

(declare-fun m!65949 () Bool)

(assert (=> bs!2979 m!65949))

(assert (=> b!69147 d!15207))

(declare-fun d!15209 () Bool)

(assert (=> d!15209 (= (apply!73 (+!89 lt!30286 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16))) lt!30288) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30286 (tuple2!2119 lt!30302 (zeroValue!2074 newMap!16)))) lt!30288)))))

(declare-fun bs!2980 () Bool)

(assert (= bs!2980 d!15209))

(declare-fun m!65951 () Bool)

(assert (=> bs!2980 m!65951))

(assert (=> bs!2980 m!65951))

(declare-fun m!65953 () Bool)

(assert (=> bs!2980 m!65953))

(assert (=> b!69147 d!15209))

(declare-fun d!15211 () Bool)

(assert (=> d!15211 (= (apply!73 lt!30286 lt!30288) (get!1137 (getValueByKey!130 (toList!726 lt!30286) lt!30288)))))

(declare-fun bs!2981 () Bool)

(assert (= bs!2981 d!15211))

(declare-fun m!65955 () Bool)

(assert (=> bs!2981 m!65955))

(assert (=> bs!2981 m!65955))

(declare-fun m!65957 () Bool)

(assert (=> bs!2981 m!65957))

(assert (=> b!69147 d!15211))

(declare-fun d!15213 () Bool)

(assert (=> d!15213 (contains!720 (+!89 lt!30301 (tuple2!2119 lt!30287 (zeroValue!2074 newMap!16))) lt!30293)))

(declare-fun lt!30621 () Unit!1913)

(assert (=> d!15213 (= lt!30621 (choose!398 lt!30301 lt!30287 (zeroValue!2074 newMap!16) lt!30293))))

(assert (=> d!15213 (contains!720 lt!30301 lt!30293)))

(assert (=> d!15213 (= (addStillContains!49 lt!30301 lt!30287 (zeroValue!2074 newMap!16) lt!30293) lt!30621)))

(declare-fun bs!2982 () Bool)

(assert (= bs!2982 d!15213))

(assert (=> bs!2982 m!64911))

(assert (=> bs!2982 m!64911))

(assert (=> bs!2982 m!64913))

(declare-fun m!65959 () Bool)

(assert (=> bs!2982 m!65959))

(declare-fun m!65961 () Bool)

(assert (=> bs!2982 m!65961))

(assert (=> b!69147 d!15213))

(declare-fun d!15215 () Bool)

(assert (=> d!15215 (= (apply!73 (+!89 lt!30306 (tuple2!2119 lt!30291 (minValue!2074 newMap!16))) lt!30300) (apply!73 lt!30306 lt!30300))))

(declare-fun lt!30622 () Unit!1913)

(assert (=> d!15215 (= lt!30622 (choose!397 lt!30306 lt!30291 (minValue!2074 newMap!16) lt!30300))))

(declare-fun e!45580 () Bool)

(assert (=> d!15215 e!45580))

(declare-fun res!37313 () Bool)

(assert (=> d!15215 (=> (not res!37313) (not e!45580))))

(assert (=> d!15215 (= res!37313 (contains!720 lt!30306 lt!30300))))

(assert (=> d!15215 (= (addApplyDifferent!49 lt!30306 lt!30291 (minValue!2074 newMap!16) lt!30300) lt!30622)))

(declare-fun b!69636 () Bool)

(assert (=> b!69636 (= e!45580 (not (= lt!30300 lt!30291)))))

(assert (= (and d!15215 res!37313) b!69636))

(declare-fun m!65963 () Bool)

(assert (=> d!15215 m!65963))

(assert (=> d!15215 m!64899))

(assert (=> d!15215 m!64901))

(declare-fun m!65965 () Bool)

(assert (=> d!15215 m!65965))

(assert (=> d!15215 m!64899))

(assert (=> d!15215 m!64907))

(assert (=> b!69147 d!15215))

(declare-fun d!15217 () Bool)

(assert (=> d!15217 (= (apply!73 (+!89 lt!30289 (tuple2!2119 lt!30304 (minValue!2074 newMap!16))) lt!30297) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30289 (tuple2!2119 lt!30304 (minValue!2074 newMap!16)))) lt!30297)))))

(declare-fun bs!2983 () Bool)

(assert (= bs!2983 d!15217))

(declare-fun m!65967 () Bool)

(assert (=> bs!2983 m!65967))

(assert (=> bs!2983 m!65967))

(declare-fun m!65969 () Bool)

(assert (=> bs!2983 m!65969))

(assert (=> b!69147 d!15217))

(declare-fun d!15219 () Bool)

(declare-fun e!45581 () Bool)

(assert (=> d!15219 e!45581))

(declare-fun res!37315 () Bool)

(assert (=> d!15219 (=> (not res!37315) (not e!45581))))

(declare-fun lt!30625 () ListLongMap!1421)

(assert (=> d!15219 (= res!37315 (contains!720 lt!30625 (_1!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16)))))))

(declare-fun lt!30626 () List!1494)

(assert (=> d!15219 (= lt!30625 (ListLongMap!1422 lt!30626))))

(declare-fun lt!30623 () Unit!1913)

(declare-fun lt!30624 () Unit!1913)

(assert (=> d!15219 (= lt!30623 lt!30624)))

(assert (=> d!15219 (= (getValueByKey!130 lt!30626 (_1!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16)))))))

(assert (=> d!15219 (= lt!30624 (lemmaContainsTupThenGetReturnValue!49 lt!30626 (_1!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16)))))))

(assert (=> d!15219 (= lt!30626 (insertStrictlySorted!51 (toList!726 lt!30289) (_1!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16)))))))

(assert (=> d!15219 (= (+!89 lt!30289 (tuple2!2119 lt!30304 (minValue!2074 newMap!16))) lt!30625)))

(declare-fun b!69637 () Bool)

(declare-fun res!37314 () Bool)

(assert (=> b!69637 (=> (not res!37314) (not e!45581))))

(assert (=> b!69637 (= res!37314 (= (getValueByKey!130 (toList!726 lt!30625) (_1!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30304 (minValue!2074 newMap!16))))))))

(declare-fun b!69638 () Bool)

(assert (=> b!69638 (= e!45581 (contains!721 (toList!726 lt!30625) (tuple2!2119 lt!30304 (minValue!2074 newMap!16))))))

(assert (= (and d!15219 res!37315) b!69637))

(assert (= (and b!69637 res!37314) b!69638))

(declare-fun m!65971 () Bool)

(assert (=> d!15219 m!65971))

(declare-fun m!65973 () Bool)

(assert (=> d!15219 m!65973))

(declare-fun m!65975 () Bool)

(assert (=> d!15219 m!65975))

(declare-fun m!65977 () Bool)

(assert (=> d!15219 m!65977))

(declare-fun m!65979 () Bool)

(assert (=> b!69637 m!65979))

(declare-fun m!65981 () Bool)

(assert (=> b!69638 m!65981))

(assert (=> b!69147 d!15219))

(declare-fun d!15221 () Bool)

(assert (=> d!15221 (= ($colon$colon!63 e!45314 (ite c!9877 (h!2075 (toList!726 (+!89 lt!29768 lt!29777))) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775)))) (Cons!1490 (ite c!9877 (h!2075 (toList!726 (+!89 lt!29768 lt!29777))) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))) e!45314))))

(assert (=> bm!5918 d!15221))

(assert (=> d!14889 d!14887))

(declare-fun d!15223 () Bool)

(assert (=> d!15223 (= (getValueByKey!130 lt!29859 (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775)))))

(assert (=> d!15223 true))

(declare-fun _$22!373 () Unit!1913)

(assert (=> d!15223 (= (choose!390 lt!29859 (_1!1069 lt!29775) (_2!1069 lt!29775)) _$22!373)))

(declare-fun bs!2984 () Bool)

(assert (= bs!2984 d!15223))

(assert (=> bs!2984 m!64221))

(assert (=> d!14889 d!15223))

(declare-fun d!15225 () Bool)

(declare-fun res!37320 () Bool)

(declare-fun e!45586 () Bool)

(assert (=> d!15225 (=> res!37320 e!45586)))

(assert (=> d!15225 (= res!37320 (or ((_ is Nil!1491) lt!29859) ((_ is Nil!1491) (t!5001 lt!29859))))))

(assert (=> d!15225 (= (isStrictlySorted!285 lt!29859) e!45586)))

(declare-fun b!69643 () Bool)

(declare-fun e!45587 () Bool)

(assert (=> b!69643 (= e!45586 e!45587)))

(declare-fun res!37321 () Bool)

(assert (=> b!69643 (=> (not res!37321) (not e!45587))))

(assert (=> b!69643 (= res!37321 (bvslt (_1!1069 (h!2075 lt!29859)) (_1!1069 (h!2075 (t!5001 lt!29859)))))))

(declare-fun b!69644 () Bool)

(assert (=> b!69644 (= e!45587 (isStrictlySorted!285 (t!5001 lt!29859)))))

(assert (= (and d!15225 (not res!37320)) b!69643))

(assert (= (and b!69643 res!37321) b!69644))

(declare-fun m!65983 () Bool)

(assert (=> b!69644 m!65983))

(assert (=> d!14889 d!15225))

(declare-fun b!69648 () Bool)

(declare-fun e!45589 () Option!136)

(assert (=> b!69648 (= e!45589 None!134)))

(declare-fun d!15227 () Bool)

(declare-fun c!9999 () Bool)

(assert (=> d!15227 (= c!9999 (and ((_ is Cons!1490) (t!5001 lt!29848)) (= (_1!1069 (h!2075 (t!5001 lt!29848))) (_1!1069 lt!29777))))))

(declare-fun e!45588 () Option!136)

(assert (=> d!15227 (= (getValueByKey!130 (t!5001 lt!29848) (_1!1069 lt!29777)) e!45588)))

(declare-fun b!69645 () Bool)

(assert (=> b!69645 (= e!45588 (Some!135 (_2!1069 (h!2075 (t!5001 lt!29848)))))))

(declare-fun b!69647 () Bool)

(assert (=> b!69647 (= e!45589 (getValueByKey!130 (t!5001 (t!5001 lt!29848)) (_1!1069 lt!29777)))))

(declare-fun b!69646 () Bool)

(assert (=> b!69646 (= e!45588 e!45589)))

(declare-fun c!10000 () Bool)

(assert (=> b!69646 (= c!10000 (and ((_ is Cons!1490) (t!5001 lt!29848)) (not (= (_1!1069 (h!2075 (t!5001 lt!29848))) (_1!1069 lt!29777)))))))

(assert (= (and d!15227 c!9999) b!69645))

(assert (= (and d!15227 (not c!9999)) b!69646))

(assert (= (and b!69646 c!10000) b!69647))

(assert (= (and b!69646 (not c!10000)) b!69648))

(declare-fun m!65985 () Bool)

(assert (=> b!69647 m!65985))

(assert (=> b!69099 d!15227))

(declare-fun d!15229 () Bool)

(declare-fun lt!30627 () Bool)

(assert (=> d!15229 (= lt!30627 (select (content!72 (toList!726 lt!30346)) (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun e!45590 () Bool)

(assert (=> d!15229 (= lt!30627 e!45590)))

(declare-fun res!37323 () Bool)

(assert (=> d!15229 (=> (not res!37323) (not e!45590))))

(assert (=> d!15229 (= res!37323 ((_ is Cons!1490) (toList!726 lt!30346)))))

(assert (=> d!15229 (= (contains!721 (toList!726 lt!30346) (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30627)))

(declare-fun b!69649 () Bool)

(declare-fun e!45591 () Bool)

(assert (=> b!69649 (= e!45590 e!45591)))

(declare-fun res!37322 () Bool)

(assert (=> b!69649 (=> res!37322 e!45591)))

(assert (=> b!69649 (= res!37322 (= (h!2075 (toList!726 lt!30346)) (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!69650 () Bool)

(assert (=> b!69650 (= e!45591 (contains!721 (t!5001 (toList!726 lt!30346)) (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15229 res!37323) b!69649))

(assert (= (and b!69649 (not res!37322)) b!69650))

(declare-fun m!65987 () Bool)

(assert (=> d!15229 m!65987))

(declare-fun m!65989 () Bool)

(assert (=> d!15229 m!65989))

(declare-fun m!65991 () Bool)

(assert (=> b!69650 m!65991))

(assert (=> b!69222 d!15229))

(declare-fun d!15231 () Bool)

(declare-fun e!45592 () Bool)

(assert (=> d!15231 e!45592))

(declare-fun res!37324 () Bool)

(assert (=> d!15231 (=> res!37324 e!45592)))

(declare-fun lt!30630 () Bool)

(assert (=> d!15231 (= res!37324 (not lt!30630))))

(declare-fun lt!30631 () Bool)

(assert (=> d!15231 (= lt!30630 lt!30631)))

(declare-fun lt!30629 () Unit!1913)

(declare-fun e!45593 () Unit!1913)

(assert (=> d!15231 (= lt!30629 e!45593)))

(declare-fun c!10001 () Bool)

(assert (=> d!15231 (= c!10001 lt!30631)))

(assert (=> d!15231 (= lt!30631 (containsKey!134 (toList!726 lt!30334) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> d!15231 (= (contains!720 lt!30334 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) lt!30630)))

(declare-fun b!69651 () Bool)

(declare-fun lt!30628 () Unit!1913)

(assert (=> b!69651 (= e!45593 lt!30628)))

(assert (=> b!69651 (= lt!30628 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30334) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> b!69651 (isDefined!84 (getValueByKey!130 (toList!726 lt!30334) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69652 () Bool)

(declare-fun Unit!1962 () Unit!1913)

(assert (=> b!69652 (= e!45593 Unit!1962)))

(declare-fun b!69653 () Bool)

(assert (=> b!69653 (= e!45592 (isDefined!84 (getValueByKey!130 (toList!726 lt!30334) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15231 c!10001) b!69651))

(assert (= (and d!15231 (not c!10001)) b!69652))

(assert (= (and d!15231 (not res!37324)) b!69653))

(declare-fun m!65993 () Bool)

(assert (=> d!15231 m!65993))

(declare-fun m!65995 () Bool)

(assert (=> b!69651 m!65995))

(assert (=> b!69651 m!65029))

(assert (=> b!69651 m!65029))

(declare-fun m!65997 () Bool)

(assert (=> b!69651 m!65997))

(assert (=> b!69653 m!65029))

(assert (=> b!69653 m!65029))

(assert (=> b!69653 m!65997))

(assert (=> d!14901 d!15231))

(declare-fun b!69657 () Bool)

(declare-fun e!45595 () Option!136)

(assert (=> b!69657 (= e!45595 None!134)))

(declare-fun d!15233 () Bool)

(declare-fun c!10002 () Bool)

(assert (=> d!15233 (= c!10002 (and ((_ is Cons!1490) lt!30335) (= (_1!1069 (h!2075 lt!30335)) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun e!45594 () Option!136)

(assert (=> d!15233 (= (getValueByKey!130 lt!30335 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) e!45594)))

(declare-fun b!69654 () Bool)

(assert (=> b!69654 (= e!45594 (Some!135 (_2!1069 (h!2075 lt!30335))))))

(declare-fun b!69656 () Bool)

(assert (=> b!69656 (= e!45595 (getValueByKey!130 (t!5001 lt!30335) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69655 () Bool)

(assert (=> b!69655 (= e!45594 e!45595)))

(declare-fun c!10003 () Bool)

(assert (=> b!69655 (= c!10003 (and ((_ is Cons!1490) lt!30335) (not (= (_1!1069 (h!2075 lt!30335)) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))))

(assert (= (and d!15233 c!10002) b!69654))

(assert (= (and d!15233 (not c!10002)) b!69655))

(assert (= (and b!69655 c!10003) b!69656))

(assert (= (and b!69655 (not c!10003)) b!69657))

(declare-fun m!65999 () Bool)

(assert (=> b!69656 m!65999))

(assert (=> d!14901 d!15233))

(declare-fun d!15235 () Bool)

(assert (=> d!15235 (= (getValueByKey!130 lt!30335 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (Some!135 (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun lt!30632 () Unit!1913)

(assert (=> d!15235 (= lt!30632 (choose!390 lt!30335 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun e!45596 () Bool)

(assert (=> d!15235 e!45596))

(declare-fun res!37325 () Bool)

(assert (=> d!15235 (=> (not res!37325) (not e!45596))))

(assert (=> d!15235 (= res!37325 (isStrictlySorted!285 lt!30335))))

(assert (=> d!15235 (= (lemmaContainsTupThenGetReturnValue!49 lt!30335 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) lt!30632)))

(declare-fun b!69658 () Bool)

(declare-fun res!37326 () Bool)

(assert (=> b!69658 (=> (not res!37326) (not e!45596))))

(assert (=> b!69658 (= res!37326 (containsKey!134 lt!30335 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69659 () Bool)

(assert (=> b!69659 (= e!45596 (contains!721 lt!30335 (tuple2!2119 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15235 res!37325) b!69658))

(assert (= (and b!69658 res!37326) b!69659))

(assert (=> d!15235 m!65023))

(declare-fun m!66001 () Bool)

(assert (=> d!15235 m!66001))

(declare-fun m!66003 () Bool)

(assert (=> d!15235 m!66003))

(declare-fun m!66005 () Bool)

(assert (=> b!69658 m!66005))

(declare-fun m!66007 () Bool)

(assert (=> b!69659 m!66007))

(assert (=> d!14901 d!15235))

(declare-fun bm!5959 () Bool)

(declare-fun call!5962 () List!1494)

(declare-fun call!5964 () List!1494)

(assert (=> bm!5959 (= call!5962 call!5964)))

(declare-fun b!69660 () Bool)

(declare-fun e!45600 () List!1494)

(declare-fun call!5963 () List!1494)

(assert (=> b!69660 (= e!45600 call!5963)))

(declare-fun e!45599 () List!1494)

(declare-fun b!69661 () Bool)

(assert (=> b!69661 (= e!45599 (insertStrictlySorted!51 (t!5001 (toList!726 (ite c!9749 call!5857 call!5859))) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69663 () Bool)

(declare-fun res!37328 () Bool)

(declare-fun e!45598 () Bool)

(assert (=> b!69663 (=> (not res!37328) (not e!45598))))

(declare-fun lt!30633 () List!1494)

(assert (=> b!69663 (= res!37328 (containsKey!134 lt!30633 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69664 () Bool)

(declare-fun e!45597 () List!1494)

(declare-fun e!45601 () List!1494)

(assert (=> b!69664 (= e!45597 e!45601)))

(declare-fun c!10004 () Bool)

(assert (=> b!69664 (= c!10004 (and ((_ is Cons!1490) (toList!726 (ite c!9749 call!5857 call!5859))) (= (_1!1069 (h!2075 (toList!726 (ite c!9749 call!5857 call!5859)))) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun b!69665 () Bool)

(declare-fun c!10005 () Bool)

(assert (=> b!69665 (= e!45599 (ite c!10004 (t!5001 (toList!726 (ite c!9749 call!5857 call!5859))) (ite c!10005 (Cons!1490 (h!2075 (toList!726 (ite c!9749 call!5857 call!5859))) (t!5001 (toList!726 (ite c!9749 call!5857 call!5859)))) Nil!1491)))))

(declare-fun b!69666 () Bool)

(assert (=> b!69666 (= e!45600 call!5963)))

(declare-fun b!69667 () Bool)

(assert (=> b!69667 (= e!45601 call!5962)))

(declare-fun b!69668 () Bool)

(assert (=> b!69668 (= e!45597 call!5964)))

(declare-fun bm!5960 () Bool)

(declare-fun c!10006 () Bool)

(assert (=> bm!5960 (= call!5964 ($colon$colon!63 e!45599 (ite c!10006 (h!2075 (toList!726 (ite c!9749 call!5857 call!5859))) (tuple2!2119 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))))

(declare-fun c!10007 () Bool)

(assert (=> bm!5960 (= c!10007 c!10006)))

(declare-fun b!69669 () Bool)

(assert (=> b!69669 (= e!45598 (contains!721 lt!30633 (tuple2!2119 (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun bm!5961 () Bool)

(assert (=> bm!5961 (= call!5963 call!5962)))

(declare-fun b!69662 () Bool)

(assert (=> b!69662 (= c!10005 (and ((_ is Cons!1490) (toList!726 (ite c!9749 call!5857 call!5859))) (bvsgt (_1!1069 (h!2075 (toList!726 (ite c!9749 call!5857 call!5859)))) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (=> b!69662 (= e!45601 e!45600)))

(declare-fun d!15237 () Bool)

(assert (=> d!15237 e!45598))

(declare-fun res!37327 () Bool)

(assert (=> d!15237 (=> (not res!37327) (not e!45598))))

(assert (=> d!15237 (= res!37327 (isStrictlySorted!285 lt!30633))))

(assert (=> d!15237 (= lt!30633 e!45597)))

(assert (=> d!15237 (= c!10006 (and ((_ is Cons!1490) (toList!726 (ite c!9749 call!5857 call!5859))) (bvslt (_1!1069 (h!2075 (toList!726 (ite c!9749 call!5857 call!5859)))) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (=> d!15237 (isStrictlySorted!285 (toList!726 (ite c!9749 call!5857 call!5859)))))

(assert (=> d!15237 (= (insertStrictlySorted!51 (toList!726 (ite c!9749 call!5857 call!5859)) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_2!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) lt!30633)))

(assert (= (and d!15237 c!10006) b!69668))

(assert (= (and d!15237 (not c!10006)) b!69664))

(assert (= (and b!69664 c!10004) b!69667))

(assert (= (and b!69664 (not c!10004)) b!69662))

(assert (= (and b!69662 c!10005) b!69666))

(assert (= (and b!69662 (not c!10005)) b!69660))

(assert (= (or b!69666 b!69660) bm!5961))

(assert (= (or b!69667 bm!5961) bm!5959))

(assert (= (or b!69668 bm!5959) bm!5960))

(assert (= (and bm!5960 c!10007) b!69661))

(assert (= (and bm!5960 (not c!10007)) b!69665))

(assert (= (and d!15237 res!37327) b!69663))

(assert (= (and b!69663 res!37328) b!69669))

(declare-fun m!66009 () Bool)

(assert (=> b!69661 m!66009))

(declare-fun m!66011 () Bool)

(assert (=> d!15237 m!66011))

(declare-fun m!66013 () Bool)

(assert (=> d!15237 m!66013))

(declare-fun m!66015 () Bool)

(assert (=> b!69663 m!66015))

(declare-fun m!66017 () Bool)

(assert (=> bm!5960 m!66017))

(declare-fun m!66019 () Bool)

(assert (=> b!69669 m!66019))

(assert (=> d!14901 d!15237))

(declare-fun d!15239 () Bool)

(assert (=> d!15239 (= (apply!73 lt!30393 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1137 (getValueByKey!130 (toList!726 lt!30393) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2985 () Bool)

(assert (= bs!2985 d!15239))

(assert (=> bs!2985 m!64555))

(assert (=> bs!2985 m!65855))

(assert (=> bs!2985 m!65855))

(declare-fun m!66021 () Bool)

(assert (=> bs!2985 m!66021))

(assert (=> b!69248 d!15239))

(declare-fun c!10008 () Bool)

(declare-fun d!15241 () Bool)

(assert (=> d!15241 (= c!10008 ((_ is ValueCellFull!885) (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!45602 () V!2923)

(assert (=> d!15241 (= (get!1133 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45602)))

(declare-fun b!69670 () Bool)

(assert (=> b!69670 (= e!45602 (get!1135 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69671 () Bool)

(assert (=> b!69671 (= e!45602 (get!1136 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15241 c!10008) b!69670))

(assert (= (and d!15241 (not c!10008)) b!69671))

(assert (=> b!69670 m!65165))

(assert (=> b!69670 m!64699))

(declare-fun m!66023 () Bool)

(assert (=> b!69670 m!66023))

(assert (=> b!69671 m!65165))

(assert (=> b!69671 m!64699))

(declare-fun m!66025 () Bool)

(assert (=> b!69671 m!66025))

(assert (=> b!69248 d!15241))

(declare-fun d!15243 () Bool)

(assert (=> d!15243 (= (apply!73 lt!30254 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1137 (getValueByKey!130 (toList!726 lt!30254) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2986 () Bool)

(assert (= bs!2986 d!15243))

(assert (=> bs!2986 m!64555))

(assert (=> bs!2986 m!65843))

(assert (=> bs!2986 m!65843))

(declare-fun m!66027 () Bool)

(assert (=> bs!2986 m!66027))

(assert (=> b!69067 d!15243))

(declare-fun d!15245 () Bool)

(declare-fun c!10009 () Bool)

(assert (=> d!15245 (= c!10009 ((_ is ValueCellFull!885) (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45603 () V!2923)

(assert (=> d!15245 (= (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45603)))

(declare-fun b!69672 () Bool)

(assert (=> b!69672 (= e!45603 (get!1135 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69673 () Bool)

(assert (=> b!69673 (= e!45603 (get!1136 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15245 c!10009) b!69672))

(assert (= (and d!15245 (not c!10009)) b!69673))

(assert (=> b!69672 m!64755))

(assert (=> b!69672 m!64699))

(declare-fun m!66029 () Bool)

(assert (=> b!69672 m!66029))

(assert (=> b!69673 m!64755))

(assert (=> b!69673 m!64699))

(declare-fun m!66031 () Bool)

(assert (=> b!69673 m!66031))

(assert (=> b!69067 d!15245))

(declare-fun d!15247 () Bool)

(declare-fun res!37329 () Bool)

(declare-fun e!45604 () Bool)

(assert (=> d!15247 (=> res!37329 e!45604)))

(assert (=> d!15247 (= res!37329 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29772))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29772)))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (=> d!15247 (= (containsKey!134 (t!5001 (toList!726 lt!29772)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45604)))

(declare-fun b!69674 () Bool)

(declare-fun e!45605 () Bool)

(assert (=> b!69674 (= e!45604 e!45605)))

(declare-fun res!37330 () Bool)

(assert (=> b!69674 (=> (not res!37330) (not e!45605))))

(assert (=> b!69674 (= res!37330 (and (or (not ((_ is Cons!1490) (t!5001 (toList!726 lt!29772)))) (bvsle (_1!1069 (h!2075 (t!5001 (toList!726 lt!29772)))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) ((_ is Cons!1490) (t!5001 (toList!726 lt!29772))) (bvslt (_1!1069 (h!2075 (t!5001 (toList!726 lt!29772)))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun b!69675 () Bool)

(assert (=> b!69675 (= e!45605 (containsKey!134 (t!5001 (t!5001 (toList!726 lt!29772))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!15247 (not res!37329)) b!69674))

(assert (= (and b!69674 res!37330) b!69675))

(assert (=> b!69675 m!64043))

(declare-fun m!66033 () Bool)

(assert (=> b!69675 m!66033))

(assert (=> b!68996 d!15247))

(declare-fun d!15249 () Bool)

(declare-fun lt!30634 () Bool)

(assert (=> d!15249 (= lt!30634 (select (content!72 (toList!726 lt!30034)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun e!45606 () Bool)

(assert (=> d!15249 (= lt!30634 e!45606)))

(declare-fun res!37332 () Bool)

(assert (=> d!15249 (=> (not res!37332) (not e!45606))))

(assert (=> d!15249 (= res!37332 ((_ is Cons!1490) (toList!726 lt!30034)))))

(assert (=> d!15249 (= (contains!721 (toList!726 lt!30034) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30634)))

(declare-fun b!69676 () Bool)

(declare-fun e!45607 () Bool)

(assert (=> b!69676 (= e!45606 e!45607)))

(declare-fun res!37331 () Bool)

(assert (=> b!69676 (=> res!37331 e!45607)))

(assert (=> b!69676 (= res!37331 (= (h!2075 (toList!726 lt!30034)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!69677 () Bool)

(assert (=> b!69677 (= e!45607 (contains!721 (t!5001 (toList!726 lt!30034)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15249 res!37332) b!69676))

(assert (= (and b!69676 (not res!37331)) b!69677))

(declare-fun m!66035 () Bool)

(assert (=> d!15249 m!66035))

(declare-fun m!66037 () Bool)

(assert (=> d!15249 m!66037))

(declare-fun m!66039 () Bool)

(assert (=> b!69677 m!66039))

(assert (=> b!68801 d!15249))

(declare-fun d!15251 () Bool)

(declare-fun lt!30635 () Bool)

(assert (=> d!15251 (= lt!30635 (select (content!72 (t!5001 (toList!726 lt!29858))) lt!29775))))

(declare-fun e!45608 () Bool)

(assert (=> d!15251 (= lt!30635 e!45608)))

(declare-fun res!37334 () Bool)

(assert (=> d!15251 (=> (not res!37334) (not e!45608))))

(assert (=> d!15251 (= res!37334 ((_ is Cons!1490) (t!5001 (toList!726 lt!29858))))))

(assert (=> d!15251 (= (contains!721 (t!5001 (toList!726 lt!29858)) lt!29775) lt!30635)))

(declare-fun b!69678 () Bool)

(declare-fun e!45609 () Bool)

(assert (=> b!69678 (= e!45608 e!45609)))

(declare-fun res!37333 () Bool)

(assert (=> b!69678 (=> res!37333 e!45609)))

(assert (=> b!69678 (= res!37333 (= (h!2075 (t!5001 (toList!726 lt!29858))) lt!29775))))

(declare-fun b!69679 () Bool)

(assert (=> b!69679 (= e!45609 (contains!721 (t!5001 (t!5001 (toList!726 lt!29858))) lt!29775))))

(assert (= (and d!15251 res!37334) b!69678))

(assert (= (and b!69678 (not res!37333)) b!69679))

(assert (=> d!15251 m!65837))

(declare-fun m!66041 () Bool)

(assert (=> d!15251 m!66041))

(declare-fun m!66043 () Bool)

(assert (=> b!69679 m!66043))

(assert (=> b!69037 d!15251))

(declare-fun d!15253 () Bool)

(declare-fun e!45610 () Bool)

(assert (=> d!15253 e!45610))

(declare-fun res!37335 () Bool)

(assert (=> d!15253 (=> res!37335 e!45610)))

(declare-fun lt!30638 () Bool)

(assert (=> d!15253 (= res!37335 (not lt!30638))))

(declare-fun lt!30639 () Bool)

(assert (=> d!15253 (= lt!30638 lt!30639)))

(declare-fun lt!30637 () Unit!1913)

(declare-fun e!45611 () Unit!1913)

(assert (=> d!15253 (= lt!30637 e!45611)))

(declare-fun c!10010 () Bool)

(assert (=> d!15253 (= c!10010 lt!30639)))

(assert (=> d!15253 (= lt!30639 (containsKey!134 (toList!726 lt!30358) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15253 (= (contains!720 lt!30358 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30638)))

(declare-fun b!69680 () Bool)

(declare-fun lt!30636 () Unit!1913)

(assert (=> b!69680 (= e!45611 lt!30636)))

(assert (=> b!69680 (= lt!30636 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30358) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> b!69680 (isDefined!84 (getValueByKey!130 (toList!726 lt!30358) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69681 () Bool)

(declare-fun Unit!1963 () Unit!1913)

(assert (=> b!69681 (= e!45611 Unit!1963)))

(declare-fun b!69682 () Bool)

(assert (=> b!69682 (= e!45610 (isDefined!84 (getValueByKey!130 (toList!726 lt!30358) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15253 c!10010) b!69680))

(assert (= (and d!15253 (not c!10010)) b!69681))

(assert (= (and d!15253 (not res!37335)) b!69682))

(declare-fun m!66045 () Bool)

(assert (=> d!15253 m!66045))

(declare-fun m!66047 () Bool)

(assert (=> b!69680 m!66047))

(assert (=> b!69680 m!65111))

(assert (=> b!69680 m!65111))

(declare-fun m!66049 () Bool)

(assert (=> b!69680 m!66049))

(assert (=> b!69682 m!65111))

(assert (=> b!69682 m!65111))

(assert (=> b!69682 m!66049))

(assert (=> d!14929 d!15253))

(declare-fun b!69686 () Bool)

(declare-fun e!45613 () Option!136)

(assert (=> b!69686 (= e!45613 None!134)))

(declare-fun c!10011 () Bool)

(declare-fun d!15255 () Bool)

(assert (=> d!15255 (= c!10011 (and ((_ is Cons!1490) lt!30359) (= (_1!1069 (h!2075 lt!30359)) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45612 () Option!136)

(assert (=> d!15255 (= (getValueByKey!130 lt!30359 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45612)))

(declare-fun b!69683 () Bool)

(assert (=> b!69683 (= e!45612 (Some!135 (_2!1069 (h!2075 lt!30359))))))

(declare-fun b!69685 () Bool)

(assert (=> b!69685 (= e!45613 (getValueByKey!130 (t!5001 lt!30359) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69684 () Bool)

(assert (=> b!69684 (= e!45612 e!45613)))

(declare-fun c!10012 () Bool)

(assert (=> b!69684 (= c!10012 (and ((_ is Cons!1490) lt!30359) (not (= (_1!1069 (h!2075 lt!30359)) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15255 c!10011) b!69683))

(assert (= (and d!15255 (not c!10011)) b!69684))

(assert (= (and b!69684 c!10012) b!69685))

(assert (= (and b!69684 (not c!10012)) b!69686))

(declare-fun m!66051 () Bool)

(assert (=> b!69685 m!66051))

(assert (=> d!14929 d!15255))

(declare-fun d!15257 () Bool)

(assert (=> d!15257 (= (getValueByKey!130 lt!30359 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30640 () Unit!1913)

(assert (=> d!15257 (= lt!30640 (choose!390 lt!30359 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!45614 () Bool)

(assert (=> d!15257 e!45614))

(declare-fun res!37336 () Bool)

(assert (=> d!15257 (=> (not res!37336) (not e!45614))))

(assert (=> d!15257 (= res!37336 (isStrictlySorted!285 lt!30359))))

(assert (=> d!15257 (= (lemmaContainsTupThenGetReturnValue!49 lt!30359 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30640)))

(declare-fun b!69687 () Bool)

(declare-fun res!37337 () Bool)

(assert (=> b!69687 (=> (not res!37337) (not e!45614))))

(assert (=> b!69687 (= res!37337 (containsKey!134 lt!30359 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69688 () Bool)

(assert (=> b!69688 (= e!45614 (contains!721 lt!30359 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15257 res!37336) b!69687))

(assert (= (and b!69687 res!37337) b!69688))

(assert (=> d!15257 m!65105))

(declare-fun m!66053 () Bool)

(assert (=> d!15257 m!66053))

(declare-fun m!66055 () Bool)

(assert (=> d!15257 m!66055))

(declare-fun m!66057 () Bool)

(assert (=> b!69687 m!66057))

(declare-fun m!66059 () Bool)

(assert (=> b!69688 m!66059))

(assert (=> d!14929 d!15257))

(declare-fun bm!5962 () Bool)

(declare-fun call!5965 () List!1494)

(declare-fun call!5967 () List!1494)

(assert (=> bm!5962 (= call!5965 call!5967)))

(declare-fun b!69689 () Bool)

(declare-fun e!45618 () List!1494)

(declare-fun call!5966 () List!1494)

(assert (=> b!69689 (= e!45618 call!5966)))

(declare-fun b!69690 () Bool)

(declare-fun e!45617 () List!1494)

(assert (=> b!69690 (= e!45617 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29912)) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69692 () Bool)

(declare-fun res!37339 () Bool)

(declare-fun e!45616 () Bool)

(assert (=> b!69692 (=> (not res!37339) (not e!45616))))

(declare-fun lt!30641 () List!1494)

(assert (=> b!69692 (= res!37339 (containsKey!134 lt!30641 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69693 () Bool)

(declare-fun e!45615 () List!1494)

(declare-fun e!45619 () List!1494)

(assert (=> b!69693 (= e!45615 e!45619)))

(declare-fun c!10013 () Bool)

(assert (=> b!69693 (= c!10013 (and ((_ is Cons!1490) (toList!726 lt!29912)) (= (_1!1069 (h!2075 (toList!726 lt!29912))) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun c!10014 () Bool)

(declare-fun b!69694 () Bool)

(assert (=> b!69694 (= e!45617 (ite c!10013 (t!5001 (toList!726 lt!29912)) (ite c!10014 (Cons!1490 (h!2075 (toList!726 lt!29912)) (t!5001 (toList!726 lt!29912))) Nil!1491)))))

(declare-fun b!69695 () Bool)

(assert (=> b!69695 (= e!45618 call!5966)))

(declare-fun b!69696 () Bool)

(assert (=> b!69696 (= e!45619 call!5965)))

(declare-fun b!69697 () Bool)

(assert (=> b!69697 (= e!45615 call!5967)))

(declare-fun bm!5963 () Bool)

(declare-fun c!10015 () Bool)

(assert (=> bm!5963 (= call!5967 ($colon$colon!63 e!45617 (ite c!10015 (h!2075 (toList!726 lt!29912)) (tuple2!2119 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!10016 () Bool)

(assert (=> bm!5963 (= c!10016 c!10015)))

(declare-fun b!69698 () Bool)

(assert (=> b!69698 (= e!45616 (contains!721 lt!30641 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun bm!5964 () Bool)

(assert (=> bm!5964 (= call!5966 call!5965)))

(declare-fun b!69691 () Bool)

(assert (=> b!69691 (= c!10014 (and ((_ is Cons!1490) (toList!726 lt!29912)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29912))) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!69691 (= e!45619 e!45618)))

(declare-fun d!15259 () Bool)

(assert (=> d!15259 e!45616))

(declare-fun res!37338 () Bool)

(assert (=> d!15259 (=> (not res!37338) (not e!45616))))

(assert (=> d!15259 (= res!37338 (isStrictlySorted!285 lt!30641))))

(assert (=> d!15259 (= lt!30641 e!45615)))

(assert (=> d!15259 (= c!10015 (and ((_ is Cons!1490) (toList!726 lt!29912)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29912))) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15259 (isStrictlySorted!285 (toList!726 lt!29912))))

(assert (=> d!15259 (= (insertStrictlySorted!51 (toList!726 lt!29912) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30641)))

(assert (= (and d!15259 c!10015) b!69697))

(assert (= (and d!15259 (not c!10015)) b!69693))

(assert (= (and b!69693 c!10013) b!69696))

(assert (= (and b!69693 (not c!10013)) b!69691))

(assert (= (and b!69691 c!10014) b!69695))

(assert (= (and b!69691 (not c!10014)) b!69689))

(assert (= (or b!69695 b!69689) bm!5964))

(assert (= (or b!69696 bm!5964) bm!5962))

(assert (= (or b!69697 bm!5962) bm!5963))

(assert (= (and bm!5963 c!10016) b!69690))

(assert (= (and bm!5963 (not c!10016)) b!69694))

(assert (= (and d!15259 res!37338) b!69692))

(assert (= (and b!69692 res!37339) b!69698))

(declare-fun m!66061 () Bool)

(assert (=> b!69690 m!66061))

(declare-fun m!66063 () Bool)

(assert (=> d!15259 m!66063))

(declare-fun m!66065 () Bool)

(assert (=> d!15259 m!66065))

(declare-fun m!66067 () Bool)

(assert (=> b!69692 m!66067))

(declare-fun m!66069 () Bool)

(assert (=> bm!5963 m!66069))

(declare-fun m!66071 () Bool)

(assert (=> b!69698 m!66071))

(assert (=> d!14929 d!15259))

(declare-fun lt!30642 () Bool)

(declare-fun d!15261 () Bool)

(assert (=> d!15261 (= lt!30642 (select (content!72 (toList!726 lt!30330)) (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!45620 () Bool)

(assert (=> d!15261 (= lt!30642 e!45620)))

(declare-fun res!37341 () Bool)

(assert (=> d!15261 (=> (not res!37341) (not e!45620))))

(assert (=> d!15261 (= res!37341 ((_ is Cons!1490) (toList!726 lt!30330)))))

(assert (=> d!15261 (= (contains!721 (toList!726 lt!30330) (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30642)))

(declare-fun b!69699 () Bool)

(declare-fun e!45621 () Bool)

(assert (=> b!69699 (= e!45620 e!45621)))

(declare-fun res!37340 () Bool)

(assert (=> b!69699 (=> res!37340 e!45621)))

(assert (=> b!69699 (= res!37340 (= (h!2075 (toList!726 lt!30330)) (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69700 () Bool)

(assert (=> b!69700 (= e!45621 (contains!721 (t!5001 (toList!726 lt!30330)) (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (= (and d!15261 res!37341) b!69699))

(assert (= (and b!69699 (not res!37340)) b!69700))

(declare-fun m!66073 () Bool)

(assert (=> d!15261 m!66073))

(declare-fun m!66075 () Bool)

(assert (=> d!15261 m!66075))

(declare-fun m!66077 () Bool)

(assert (=> b!69700 m!66077))

(assert (=> b!69198 d!15261))

(declare-fun d!15263 () Bool)

(assert (=> d!15263 (= (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68919 d!15263))

(declare-fun d!15265 () Bool)

(declare-fun e!45622 () Bool)

(assert (=> d!15265 e!45622))

(declare-fun res!37342 () Bool)

(assert (=> d!15265 (=> res!37342 e!45622)))

(declare-fun lt!30645 () Bool)

(assert (=> d!15265 (= res!37342 (not lt!30645))))

(declare-fun lt!30646 () Bool)

(assert (=> d!15265 (= lt!30645 lt!30646)))

(declare-fun lt!30644 () Unit!1913)

(declare-fun e!45623 () Unit!1913)

(assert (=> d!15265 (= lt!30644 e!45623)))

(declare-fun c!10017 () Bool)

(assert (=> d!15265 (= c!10017 lt!30646)))

(assert (=> d!15265 (= lt!30646 (containsKey!134 (toList!726 lt!30194) (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(assert (=> d!15265 (= (contains!720 lt!30194 (_1!1069 (tuple2!2119 lt!29835 lt!29830))) lt!30645)))

(declare-fun b!69701 () Bool)

(declare-fun lt!30643 () Unit!1913)

(assert (=> b!69701 (= e!45623 lt!30643)))

(assert (=> b!69701 (= lt!30643 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30194) (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(assert (=> b!69701 (isDefined!84 (getValueByKey!130 (toList!726 lt!30194) (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun b!69702 () Bool)

(declare-fun Unit!1964 () Unit!1913)

(assert (=> b!69702 (= e!45623 Unit!1964)))

(declare-fun b!69703 () Bool)

(assert (=> b!69703 (= e!45622 (isDefined!84 (getValueByKey!130 (toList!726 lt!30194) (_1!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(assert (= (and d!15265 c!10017) b!69701))

(assert (= (and d!15265 (not c!10017)) b!69702))

(assert (= (and d!15265 (not res!37342)) b!69703))

(declare-fun m!66079 () Bool)

(assert (=> d!15265 m!66079))

(declare-fun m!66081 () Bool)

(assert (=> b!69701 m!66081))

(assert (=> b!69701 m!64635))

(assert (=> b!69701 m!64635))

(declare-fun m!66083 () Bool)

(assert (=> b!69701 m!66083))

(assert (=> b!69703 m!64635))

(assert (=> b!69703 m!64635))

(assert (=> b!69703 m!66083))

(assert (=> d!14817 d!15265))

(declare-fun b!69707 () Bool)

(declare-fun e!45625 () Option!136)

(assert (=> b!69707 (= e!45625 None!134)))

(declare-fun c!10018 () Bool)

(declare-fun d!15267 () Bool)

(assert (=> d!15267 (= c!10018 (and ((_ is Cons!1490) lt!30195) (= (_1!1069 (h!2075 lt!30195)) (_1!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(declare-fun e!45624 () Option!136)

(assert (=> d!15267 (= (getValueByKey!130 lt!30195 (_1!1069 (tuple2!2119 lt!29835 lt!29830))) e!45624)))

(declare-fun b!69704 () Bool)

(assert (=> b!69704 (= e!45624 (Some!135 (_2!1069 (h!2075 lt!30195))))))

(declare-fun b!69706 () Bool)

(assert (=> b!69706 (= e!45625 (getValueByKey!130 (t!5001 lt!30195) (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun b!69705 () Bool)

(assert (=> b!69705 (= e!45624 e!45625)))

(declare-fun c!10019 () Bool)

(assert (=> b!69705 (= c!10019 (and ((_ is Cons!1490) lt!30195) (not (= (_1!1069 (h!2075 lt!30195)) (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))))

(assert (= (and d!15267 c!10018) b!69704))

(assert (= (and d!15267 (not c!10018)) b!69705))

(assert (= (and b!69705 c!10019) b!69706))

(assert (= (and b!69705 (not c!10019)) b!69707))

(declare-fun m!66085 () Bool)

(assert (=> b!69706 m!66085))

(assert (=> d!14817 d!15267))

(declare-fun d!15269 () Bool)

(assert (=> d!15269 (= (getValueByKey!130 lt!30195 (_1!1069 (tuple2!2119 lt!29835 lt!29830))) (Some!135 (_2!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun lt!30647 () Unit!1913)

(assert (=> d!15269 (= lt!30647 (choose!390 lt!30195 (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun e!45626 () Bool)

(assert (=> d!15269 e!45626))

(declare-fun res!37343 () Bool)

(assert (=> d!15269 (=> (not res!37343) (not e!45626))))

(assert (=> d!15269 (= res!37343 (isStrictlySorted!285 lt!30195))))

(assert (=> d!15269 (= (lemmaContainsTupThenGetReturnValue!49 lt!30195 (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830))) lt!30647)))

(declare-fun b!69708 () Bool)

(declare-fun res!37344 () Bool)

(assert (=> b!69708 (=> (not res!37344) (not e!45626))))

(assert (=> b!69708 (= res!37344 (containsKey!134 lt!30195 (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun b!69709 () Bool)

(assert (=> b!69709 (= e!45626 (contains!721 lt!30195 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(assert (= (and d!15269 res!37343) b!69708))

(assert (= (and b!69708 res!37344) b!69709))

(assert (=> d!15269 m!64629))

(declare-fun m!66087 () Bool)

(assert (=> d!15269 m!66087))

(declare-fun m!66089 () Bool)

(assert (=> d!15269 m!66089))

(declare-fun m!66091 () Bool)

(assert (=> b!69708 m!66091))

(declare-fun m!66093 () Bool)

(assert (=> b!69709 m!66093))

(assert (=> d!14817 d!15269))

(declare-fun bm!5965 () Bool)

(declare-fun call!5968 () List!1494)

(declare-fun call!5970 () List!1494)

(assert (=> bm!5965 (= call!5968 call!5970)))

(declare-fun b!69710 () Bool)

(declare-fun e!45630 () List!1494)

(declare-fun call!5969 () List!1494)

(assert (=> b!69710 (= e!45630 call!5969)))

(declare-fun e!45629 () List!1494)

(declare-fun b!69711 () Bool)

(assert (=> b!69711 (= e!45629 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29832)) (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun b!69713 () Bool)

(declare-fun res!37346 () Bool)

(declare-fun e!45628 () Bool)

(assert (=> b!69713 (=> (not res!37346) (not e!45628))))

(declare-fun lt!30648 () List!1494)

(assert (=> b!69713 (= res!37346 (containsKey!134 lt!30648 (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun b!69714 () Bool)

(declare-fun e!45627 () List!1494)

(declare-fun e!45631 () List!1494)

(assert (=> b!69714 (= e!45627 e!45631)))

(declare-fun c!10020 () Bool)

(assert (=> b!69714 (= c!10020 (and ((_ is Cons!1490) (toList!726 lt!29832)) (= (_1!1069 (h!2075 (toList!726 lt!29832))) (_1!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(declare-fun b!69715 () Bool)

(declare-fun c!10021 () Bool)

(assert (=> b!69715 (= e!45629 (ite c!10020 (t!5001 (toList!726 lt!29832)) (ite c!10021 (Cons!1490 (h!2075 (toList!726 lt!29832)) (t!5001 (toList!726 lt!29832))) Nil!1491)))))

(declare-fun b!69716 () Bool)

(assert (=> b!69716 (= e!45630 call!5969)))

(declare-fun b!69717 () Bool)

(assert (=> b!69717 (= e!45631 call!5968)))

(declare-fun b!69718 () Bool)

(assert (=> b!69718 (= e!45627 call!5970)))

(declare-fun bm!5966 () Bool)

(declare-fun c!10022 () Bool)

(assert (=> bm!5966 (= call!5970 ($colon$colon!63 e!45629 (ite c!10022 (h!2075 (toList!726 lt!29832)) (tuple2!2119 (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830))))))))

(declare-fun c!10023 () Bool)

(assert (=> bm!5966 (= c!10023 c!10022)))

(declare-fun b!69719 () Bool)

(assert (=> b!69719 (= e!45628 (contains!721 lt!30648 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(declare-fun bm!5967 () Bool)

(assert (=> bm!5967 (= call!5969 call!5968)))

(declare-fun b!69712 () Bool)

(assert (=> b!69712 (= c!10021 (and ((_ is Cons!1490) (toList!726 lt!29832)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29832))) (_1!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(assert (=> b!69712 (= e!45631 e!45630)))

(declare-fun d!15271 () Bool)

(assert (=> d!15271 e!45628))

(declare-fun res!37345 () Bool)

(assert (=> d!15271 (=> (not res!37345) (not e!45628))))

(assert (=> d!15271 (= res!37345 (isStrictlySorted!285 lt!30648))))

(assert (=> d!15271 (= lt!30648 e!45627)))

(assert (=> d!15271 (= c!10022 (and ((_ is Cons!1490) (toList!726 lt!29832)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29832))) (_1!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(assert (=> d!15271 (isStrictlySorted!285 (toList!726 lt!29832))))

(assert (=> d!15271 (= (insertStrictlySorted!51 (toList!726 lt!29832) (_1!1069 (tuple2!2119 lt!29835 lt!29830)) (_2!1069 (tuple2!2119 lt!29835 lt!29830))) lt!30648)))

(assert (= (and d!15271 c!10022) b!69718))

(assert (= (and d!15271 (not c!10022)) b!69714))

(assert (= (and b!69714 c!10020) b!69717))

(assert (= (and b!69714 (not c!10020)) b!69712))

(assert (= (and b!69712 c!10021) b!69716))

(assert (= (and b!69712 (not c!10021)) b!69710))

(assert (= (or b!69716 b!69710) bm!5967))

(assert (= (or b!69717 bm!5967) bm!5965))

(assert (= (or b!69718 bm!5965) bm!5966))

(assert (= (and bm!5966 c!10023) b!69711))

(assert (= (and bm!5966 (not c!10023)) b!69715))

(assert (= (and d!15271 res!37345) b!69713))

(assert (= (and b!69713 res!37346) b!69719))

(declare-fun m!66095 () Bool)

(assert (=> b!69711 m!66095))

(declare-fun m!66097 () Bool)

(assert (=> d!15271 m!66097))

(declare-fun m!66099 () Bool)

(assert (=> d!15271 m!66099))

(declare-fun m!66101 () Bool)

(assert (=> b!69713 m!66101))

(declare-fun m!66103 () Bool)

(assert (=> bm!5966 m!66103))

(declare-fun m!66105 () Bool)

(assert (=> b!69719 m!66105))

(assert (=> d!14817 d!15271))

(declare-fun d!15273 () Bool)

(assert (=> d!15273 (isDefined!84 (getValueByKey!130 (toList!726 lt!29851) (_1!1069 lt!29775)))))

(declare-fun lt!30649 () Unit!1913)

(assert (=> d!15273 (= lt!30649 (choose!395 (toList!726 lt!29851) (_1!1069 lt!29775)))))

(declare-fun e!45632 () Bool)

(assert (=> d!15273 e!45632))

(declare-fun res!37347 () Bool)

(assert (=> d!15273 (=> (not res!37347) (not e!45632))))

(assert (=> d!15273 (= res!37347 (isStrictlySorted!285 (toList!726 lt!29851)))))

(assert (=> d!15273 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29851) (_1!1069 lt!29775)) lt!30649)))

(declare-fun b!69720 () Bool)

(assert (=> b!69720 (= e!45632 (containsKey!134 (toList!726 lt!29851) (_1!1069 lt!29775)))))

(assert (= (and d!15273 res!37347) b!69720))

(assert (=> d!15273 m!64205))

(assert (=> d!15273 m!64205))

(assert (=> d!15273 m!64437))

(declare-fun m!66107 () Bool)

(assert (=> d!15273 m!66107))

(declare-fun m!66109 () Bool)

(assert (=> d!15273 m!66109))

(assert (=> b!69720 m!64433))

(assert (=> b!68808 d!15273))

(assert (=> b!68808 d!15039))

(assert (=> b!68808 d!14799))

(declare-fun d!15275 () Bool)

(assert (=> d!15275 (= (apply!73 lt!30232 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30232) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2987 () Bool)

(assert (= bs!2987 d!15275))

(assert (=> bs!2987 m!65863))

(assert (=> bs!2987 m!65863))

(declare-fun m!66111 () Bool)

(assert (=> bs!2987 m!66111))

(assert (=> b!69057 d!15275))

(assert (=> d!14771 d!14769))

(declare-fun d!15277 () Bool)

(assert (=> d!15277 (= (getValueByKey!130 lt!29852 (_1!1069 lt!29775)) (Some!135 (_2!1069 lt!29775)))))

(assert (=> d!15277 true))

(declare-fun _$22!374 () Unit!1913)

(assert (=> d!15277 (= (choose!390 lt!29852 (_1!1069 lt!29775) (_2!1069 lt!29775)) _$22!374)))

(declare-fun bs!2988 () Bool)

(assert (= bs!2988 d!15277))

(assert (=> bs!2988 m!64199))

(assert (=> d!14771 d!15277))

(declare-fun d!15279 () Bool)

(declare-fun res!37348 () Bool)

(declare-fun e!45633 () Bool)

(assert (=> d!15279 (=> res!37348 e!45633)))

(assert (=> d!15279 (= res!37348 (or ((_ is Nil!1491) lt!29852) ((_ is Nil!1491) (t!5001 lt!29852))))))

(assert (=> d!15279 (= (isStrictlySorted!285 lt!29852) e!45633)))

(declare-fun b!69721 () Bool)

(declare-fun e!45634 () Bool)

(assert (=> b!69721 (= e!45633 e!45634)))

(declare-fun res!37349 () Bool)

(assert (=> b!69721 (=> (not res!37349) (not e!45634))))

(assert (=> b!69721 (= res!37349 (bvslt (_1!1069 (h!2075 lt!29852)) (_1!1069 (h!2075 (t!5001 lt!29852)))))))

(declare-fun b!69722 () Bool)

(assert (=> b!69722 (= e!45634 (isStrictlySorted!285 (t!5001 lt!29852)))))

(assert (= (and d!15279 (not res!37348)) b!69721))

(assert (= (and b!69721 res!37349) b!69722))

(declare-fun m!66113 () Bool)

(assert (=> b!69722 m!66113))

(assert (=> d!14771 d!15279))

(declare-fun b!69726 () Bool)

(declare-fun e!45636 () Option!136)

(assert (=> b!69726 (= e!45636 None!134)))

(declare-fun d!15281 () Bool)

(declare-fun c!10024 () Bool)

(assert (=> d!15281 (= c!10024 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29851))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29851)))) (_1!1069 lt!29775))))))

(declare-fun e!45635 () Option!136)

(assert (=> d!15281 (= (getValueByKey!130 (t!5001 (toList!726 lt!29851)) (_1!1069 lt!29775)) e!45635)))

(declare-fun b!69723 () Bool)

(assert (=> b!69723 (= e!45635 (Some!135 (_2!1069 (h!2075 (t!5001 (toList!726 lt!29851))))))))

(declare-fun b!69725 () Bool)

(assert (=> b!69725 (= e!45636 (getValueByKey!130 (t!5001 (t!5001 (toList!726 lt!29851))) (_1!1069 lt!29775)))))

(declare-fun b!69724 () Bool)

(assert (=> b!69724 (= e!45635 e!45636)))

(declare-fun c!10025 () Bool)

(assert (=> b!69724 (= c!10025 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29851))) (not (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29851)))) (_1!1069 lt!29775)))))))

(assert (= (and d!15281 c!10024) b!69723))

(assert (= (and d!15281 (not c!10024)) b!69724))

(assert (= (and b!69724 c!10025) b!69725))

(assert (= (and b!69724 (not c!10025)) b!69726))

(declare-fun m!66115 () Bool)

(assert (=> b!69725 m!66115))

(assert (=> b!68986 d!15281))

(declare-fun d!15283 () Bool)

(assert (=> d!15283 (isDefined!84 (getValueByKey!130 (toList!726 lt!29847) (_1!1069 lt!29777)))))

(declare-fun lt!30650 () Unit!1913)

(assert (=> d!15283 (= lt!30650 (choose!395 (toList!726 lt!29847) (_1!1069 lt!29777)))))

(declare-fun e!45637 () Bool)

(assert (=> d!15283 e!45637))

(declare-fun res!37350 () Bool)

(assert (=> d!15283 (=> (not res!37350) (not e!45637))))

(assert (=> d!15283 (= res!37350 (isStrictlySorted!285 (toList!726 lt!29847)))))

(assert (=> d!15283 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29847) (_1!1069 lt!29777)) lt!30650)))

(declare-fun b!69727 () Bool)

(assert (=> b!69727 (= e!45637 (containsKey!134 (toList!726 lt!29847) (_1!1069 lt!29777)))))

(assert (= (and d!15283 res!37350) b!69727))

(assert (=> d!15283 m!64193))

(assert (=> d!15283 m!64193))

(assert (=> d!15283 m!64827))

(declare-fun m!66117 () Bool)

(assert (=> d!15283 m!66117))

(declare-fun m!66119 () Bool)

(assert (=> d!15283 m!66119))

(assert (=> b!69727 m!64823))

(assert (=> b!69094 d!15283))

(assert (=> b!69094 d!15041))

(assert (=> b!69094 d!14785))

(declare-fun d!15285 () Bool)

(assert (=> d!15285 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2989 () Bool)

(assert (= bs!2989 d!15285))

(assert (=> bs!2989 m!64591))

(declare-fun m!66121 () Bool)

(assert (=> bs!2989 m!66121))

(assert (=> b!68983 d!15285))

(declare-fun b!69731 () Bool)

(declare-fun e!45639 () Option!136)

(assert (=> b!69731 (= e!45639 None!134)))

(declare-fun d!15287 () Bool)

(declare-fun c!10026 () Bool)

(assert (=> d!15287 (= c!10026 (and ((_ is Cons!1490) (toList!726 lt!29836)) (= (_1!1069 (h!2075 (toList!726 lt!29836))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45638 () Option!136)

(assert (=> d!15287 (= (getValueByKey!130 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000) e!45638)))

(declare-fun b!69728 () Bool)

(assert (=> b!69728 (= e!45638 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29836)))))))

(declare-fun b!69730 () Bool)

(assert (=> b!69730 (= e!45639 (getValueByKey!130 (t!5001 (toList!726 lt!29836)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69729 () Bool)

(assert (=> b!69729 (= e!45638 e!45639)))

(declare-fun c!10027 () Bool)

(assert (=> b!69729 (= c!10027 (and ((_ is Cons!1490) (toList!726 lt!29836)) (not (= (_1!1069 (h!2075 (toList!726 lt!29836))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15287 c!10026) b!69728))

(assert (= (and d!15287 (not c!10026)) b!69729))

(assert (= (and b!69729 c!10027) b!69730))

(assert (= (and b!69729 (not c!10027)) b!69731))

(declare-fun m!66123 () Bool)

(assert (=> b!69730 m!66123))

(assert (=> b!68983 d!15287))

(assert (=> bm!5910 d!15205))

(declare-fun b!69735 () Bool)

(declare-fun e!45641 () Option!136)

(assert (=> b!69735 (= e!45641 None!134)))

(declare-fun c!10028 () Bool)

(declare-fun d!15289 () Bool)

(assert (=> d!15289 (= c!10028 (and ((_ is Cons!1490) (toList!726 lt!30334)) (= (_1!1069 (h!2075 (toList!726 lt!30334))) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun e!45640 () Option!136)

(assert (=> d!15289 (= (getValueByKey!130 (toList!726 lt!30334) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) e!45640)))

(declare-fun b!69732 () Bool)

(assert (=> b!69732 (= e!45640 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30334)))))))

(declare-fun b!69734 () Bool)

(assert (=> b!69734 (= e!45641 (getValueByKey!130 (t!5001 (toList!726 lt!30334)) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69733 () Bool)

(assert (=> b!69733 (= e!45640 e!45641)))

(declare-fun c!10029 () Bool)

(assert (=> b!69733 (= c!10029 (and ((_ is Cons!1490) (toList!726 lt!30334)) (not (= (_1!1069 (h!2075 (toList!726 lt!30334))) (_1!1069 (ite c!9749 (ite c!9751 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29778) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29778)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))))

(assert (= (and d!15289 c!10028) b!69732))

(assert (= (and d!15289 (not c!10028)) b!69733))

(assert (= (and b!69733 c!10029) b!69734))

(assert (= (and b!69733 (not c!10029)) b!69735))

(declare-fun m!66125 () Bool)

(assert (=> b!69734 m!66125))

(assert (=> b!69211 d!15289))

(declare-fun d!15291 () Bool)

(declare-fun e!45642 () Bool)

(assert (=> d!15291 e!45642))

(declare-fun res!37351 () Bool)

(assert (=> d!15291 (=> res!37351 e!45642)))

(declare-fun lt!30653 () Bool)

(assert (=> d!15291 (= res!37351 (not lt!30653))))

(declare-fun lt!30654 () Bool)

(assert (=> d!15291 (= lt!30653 lt!30654)))

(declare-fun lt!30652 () Unit!1913)

(declare-fun e!45643 () Unit!1913)

(assert (=> d!15291 (= lt!30652 e!45643)))

(declare-fun c!10030 () Bool)

(assert (=> d!15291 (= c!10030 lt!30654)))

(assert (=> d!15291 (= lt!30654 (containsKey!134 (toList!726 lt!30393) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15291 (= (contains!720 lt!30393 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30653)))

(declare-fun b!69736 () Bool)

(declare-fun lt!30651 () Unit!1913)

(assert (=> b!69736 (= e!45643 lt!30651)))

(assert (=> b!69736 (= lt!30651 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30393) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69736 (isDefined!84 (getValueByKey!130 (toList!726 lt!30393) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69737 () Bool)

(declare-fun Unit!1965 () Unit!1913)

(assert (=> b!69737 (= e!45643 Unit!1965)))

(declare-fun b!69738 () Bool)

(assert (=> b!69738 (= e!45642 (isDefined!84 (getValueByKey!130 (toList!726 lt!30393) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15291 c!10030) b!69736))

(assert (= (and d!15291 (not c!10030)) b!69737))

(assert (= (and d!15291 (not res!37351)) b!69738))

(declare-fun m!66127 () Bool)

(assert (=> d!15291 m!66127))

(declare-fun m!66129 () Bool)

(assert (=> b!69736 m!66129))

(declare-fun m!66131 () Bool)

(assert (=> b!69736 m!66131))

(assert (=> b!69736 m!66131))

(declare-fun m!66133 () Bool)

(assert (=> b!69736 m!66133))

(assert (=> b!69738 m!66131))

(assert (=> b!69738 m!66131))

(assert (=> b!69738 m!66133))

(assert (=> bm!5924 d!15291))

(declare-fun d!15293 () Bool)

(declare-fun e!45644 () Bool)

(assert (=> d!15293 e!45644))

(declare-fun res!37352 () Bool)

(assert (=> d!15293 (=> res!37352 e!45644)))

(declare-fun lt!30657 () Bool)

(assert (=> d!15293 (= res!37352 (not lt!30657))))

(declare-fun lt!30658 () Bool)

(assert (=> d!15293 (= lt!30657 lt!30658)))

(declare-fun lt!30656 () Unit!1913)

(declare-fun e!45645 () Unit!1913)

(assert (=> d!15293 (= lt!30656 e!45645)))

(declare-fun c!10031 () Bool)

(assert (=> d!15293 (= c!10031 lt!30658)))

(assert (=> d!15293 (= lt!30658 (containsKey!134 (toList!726 lt!30254) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15293 (= (contains!720 lt!30254 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30657)))

(declare-fun b!69739 () Bool)

(declare-fun lt!30655 () Unit!1913)

(assert (=> b!69739 (= e!45645 lt!30655)))

(assert (=> b!69739 (= lt!30655 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30254) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69739 (isDefined!84 (getValueByKey!130 (toList!726 lt!30254) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69740 () Bool)

(declare-fun Unit!1966 () Unit!1913)

(assert (=> b!69740 (= e!45645 Unit!1966)))

(declare-fun b!69741 () Bool)

(assert (=> b!69741 (= e!45644 (isDefined!84 (getValueByKey!130 (toList!726 lt!30254) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15293 c!10031) b!69739))

(assert (= (and d!15293 (not c!10031)) b!69740))

(assert (= (and d!15293 (not res!37352)) b!69741))

(declare-fun m!66135 () Bool)

(assert (=> d!15293 m!66135))

(declare-fun m!66137 () Bool)

(assert (=> b!69739 m!66137))

(declare-fun m!66139 () Bool)

(assert (=> b!69739 m!66139))

(assert (=> b!69739 m!66139))

(declare-fun m!66141 () Bool)

(assert (=> b!69739 m!66141))

(assert (=> b!69741 m!66139))

(assert (=> b!69741 m!66139))

(assert (=> b!69741 m!66141))

(assert (=> bm!5900 d!15293))

(assert (=> d!14899 d!14981))

(assert (=> d!14833 d!14981))

(declare-fun b!69745 () Bool)

(declare-fun e!45647 () Option!136)

(assert (=> b!69745 (= e!45647 None!134)))

(declare-fun d!15295 () Bool)

(declare-fun c!10032 () Bool)

(assert (=> d!15295 (= c!10032 (and ((_ is Cons!1490) (toList!726 lt!30358)) (= (_1!1069 (h!2075 (toList!726 lt!30358))) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45646 () Option!136)

(assert (=> d!15295 (= (getValueByKey!130 (toList!726 lt!30358) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45646)))

(declare-fun b!69742 () Bool)

(assert (=> b!69742 (= e!45646 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30358)))))))

(declare-fun b!69744 () Bool)

(assert (=> b!69744 (= e!45647 (getValueByKey!130 (t!5001 (toList!726 lt!30358)) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69743 () Bool)

(assert (=> b!69743 (= e!45646 e!45647)))

(declare-fun c!10033 () Bool)

(assert (=> b!69743 (= c!10033 (and ((_ is Cons!1490) (toList!726 lt!30358)) (not (= (_1!1069 (h!2075 (toList!726 lt!30358))) (_1!1069 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15295 c!10032) b!69742))

(assert (= (and d!15295 (not c!10032)) b!69743))

(assert (= (and b!69743 c!10033) b!69744))

(assert (= (and b!69743 (not c!10033)) b!69745))

(declare-fun m!66143 () Bool)

(assert (=> b!69744 m!66143))

(assert (=> b!69227 d!15295))

(declare-fun d!15297 () Bool)

(declare-fun e!45648 () Bool)

(assert (=> d!15297 e!45648))

(declare-fun res!37353 () Bool)

(assert (=> d!15297 (=> res!37353 e!45648)))

(declare-fun lt!30661 () Bool)

(assert (=> d!15297 (= res!37353 (not lt!30661))))

(declare-fun lt!30662 () Bool)

(assert (=> d!15297 (= lt!30661 lt!30662)))

(declare-fun lt!30660 () Unit!1913)

(declare-fun e!45649 () Unit!1913)

(assert (=> d!15297 (= lt!30660 e!45649)))

(declare-fun c!10034 () Bool)

(assert (=> d!15297 (= c!10034 lt!30662)))

(assert (=> d!15297 (= lt!30662 (containsKey!134 (toList!726 lt!30034) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15297 (= (contains!720 lt!30034 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30661)))

(declare-fun b!69746 () Bool)

(declare-fun lt!30659 () Unit!1913)

(assert (=> b!69746 (= e!45649 lt!30659)))

(assert (=> b!69746 (= lt!30659 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30034) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> b!69746 (isDefined!84 (getValueByKey!130 (toList!726 lt!30034) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69747 () Bool)

(declare-fun Unit!1967 () Unit!1913)

(assert (=> b!69747 (= e!45649 Unit!1967)))

(declare-fun b!69748 () Bool)

(assert (=> b!69748 (= e!45648 (isDefined!84 (getValueByKey!130 (toList!726 lt!30034) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15297 c!10034) b!69746))

(assert (= (and d!15297 (not c!10034)) b!69747))

(assert (= (and d!15297 (not res!37353)) b!69748))

(declare-fun m!66145 () Bool)

(assert (=> d!15297 m!66145))

(declare-fun m!66147 () Bool)

(assert (=> b!69746 m!66147))

(assert (=> b!69746 m!64393))

(assert (=> b!69746 m!64393))

(declare-fun m!66149 () Bool)

(assert (=> b!69746 m!66149))

(assert (=> b!69748 m!64393))

(assert (=> b!69748 m!64393))

(assert (=> b!69748 m!66149))

(assert (=> d!14759 d!15297))

(declare-fun b!69752 () Bool)

(declare-fun e!45651 () Option!136)

(assert (=> b!69752 (= e!45651 None!134)))

(declare-fun d!15299 () Bool)

(declare-fun c!10035 () Bool)

(assert (=> d!15299 (= c!10035 (and ((_ is Cons!1490) lt!30035) (= (_1!1069 (h!2075 lt!30035)) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45650 () Option!136)

(assert (=> d!15299 (= (getValueByKey!130 lt!30035 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45650)))

(declare-fun b!69749 () Bool)

(assert (=> b!69749 (= e!45650 (Some!135 (_2!1069 (h!2075 lt!30035))))))

(declare-fun b!69751 () Bool)

(assert (=> b!69751 (= e!45651 (getValueByKey!130 (t!5001 lt!30035) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69750 () Bool)

(assert (=> b!69750 (= e!45650 e!45651)))

(declare-fun c!10036 () Bool)

(assert (=> b!69750 (= c!10036 (and ((_ is Cons!1490) lt!30035) (not (= (_1!1069 (h!2075 lt!30035)) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15299 c!10035) b!69749))

(assert (= (and d!15299 (not c!10035)) b!69750))

(assert (= (and b!69750 c!10036) b!69751))

(assert (= (and b!69750 (not c!10036)) b!69752))

(declare-fun m!66151 () Bool)

(assert (=> b!69751 m!66151))

(assert (=> d!14759 d!15299))

(declare-fun d!15301 () Bool)

(assert (=> d!15301 (= (getValueByKey!130 lt!30035 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30663 () Unit!1913)

(assert (=> d!15301 (= lt!30663 (choose!390 lt!30035 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!45652 () Bool)

(assert (=> d!15301 e!45652))

(declare-fun res!37354 () Bool)

(assert (=> d!15301 (=> (not res!37354) (not e!45652))))

(assert (=> d!15301 (= res!37354 (isStrictlySorted!285 lt!30035))))

(assert (=> d!15301 (= (lemmaContainsTupThenGetReturnValue!49 lt!30035 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30663)))

(declare-fun b!69753 () Bool)

(declare-fun res!37355 () Bool)

(assert (=> b!69753 (=> (not res!37355) (not e!45652))))

(assert (=> b!69753 (= res!37355 (containsKey!134 lt!30035 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69754 () Bool)

(assert (=> b!69754 (= e!45652 (contains!721 lt!30035 (tuple2!2119 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15301 res!37354) b!69753))

(assert (= (and b!69753 res!37355) b!69754))

(assert (=> d!15301 m!64387))

(declare-fun m!66153 () Bool)

(assert (=> d!15301 m!66153))

(declare-fun m!66155 () Bool)

(assert (=> d!15301 m!66155))

(declare-fun m!66157 () Bool)

(assert (=> b!69753 m!66157))

(declare-fun m!66159 () Bool)

(assert (=> b!69754 m!66159))

(assert (=> d!14759 d!15301))

(declare-fun bm!5968 () Bool)

(declare-fun call!5971 () List!1494)

(declare-fun call!5973 () List!1494)

(assert (=> bm!5968 (= call!5971 call!5973)))

(declare-fun b!69755 () Bool)

(declare-fun e!45656 () List!1494)

(declare-fun call!5972 () List!1494)

(assert (=> b!69755 (= e!45656 call!5972)))

(declare-fun b!69756 () Bool)

(declare-fun e!45655 () List!1494)

(assert (=> b!69756 (= e!45655 (insertStrictlySorted!51 (t!5001 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69758 () Bool)

(declare-fun res!37357 () Bool)

(declare-fun e!45654 () Bool)

(assert (=> b!69758 (=> (not res!37357) (not e!45654))))

(declare-fun lt!30664 () List!1494)

(assert (=> b!69758 (= res!37357 (containsKey!134 lt!30664 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69759 () Bool)

(declare-fun e!45653 () List!1494)

(declare-fun e!45657 () List!1494)

(assert (=> b!69759 (= e!45653 e!45657)))

(declare-fun c!10037 () Bool)

(assert (=> b!69759 (= c!10037 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun c!10038 () Bool)

(declare-fun b!69760 () Bool)

(assert (=> b!69760 (= e!45655 (ite c!10037 (t!5001 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (ite c!10038 (Cons!1490 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (t!5001 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))) Nil!1491)))))

(declare-fun b!69761 () Bool)

(assert (=> b!69761 (= e!45656 call!5972)))

(declare-fun b!69762 () Bool)

(assert (=> b!69762 (= e!45657 call!5971)))

(declare-fun b!69763 () Bool)

(assert (=> b!69763 (= e!45653 call!5973)))

(declare-fun bm!5969 () Bool)

(declare-fun c!10039 () Bool)

(assert (=> bm!5969 (= call!5973 ($colon$colon!63 e!45655 (ite c!10039 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (tuple2!2119 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!10040 () Bool)

(assert (=> bm!5969 (= c!10040 c!10039)))

(declare-fun b!69764 () Bool)

(assert (=> b!69764 (= e!45654 (contains!721 lt!30664 (tuple2!2119 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun bm!5970 () Bool)

(assert (=> bm!5970 (= call!5972 call!5971)))

(declare-fun b!69757 () Bool)

(assert (=> b!69757 (= c!10038 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (bvsgt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!69757 (= e!45657 e!45656)))

(declare-fun d!15303 () Bool)

(assert (=> d!15303 e!45654))

(declare-fun res!37356 () Bool)

(assert (=> d!15303 (=> (not res!37356) (not e!45654))))

(assert (=> d!15303 (= res!37356 (isStrictlySorted!285 lt!30664))))

(assert (=> d!15303 (= lt!30664 e!45653)))

(assert (=> d!15303 (= c!10039 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))) (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15303 (isStrictlySorted!285 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15303 (= (insertStrictlySorted!51 (toList!726 (+!89 lt!29768 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30664)))

(assert (= (and d!15303 c!10039) b!69763))

(assert (= (and d!15303 (not c!10039)) b!69759))

(assert (= (and b!69759 c!10037) b!69762))

(assert (= (and b!69759 (not c!10037)) b!69757))

(assert (= (and b!69757 c!10038) b!69761))

(assert (= (and b!69757 (not c!10038)) b!69755))

(assert (= (or b!69761 b!69755) bm!5970))

(assert (= (or b!69762 bm!5970) bm!5968))

(assert (= (or b!69763 bm!5968) bm!5969))

(assert (= (and bm!5969 c!10040) b!69756))

(assert (= (and bm!5969 (not c!10040)) b!69760))

(assert (= (and d!15303 res!37356) b!69758))

(assert (= (and b!69758 res!37357) b!69764))

(declare-fun m!66161 () Bool)

(assert (=> b!69756 m!66161))

(declare-fun m!66163 () Bool)

(assert (=> d!15303 m!66163))

(declare-fun m!66165 () Bool)

(assert (=> d!15303 m!66165))

(declare-fun m!66167 () Bool)

(assert (=> b!69758 m!66167))

(declare-fun m!66169 () Bool)

(assert (=> bm!5969 m!66169))

(declare-fun m!66171 () Bool)

(assert (=> b!69764 m!66171))

(assert (=> d!14759 d!15303))

(declare-fun b!69766 () Bool)

(declare-fun res!37359 () Bool)

(declare-fun e!45658 () Bool)

(assert (=> b!69766 (=> (not res!37359) (not e!45658))))

(assert (=> b!69766 (= res!37359 (bvsge (size!2080 (v!2495 (underlying!255 thiss!992))) (_size!388 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!69765 () Bool)

(declare-fun res!37358 () Bool)

(assert (=> b!69765 (=> (not res!37358) (not e!45658))))

(assert (=> b!69765 (= res!37358 (and (= (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001)) (= (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (size!2077 (_values!2151 (v!2495 (underlying!255 thiss!992))))) (bvsge (_size!388 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!388 (v!2495 (underlying!255 thiss!992))) (bvadd (mask!6113 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!69768 () Bool)

(assert (=> b!69768 (= e!45658 (and (bvsge (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!388 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!15305 () Bool)

(declare-fun res!37361 () Bool)

(assert (=> d!15305 (=> (not res!37361) (not e!45658))))

(assert (=> d!15305 (= res!37361 (validMask!0 (mask!6113 (v!2495 (underlying!255 thiss!992)))))))

(assert (=> d!15305 (= (simpleValid!48 (v!2495 (underlying!255 thiss!992))) e!45658)))

(declare-fun b!69767 () Bool)

(declare-fun res!37360 () Bool)

(assert (=> b!69767 (=> (not res!37360) (not e!45658))))

(assert (=> b!69767 (= res!37360 (= (size!2080 (v!2495 (underlying!255 thiss!992))) (bvadd (_size!388 (v!2495 (underlying!255 thiss!992))) (bvsdiv (bvadd (extraKeys!2035 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!15305 res!37361) b!69765))

(assert (= (and b!69765 res!37358) b!69766))

(assert (= (and b!69766 res!37359) b!69767))

(assert (= (and b!69767 res!37360) b!69768))

(declare-fun m!66173 () Bool)

(assert (=> b!69766 m!66173))

(assert (=> d!15305 m!64067))

(assert (=> b!69767 m!66173))

(assert (=> d!14953 d!15305))

(declare-fun d!15307 () Bool)

(declare-fun lt!30665 () Bool)

(assert (=> d!15307 (= lt!30665 (select (content!72 (t!5001 (toList!726 lt!29862))) lt!29777))))

(declare-fun e!45659 () Bool)

(assert (=> d!15307 (= lt!30665 e!45659)))

(declare-fun res!37363 () Bool)

(assert (=> d!15307 (=> (not res!37363) (not e!45659))))

(assert (=> d!15307 (= res!37363 ((_ is Cons!1490) (t!5001 (toList!726 lt!29862))))))

(assert (=> d!15307 (= (contains!721 (t!5001 (toList!726 lt!29862)) lt!29777) lt!30665)))

(declare-fun b!69769 () Bool)

(declare-fun e!45660 () Bool)

(assert (=> b!69769 (= e!45659 e!45660)))

(declare-fun res!37362 () Bool)

(assert (=> b!69769 (=> res!37362 e!45660)))

(assert (=> b!69769 (= res!37362 (= (h!2075 (t!5001 (toList!726 lt!29862))) lt!29777))))

(declare-fun b!69770 () Bool)

(assert (=> b!69770 (= e!45660 (contains!721 (t!5001 (t!5001 (toList!726 lt!29862))) lt!29777))))

(assert (= (and d!15307 res!37363) b!69769))

(assert (= (and b!69769 (not res!37362)) b!69770))

(assert (=> d!15307 m!65669))

(declare-fun m!66175 () Bool)

(assert (=> d!15307 m!66175))

(declare-fun m!66177 () Bool)

(assert (=> b!69770 m!66177))

(assert (=> b!69093 d!15307))

(declare-fun d!15309 () Bool)

(declare-fun e!45661 () Bool)

(assert (=> d!15309 e!45661))

(declare-fun res!37364 () Bool)

(assert (=> d!15309 (=> res!37364 e!45661)))

(declare-fun lt!30668 () Bool)

(assert (=> d!15309 (= res!37364 (not lt!30668))))

(declare-fun lt!30669 () Bool)

(assert (=> d!15309 (= lt!30668 lt!30669)))

(declare-fun lt!30667 () Unit!1913)

(declare-fun e!45662 () Unit!1913)

(assert (=> d!15309 (= lt!30667 e!45662)))

(declare-fun c!10041 () Bool)

(assert (=> d!15309 (= c!10041 lt!30669)))

(assert (=> d!15309 (= lt!30669 (containsKey!134 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(assert (=> d!15309 (= (contains!720 (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))) lt!30668)))

(declare-fun b!69771 () Bool)

(declare-fun lt!30666 () Unit!1913)

(assert (=> b!69771 (= e!45662 lt!30666)))

(assert (=> b!69771 (= lt!30666 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(assert (=> b!69771 (isDefined!84 (getValueByKey!130 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(declare-fun b!69772 () Bool)

(declare-fun Unit!1968 () Unit!1913)

(assert (=> b!69772 (= e!45662 Unit!1968)))

(declare-fun b!69773 () Bool)

(assert (=> b!69773 (= e!45661 (isDefined!84 (getValueByKey!130 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))))))

(assert (= (and d!15309 c!10041) b!69771))

(assert (= (and d!15309 (not c!10041)) b!69772))

(assert (= (and d!15309 (not res!37364)) b!69773))

(assert (=> d!15309 m!64325))

(declare-fun m!66179 () Bool)

(assert (=> d!15309 m!66179))

(assert (=> b!69771 m!64325))

(declare-fun m!66181 () Bool)

(assert (=> b!69771 m!66181))

(assert (=> b!69771 m!64325))

(declare-fun m!66183 () Bool)

(assert (=> b!69771 m!66183))

(assert (=> b!69771 m!66183))

(declare-fun m!66185 () Bool)

(assert (=> b!69771 m!66185))

(assert (=> b!69773 m!64325))

(assert (=> b!69773 m!66183))

(assert (=> b!69773 m!66183))

(assert (=> b!69773 m!66185))

(assert (=> b!69239 d!15309))

(declare-fun b!69774 () Bool)

(declare-fun res!37367 () Bool)

(declare-fun e!45665 () Bool)

(assert (=> b!69774 (=> (not res!37367) (not e!45665))))

(declare-fun e!45670 () Bool)

(assert (=> b!69774 (= res!37367 e!45670)))

(declare-fun c!10044 () Bool)

(assert (=> b!69774 (= c!10044 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69775 () Bool)

(declare-fun res!37372 () Bool)

(assert (=> b!69775 (=> (not res!37372) (not e!45665))))

(declare-fun e!45671 () Bool)

(assert (=> b!69775 (= res!37372 e!45671)))

(declare-fun res!37373 () Bool)

(assert (=> b!69775 (=> res!37373 e!45671)))

(declare-fun e!45675 () Bool)

(assert (=> b!69775 (= res!37373 (not e!45675))))

(declare-fun res!37370 () Bool)

(assert (=> b!69775 (=> (not res!37370) (not e!45675))))

(assert (=> b!69775 (= res!37370 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun bm!5971 () Bool)

(declare-fun call!5975 () ListLongMap!1421)

(declare-fun call!5977 () ListLongMap!1421)

(assert (=> bm!5971 (= call!5975 call!5977)))

(declare-fun b!69777 () Bool)

(declare-fun e!45669 () ListLongMap!1421)

(declare-fun call!5974 () ListLongMap!1421)

(assert (=> b!69777 (= e!45669 call!5974)))

(declare-fun b!69778 () Bool)

(declare-fun e!45674 () ListLongMap!1421)

(declare-fun e!45664 () ListLongMap!1421)

(assert (=> b!69778 (= e!45674 e!45664)))

(declare-fun c!10047 () Bool)

(assert (=> b!69778 (= c!10047 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5972 () Bool)

(declare-fun call!5979 () Bool)

(declare-fun lt!30688 () ListLongMap!1421)

(assert (=> bm!5972 (= call!5979 (contains!720 lt!30688 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69779 () Bool)

(assert (=> b!69779 (= e!45664 call!5974)))

(declare-fun b!69780 () Bool)

(declare-fun e!45663 () Bool)

(declare-fun e!45667 () Bool)

(assert (=> b!69780 (= e!45663 e!45667)))

(declare-fun res!37368 () Bool)

(assert (=> b!69780 (= res!37368 call!5979)))

(assert (=> b!69780 (=> (not res!37368) (not e!45667))))

(declare-fun b!69781 () Bool)

(declare-fun call!5976 () ListLongMap!1421)

(assert (=> b!69781 (= e!45669 call!5976)))

(declare-fun b!69782 () Bool)

(declare-fun e!45668 () Bool)

(assert (=> b!69782 (= e!45668 (= (apply!73 lt!30688 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 lt!30029) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69782 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 lt!30029)))))

(assert (=> b!69782 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!69783 () Bool)

(assert (=> b!69783 (= e!45665 e!45663)))

(declare-fun c!10045 () Bool)

(assert (=> b!69783 (= c!10045 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!15311 () Bool)

(assert (=> d!15311 e!45665))

(declare-fun res!37371 () Bool)

(assert (=> d!15311 (=> (not res!37371) (not e!45665))))

(assert (=> d!15311 (= res!37371 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun lt!30680 () ListLongMap!1421)

(assert (=> d!15311 (= lt!30688 lt!30680)))

(declare-fun lt!30684 () Unit!1913)

(declare-fun e!45666 () Unit!1913)

(assert (=> d!15311 (= lt!30684 e!45666)))

(declare-fun c!10046 () Bool)

(declare-fun e!45672 () Bool)

(assert (=> d!15311 (= c!10046 e!45672)))

(declare-fun res!37369 () Bool)

(assert (=> d!15311 (=> (not res!37369) (not e!45672))))

(assert (=> d!15311 (= res!37369 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15311 (= lt!30680 e!45674)))

(declare-fun c!10043 () Bool)

(assert (=> d!15311 (= c!10043 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15311 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15311 (= (getCurrentListMap!421 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30688)))

(declare-fun b!69776 () Bool)

(assert (=> b!69776 (= e!45663 (not call!5979))))

(declare-fun bm!5973 () Bool)

(assert (=> bm!5973 (= call!5976 call!5975)))

(declare-fun bm!5974 () Bool)

(assert (=> bm!5974 (= call!5977 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69784 () Bool)

(declare-fun Unit!1969 () Unit!1913)

(assert (=> b!69784 (= e!45666 Unit!1969)))

(declare-fun b!69785 () Bool)

(declare-fun e!45673 () Bool)

(assert (=> b!69785 (= e!45670 e!45673)))

(declare-fun res!37366 () Bool)

(declare-fun call!5980 () Bool)

(assert (=> b!69785 (= res!37366 call!5980)))

(assert (=> b!69785 (=> (not res!37366) (not e!45673))))

(declare-fun b!69786 () Bool)

(assert (=> b!69786 (= e!45667 (= (apply!73 lt!30688 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69787 () Bool)

(assert (=> b!69787 (= e!45675 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5975 () Bool)

(assert (=> bm!5975 (= call!5980 (contains!720 lt!30688 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69788 () Bool)

(declare-fun c!10042 () Bool)

(assert (=> b!69788 (= c!10042 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69788 (= e!45664 e!45669)))

(declare-fun bm!5976 () Bool)

(declare-fun call!5978 () ListLongMap!1421)

(assert (=> bm!5976 (= call!5978 (+!89 (ite c!10043 call!5977 (ite c!10047 call!5975 call!5976)) (ite (or c!10043 c!10047) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun b!69789 () Bool)

(assert (=> b!69789 (= e!45674 (+!89 call!5978 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69790 () Bool)

(declare-fun lt!30679 () Unit!1913)

(assert (=> b!69790 (= e!45666 lt!30679)))

(declare-fun lt!30686 () ListLongMap!1421)

(assert (=> b!69790 (= lt!30686 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30672 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30672 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30678 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30678 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30690 () Unit!1913)

(assert (=> b!69790 (= lt!30690 (addStillContains!49 lt!30686 lt!30672 (zeroValue!2074 newMap!16) lt!30678))))

(assert (=> b!69790 (contains!720 (+!89 lt!30686 (tuple2!2119 lt!30672 (zeroValue!2074 newMap!16))) lt!30678)))

(declare-fun lt!30677 () Unit!1913)

(assert (=> b!69790 (= lt!30677 lt!30690)))

(declare-fun lt!30674 () ListLongMap!1421)

(assert (=> b!69790 (= lt!30674 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30689 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30689 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30682 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30682 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30670 () Unit!1913)

(assert (=> b!69790 (= lt!30670 (addApplyDifferent!49 lt!30674 lt!30689 (minValue!2074 newMap!16) lt!30682))))

(assert (=> b!69790 (= (apply!73 (+!89 lt!30674 (tuple2!2119 lt!30689 (minValue!2074 newMap!16))) lt!30682) (apply!73 lt!30674 lt!30682))))

(declare-fun lt!30675 () Unit!1913)

(assert (=> b!69790 (= lt!30675 lt!30670)))

(declare-fun lt!30671 () ListLongMap!1421)

(assert (=> b!69790 (= lt!30671 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30687 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30687 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30673 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30673 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30683 () Unit!1913)

(assert (=> b!69790 (= lt!30683 (addApplyDifferent!49 lt!30671 lt!30687 (zeroValue!2074 newMap!16) lt!30673))))

(assert (=> b!69790 (= (apply!73 (+!89 lt!30671 (tuple2!2119 lt!30687 (zeroValue!2074 newMap!16))) lt!30673) (apply!73 lt!30671 lt!30673))))

(declare-fun lt!30681 () Unit!1913)

(assert (=> b!69790 (= lt!30681 lt!30683)))

(declare-fun lt!30691 () ListLongMap!1421)

(assert (=> b!69790 (= lt!30691 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) lt!30029 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30676 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30676 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30685 () (_ BitVec 64))

(assert (=> b!69790 (= lt!30685 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69790 (= lt!30679 (addApplyDifferent!49 lt!30691 lt!30676 (minValue!2074 newMap!16) lt!30685))))

(assert (=> b!69790 (= (apply!73 (+!89 lt!30691 (tuple2!2119 lt!30676 (minValue!2074 newMap!16))) lt!30685) (apply!73 lt!30691 lt!30685))))

(declare-fun b!69791 () Bool)

(assert (=> b!69791 (= e!45672 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5977 () Bool)

(assert (=> bm!5977 (= call!5974 call!5978)))

(declare-fun b!69792 () Bool)

(assert (=> b!69792 (= e!45670 (not call!5980))))

(declare-fun b!69793 () Bool)

(assert (=> b!69793 (= e!45673 (= (apply!73 lt!30688 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69794 () Bool)

(assert (=> b!69794 (= e!45671 e!45668)))

(declare-fun res!37365 () Bool)

(assert (=> b!69794 (=> (not res!37365) (not e!45668))))

(assert (=> b!69794 (= res!37365 (contains!720 lt!30688 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69794 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!15311 c!10043) b!69789))

(assert (= (and d!15311 (not c!10043)) b!69778))

(assert (= (and b!69778 c!10047) b!69779))

(assert (= (and b!69778 (not c!10047)) b!69788))

(assert (= (and b!69788 c!10042) b!69777))

(assert (= (and b!69788 (not c!10042)) b!69781))

(assert (= (or b!69777 b!69781) bm!5973))

(assert (= (or b!69779 bm!5973) bm!5971))

(assert (= (or b!69779 b!69777) bm!5977))

(assert (= (or b!69789 bm!5971) bm!5974))

(assert (= (or b!69789 bm!5977) bm!5976))

(assert (= (and d!15311 res!37369) b!69791))

(assert (= (and d!15311 c!10046) b!69790))

(assert (= (and d!15311 (not c!10046)) b!69784))

(assert (= (and d!15311 res!37371) b!69775))

(assert (= (and b!69775 res!37370) b!69787))

(assert (= (and b!69775 (not res!37373)) b!69794))

(assert (= (and b!69794 res!37365) b!69782))

(assert (= (and b!69775 res!37372) b!69774))

(assert (= (and b!69774 c!10044) b!69785))

(assert (= (and b!69774 (not c!10044)) b!69792))

(assert (= (and b!69785 res!37366) b!69793))

(assert (= (or b!69785 b!69792) bm!5975))

(assert (= (and b!69774 res!37367) b!69783))

(assert (= (and b!69783 c!10045) b!69780))

(assert (= (and b!69783 (not c!10045)) b!69776))

(assert (= (and b!69780 res!37368) b!69786))

(assert (= (or b!69780 b!69776) bm!5972))

(declare-fun b_lambda!3129 () Bool)

(assert (=> (not b_lambda!3129) (not b!69782)))

(assert (=> b!69782 t!5009))

(declare-fun b_and!4285 () Bool)

(assert (= b_and!4281 (and (=> t!5009 result!2623) b_and!4285)))

(assert (=> b!69782 t!5011))

(declare-fun b_and!4287 () Bool)

(assert (= b_and!4283 (and (=> t!5011 result!2625) b_and!4287)))

(assert (=> b!69794 m!64555))

(assert (=> b!69794 m!64555))

(declare-fun m!66187 () Bool)

(assert (=> b!69794 m!66187))

(declare-fun m!66189 () Bool)

(assert (=> b!69786 m!66189))

(declare-fun m!66191 () Bool)

(assert (=> b!69793 m!66191))

(declare-fun m!66193 () Bool)

(assert (=> bm!5976 m!66193))

(assert (=> d!15311 m!64569))

(declare-fun m!66195 () Bool)

(assert (=> bm!5975 m!66195))

(assert (=> b!69782 m!64555))

(assert (=> b!69782 m!64699))

(assert (=> b!69782 m!64555))

(declare-fun m!66197 () Bool)

(assert (=> b!69782 m!66197))

(declare-fun m!66199 () Bool)

(assert (=> b!69782 m!66199))

(assert (=> b!69782 m!66199))

(assert (=> b!69782 m!64699))

(declare-fun m!66201 () Bool)

(assert (=> b!69782 m!66201))

(declare-fun m!66203 () Bool)

(assert (=> b!69789 m!66203))

(assert (=> b!69790 m!64555))

(declare-fun m!66205 () Bool)

(assert (=> b!69790 m!66205))

(declare-fun m!66207 () Bool)

(assert (=> b!69790 m!66207))

(declare-fun m!66209 () Bool)

(assert (=> b!69790 m!66209))

(declare-fun m!66211 () Bool)

(assert (=> b!69790 m!66211))

(declare-fun m!66213 () Bool)

(assert (=> b!69790 m!66213))

(declare-fun m!66215 () Bool)

(assert (=> b!69790 m!66215))

(declare-fun m!66217 () Bool)

(assert (=> b!69790 m!66217))

(declare-fun m!66219 () Bool)

(assert (=> b!69790 m!66219))

(declare-fun m!66221 () Bool)

(assert (=> b!69790 m!66221))

(declare-fun m!66223 () Bool)

(assert (=> b!69790 m!66223))

(declare-fun m!66225 () Bool)

(assert (=> b!69790 m!66225))

(declare-fun m!66227 () Bool)

(assert (=> b!69790 m!66227))

(assert (=> b!69790 m!66217))

(declare-fun m!66229 () Bool)

(assert (=> b!69790 m!66229))

(declare-fun m!66231 () Bool)

(assert (=> b!69790 m!66231))

(assert (=> b!69790 m!66227))

(declare-fun m!66233 () Bool)

(assert (=> b!69790 m!66233))

(assert (=> b!69790 m!66229))

(assert (=> b!69790 m!66221))

(declare-fun m!66235 () Bool)

(assert (=> b!69790 m!66235))

(assert (=> b!69791 m!64555))

(assert (=> b!69791 m!64555))

(assert (=> b!69791 m!64607))

(assert (=> b!69787 m!64555))

(assert (=> b!69787 m!64555))

(assert (=> b!69787 m!64607))

(declare-fun m!66237 () Bool)

(assert (=> bm!5972 m!66237))

(assert (=> bm!5974 m!66213))

(assert (=> b!69239 d!15311))

(declare-fun b!69798 () Bool)

(declare-fun e!45677 () Option!136)

(assert (=> b!69798 (= e!45677 None!134)))

(declare-fun c!10048 () Bool)

(declare-fun d!15313 () Bool)

(assert (=> d!15313 (= c!10048 (and ((_ is Cons!1490) (toList!726 lt!30194)) (= (_1!1069 (h!2075 (toList!726 lt!30194))) (_1!1069 (tuple2!2119 lt!29835 lt!29830)))))))

(declare-fun e!45676 () Option!136)

(assert (=> d!15313 (= (getValueByKey!130 (toList!726 lt!30194) (_1!1069 (tuple2!2119 lt!29835 lt!29830))) e!45676)))

(declare-fun b!69795 () Bool)

(assert (=> b!69795 (= e!45676 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30194)))))))

(declare-fun b!69797 () Bool)

(assert (=> b!69797 (= e!45677 (getValueByKey!130 (t!5001 (toList!726 lt!30194)) (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))

(declare-fun b!69796 () Bool)

(assert (=> b!69796 (= e!45676 e!45677)))

(declare-fun c!10049 () Bool)

(assert (=> b!69796 (= c!10049 (and ((_ is Cons!1490) (toList!726 lt!30194)) (not (= (_1!1069 (h!2075 (toList!726 lt!30194))) (_1!1069 (tuple2!2119 lt!29835 lt!29830))))))))

(assert (= (and d!15313 c!10048) b!69795))

(assert (= (and d!15313 (not c!10048)) b!69796))

(assert (= (and b!69796 c!10049) b!69797))

(assert (= (and b!69796 (not c!10049)) b!69798))

(declare-fun m!66239 () Bool)

(assert (=> b!69797 m!66239))

(assert (=> b!69018 d!15313))

(declare-fun d!15315 () Bool)

(declare-fun e!45678 () Bool)

(assert (=> d!15315 e!45678))

(declare-fun res!37374 () Bool)

(assert (=> d!15315 (=> res!37374 e!45678)))

(declare-fun lt!30694 () Bool)

(assert (=> d!15315 (= res!37374 (not lt!30694))))

(declare-fun lt!30695 () Bool)

(assert (=> d!15315 (= lt!30694 lt!30695)))

(declare-fun lt!30693 () Unit!1913)

(declare-fun e!45679 () Unit!1913)

(assert (=> d!15315 (= lt!30693 e!45679)))

(declare-fun c!10050 () Bool)

(assert (=> d!15315 (= c!10050 lt!30695)))

(assert (=> d!15315 (= lt!30695 (containsKey!134 (toList!726 lt!30346) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15315 (= (contains!720 lt!30346 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30694)))

(declare-fun b!69799 () Bool)

(declare-fun lt!30692 () Unit!1913)

(assert (=> b!69799 (= e!45679 lt!30692)))

(assert (=> b!69799 (= lt!30692 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30346) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> b!69799 (isDefined!84 (getValueByKey!130 (toList!726 lt!30346) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69800 () Bool)

(declare-fun Unit!1970 () Unit!1913)

(assert (=> b!69800 (= e!45679 Unit!1970)))

(declare-fun b!69801 () Bool)

(assert (=> b!69801 (= e!45678 (isDefined!84 (getValueByKey!130 (toList!726 lt!30346) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15315 c!10050) b!69799))

(assert (= (and d!15315 (not c!10050)) b!69800))

(assert (= (and d!15315 (not res!37374)) b!69801))

(declare-fun m!66241 () Bool)

(assert (=> d!15315 m!66241))

(declare-fun m!66243 () Bool)

(assert (=> b!69799 m!66243))

(assert (=> b!69799 m!65067))

(assert (=> b!69799 m!65067))

(declare-fun m!66245 () Bool)

(assert (=> b!69799 m!66245))

(assert (=> b!69801 m!65067))

(assert (=> b!69801 m!65067))

(assert (=> b!69801 m!66245))

(assert (=> d!14915 d!15315))

(declare-fun b!69805 () Bool)

(declare-fun e!45681 () Option!136)

(assert (=> b!69805 (= e!45681 None!134)))

(declare-fun d!15317 () Bool)

(declare-fun c!10051 () Bool)

(assert (=> d!15317 (= c!10051 (and ((_ is Cons!1490) lt!30347) (= (_1!1069 (h!2075 lt!30347)) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45680 () Option!136)

(assert (=> d!15317 (= (getValueByKey!130 lt!30347 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45680)))

(declare-fun b!69802 () Bool)

(assert (=> b!69802 (= e!45680 (Some!135 (_2!1069 (h!2075 lt!30347))))))

(declare-fun b!69804 () Bool)

(assert (=> b!69804 (= e!45681 (getValueByKey!130 (t!5001 lt!30347) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69803 () Bool)

(assert (=> b!69803 (= e!45680 e!45681)))

(declare-fun c!10052 () Bool)

(assert (=> b!69803 (= c!10052 (and ((_ is Cons!1490) lt!30347) (not (= (_1!1069 (h!2075 lt!30347)) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15317 c!10051) b!69802))

(assert (= (and d!15317 (not c!10051)) b!69803))

(assert (= (and b!69803 c!10052) b!69804))

(assert (= (and b!69803 (not c!10052)) b!69805))

(declare-fun m!66247 () Bool)

(assert (=> b!69804 m!66247))

(assert (=> d!14915 d!15317))

(declare-fun d!15319 () Bool)

(assert (=> d!15319 (= (getValueByKey!130 lt!30347 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30696 () Unit!1913)

(assert (=> d!15319 (= lt!30696 (choose!390 lt!30347 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!45682 () Bool)

(assert (=> d!15319 e!45682))

(declare-fun res!37375 () Bool)

(assert (=> d!15319 (=> (not res!37375) (not e!45682))))

(assert (=> d!15319 (= res!37375 (isStrictlySorted!285 lt!30347))))

(assert (=> d!15319 (= (lemmaContainsTupThenGetReturnValue!49 lt!30347 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30696)))

(declare-fun b!69806 () Bool)

(declare-fun res!37376 () Bool)

(assert (=> b!69806 (=> (not res!37376) (not e!45682))))

(assert (=> b!69806 (= res!37376 (containsKey!134 lt!30347 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69807 () Bool)

(assert (=> b!69807 (= e!45682 (contains!721 lt!30347 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15319 res!37375) b!69806))

(assert (= (and b!69806 res!37376) b!69807))

(assert (=> d!15319 m!65061))

(declare-fun m!66249 () Bool)

(assert (=> d!15319 m!66249))

(declare-fun m!66251 () Bool)

(assert (=> d!15319 m!66251))

(declare-fun m!66253 () Bool)

(assert (=> b!69806 m!66253))

(declare-fun m!66255 () Bool)

(assert (=> b!69807 m!66255))

(assert (=> d!14915 d!15319))

(declare-fun bm!5978 () Bool)

(declare-fun call!5981 () List!1494)

(declare-fun call!5983 () List!1494)

(assert (=> bm!5978 (= call!5981 call!5983)))

(declare-fun b!69808 () Bool)

(declare-fun e!45686 () List!1494)

(declare-fun call!5982 () List!1494)

(assert (=> b!69808 (= e!45686 call!5982)))

(declare-fun b!69809 () Bool)

(declare-fun e!45685 () List!1494)

(assert (=> b!69809 (= e!45685 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29924)) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69811 () Bool)

(declare-fun res!37378 () Bool)

(declare-fun e!45684 () Bool)

(assert (=> b!69811 (=> (not res!37378) (not e!45684))))

(declare-fun lt!30697 () List!1494)

(assert (=> b!69811 (= res!37378 (containsKey!134 lt!30697 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69812 () Bool)

(declare-fun e!45683 () List!1494)

(declare-fun e!45687 () List!1494)

(assert (=> b!69812 (= e!45683 e!45687)))

(declare-fun c!10053 () Bool)

(assert (=> b!69812 (= c!10053 (and ((_ is Cons!1490) (toList!726 lt!29924)) (= (_1!1069 (h!2075 (toList!726 lt!29924))) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69813 () Bool)

(declare-fun c!10054 () Bool)

(assert (=> b!69813 (= e!45685 (ite c!10053 (t!5001 (toList!726 lt!29924)) (ite c!10054 (Cons!1490 (h!2075 (toList!726 lt!29924)) (t!5001 (toList!726 lt!29924))) Nil!1491)))))

(declare-fun b!69814 () Bool)

(assert (=> b!69814 (= e!45686 call!5982)))

(declare-fun b!69815 () Bool)

(assert (=> b!69815 (= e!45687 call!5981)))

(declare-fun b!69816 () Bool)

(assert (=> b!69816 (= e!45683 call!5983)))

(declare-fun bm!5979 () Bool)

(declare-fun c!10055 () Bool)

(assert (=> bm!5979 (= call!5983 ($colon$colon!63 e!45685 (ite c!10055 (h!2075 (toList!726 lt!29924)) (tuple2!2119 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!10056 () Bool)

(assert (=> bm!5979 (= c!10056 c!10055)))

(declare-fun b!69817 () Bool)

(assert (=> b!69817 (= e!45684 (contains!721 lt!30697 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun bm!5980 () Bool)

(assert (=> bm!5980 (= call!5982 call!5981)))

(declare-fun b!69810 () Bool)

(assert (=> b!69810 (= c!10054 (and ((_ is Cons!1490) (toList!726 lt!29924)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29924))) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!69810 (= e!45687 e!45686)))

(declare-fun d!15321 () Bool)

(assert (=> d!15321 e!45684))

(declare-fun res!37377 () Bool)

(assert (=> d!15321 (=> (not res!37377) (not e!45684))))

(assert (=> d!15321 (= res!37377 (isStrictlySorted!285 lt!30697))))

(assert (=> d!15321 (= lt!30697 e!45683)))

(assert (=> d!15321 (= c!10055 (and ((_ is Cons!1490) (toList!726 lt!29924)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29924))) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15321 (isStrictlySorted!285 (toList!726 lt!29924))))

(assert (=> d!15321 (= (insertStrictlySorted!51 (toList!726 lt!29924) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30697)))

(assert (= (and d!15321 c!10055) b!69816))

(assert (= (and d!15321 (not c!10055)) b!69812))

(assert (= (and b!69812 c!10053) b!69815))

(assert (= (and b!69812 (not c!10053)) b!69810))

(assert (= (and b!69810 c!10054) b!69814))

(assert (= (and b!69810 (not c!10054)) b!69808))

(assert (= (or b!69814 b!69808) bm!5980))

(assert (= (or b!69815 bm!5980) bm!5978))

(assert (= (or b!69816 bm!5978) bm!5979))

(assert (= (and bm!5979 c!10056) b!69809))

(assert (= (and bm!5979 (not c!10056)) b!69813))

(assert (= (and d!15321 res!37377) b!69811))

(assert (= (and b!69811 res!37378) b!69817))

(declare-fun m!66257 () Bool)

(assert (=> b!69809 m!66257))

(declare-fun m!66259 () Bool)

(assert (=> d!15321 m!66259))

(declare-fun m!66261 () Bool)

(assert (=> d!15321 m!66261))

(declare-fun m!66263 () Bool)

(assert (=> b!69811 m!66263))

(declare-fun m!66265 () Bool)

(assert (=> bm!5979 m!66265))

(declare-fun m!66267 () Bool)

(assert (=> b!69817 m!66267))

(assert (=> d!14915 d!15321))

(declare-fun d!15323 () Bool)

(assert (=> d!15323 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2990 () Bool)

(assert (= bs!2990 d!15323))

(assert (=> bs!2990 m!64813))

(declare-fun m!66269 () Bool)

(assert (=> bs!2990 m!66269))

(assert (=> b!69091 d!15323))

(declare-fun b!69821 () Bool)

(declare-fun e!45689 () Option!136)

(assert (=> b!69821 (= e!45689 None!134)))

(declare-fun d!15325 () Bool)

(declare-fun c!10057 () Bool)

(assert (=> d!15325 (= c!10057 (and ((_ is Cons!1490) (toList!726 lt!29926)) (= (_1!1069 (h!2075 (toList!726 lt!29926))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!45688 () Option!136)

(assert (=> d!15325 (= (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45688)))

(declare-fun b!69818 () Bool)

(assert (=> b!69818 (= e!45688 (Some!135 (_2!1069 (h!2075 (toList!726 lt!29926)))))))

(declare-fun b!69820 () Bool)

(assert (=> b!69820 (= e!45689 (getValueByKey!130 (t!5001 (toList!726 lt!29926)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69819 () Bool)

(assert (=> b!69819 (= e!45688 e!45689)))

(declare-fun c!10058 () Bool)

(assert (=> b!69819 (= c!10058 (and ((_ is Cons!1490) (toList!726 lt!29926)) (not (= (_1!1069 (h!2075 (toList!726 lt!29926))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!15325 c!10057) b!69818))

(assert (= (and d!15325 (not c!10057)) b!69819))

(assert (= (and b!69819 c!10058) b!69820))

(assert (= (and b!69819 (not c!10058)) b!69821))

(assert (=> b!69820 m!64159))

(declare-fun m!66271 () Bool)

(assert (=> b!69820 m!66271))

(assert (=> b!69091 d!15325))

(declare-fun b!69823 () Bool)

(declare-fun res!37380 () Bool)

(declare-fun e!45690 () Bool)

(assert (=> b!69823 (=> (not res!37380) (not e!45690))))

(assert (=> b!69823 (= res!37380 (bvsge (size!2080 (_2!1070 lt!30024)) (_size!388 (_2!1070 lt!30024))))))

(declare-fun b!69822 () Bool)

(declare-fun res!37379 () Bool)

(assert (=> b!69822 (=> (not res!37379) (not e!45690))))

(assert (=> b!69822 (= res!37379 (and (= (size!2077 (_values!2151 (_2!1070 lt!30024))) (bvadd (mask!6113 (_2!1070 lt!30024)) #b00000000000000000000000000000001)) (= (size!2076 (_keys!3812 (_2!1070 lt!30024))) (size!2077 (_values!2151 (_2!1070 lt!30024)))) (bvsge (_size!388 (_2!1070 lt!30024)) #b00000000000000000000000000000000) (bvsle (_size!388 (_2!1070 lt!30024)) (bvadd (mask!6113 (_2!1070 lt!30024)) #b00000000000000000000000000000001))))))

(declare-fun b!69825 () Bool)

(assert (=> b!69825 (= e!45690 (and (bvsge (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000000) (bvsle (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000011) (bvsge (_vacant!388 (_2!1070 lt!30024)) #b00000000000000000000000000000000)))))

(declare-fun d!15327 () Bool)

(declare-fun res!37382 () Bool)

(assert (=> d!15327 (=> (not res!37382) (not e!45690))))

(assert (=> d!15327 (= res!37382 (validMask!0 (mask!6113 (_2!1070 lt!30024))))))

(assert (=> d!15327 (= (simpleValid!48 (_2!1070 lt!30024)) e!45690)))

(declare-fun b!69824 () Bool)

(declare-fun res!37381 () Bool)

(assert (=> b!69824 (=> (not res!37381) (not e!45690))))

(assert (=> b!69824 (= res!37381 (= (size!2080 (_2!1070 lt!30024)) (bvadd (_size!388 (_2!1070 lt!30024)) (bvsdiv (bvadd (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!15327 res!37382) b!69822))

(assert (= (and b!69822 res!37379) b!69823))

(assert (= (and b!69823 res!37380) b!69824))

(assert (= (and b!69824 res!37381) b!69825))

(declare-fun m!66273 () Bool)

(assert (=> b!69823 m!66273))

(declare-fun m!66275 () Bool)

(assert (=> d!15327 m!66275))

(assert (=> b!69824 m!66273))

(assert (=> d!14951 d!15327))

(declare-fun d!15329 () Bool)

(declare-fun res!37383 () Bool)

(declare-fun e!45691 () Bool)

(assert (=> d!15329 (=> res!37383 e!45691)))

(assert (=> d!15329 (= res!37383 (or ((_ is Nil!1491) lt!30057) ((_ is Nil!1491) (t!5001 lt!30057))))))

(assert (=> d!15329 (= (isStrictlySorted!285 lt!30057) e!45691)))

(declare-fun b!69826 () Bool)

(declare-fun e!45692 () Bool)

(assert (=> b!69826 (= e!45691 e!45692)))

(declare-fun res!37384 () Bool)

(assert (=> b!69826 (=> (not res!37384) (not e!45692))))

(assert (=> b!69826 (= res!37384 (bvslt (_1!1069 (h!2075 lt!30057)) (_1!1069 (h!2075 (t!5001 lt!30057)))))))

(declare-fun b!69827 () Bool)

(assert (=> b!69827 (= e!45692 (isStrictlySorted!285 (t!5001 lt!30057)))))

(assert (= (and d!15329 (not res!37383)) b!69826))

(assert (= (and b!69826 res!37384) b!69827))

(declare-fun m!66277 () Bool)

(assert (=> b!69827 m!66277))

(assert (=> d!14773 d!15329))

(declare-fun d!15331 () Bool)

(declare-fun res!37385 () Bool)

(declare-fun e!45693 () Bool)

(assert (=> d!15331 (=> res!37385 e!45693)))

(assert (=> d!15331 (= res!37385 (or ((_ is Nil!1491) (toList!726 lt!29768)) ((_ is Nil!1491) (t!5001 (toList!726 lt!29768)))))))

(assert (=> d!15331 (= (isStrictlySorted!285 (toList!726 lt!29768)) e!45693)))

(declare-fun b!69828 () Bool)

(declare-fun e!45694 () Bool)

(assert (=> b!69828 (= e!45693 e!45694)))

(declare-fun res!37386 () Bool)

(assert (=> b!69828 (=> (not res!37386) (not e!45694))))

(assert (=> b!69828 (= res!37386 (bvslt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 (h!2075 (t!5001 (toList!726 lt!29768))))))))

(declare-fun b!69829 () Bool)

(assert (=> b!69829 (= e!45694 (isStrictlySorted!285 (t!5001 (toList!726 lt!29768))))))

(assert (= (and d!15331 (not res!37385)) b!69828))

(assert (= (and b!69828 res!37386) b!69829))

(assert (=> b!69829 m!65301))

(assert (=> d!14773 d!15331))

(declare-fun d!15333 () Bool)

(declare-fun e!45695 () Bool)

(assert (=> d!15333 e!45695))

(declare-fun res!37387 () Bool)

(assert (=> d!15333 (=> res!37387 e!45695)))

(declare-fun lt!30700 () Bool)

(assert (=> d!15333 (= res!37387 (not lt!30700))))

(declare-fun lt!30701 () Bool)

(assert (=> d!15333 (= lt!30700 lt!30701)))

(declare-fun lt!30699 () Unit!1913)

(declare-fun e!45696 () Unit!1913)

(assert (=> d!15333 (= lt!30699 e!45696)))

(declare-fun c!10059 () Bool)

(assert (=> d!15333 (= c!10059 lt!30701)))

(assert (=> d!15333 (= lt!30701 (containsKey!134 (toList!726 lt!30330) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15333 (= (contains!720 lt!30330 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!30700)))

(declare-fun b!69830 () Bool)

(declare-fun lt!30698 () Unit!1913)

(assert (=> b!69830 (= e!45696 lt!30698)))

(assert (=> b!69830 (= lt!30698 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30330) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!69830 (isDefined!84 (getValueByKey!130 (toList!726 lt!30330) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69831 () Bool)

(declare-fun Unit!1971 () Unit!1913)

(assert (=> b!69831 (= e!45696 Unit!1971)))

(declare-fun b!69832 () Bool)

(assert (=> b!69832 (= e!45695 (isDefined!84 (getValueByKey!130 (toList!726 lt!30330) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15333 c!10059) b!69830))

(assert (= (and d!15333 (not c!10059)) b!69831))

(assert (= (and d!15333 (not res!37387)) b!69832))

(declare-fun m!66279 () Bool)

(assert (=> d!15333 m!66279))

(declare-fun m!66281 () Bool)

(assert (=> b!69830 m!66281))

(assert (=> b!69830 m!65013))

(assert (=> b!69830 m!65013))

(declare-fun m!66283 () Bool)

(assert (=> b!69830 m!66283))

(assert (=> b!69832 m!65013))

(assert (=> b!69832 m!65013))

(assert (=> b!69832 m!66283))

(assert (=> d!14893 d!15333))

(declare-fun b!69836 () Bool)

(declare-fun e!45698 () Option!136)

(assert (=> b!69836 (= e!45698 None!134)))

(declare-fun d!15335 () Bool)

(declare-fun c!10060 () Bool)

(assert (=> d!15335 (= c!10060 (and ((_ is Cons!1490) lt!30331) (= (_1!1069 (h!2075 lt!30331)) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun e!45697 () Option!136)

(assert (=> d!15335 (= (getValueByKey!130 lt!30331 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) e!45697)))

(declare-fun b!69833 () Bool)

(assert (=> b!69833 (= e!45697 (Some!135 (_2!1069 (h!2075 lt!30331))))))

(declare-fun b!69835 () Bool)

(assert (=> b!69835 (= e!45698 (getValueByKey!130 (t!5001 lt!30331) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69834 () Bool)

(assert (=> b!69834 (= e!45697 e!45698)))

(declare-fun c!10061 () Bool)

(assert (=> b!69834 (= c!10061 (and ((_ is Cons!1490) lt!30331) (not (= (_1!1069 (h!2075 lt!30331)) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))))

(assert (= (and d!15335 c!10060) b!69833))

(assert (= (and d!15335 (not c!10060)) b!69834))

(assert (= (and b!69834 c!10061) b!69835))

(assert (= (and b!69834 (not c!10061)) b!69836))

(declare-fun m!66285 () Bool)

(assert (=> b!69835 m!66285))

(assert (=> d!14893 d!15335))

(declare-fun d!15337 () Bool)

(assert (=> d!15337 (= (getValueByKey!130 lt!30331 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) (Some!135 (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun lt!30702 () Unit!1913)

(assert (=> d!15337 (= lt!30702 (choose!390 lt!30331 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45699 () Bool)

(assert (=> d!15337 e!45699))

(declare-fun res!37388 () Bool)

(assert (=> d!15337 (=> (not res!37388) (not e!45699))))

(assert (=> d!15337 (= res!37388 (isStrictlySorted!285 lt!30331))))

(assert (=> d!15337 (= (lemmaContainsTupThenGetReturnValue!49 lt!30331 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!30702)))

(declare-fun b!69837 () Bool)

(declare-fun res!37389 () Bool)

(assert (=> b!69837 (=> (not res!37389) (not e!45699))))

(assert (=> b!69837 (= res!37389 (containsKey!134 lt!30331 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69838 () Bool)

(assert (=> b!69838 (= e!45699 (contains!721 lt!30331 (tuple2!2119 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15337 res!37388) b!69837))

(assert (= (and b!69837 res!37389) b!69838))

(assert (=> d!15337 m!65007))

(declare-fun m!66287 () Bool)

(assert (=> d!15337 m!66287))

(declare-fun m!66289 () Bool)

(assert (=> d!15337 m!66289))

(declare-fun m!66291 () Bool)

(assert (=> b!69837 m!66291))

(declare-fun m!66293 () Bool)

(assert (=> b!69838 m!66293))

(assert (=> d!14893 d!15337))

(declare-fun bm!5981 () Bool)

(declare-fun call!5984 () List!1494)

(declare-fun call!5986 () List!1494)

(assert (=> bm!5981 (= call!5984 call!5986)))

(declare-fun b!69839 () Bool)

(declare-fun e!45703 () List!1494)

(declare-fun call!5985 () List!1494)

(assert (=> b!69839 (= e!45703 call!5985)))

(declare-fun e!45702 () List!1494)

(declare-fun b!69840 () Bool)

(assert (=> b!69840 (= e!45702 (insertStrictlySorted!51 (t!5001 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69842 () Bool)

(declare-fun res!37391 () Bool)

(declare-fun e!45701 () Bool)

(assert (=> b!69842 (=> (not res!37391) (not e!45701))))

(declare-fun lt!30703 () List!1494)

(assert (=> b!69842 (= res!37391 (containsKey!134 lt!30703 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69843 () Bool)

(declare-fun e!45700 () List!1494)

(declare-fun e!45704 () List!1494)

(assert (=> b!69843 (= e!45700 e!45704)))

(declare-fun c!10062 () Bool)

(assert (=> b!69843 (= c!10062 (and ((_ is Cons!1490) (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)))) (= (_1!1069 (h!2075 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780))))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!10063 () Bool)

(declare-fun b!69844 () Bool)

(assert (=> b!69844 (= e!45702 (ite c!10062 (t!5001 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)))) (ite c!10063 (Cons!1490 (h!2075 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)))) (t!5001 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780))))) Nil!1491)))))

(declare-fun b!69845 () Bool)

(assert (=> b!69845 (= e!45703 call!5985)))

(declare-fun b!69846 () Bool)

(assert (=> b!69846 (= e!45704 call!5984)))

(declare-fun b!69847 () Bool)

(assert (=> b!69847 (= e!45700 call!5986)))

(declare-fun bm!5982 () Bool)

(declare-fun c!10064 () Bool)

(assert (=> bm!5982 (= call!5986 ($colon$colon!63 e!45702 (ite c!10064 (h!2075 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)))) (tuple2!2119 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))))

(declare-fun c!10065 () Bool)

(assert (=> bm!5982 (= c!10065 c!10064)))

(declare-fun b!69848 () Bool)

(assert (=> b!69848 (= e!45701 (contains!721 lt!30703 (tuple2!2119 (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun bm!5983 () Bool)

(assert (=> bm!5983 (= call!5985 call!5984)))

(declare-fun b!69841 () Bool)

(assert (=> b!69841 (= c!10063 (and ((_ is Cons!1490) (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)))) (bvsgt (_1!1069 (h!2075 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780))))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (=> b!69841 (= e!45704 e!45703)))

(declare-fun d!15339 () Bool)

(assert (=> d!15339 e!45701))

(declare-fun res!37390 () Bool)

(assert (=> d!15339 (=> (not res!37390) (not e!45701))))

(assert (=> d!15339 (= res!37390 (isStrictlySorted!285 lt!30703))))

(assert (=> d!15339 (= lt!30703 e!45700)))

(assert (=> d!15339 (= c!10064 (and ((_ is Cons!1490) (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780)))) (bvslt (_1!1069 (h!2075 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780))))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (=> d!15339 (isStrictlySorted!285 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780))))))

(assert (=> d!15339 (= (insertStrictlySorted!51 (toList!726 (ite c!9708 call!5781 (ite c!9712 call!5779 call!5780))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (_2!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!30703)))

(assert (= (and d!15339 c!10064) b!69847))

(assert (= (and d!15339 (not c!10064)) b!69843))

(assert (= (and b!69843 c!10062) b!69846))

(assert (= (and b!69843 (not c!10062)) b!69841))

(assert (= (and b!69841 c!10063) b!69845))

(assert (= (and b!69841 (not c!10063)) b!69839))

(assert (= (or b!69845 b!69839) bm!5983))

(assert (= (or b!69846 bm!5983) bm!5981))

(assert (= (or b!69847 bm!5981) bm!5982))

(assert (= (and bm!5982 c!10065) b!69840))

(assert (= (and bm!5982 (not c!10065)) b!69844))

(assert (= (and d!15339 res!37390) b!69842))

(assert (= (and b!69842 res!37391) b!69848))

(declare-fun m!66295 () Bool)

(assert (=> b!69840 m!66295))

(declare-fun m!66297 () Bool)

(assert (=> d!15339 m!66297))

(declare-fun m!66299 () Bool)

(assert (=> d!15339 m!66299))

(declare-fun m!66301 () Bool)

(assert (=> b!69842 m!66301))

(declare-fun m!66303 () Bool)

(assert (=> bm!5982 m!66303))

(declare-fun m!66305 () Bool)

(assert (=> b!69848 m!66305))

(assert (=> d!14893 d!15339))

(assert (=> d!14835 d!14981))

(declare-fun d!15341 () Bool)

(declare-fun res!37392 () Bool)

(declare-fun e!45705 () Bool)

(assert (=> d!15341 (=> res!37392 e!45705)))

(assert (=> d!15341 (= res!37392 (or ((_ is Nil!1491) lt!30327) ((_ is Nil!1491) (t!5001 lt!30327))))))

(assert (=> d!15341 (= (isStrictlySorted!285 lt!30327) e!45705)))

(declare-fun b!69849 () Bool)

(declare-fun e!45706 () Bool)

(assert (=> b!69849 (= e!45705 e!45706)))

(declare-fun res!37393 () Bool)

(assert (=> b!69849 (=> (not res!37393) (not e!45706))))

(assert (=> b!69849 (= res!37393 (bvslt (_1!1069 (h!2075 lt!30327)) (_1!1069 (h!2075 (t!5001 lt!30327)))))))

(declare-fun b!69850 () Bool)

(assert (=> b!69850 (= e!45706 (isStrictlySorted!285 (t!5001 lt!30327)))))

(assert (= (and d!15341 (not res!37392)) b!69849))

(assert (= (and b!69849 res!37393) b!69850))

(declare-fun m!66307 () Bool)

(assert (=> b!69850 m!66307))

(assert (=> d!14891 d!15341))

(declare-fun d!15343 () Bool)

(declare-fun res!37394 () Bool)

(declare-fun e!45707 () Bool)

(assert (=> d!15343 (=> res!37394 e!45707)))

(assert (=> d!15343 (= res!37394 (or ((_ is Nil!1491) (toList!726 (+!89 lt!29768 lt!29777))) ((_ is Nil!1491) (t!5001 (toList!726 (+!89 lt!29768 lt!29777))))))))

(assert (=> d!15343 (= (isStrictlySorted!285 (toList!726 (+!89 lt!29768 lt!29777))) e!45707)))

(declare-fun b!69851 () Bool)

(declare-fun e!45708 () Bool)

(assert (=> b!69851 (= e!45707 e!45708)))

(declare-fun res!37395 () Bool)

(assert (=> b!69851 (=> (not res!37395) (not e!45708))))

(assert (=> b!69851 (= res!37395 (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29777)))) (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))))))))

(declare-fun b!69852 () Bool)

(assert (=> b!69852 (= e!45708 (isStrictlySorted!285 (t!5001 (toList!726 (+!89 lt!29768 lt!29777)))))))

(assert (= (and d!15343 (not res!37394)) b!69851))

(assert (= (and b!69851 res!37395) b!69852))

(assert (=> b!69852 m!65825))

(assert (=> d!14891 d!15343))

(declare-fun d!15345 () Bool)

(declare-fun e!45709 () Bool)

(assert (=> d!15345 e!45709))

(declare-fun res!37397 () Bool)

(assert (=> d!15345 (=> (not res!37397) (not e!45709))))

(declare-fun lt!30706 () ListLongMap!1421)

(assert (=> d!15345 (= res!37397 (contains!720 lt!30706 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun lt!30707 () List!1494)

(assert (=> d!15345 (= lt!30706 (ListLongMap!1422 lt!30707))))

(declare-fun lt!30704 () Unit!1913)

(declare-fun lt!30705 () Unit!1913)

(assert (=> d!15345 (= lt!30704 lt!30705)))

(assert (=> d!15345 (= (getValueByKey!130 lt!30707 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15345 (= lt!30705 (lemmaContainsTupThenGetReturnValue!49 lt!30707 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15345 (= lt!30707 (insertStrictlySorted!51 (toList!726 call!5914) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15345 (= (+!89 call!5914 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) lt!30706)))

(declare-fun b!69853 () Bool)

(declare-fun res!37396 () Bool)

(assert (=> b!69853 (=> (not res!37396) (not e!45709))))

(assert (=> b!69853 (= res!37396 (= (getValueByKey!130 (toList!726 lt!30706) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun b!69854 () Bool)

(assert (=> b!69854 (= e!45709 (contains!721 (toList!726 lt!30706) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(assert (= (and d!15345 res!37397) b!69853))

(assert (= (and b!69853 res!37396) b!69854))

(declare-fun m!66309 () Bool)

(assert (=> d!15345 m!66309))

(declare-fun m!66311 () Bool)

(assert (=> d!15345 m!66311))

(declare-fun m!66313 () Bool)

(assert (=> d!15345 m!66313))

(declare-fun m!66315 () Bool)

(assert (=> d!15345 m!66315))

(declare-fun m!66317 () Bool)

(assert (=> b!69853 m!66317))

(declare-fun m!66319 () Bool)

(assert (=> b!69854 m!66319))

(assert (=> b!69146 d!15345))

(declare-fun d!15347 () Bool)

(declare-fun lt!30708 () Bool)

(assert (=> d!15347 (= lt!30708 (select (content!72 (toList!726 lt!30411)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(declare-fun e!45710 () Bool)

(assert (=> d!15347 (= lt!30708 e!45710)))

(declare-fun res!37399 () Bool)

(assert (=> d!15347 (=> (not res!37399) (not e!45710))))

(assert (=> d!15347 (= res!37399 ((_ is Cons!1490) (toList!726 lt!30411)))))

(assert (=> d!15347 (= (contains!721 (toList!726 lt!30411) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30708)))

(declare-fun b!69855 () Bool)

(declare-fun e!45711 () Bool)

(assert (=> b!69855 (= e!45710 e!45711)))

(declare-fun res!37398 () Bool)

(assert (=> b!69855 (=> res!37398 e!45711)))

(assert (=> b!69855 (= res!37398 (= (h!2075 (toList!726 lt!30411)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(declare-fun b!69856 () Bool)

(assert (=> b!69856 (= e!45711 (contains!721 (t!5001 (toList!726 lt!30411)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!15347 res!37399) b!69855))

(assert (= (and b!69855 (not res!37398)) b!69856))

(declare-fun m!66321 () Bool)

(assert (=> d!15347 m!66321))

(declare-fun m!66323 () Bool)

(assert (=> d!15347 m!66323))

(declare-fun m!66325 () Bool)

(assert (=> b!69856 m!66325))

(assert (=> b!69291 d!15347))

(declare-fun b!69860 () Bool)

(declare-fun e!45713 () Option!136)

(assert (=> b!69860 (= e!45713 None!134)))

(declare-fun d!15349 () Bool)

(declare-fun c!10066 () Bool)

(assert (=> d!15349 (= c!10066 (and ((_ is Cons!1490) (t!5001 lt!29863)) (= (_1!1069 (h!2075 (t!5001 lt!29863))) (_1!1069 lt!29777))))))

(declare-fun e!45712 () Option!136)

(assert (=> d!15349 (= (getValueByKey!130 (t!5001 lt!29863) (_1!1069 lt!29777)) e!45712)))

(declare-fun b!69857 () Bool)

(assert (=> b!69857 (= e!45712 (Some!135 (_2!1069 (h!2075 (t!5001 lt!29863)))))))

(declare-fun b!69859 () Bool)

(assert (=> b!69859 (= e!45713 (getValueByKey!130 (t!5001 (t!5001 lt!29863)) (_1!1069 lt!29777)))))

(declare-fun b!69858 () Bool)

(assert (=> b!69858 (= e!45712 e!45713)))

(declare-fun c!10067 () Bool)

(assert (=> b!69858 (= c!10067 (and ((_ is Cons!1490) (t!5001 lt!29863)) (not (= (_1!1069 (h!2075 (t!5001 lt!29863))) (_1!1069 lt!29777)))))))

(assert (= (and d!15349 c!10066) b!69857))

(assert (= (and d!15349 (not c!10066)) b!69858))

(assert (= (and b!69858 c!10067) b!69859))

(assert (= (and b!69858 (not c!10067)) b!69860))

(declare-fun m!66327 () Bool)

(assert (=> b!69859 m!66327))

(assert (=> b!69159 d!15349))

(declare-fun d!15351 () Bool)

(assert (=> d!15351 (= (apply!73 lt!30393 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30393) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2991 () Bool)

(assert (= bs!2991 d!15351))

(assert (=> bs!2991 m!66131))

(assert (=> bs!2991 m!66131))

(declare-fun m!66329 () Bool)

(assert (=> bs!2991 m!66329))

(assert (=> b!69259 d!15351))

(declare-fun d!15353 () Bool)

(assert (=> d!15353 (= (apply!73 lt!30254 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30254) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2992 () Bool)

(assert (= bs!2992 d!15353))

(assert (=> bs!2992 m!66139))

(assert (=> bs!2992 m!66139))

(declare-fun m!66331 () Bool)

(assert (=> bs!2992 m!66331))

(assert (=> b!69078 d!15353))

(declare-fun b!69864 () Bool)

(declare-fun e!45715 () Option!136)

(assert (=> b!69864 (= e!45715 None!134)))

(declare-fun d!15355 () Bool)

(declare-fun c!10068 () Bool)

(assert (=> d!15355 (= c!10068 (and ((_ is Cons!1490) (toList!726 lt!30034)) (= (_1!1069 (h!2075 (toList!726 lt!30034))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45714 () Option!136)

(assert (=> d!15355 (= (getValueByKey!130 (toList!726 lt!30034) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45714)))

(declare-fun b!69861 () Bool)

(assert (=> b!69861 (= e!45714 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30034)))))))

(declare-fun b!69863 () Bool)

(assert (=> b!69863 (= e!45715 (getValueByKey!130 (t!5001 (toList!726 lt!30034)) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69862 () Bool)

(assert (=> b!69862 (= e!45714 e!45715)))

(declare-fun c!10069 () Bool)

(assert (=> b!69862 (= c!10069 (and ((_ is Cons!1490) (toList!726 lt!30034)) (not (= (_1!1069 (h!2075 (toList!726 lt!30034))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15355 c!10068) b!69861))

(assert (= (and d!15355 (not c!10068)) b!69862))

(assert (= (and b!69862 c!10069) b!69863))

(assert (= (and b!69862 (not c!10069)) b!69864))

(declare-fun m!66333 () Bool)

(assert (=> b!69863 m!66333))

(assert (=> b!68800 d!15355))

(declare-fun d!15357 () Bool)

(assert (=> d!15357 (isDefined!84 (getValueByKey!130 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(declare-fun lt!30709 () Unit!1913)

(assert (=> d!15357 (= lt!30709 (choose!395 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(declare-fun e!45716 () Bool)

(assert (=> d!15357 e!45716))

(declare-fun res!37400 () Bool)

(assert (=> d!15357 (=> (not res!37400) (not e!45716))))

(assert (=> d!15357 (= res!37400 (isStrictlySorted!285 (toList!726 call!5844)))))

(assert (=> d!15357 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))) lt!30709)))

(declare-fun b!69865 () Bool)

(assert (=> b!69865 (= e!45716 (containsKey!134 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(assert (= (and d!15357 res!37400) b!69865))

(assert (=> d!15357 m!64325))

(assert (=> d!15357 m!65143))

(assert (=> d!15357 m!65143))

(assert (=> d!15357 m!65145))

(assert (=> d!15357 m!64325))

(declare-fun m!66335 () Bool)

(assert (=> d!15357 m!66335))

(declare-fun m!66337 () Bool)

(assert (=> d!15357 m!66337))

(assert (=> b!69865 m!64325))

(assert (=> b!69865 m!65139))

(assert (=> b!69234 d!15357))

(assert (=> b!69234 d!15093))

(assert (=> b!69234 d!15095))

(assert (=> d!14857 d!14859))

(assert (=> d!14857 d!14861))

(declare-fun d!15359 () Bool)

(assert (=> d!15359 (isDefined!84 (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!15359 true))

(declare-fun _$12!317 () Unit!1913)

(assert (=> d!15359 (= (choose!395 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) _$12!317)))

(declare-fun bs!2993 () Bool)

(assert (= bs!2993 d!15359))

(assert (=> bs!2993 m!64043))

(assert (=> bs!2993 m!64317))

(assert (=> bs!2993 m!64317))

(assert (=> bs!2993 m!64319))

(assert (=> d!14857 d!15359))

(declare-fun d!15361 () Bool)

(declare-fun res!37401 () Bool)

(declare-fun e!45717 () Bool)

(assert (=> d!15361 (=> res!37401 e!45717)))

(assert (=> d!15361 (= res!37401 (or ((_ is Nil!1491) (toList!726 lt!29772)) ((_ is Nil!1491) (t!5001 (toList!726 lt!29772)))))))

(assert (=> d!15361 (= (isStrictlySorted!285 (toList!726 lt!29772)) e!45717)))

(declare-fun b!69866 () Bool)

(declare-fun e!45718 () Bool)

(assert (=> b!69866 (= e!45717 e!45718)))

(declare-fun res!37402 () Bool)

(assert (=> b!69866 (=> (not res!37402) (not e!45718))))

(assert (=> b!69866 (= res!37402 (bvslt (_1!1069 (h!2075 (toList!726 lt!29772))) (_1!1069 (h!2075 (t!5001 (toList!726 lt!29772))))))))

(declare-fun b!69867 () Bool)

(assert (=> b!69867 (= e!45718 (isStrictlySorted!285 (t!5001 (toList!726 lt!29772))))))

(assert (= (and d!15361 (not res!37401)) b!69866))

(assert (= (and b!69866 res!37402) b!69867))

(declare-fun m!66339 () Bool)

(assert (=> b!69867 m!66339))

(assert (=> d!14857 d!15361))

(declare-fun d!15363 () Bool)

(assert (=> d!15363 (= (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916)) (not (isEmpty!316 (getValueByKey!130 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916))))))

(declare-fun bs!2994 () Bool)

(assert (= bs!2994 d!15363))

(assert (=> bs!2994 m!65123))

(declare-fun m!66341 () Bool)

(assert (=> bs!2994 m!66341))

(assert (=> b!69231 d!15363))

(declare-fun b!69871 () Bool)

(declare-fun e!45720 () Option!136)

(assert (=> b!69871 (= e!45720 None!134)))

(declare-fun c!10070 () Bool)

(declare-fun d!15365 () Bool)

(assert (=> d!15365 (= c!10070 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29916)))))

(declare-fun e!45719 () Option!136)

(assert (=> d!15365 (= (getValueByKey!130 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916) e!45719)))

(declare-fun b!69868 () Bool)

(assert (=> b!69868 (= e!45719 (Some!135 (_2!1069 (h!2075 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))))

(declare-fun b!69870 () Bool)

(assert (=> b!69870 (= e!45720 (getValueByKey!130 (t!5001 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!29916))))

(declare-fun b!69869 () Bool)

(assert (=> b!69869 (= e!45719 e!45720)))

(declare-fun c!10071 () Bool)

(assert (=> b!69869 (= c!10071 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (not (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29916))))))

(assert (= (and d!15365 c!10070) b!69868))

(assert (= (and d!15365 (not c!10070)) b!69869))

(assert (= (and b!69869 c!10071) b!69870))

(assert (= (and b!69869 (not c!10071)) b!69871))

(declare-fun m!66343 () Bool)

(assert (=> b!69870 m!66343))

(assert (=> b!69231 d!15365))

(declare-fun d!15367 () Bool)

(assert (=> d!15367 (isDefined!84 (getValueByKey!130 (toList!726 lt!29862) (_1!1069 lt!29777)))))

(declare-fun lt!30710 () Unit!1913)

(assert (=> d!15367 (= lt!30710 (choose!395 (toList!726 lt!29862) (_1!1069 lt!29777)))))

(declare-fun e!45721 () Bool)

(assert (=> d!15367 e!45721))

(declare-fun res!37403 () Bool)

(assert (=> d!15367 (=> (not res!37403) (not e!45721))))

(assert (=> d!15367 (= res!37403 (isStrictlySorted!285 (toList!726 lt!29862)))))

(assert (=> d!15367 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29862) (_1!1069 lt!29777)) lt!30710)))

(declare-fun b!69872 () Bool)

(assert (=> b!69872 (= e!45721 (containsKey!134 (toList!726 lt!29862) (_1!1069 lt!29777)))))

(assert (= (and d!15367 res!37403) b!69872))

(assert (=> d!15367 m!64239))

(assert (=> d!15367 m!64239))

(assert (=> d!15367 m!64937))

(declare-fun m!66345 () Bool)

(assert (=> d!15367 m!66345))

(declare-fun m!66347 () Bool)

(assert (=> d!15367 m!66347))

(assert (=> b!69872 m!64933))

(assert (=> b!69154 d!15367))

(assert (=> b!69154 d!15087))

(assert (=> b!69154 d!14949))

(declare-fun d!15369 () Bool)

(declare-fun res!37404 () Bool)

(declare-fun e!45722 () Bool)

(assert (=> d!15369 (=> res!37404 e!45722)))

(assert (=> d!15369 (= res!37404 (and ((_ is Cons!1490) (toList!726 lt!29851)) (= (_1!1069 (h!2075 (toList!726 lt!29851))) (_1!1069 lt!29775))))))

(assert (=> d!15369 (= (containsKey!134 (toList!726 lt!29851) (_1!1069 lt!29775)) e!45722)))

(declare-fun b!69873 () Bool)

(declare-fun e!45723 () Bool)

(assert (=> b!69873 (= e!45722 e!45723)))

(declare-fun res!37405 () Bool)

(assert (=> b!69873 (=> (not res!37405) (not e!45723))))

(assert (=> b!69873 (= res!37405 (and (or (not ((_ is Cons!1490) (toList!726 lt!29851))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29851))) (_1!1069 lt!29775))) ((_ is Cons!1490) (toList!726 lt!29851)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29851))) (_1!1069 lt!29775))))))

(declare-fun b!69874 () Bool)

(assert (=> b!69874 (= e!45723 (containsKey!134 (t!5001 (toList!726 lt!29851)) (_1!1069 lt!29775)))))

(assert (= (and d!15369 (not res!37404)) b!69873))

(assert (= (and b!69873 res!37405) b!69874))

(declare-fun m!66349 () Bool)

(assert (=> b!69874 m!66349))

(assert (=> d!14767 d!15369))

(declare-fun d!15371 () Bool)

(declare-fun res!37406 () Bool)

(declare-fun e!45724 () Bool)

(assert (=> d!15371 (=> res!37406 e!45724)))

(assert (=> d!15371 (= res!37406 (and ((_ is Cons!1490) (toList!726 lt!29847)) (= (_1!1069 (h!2075 (toList!726 lt!29847))) (_1!1069 lt!29777))))))

(assert (=> d!15371 (= (containsKey!134 (toList!726 lt!29847) (_1!1069 lt!29777)) e!45724)))

(declare-fun b!69875 () Bool)

(declare-fun e!45725 () Bool)

(assert (=> b!69875 (= e!45724 e!45725)))

(declare-fun res!37407 () Bool)

(assert (=> b!69875 (=> (not res!37407) (not e!45725))))

(assert (=> b!69875 (= res!37407 (and (or (not ((_ is Cons!1490) (toList!726 lt!29847))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29847))) (_1!1069 lt!29777))) ((_ is Cons!1490) (toList!726 lt!29847)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29847))) (_1!1069 lt!29777))))))

(declare-fun b!69876 () Bool)

(assert (=> b!69876 (= e!45725 (containsKey!134 (t!5001 (toList!726 lt!29847)) (_1!1069 lt!29777)))))

(assert (= (and d!15371 (not res!37406)) b!69875))

(assert (= (and b!69875 res!37407) b!69876))

(declare-fun m!66351 () Bool)

(assert (=> b!69876 m!66351))

(assert (=> d!14845 d!15371))

(assert (=> b!69051 d!15083))

(assert (=> d!14941 d!14981))

(declare-fun d!15373 () Bool)

(assert (=> d!15373 (= (get!1137 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2499 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14863 d!15373))

(assert (=> d!14863 d!15325))

(declare-fun d!15375 () Bool)

(assert (=> d!15375 (= (apply!73 lt!30158 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1137 (getValueByKey!130 (toList!726 lt!30158) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!2995 () Bool)

(assert (= bs!2995 d!15375))

(assert (=> bs!2995 m!64529))

(declare-fun m!66353 () Bool)

(assert (=> bs!2995 m!66353))

(assert (=> bs!2995 m!66353))

(declare-fun m!66355 () Bool)

(assert (=> bs!2995 m!66355))

(assert (=> b!68918 d!15375))

(assert (=> b!68918 d!15117))

(declare-fun b!69880 () Bool)

(declare-fun e!45727 () Option!136)

(assert (=> b!69880 (= e!45727 None!134)))

(declare-fun c!10072 () Bool)

(declare-fun d!15377 () Bool)

(assert (=> d!15377 (= c!10072 (and ((_ is Cons!1490) (toList!726 lt!30346)) (= (_1!1069 (h!2075 (toList!726 lt!30346))) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45726 () Option!136)

(assert (=> d!15377 (= (getValueByKey!130 (toList!726 lt!30346) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45726)))

(declare-fun b!69877 () Bool)

(assert (=> b!69877 (= e!45726 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30346)))))))

(declare-fun b!69879 () Bool)

(assert (=> b!69879 (= e!45727 (getValueByKey!130 (t!5001 (toList!726 lt!30346)) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!69878 () Bool)

(assert (=> b!69878 (= e!45726 e!45727)))

(declare-fun c!10073 () Bool)

(assert (=> b!69878 (= c!10073 (and ((_ is Cons!1490) (toList!726 lt!30346)) (not (= (_1!1069 (h!2075 (toList!726 lt!30346))) (_1!1069 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15377 c!10072) b!69877))

(assert (= (and d!15377 (not c!10072)) b!69878))

(assert (= (and b!69878 c!10073) b!69879))

(assert (= (and b!69878 (not c!10073)) b!69880))

(declare-fun m!66357 () Bool)

(assert (=> b!69879 m!66357))

(assert (=> b!69221 d!15377))

(declare-fun d!15379 () Bool)

(assert (=> d!15379 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30711 () Unit!1913)

(assert (=> d!15379 (= lt!30711 (choose!395 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45728 () Bool)

(assert (=> d!15379 e!45728))

(declare-fun res!37408 () Bool)

(assert (=> d!15379 (=> (not res!37408) (not e!45728))))

(assert (=> d!15379 (= res!37408 (isStrictlySorted!285 (toList!726 lt!29836)))))

(assert (=> d!15379 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000) lt!30711)))

(declare-fun b!69881 () Bool)

(assert (=> b!69881 (= e!45728 (containsKey!134 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15379 res!37408) b!69881))

(assert (=> d!15379 m!64973))

(assert (=> d!15379 m!64973))

(assert (=> d!15379 m!64975))

(declare-fun m!66359 () Bool)

(assert (=> d!15379 m!66359))

(declare-fun m!66361 () Bool)

(assert (=> d!15379 m!66361))

(assert (=> b!69881 m!64969))

(assert (=> b!69175 d!15379))

(assert (=> b!69175 d!15123))

(assert (=> b!69175 d!15125))

(declare-fun d!15381 () Bool)

(assert (=> d!15381 (isDefined!84 (getValueByKey!130 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun lt!30712 () Unit!1913)

(assert (=> d!15381 (= lt!30712 (choose!395 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun e!45729 () Bool)

(assert (=> d!15381 e!45729))

(declare-fun res!37409 () Bool)

(assert (=> d!15381 (=> (not res!37409) (not e!45729))))

(assert (=> d!15381 (= res!37409 (isStrictlySorted!285 (toList!726 call!5850)))))

(assert (=> d!15381 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30712)))

(declare-fun b!69882 () Bool)

(assert (=> b!69882 (= e!45729 (containsKey!134 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!15381 res!37409) b!69882))

(assert (=> d!15381 m!64043))

(assert (=> d!15381 m!64523))

(assert (=> d!15381 m!64523))

(assert (=> d!15381 m!64525))

(assert (=> d!15381 m!64043))

(declare-fun m!66363 () Bool)

(assert (=> d!15381 m!66363))

(declare-fun m!66365 () Bool)

(assert (=> d!15381 m!66365))

(assert (=> b!69882 m!64043))

(assert (=> b!69882 m!64519))

(assert (=> b!68910 d!15381))

(assert (=> b!68910 d!15101))

(assert (=> b!68910 d!15103))

(declare-fun d!15383 () Bool)

(declare-fun res!37410 () Bool)

(declare-fun e!45730 () Bool)

(assert (=> d!15383 (=> res!37410 e!45730)))

(assert (=> d!15383 (= res!37410 (and ((_ is Cons!1490) lt!30275) (= (_1!1069 (h!2075 lt!30275)) (_1!1069 lt!29777))))))

(assert (=> d!15383 (= (containsKey!134 lt!30275 (_1!1069 lt!29777)) e!45730)))

(declare-fun b!69883 () Bool)

(declare-fun e!45731 () Bool)

(assert (=> b!69883 (= e!45730 e!45731)))

(declare-fun res!37411 () Bool)

(assert (=> b!69883 (=> (not res!37411) (not e!45731))))

(assert (=> b!69883 (= res!37411 (and (or (not ((_ is Cons!1490) lt!30275)) (bvsle (_1!1069 (h!2075 lt!30275)) (_1!1069 lt!29777))) ((_ is Cons!1490) lt!30275) (bvslt (_1!1069 (h!2075 lt!30275)) (_1!1069 lt!29777))))))

(declare-fun b!69884 () Bool)

(assert (=> b!69884 (= e!45731 (containsKey!134 (t!5001 lt!30275) (_1!1069 lt!29777)))))

(assert (= (and d!15383 (not res!37410)) b!69883))

(assert (= (and b!69883 res!37411) b!69884))

(declare-fun m!66367 () Bool)

(assert (=> b!69884 m!66367))

(assert (=> b!69106 d!15383))

(declare-fun d!15385 () Bool)

(assert (=> d!15385 (= (isDefined!84 (getValueByKey!130 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) (not (isEmpty!316 (getValueByKey!130 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(declare-fun bs!2996 () Bool)

(assert (= bs!2996 d!15385))

(assert (=> bs!2996 m!64601))

(declare-fun m!66369 () Bool)

(assert (=> bs!2996 m!66369))

(assert (=> b!68990 d!15385))

(declare-fun b!69888 () Bool)

(declare-fun e!45733 () Option!136)

(assert (=> b!69888 (= e!45733 None!134)))

(declare-fun d!15387 () Bool)

(declare-fun c!10074 () Bool)

(assert (=> d!15387 (= c!10074 (and ((_ is Cons!1490) (toList!726 e!45064)) (= (_1!1069 (h!2075 (toList!726 e!45064))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun e!45732 () Option!136)

(assert (=> d!15387 (= (getValueByKey!130 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45732)))

(declare-fun b!69885 () Bool)

(assert (=> b!69885 (= e!45732 (Some!135 (_2!1069 (h!2075 (toList!726 e!45064)))))))

(declare-fun b!69887 () Bool)

(assert (=> b!69887 (= e!45733 (getValueByKey!130 (t!5001 (toList!726 e!45064)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!69886 () Bool)

(assert (=> b!69886 (= e!45732 e!45733)))

(declare-fun c!10075 () Bool)

(assert (=> b!69886 (= c!10075 (and ((_ is Cons!1490) (toList!726 e!45064)) (not (= (_1!1069 (h!2075 (toList!726 e!45064))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(assert (= (and d!15387 c!10074) b!69885))

(assert (= (and d!15387 (not c!10074)) b!69886))

(assert (= (and b!69886 c!10075) b!69887))

(assert (= (and b!69886 (not c!10075)) b!69888))

(assert (=> b!69887 m!64043))

(declare-fun m!66371 () Bool)

(assert (=> b!69887 m!66371))

(assert (=> b!68990 d!15387))

(declare-fun b!69892 () Bool)

(declare-fun e!45735 () Option!136)

(assert (=> b!69892 (= e!45735 None!134)))

(declare-fun d!15389 () Bool)

(declare-fun c!10076 () Bool)

(assert (=> d!15389 (= c!10076 (and ((_ is Cons!1490) (toList!726 lt!30330)) (= (_1!1069 (h!2075 (toList!726 lt!30330))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun e!45734 () Option!136)

(assert (=> d!15389 (= (getValueByKey!130 (toList!726 lt!30330) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) e!45734)))

(declare-fun b!69889 () Bool)

(assert (=> b!69889 (= e!45734 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30330)))))))

(declare-fun b!69891 () Bool)

(assert (=> b!69891 (= e!45735 (getValueByKey!130 (t!5001 (toList!726 lt!30330)) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun b!69890 () Bool)

(assert (=> b!69890 (= e!45734 e!45735)))

(declare-fun c!10077 () Bool)

(assert (=> b!69890 (= c!10077 (and ((_ is Cons!1490) (toList!726 lt!30330)) (not (= (_1!1069 (h!2075 (toList!726 lt!30330))) (_1!1069 (ite (or c!9708 c!9712) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))))

(assert (= (and d!15389 c!10076) b!69889))

(assert (= (and d!15389 (not c!10076)) b!69890))

(assert (= (and b!69890 c!10077) b!69891))

(assert (= (and b!69890 (not c!10077)) b!69892))

(declare-fun m!66373 () Bool)

(assert (=> b!69891 m!66373))

(assert (=> b!69197 d!15389))

(declare-fun b!69896 () Bool)

(declare-fun e!45737 () Option!136)

(assert (=> b!69896 (= e!45737 None!134)))

(declare-fun d!15391 () Bool)

(declare-fun c!10078 () Bool)

(assert (=> d!15391 (= c!10078 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29847))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29847)))) (_1!1069 lt!29777))))))

(declare-fun e!45736 () Option!136)

(assert (=> d!15391 (= (getValueByKey!130 (t!5001 (toList!726 lt!29847)) (_1!1069 lt!29777)) e!45736)))

(declare-fun b!69893 () Bool)

(assert (=> b!69893 (= e!45736 (Some!135 (_2!1069 (h!2075 (t!5001 (toList!726 lt!29847))))))))

(declare-fun b!69895 () Bool)

(assert (=> b!69895 (= e!45737 (getValueByKey!130 (t!5001 (t!5001 (toList!726 lt!29847))) (_1!1069 lt!29777)))))

(declare-fun b!69894 () Bool)

(assert (=> b!69894 (= e!45736 e!45737)))

(declare-fun c!10079 () Bool)

(assert (=> b!69894 (= c!10079 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29847))) (not (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29847)))) (_1!1069 lt!29777)))))))

(assert (= (and d!15391 c!10078) b!69893))

(assert (= (and d!15391 (not c!10078)) b!69894))

(assert (= (and b!69894 c!10079) b!69895))

(assert (= (and b!69894 (not c!10079)) b!69896))

(declare-fun m!66375 () Bool)

(assert (=> b!69895 m!66375))

(assert (=> b!68929 d!15391))

(declare-fun d!15393 () Bool)

(declare-fun lt!30713 () Bool)

(assert (=> d!15393 (= lt!30713 (select (content!72 (t!5001 (toList!726 lt!29851))) lt!29775))))

(declare-fun e!45738 () Bool)

(assert (=> d!15393 (= lt!30713 e!45738)))

(declare-fun res!37413 () Bool)

(assert (=> d!15393 (=> (not res!37413) (not e!45738))))

(assert (=> d!15393 (= res!37413 ((_ is Cons!1490) (t!5001 (toList!726 lt!29851))))))

(assert (=> d!15393 (= (contains!721 (t!5001 (toList!726 lt!29851)) lt!29775) lt!30713)))

(declare-fun b!69897 () Bool)

(declare-fun e!45739 () Bool)

(assert (=> b!69897 (= e!45738 e!45739)))

(declare-fun res!37412 () Bool)

(assert (=> b!69897 (=> res!37412 e!45739)))

(assert (=> b!69897 (= res!37412 (= (h!2075 (t!5001 (toList!726 lt!29851))) lt!29775))))

(declare-fun b!69898 () Bool)

(assert (=> b!69898 (= e!45739 (contains!721 (t!5001 (t!5001 (toList!726 lt!29851))) lt!29775))))

(assert (= (and d!15393 res!37413) b!69897))

(assert (= (and b!69897 (not res!37412)) b!69898))

(assert (=> d!15393 m!65849))

(declare-fun m!66377 () Bool)

(assert (=> d!15393 m!66377))

(declare-fun m!66379 () Bool)

(assert (=> b!69898 m!66379))

(assert (=> b!69174 d!15393))

(assert (=> b!69253 d!15083))

(assert (=> b!69072 d!15083))

(declare-fun d!15395 () Bool)

(declare-fun e!45740 () Bool)

(assert (=> d!15395 e!45740))

(declare-fun res!37414 () Bool)

(assert (=> d!15395 (=> res!37414 e!45740)))

(declare-fun lt!30716 () Bool)

(assert (=> d!15395 (= res!37414 (not lt!30716))))

(declare-fun lt!30717 () Bool)

(assert (=> d!15395 (= lt!30716 lt!30717)))

(declare-fun lt!30715 () Unit!1913)

(declare-fun e!45741 () Unit!1913)

(assert (=> d!15395 (= lt!30715 e!45741)))

(declare-fun c!10080 () Bool)

(assert (=> d!15395 (= c!10080 lt!30717)))

(assert (=> d!15395 (= lt!30717 (containsKey!134 (toList!726 lt!30411) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15395 (= (contains!720 lt!30411 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30716)))

(declare-fun b!69899 () Bool)

(declare-fun lt!30714 () Unit!1913)

(assert (=> b!69899 (= e!45741 lt!30714)))

(assert (=> b!69899 (= lt!30714 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30411) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> b!69899 (isDefined!84 (getValueByKey!130 (toList!726 lt!30411) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69900 () Bool)

(declare-fun Unit!1972 () Unit!1913)

(assert (=> b!69900 (= e!45741 Unit!1972)))

(declare-fun b!69901 () Bool)

(assert (=> b!69901 (= e!45740 (isDefined!84 (getValueByKey!130 (toList!726 lt!30411) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (= (and d!15395 c!10080) b!69899))

(assert (= (and d!15395 (not c!10080)) b!69900))

(assert (= (and d!15395 (not res!37414)) b!69901))

(declare-fun m!66381 () Bool)

(assert (=> d!15395 m!66381))

(declare-fun m!66383 () Bool)

(assert (=> b!69899 m!66383))

(assert (=> b!69899 m!65243))

(assert (=> b!69899 m!65243))

(declare-fun m!66385 () Bool)

(assert (=> b!69899 m!66385))

(assert (=> b!69901 m!65243))

(assert (=> b!69901 m!65243))

(assert (=> b!69901 m!66385))

(assert (=> d!14959 d!15395))

(declare-fun b!69905 () Bool)

(declare-fun e!45743 () Option!136)

(assert (=> b!69905 (= e!45743 None!134)))

(declare-fun c!10081 () Bool)

(declare-fun d!15397 () Bool)

(assert (=> d!15397 (= c!10081 (and ((_ is Cons!1490) lt!30412) (= (_1!1069 (h!2075 lt!30412)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun e!45742 () Option!136)

(assert (=> d!15397 (= (getValueByKey!130 lt!30412 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) e!45742)))

(declare-fun b!69902 () Bool)

(assert (=> b!69902 (= e!45742 (Some!135 (_2!1069 (h!2075 lt!30412))))))

(declare-fun b!69904 () Bool)

(assert (=> b!69904 (= e!45743 (getValueByKey!130 (t!5001 lt!30412) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69903 () Bool)

(assert (=> b!69903 (= e!45742 e!45743)))

(declare-fun c!10082 () Bool)

(assert (=> b!69903 (= c!10082 (and ((_ is Cons!1490) lt!30412) (not (= (_1!1069 (h!2075 lt!30412)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15397 c!10081) b!69902))

(assert (= (and d!15397 (not c!10081)) b!69903))

(assert (= (and b!69903 c!10082) b!69904))

(assert (= (and b!69903 (not c!10082)) b!69905))

(declare-fun m!66387 () Bool)

(assert (=> b!69904 m!66387))

(assert (=> d!14959 d!15397))

(declare-fun d!15399 () Bool)

(assert (=> d!15399 (= (getValueByKey!130 lt!30412 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!30718 () Unit!1913)

(assert (=> d!15399 (= lt!30718 (choose!390 lt!30412 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun e!45744 () Bool)

(assert (=> d!15399 e!45744))

(declare-fun res!37415 () Bool)

(assert (=> d!15399 (=> (not res!37415) (not e!45744))))

(assert (=> d!15399 (= res!37415 (isStrictlySorted!285 lt!30412))))

(assert (=> d!15399 (= (lemmaContainsTupThenGetReturnValue!49 lt!30412 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30718)))

(declare-fun b!69906 () Bool)

(declare-fun res!37416 () Bool)

(assert (=> b!69906 (=> (not res!37416) (not e!45744))))

(assert (=> b!69906 (= res!37416 (containsKey!134 lt!30412 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69907 () Bool)

(assert (=> b!69907 (= e!45744 (contains!721 lt!30412 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (= (and d!15399 res!37415) b!69906))

(assert (= (and b!69906 res!37416) b!69907))

(assert (=> d!15399 m!65237))

(declare-fun m!66389 () Bool)

(assert (=> d!15399 m!66389))

(declare-fun m!66391 () Bool)

(assert (=> d!15399 m!66391))

(declare-fun m!66393 () Bool)

(assert (=> b!69906 m!66393))

(declare-fun m!66395 () Bool)

(assert (=> b!69907 m!66395))

(assert (=> d!14959 d!15399))

(declare-fun bm!5984 () Bool)

(declare-fun call!5987 () List!1494)

(declare-fun call!5989 () List!1494)

(assert (=> bm!5984 (= call!5987 call!5989)))

(declare-fun b!69908 () Bool)

(declare-fun e!45748 () List!1494)

(declare-fun call!5988 () List!1494)

(assert (=> b!69908 (= e!45748 call!5988)))

(declare-fun e!45747 () List!1494)

(declare-fun b!69909 () Bool)

(assert (=> b!69909 (= e!45747 (insertStrictlySorted!51 (t!5001 (toList!726 call!5845)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69911 () Bool)

(declare-fun res!37418 () Bool)

(declare-fun e!45746 () Bool)

(assert (=> b!69911 (=> (not res!37418) (not e!45746))))

(declare-fun lt!30719 () List!1494)

(assert (=> b!69911 (= res!37418 (containsKey!134 lt!30719 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69912 () Bool)

(declare-fun e!45745 () List!1494)

(declare-fun e!45749 () List!1494)

(assert (=> b!69912 (= e!45745 e!45749)))

(declare-fun c!10083 () Bool)

(assert (=> b!69912 (= c!10083 (and ((_ is Cons!1490) (toList!726 call!5845)) (= (_1!1069 (h!2075 (toList!726 call!5845))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!69913 () Bool)

(declare-fun c!10084 () Bool)

(assert (=> b!69913 (= e!45747 (ite c!10083 (t!5001 (toList!726 call!5845)) (ite c!10084 (Cons!1490 (h!2075 (toList!726 call!5845)) (t!5001 (toList!726 call!5845))) Nil!1491)))))

(declare-fun b!69914 () Bool)

(assert (=> b!69914 (= e!45748 call!5988)))

(declare-fun b!69915 () Bool)

(assert (=> b!69915 (= e!45749 call!5987)))

(declare-fun b!69916 () Bool)

(assert (=> b!69916 (= e!45745 call!5989)))

(declare-fun bm!5985 () Bool)

(declare-fun c!10085 () Bool)

(assert (=> bm!5985 (= call!5989 ($colon$colon!63 e!45747 (ite c!10085 (h!2075 (toList!726 call!5845)) (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun c!10086 () Bool)

(assert (=> bm!5985 (= c!10086 c!10085)))

(declare-fun b!69917 () Bool)

(assert (=> b!69917 (= e!45746 (contains!721 lt!30719 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun bm!5986 () Bool)

(assert (=> bm!5986 (= call!5988 call!5987)))

(declare-fun b!69910 () Bool)

(assert (=> b!69910 (= c!10084 (and ((_ is Cons!1490) (toList!726 call!5845)) (bvsgt (_1!1069 (h!2075 (toList!726 call!5845))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> b!69910 (= e!45749 e!45748)))

(declare-fun d!15401 () Bool)

(assert (=> d!15401 e!45746))

(declare-fun res!37417 () Bool)

(assert (=> d!15401 (=> (not res!37417) (not e!45746))))

(assert (=> d!15401 (= res!37417 (isStrictlySorted!285 lt!30719))))

(assert (=> d!15401 (= lt!30719 e!45745)))

(assert (=> d!15401 (= c!10085 (and ((_ is Cons!1490) (toList!726 call!5845)) (bvslt (_1!1069 (h!2075 (toList!726 call!5845))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> d!15401 (isStrictlySorted!285 (toList!726 call!5845))))

(assert (=> d!15401 (= (insertStrictlySorted!51 (toList!726 call!5845) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30719)))

(assert (= (and d!15401 c!10085) b!69916))

(assert (= (and d!15401 (not c!10085)) b!69912))

(assert (= (and b!69912 c!10083) b!69915))

(assert (= (and b!69912 (not c!10083)) b!69910))

(assert (= (and b!69910 c!10084) b!69914))

(assert (= (and b!69910 (not c!10084)) b!69908))

(assert (= (or b!69914 b!69908) bm!5986))

(assert (= (or b!69915 bm!5986) bm!5984))

(assert (= (or b!69916 bm!5984) bm!5985))

(assert (= (and bm!5985 c!10086) b!69909))

(assert (= (and bm!5985 (not c!10086)) b!69913))

(assert (= (and d!15401 res!37417) b!69911))

(assert (= (and b!69911 res!37418) b!69917))

(declare-fun m!66397 () Bool)

(assert (=> b!69909 m!66397))

(declare-fun m!66399 () Bool)

(assert (=> d!15401 m!66399))

(declare-fun m!66401 () Bool)

(assert (=> d!15401 m!66401))

(declare-fun m!66403 () Bool)

(assert (=> b!69911 m!66403))

(declare-fun m!66405 () Bool)

(assert (=> bm!5985 m!66405))

(declare-fun m!66407 () Bool)

(assert (=> b!69917 m!66407))

(assert (=> d!14959 d!15401))

(assert (=> b!69115 d!15175))

(assert (=> b!69272 d!15083))

(declare-fun d!15403 () Bool)

(assert (=> d!15403 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30720 () Unit!1913)

(assert (=> d!15403 (= lt!30720 (choose!395 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45750 () Bool)

(assert (=> d!15403 e!45750))

(declare-fun res!37419 () Bool)

(assert (=> d!15403 (=> (not res!37419) (not e!45750))))

(assert (=> d!15403 (= res!37419 (isStrictlySorted!285 (toList!726 lt!29926)))))

(assert (=> d!15403 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30720)))

(declare-fun b!69918 () Bool)

(assert (=> b!69918 (= e!45750 (containsKey!134 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15403 res!37419) b!69918))

(assert (=> d!15403 m!65037))

(assert (=> d!15403 m!65037))

(assert (=> d!15403 m!65039))

(declare-fun m!66409 () Bool)

(assert (=> d!15403 m!66409))

(assert (=> d!15403 m!65501))

(assert (=> b!69918 m!65033))

(assert (=> b!69213 d!15403))

(assert (=> b!69213 d!15159))

(assert (=> b!69213 d!15161))

(assert (=> b!68905 d!14789))

(assert (=> b!68961 d!14741))

(declare-fun d!15405 () Bool)

(declare-fun res!37420 () Bool)

(declare-fun e!45751 () Bool)

(assert (=> d!15405 (=> res!37420 e!45751)))

(assert (=> d!15405 (= res!37420 (and ((_ is Cons!1490) (toList!726 call!5844)) (= (_1!1069 (h!2075 (toList!726 call!5844))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))))))

(assert (=> d!15405 (= (containsKey!134 (toList!726 call!5844) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))) e!45751)))

(declare-fun b!69919 () Bool)

(declare-fun e!45752 () Bool)

(assert (=> b!69919 (= e!45751 e!45752)))

(declare-fun res!37421 () Bool)

(assert (=> b!69919 (=> (not res!37421) (not e!45752))))

(assert (=> b!69919 (= res!37421 (and (or (not ((_ is Cons!1490) (toList!726 call!5844))) (bvsle (_1!1069 (h!2075 (toList!726 call!5844))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))) ((_ is Cons!1490) (toList!726 call!5844)) (bvslt (_1!1069 (h!2075 (toList!726 call!5844))) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007)))))))

(declare-fun b!69920 () Bool)

(assert (=> b!69920 (= e!45752 (containsKey!134 (t!5001 (toList!726 call!5844)) (select (arr!1840 (_keys!3812 newMap!16)) (index!3106 lt!30007))))))

(assert (= (and d!15405 (not res!37420)) b!69919))

(assert (= (and b!69919 res!37421) b!69920))

(assert (=> b!69920 m!64325))

(declare-fun m!66411 () Bool)

(assert (=> b!69920 m!66411))

(assert (=> d!14937 d!15405))

(declare-fun d!15407 () Bool)

(assert (=> d!15407 (= (inRange!0 (index!3106 lt!30280) (mask!6113 newMap!16)) (and (bvsge (index!3106 lt!30280) #b00000000000000000000000000000000) (bvslt (index!3106 lt!30280) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!69122 d!15407))

(declare-fun d!15409 () Bool)

(assert (=> d!15409 (= (inRange!0 (ite c!9806 (index!3105 lt!30164) (index!3108 lt!30164)) (mask!6113 newMap!16)) (and (bvsge (ite c!9806 (index!3105 lt!30164) (index!3108 lt!30164)) #b00000000000000000000000000000000) (bvslt (ite c!9806 (index!3105 lt!30164) (index!3108 lt!30164)) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5883 d!15409))

(declare-fun d!15411 () Bool)

(declare-fun res!37422 () Bool)

(declare-fun e!45753 () Bool)

(assert (=> d!15411 (=> res!37422 e!45753)))

(assert (=> d!15411 (= res!37422 (and ((_ is Cons!1490) (toList!726 lt!29862)) (= (_1!1069 (h!2075 (toList!726 lt!29862))) (_1!1069 lt!29777))))))

(assert (=> d!15411 (= (containsKey!134 (toList!726 lt!29862) (_1!1069 lt!29777)) e!45753)))

(declare-fun b!69921 () Bool)

(declare-fun e!45754 () Bool)

(assert (=> b!69921 (= e!45753 e!45754)))

(declare-fun res!37423 () Bool)

(assert (=> b!69921 (=> (not res!37423) (not e!45754))))

(assert (=> b!69921 (= res!37423 (and (or (not ((_ is Cons!1490) (toList!726 lt!29862))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29862))) (_1!1069 lt!29777))) ((_ is Cons!1490) (toList!726 lt!29862)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29862))) (_1!1069 lt!29777))))))

(declare-fun b!69922 () Bool)

(assert (=> b!69922 (= e!45754 (containsKey!134 (t!5001 (toList!726 lt!29862)) (_1!1069 lt!29777)))))

(assert (= (and d!15411 (not res!37422)) b!69921))

(assert (= (and b!69921 res!37423) b!69922))

(declare-fun m!66413 () Bool)

(assert (=> b!69922 m!66413))

(assert (=> d!14871 d!15411))

(declare-fun d!15413 () Bool)

(declare-fun res!37424 () Bool)

(declare-fun e!45755 () Bool)

(assert (=> d!15413 (=> res!37424 e!45755)))

(assert (=> d!15413 (= res!37424 (and ((_ is Cons!1490) lt!30316) (= (_1!1069 (h!2075 lt!30316)) (_1!1069 lt!29777))))))

(assert (=> d!15413 (= (containsKey!134 lt!30316 (_1!1069 lt!29777)) e!45755)))

(declare-fun b!69923 () Bool)

(declare-fun e!45756 () Bool)

(assert (=> b!69923 (= e!45755 e!45756)))

(declare-fun res!37425 () Bool)

(assert (=> b!69923 (=> (not res!37425) (not e!45756))))

(assert (=> b!69923 (= res!37425 (and (or (not ((_ is Cons!1490) lt!30316)) (bvsle (_1!1069 (h!2075 lt!30316)) (_1!1069 lt!29777))) ((_ is Cons!1490) lt!30316) (bvslt (_1!1069 (h!2075 lt!30316)) (_1!1069 lt!29777))))))

(declare-fun b!69924 () Bool)

(assert (=> b!69924 (= e!45756 (containsKey!134 (t!5001 lt!30316) (_1!1069 lt!29777)))))

(assert (= (and d!15413 (not res!37424)) b!69923))

(assert (= (and b!69923 res!37425) b!69924))

(declare-fun m!66415 () Bool)

(assert (=> b!69924 m!66415))

(assert (=> b!69166 d!15413))

(declare-fun d!15415 () Bool)

(declare-fun res!37426 () Bool)

(declare-fun e!45757 () Bool)

(assert (=> d!15415 (=> res!37426 e!45757)))

(assert (=> d!15415 (= res!37426 (and ((_ is Cons!1490) (toList!726 call!5850)) (= (_1!1069 (h!2075 (toList!726 call!5850))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (=> d!15415 (= (containsKey!134 (toList!726 call!5850) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45757)))

(declare-fun b!69925 () Bool)

(declare-fun e!45758 () Bool)

(assert (=> b!69925 (= e!45757 e!45758)))

(declare-fun res!37427 () Bool)

(assert (=> b!69925 (=> (not res!37427) (not e!45758))))

(assert (=> b!69925 (= res!37427 (and (or (not ((_ is Cons!1490) (toList!726 call!5850))) (bvsle (_1!1069 (h!2075 (toList!726 call!5850))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) ((_ is Cons!1490) (toList!726 call!5850)) (bvslt (_1!1069 (h!2075 (toList!726 call!5850))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun b!69926 () Bool)

(assert (=> b!69926 (= e!45758 (containsKey!134 (t!5001 (toList!726 call!5850)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!15415 (not res!37426)) b!69925))

(assert (= (and b!69925 res!37427) b!69926))

(assert (=> b!69926 m!64043))

(declare-fun m!66417 () Bool)

(assert (=> b!69926 m!66417))

(assert (=> d!14779 d!15415))

(assert (=> b!69126 d!14805))

(declare-fun b!69930 () Bool)

(declare-fun e!45760 () Option!136)

(assert (=> b!69930 (= e!45760 None!134)))

(declare-fun d!15417 () Bool)

(declare-fun c!10087 () Bool)

(assert (=> d!15417 (= c!10087 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29858))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29858)))) (_1!1069 lt!29775))))))

(declare-fun e!45759 () Option!136)

(assert (=> d!15417 (= (getValueByKey!130 (t!5001 (toList!726 lt!29858)) (_1!1069 lt!29775)) e!45759)))

(declare-fun b!69927 () Bool)

(assert (=> b!69927 (= e!45759 (Some!135 (_2!1069 (h!2075 (t!5001 (toList!726 lt!29858))))))))

(declare-fun b!69929 () Bool)

(assert (=> b!69929 (= e!45760 (getValueByKey!130 (t!5001 (t!5001 (toList!726 lt!29858))) (_1!1069 lt!29775)))))

(declare-fun b!69928 () Bool)

(assert (=> b!69928 (= e!45759 e!45760)))

(declare-fun c!10088 () Bool)

(assert (=> b!69928 (= c!10088 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29858))) (not (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29858)))) (_1!1069 lt!29775)))))))

(assert (= (and d!15417 c!10087) b!69927))

(assert (= (and d!15417 (not c!10087)) b!69928))

(assert (= (and b!69928 c!10088) b!69929))

(assert (= (and b!69928 (not c!10088)) b!69930))

(declare-fun m!66419 () Bool)

(assert (=> b!69929 m!66419))

(assert (=> b!69288 d!15417))

(declare-fun d!15419 () Bool)

(declare-fun res!37428 () Bool)

(declare-fun e!45761 () Bool)

(assert (=> d!15419 (=> res!37428 e!45761)))

(assert (=> d!15419 (= res!37428 (and ((_ is Cons!1490) (toList!726 lt!29836)) (= (_1!1069 (h!2075 (toList!726 lt!29836))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15419 (= (containsKey!134 (toList!726 lt!29836) #b1000000000000000000000000000000000000000000000000000000000000000) e!45761)))

(declare-fun b!69931 () Bool)

(declare-fun e!45762 () Bool)

(assert (=> b!69931 (= e!45761 e!45762)))

(declare-fun res!37429 () Bool)

(assert (=> b!69931 (=> (not res!37429) (not e!45762))))

(assert (=> b!69931 (= res!37429 (and (or (not ((_ is Cons!1490) (toList!726 lt!29836))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29836))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!726 lt!29836)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29836))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69932 () Bool)

(assert (=> b!69932 (= e!45762 (containsKey!134 (t!5001 (toList!726 lt!29836)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15419 (not res!37428)) b!69931))

(assert (= (and b!69931 res!37429) b!69932))

(declare-fun m!66421 () Bool)

(assert (=> b!69932 m!66421))

(assert (=> d!14883 d!15419))

(declare-fun lt!30721 () Bool)

(declare-fun d!15421 () Bool)

(assert (=> d!15421 (= lt!30721 (select (content!72 (toList!726 lt!30198)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!45763 () Bool)

(assert (=> d!15421 (= lt!30721 e!45763)))

(declare-fun res!37431 () Bool)

(assert (=> d!15421 (=> (not res!37431) (not e!45763))))

(assert (=> d!15421 (= res!37431 ((_ is Cons!1490) (toList!726 lt!30198)))))

(assert (=> d!15421 (= (contains!721 (toList!726 lt!30198) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30721)))

(declare-fun b!69933 () Bool)

(declare-fun e!45764 () Bool)

(assert (=> b!69933 (= e!45763 e!45764)))

(declare-fun res!37430 () Bool)

(assert (=> b!69933 (=> res!37430 e!45764)))

(assert (=> b!69933 (= res!37430 (= (h!2075 (toList!726 lt!30198)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69934 () Bool)

(assert (=> b!69934 (= e!45764 (contains!721 (t!5001 (toList!726 lt!30198)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15421 res!37431) b!69933))

(assert (= (and b!69933 (not res!37430)) b!69934))

(declare-fun m!66423 () Bool)

(assert (=> d!15421 m!66423))

(declare-fun m!66425 () Bool)

(assert (=> d!15421 m!66425))

(declare-fun m!66427 () Bool)

(assert (=> b!69934 m!66427))

(assert (=> b!69021 d!15421))

(declare-fun d!15423 () Bool)

(assert (=> d!15423 (= (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833)) (not (isEmpty!316 (getValueByKey!130 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833))))))

(declare-fun bs!2997 () Bool)

(assert (= bs!2997 d!15423))

(assert (=> bs!2997 m!64655))

(declare-fun m!66429 () Bool)

(assert (=> bs!2997 m!66429))

(assert (=> b!69024 d!15423))

(declare-fun b!69938 () Bool)

(declare-fun e!45766 () Option!136)

(assert (=> b!69938 (= e!45766 None!134)))

(declare-fun c!10089 () Bool)

(declare-fun d!15425 () Bool)

(assert (=> d!15425 (= c!10089 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))))) lt!29833)))))

(declare-fun e!45765 () Option!136)

(assert (=> d!15425 (= (getValueByKey!130 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833) e!45765)))

(declare-fun b!69935 () Bool)

(assert (=> b!69935 (= e!45765 (Some!135 (_2!1069 (h!2075 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))))))))

(declare-fun b!69937 () Bool)

(assert (=> b!69937 (= e!45766 (getValueByKey!130 (t!5001 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))) lt!29833))))

(declare-fun b!69936 () Bool)

(assert (=> b!69936 (= e!45765 e!45766)))

(declare-fun c!10090 () Bool)

(assert (=> b!69936 (= c!10090 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))) (not (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))))) lt!29833))))))

(assert (= (and d!15425 c!10089) b!69935))

(assert (= (and d!15425 (not c!10089)) b!69936))

(assert (= (and b!69936 c!10090) b!69937))

(assert (= (and b!69936 (not c!10090)) b!69938))

(declare-fun m!66431 () Bool)

(assert (=> b!69937 m!66431))

(assert (=> b!69024 d!15425))

(declare-fun d!15427 () Bool)

(declare-fun e!45767 () Bool)

(assert (=> d!15427 e!45767))

(declare-fun res!37433 () Bool)

(assert (=> d!15427 (=> (not res!37433) (not e!45767))))

(declare-fun lt!30724 () ListLongMap!1421)

(assert (=> d!15427 (= res!37433 (contains!720 lt!30724 (_1!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun lt!30725 () List!1494)

(assert (=> d!15427 (= lt!30724 (ListLongMap!1422 lt!30725))))

(declare-fun lt!30722 () Unit!1913)

(declare-fun lt!30723 () Unit!1913)

(assert (=> d!15427 (= lt!30722 lt!30723)))

(assert (=> d!15427 (= (getValueByKey!130 lt!30725 (_1!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15427 (= lt!30723 (lemmaContainsTupThenGetReturnValue!49 lt!30725 (_1!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15427 (= lt!30725 (insertStrictlySorted!51 (toList!726 (ite c!9859 call!5913 (ite c!9863 call!5911 call!5912))) (_1!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15427 (= (+!89 (ite c!9859 call!5913 (ite c!9863 call!5911 call!5912)) (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) lt!30724)))

(declare-fun b!69939 () Bool)

(declare-fun res!37432 () Bool)

(assert (=> b!69939 (=> (not res!37432) (not e!45767))))

(assert (=> b!69939 (= res!37432 (= (getValueByKey!130 (toList!726 lt!30724) (_1!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))))

(declare-fun b!69940 () Bool)

(assert (=> b!69940 (= e!45767 (contains!721 (toList!726 lt!30724) (ite (or c!9859 c!9863) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (= (and d!15427 res!37433) b!69939))

(assert (= (and b!69939 res!37432) b!69940))

(declare-fun m!66433 () Bool)

(assert (=> d!15427 m!66433))

(declare-fun m!66435 () Bool)

(assert (=> d!15427 m!66435))

(declare-fun m!66437 () Bool)

(assert (=> d!15427 m!66437))

(declare-fun m!66439 () Bool)

(assert (=> d!15427 m!66439))

(declare-fun m!66441 () Bool)

(assert (=> b!69939 m!66441))

(declare-fun m!66443 () Bool)

(assert (=> b!69940 m!66443))

(assert (=> bm!5912 d!15427))

(declare-fun b!69941 () Bool)

(declare-fun e!45768 () Bool)

(assert (=> b!69941 (= e!45768 (contains!722 Nil!1492 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!69942 () Bool)

(declare-fun e!45769 () Bool)

(declare-fun call!5990 () Bool)

(assert (=> b!69942 (= e!45769 call!5990)))

(declare-fun bm!5987 () Bool)

(declare-fun c!10091 () Bool)

(assert (=> bm!5987 (= call!5990 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10091 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000) Nil!1492) Nil!1492)))))

(declare-fun d!15429 () Bool)

(declare-fun res!37436 () Bool)

(declare-fun e!45771 () Bool)

(assert (=> d!15429 (=> res!37436 e!45771)))

(assert (=> d!15429 (= res!37436 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!15429 (= (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 Nil!1492) e!45771)))

(declare-fun b!69943 () Bool)

(declare-fun e!45770 () Bool)

(assert (=> b!69943 (= e!45770 e!45769)))

(assert (=> b!69943 (= c!10091 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!69944 () Bool)

(assert (=> b!69944 (= e!45769 call!5990)))

(declare-fun b!69945 () Bool)

(assert (=> b!69945 (= e!45771 e!45770)))

(declare-fun res!37435 () Bool)

(assert (=> b!69945 (=> (not res!37435) (not e!45770))))

(assert (=> b!69945 (= res!37435 (not e!45768))))

(declare-fun res!37434 () Bool)

(assert (=> b!69945 (=> (not res!37434) (not e!45768))))

(assert (=> b!69945 (= res!37434 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!15429 (not res!37436)) b!69945))

(assert (= (and b!69945 res!37434) b!69941))

(assert (= (and b!69945 res!37435) b!69943))

(assert (= (and b!69943 c!10091) b!69944))

(assert (= (and b!69943 (not c!10091)) b!69942))

(assert (= (or b!69944 b!69942) bm!5987))

(declare-fun m!66445 () Bool)

(assert (=> b!69941 m!66445))

(assert (=> b!69941 m!66445))

(declare-fun m!66447 () Bool)

(assert (=> b!69941 m!66447))

(assert (=> bm!5987 m!66445))

(declare-fun m!66449 () Bool)

(assert (=> bm!5987 m!66449))

(assert (=> b!69943 m!66445))

(assert (=> b!69943 m!66445))

(declare-fun m!66451 () Bool)

(assert (=> b!69943 m!66451))

(assert (=> b!69945 m!66445))

(assert (=> b!69945 m!66445))

(assert (=> b!69945 m!66451))

(assert (=> b!69285 d!15429))

(declare-fun b!69949 () Bool)

(declare-fun e!45773 () Option!136)

(assert (=> b!69949 (= e!45773 None!134)))

(declare-fun c!10092 () Bool)

(declare-fun d!15431 () Bool)

(assert (=> d!15431 (= c!10092 (and ((_ is Cons!1490) (toList!726 lt!30411)) (= (_1!1069 (h!2075 (toList!726 lt!30411))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun e!45772 () Option!136)

(assert (=> d!15431 (= (getValueByKey!130 (toList!726 lt!30411) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) e!45772)))

(declare-fun b!69946 () Bool)

(assert (=> b!69946 (= e!45772 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30411)))))))

(declare-fun b!69948 () Bool)

(assert (=> b!69948 (= e!45773 (getValueByKey!130 (t!5001 (toList!726 lt!30411)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!69947 () Bool)

(assert (=> b!69947 (= e!45772 e!45773)))

(declare-fun c!10093 () Bool)

(assert (=> b!69947 (= c!10093 (and ((_ is Cons!1490) (toList!726 lt!30411)) (not (= (_1!1069 (h!2075 (toList!726 lt!30411))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15431 c!10092) b!69946))

(assert (= (and d!15431 (not c!10092)) b!69947))

(assert (= (and b!69947 c!10093) b!69948))

(assert (= (and b!69947 (not c!10093)) b!69949))

(declare-fun m!66453 () Bool)

(assert (=> b!69948 m!66453))

(assert (=> b!69290 d!15431))

(declare-fun d!15433 () Bool)

(declare-fun e!45776 () Bool)

(assert (=> d!15433 e!45776))

(declare-fun res!37439 () Bool)

(assert (=> d!15433 (=> (not res!37439) (not e!45776))))

(assert (=> d!15433 (= res!37439 (and (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2076 (_keys!3812 newMap!16)))))))

(declare-fun lt!30728 () Unit!1913)

(declare-fun choose!102 ((_ BitVec 64) array!3854 (_ BitVec 32) (_ BitVec 32)) Unit!1913)

(assert (=> d!15433 (= lt!30728 (choose!102 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (mask!6113 newMap!16)))))

(assert (=> d!15433 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15433 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (mask!6113 newMap!16)) lt!30728)))

(declare-fun b!69952 () Bool)

(assert (=> b!69952 (= e!45776 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (mask!6113 newMap!16)))))

(assert (= (and d!15433 res!37439) b!69952))

(assert (=> d!15433 m!64043))

(declare-fun m!66455 () Bool)

(assert (=> d!15433 m!66455))

(assert (=> d!15433 m!64569))

(assert (=> b!69952 m!64465))

(assert (=> b!69952 m!64497))

(assert (=> d!14777 d!15433))

(assert (=> d!14777 d!15085))

(declare-fun b!69953 () Bool)

(declare-fun e!45777 () (_ BitVec 32))

(assert (=> b!69953 (= e!45777 #b00000000000000000000000000000000)))

(declare-fun b!69954 () Bool)

(declare-fun e!45778 () (_ BitVec 32))

(assert (=> b!69954 (= e!45777 e!45778)))

(declare-fun c!10094 () Bool)

(assert (=> b!69954 (= c!10094 (validKeyInArray!0 (select (arr!1840 lt!30137) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))))))

(declare-fun bm!5988 () Bool)

(declare-fun call!5991 () (_ BitVec 32))

(assert (=> bm!5988 (= call!5991 (arrayCountValidKeys!0 lt!30137 (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001) (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001)))))

(declare-fun b!69955 () Bool)

(assert (=> b!69955 (= e!45778 call!5991)))

(declare-fun lt!30729 () (_ BitVec 32))

(declare-fun d!15435 () Bool)

(assert (=> d!15435 (and (bvsge lt!30729 #b00000000000000000000000000000000) (bvsle lt!30729 (bvsub (size!2076 lt!30137) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))))))

(assert (=> d!15435 (= lt!30729 e!45777)))

(declare-fun c!10095 () Bool)

(assert (=> d!15435 (= c!10095 (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001)))))

(assert (=> d!15435 (and (bvsle (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001)) (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001) (size!2076 lt!30137)))))

(assert (=> d!15435 (= (arrayCountValidKeys!0 lt!30137 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001)) lt!30729)))

(declare-fun b!69956 () Bool)

(assert (=> b!69956 (= e!45778 (bvadd #b00000000000000000000000000000001 call!5991))))

(assert (= (and d!15435 c!10095) b!69953))

(assert (= (and d!15435 (not c!10095)) b!69954))

(assert (= (and b!69954 c!10094) b!69956))

(assert (= (and b!69954 (not c!10094)) b!69955))

(assert (= (or b!69956 b!69955) bm!5988))

(declare-fun m!66457 () Bool)

(assert (=> b!69954 m!66457))

(assert (=> b!69954 m!66457))

(declare-fun m!66459 () Bool)

(assert (=> b!69954 m!66459))

(declare-fun m!66461 () Bool)

(assert (=> bm!5988 m!66461))

(assert (=> d!14777 d!15435))

(declare-fun d!15437 () Bool)

(declare-fun e!45779 () Bool)

(assert (=> d!15437 e!45779))

(declare-fun res!37440 () Bool)

(assert (=> d!15437 (=> res!37440 e!45779)))

(declare-fun lt!30732 () Bool)

(assert (=> d!15437 (= res!37440 (not lt!30732))))

(declare-fun lt!30733 () Bool)

(assert (=> d!15437 (= lt!30732 lt!30733)))

(declare-fun lt!30731 () Unit!1913)

(declare-fun e!45780 () Unit!1913)

(assert (=> d!15437 (= lt!30731 e!45780)))

(declare-fun c!10096 () Bool)

(assert (=> d!15437 (= c!10096 lt!30733)))

(assert (=> d!15437 (= lt!30733 (containsKey!134 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!15437 (= (contains!720 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30732)))

(declare-fun b!69957 () Bool)

(declare-fun lt!30730 () Unit!1913)

(assert (=> b!69957 (= e!45780 lt!30730)))

(assert (=> b!69957 (= lt!30730 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> b!69957 (isDefined!84 (getValueByKey!130 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!69958 () Bool)

(declare-fun Unit!1973 () Unit!1913)

(assert (=> b!69958 (= e!45780 Unit!1973)))

(declare-fun b!69959 () Bool)

(assert (=> b!69959 (= e!45779 (isDefined!84 (getValueByKey!130 (toList!726 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (= (and d!15437 c!10096) b!69957))

(assert (= (and d!15437 (not c!10096)) b!69958))

(assert (= (and d!15437 (not res!37440)) b!69959))

(assert (=> d!15437 m!64043))

(declare-fun m!66463 () Bool)

(assert (=> d!15437 m!66463))

(assert (=> b!69957 m!64043))

(declare-fun m!66465 () Bool)

(assert (=> b!69957 m!66465))

(assert (=> b!69957 m!64043))

(declare-fun m!66467 () Bool)

(assert (=> b!69957 m!66467))

(assert (=> b!69957 m!66467))

(declare-fun m!66469 () Bool)

(assert (=> b!69957 m!66469))

(assert (=> b!69959 m!64043))

(assert (=> b!69959 m!66467))

(assert (=> b!69959 m!66467))

(assert (=> b!69959 m!66469))

(assert (=> d!14777 d!15437))

(assert (=> d!14777 d!14865))

(assert (=> d!14777 d!14727))

(assert (=> d!14777 d!14783))

(declare-fun b!69970 () Bool)

(declare-fun e!45785 () Bool)

(assert (=> b!69970 (= e!45785 (bvslt (size!2076 (_keys!3812 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun e!45786 () Bool)

(declare-fun b!69971 () Bool)

(assert (=> b!69971 (= e!45786 (= (arrayCountValidKeys!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!69968 () Bool)

(declare-fun res!37452 () Bool)

(assert (=> b!69968 (=> (not res!37452) (not e!45785))))

(assert (=> b!69968 (= res!37452 (not (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))))

(declare-fun b!69969 () Bool)

(declare-fun res!37450 () Bool)

(assert (=> b!69969 (=> (not res!37450) (not e!45785))))

(assert (=> b!69969 (= res!37450 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun d!15439 () Bool)

(assert (=> d!15439 e!45786))

(declare-fun res!37451 () Bool)

(assert (=> d!15439 (=> (not res!37451) (not e!45786))))

(assert (=> d!15439 (= res!37451 (and (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2076 (_keys!3812 newMap!16)))))))

(declare-fun lt!30736 () Unit!1913)

(declare-fun choose!1 (array!3854 (_ BitVec 32) (_ BitVec 64)) Unit!1913)

(assert (=> d!15439 (= lt!30736 (choose!1 (_keys!3812 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!15439 e!45785))

(declare-fun res!37449 () Bool)

(assert (=> d!15439 (=> (not res!37449) (not e!45785))))

(assert (=> d!15439 (= res!37449 (and (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2076 (_keys!3812 newMap!16)))))))

(assert (=> d!15439 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3812 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30736)))

(assert (= (and d!15439 res!37449) b!69968))

(assert (= (and b!69968 res!37452) b!69969))

(assert (= (and b!69969 res!37450) b!69970))

(assert (= (and d!15439 res!37451) b!69971))

(assert (=> b!69971 m!64465))

(assert (=> b!69971 m!64499))

(assert (=> b!69971 m!64245))

(declare-fun m!66471 () Bool)

(assert (=> b!69968 m!66471))

(assert (=> b!69968 m!66471))

(declare-fun m!66473 () Bool)

(assert (=> b!69968 m!66473))

(assert (=> b!69969 m!64043))

(assert (=> b!69969 m!64311))

(assert (=> d!15439 m!64043))

(declare-fun m!66475 () Bool)

(assert (=> d!15439 m!66475))

(assert (=> d!14777 d!15439))

(declare-fun d!15441 () Bool)

(assert (=> d!15441 (= (arrayCountValidKeys!0 lt!30137 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (bvadd (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!30739 () Unit!1913)

(declare-fun choose!2 (array!3854 (_ BitVec 32)) Unit!1913)

(assert (=> d!15441 (= lt!30739 (choose!2 lt!30137 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))

(declare-fun e!45789 () Bool)

(assert (=> d!15441 e!45789))

(declare-fun res!37457 () Bool)

(assert (=> d!15441 (=> (not res!37457) (not e!45789))))

(assert (=> d!15441 (= res!37457 (and (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2076 lt!30137))))))

(assert (=> d!15441 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30137 (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))) lt!30739)))

(declare-fun b!69976 () Bool)

(declare-fun res!37458 () Bool)

(assert (=> b!69976 (=> (not res!37458) (not e!45789))))

(assert (=> b!69976 (= res!37458 (validKeyInArray!0 (select (arr!1840 lt!30137) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))))))

(declare-fun b!69977 () Bool)

(assert (=> b!69977 (= e!45789 (bvslt (size!2076 lt!30137) #b01111111111111111111111111111111))))

(assert (= (and d!15441 res!37457) b!69976))

(assert (= (and b!69976 res!37458) b!69977))

(assert (=> d!15441 m!64495))

(declare-fun m!66477 () Bool)

(assert (=> d!15441 m!66477))

(assert (=> b!69976 m!66457))

(assert (=> b!69976 m!66457))

(assert (=> b!69976 m!66459))

(assert (=> d!14777 d!15441))

(declare-fun d!15443 () Bool)

(declare-fun e!45792 () Bool)

(assert (=> d!15443 e!45792))

(declare-fun res!37461 () Bool)

(assert (=> d!15443 (=> (not res!37461) (not e!45792))))

(assert (=> d!15443 (= res!37461 (and (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2076 (_keys!3812 newMap!16))) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2077 (_values!2151 newMap!16)))))))

(declare-fun lt!30742 () Unit!1913)

(declare-fun choose!401 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1913)

(assert (=> d!15443 (= lt!30742 (choose!401 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15443 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15443 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778 (defaultEntry!2168 newMap!16)) lt!30742)))

(declare-fun b!69980 () Bool)

(assert (=> b!69980 (= e!45792 (= (+!89 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (getCurrentListMap!421 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))))

(assert (= (and d!15443 res!37461) b!69980))

(assert (=> d!15443 m!64043))

(declare-fun m!66479 () Bool)

(assert (=> d!15443 m!66479))

(assert (=> d!15443 m!64569))

(assert (=> b!69980 m!64461))

(assert (=> b!69980 m!64481))

(assert (=> b!69980 m!64251))

(assert (=> b!69980 m!64463))

(assert (=> b!69980 m!64251))

(assert (=> b!69980 m!64465))

(assert (=> d!14777 d!15443))

(declare-fun d!15445 () Bool)

(declare-fun res!37462 () Bool)

(declare-fun e!45793 () Bool)

(assert (=> d!15445 (=> res!37462 e!45793)))

(assert (=> d!15445 (= res!37462 (= (select (arr!1840 lt!30139) #b00000000000000000000000000000000) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!15445 (= (arrayContainsKey!0 lt!30139 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45793)))

(declare-fun b!69981 () Bool)

(declare-fun e!45794 () Bool)

(assert (=> b!69981 (= e!45793 e!45794)))

(declare-fun res!37463 () Bool)

(assert (=> b!69981 (=> (not res!37463) (not e!45794))))

(assert (=> b!69981 (= res!37463 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 lt!30139)))))

(declare-fun b!69982 () Bool)

(assert (=> b!69982 (= e!45794 (arrayContainsKey!0 lt!30139 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15445 (not res!37462)) b!69981))

(assert (= (and b!69981 res!37463) b!69982))

(declare-fun m!66481 () Bool)

(assert (=> d!15445 m!66481))

(assert (=> b!69982 m!64043))

(declare-fun m!66483 () Bool)

(assert (=> b!69982 m!66483))

(assert (=> d!14777 d!15445))

(declare-fun e!45795 () Bool)

(declare-fun b!69983 () Bool)

(assert (=> b!69983 (= e!45795 (contains!722 lt!30118 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) lt!30133)))))

(declare-fun b!69984 () Bool)

(declare-fun e!45796 () Bool)

(declare-fun call!5992 () Bool)

(assert (=> b!69984 (= e!45796 call!5992)))

(declare-fun c!10097 () Bool)

(declare-fun bm!5989 () Bool)

(assert (=> bm!5989 (= call!5992 (arrayNoDuplicates!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (bvadd lt!30133 #b00000000000000000000000000000001) (ite c!10097 (Cons!1491 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) lt!30133) lt!30118) lt!30118)))))

(declare-fun d!15447 () Bool)

(declare-fun res!37466 () Bool)

(declare-fun e!45798 () Bool)

(assert (=> d!15447 (=> res!37466 e!45798)))

(assert (=> d!15447 (= res!37466 (bvsge lt!30133 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))

(assert (=> d!15447 (= (arrayNoDuplicates!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) lt!30133 lt!30118) e!45798)))

(declare-fun b!69985 () Bool)

(declare-fun e!45797 () Bool)

(assert (=> b!69985 (= e!45797 e!45796)))

(assert (=> b!69985 (= c!10097 (validKeyInArray!0 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) lt!30133)))))

(declare-fun b!69986 () Bool)

(assert (=> b!69986 (= e!45796 call!5992)))

(declare-fun b!69987 () Bool)

(assert (=> b!69987 (= e!45798 e!45797)))

(declare-fun res!37465 () Bool)

(assert (=> b!69987 (=> (not res!37465) (not e!45797))))

(assert (=> b!69987 (= res!37465 (not e!45795))))

(declare-fun res!37464 () Bool)

(assert (=> b!69987 (=> (not res!37464) (not e!45795))))

(assert (=> b!69987 (= res!37464 (validKeyInArray!0 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) lt!30133)))))

(assert (= (and d!15447 (not res!37466)) b!69987))

(assert (= (and b!69987 res!37464) b!69983))

(assert (= (and b!69987 res!37465) b!69985))

(assert (= (and b!69985 c!10097) b!69986))

(assert (= (and b!69985 (not c!10097)) b!69984))

(assert (= (or b!69986 b!69984) bm!5989))

(declare-fun m!66485 () Bool)

(assert (=> b!69983 m!66485))

(assert (=> b!69983 m!66485))

(declare-fun m!66487 () Bool)

(assert (=> b!69983 m!66487))

(assert (=> bm!5989 m!66485))

(declare-fun m!66489 () Bool)

(assert (=> bm!5989 m!66489))

(assert (=> b!69985 m!66485))

(assert (=> b!69985 m!66485))

(declare-fun m!66491 () Bool)

(assert (=> b!69985 m!66491))

(assert (=> b!69987 m!66485))

(assert (=> b!69987 m!66485))

(assert (=> b!69987 m!66491))

(assert (=> d!14777 d!15447))

(declare-fun b!69988 () Bool)

(declare-fun res!37469 () Bool)

(declare-fun e!45801 () Bool)

(assert (=> b!69988 (=> (not res!37469) (not e!45801))))

(declare-fun e!45806 () Bool)

(assert (=> b!69988 (= res!37469 e!45806)))

(declare-fun c!10100 () Bool)

(assert (=> b!69988 (= c!10100 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69989 () Bool)

(declare-fun res!37474 () Bool)

(assert (=> b!69989 (=> (not res!37474) (not e!45801))))

(declare-fun e!45807 () Bool)

(assert (=> b!69989 (= res!37474 e!45807)))

(declare-fun res!37475 () Bool)

(assert (=> b!69989 (=> res!37475 e!45807)))

(declare-fun e!45811 () Bool)

(assert (=> b!69989 (= res!37475 (not e!45811))))

(declare-fun res!37472 () Bool)

(assert (=> b!69989 (=> (not res!37472) (not e!45811))))

(assert (=> b!69989 (= res!37472 (bvslt #b00000000000000000000000000000000 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun bm!5990 () Bool)

(declare-fun call!5994 () ListLongMap!1421)

(declare-fun call!5996 () ListLongMap!1421)

(assert (=> bm!5990 (= call!5994 call!5996)))

(declare-fun b!69991 () Bool)

(declare-fun e!45805 () ListLongMap!1421)

(declare-fun call!5993 () ListLongMap!1421)

(assert (=> b!69991 (= e!45805 call!5993)))

(declare-fun b!69992 () Bool)

(declare-fun e!45810 () ListLongMap!1421)

(declare-fun e!45800 () ListLongMap!1421)

(assert (=> b!69992 (= e!45810 e!45800)))

(declare-fun c!10103 () Bool)

(assert (=> b!69992 (= c!10103 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5991 () Bool)

(declare-fun call!5998 () Bool)

(declare-fun lt!30761 () ListLongMap!1421)

(assert (=> bm!5991 (= call!5998 (contains!720 lt!30761 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69993 () Bool)

(assert (=> b!69993 (= e!45800 call!5993)))

(declare-fun b!69994 () Bool)

(declare-fun e!45799 () Bool)

(declare-fun e!45803 () Bool)

(assert (=> b!69994 (= e!45799 e!45803)))

(declare-fun res!37470 () Bool)

(assert (=> b!69994 (= res!37470 call!5998)))

(assert (=> b!69994 (=> (not res!37470) (not e!45803))))

(declare-fun b!69995 () Bool)

(declare-fun call!5995 () ListLongMap!1421)

(assert (=> b!69995 (= e!45805 call!5995)))

(declare-fun b!69996 () Bool)

(declare-fun e!45804 () Bool)

(assert (=> b!69996 (= e!45804 (= (apply!73 lt!30761 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69996 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))))))))

(assert (=> b!69996 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))

(declare-fun b!69997 () Bool)

(assert (=> b!69997 (= e!45801 e!45799)))

(declare-fun c!10101 () Bool)

(assert (=> b!69997 (= c!10101 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!15449 () Bool)

(assert (=> d!15449 e!45801))

(declare-fun res!37473 () Bool)

(assert (=> d!15449 (=> (not res!37473) (not e!45801))))

(assert (=> d!15449 (= res!37473 (or (bvsge #b00000000000000000000000000000000 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))))

(declare-fun lt!30753 () ListLongMap!1421)

(assert (=> d!15449 (= lt!30761 lt!30753)))

(declare-fun lt!30757 () Unit!1913)

(declare-fun e!45802 () Unit!1913)

(assert (=> d!15449 (= lt!30757 e!45802)))

(declare-fun c!10102 () Bool)

(declare-fun e!45808 () Bool)

(assert (=> d!15449 (= c!10102 e!45808)))

(declare-fun res!37471 () Bool)

(assert (=> d!15449 (=> (not res!37471) (not e!45808))))

(assert (=> d!15449 (= res!37471 (bvslt #b00000000000000000000000000000000 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))

(assert (=> d!15449 (= lt!30753 e!45810)))

(declare-fun c!10099 () Bool)

(assert (=> d!15449 (= c!10099 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15449 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15449 (= (getCurrentListMap!421 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30761)))

(declare-fun b!69990 () Bool)

(assert (=> b!69990 (= e!45799 (not call!5998))))

(declare-fun bm!5992 () Bool)

(assert (=> bm!5992 (= call!5995 call!5994)))

(declare-fun bm!5993 () Bool)

(assert (=> bm!5993 (= call!5996 (getCurrentListMapNoExtraKeys!53 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!69998 () Bool)

(declare-fun Unit!1974 () Unit!1913)

(assert (=> b!69998 (= e!45802 Unit!1974)))

(declare-fun b!69999 () Bool)

(declare-fun e!45809 () Bool)

(assert (=> b!69999 (= e!45806 e!45809)))

(declare-fun res!37468 () Bool)

(declare-fun call!5999 () Bool)

(assert (=> b!69999 (= res!37468 call!5999)))

(assert (=> b!69999 (=> (not res!37468) (not e!45809))))

(declare-fun b!70000 () Bool)

(assert (=> b!70000 (= e!45803 (= (apply!73 lt!30761 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!70001 () Bool)

(assert (=> b!70001 (= e!45811 (validKeyInArray!0 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5994 () Bool)

(assert (=> bm!5994 (= call!5999 (contains!720 lt!30761 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70002 () Bool)

(declare-fun c!10098 () Bool)

(assert (=> b!70002 (= c!10098 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!70002 (= e!45800 e!45805)))

(declare-fun bm!5995 () Bool)

(declare-fun call!5997 () ListLongMap!1421)

(assert (=> bm!5995 (= call!5997 (+!89 (ite c!10099 call!5996 (ite c!10103 call!5994 call!5995)) (ite (or c!10099 c!10103) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun b!70003 () Bool)

(assert (=> b!70003 (= e!45810 (+!89 call!5997 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!70004 () Bool)

(declare-fun lt!30752 () Unit!1913)

(assert (=> b!70004 (= e!45802 lt!30752)))

(declare-fun lt!30759 () ListLongMap!1421)

(assert (=> b!70004 (= lt!30759 (getCurrentListMapNoExtraKeys!53 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30745 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30745 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30751 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30751 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30763 () Unit!1913)

(assert (=> b!70004 (= lt!30763 (addStillContains!49 lt!30759 lt!30745 (zeroValue!2074 newMap!16) lt!30751))))

(assert (=> b!70004 (contains!720 (+!89 lt!30759 (tuple2!2119 lt!30745 (zeroValue!2074 newMap!16))) lt!30751)))

(declare-fun lt!30750 () Unit!1913)

(assert (=> b!70004 (= lt!30750 lt!30763)))

(declare-fun lt!30747 () ListLongMap!1421)

(assert (=> b!70004 (= lt!30747 (getCurrentListMapNoExtraKeys!53 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30762 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30762 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30755 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30755 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30743 () Unit!1913)

(assert (=> b!70004 (= lt!30743 (addApplyDifferent!49 lt!30747 lt!30762 (minValue!2074 newMap!16) lt!30755))))

(assert (=> b!70004 (= (apply!73 (+!89 lt!30747 (tuple2!2119 lt!30762 (minValue!2074 newMap!16))) lt!30755) (apply!73 lt!30747 lt!30755))))

(declare-fun lt!30748 () Unit!1913)

(assert (=> b!70004 (= lt!30748 lt!30743)))

(declare-fun lt!30744 () ListLongMap!1421)

(assert (=> b!70004 (= lt!30744 (getCurrentListMapNoExtraKeys!53 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30760 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30760 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30746 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30746 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30756 () Unit!1913)

(assert (=> b!70004 (= lt!30756 (addApplyDifferent!49 lt!30744 lt!30760 (zeroValue!2074 newMap!16) lt!30746))))

(assert (=> b!70004 (= (apply!73 (+!89 lt!30744 (tuple2!2119 lt!30760 (zeroValue!2074 newMap!16))) lt!30746) (apply!73 lt!30744 lt!30746))))

(declare-fun lt!30754 () Unit!1913)

(assert (=> b!70004 (= lt!30754 lt!30756)))

(declare-fun lt!30764 () ListLongMap!1421)

(assert (=> b!70004 (= lt!30764 (getCurrentListMapNoExtraKeys!53 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30749 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30749 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30758 () (_ BitVec 64))

(assert (=> b!70004 (= lt!30758 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!70004 (= lt!30752 (addApplyDifferent!49 lt!30764 lt!30749 (minValue!2074 newMap!16) lt!30758))))

(assert (=> b!70004 (= (apply!73 (+!89 lt!30764 (tuple2!2119 lt!30749 (minValue!2074 newMap!16))) lt!30758) (apply!73 lt!30764 lt!30758))))

(declare-fun b!70005 () Bool)

(assert (=> b!70005 (= e!45808 (validKeyInArray!0 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5996 () Bool)

(assert (=> bm!5996 (= call!5993 call!5997)))

(declare-fun b!70006 () Bool)

(assert (=> b!70006 (= e!45806 (not call!5999))))

(declare-fun b!70007 () Bool)

(assert (=> b!70007 (= e!45809 (= (apply!73 lt!30761 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!70008 () Bool)

(assert (=> b!70008 (= e!45807 e!45804)))

(declare-fun res!37467 () Bool)

(assert (=> b!70008 (=> (not res!37467) (not e!45804))))

(assert (=> b!70008 (= res!37467 (contains!720 lt!30761 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!70008 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))

(assert (= (and d!15449 c!10099) b!70003))

(assert (= (and d!15449 (not c!10099)) b!69992))

(assert (= (and b!69992 c!10103) b!69993))

(assert (= (and b!69992 (not c!10103)) b!70002))

(assert (= (and b!70002 c!10098) b!69991))

(assert (= (and b!70002 (not c!10098)) b!69995))

(assert (= (or b!69991 b!69995) bm!5992))

(assert (= (or b!69993 bm!5992) bm!5990))

(assert (= (or b!69993 b!69991) bm!5996))

(assert (= (or b!70003 bm!5990) bm!5993))

(assert (= (or b!70003 bm!5996) bm!5995))

(assert (= (and d!15449 res!37471) b!70005))

(assert (= (and d!15449 c!10102) b!70004))

(assert (= (and d!15449 (not c!10102)) b!69998))

(assert (= (and d!15449 res!37473) b!69989))

(assert (= (and b!69989 res!37472) b!70001))

(assert (= (and b!69989 (not res!37475)) b!70008))

(assert (= (and b!70008 res!37467) b!69996))

(assert (= (and b!69989 res!37474) b!69988))

(assert (= (and b!69988 c!10100) b!69999))

(assert (= (and b!69988 (not c!10100)) b!70006))

(assert (= (and b!69999 res!37468) b!70007))

(assert (= (or b!69999 b!70006) bm!5994))

(assert (= (and b!69988 res!37469) b!69997))

(assert (= (and b!69997 c!10101) b!69994))

(assert (= (and b!69997 (not c!10101)) b!69990))

(assert (= (and b!69994 res!37470) b!70000))

(assert (= (or b!69994 b!69990) bm!5991))

(declare-fun b_lambda!3131 () Bool)

(assert (=> (not b_lambda!3131) (not b!69996)))

(assert (=> b!69996 t!5009))

(declare-fun b_and!4289 () Bool)

(assert (= b_and!4285 (and (=> t!5009 result!2623) b_and!4289)))

(assert (=> b!69996 t!5011))

(declare-fun b_and!4291 () Bool)

(assert (= b_and!4287 (and (=> t!5011 result!2625) b_and!4291)))

(declare-fun m!66493 () Bool)

(assert (=> b!70008 m!66493))

(assert (=> b!70008 m!66493))

(declare-fun m!66495 () Bool)

(assert (=> b!70008 m!66495))

(declare-fun m!66497 () Bool)

(assert (=> b!70000 m!66497))

(declare-fun m!66499 () Bool)

(assert (=> b!70007 m!66499))

(declare-fun m!66501 () Bool)

(assert (=> bm!5995 m!66501))

(assert (=> d!15449 m!64569))

(declare-fun m!66503 () Bool)

(assert (=> bm!5994 m!66503))

(assert (=> b!69996 m!66493))

(assert (=> b!69996 m!64699))

(assert (=> b!69996 m!66493))

(declare-fun m!66505 () Bool)

(assert (=> b!69996 m!66505))

(declare-fun m!66507 () Bool)

(assert (=> b!69996 m!66507))

(assert (=> b!69996 m!66507))

(assert (=> b!69996 m!64699))

(declare-fun m!66509 () Bool)

(assert (=> b!69996 m!66509))

(declare-fun m!66511 () Bool)

(assert (=> b!70003 m!66511))

(assert (=> b!70004 m!66493))

(declare-fun m!66513 () Bool)

(assert (=> b!70004 m!66513))

(declare-fun m!66515 () Bool)

(assert (=> b!70004 m!66515))

(declare-fun m!66517 () Bool)

(assert (=> b!70004 m!66517))

(declare-fun m!66519 () Bool)

(assert (=> b!70004 m!66519))

(declare-fun m!66521 () Bool)

(assert (=> b!70004 m!66521))

(declare-fun m!66523 () Bool)

(assert (=> b!70004 m!66523))

(declare-fun m!66525 () Bool)

(assert (=> b!70004 m!66525))

(declare-fun m!66527 () Bool)

(assert (=> b!70004 m!66527))

(declare-fun m!66529 () Bool)

(assert (=> b!70004 m!66529))

(declare-fun m!66531 () Bool)

(assert (=> b!70004 m!66531))

(declare-fun m!66533 () Bool)

(assert (=> b!70004 m!66533))

(declare-fun m!66535 () Bool)

(assert (=> b!70004 m!66535))

(assert (=> b!70004 m!66525))

(declare-fun m!66537 () Bool)

(assert (=> b!70004 m!66537))

(declare-fun m!66539 () Bool)

(assert (=> b!70004 m!66539))

(assert (=> b!70004 m!66535))

(declare-fun m!66541 () Bool)

(assert (=> b!70004 m!66541))

(assert (=> b!70004 m!66537))

(assert (=> b!70004 m!66529))

(declare-fun m!66543 () Bool)

(assert (=> b!70004 m!66543))

(assert (=> b!70005 m!66493))

(assert (=> b!70005 m!66493))

(declare-fun m!66545 () Bool)

(assert (=> b!70005 m!66545))

(assert (=> b!70001 m!66493))

(assert (=> b!70001 m!66493))

(assert (=> b!70001 m!66545))

(declare-fun m!66547 () Bool)

(assert (=> bm!5991 m!66547))

(assert (=> bm!5993 m!66521))

(assert (=> d!14777 d!15449))

(declare-fun d!15451 () Bool)

(declare-fun e!45812 () Bool)

(assert (=> d!15451 e!45812))

(declare-fun res!37476 () Bool)

(assert (=> d!15451 (=> (not res!37476) (not e!45812))))

(assert (=> d!15451 (= res!37476 (and (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2076 lt!30132))))))

(declare-fun lt!30765 () Unit!1913)

(assert (=> d!15451 (= lt!30765 (choose!399 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (defaultEntry!2168 newMap!16)))))

(assert (=> d!15451 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15451 (= (lemmaValidKeyInArrayIsInListMap!80 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (defaultEntry!2168 newMap!16)) lt!30765)))

(declare-fun b!70009 () Bool)

(assert (=> b!70009 (= e!45812 (contains!720 (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 lt!30132) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))))))

(assert (= (and d!15451 res!37476) b!70009))

(declare-fun m!66549 () Bool)

(assert (=> d!15451 m!66549))

(assert (=> d!15451 m!64569))

(assert (=> b!70009 m!64479))

(declare-fun m!66551 () Bool)

(assert (=> b!70009 m!66551))

(assert (=> b!70009 m!64479))

(assert (=> b!70009 m!66551))

(declare-fun m!66553 () Bool)

(assert (=> b!70009 m!66553))

(assert (=> d!14777 d!15451))

(assert (=> d!14777 d!14809))

(declare-fun d!15453 () Bool)

(assert (=> d!15453 (arrayContainsKey!0 lt!30139 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!30766 () Unit!1913)

(assert (=> d!15453 (= lt!30766 (choose!13 lt!30139 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))

(assert (=> d!15453 (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000)))

(assert (=> d!15453 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30139 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))) lt!30766)))

(declare-fun bs!2998 () Bool)

(assert (= bs!2998 d!15453))

(assert (=> bs!2998 m!64043))

(assert (=> bs!2998 m!64493))

(assert (=> bs!2998 m!64043))

(declare-fun m!66555 () Bool)

(assert (=> bs!2998 m!66555))

(assert (=> d!14777 d!15453))

(declare-fun b!70010 () Bool)

(declare-fun res!37479 () Bool)

(declare-fun e!45815 () Bool)

(assert (=> b!70010 (=> (not res!37479) (not e!45815))))

(declare-fun e!45820 () Bool)

(assert (=> b!70010 (= res!37479 e!45820)))

(declare-fun c!10106 () Bool)

(assert (=> b!70010 (= c!10106 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!70011 () Bool)

(declare-fun res!37484 () Bool)

(assert (=> b!70011 (=> (not res!37484) (not e!45815))))

(declare-fun e!45821 () Bool)

(assert (=> b!70011 (= res!37484 e!45821)))

(declare-fun res!37485 () Bool)

(assert (=> b!70011 (=> res!37485 e!45821)))

(declare-fun e!45825 () Bool)

(assert (=> b!70011 (= res!37485 (not e!45825))))

(declare-fun res!37482 () Bool)

(assert (=> b!70011 (=> (not res!37482) (not e!45825))))

(assert (=> b!70011 (= res!37482 (bvslt #b00000000000000000000000000000000 (size!2076 lt!30132)))))

(declare-fun bm!5997 () Bool)

(declare-fun call!6001 () ListLongMap!1421)

(declare-fun call!6003 () ListLongMap!1421)

(assert (=> bm!5997 (= call!6001 call!6003)))

(declare-fun b!70013 () Bool)

(declare-fun e!45819 () ListLongMap!1421)

(declare-fun call!6000 () ListLongMap!1421)

(assert (=> b!70013 (= e!45819 call!6000)))

(declare-fun b!70014 () Bool)

(declare-fun e!45824 () ListLongMap!1421)

(declare-fun e!45814 () ListLongMap!1421)

(assert (=> b!70014 (= e!45824 e!45814)))

(declare-fun c!10109 () Bool)

(assert (=> b!70014 (= c!10109 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5998 () Bool)

(declare-fun call!6005 () Bool)

(declare-fun lt!30785 () ListLongMap!1421)

(assert (=> bm!5998 (= call!6005 (contains!720 lt!30785 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70015 () Bool)

(assert (=> b!70015 (= e!45814 call!6000)))

(declare-fun b!70016 () Bool)

(declare-fun e!45813 () Bool)

(declare-fun e!45817 () Bool)

(assert (=> b!70016 (= e!45813 e!45817)))

(declare-fun res!37480 () Bool)

(assert (=> b!70016 (= res!37480 call!6005)))

(assert (=> b!70016 (=> (not res!37480) (not e!45817))))

(declare-fun b!70017 () Bool)

(declare-fun call!6002 () ListLongMap!1421)

(assert (=> b!70017 (= e!45819 call!6002)))

(declare-fun e!45818 () Bool)

(declare-fun b!70018 () Bool)

(assert (=> b!70018 (= e!45818 (= (apply!73 lt!30785 (select (arr!1840 lt!30132) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 lt!30138) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70018 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 lt!30138)))))

(assert (=> b!70018 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 lt!30132)))))

(declare-fun b!70019 () Bool)

(assert (=> b!70019 (= e!45815 e!45813)))

(declare-fun c!10107 () Bool)

(assert (=> b!70019 (= c!10107 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!15455 () Bool)

(assert (=> d!15455 e!45815))

(declare-fun res!37483 () Bool)

(assert (=> d!15455 (=> (not res!37483) (not e!45815))))

(assert (=> d!15455 (= res!37483 (or (bvsge #b00000000000000000000000000000000 (size!2076 lt!30132)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 lt!30132)))))))

(declare-fun lt!30777 () ListLongMap!1421)

(assert (=> d!15455 (= lt!30785 lt!30777)))

(declare-fun lt!30781 () Unit!1913)

(declare-fun e!45816 () Unit!1913)

(assert (=> d!15455 (= lt!30781 e!45816)))

(declare-fun c!10108 () Bool)

(declare-fun e!45822 () Bool)

(assert (=> d!15455 (= c!10108 e!45822)))

(declare-fun res!37481 () Bool)

(assert (=> d!15455 (=> (not res!37481) (not e!45822))))

(assert (=> d!15455 (= res!37481 (bvslt #b00000000000000000000000000000000 (size!2076 lt!30132)))))

(assert (=> d!15455 (= lt!30777 e!45824)))

(declare-fun c!10105 () Bool)

(assert (=> d!15455 (= c!10105 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15455 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15455 (= (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30785)))

(declare-fun b!70012 () Bool)

(assert (=> b!70012 (= e!45813 (not call!6005))))

(declare-fun bm!5999 () Bool)

(assert (=> bm!5999 (= call!6002 call!6001)))

(declare-fun bm!6000 () Bool)

(assert (=> bm!6000 (= call!6003 (getCurrentListMapNoExtraKeys!53 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!70020 () Bool)

(declare-fun Unit!1975 () Unit!1913)

(assert (=> b!70020 (= e!45816 Unit!1975)))

(declare-fun b!70021 () Bool)

(declare-fun e!45823 () Bool)

(assert (=> b!70021 (= e!45820 e!45823)))

(declare-fun res!37478 () Bool)

(declare-fun call!6006 () Bool)

(assert (=> b!70021 (= res!37478 call!6006)))

(assert (=> b!70021 (=> (not res!37478) (not e!45823))))

(declare-fun b!70022 () Bool)

(assert (=> b!70022 (= e!45817 (= (apply!73 lt!30785 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!70023 () Bool)

(assert (=> b!70023 (= e!45825 (validKeyInArray!0 (select (arr!1840 lt!30132) #b00000000000000000000000000000000)))))

(declare-fun bm!6001 () Bool)

(assert (=> bm!6001 (= call!6006 (contains!720 lt!30785 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70024 () Bool)

(declare-fun c!10104 () Bool)

(assert (=> b!70024 (= c!10104 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!70024 (= e!45814 e!45819)))

(declare-fun bm!6002 () Bool)

(declare-fun call!6004 () ListLongMap!1421)

(assert (=> bm!6002 (= call!6004 (+!89 (ite c!10105 call!6003 (ite c!10109 call!6001 call!6002)) (ite (or c!10105 c!10109) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun b!70025 () Bool)

(assert (=> b!70025 (= e!45824 (+!89 call!6004 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!70026 () Bool)

(declare-fun lt!30776 () Unit!1913)

(assert (=> b!70026 (= e!45816 lt!30776)))

(declare-fun lt!30783 () ListLongMap!1421)

(assert (=> b!70026 (= lt!30783 (getCurrentListMapNoExtraKeys!53 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30769 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30769 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30775 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30775 (select (arr!1840 lt!30132) #b00000000000000000000000000000000))))

(declare-fun lt!30787 () Unit!1913)

(assert (=> b!70026 (= lt!30787 (addStillContains!49 lt!30783 lt!30769 (zeroValue!2074 newMap!16) lt!30775))))

(assert (=> b!70026 (contains!720 (+!89 lt!30783 (tuple2!2119 lt!30769 (zeroValue!2074 newMap!16))) lt!30775)))

(declare-fun lt!30774 () Unit!1913)

(assert (=> b!70026 (= lt!30774 lt!30787)))

(declare-fun lt!30771 () ListLongMap!1421)

(assert (=> b!70026 (= lt!30771 (getCurrentListMapNoExtraKeys!53 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30786 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30786 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30779 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30779 (select (arr!1840 lt!30132) #b00000000000000000000000000000000))))

(declare-fun lt!30767 () Unit!1913)

(assert (=> b!70026 (= lt!30767 (addApplyDifferent!49 lt!30771 lt!30786 (minValue!2074 newMap!16) lt!30779))))

(assert (=> b!70026 (= (apply!73 (+!89 lt!30771 (tuple2!2119 lt!30786 (minValue!2074 newMap!16))) lt!30779) (apply!73 lt!30771 lt!30779))))

(declare-fun lt!30772 () Unit!1913)

(assert (=> b!70026 (= lt!30772 lt!30767)))

(declare-fun lt!30768 () ListLongMap!1421)

(assert (=> b!70026 (= lt!30768 (getCurrentListMapNoExtraKeys!53 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30784 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30784 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30770 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30770 (select (arr!1840 lt!30132) #b00000000000000000000000000000000))))

(declare-fun lt!30780 () Unit!1913)

(assert (=> b!70026 (= lt!30780 (addApplyDifferent!49 lt!30768 lt!30784 (zeroValue!2074 newMap!16) lt!30770))))

(assert (=> b!70026 (= (apply!73 (+!89 lt!30768 (tuple2!2119 lt!30784 (zeroValue!2074 newMap!16))) lt!30770) (apply!73 lt!30768 lt!30770))))

(declare-fun lt!30778 () Unit!1913)

(assert (=> b!70026 (= lt!30778 lt!30780)))

(declare-fun lt!30788 () ListLongMap!1421)

(assert (=> b!70026 (= lt!30788 (getCurrentListMapNoExtraKeys!53 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30773 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30773 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30782 () (_ BitVec 64))

(assert (=> b!70026 (= lt!30782 (select (arr!1840 lt!30132) #b00000000000000000000000000000000))))

(assert (=> b!70026 (= lt!30776 (addApplyDifferent!49 lt!30788 lt!30773 (minValue!2074 newMap!16) lt!30782))))

(assert (=> b!70026 (= (apply!73 (+!89 lt!30788 (tuple2!2119 lt!30773 (minValue!2074 newMap!16))) lt!30782) (apply!73 lt!30788 lt!30782))))

(declare-fun b!70027 () Bool)

(assert (=> b!70027 (= e!45822 (validKeyInArray!0 (select (arr!1840 lt!30132) #b00000000000000000000000000000000)))))

(declare-fun bm!6003 () Bool)

(assert (=> bm!6003 (= call!6000 call!6004)))

(declare-fun b!70028 () Bool)

(assert (=> b!70028 (= e!45820 (not call!6006))))

(declare-fun b!70029 () Bool)

(assert (=> b!70029 (= e!45823 (= (apply!73 lt!30785 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!70030 () Bool)

(assert (=> b!70030 (= e!45821 e!45818)))

(declare-fun res!37477 () Bool)

(assert (=> b!70030 (=> (not res!37477) (not e!45818))))

(assert (=> b!70030 (= res!37477 (contains!720 lt!30785 (select (arr!1840 lt!30132) #b00000000000000000000000000000000)))))

(assert (=> b!70030 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 lt!30132)))))

(assert (= (and d!15455 c!10105) b!70025))

(assert (= (and d!15455 (not c!10105)) b!70014))

(assert (= (and b!70014 c!10109) b!70015))

(assert (= (and b!70014 (not c!10109)) b!70024))

(assert (= (and b!70024 c!10104) b!70013))

(assert (= (and b!70024 (not c!10104)) b!70017))

(assert (= (or b!70013 b!70017) bm!5999))

(assert (= (or b!70015 bm!5999) bm!5997))

(assert (= (or b!70015 b!70013) bm!6003))

(assert (= (or b!70025 bm!5997) bm!6000))

(assert (= (or b!70025 bm!6003) bm!6002))

(assert (= (and d!15455 res!37481) b!70027))

(assert (= (and d!15455 c!10108) b!70026))

(assert (= (and d!15455 (not c!10108)) b!70020))

(assert (= (and d!15455 res!37483) b!70011))

(assert (= (and b!70011 res!37482) b!70023))

(assert (= (and b!70011 (not res!37485)) b!70030))

(assert (= (and b!70030 res!37477) b!70018))

(assert (= (and b!70011 res!37484) b!70010))

(assert (= (and b!70010 c!10106) b!70021))

(assert (= (and b!70010 (not c!10106)) b!70028))

(assert (= (and b!70021 res!37478) b!70029))

(assert (= (or b!70021 b!70028) bm!6001))

(assert (= (and b!70010 res!37479) b!70019))

(assert (= (and b!70019 c!10107) b!70016))

(assert (= (and b!70019 (not c!10107)) b!70012))

(assert (= (and b!70016 res!37480) b!70022))

(assert (= (or b!70016 b!70012) bm!5998))

(declare-fun b_lambda!3133 () Bool)

(assert (=> (not b_lambda!3133) (not b!70018)))

(assert (=> b!70018 t!5009))

(declare-fun b_and!4293 () Bool)

(assert (= b_and!4289 (and (=> t!5009 result!2623) b_and!4293)))

(assert (=> b!70018 t!5011))

(declare-fun b_and!4295 () Bool)

(assert (= b_and!4291 (and (=> t!5011 result!2625) b_and!4295)))

(declare-fun m!66557 () Bool)

(assert (=> b!70030 m!66557))

(assert (=> b!70030 m!66557))

(declare-fun m!66559 () Bool)

(assert (=> b!70030 m!66559))

(declare-fun m!66561 () Bool)

(assert (=> b!70022 m!66561))

(declare-fun m!66563 () Bool)

(assert (=> b!70029 m!66563))

(declare-fun m!66565 () Bool)

(assert (=> bm!6002 m!66565))

(assert (=> d!15455 m!64569))

(declare-fun m!66567 () Bool)

(assert (=> bm!6001 m!66567))

(assert (=> b!70018 m!66557))

(assert (=> b!70018 m!64699))

(assert (=> b!70018 m!66557))

(declare-fun m!66569 () Bool)

(assert (=> b!70018 m!66569))

(declare-fun m!66571 () Bool)

(assert (=> b!70018 m!66571))

(assert (=> b!70018 m!66571))

(assert (=> b!70018 m!64699))

(declare-fun m!66573 () Bool)

(assert (=> b!70018 m!66573))

(declare-fun m!66575 () Bool)

(assert (=> b!70025 m!66575))

(assert (=> b!70026 m!66557))

(declare-fun m!66577 () Bool)

(assert (=> b!70026 m!66577))

(declare-fun m!66579 () Bool)

(assert (=> b!70026 m!66579))

(declare-fun m!66581 () Bool)

(assert (=> b!70026 m!66581))

(declare-fun m!66583 () Bool)

(assert (=> b!70026 m!66583))

(declare-fun m!66585 () Bool)

(assert (=> b!70026 m!66585))

(declare-fun m!66587 () Bool)

(assert (=> b!70026 m!66587))

(declare-fun m!66589 () Bool)

(assert (=> b!70026 m!66589))

(declare-fun m!66591 () Bool)

(assert (=> b!70026 m!66591))

(declare-fun m!66593 () Bool)

(assert (=> b!70026 m!66593))

(declare-fun m!66595 () Bool)

(assert (=> b!70026 m!66595))

(declare-fun m!66597 () Bool)

(assert (=> b!70026 m!66597))

(declare-fun m!66599 () Bool)

(assert (=> b!70026 m!66599))

(assert (=> b!70026 m!66589))

(declare-fun m!66601 () Bool)

(assert (=> b!70026 m!66601))

(declare-fun m!66603 () Bool)

(assert (=> b!70026 m!66603))

(assert (=> b!70026 m!66599))

(declare-fun m!66605 () Bool)

(assert (=> b!70026 m!66605))

(assert (=> b!70026 m!66601))

(assert (=> b!70026 m!66593))

(declare-fun m!66607 () Bool)

(assert (=> b!70026 m!66607))

(assert (=> b!70027 m!66557))

(assert (=> b!70027 m!66557))

(declare-fun m!66609 () Bool)

(assert (=> b!70027 m!66609))

(assert (=> b!70023 m!66557))

(assert (=> b!70023 m!66557))

(assert (=> b!70023 m!66609))

(declare-fun m!66611 () Bool)

(assert (=> bm!5998 m!66611))

(assert (=> bm!6000 m!66585))

(assert (=> d!14777 d!15455))

(declare-fun d!15457 () Bool)

(declare-fun e!45826 () Bool)

(assert (=> d!15457 e!45826))

(declare-fun res!37486 () Bool)

(assert (=> d!15457 (=> res!37486 e!45826)))

(declare-fun lt!30791 () Bool)

(assert (=> d!15457 (= res!37486 (not lt!30791))))

(declare-fun lt!30792 () Bool)

(assert (=> d!15457 (= lt!30791 lt!30792)))

(declare-fun lt!30790 () Unit!1913)

(declare-fun e!45827 () Unit!1913)

(assert (=> d!15457 (= lt!30790 e!45827)))

(declare-fun c!10110 () Bool)

(assert (=> d!15457 (= c!10110 lt!30792)))

(assert (=> d!15457 (= lt!30792 (containsKey!134 (toList!726 (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))))))

(assert (=> d!15457 (= (contains!720 (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))) lt!30791)))

(declare-fun b!70031 () Bool)

(declare-fun lt!30789 () Unit!1913)

(assert (=> b!70031 (= e!45827 lt!30789)))

(assert (=> b!70031 (= lt!30789 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))))))

(assert (=> b!70031 (isDefined!84 (getValueByKey!130 (toList!726 (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)))))))

(declare-fun b!70032 () Bool)

(declare-fun Unit!1976 () Unit!1913)

(assert (=> b!70032 (= e!45827 Unit!1976)))

(declare-fun b!70033 () Bool)

(assert (=> b!70033 (= e!45826 (isDefined!84 (getValueByKey!130 (toList!726 (getCurrentListMap!421 lt!30132 lt!30138 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007))))))))

(assert (= (and d!15457 c!10110) b!70031))

(assert (= (and d!15457 (not c!10110)) b!70032))

(assert (= (and d!15457 (not res!37486)) b!70033))

(assert (=> d!15457 m!64483))

(declare-fun m!66613 () Bool)

(assert (=> d!15457 m!66613))

(assert (=> b!70031 m!64483))

(declare-fun m!66615 () Bool)

(assert (=> b!70031 m!66615))

(assert (=> b!70031 m!64483))

(declare-fun m!66617 () Bool)

(assert (=> b!70031 m!66617))

(assert (=> b!70031 m!66617))

(declare-fun m!66619 () Bool)

(assert (=> b!70031 m!66619))

(assert (=> b!70033 m!64483))

(assert (=> b!70033 m!66617))

(assert (=> b!70033 m!66617))

(assert (=> b!70033 m!66619))

(assert (=> d!14777 d!15457))

(declare-fun b!70034 () Bool)

(declare-fun e!45829 () Bool)

(declare-fun e!45828 () Bool)

(assert (=> b!70034 (= e!45829 e!45828)))

(declare-fun c!10111 () Bool)

(assert (=> b!70034 (= c!10111 (validKeyInArray!0 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!70035 () Bool)

(declare-fun call!6007 () Bool)

(assert (=> b!70035 (= e!45828 call!6007)))

(declare-fun b!70036 () Bool)

(declare-fun e!45830 () Bool)

(assert (=> b!70036 (= e!45828 e!45830)))

(declare-fun lt!30795 () (_ BitVec 64))

(assert (=> b!70036 (= lt!30795 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30793 () Unit!1913)

(assert (=> b!70036 (= lt!30793 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) lt!30795 #b00000000000000000000000000000000))))

(assert (=> b!70036 (arrayContainsKey!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) lt!30795 #b00000000000000000000000000000000)))

(declare-fun lt!30794 () Unit!1913)

(assert (=> b!70036 (= lt!30794 lt!30793)))

(declare-fun res!37487 () Bool)

(assert (=> b!70036 (= res!37487 (= (seekEntryOrOpen!0 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000) (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (mask!6113 newMap!16)) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!70036 (=> (not res!37487) (not e!45830))))

(declare-fun bm!6004 () Bool)

(assert (=> bm!6004 (= call!6007 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (mask!6113 newMap!16)))))

(declare-fun b!70037 () Bool)

(assert (=> b!70037 (= e!45830 call!6007)))

(declare-fun d!15459 () Bool)

(declare-fun res!37488 () Bool)

(assert (=> d!15459 (=> res!37488 e!45829)))

(assert (=> d!15459 (= res!37488 (bvsge #b00000000000000000000000000000000 (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))

(assert (=> d!15459 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (mask!6113 newMap!16)) e!45829)))

(assert (= (and d!15459 (not res!37488)) b!70034))

(assert (= (and b!70034 c!10111) b!70036))

(assert (= (and b!70034 (not c!10111)) b!70035))

(assert (= (and b!70036 res!37487) b!70037))

(assert (= (or b!70037 b!70035) bm!6004))

(assert (=> b!70034 m!66493))

(assert (=> b!70034 m!66493))

(assert (=> b!70034 m!66545))

(assert (=> b!70036 m!66493))

(declare-fun m!66621 () Bool)

(assert (=> b!70036 m!66621))

(declare-fun m!66623 () Bool)

(assert (=> b!70036 m!66623))

(assert (=> b!70036 m!66493))

(declare-fun m!66625 () Bool)

(assert (=> b!70036 m!66625))

(declare-fun m!66627 () Bool)

(assert (=> bm!6004 m!66627))

(assert (=> d!14777 d!15459))

(declare-fun b!70038 () Bool)

(declare-fun e!45831 () (_ BitVec 32))

(assert (=> b!70038 (= e!45831 #b00000000000000000000000000000000)))

(declare-fun b!70039 () Bool)

(declare-fun e!45832 () (_ BitVec 32))

(assert (=> b!70039 (= e!45831 e!45832)))

(declare-fun c!10112 () Bool)

(assert (=> b!70039 (= c!10112 (validKeyInArray!0 (select (arr!1840 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6005 () Bool)

(declare-fun call!6008 () (_ BitVec 32))

(assert (=> bm!6005 (= call!6008 (arrayCountValidKeys!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!70040 () Bool)

(assert (=> b!70040 (= e!45832 call!6008)))

(declare-fun lt!30796 () (_ BitVec 32))

(declare-fun d!15461 () Bool)

(assert (=> d!15461 (and (bvsge lt!30796 #b00000000000000000000000000000000) (bvsle lt!30796 (bvsub (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!15461 (= lt!30796 e!45831)))

(declare-fun c!10113 () Bool)

(assert (=> d!15461 (= c!10113 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15461 (and (bvsle #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2076 (_keys!3812 newMap!16)) (size!2076 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))))))))

(assert (=> d!15461 (= (arrayCountValidKeys!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))) lt!30796)))

(declare-fun b!70041 () Bool)

(assert (=> b!70041 (= e!45832 (bvadd #b00000000000000000000000000000001 call!6008))))

(assert (= (and d!15461 c!10113) b!70038))

(assert (= (and d!15461 (not c!10113)) b!70039))

(assert (= (and b!70039 c!10112) b!70041))

(assert (= (and b!70039 (not c!10112)) b!70040))

(assert (= (or b!70041 b!70040) bm!6005))

(assert (=> b!70039 m!66493))

(assert (=> b!70039 m!66493))

(assert (=> b!70039 m!66545))

(declare-fun m!66629 () Bool)

(assert (=> bm!6005 m!66629))

(assert (=> d!14777 d!15461))

(declare-fun d!15463 () Bool)

(declare-fun e!45835 () Bool)

(assert (=> d!15463 e!45835))

(declare-fun res!37491 () Bool)

(assert (=> d!15463 (=> (not res!37491) (not e!45835))))

(assert (=> d!15463 (= res!37491 (and (bvsge (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) #b00000000000000000000000000000000) (bvslt (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (size!2076 (_keys!3812 newMap!16)))))))

(declare-fun lt!30799 () Unit!1913)

(declare-fun choose!41 (array!3854 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1495) Unit!1913)

(assert (=> d!15463 (= lt!30799 (choose!41 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) lt!30133 lt!30118))))

(assert (=> d!15463 (bvslt (size!2076 (_keys!3812 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!15463 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) lt!30133 lt!30118) lt!30799)))

(declare-fun b!70044 () Bool)

(assert (=> b!70044 (= e!45835 (arrayNoDuplicates!0 (array!3855 (store (arr!1840 (_keys!3812 newMap!16)) (ite c!9758 (index!3108 lt!30007) (index!3105 lt!30007)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (size!2076 (_keys!3812 newMap!16))) lt!30133 lt!30118))))

(assert (= (and d!15463 res!37491) b!70044))

(assert (=> d!15463 m!64043))

(declare-fun m!66631 () Bool)

(assert (=> d!15463 m!66631))

(assert (=> b!70044 m!64465))

(assert (=> b!70044 m!64467))

(assert (=> d!14777 d!15463))

(declare-fun d!15465 () Bool)

(assert (=> d!15465 (= (apply!73 lt!30232 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30232) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2999 () Bool)

(assert (= bs!2999 d!15465))

(declare-fun m!66633 () Bool)

(assert (=> bs!2999 m!66633))

(assert (=> bs!2999 m!66633))

(declare-fun m!66635 () Bool)

(assert (=> bs!2999 m!66635))

(assert (=> b!69050 d!15465))

(declare-fun d!15467 () Bool)

(declare-fun lt!30800 () Bool)

(assert (=> d!15467 (= lt!30800 (select (content!72 (toList!726 lt!30038)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun e!45836 () Bool)

(assert (=> d!15467 (= lt!30800 e!45836)))

(declare-fun res!37493 () Bool)

(assert (=> d!15467 (=> (not res!37493) (not e!45836))))

(assert (=> d!15467 (= res!37493 ((_ is Cons!1490) (toList!726 lt!30038)))))

(assert (=> d!15467 (= (contains!721 (toList!726 lt!30038) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30800)))

(declare-fun b!70045 () Bool)

(declare-fun e!45837 () Bool)

(assert (=> b!70045 (= e!45836 e!45837)))

(declare-fun res!37492 () Bool)

(assert (=> b!70045 (=> res!37492 e!45837)))

(assert (=> b!70045 (= res!37492 (= (h!2075 (toList!726 lt!30038)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!70046 () Bool)

(assert (=> b!70046 (= e!45837 (contains!721 (t!5001 (toList!726 lt!30038)) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15467 res!37493) b!70045))

(assert (= (and b!70045 (not res!37492)) b!70046))

(declare-fun m!66637 () Bool)

(assert (=> d!15467 m!66637))

(declare-fun m!66639 () Bool)

(assert (=> d!15467 m!66639))

(declare-fun m!66641 () Bool)

(assert (=> b!70046 m!66641))

(assert (=> b!68803 d!15467))

(declare-fun b!70047 () Bool)

(declare-fun e!45838 () Bool)

(assert (=> b!70047 (= e!45838 (contains!722 Nil!1492 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(declare-fun b!70048 () Bool)

(declare-fun e!45839 () Bool)

(declare-fun call!6009 () Bool)

(assert (=> b!70048 (= e!45839 call!6009)))

(declare-fun bm!6006 () Bool)

(declare-fun c!10114 () Bool)

(assert (=> bm!6006 (= call!6009 (arrayNoDuplicates!0 (_keys!3812 (_2!1070 lt!30024)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10114 (Cons!1491 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000) Nil!1492) Nil!1492)))))

(declare-fun d!15469 () Bool)

(declare-fun res!37496 () Bool)

(declare-fun e!45841 () Bool)

(assert (=> d!15469 (=> res!37496 e!45841)))

(assert (=> d!15469 (= res!37496 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(assert (=> d!15469 (= (arrayNoDuplicates!0 (_keys!3812 (_2!1070 lt!30024)) #b00000000000000000000000000000000 Nil!1492) e!45841)))

(declare-fun b!70049 () Bool)

(declare-fun e!45840 () Bool)

(assert (=> b!70049 (= e!45840 e!45839)))

(assert (=> b!70049 (= c!10114 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(declare-fun b!70050 () Bool)

(assert (=> b!70050 (= e!45839 call!6009)))

(declare-fun b!70051 () Bool)

(assert (=> b!70051 (= e!45841 e!45840)))

(declare-fun res!37495 () Bool)

(assert (=> b!70051 (=> (not res!37495) (not e!45840))))

(assert (=> b!70051 (= res!37495 (not e!45838))))

(declare-fun res!37494 () Bool)

(assert (=> b!70051 (=> (not res!37494) (not e!45838))))

(assert (=> b!70051 (= res!37494 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(assert (= (and d!15469 (not res!37496)) b!70051))

(assert (= (and b!70051 res!37494) b!70047))

(assert (= (and b!70051 res!37495) b!70049))

(assert (= (and b!70049 c!10114) b!70050))

(assert (= (and b!70049 (not c!10114)) b!70048))

(assert (= (or b!70050 b!70048) bm!6006))

(declare-fun m!66643 () Bool)

(assert (=> b!70047 m!66643))

(assert (=> b!70047 m!66643))

(declare-fun m!66645 () Bool)

(assert (=> b!70047 m!66645))

(assert (=> bm!6006 m!66643))

(declare-fun m!66647 () Bool)

(assert (=> bm!6006 m!66647))

(assert (=> b!70049 m!66643))

(assert (=> b!70049 m!66643))

(declare-fun m!66649 () Bool)

(assert (=> b!70049 m!66649))

(assert (=> b!70051 m!66643))

(assert (=> b!70051 m!66643))

(assert (=> b!70051 m!66649))

(assert (=> b!69282 d!15469))

(declare-fun d!15471 () Bool)

(declare-fun res!37497 () Bool)

(declare-fun e!45842 () Bool)

(assert (=> d!15471 (=> res!37497 e!45842)))

(assert (=> d!15471 (= res!37497 (and ((_ is Cons!1490) (toList!726 lt!29926)) (= (_1!1069 (h!2075 (toList!726 lt!29926))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15471 (= (containsKey!134 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000) e!45842)))

(declare-fun b!70052 () Bool)

(declare-fun e!45843 () Bool)

(assert (=> b!70052 (= e!45842 e!45843)))

(declare-fun res!37498 () Bool)

(assert (=> b!70052 (=> (not res!37498) (not e!45843))))

(assert (=> b!70052 (= res!37498 (and (or (not ((_ is Cons!1490) (toList!726 lt!29926))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29926))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!726 lt!29926)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29926))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70053 () Bool)

(assert (=> b!70053 (= e!45843 (containsKey!134 (t!5001 (toList!726 lt!29926)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15471 (not res!37497)) b!70052))

(assert (= (and b!70052 res!37498) b!70053))

(declare-fun m!66651 () Bool)

(assert (=> b!70053 m!66651))

(assert (=> d!14903 d!15471))

(declare-fun d!15473 () Bool)

(assert (=> d!15473 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3000 () Bool)

(assert (= bs!3000 d!15473))

(assert (=> bs!3000 m!64615))

(declare-fun m!66653 () Bool)

(assert (=> bs!3000 m!66653))

(assert (=> b!69011 d!15473))

(assert (=> b!69011 d!15029))

(assert (=> b!69029 d!15083))

(declare-fun d!15475 () Bool)

(declare-fun e!45844 () Bool)

(assert (=> d!15475 e!45844))

(declare-fun res!37499 () Bool)

(assert (=> d!15475 (=> res!37499 e!45844)))

(declare-fun lt!30803 () Bool)

(assert (=> d!15475 (= res!37499 (not lt!30803))))

(declare-fun lt!30804 () Bool)

(assert (=> d!15475 (= lt!30803 lt!30804)))

(declare-fun lt!30802 () Unit!1913)

(declare-fun e!45845 () Unit!1913)

(assert (=> d!15475 (= lt!30802 e!45845)))

(declare-fun c!10115 () Bool)

(assert (=> d!15475 (= c!10115 lt!30804)))

(assert (=> d!15475 (= lt!30804 (containsKey!134 (toList!726 lt!30198) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15475 (= (contains!720 lt!30198 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30803)))

(declare-fun b!70054 () Bool)

(declare-fun lt!30801 () Unit!1913)

(assert (=> b!70054 (= e!45845 lt!30801)))

(assert (=> b!70054 (= lt!30801 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30198) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!70054 (isDefined!84 (getValueByKey!130 (toList!726 lt!30198) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70055 () Bool)

(declare-fun Unit!1977 () Unit!1913)

(assert (=> b!70055 (= e!45845 Unit!1977)))

(declare-fun b!70056 () Bool)

(assert (=> b!70056 (= e!45844 (isDefined!84 (getValueByKey!130 (toList!726 lt!30198) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15475 c!10115) b!70054))

(assert (= (and d!15475 (not c!10115)) b!70055))

(assert (= (and d!15475 (not res!37499)) b!70056))

(declare-fun m!66655 () Bool)

(assert (=> d!15475 m!66655))

(declare-fun m!66657 () Bool)

(assert (=> b!70054 m!66657))

(assert (=> b!70054 m!64647))

(assert (=> b!70054 m!64647))

(declare-fun m!66659 () Bool)

(assert (=> b!70054 m!66659))

(assert (=> b!70056 m!64647))

(assert (=> b!70056 m!64647))

(assert (=> b!70056 m!66659))

(assert (=> d!14819 d!15475))

(declare-fun b!70060 () Bool)

(declare-fun e!45847 () Option!136)

(assert (=> b!70060 (= e!45847 None!134)))

(declare-fun d!15477 () Bool)

(declare-fun c!10116 () Bool)

(assert (=> d!15477 (= c!10116 (and ((_ is Cons!1490) lt!30199) (= (_1!1069 (h!2075 lt!30199)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!45846 () Option!136)

(assert (=> d!15477 (= (getValueByKey!130 lt!30199 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!45846)))

(declare-fun b!70057 () Bool)

(assert (=> b!70057 (= e!45846 (Some!135 (_2!1069 (h!2075 lt!30199))))))

(declare-fun b!70059 () Bool)

(assert (=> b!70059 (= e!45847 (getValueByKey!130 (t!5001 lt!30199) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70058 () Bool)

(assert (=> b!70058 (= e!45846 e!45847)))

(declare-fun c!10117 () Bool)

(assert (=> b!70058 (= c!10117 (and ((_ is Cons!1490) lt!30199) (not (= (_1!1069 (h!2075 lt!30199)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!15477 c!10116) b!70057))

(assert (= (and d!15477 (not c!10116)) b!70058))

(assert (= (and b!70058 c!10117) b!70059))

(assert (= (and b!70058 (not c!10117)) b!70060))

(declare-fun m!66661 () Bool)

(assert (=> b!70059 m!66661))

(assert (=> d!14819 d!15477))

(declare-fun d!15479 () Bool)

(assert (=> d!15479 (= (getValueByKey!130 lt!30199 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30805 () Unit!1913)

(assert (=> d!15479 (= lt!30805 (choose!390 lt!30199 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!45848 () Bool)

(assert (=> d!15479 e!45848))

(declare-fun res!37500 () Bool)

(assert (=> d!15479 (=> (not res!37500) (not e!45848))))

(assert (=> d!15479 (= res!37500 (isStrictlySorted!285 lt!30199))))

(assert (=> d!15479 (= (lemmaContainsTupThenGetReturnValue!49 lt!30199 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30805)))

(declare-fun b!70061 () Bool)

(declare-fun res!37501 () Bool)

(assert (=> b!70061 (=> (not res!37501) (not e!45848))))

(assert (=> b!70061 (= res!37501 (containsKey!134 lt!30199 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70062 () Bool)

(assert (=> b!70062 (= e!45848 (contains!721 lt!30199 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15479 res!37500) b!70061))

(assert (= (and b!70061 res!37501) b!70062))

(assert (=> d!15479 m!64641))

(declare-fun m!66663 () Bool)

(assert (=> d!15479 m!66663))

(declare-fun m!66665 () Bool)

(assert (=> d!15479 m!66665))

(declare-fun m!66667 () Bool)

(assert (=> b!70061 m!66667))

(declare-fun m!66669 () Bool)

(assert (=> b!70062 m!66669))

(assert (=> d!14819 d!15479))

(declare-fun bm!6007 () Bool)

(declare-fun call!6010 () List!1494)

(declare-fun call!6012 () List!1494)

(assert (=> bm!6007 (= call!6010 call!6012)))

(declare-fun b!70063 () Bool)

(declare-fun e!45852 () List!1494)

(declare-fun call!6011 () List!1494)

(assert (=> b!70063 (= e!45852 call!6011)))

(declare-fun b!70064 () Bool)

(declare-fun e!45851 () List!1494)

(assert (=> b!70064 (= e!45851 (insertStrictlySorted!51 (t!5001 (toList!726 call!5763)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70066 () Bool)

(declare-fun res!37503 () Bool)

(declare-fun e!45850 () Bool)

(assert (=> b!70066 (=> (not res!37503) (not e!45850))))

(declare-fun lt!30806 () List!1494)

(assert (=> b!70066 (= res!37503 (containsKey!134 lt!30806 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70067 () Bool)

(declare-fun e!45849 () List!1494)

(declare-fun e!45853 () List!1494)

(assert (=> b!70067 (= e!45849 e!45853)))

(declare-fun c!10118 () Bool)

(assert (=> b!70067 (= c!10118 (and ((_ is Cons!1490) (toList!726 call!5763)) (= (_1!1069 (h!2075 (toList!726 call!5763))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!70068 () Bool)

(declare-fun c!10119 () Bool)

(assert (=> b!70068 (= e!45851 (ite c!10118 (t!5001 (toList!726 call!5763)) (ite c!10119 (Cons!1490 (h!2075 (toList!726 call!5763)) (t!5001 (toList!726 call!5763))) Nil!1491)))))

(declare-fun b!70069 () Bool)

(assert (=> b!70069 (= e!45852 call!6011)))

(declare-fun b!70070 () Bool)

(assert (=> b!70070 (= e!45853 call!6010)))

(declare-fun b!70071 () Bool)

(assert (=> b!70071 (= e!45849 call!6012)))

(declare-fun c!10120 () Bool)

(declare-fun bm!6008 () Bool)

(assert (=> bm!6008 (= call!6012 ($colon$colon!63 e!45851 (ite c!10120 (h!2075 (toList!726 call!5763)) (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!10121 () Bool)

(assert (=> bm!6008 (= c!10121 c!10120)))

(declare-fun b!70072 () Bool)

(assert (=> b!70072 (= e!45850 (contains!721 lt!30806 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!6009 () Bool)

(assert (=> bm!6009 (= call!6011 call!6010)))

(declare-fun b!70065 () Bool)

(assert (=> b!70065 (= c!10119 (and ((_ is Cons!1490) (toList!726 call!5763)) (bvsgt (_1!1069 (h!2075 (toList!726 call!5763))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!70065 (= e!45853 e!45852)))

(declare-fun d!15481 () Bool)

(assert (=> d!15481 e!45850))

(declare-fun res!37502 () Bool)

(assert (=> d!15481 (=> (not res!37502) (not e!45850))))

(assert (=> d!15481 (= res!37502 (isStrictlySorted!285 lt!30806))))

(assert (=> d!15481 (= lt!30806 e!45849)))

(assert (=> d!15481 (= c!10120 (and ((_ is Cons!1490) (toList!726 call!5763)) (bvslt (_1!1069 (h!2075 (toList!726 call!5763))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15481 (isStrictlySorted!285 (toList!726 call!5763))))

(assert (=> d!15481 (= (insertStrictlySorted!51 (toList!726 call!5763) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30806)))

(assert (= (and d!15481 c!10120) b!70071))

(assert (= (and d!15481 (not c!10120)) b!70067))

(assert (= (and b!70067 c!10118) b!70070))

(assert (= (and b!70067 (not c!10118)) b!70065))

(assert (= (and b!70065 c!10119) b!70069))

(assert (= (and b!70065 (not c!10119)) b!70063))

(assert (= (or b!70069 b!70063) bm!6009))

(assert (= (or b!70070 bm!6009) bm!6007))

(assert (= (or b!70071 bm!6007) bm!6008))

(assert (= (and bm!6008 c!10121) b!70064))

(assert (= (and bm!6008 (not c!10121)) b!70068))

(assert (= (and d!15481 res!37502) b!70066))

(assert (= (and b!70066 res!37503) b!70072))

(declare-fun m!66671 () Bool)

(assert (=> b!70064 m!66671))

(declare-fun m!66673 () Bool)

(assert (=> d!15481 m!66673))

(declare-fun m!66675 () Bool)

(assert (=> d!15481 m!66675))

(declare-fun m!66677 () Bool)

(assert (=> b!70066 m!66677))

(declare-fun m!66679 () Bool)

(assert (=> bm!6008 m!66679))

(declare-fun m!66681 () Bool)

(assert (=> b!70072 m!66681))

(assert (=> d!14819 d!15481))

(declare-fun d!15483 () Bool)

(assert (=> d!15483 (= (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29920)) (v!2499 (getValueByKey!130 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29920)))))

(assert (=> d!14931 d!15483))

(declare-fun b!70076 () Bool)

(declare-fun e!45855 () Option!136)

(assert (=> b!70076 (= e!45855 None!134)))

(declare-fun c!10122 () Bool)

(declare-fun d!15485 () Bool)

(assert (=> d!15485 (= c!10122 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29920)))))

(declare-fun e!45854 () Option!136)

(assert (=> d!15485 (= (getValueByKey!130 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29920) e!45854)))

(declare-fun b!70073 () Bool)

(assert (=> b!70073 (= e!45854 (Some!135 (_2!1069 (h!2075 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))))

(declare-fun b!70075 () Bool)

(assert (=> b!70075 (= e!45855 (getValueByKey!130 (t!5001 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!29920))))

(declare-fun b!70074 () Bool)

(assert (=> b!70074 (= e!45854 e!45855)))

(declare-fun c!10123 () Bool)

(assert (=> b!70074 (= c!10123 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))) (not (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29912 (tuple2!2119 lt!29927 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29920))))))

(assert (= (and d!15485 c!10122) b!70073))

(assert (= (and d!15485 (not c!10122)) b!70074))

(assert (= (and b!70074 c!10123) b!70075))

(assert (= (and b!70074 (not c!10123)) b!70076))

(declare-fun m!66683 () Bool)

(assert (=> b!70075 m!66683))

(assert (=> d!14931 d!15485))

(declare-fun d!15487 () Bool)

(assert (=> d!15487 (= (apply!73 lt!30254 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30254) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3001 () Bool)

(assert (= bs!3001 d!15487))

(declare-fun m!66685 () Bool)

(assert (=> bs!3001 m!66685))

(assert (=> bs!3001 m!66685))

(declare-fun m!66687 () Bool)

(assert (=> bs!3001 m!66687))

(assert (=> b!69071 d!15487))

(declare-fun d!15489 () Bool)

(declare-fun lt!30807 () Bool)

(assert (=> d!15489 (= lt!30807 (select (content!72 lt!30275) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun e!45856 () Bool)

(assert (=> d!15489 (= lt!30807 e!45856)))

(declare-fun res!37505 () Bool)

(assert (=> d!15489 (=> (not res!37505) (not e!45856))))

(assert (=> d!15489 (= res!37505 ((_ is Cons!1490) lt!30275))))

(assert (=> d!15489 (= (contains!721 lt!30275 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))) lt!30807)))

(declare-fun b!70077 () Bool)

(declare-fun e!45857 () Bool)

(assert (=> b!70077 (= e!45856 e!45857)))

(declare-fun res!37504 () Bool)

(assert (=> b!70077 (=> res!37504 e!45857)))

(assert (=> b!70077 (= res!37504 (= (h!2075 lt!30275) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun b!70078 () Bool)

(assert (=> b!70078 (= e!45857 (contains!721 (t!5001 lt!30275) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(assert (= (and d!15489 res!37505) b!70077))

(assert (= (and b!70077 (not res!37504)) b!70078))

(declare-fun m!66689 () Bool)

(assert (=> d!15489 m!66689))

(declare-fun m!66691 () Bool)

(assert (=> d!15489 m!66691))

(declare-fun m!66693 () Bool)

(assert (=> b!70078 m!66693))

(assert (=> b!69112 d!15489))

(declare-fun d!15491 () Bool)

(assert (=> d!15491 (= (apply!73 lt!30393 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30393) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3002 () Bool)

(assert (= bs!3002 d!15491))

(declare-fun m!66695 () Bool)

(assert (=> bs!3002 m!66695))

(assert (=> bs!3002 m!66695))

(declare-fun m!66697 () Bool)

(assert (=> bs!3002 m!66697))

(assert (=> b!69252 d!15491))

(declare-fun d!15493 () Bool)

(assert (=> d!15493 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30808 () Unit!1913)

(assert (=> d!15493 (= lt!30808 (choose!395 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45858 () Bool)

(assert (=> d!15493 e!45858))

(declare-fun res!37506 () Bool)

(assert (=> d!15493 (=> (not res!37506) (not e!45858))))

(assert (=> d!15493 (= res!37506 (isStrictlySorted!285 (toList!726 lt!29836)))))

(assert (=> d!15493 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30808)))

(declare-fun b!70079 () Bool)

(assert (=> b!70079 (= e!45858 (containsKey!134 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15493 res!37506) b!70079))

(assert (=> d!15493 m!64591))

(assert (=> d!15493 m!64591))

(assert (=> d!15493 m!64593))

(declare-fun m!66699 () Bool)

(assert (=> d!15493 m!66699))

(assert (=> d!15493 m!66361))

(assert (=> b!70079 m!64587))

(assert (=> b!68981 d!15493))

(assert (=> b!68981 d!15285))

(assert (=> b!68981 d!15287))

(declare-fun d!15495 () Bool)

(declare-fun lt!30809 () Bool)

(assert (=> d!15495 (= lt!30809 (select (content!72 lt!29859) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun e!45859 () Bool)

(assert (=> d!15495 (= lt!30809 e!45859)))

(declare-fun res!37508 () Bool)

(assert (=> d!15495 (=> (not res!37508) (not e!45859))))

(assert (=> d!15495 (= res!37508 ((_ is Cons!1490) lt!29859))))

(assert (=> d!15495 (= (contains!721 lt!29859 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))) lt!30809)))

(declare-fun b!70080 () Bool)

(declare-fun e!45860 () Bool)

(assert (=> b!70080 (= e!45859 e!45860)))

(declare-fun res!37507 () Bool)

(assert (=> b!70080 (=> res!37507 e!45860)))

(assert (=> b!70080 (= res!37507 (= (h!2075 lt!29859) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun b!70081 () Bool)

(assert (=> b!70081 (= e!45860 (contains!721 (t!5001 lt!29859) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(assert (= (and d!15495 res!37508) b!70080))

(assert (= (and b!70080 (not res!37507)) b!70081))

(declare-fun m!66701 () Bool)

(assert (=> d!15495 m!66701))

(declare-fun m!66703 () Bool)

(assert (=> d!15495 m!66703))

(declare-fun m!66705 () Bool)

(assert (=> b!70081 m!66705))

(assert (=> b!69186 d!15495))

(declare-fun d!15497 () Bool)

(declare-fun lt!30810 () Bool)

(assert (=> d!15497 (= lt!30810 (select (content!72 lt!29852) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun e!45861 () Bool)

(assert (=> d!15497 (= lt!30810 e!45861)))

(declare-fun res!37510 () Bool)

(assert (=> d!15497 (=> (not res!37510) (not e!45861))))

(assert (=> d!15497 (= res!37510 ((_ is Cons!1490) lt!29852))))

(assert (=> d!15497 (= (contains!721 lt!29852 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))) lt!30810)))

(declare-fun b!70082 () Bool)

(declare-fun e!45862 () Bool)

(assert (=> b!70082 (= e!45861 e!45862)))

(declare-fun res!37509 () Bool)

(assert (=> b!70082 (=> res!37509 e!45862)))

(assert (=> b!70082 (= res!37509 (= (h!2075 lt!29852) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun b!70083 () Bool)

(assert (=> b!70083 (= e!45862 (contains!721 (t!5001 lt!29852) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(assert (= (and d!15497 res!37510) b!70082))

(assert (= (and b!70082 (not res!37509)) b!70083))

(declare-fun m!66707 () Bool)

(assert (=> d!15497 m!66707))

(declare-fun m!66709 () Bool)

(assert (=> d!15497 m!66709))

(declare-fun m!66711 () Bool)

(assert (=> b!70083 m!66711))

(assert (=> b!68828 d!15497))

(declare-fun b!70087 () Bool)

(declare-fun e!45864 () Option!136)

(assert (=> b!70087 (= e!45864 None!134)))

(declare-fun c!10124 () Bool)

(declare-fun d!15499 () Bool)

(assert (=> d!15499 (= c!10124 (and ((_ is Cons!1490) (toList!726 lt!30198)) (= (_1!1069 (h!2075 (toList!726 lt!30198))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!45863 () Option!136)

(assert (=> d!15499 (= (getValueByKey!130 (toList!726 lt!30198) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!45863)))

(declare-fun b!70084 () Bool)

(assert (=> b!70084 (= e!45863 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30198)))))))

(declare-fun b!70086 () Bool)

(assert (=> b!70086 (= e!45864 (getValueByKey!130 (t!5001 (toList!726 lt!30198)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70085 () Bool)

(assert (=> b!70085 (= e!45863 e!45864)))

(declare-fun c!10125 () Bool)

(assert (=> b!70085 (= c!10125 (and ((_ is Cons!1490) (toList!726 lt!30198)) (not (= (_1!1069 (h!2075 (toList!726 lt!30198))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!15499 c!10124) b!70084))

(assert (= (and d!15499 (not c!10124)) b!70085))

(assert (= (and b!70085 c!10125) b!70086))

(assert (= (and b!70085 (not c!10125)) b!70087))

(declare-fun m!66713 () Bool)

(assert (=> b!70086 m!66713))

(assert (=> b!69020 d!15499))

(declare-fun d!15501 () Bool)

(assert (=> d!15501 (isDefined!84 (getValueByKey!130 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30811 () Unit!1913)

(assert (=> d!15501 (= lt!30811 (choose!395 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45865 () Bool)

(assert (=> d!15501 e!45865))

(declare-fun res!37511 () Bool)

(assert (=> d!15501 (=> (not res!37511) (not e!45865))))

(assert (=> d!15501 (= res!37511 (isStrictlySorted!285 (toList!726 lt!29926)))))

(assert (=> d!15501 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30811)))

(declare-fun b!70088 () Bool)

(assert (=> b!70088 (= e!45865 (containsKey!134 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15501 res!37511) b!70088))

(assert (=> d!15501 m!64159))

(assert (=> d!15501 m!64813))

(assert (=> d!15501 m!64813))

(assert (=> d!15501 m!64815))

(assert (=> d!15501 m!64159))

(declare-fun m!66715 () Bool)

(assert (=> d!15501 m!66715))

(assert (=> d!15501 m!65501))

(assert (=> b!70088 m!64159))

(assert (=> b!70088 m!64809))

(assert (=> b!69089 d!15501))

(assert (=> b!69089 d!15323))

(assert (=> b!69089 d!15325))

(declare-fun e!45866 () Bool)

(declare-fun b!70089 () Bool)

(assert (=> b!70089 (= e!45866 (contains!722 (ite c!9855 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!70090 () Bool)

(declare-fun e!45867 () Bool)

(declare-fun call!6013 () Bool)

(assert (=> b!70090 (= e!45867 call!6013)))

(declare-fun c!10126 () Bool)

(declare-fun bm!6010 () Bool)

(assert (=> bm!6010 (= call!6013 (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10126 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9855 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492))) (ite c!9855 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)))))))

(declare-fun d!15503 () Bool)

(declare-fun res!37514 () Bool)

(declare-fun e!45869 () Bool)

(assert (=> d!15503 (=> res!37514 e!45869)))

(assert (=> d!15503 (= res!37514 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!15503 (= (arrayNoDuplicates!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9855 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492))) e!45869)))

(declare-fun b!70091 () Bool)

(declare-fun e!45868 () Bool)

(assert (=> b!70091 (= e!45868 e!45867)))

(assert (=> b!70091 (= c!10126 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!70092 () Bool)

(assert (=> b!70092 (= e!45867 call!6013)))

(declare-fun b!70093 () Bool)

(assert (=> b!70093 (= e!45869 e!45868)))

(declare-fun res!37513 () Bool)

(assert (=> b!70093 (=> (not res!37513) (not e!45868))))

(assert (=> b!70093 (= res!37513 (not e!45866))))

(declare-fun res!37512 () Bool)

(assert (=> b!70093 (=> (not res!37512) (not e!45866))))

(assert (=> b!70093 (= res!37512 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!15503 (not res!37514)) b!70093))

(assert (= (and b!70093 res!37512) b!70089))

(assert (= (and b!70093 res!37513) b!70091))

(assert (= (and b!70091 c!10126) b!70092))

(assert (= (and b!70091 (not c!10126)) b!70090))

(assert (= (or b!70092 b!70090) bm!6010))

(declare-fun m!66717 () Bool)

(assert (=> b!70089 m!66717))

(assert (=> b!70089 m!66717))

(declare-fun m!66719 () Bool)

(assert (=> b!70089 m!66719))

(assert (=> bm!6010 m!66717))

(declare-fun m!66721 () Bool)

(assert (=> bm!6010 m!66721))

(assert (=> b!70091 m!66717))

(assert (=> b!70091 m!66717))

(declare-fun m!66723 () Bool)

(assert (=> b!70091 m!66723))

(assert (=> b!70093 m!66717))

(assert (=> b!70093 m!66717))

(assert (=> b!70093 m!66723))

(assert (=> bm!5906 d!15503))

(declare-fun d!15505 () Bool)

(declare-fun e!45870 () Bool)

(assert (=> d!15505 e!45870))

(declare-fun res!37515 () Bool)

(assert (=> d!15505 (=> res!37515 e!45870)))

(declare-fun lt!30814 () Bool)

(assert (=> d!15505 (= res!37515 (not lt!30814))))

(declare-fun lt!30815 () Bool)

(assert (=> d!15505 (= lt!30814 lt!30815)))

(declare-fun lt!30813 () Unit!1913)

(declare-fun e!45871 () Unit!1913)

(assert (=> d!15505 (= lt!30813 e!45871)))

(declare-fun c!10127 () Bool)

(assert (=> d!15505 (= c!10127 lt!30815)))

(assert (=> d!15505 (= lt!30815 (containsKey!134 (toList!726 lt!30038) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15505 (= (contains!720 lt!30038 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30814)))

(declare-fun b!70094 () Bool)

(declare-fun lt!30812 () Unit!1913)

(assert (=> b!70094 (= e!45871 lt!30812)))

(assert (=> b!70094 (= lt!30812 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30038) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> b!70094 (isDefined!84 (getValueByKey!130 (toList!726 lt!30038) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70095 () Bool)

(declare-fun Unit!1978 () Unit!1913)

(assert (=> b!70095 (= e!45871 Unit!1978)))

(declare-fun b!70096 () Bool)

(assert (=> b!70096 (= e!45870 (isDefined!84 (getValueByKey!130 (toList!726 lt!30038) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15505 c!10127) b!70094))

(assert (= (and d!15505 (not c!10127)) b!70095))

(assert (= (and d!15505 (not res!37515)) b!70096))

(declare-fun m!66725 () Bool)

(assert (=> d!15505 m!66725))

(declare-fun m!66727 () Bool)

(assert (=> b!70094 m!66727))

(assert (=> b!70094 m!64405))

(assert (=> b!70094 m!64405))

(declare-fun m!66729 () Bool)

(assert (=> b!70094 m!66729))

(assert (=> b!70096 m!64405))

(assert (=> b!70096 m!64405))

(assert (=> b!70096 m!66729))

(assert (=> d!14761 d!15505))

(declare-fun b!70100 () Bool)

(declare-fun e!45873 () Option!136)

(assert (=> b!70100 (= e!45873 None!134)))

(declare-fun d!15507 () Bool)

(declare-fun c!10128 () Bool)

(assert (=> d!15507 (= c!10128 (and ((_ is Cons!1490) lt!30039) (= (_1!1069 (h!2075 lt!30039)) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45872 () Option!136)

(assert (=> d!15507 (= (getValueByKey!130 lt!30039 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45872)))

(declare-fun b!70097 () Bool)

(assert (=> b!70097 (= e!45872 (Some!135 (_2!1069 (h!2075 lt!30039))))))

(declare-fun b!70099 () Bool)

(assert (=> b!70099 (= e!45873 (getValueByKey!130 (t!5001 lt!30039) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70098 () Bool)

(assert (=> b!70098 (= e!45872 e!45873)))

(declare-fun c!10129 () Bool)

(assert (=> b!70098 (= c!10129 (and ((_ is Cons!1490) lt!30039) (not (= (_1!1069 (h!2075 lt!30039)) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15507 c!10128) b!70097))

(assert (= (and d!15507 (not c!10128)) b!70098))

(assert (= (and b!70098 c!10129) b!70099))

(assert (= (and b!70098 (not c!10129)) b!70100))

(declare-fun m!66731 () Bool)

(assert (=> b!70099 m!66731))

(assert (=> d!14761 d!15507))

(declare-fun d!15509 () Bool)

(assert (=> d!15509 (= (getValueByKey!130 lt!30039 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30816 () Unit!1913)

(assert (=> d!15509 (= lt!30816 (choose!390 lt!30039 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!45874 () Bool)

(assert (=> d!15509 e!45874))

(declare-fun res!37516 () Bool)

(assert (=> d!15509 (=> (not res!37516) (not e!45874))))

(assert (=> d!15509 (= res!37516 (isStrictlySorted!285 lt!30039))))

(assert (=> d!15509 (= (lemmaContainsTupThenGetReturnValue!49 lt!30039 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30816)))

(declare-fun b!70101 () Bool)

(declare-fun res!37517 () Bool)

(assert (=> b!70101 (=> (not res!37517) (not e!45874))))

(assert (=> b!70101 (= res!37517 (containsKey!134 lt!30039 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70102 () Bool)

(assert (=> b!70102 (= e!45874 (contains!721 lt!30039 (tuple2!2119 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15509 res!37516) b!70101))

(assert (= (and b!70101 res!37517) b!70102))

(assert (=> d!15509 m!64399))

(declare-fun m!66733 () Bool)

(assert (=> d!15509 m!66733))

(declare-fun m!66735 () Bool)

(assert (=> d!15509 m!66735))

(declare-fun m!66737 () Bool)

(assert (=> b!70101 m!66737))

(declare-fun m!66739 () Bool)

(assert (=> b!70102 m!66739))

(assert (=> d!14761 d!15509))

(declare-fun bm!6011 () Bool)

(declare-fun call!6014 () List!1494)

(declare-fun call!6016 () List!1494)

(assert (=> bm!6011 (= call!6014 call!6016)))

(declare-fun b!70103 () Bool)

(declare-fun e!45878 () List!1494)

(declare-fun call!6015 () List!1494)

(assert (=> b!70103 (= e!45878 call!6015)))

(declare-fun b!70104 () Bool)

(declare-fun e!45877 () List!1494)

(assert (=> b!70104 (= e!45877 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29768)) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70106 () Bool)

(declare-fun res!37519 () Bool)

(declare-fun e!45876 () Bool)

(assert (=> b!70106 (=> (not res!37519) (not e!45876))))

(declare-fun lt!30817 () List!1494)

(assert (=> b!70106 (= res!37519 (containsKey!134 lt!30817 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70107 () Bool)

(declare-fun e!45875 () List!1494)

(declare-fun e!45879 () List!1494)

(assert (=> b!70107 (= e!45875 e!45879)))

(declare-fun c!10130 () Bool)

(assert (=> b!70107 (= c!10130 (and ((_ is Cons!1490) (toList!726 lt!29768)) (= (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun c!10131 () Bool)

(declare-fun b!70108 () Bool)

(assert (=> b!70108 (= e!45877 (ite c!10130 (t!5001 (toList!726 lt!29768)) (ite c!10131 (Cons!1490 (h!2075 (toList!726 lt!29768)) (t!5001 (toList!726 lt!29768))) Nil!1491)))))

(declare-fun b!70109 () Bool)

(assert (=> b!70109 (= e!45878 call!6015)))

(declare-fun b!70110 () Bool)

(assert (=> b!70110 (= e!45879 call!6014)))

(declare-fun b!70111 () Bool)

(assert (=> b!70111 (= e!45875 call!6016)))

(declare-fun c!10132 () Bool)

(declare-fun bm!6012 () Bool)

(assert (=> bm!6012 (= call!6016 ($colon$colon!63 e!45877 (ite c!10132 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!10133 () Bool)

(assert (=> bm!6012 (= c!10133 c!10132)))

(declare-fun b!70112 () Bool)

(assert (=> b!70112 (= e!45876 (contains!721 lt!30817 (tuple2!2119 (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun bm!6013 () Bool)

(assert (=> bm!6013 (= call!6015 call!6014)))

(declare-fun b!70105 () Bool)

(assert (=> b!70105 (= c!10131 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!70105 (= e!45879 e!45878)))

(declare-fun d!15511 () Bool)

(assert (=> d!15511 e!45876))

(declare-fun res!37518 () Bool)

(assert (=> d!15511 (=> (not res!37518) (not e!45876))))

(assert (=> d!15511 (= res!37518 (isStrictlySorted!285 lt!30817))))

(assert (=> d!15511 (= lt!30817 e!45875)))

(assert (=> d!15511 (= c!10132 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15511 (isStrictlySorted!285 (toList!726 lt!29768))))

(assert (=> d!15511 (= (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30817)))

(assert (= (and d!15511 c!10132) b!70111))

(assert (= (and d!15511 (not c!10132)) b!70107))

(assert (= (and b!70107 c!10130) b!70110))

(assert (= (and b!70107 (not c!10130)) b!70105))

(assert (= (and b!70105 c!10131) b!70109))

(assert (= (and b!70105 (not c!10131)) b!70103))

(assert (= (or b!70109 b!70103) bm!6013))

(assert (= (or b!70110 bm!6013) bm!6011))

(assert (= (or b!70111 bm!6011) bm!6012))

(assert (= (and bm!6012 c!10133) b!70104))

(assert (= (and bm!6012 (not c!10133)) b!70108))

(assert (= (and d!15511 res!37518) b!70106))

(assert (= (and b!70106 res!37519) b!70112))

(declare-fun m!66741 () Bool)

(assert (=> b!70104 m!66741))

(declare-fun m!66743 () Bool)

(assert (=> d!15511 m!66743))

(assert (=> d!15511 m!64453))

(declare-fun m!66745 () Bool)

(assert (=> b!70106 m!66745))

(declare-fun m!66747 () Bool)

(assert (=> bm!6012 m!66747))

(declare-fun m!66749 () Bool)

(assert (=> b!70112 m!66749))

(assert (=> d!14761 d!15511))

(declare-fun b!70113 () Bool)

(declare-fun e!45881 () Bool)

(declare-fun e!45880 () Bool)

(assert (=> b!70113 (= e!45881 e!45880)))

(declare-fun c!10134 () Bool)

(assert (=> b!70113 (= c!10134 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!70114 () Bool)

(declare-fun call!6017 () Bool)

(assert (=> b!70114 (= e!45880 call!6017)))

(declare-fun b!70115 () Bool)

(declare-fun e!45882 () Bool)

(assert (=> b!70115 (= e!45880 e!45882)))

(declare-fun lt!30820 () (_ BitVec 64))

(assert (=> b!70115 (= lt!30820 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!30818 () Unit!1913)

(assert (=> b!70115 (= lt!30818 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) lt!30820 #b00000000000000000000000000000000))))

(assert (=> b!70115 (arrayContainsKey!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) lt!30820 #b00000000000000000000000000000000)))

(declare-fun lt!30819 () Unit!1913)

(assert (=> b!70115 (= lt!30819 lt!30818)))

(declare-fun res!37520 () Bool)

(assert (=> b!70115 (= res!37520 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000) (_keys!3812 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992)))) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!70115 (=> (not res!37520) (not e!45882))))

(declare-fun bm!6014 () Bool)

(assert (=> bm!6014 (= call!6017 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992)))))))

(declare-fun b!70116 () Bool)

(assert (=> b!70116 (= e!45882 call!6017)))

(declare-fun d!15513 () Bool)

(declare-fun res!37521 () Bool)

(assert (=> d!15513 (=> res!37521 e!45881)))

(assert (=> d!15513 (= res!37521 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!15513 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (mask!6113 (v!2495 (underlying!255 thiss!992)))) e!45881)))

(assert (= (and d!15513 (not res!37521)) b!70113))

(assert (= (and b!70113 c!10134) b!70115))

(assert (= (and b!70113 (not c!10134)) b!70114))

(assert (= (and b!70115 res!37520) b!70116))

(assert (= (or b!70116 b!70114) bm!6014))

(assert (=> b!70113 m!66445))

(assert (=> b!70113 m!66445))

(assert (=> b!70113 m!66451))

(assert (=> b!70115 m!66445))

(declare-fun m!66751 () Bool)

(assert (=> b!70115 m!66751))

(declare-fun m!66753 () Bool)

(assert (=> b!70115 m!66753))

(assert (=> b!70115 m!66445))

(declare-fun m!66755 () Bool)

(assert (=> b!70115 m!66755))

(declare-fun m!66757 () Bool)

(assert (=> bm!6014 m!66757))

(assert (=> b!69284 d!15513))

(assert (=> d!14917 d!14933))

(assert (=> d!14917 d!14915))

(declare-fun d!15515 () Bool)

(assert (=> d!15515 (contains!720 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!29916)))

(assert (=> d!15515 true))

(declare-fun _$35!312 () Unit!1913)

(assert (=> d!15515 (= (choose!398 lt!29924 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))) lt!29916) _$35!312)))

(declare-fun bs!3003 () Bool)

(assert (= bs!3003 d!15515))

(assert (=> bs!3003 m!64289))

(assert (=> bs!3003 m!64289))

(assert (=> bs!3003 m!64291))

(assert (=> d!14917 d!15515))

(declare-fun d!15517 () Bool)

(declare-fun e!45883 () Bool)

(assert (=> d!15517 e!45883))

(declare-fun res!37522 () Bool)

(assert (=> d!15517 (=> res!37522 e!45883)))

(declare-fun lt!30823 () Bool)

(assert (=> d!15517 (= res!37522 (not lt!30823))))

(declare-fun lt!30824 () Bool)

(assert (=> d!15517 (= lt!30823 lt!30824)))

(declare-fun lt!30822 () Unit!1913)

(declare-fun e!45884 () Unit!1913)

(assert (=> d!15517 (= lt!30822 e!45884)))

(declare-fun c!10135 () Bool)

(assert (=> d!15517 (= c!10135 lt!30824)))

(assert (=> d!15517 (= lt!30824 (containsKey!134 (toList!726 lt!29924) lt!29916))))

(assert (=> d!15517 (= (contains!720 lt!29924 lt!29916) lt!30823)))

(declare-fun b!70118 () Bool)

(declare-fun lt!30821 () Unit!1913)

(assert (=> b!70118 (= e!45884 lt!30821)))

(assert (=> b!70118 (= lt!30821 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29924) lt!29916))))

(assert (=> b!70118 (isDefined!84 (getValueByKey!130 (toList!726 lt!29924) lt!29916))))

(declare-fun b!70119 () Bool)

(declare-fun Unit!1979 () Unit!1913)

(assert (=> b!70119 (= e!45884 Unit!1979)))

(declare-fun b!70120 () Bool)

(assert (=> b!70120 (= e!45883 (isDefined!84 (getValueByKey!130 (toList!726 lt!29924) lt!29916)))))

(assert (= (and d!15517 c!10135) b!70118))

(assert (= (and d!15517 (not c!10135)) b!70119))

(assert (= (and d!15517 (not res!37522)) b!70120))

(declare-fun m!66759 () Bool)

(assert (=> d!15517 m!66759))

(declare-fun m!66761 () Bool)

(assert (=> b!70118 m!66761))

(declare-fun m!66763 () Bool)

(assert (=> b!70118 m!66763))

(assert (=> b!70118 m!66763))

(declare-fun m!66765 () Bool)

(assert (=> b!70118 m!66765))

(assert (=> b!70120 m!66763))

(assert (=> b!70120 m!66763))

(assert (=> b!70120 m!66765))

(assert (=> d!14917 d!15517))

(declare-fun lt!30825 () Bool)

(declare-fun d!15519 () Bool)

(assert (=> d!15519 (= lt!30825 (select (content!72 (toList!726 lt!30353)) (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun e!45885 () Bool)

(assert (=> d!15519 (= lt!30825 e!45885)))

(declare-fun res!37524 () Bool)

(assert (=> d!15519 (=> (not res!37524) (not e!45885))))

(assert (=> d!15519 (= res!37524 ((_ is Cons!1490) (toList!726 lt!30353)))))

(assert (=> d!15519 (= (contains!721 (toList!726 lt!30353) (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30825)))

(declare-fun b!70121 () Bool)

(declare-fun e!45886 () Bool)

(assert (=> b!70121 (= e!45885 e!45886)))

(declare-fun res!37523 () Bool)

(assert (=> b!70121 (=> res!37523 e!45886)))

(assert (=> b!70121 (= res!37523 (= (h!2075 (toList!726 lt!30353)) (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!70122 () Bool)

(assert (=> b!70122 (= e!45886 (contains!721 (t!5001 (toList!726 lt!30353)) (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15519 res!37524) b!70121))

(assert (= (and b!70121 (not res!37523)) b!70122))

(declare-fun m!66767 () Bool)

(assert (=> d!15519 m!66767))

(declare-fun m!66769 () Bool)

(assert (=> d!15519 m!66769))

(declare-fun m!66771 () Bool)

(assert (=> b!70122 m!66771))

(assert (=> b!69225 d!15519))

(declare-fun d!15521 () Bool)

(assert (=> d!15521 (isDefined!84 (getValueByKey!130 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun lt!30826 () Unit!1913)

(assert (=> d!15521 (= lt!30826 (choose!395 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun e!45887 () Bool)

(assert (=> d!15521 e!45887))

(declare-fun res!37525 () Bool)

(assert (=> d!15521 (=> (not res!37525) (not e!45887))))

(assert (=> d!15521 (= res!37525 (isStrictlySorted!285 (toList!726 e!45064)))))

(assert (=> d!15521 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30826)))

(declare-fun b!70123 () Bool)

(assert (=> b!70123 (= e!45887 (containsKey!134 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!15521 res!37525) b!70123))

(assert (=> d!15521 m!64043))

(assert (=> d!15521 m!64601))

(assert (=> d!15521 m!64601))

(assert (=> d!15521 m!64603))

(assert (=> d!15521 m!64043))

(declare-fun m!66773 () Bool)

(assert (=> d!15521 m!66773))

(declare-fun m!66775 () Bool)

(assert (=> d!15521 m!66775))

(assert (=> b!70123 m!64043))

(assert (=> b!70123 m!64597))

(assert (=> b!68988 d!15521))

(assert (=> b!68988 d!15385))

(assert (=> b!68988 d!15387))

(declare-fun d!15523 () Bool)

(declare-fun e!45888 () Bool)

(assert (=> d!15523 e!45888))

(declare-fun res!37526 () Bool)

(assert (=> d!15523 (=> res!37526 e!45888)))

(declare-fun lt!30829 () Bool)

(assert (=> d!15523 (= res!37526 (not lt!30829))))

(declare-fun lt!30830 () Bool)

(assert (=> d!15523 (= lt!30829 lt!30830)))

(declare-fun lt!30828 () Unit!1913)

(declare-fun e!45889 () Unit!1913)

(assert (=> d!15523 (= lt!30828 e!45889)))

(declare-fun c!10136 () Bool)

(assert (=> d!15523 (= c!10136 lt!30830)))

(assert (=> d!15523 (= lt!30830 (containsKey!134 (toList!726 lt!30158) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!15523 (= (contains!720 lt!30158 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!30829)))

(declare-fun b!70124 () Bool)

(declare-fun lt!30827 () Unit!1913)

(assert (=> b!70124 (= e!45889 lt!30827)))

(assert (=> b!70124 (= lt!30827 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30158) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!70124 (isDefined!84 (getValueByKey!130 (toList!726 lt!30158) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!70125 () Bool)

(declare-fun Unit!1980 () Unit!1913)

(assert (=> b!70125 (= e!45889 Unit!1980)))

(declare-fun b!70126 () Bool)

(assert (=> b!70126 (= e!45888 (isDefined!84 (getValueByKey!130 (toList!726 lt!30158) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!15523 c!10136) b!70124))

(assert (= (and d!15523 (not c!10136)) b!70125))

(assert (= (and d!15523 (not res!37526)) b!70126))

(assert (=> d!15523 m!64529))

(declare-fun m!66777 () Bool)

(assert (=> d!15523 m!66777))

(assert (=> b!70124 m!64529))

(declare-fun m!66779 () Bool)

(assert (=> b!70124 m!66779))

(assert (=> b!70124 m!64529))

(assert (=> b!70124 m!66353))

(assert (=> b!70124 m!66353))

(declare-fun m!66781 () Bool)

(assert (=> b!70124 m!66781))

(assert (=> b!70126 m!64529))

(assert (=> b!70126 m!66353))

(assert (=> b!70126 m!66353))

(assert (=> b!70126 m!66781))

(assert (=> b!68916 d!15523))

(declare-fun d!15525 () Bool)

(declare-fun res!37527 () Bool)

(declare-fun e!45890 () Bool)

(assert (=> d!15525 (=> res!37527 e!45890)))

(assert (=> d!15525 (= res!37527 (and ((_ is Cons!1490) (toList!726 lt!29836)) (= (_1!1069 (h!2075 (toList!726 lt!29836))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15525 (= (containsKey!134 (toList!726 lt!29836) #b0000000000000000000000000000000000000000000000000000000000000000) e!45890)))

(declare-fun b!70127 () Bool)

(declare-fun e!45891 () Bool)

(assert (=> b!70127 (= e!45890 e!45891)))

(declare-fun res!37528 () Bool)

(assert (=> b!70127 (=> (not res!37528) (not e!45891))))

(assert (=> b!70127 (= res!37528 (and (or (not ((_ is Cons!1490) (toList!726 lt!29836))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29836))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!726 lt!29836)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29836))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70128 () Bool)

(assert (=> b!70128 (= e!45891 (containsKey!134 (t!5001 (toList!726 lt!29836)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15525 (not res!37527)) b!70127))

(assert (= (and b!70127 res!37528) b!70128))

(declare-fun m!66783 () Bool)

(assert (=> b!70128 m!66783))

(assert (=> d!14797 d!15525))

(declare-fun d!15527 () Bool)

(assert (=> d!15527 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916))))

(declare-fun lt!30831 () Unit!1913)

(assert (=> d!15527 (= lt!30831 (choose!395 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916))))

(declare-fun e!45892 () Bool)

(assert (=> d!15527 e!45892))

(declare-fun res!37529 () Bool)

(assert (=> d!15527 (=> (not res!37529) (not e!45892))))

(assert (=> d!15527 (= res!37529 (isStrictlySorted!285 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15527 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916) lt!30831)))

(declare-fun b!70129 () Bool)

(assert (=> b!70129 (= e!45892 (containsKey!134 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916))))

(assert (= (and d!15527 res!37529) b!70129))

(assert (=> d!15527 m!65123))

(assert (=> d!15527 m!65123))

(assert (=> d!15527 m!65125))

(declare-fun m!66785 () Bool)

(assert (=> d!15527 m!66785))

(declare-fun m!66787 () Bool)

(assert (=> d!15527 m!66787))

(assert (=> b!70129 m!65119))

(assert (=> b!69229 d!15527))

(assert (=> b!69229 d!15363))

(assert (=> b!69229 d!15365))

(declare-fun d!15529 () Bool)

(declare-fun e!45893 () Bool)

(assert (=> d!15529 e!45893))

(declare-fun res!37530 () Bool)

(assert (=> d!15529 (=> res!37530 e!45893)))

(declare-fun lt!30834 () Bool)

(assert (=> d!15529 (= res!37530 (not lt!30834))))

(declare-fun lt!30835 () Bool)

(assert (=> d!15529 (= lt!30834 lt!30835)))

(declare-fun lt!30833 () Unit!1913)

(declare-fun e!45894 () Unit!1913)

(assert (=> d!15529 (= lt!30833 e!45894)))

(declare-fun c!10137 () Bool)

(assert (=> d!15529 (= c!10137 lt!30835)))

(assert (=> d!15529 (= lt!30835 (containsKey!134 (toList!726 (map!1147 (_2!1070 lt!30126))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> d!15529 (= (contains!720 (map!1147 (_2!1070 lt!30126)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) lt!30834)))

(declare-fun b!70130 () Bool)

(declare-fun lt!30832 () Unit!1913)

(assert (=> b!70130 (= e!45894 lt!30832)))

(assert (=> b!70130 (= lt!30832 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (map!1147 (_2!1070 lt!30126))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (=> b!70130 (isDefined!84 (getValueByKey!130 (toList!726 (map!1147 (_2!1070 lt!30126))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun b!70131 () Bool)

(declare-fun Unit!1981 () Unit!1913)

(assert (=> b!70131 (= e!45894 Unit!1981)))

(declare-fun b!70132 () Bool)

(assert (=> b!70132 (= e!45893 (isDefined!84 (getValueByKey!130 (toList!726 (map!1147 (_2!1070 lt!30126))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (= (and d!15529 c!10137) b!70130))

(assert (= (and d!15529 (not c!10137)) b!70131))

(assert (= (and d!15529 (not res!37530)) b!70132))

(assert (=> d!15529 m!64043))

(declare-fun m!66789 () Bool)

(assert (=> d!15529 m!66789))

(assert (=> b!70130 m!64043))

(declare-fun m!66791 () Bool)

(assert (=> b!70130 m!66791))

(assert (=> b!70130 m!64043))

(declare-fun m!66793 () Bool)

(assert (=> b!70130 m!66793))

(assert (=> b!70130 m!66793))

(declare-fun m!66795 () Bool)

(assert (=> b!70130 m!66795))

(assert (=> b!70132 m!64043))

(assert (=> b!70132 m!66793))

(assert (=> b!70132 m!66793))

(assert (=> b!70132 m!66795))

(assert (=> b!68909 d!15529))

(declare-fun d!15531 () Bool)

(assert (=> d!15531 (= (map!1147 (_2!1070 lt!30126)) (getCurrentListMap!421 (_keys!3812 (_2!1070 lt!30126)) (_values!2151 (_2!1070 lt!30126)) (mask!6113 (_2!1070 lt!30126)) (extraKeys!2035 (_2!1070 lt!30126)) (zeroValue!2074 (_2!1070 lt!30126)) (minValue!2074 (_2!1070 lt!30126)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30126))))))

(declare-fun bs!3004 () Bool)

(assert (= bs!3004 d!15531))

(declare-fun m!66797 () Bool)

(assert (=> bs!3004 m!66797))

(assert (=> b!68909 d!15531))

(assert (=> d!14789 d!14795))

(declare-fun b!70149 () Bool)

(declare-fun e!45906 () Bool)

(declare-fun call!6022 () Bool)

(assert (=> b!70149 (= e!45906 (not call!6022))))

(declare-fun b!70150 () Bool)

(declare-fun e!45903 () Bool)

(assert (=> b!70150 (= e!45903 (not call!6022))))

(declare-fun b!70151 () Bool)

(declare-fun res!37541 () Bool)

(declare-fun lt!30838 () SeekEntryResult!244)

(assert (=> b!70151 (= res!37541 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3105 lt!30838)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70151 (=> (not res!37541) (not e!45906))))

(declare-fun b!70152 () Bool)

(declare-fun e!45904 () Bool)

(assert (=> b!70152 (= e!45904 ((_ is Undefined!244) lt!30838))))

(declare-fun bm!6019 () Bool)

(assert (=> bm!6019 (= call!6022 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!70153 () Bool)

(declare-fun e!45905 () Bool)

(assert (=> b!70153 (= e!45905 e!45904)))

(declare-fun c!10142 () Bool)

(assert (=> b!70153 (= c!10142 ((_ is MissingVacant!244) lt!30838))))

(declare-fun c!10143 () Bool)

(declare-fun call!6023 () Bool)

(declare-fun bm!6020 () Bool)

(assert (=> bm!6020 (= call!6023 (inRange!0 (ite c!10143 (index!3105 lt!30838) (index!3108 lt!30838)) (mask!6113 newMap!16)))))

(declare-fun b!70154 () Bool)

(assert (=> b!70154 (= e!45905 e!45906)))

(declare-fun res!37539 () Bool)

(assert (=> b!70154 (= res!37539 call!6023)))

(assert (=> b!70154 (=> (not res!37539) (not e!45906))))

(declare-fun d!15533 () Bool)

(assert (=> d!15533 e!45905))

(assert (=> d!15533 (= c!10143 ((_ is MissingZero!244) lt!30838))))

(assert (=> d!15533 (= lt!30838 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!15533 true))

(declare-fun _$34!796 () Unit!1913)

(assert (=> d!15533 (= (choose!391 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) _$34!796)))

(declare-fun b!70155 () Bool)

(declare-fun res!37540 () Bool)

(assert (=> b!70155 (=> (not res!37540) (not e!45903))))

(assert (=> b!70155 (= res!37540 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3108 lt!30838)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70156 () Bool)

(declare-fun res!37542 () Bool)

(assert (=> b!70156 (=> (not res!37542) (not e!45903))))

(assert (=> b!70156 (= res!37542 call!6023)))

(assert (=> b!70156 (= e!45904 e!45903)))

(assert (= (and d!15533 c!10143) b!70154))

(assert (= (and d!15533 (not c!10143)) b!70153))

(assert (= (and b!70154 res!37539) b!70151))

(assert (= (and b!70151 res!37541) b!70149))

(assert (= (and b!70153 c!10142) b!70156))

(assert (= (and b!70153 (not c!10142)) b!70152))

(assert (= (and b!70156 res!37542) b!70155))

(assert (= (and b!70155 res!37540) b!70150))

(assert (= (or b!70154 b!70156) bm!6020))

(assert (= (or b!70149 b!70150) bm!6019))

(assert (=> bm!6019 m!64043))

(assert (=> bm!6019 m!64351))

(declare-fun m!66799 () Bool)

(assert (=> bm!6020 m!66799))

(assert (=> d!15533 m!64043))

(assert (=> d!15533 m!64341))

(declare-fun m!66801 () Bool)

(assert (=> b!70151 m!66801))

(declare-fun m!66803 () Bool)

(assert (=> b!70155 m!66803))

(assert (=> d!14789 d!15533))

(assert (=> d!14789 d!14981))

(declare-fun bm!6021 () Bool)

(declare-fun call!6024 () List!1494)

(declare-fun call!6026 () List!1494)

(assert (=> bm!6021 (= call!6024 call!6026)))

(declare-fun b!70157 () Bool)

(declare-fun e!45910 () List!1494)

(declare-fun call!6025 () List!1494)

(assert (=> b!70157 (= e!45910 call!6025)))

(declare-fun b!70158 () Bool)

(declare-fun e!45909 () List!1494)

(assert (=> b!70158 (= e!45909 (insertStrictlySorted!51 (t!5001 (t!5001 (toList!726 lt!29768))) (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(declare-fun b!70160 () Bool)

(declare-fun res!37544 () Bool)

(declare-fun e!45908 () Bool)

(assert (=> b!70160 (=> (not res!37544) (not e!45908))))

(declare-fun lt!30839 () List!1494)

(assert (=> b!70160 (= res!37544 (containsKey!134 lt!30839 (_1!1069 lt!29777)))))

(declare-fun b!70161 () Bool)

(declare-fun e!45907 () List!1494)

(declare-fun e!45911 () List!1494)

(assert (=> b!70161 (= e!45907 e!45911)))

(declare-fun c!10144 () Bool)

(assert (=> b!70161 (= c!10144 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29768))) (= (_1!1069 (h!2075 (t!5001 (toList!726 lt!29768)))) (_1!1069 lt!29777))))))

(declare-fun c!10145 () Bool)

(declare-fun b!70162 () Bool)

(assert (=> b!70162 (= e!45909 (ite c!10144 (t!5001 (t!5001 (toList!726 lt!29768))) (ite c!10145 (Cons!1490 (h!2075 (t!5001 (toList!726 lt!29768))) (t!5001 (t!5001 (toList!726 lt!29768)))) Nil!1491)))))

(declare-fun b!70163 () Bool)

(assert (=> b!70163 (= e!45910 call!6025)))

(declare-fun b!70164 () Bool)

(assert (=> b!70164 (= e!45911 call!6024)))

(declare-fun b!70165 () Bool)

(assert (=> b!70165 (= e!45907 call!6026)))

(declare-fun c!10146 () Bool)

(declare-fun bm!6022 () Bool)

(assert (=> bm!6022 (= call!6026 ($colon$colon!63 e!45909 (ite c!10146 (h!2075 (t!5001 (toList!726 lt!29768))) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777)))))))

(declare-fun c!10147 () Bool)

(assert (=> bm!6022 (= c!10147 c!10146)))

(declare-fun b!70166 () Bool)

(assert (=> b!70166 (= e!45908 (contains!721 lt!30839 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun bm!6023 () Bool)

(assert (=> bm!6023 (= call!6025 call!6024)))

(declare-fun b!70159 () Bool)

(assert (=> b!70159 (= c!10145 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29768))) (bvsgt (_1!1069 (h!2075 (t!5001 (toList!726 lt!29768)))) (_1!1069 lt!29777))))))

(assert (=> b!70159 (= e!45911 e!45910)))

(declare-fun d!15535 () Bool)

(assert (=> d!15535 e!45908))

(declare-fun res!37543 () Bool)

(assert (=> d!15535 (=> (not res!37543) (not e!45908))))

(assert (=> d!15535 (= res!37543 (isStrictlySorted!285 lt!30839))))

(assert (=> d!15535 (= lt!30839 e!45907)))

(assert (=> d!15535 (= c!10146 (and ((_ is Cons!1490) (t!5001 (toList!726 lt!29768))) (bvslt (_1!1069 (h!2075 (t!5001 (toList!726 lt!29768)))) (_1!1069 lt!29777))))))

(assert (=> d!15535 (isStrictlySorted!285 (t!5001 (toList!726 lt!29768)))))

(assert (=> d!15535 (= (insertStrictlySorted!51 (t!5001 (toList!726 lt!29768)) (_1!1069 lt!29777) (_2!1069 lt!29777)) lt!30839)))

(assert (= (and d!15535 c!10146) b!70165))

(assert (= (and d!15535 (not c!10146)) b!70161))

(assert (= (and b!70161 c!10144) b!70164))

(assert (= (and b!70161 (not c!10144)) b!70159))

(assert (= (and b!70159 c!10145) b!70163))

(assert (= (and b!70159 (not c!10145)) b!70157))

(assert (= (or b!70163 b!70157) bm!6023))

(assert (= (or b!70164 bm!6023) bm!6021))

(assert (= (or b!70165 bm!6021) bm!6022))

(assert (= (and bm!6022 c!10147) b!70158))

(assert (= (and bm!6022 (not c!10147)) b!70162))

(assert (= (and d!15535 res!37543) b!70160))

(assert (= (and b!70160 res!37544) b!70166))

(declare-fun m!66805 () Bool)

(assert (=> b!70158 m!66805))

(declare-fun m!66807 () Bool)

(assert (=> d!15535 m!66807))

(assert (=> d!15535 m!65301))

(declare-fun m!66809 () Bool)

(assert (=> b!70160 m!66809))

(declare-fun m!66811 () Bool)

(assert (=> bm!6022 m!66811))

(declare-fun m!66813 () Bool)

(assert (=> b!70166 m!66813))

(assert (=> b!69104 d!15535))

(assert (=> b!68896 d!15531))

(declare-fun d!15537 () Bool)

(declare-fun e!45912 () Bool)

(assert (=> d!15537 e!45912))

(declare-fun res!37546 () Bool)

(assert (=> d!15537 (=> (not res!37546) (not e!45912))))

(declare-fun lt!30842 () ListLongMap!1421)

(assert (=> d!15537 (= res!37546 (contains!720 lt!30842 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!30843 () List!1494)

(assert (=> d!15537 (= lt!30842 (ListLongMap!1422 lt!30843))))

(declare-fun lt!30840 () Unit!1913)

(declare-fun lt!30841 () Unit!1913)

(assert (=> d!15537 (= lt!30840 lt!30841)))

(assert (=> d!15537 (= (getValueByKey!130 lt!30843 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15537 (= lt!30841 (lemmaContainsTupThenGetReturnValue!49 lt!30843 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15537 (= lt!30843 (insertStrictlySorted!51 (toList!726 (map!1147 newMap!16)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15537 (= (+!89 (map!1147 newMap!16) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30842)))

(declare-fun b!70167 () Bool)

(declare-fun res!37545 () Bool)

(assert (=> b!70167 (=> (not res!37545) (not e!45912))))

(assert (=> b!70167 (= res!37545 (= (getValueByKey!130 (toList!726 lt!30842) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun b!70168 () Bool)

(assert (=> b!70168 (= e!45912 (contains!721 (toList!726 lt!30842) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!15537 res!37546) b!70167))

(assert (= (and b!70167 res!37545) b!70168))

(declare-fun m!66815 () Bool)

(assert (=> d!15537 m!66815))

(declare-fun m!66817 () Bool)

(assert (=> d!15537 m!66817))

(declare-fun m!66819 () Bool)

(assert (=> d!15537 m!66819))

(declare-fun m!66821 () Bool)

(assert (=> d!15537 m!66821))

(declare-fun m!66823 () Bool)

(assert (=> b!70167 m!66823))

(declare-fun m!66825 () Bool)

(assert (=> b!70168 m!66825))

(assert (=> b!68896 d!15537))

(assert (=> b!68896 d!14729))

(declare-fun b!70169 () Bool)

(declare-fun e!45914 () Bool)

(declare-fun e!45913 () Bool)

(assert (=> b!70169 (= e!45914 e!45913)))

(declare-fun c!10148 () Bool)

(assert (=> b!70169 (= c!10148 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(declare-fun b!70170 () Bool)

(declare-fun call!6027 () Bool)

(assert (=> b!70170 (= e!45913 call!6027)))

(declare-fun b!70171 () Bool)

(declare-fun e!45915 () Bool)

(assert (=> b!70171 (= e!45913 e!45915)))

(declare-fun lt!30846 () (_ BitVec 64))

(assert (=> b!70171 (= lt!30846 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000))))

(declare-fun lt!30844 () Unit!1913)

(assert (=> b!70171 (= lt!30844 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 (_2!1070 lt!30024)) lt!30846 #b00000000000000000000000000000000))))

(assert (=> b!70171 (arrayContainsKey!0 (_keys!3812 (_2!1070 lt!30024)) lt!30846 #b00000000000000000000000000000000)))

(declare-fun lt!30845 () Unit!1913)

(assert (=> b!70171 (= lt!30845 lt!30844)))

(declare-fun res!37547 () Bool)

(assert (=> b!70171 (= res!37547 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000) (_keys!3812 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024))) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!70171 (=> (not res!37547) (not e!45915))))

(declare-fun bm!6024 () Bool)

(assert (=> bm!6024 (= call!6027 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024))))))

(declare-fun b!70172 () Bool)

(assert (=> b!70172 (= e!45915 call!6027)))

(declare-fun d!15539 () Bool)

(declare-fun res!37548 () Bool)

(assert (=> d!15539 (=> res!37548 e!45914)))

(assert (=> d!15539 (= res!37548 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(assert (=> d!15539 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024))) e!45914)))

(assert (= (and d!15539 (not res!37548)) b!70169))

(assert (= (and b!70169 c!10148) b!70171))

(assert (= (and b!70169 (not c!10148)) b!70170))

(assert (= (and b!70171 res!37547) b!70172))

(assert (= (or b!70172 b!70170) bm!6024))

(assert (=> b!70169 m!66643))

(assert (=> b!70169 m!66643))

(assert (=> b!70169 m!66649))

(assert (=> b!70171 m!66643))

(declare-fun m!66827 () Bool)

(assert (=> b!70171 m!66827))

(declare-fun m!66829 () Bool)

(assert (=> b!70171 m!66829))

(assert (=> b!70171 m!66643))

(declare-fun m!66831 () Bool)

(assert (=> b!70171 m!66831))

(declare-fun m!66833 () Bool)

(assert (=> bm!6024 m!66833))

(assert (=> b!69281 d!15539))

(declare-fun b!70176 () Bool)

(declare-fun e!45917 () Option!136)

(assert (=> b!70176 (= e!45917 None!134)))

(declare-fun d!15541 () Bool)

(declare-fun c!10149 () Bool)

(assert (=> d!15541 (= c!10149 (and ((_ is Cons!1490) (toList!726 lt!30038)) (= (_1!1069 (h!2075 (toList!726 lt!30038))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45916 () Option!136)

(assert (=> d!15541 (= (getValueByKey!130 (toList!726 lt!30038) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45916)))

(declare-fun b!70173 () Bool)

(assert (=> b!70173 (= e!45916 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30038)))))))

(declare-fun b!70175 () Bool)

(assert (=> b!70175 (= e!45917 (getValueByKey!130 (t!5001 (toList!726 lt!30038)) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70174 () Bool)

(assert (=> b!70174 (= e!45916 e!45917)))

(declare-fun c!10150 () Bool)

(assert (=> b!70174 (= c!10150 (and ((_ is Cons!1490) (toList!726 lt!30038)) (not (= (_1!1069 (h!2075 (toList!726 lt!30038))) (_1!1069 (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15541 c!10149) b!70173))

(assert (= (and d!15541 (not c!10149)) b!70174))

(assert (= (and b!70174 c!10150) b!70175))

(assert (= (and b!70174 (not c!10150)) b!70176))

(declare-fun m!66835 () Bool)

(assert (=> b!70175 m!66835))

(assert (=> b!68802 d!15541))

(declare-fun d!15543 () Bool)

(declare-fun lt!30847 () Bool)

(assert (=> d!15543 (= lt!30847 (select (content!72 lt!30316) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun e!45918 () Bool)

(assert (=> d!15543 (= lt!30847 e!45918)))

(declare-fun res!37550 () Bool)

(assert (=> d!15543 (=> (not res!37550) (not e!45918))))

(assert (=> d!15543 (= res!37550 ((_ is Cons!1490) lt!30316))))

(assert (=> d!15543 (= (contains!721 lt!30316 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))) lt!30847)))

(declare-fun b!70177 () Bool)

(declare-fun e!45919 () Bool)

(assert (=> b!70177 (= e!45918 e!45919)))

(declare-fun res!37549 () Bool)

(assert (=> b!70177 (=> res!37549 e!45919)))

(assert (=> b!70177 (= res!37549 (= (h!2075 lt!30316) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun b!70178 () Bool)

(assert (=> b!70178 (= e!45919 (contains!721 (t!5001 lt!30316) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(assert (= (and d!15543 res!37550) b!70177))

(assert (= (and b!70177 (not res!37549)) b!70178))

(declare-fun m!66837 () Bool)

(assert (=> d!15543 m!66837))

(declare-fun m!66839 () Bool)

(assert (=> d!15543 m!66839))

(declare-fun m!66841 () Bool)

(assert (=> b!70178 m!66841))

(assert (=> b!69172 d!15543))

(assert (=> b!69055 d!15083))

(declare-fun d!15545 () Bool)

(declare-fun res!37551 () Bool)

(declare-fun e!45920 () Bool)

(assert (=> d!15545 (=> res!37551 e!45920)))

(assert (=> d!15545 (= res!37551 (and ((_ is Cons!1490) (toList!726 lt!29926)) (= (_1!1069 (h!2075 (toList!726 lt!29926))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15545 (= (containsKey!134 (toList!726 lt!29926) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45920)))

(declare-fun b!70179 () Bool)

(declare-fun e!45921 () Bool)

(assert (=> b!70179 (= e!45920 e!45921)))

(declare-fun res!37552 () Bool)

(assert (=> b!70179 (=> (not res!37552) (not e!45921))))

(assert (=> b!70179 (= res!37552 (and (or (not ((_ is Cons!1490) (toList!726 lt!29926))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29926))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1490) (toList!726 lt!29926)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29926))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!70180 () Bool)

(assert (=> b!70180 (= e!45921 (containsKey!134 (t!5001 (toList!726 lt!29926)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15545 (not res!37551)) b!70179))

(assert (= (and b!70179 res!37552) b!70180))

(assert (=> b!70180 m!64159))

(declare-fun m!66843 () Bool)

(assert (=> b!70180 m!66843))

(assert (=> d!14841 d!15545))

(declare-fun d!15547 () Bool)

(declare-fun e!45922 () Bool)

(assert (=> d!15547 e!45922))

(declare-fun res!37553 () Bool)

(assert (=> d!15547 (=> res!37553 e!45922)))

(declare-fun lt!30850 () Bool)

(assert (=> d!15547 (= res!37553 (not lt!30850))))

(declare-fun lt!30851 () Bool)

(assert (=> d!15547 (= lt!30850 lt!30851)))

(declare-fun lt!30849 () Unit!1913)

(declare-fun e!45923 () Unit!1913)

(assert (=> d!15547 (= lt!30849 e!45923)))

(declare-fun c!10151 () Bool)

(assert (=> d!15547 (= c!10151 lt!30851)))

(assert (=> d!15547 (= lt!30851 (containsKey!134 (toList!726 lt!30303) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15547 (= (contains!720 lt!30303 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30850)))

(declare-fun b!70181 () Bool)

(declare-fun lt!30848 () Unit!1913)

(assert (=> b!70181 (= e!45923 lt!30848)))

(assert (=> b!70181 (= lt!30848 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30303) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70181 (isDefined!84 (getValueByKey!130 (toList!726 lt!30303) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70182 () Bool)

(declare-fun Unit!1982 () Unit!1913)

(assert (=> b!70182 (= e!45923 Unit!1982)))

(declare-fun b!70183 () Bool)

(assert (=> b!70183 (= e!45922 (isDefined!84 (getValueByKey!130 (toList!726 lt!30303) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15547 c!10151) b!70181))

(assert (= (and d!15547 (not c!10151)) b!70182))

(assert (= (and d!15547 (not res!37553)) b!70183))

(assert (=> d!15547 m!64555))

(declare-fun m!66845 () Bool)

(assert (=> d!15547 m!66845))

(assert (=> b!70181 m!64555))

(declare-fun m!66847 () Bool)

(assert (=> b!70181 m!66847))

(assert (=> b!70181 m!64555))

(declare-fun m!66849 () Bool)

(assert (=> b!70181 m!66849))

(assert (=> b!70181 m!66849))

(declare-fun m!66851 () Bool)

(assert (=> b!70181 m!66851))

(assert (=> b!70183 m!64555))

(assert (=> b!70183 m!66849))

(assert (=> b!70183 m!66849))

(assert (=> b!70183 m!66851))

(assert (=> b!69151 d!15547))

(declare-fun d!15549 () Bool)

(assert (=> d!15549 (= (isDefined!84 (getValueByKey!130 (toList!726 lt!29858) (_1!1069 lt!29775))) (not (isEmpty!316 (getValueByKey!130 (toList!726 lt!29858) (_1!1069 lt!29775)))))))

(declare-fun bs!3005 () Bool)

(assert (= bs!3005 d!15549))

(assert (=> bs!3005 m!64227))

(declare-fun m!66853 () Bool)

(assert (=> bs!3005 m!66853))

(assert (=> b!69180 d!15549))

(assert (=> b!69180 d!14955))

(declare-fun d!15551 () Bool)

(declare-fun res!37554 () Bool)

(declare-fun e!45924 () Bool)

(assert (=> d!15551 (=> res!37554 e!45924)))

(assert (=> d!15551 (= res!37554 (and ((_ is Cons!1490) lt!29859) (= (_1!1069 (h!2075 lt!29859)) (_1!1069 lt!29775))))))

(assert (=> d!15551 (= (containsKey!134 lt!29859 (_1!1069 lt!29775)) e!45924)))

(declare-fun b!70184 () Bool)

(declare-fun e!45925 () Bool)

(assert (=> b!70184 (= e!45924 e!45925)))

(declare-fun res!37555 () Bool)

(assert (=> b!70184 (=> (not res!37555) (not e!45925))))

(assert (=> b!70184 (= res!37555 (and (or (not ((_ is Cons!1490) lt!29859)) (bvsle (_1!1069 (h!2075 lt!29859)) (_1!1069 lt!29775))) ((_ is Cons!1490) lt!29859) (bvslt (_1!1069 (h!2075 lt!29859)) (_1!1069 lt!29775))))))

(declare-fun b!70185 () Bool)

(assert (=> b!70185 (= e!45925 (containsKey!134 (t!5001 lt!29859) (_1!1069 lt!29775)))))

(assert (= (and d!15551 (not res!37554)) b!70184))

(assert (= (and b!70184 res!37555) b!70185))

(declare-fun m!66855 () Bool)

(assert (=> b!70185 m!66855))

(assert (=> b!69185 d!15551))

(assert (=> d!14849 d!14847))

(declare-fun d!15553 () Bool)

(assert (=> d!15553 (= (getValueByKey!130 lt!29848 (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777)))))

(assert (=> d!15553 true))

(declare-fun _$22!375 () Unit!1913)

(assert (=> d!15553 (= (choose!390 lt!29848 (_1!1069 lt!29777) (_2!1069 lt!29777)) _$22!375)))

(declare-fun bs!3006 () Bool)

(assert (= bs!3006 d!15553))

(assert (=> bs!3006 m!64187))

(assert (=> d!14849 d!15553))

(declare-fun d!15555 () Bool)

(declare-fun res!37556 () Bool)

(declare-fun e!45926 () Bool)

(assert (=> d!15555 (=> res!37556 e!45926)))

(assert (=> d!15555 (= res!37556 (or ((_ is Nil!1491) lt!29848) ((_ is Nil!1491) (t!5001 lt!29848))))))

(assert (=> d!15555 (= (isStrictlySorted!285 lt!29848) e!45926)))

(declare-fun b!70186 () Bool)

(declare-fun e!45927 () Bool)

(assert (=> b!70186 (= e!45926 e!45927)))

(declare-fun res!37557 () Bool)

(assert (=> b!70186 (=> (not res!37557) (not e!45927))))

(assert (=> b!70186 (= res!37557 (bvslt (_1!1069 (h!2075 lt!29848)) (_1!1069 (h!2075 (t!5001 lt!29848)))))))

(declare-fun b!70187 () Bool)

(assert (=> b!70187 (= e!45927 (isStrictlySorted!285 (t!5001 lt!29848)))))

(assert (= (and d!15555 (not res!37556)) b!70186))

(assert (= (and b!70186 res!37557) b!70187))

(declare-fun m!66857 () Bool)

(assert (=> b!70187 m!66857))

(assert (=> d!14849 d!15555))

(declare-fun d!15557 () Bool)

(assert (=> d!15557 (= (apply!73 lt!30303 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1137 (getValueByKey!130 (toList!726 lt!30303) (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3007 () Bool)

(assert (= bs!3007 d!15557))

(assert (=> bs!3007 m!64555))

(assert (=> bs!3007 m!66849))

(assert (=> bs!3007 m!66849))

(declare-fun m!66859 () Bool)

(assert (=> bs!3007 m!66859))

(assert (=> b!69139 d!15557))

(assert (=> b!69139 d!15245))

(declare-fun d!15559 () Bool)

(declare-fun res!37558 () Bool)

(declare-fun e!45928 () Bool)

(assert (=> d!15559 (=> res!37558 e!45928)))

(assert (=> d!15559 (= res!37558 (and ((_ is Cons!1490) lt!29852) (= (_1!1069 (h!2075 lt!29852)) (_1!1069 lt!29775))))))

(assert (=> d!15559 (= (containsKey!134 lt!29852 (_1!1069 lt!29775)) e!45928)))

(declare-fun b!70188 () Bool)

(declare-fun e!45929 () Bool)

(assert (=> b!70188 (= e!45928 e!45929)))

(declare-fun res!37559 () Bool)

(assert (=> b!70188 (=> (not res!37559) (not e!45929))))

(assert (=> b!70188 (= res!37559 (and (or (not ((_ is Cons!1490) lt!29852)) (bvsle (_1!1069 (h!2075 lt!29852)) (_1!1069 lt!29775))) ((_ is Cons!1490) lt!29852) (bvslt (_1!1069 (h!2075 lt!29852)) (_1!1069 lt!29775))))))

(declare-fun b!70189 () Bool)

(assert (=> b!70189 (= e!45929 (containsKey!134 (t!5001 lt!29852) (_1!1069 lt!29775)))))

(assert (= (and d!15559 (not res!37558)) b!70188))

(assert (= (and b!70188 res!37559) b!70189))

(declare-fun m!66861 () Bool)

(assert (=> b!70189 m!66861))

(assert (=> b!68827 d!15559))

(declare-fun d!15561 () Bool)

(assert (=> d!15561 (= ($colon$colon!63 e!45263 (ite c!9853 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777)))) (Cons!1490 (ite c!9853 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))) e!45263))))

(assert (=> bm!5904 d!15561))

(declare-fun d!15563 () Bool)

(declare-fun res!37560 () Bool)

(declare-fun e!45930 () Bool)

(assert (=> d!15563 (=> res!37560 e!45930)))

(assert (=> d!15563 (= res!37560 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29916)))))

(assert (=> d!15563 (= (containsKey!134 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29916) e!45930)))

(declare-fun b!70190 () Bool)

(declare-fun e!45931 () Bool)

(assert (=> b!70190 (= e!45930 e!45931)))

(declare-fun res!37561 () Bool)

(assert (=> b!70190 (=> (not res!37561) (not e!45931))))

(assert (=> b!70190 (= res!37561 (and (or (not ((_ is Cons!1490) (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) (bvsle (_1!1069 (h!2075 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29916)) ((_ is Cons!1490) (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29916)))))

(declare-fun b!70191 () Bool)

(assert (=> b!70191 (= e!45931 (containsKey!134 (t!5001 (toList!726 (+!89 lt!29924 (tuple2!2119 lt!29910 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!29916))))

(assert (= (and d!15563 (not res!37560)) b!70190))

(assert (= (and b!70190 res!37561) b!70191))

(declare-fun m!66863 () Bool)

(assert (=> b!70191 m!66863))

(assert (=> d!14933 d!15563))

(declare-fun d!15565 () Bool)

(declare-fun e!45932 () Bool)

(assert (=> d!15565 e!45932))

(declare-fun res!37562 () Bool)

(assert (=> d!15565 (=> res!37562 e!45932)))

(declare-fun lt!30854 () Bool)

(assert (=> d!15565 (= res!37562 (not lt!30854))))

(declare-fun lt!30855 () Bool)

(assert (=> d!15565 (= lt!30854 lt!30855)))

(declare-fun lt!30853 () Unit!1913)

(declare-fun e!45933 () Unit!1913)

(assert (=> d!15565 (= lt!30853 e!45933)))

(declare-fun c!10152 () Bool)

(assert (=> d!15565 (= c!10152 lt!30855)))

(assert (=> d!15565 (= lt!30855 (containsKey!134 (toList!726 lt!30232) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15565 (= (contains!720 lt!30232 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30854)))

(declare-fun b!70192 () Bool)

(declare-fun lt!30852 () Unit!1913)

(assert (=> b!70192 (= e!45933 lt!30852)))

(assert (=> b!70192 (= lt!30852 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30232) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70192 (isDefined!84 (getValueByKey!130 (toList!726 lt!30232) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70193 () Bool)

(declare-fun Unit!1983 () Unit!1913)

(assert (=> b!70193 (= e!45933 Unit!1983)))

(declare-fun b!70194 () Bool)

(assert (=> b!70194 (= e!45932 (isDefined!84 (getValueByKey!130 (toList!726 lt!30232) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15565 c!10152) b!70192))

(assert (= (and d!15565 (not c!10152)) b!70193))

(assert (= (and d!15565 (not res!37562)) b!70194))

(declare-fun m!66865 () Bool)

(assert (=> d!15565 m!66865))

(declare-fun m!66867 () Bool)

(assert (=> b!70192 m!66867))

(assert (=> b!70192 m!66633))

(assert (=> b!70192 m!66633))

(declare-fun m!66869 () Bool)

(assert (=> b!70192 m!66869))

(assert (=> b!70194 m!66633))

(assert (=> b!70194 m!66633))

(assert (=> b!70194 m!66869))

(assert (=> bm!5890 d!15565))

(declare-fun bm!6025 () Bool)

(declare-fun call!6028 () List!1494)

(declare-fun call!6030 () List!1494)

(assert (=> bm!6025 (= call!6028 call!6030)))

(declare-fun b!70195 () Bool)

(declare-fun e!45937 () List!1494)

(declare-fun call!6029 () List!1494)

(assert (=> b!70195 (= e!45937 call!6029)))

(declare-fun e!45936 () List!1494)

(declare-fun b!70196 () Bool)

(assert (=> b!70196 (= e!45936 (insertStrictlySorted!51 (t!5001 (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) (_1!1069 lt!29777) (_2!1069 lt!29777)))))

(declare-fun b!70198 () Bool)

(declare-fun res!37564 () Bool)

(declare-fun e!45935 () Bool)

(assert (=> b!70198 (=> (not res!37564) (not e!45935))))

(declare-fun lt!30856 () List!1494)

(assert (=> b!70198 (= res!37564 (containsKey!134 lt!30856 (_1!1069 lt!29777)))))

(declare-fun b!70199 () Bool)

(declare-fun e!45934 () List!1494)

(declare-fun e!45938 () List!1494)

(assert (=> b!70199 (= e!45934 e!45938)))

(declare-fun c!10153 () Bool)

(assert (=> b!70199 (= c!10153 (and ((_ is Cons!1490) (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) (= (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))))) (_1!1069 lt!29777))))))

(declare-fun b!70200 () Bool)

(declare-fun c!10154 () Bool)

(assert (=> b!70200 (= e!45936 (ite c!10153 (t!5001 (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) (ite c!10154 (Cons!1490 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) (t!5001 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))))) Nil!1491)))))

(declare-fun b!70201 () Bool)

(assert (=> b!70201 (= e!45937 call!6029)))

(declare-fun b!70202 () Bool)

(assert (=> b!70202 (= e!45938 call!6028)))

(declare-fun b!70203 () Bool)

(assert (=> b!70203 (= e!45934 call!6030)))

(declare-fun c!10155 () Bool)

(declare-fun bm!6026 () Bool)

(assert (=> bm!6026 (= call!6030 ($colon$colon!63 e!45936 (ite c!10155 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777)))))))

(declare-fun c!10156 () Bool)

(assert (=> bm!6026 (= c!10156 c!10155)))

(declare-fun b!70204 () Bool)

(assert (=> b!70204 (= e!45935 (contains!721 lt!30856 (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))))))

(declare-fun bm!6027 () Bool)

(assert (=> bm!6027 (= call!6029 call!6028)))

(declare-fun b!70197 () Bool)

(assert (=> b!70197 (= c!10154 (and ((_ is Cons!1490) (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) (bvsgt (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))))) (_1!1069 lt!29777))))))

(assert (=> b!70197 (= e!45938 e!45937)))

(declare-fun d!15567 () Bool)

(assert (=> d!15567 e!45935))

(declare-fun res!37563 () Bool)

(assert (=> d!15567 (=> (not res!37563) (not e!45935))))

(assert (=> d!15567 (= res!37563 (isStrictlySorted!285 lt!30856))))

(assert (=> d!15567 (= lt!30856 e!45934)))

(assert (=> d!15567 (= c!10155 (and ((_ is Cons!1490) (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))) (bvslt (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))))) (_1!1069 lt!29777))))))

(assert (=> d!15567 (isStrictlySorted!285 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))))))

(assert (=> d!15567 (= (insertStrictlySorted!51 (t!5001 (toList!726 (+!89 lt!29768 lt!29775))) (_1!1069 lt!29777) (_2!1069 lt!29777)) lt!30856)))

(assert (= (and d!15567 c!10155) b!70203))

(assert (= (and d!15567 (not c!10155)) b!70199))

(assert (= (and b!70199 c!10153) b!70202))

(assert (= (and b!70199 (not c!10153)) b!70197))

(assert (= (and b!70197 c!10154) b!70201))

(assert (= (and b!70197 (not c!10154)) b!70195))

(assert (= (or b!70201 b!70195) bm!6027))

(assert (= (or b!70202 bm!6027) bm!6025))

(assert (= (or b!70203 bm!6025) bm!6026))

(assert (= (and bm!6026 c!10156) b!70196))

(assert (= (and bm!6026 (not c!10156)) b!70200))

(assert (= (and d!15567 res!37563) b!70198))

(assert (= (and b!70198 res!37564) b!70204))

(declare-fun m!66871 () Bool)

(assert (=> b!70196 m!66871))

(declare-fun m!66873 () Bool)

(assert (=> d!15567 m!66873))

(declare-fun m!66875 () Bool)

(assert (=> d!15567 m!66875))

(declare-fun m!66877 () Bool)

(assert (=> b!70198 m!66877))

(declare-fun m!66879 () Bool)

(assert (=> bm!6026 m!66879))

(declare-fun m!66881 () Bool)

(assert (=> b!70204 m!66881))

(assert (=> b!69164 d!15567))

(declare-fun d!15569 () Bool)

(assert (=> d!15569 (= (get!1137 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2499 (getValueByKey!130 (toList!726 lt!29926) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14961 d!15569))

(assert (=> d!14961 d!15161))

(declare-fun d!15571 () Bool)

(declare-fun res!37565 () Bool)

(declare-fun e!45939 () Bool)

(assert (=> d!15571 (=> res!37565 e!45939)))

(assert (=> d!15571 (= res!37565 (and ((_ is Cons!1490) (toList!726 e!45064)) (= (_1!1069 (h!2075 (toList!726 e!45064))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(assert (=> d!15571 (= (containsKey!134 (toList!726 e!45064) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) e!45939)))

(declare-fun b!70205 () Bool)

(declare-fun e!45940 () Bool)

(assert (=> b!70205 (= e!45939 e!45940)))

(declare-fun res!37566 () Bool)

(assert (=> b!70205 (=> (not res!37566) (not e!45940))))

(assert (=> b!70205 (= res!37566 (and (or (not ((_ is Cons!1490) (toList!726 e!45064))) (bvsle (_1!1069 (h!2075 (toList!726 e!45064))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) ((_ is Cons!1490) (toList!726 e!45064)) (bvslt (_1!1069 (h!2075 (toList!726 e!45064))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))))

(declare-fun b!70206 () Bool)

(assert (=> b!70206 (= e!45940 (containsKey!134 (t!5001 (toList!726 e!45064)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(assert (= (and d!15571 (not res!37565)) b!70205))

(assert (= (and b!70205 res!37566) b!70206))

(assert (=> b!70206 m!64043))

(declare-fun m!66883 () Bool)

(assert (=> b!70206 m!66883))

(assert (=> d!14801 d!15571))

(declare-fun d!15573 () Bool)

(declare-fun e!45941 () Bool)

(assert (=> d!15573 e!45941))

(declare-fun res!37567 () Bool)

(assert (=> d!15573 (=> res!37567 e!45941)))

(declare-fun lt!30859 () Bool)

(assert (=> d!15573 (= res!37567 (not lt!30859))))

(declare-fun lt!30860 () Bool)

(assert (=> d!15573 (= lt!30859 lt!30860)))

(declare-fun lt!30858 () Unit!1913)

(declare-fun e!45942 () Unit!1913)

(assert (=> d!15573 (= lt!30858 e!45942)))

(declare-fun c!10157 () Bool)

(assert (=> d!15573 (= c!10157 lt!30860)))

(assert (=> d!15573 (= lt!30860 (containsKey!134 (toList!726 lt!30353) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15573 (= (contains!720 lt!30353 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30859)))

(declare-fun b!70207 () Bool)

(declare-fun lt!30857 () Unit!1913)

(assert (=> b!70207 (= e!45942 lt!30857)))

(assert (=> b!70207 (= lt!30857 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30353) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> b!70207 (isDefined!84 (getValueByKey!130 (toList!726 lt!30353) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70208 () Bool)

(declare-fun Unit!1984 () Unit!1913)

(assert (=> b!70208 (= e!45942 Unit!1984)))

(declare-fun b!70209 () Bool)

(assert (=> b!70209 (= e!45941 (isDefined!84 (getValueByKey!130 (toList!726 lt!30353) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15573 c!10157) b!70207))

(assert (= (and d!15573 (not c!10157)) b!70208))

(assert (= (and d!15573 (not res!37567)) b!70209))

(declare-fun m!66885 () Bool)

(assert (=> d!15573 m!66885))

(declare-fun m!66887 () Bool)

(assert (=> b!70207 m!66887))

(assert (=> b!70207 m!65083))

(assert (=> b!70207 m!65083))

(declare-fun m!66889 () Bool)

(assert (=> b!70207 m!66889))

(assert (=> b!70209 m!65083))

(assert (=> b!70209 m!65083))

(assert (=> b!70209 m!66889))

(assert (=> d!14919 d!15573))

(declare-fun b!70213 () Bool)

(declare-fun e!45944 () Option!136)

(assert (=> b!70213 (= e!45944 None!134)))

(declare-fun c!10158 () Bool)

(declare-fun d!15575 () Bool)

(assert (=> d!15575 (= c!10158 (and ((_ is Cons!1490) lt!30354) (= (_1!1069 (h!2075 lt!30354)) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45943 () Option!136)

(assert (=> d!15575 (= (getValueByKey!130 lt!30354 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45943)))

(declare-fun b!70210 () Bool)

(assert (=> b!70210 (= e!45943 (Some!135 (_2!1069 (h!2075 lt!30354))))))

(declare-fun b!70212 () Bool)

(assert (=> b!70212 (= e!45944 (getValueByKey!130 (t!5001 lt!30354) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70211 () Bool)

(assert (=> b!70211 (= e!45943 e!45944)))

(declare-fun c!10159 () Bool)

(assert (=> b!70211 (= c!10159 (and ((_ is Cons!1490) lt!30354) (not (= (_1!1069 (h!2075 lt!30354)) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15575 c!10158) b!70210))

(assert (= (and d!15575 (not c!10158)) b!70211))

(assert (= (and b!70211 c!10159) b!70212))

(assert (= (and b!70211 (not c!10159)) b!70213))

(declare-fun m!66891 () Bool)

(assert (=> b!70212 m!66891))

(assert (=> d!14919 d!15575))

(declare-fun d!15577 () Bool)

(assert (=> d!15577 (= (getValueByKey!130 lt!30354 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30861 () Unit!1913)

(assert (=> d!15577 (= lt!30861 (choose!390 lt!30354 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!45945 () Bool)

(assert (=> d!15577 e!45945))

(declare-fun res!37568 () Bool)

(assert (=> d!15577 (=> (not res!37568) (not e!45945))))

(assert (=> d!15577 (= res!37568 (isStrictlySorted!285 lt!30354))))

(assert (=> d!15577 (= (lemmaContainsTupThenGetReturnValue!49 lt!30354 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30861)))

(declare-fun b!70214 () Bool)

(declare-fun res!37569 () Bool)

(assert (=> b!70214 (=> (not res!37569) (not e!45945))))

(assert (=> b!70214 (= res!37569 (containsKey!134 lt!30354 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70215 () Bool)

(assert (=> b!70215 (= e!45945 (contains!721 lt!30354 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15577 res!37568) b!70214))

(assert (= (and b!70214 res!37569) b!70215))

(assert (=> d!15577 m!65077))

(declare-fun m!66893 () Bool)

(assert (=> d!15577 m!66893))

(declare-fun m!66895 () Bool)

(assert (=> d!15577 m!66895))

(declare-fun m!66897 () Bool)

(assert (=> b!70214 m!66897))

(declare-fun m!66899 () Bool)

(assert (=> b!70215 m!66899))

(assert (=> d!14919 d!15577))

(declare-fun bm!6028 () Bool)

(declare-fun call!6031 () List!1494)

(declare-fun call!6033 () List!1494)

(assert (=> bm!6028 (= call!6031 call!6033)))

(declare-fun b!70216 () Bool)

(declare-fun e!45949 () List!1494)

(declare-fun call!6032 () List!1494)

(assert (=> b!70216 (= e!45949 call!6032)))

(declare-fun b!70217 () Bool)

(declare-fun e!45948 () List!1494)

(assert (=> b!70217 (= e!45948 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29909)) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70219 () Bool)

(declare-fun res!37571 () Bool)

(declare-fun e!45947 () Bool)

(assert (=> b!70219 (=> (not res!37571) (not e!45947))))

(declare-fun lt!30862 () List!1494)

(assert (=> b!70219 (= res!37571 (containsKey!134 lt!30862 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70220 () Bool)

(declare-fun e!45946 () List!1494)

(declare-fun e!45950 () List!1494)

(assert (=> b!70220 (= e!45946 e!45950)))

(declare-fun c!10160 () Bool)

(assert (=> b!70220 (= c!10160 (and ((_ is Cons!1490) (toList!726 lt!29909)) (= (_1!1069 (h!2075 (toList!726 lt!29909))) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun c!10161 () Bool)

(declare-fun b!70221 () Bool)

(assert (=> b!70221 (= e!45948 (ite c!10160 (t!5001 (toList!726 lt!29909)) (ite c!10161 (Cons!1490 (h!2075 (toList!726 lt!29909)) (t!5001 (toList!726 lt!29909))) Nil!1491)))))

(declare-fun b!70222 () Bool)

(assert (=> b!70222 (= e!45949 call!6032)))

(declare-fun b!70223 () Bool)

(assert (=> b!70223 (= e!45950 call!6031)))

(declare-fun b!70224 () Bool)

(assert (=> b!70224 (= e!45946 call!6033)))

(declare-fun c!10162 () Bool)

(declare-fun bm!6029 () Bool)

(assert (=> bm!6029 (= call!6033 ($colon$colon!63 e!45948 (ite c!10162 (h!2075 (toList!726 lt!29909)) (tuple2!2119 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!10163 () Bool)

(assert (=> bm!6029 (= c!10163 c!10162)))

(declare-fun b!70225 () Bool)

(assert (=> b!70225 (= e!45947 (contains!721 lt!30862 (tuple2!2119 (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun bm!6030 () Bool)

(assert (=> bm!6030 (= call!6032 call!6031)))

(declare-fun b!70218 () Bool)

(assert (=> b!70218 (= c!10161 (and ((_ is Cons!1490) (toList!726 lt!29909)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29909))) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!70218 (= e!45950 e!45949)))

(declare-fun d!15579 () Bool)

(assert (=> d!15579 e!45947))

(declare-fun res!37570 () Bool)

(assert (=> d!15579 (=> (not res!37570) (not e!45947))))

(assert (=> d!15579 (= res!37570 (isStrictlySorted!285 lt!30862))))

(assert (=> d!15579 (= lt!30862 e!45946)))

(assert (=> d!15579 (= c!10162 (and ((_ is Cons!1490) (toList!726 lt!29909)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29909))) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15579 (isStrictlySorted!285 (toList!726 lt!29909))))

(assert (=> d!15579 (= (insertStrictlySorted!51 (toList!726 lt!29909) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30862)))

(assert (= (and d!15579 c!10162) b!70224))

(assert (= (and d!15579 (not c!10162)) b!70220))

(assert (= (and b!70220 c!10160) b!70223))

(assert (= (and b!70220 (not c!10160)) b!70218))

(assert (= (and b!70218 c!10161) b!70222))

(assert (= (and b!70218 (not c!10161)) b!70216))

(assert (= (or b!70222 b!70216) bm!6030))

(assert (= (or b!70223 bm!6030) bm!6028))

(assert (= (or b!70224 bm!6028) bm!6029))

(assert (= (and bm!6029 c!10163) b!70217))

(assert (= (and bm!6029 (not c!10163)) b!70221))

(assert (= (and d!15579 res!37570) b!70219))

(assert (= (and b!70219 res!37571) b!70225))

(declare-fun m!66901 () Bool)

(assert (=> b!70217 m!66901))

(declare-fun m!66903 () Bool)

(assert (=> d!15579 m!66903))

(declare-fun m!66905 () Bool)

(assert (=> d!15579 m!66905))

(declare-fun m!66907 () Bool)

(assert (=> b!70219 m!66907))

(declare-fun m!66909 () Bool)

(assert (=> bm!6029 m!66909))

(declare-fun m!66911 () Bool)

(assert (=> b!70225 m!66911))

(assert (=> d!14919 d!15579))

(declare-fun d!15581 () Bool)

(declare-fun lt!30863 () Bool)

(assert (=> d!15581 (= lt!30863 (select (content!72 (toList!726 lt!30206)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun e!45951 () Bool)

(assert (=> d!15581 (= lt!30863 e!45951)))

(declare-fun res!37573 () Bool)

(assert (=> d!15581 (=> (not res!37573) (not e!45951))))

(assert (=> d!15581 (= res!37573 ((_ is Cons!1490) (toList!726 lt!30206)))))

(assert (=> d!15581 (= (contains!721 (toList!726 lt!30206) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) lt!30863)))

(declare-fun b!70226 () Bool)

(declare-fun e!45952 () Bool)

(assert (=> b!70226 (= e!45951 e!45952)))

(declare-fun res!37572 () Bool)

(assert (=> b!70226 (=> res!37572 e!45952)))

(assert (=> b!70226 (= res!37572 (= (h!2075 (toList!726 lt!30206)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!70227 () Bool)

(assert (=> b!70227 (= e!45952 (contains!721 (t!5001 (toList!726 lt!30206)) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))

(assert (= (and d!15581 res!37573) b!70226))

(assert (= (and b!70226 (not res!37572)) b!70227))

(declare-fun m!66913 () Bool)

(assert (=> d!15581 m!66913))

(declare-fun m!66915 () Bool)

(assert (=> d!15581 m!66915))

(declare-fun m!66917 () Bool)

(assert (=> b!70227 m!66917))

(assert (=> b!69031 d!15581))

(declare-fun d!15583 () Bool)

(assert (=> d!15583 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833))))

(declare-fun lt!30864 () Unit!1913)

(assert (=> d!15583 (= lt!30864 (choose!395 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833))))

(declare-fun e!45953 () Bool)

(assert (=> d!15583 e!45953))

(declare-fun res!37574 () Bool)

(assert (=> d!15583 (=> (not res!37574) (not e!45953))))

(assert (=> d!15583 (= res!37574 (isStrictlySorted!285 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))))))

(assert (=> d!15583 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833) lt!30864)))

(declare-fun b!70228 () Bool)

(assert (=> b!70228 (= e!45953 (containsKey!134 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833))))

(assert (= (and d!15583 res!37574) b!70228))

(assert (=> d!15583 m!64655))

(assert (=> d!15583 m!64655))

(assert (=> d!15583 m!64657))

(declare-fun m!66919 () Bool)

(assert (=> d!15583 m!66919))

(declare-fun m!66921 () Bool)

(assert (=> d!15583 m!66921))

(assert (=> b!70228 m!64651))

(assert (=> b!69022 d!15583))

(assert (=> b!69022 d!15423))

(assert (=> b!69022 d!15425))

(declare-fun d!15585 () Bool)

(declare-fun e!45954 () Bool)

(assert (=> d!15585 e!45954))

(declare-fun res!37575 () Bool)

(assert (=> d!15585 (=> res!37575 e!45954)))

(declare-fun lt!30867 () Bool)

(assert (=> d!15585 (= res!37575 (not lt!30867))))

(declare-fun lt!30868 () Bool)

(assert (=> d!15585 (= lt!30867 lt!30868)))

(declare-fun lt!30866 () Unit!1913)

(declare-fun e!45955 () Unit!1913)

(assert (=> d!15585 (= lt!30866 e!45955)))

(declare-fun c!10164 () Bool)

(assert (=> d!15585 (= c!10164 lt!30868)))

(assert (=> d!15585 (= lt!30868 (containsKey!134 (toList!726 lt!30303) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15585 (= (contains!720 lt!30303 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30867)))

(declare-fun b!70229 () Bool)

(declare-fun lt!30865 () Unit!1913)

(assert (=> b!70229 (= e!45955 lt!30865)))

(assert (=> b!70229 (= lt!30865 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30303) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70229 (isDefined!84 (getValueByKey!130 (toList!726 lt!30303) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70230 () Bool)

(declare-fun Unit!1985 () Unit!1913)

(assert (=> b!70230 (= e!45955 Unit!1985)))

(declare-fun b!70231 () Bool)

(assert (=> b!70231 (= e!45954 (isDefined!84 (getValueByKey!130 (toList!726 lt!30303) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15585 c!10164) b!70229))

(assert (= (and d!15585 (not c!10164)) b!70230))

(assert (= (and d!15585 (not res!37575)) b!70231))

(declare-fun m!66923 () Bool)

(assert (=> d!15585 m!66923))

(declare-fun m!66925 () Bool)

(assert (=> b!70229 m!66925))

(declare-fun m!66927 () Bool)

(assert (=> b!70229 m!66927))

(assert (=> b!70229 m!66927))

(declare-fun m!66929 () Bool)

(assert (=> b!70229 m!66929))

(assert (=> b!70231 m!66927))

(assert (=> b!70231 m!66927))

(assert (=> b!70231 m!66929))

(assert (=> bm!5911 d!15585))

(assert (=> b!69257 d!15083))

(declare-fun d!15587 () Bool)

(declare-fun res!37576 () Bool)

(declare-fun e!45956 () Bool)

(assert (=> d!15587 (=> res!37576 e!45956)))

(assert (=> d!15587 (= res!37576 (and ((_ is Cons!1490) lt!30057) (= (_1!1069 (h!2075 lt!30057)) (_1!1069 lt!29775))))))

(assert (=> d!15587 (= (containsKey!134 lt!30057 (_1!1069 lt!29775)) e!45956)))

(declare-fun b!70232 () Bool)

(declare-fun e!45957 () Bool)

(assert (=> b!70232 (= e!45956 e!45957)))

(declare-fun res!37577 () Bool)

(assert (=> b!70232 (=> (not res!37577) (not e!45957))))

(assert (=> b!70232 (= res!37577 (and (or (not ((_ is Cons!1490) lt!30057)) (bvsle (_1!1069 (h!2075 lt!30057)) (_1!1069 lt!29775))) ((_ is Cons!1490) lt!30057) (bvslt (_1!1069 (h!2075 lt!30057)) (_1!1069 lt!29775))))))

(declare-fun b!70233 () Bool)

(assert (=> b!70233 (= e!45957 (containsKey!134 (t!5001 lt!30057) (_1!1069 lt!29775)))))

(assert (= (and d!15587 (not res!37576)) b!70232))

(assert (= (and b!70232 res!37577) b!70233))

(declare-fun m!66931 () Bool)

(assert (=> b!70233 m!66931))

(assert (=> b!68852 d!15587))

(assert (=> b!69076 d!15083))

(declare-fun d!15589 () Bool)

(declare-fun e!45958 () Bool)

(assert (=> d!15589 e!45958))

(declare-fun res!37578 () Bool)

(assert (=> d!15589 (=> res!37578 e!45958)))

(declare-fun lt!30871 () Bool)

(assert (=> d!15589 (= res!37578 (not lt!30871))))

(declare-fun lt!30872 () Bool)

(assert (=> d!15589 (= lt!30871 lt!30872)))

(declare-fun lt!30870 () Unit!1913)

(declare-fun e!45959 () Unit!1913)

(assert (=> d!15589 (= lt!30870 e!45959)))

(declare-fun c!10165 () Bool)

(assert (=> d!15589 (= c!10165 lt!30872)))

(assert (=> d!15589 (= lt!30872 (containsKey!134 (toList!726 lt!30254) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15589 (= (contains!720 lt!30254 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30871)))

(declare-fun b!70234 () Bool)

(declare-fun lt!30869 () Unit!1913)

(assert (=> b!70234 (= e!45959 lt!30869)))

(assert (=> b!70234 (= lt!30869 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30254) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70234 (isDefined!84 (getValueByKey!130 (toList!726 lt!30254) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70235 () Bool)

(declare-fun Unit!1986 () Unit!1913)

(assert (=> b!70235 (= e!45959 Unit!1986)))

(declare-fun b!70236 () Bool)

(assert (=> b!70236 (= e!45958 (isDefined!84 (getValueByKey!130 (toList!726 lt!30254) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15589 c!10165) b!70234))

(assert (= (and d!15589 (not c!10165)) b!70235))

(assert (= (and d!15589 (not res!37578)) b!70236))

(declare-fun m!66933 () Bool)

(assert (=> d!15589 m!66933))

(declare-fun m!66935 () Bool)

(assert (=> b!70234 m!66935))

(assert (=> b!70234 m!66685))

(assert (=> b!70234 m!66685))

(declare-fun m!66937 () Bool)

(assert (=> b!70234 m!66937))

(assert (=> b!70236 m!66685))

(assert (=> b!70236 m!66685))

(assert (=> b!70236 m!66937))

(assert (=> bm!5897 d!15589))

(assert (=> bm!5877 d!14795))

(declare-fun b!70237 () Bool)

(declare-fun e!45960 () (_ BitVec 32))

(assert (=> b!70237 (= e!45960 #b00000000000000000000000000000000)))

(declare-fun b!70238 () Bool)

(declare-fun e!45961 () (_ BitVec 32))

(assert (=> b!70238 (= e!45960 e!45961)))

(declare-fun c!10166 () Bool)

(assert (=> b!70238 (= c!10166 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6031 () Bool)

(declare-fun call!6034 () (_ BitVec 32))

(assert (=> bm!6031 (= call!6034 (arrayCountValidKeys!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(declare-fun b!70239 () Bool)

(assert (=> b!70239 (= e!45961 call!6034)))

(declare-fun d!15591 () Bool)

(declare-fun lt!30873 () (_ BitVec 32))

(assert (=> d!15591 (and (bvsge lt!30873 #b00000000000000000000000000000000) (bvsle lt!30873 (bvsub (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!15591 (= lt!30873 e!45960)))

(declare-fun c!10167 () Bool)

(assert (=> d!15591 (= c!10167 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!15591 (and (bvsle #b00000000000000000000000000000000 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))))))

(assert (=> d!15591 (= (arrayCountValidKeys!0 (_keys!3812 (v!2495 (underlying!255 thiss!992))) #b00000000000000000000000000000000 (size!2076 (_keys!3812 (v!2495 (underlying!255 thiss!992))))) lt!30873)))

(declare-fun b!70240 () Bool)

(assert (=> b!70240 (= e!45961 (bvadd #b00000000000000000000000000000001 call!6034))))

(assert (= (and d!15591 c!10167) b!70237))

(assert (= (and d!15591 (not c!10167)) b!70238))

(assert (= (and b!70238 c!10166) b!70240))

(assert (= (and b!70238 (not c!10166)) b!70239))

(assert (= (or b!70240 b!70239) bm!6031))

(assert (=> b!70238 m!66445))

(assert (=> b!70238 m!66445))

(assert (=> b!70238 m!66451))

(declare-fun m!66939 () Bool)

(assert (=> bm!6031 m!66939))

(assert (=> b!69283 d!15591))

(declare-fun d!15593 () Bool)

(assert (=> d!15593 (= (isEmpty!315 lt!30158) (isEmpty!317 (toList!726 lt!30158)))))

(declare-fun bs!3008 () Bool)

(assert (= bs!3008 d!15593))

(declare-fun m!66941 () Bool)

(assert (=> bs!3008 m!66941))

(assert (=> b!68915 d!15593))

(declare-fun d!15595 () Bool)

(declare-fun e!45962 () Bool)

(assert (=> d!15595 e!45962))

(declare-fun res!37579 () Bool)

(assert (=> d!15595 (=> res!37579 e!45962)))

(declare-fun lt!30876 () Bool)

(assert (=> d!15595 (= res!37579 (not lt!30876))))

(declare-fun lt!30877 () Bool)

(assert (=> d!15595 (= lt!30876 lt!30877)))

(declare-fun lt!30875 () Unit!1913)

(declare-fun e!45963 () Unit!1913)

(assert (=> d!15595 (= lt!30875 e!45963)))

(declare-fun c!10168 () Bool)

(assert (=> d!15595 (= c!10168 lt!30877)))

(assert (=> d!15595 (= lt!30877 (containsKey!134 (toList!726 lt!30393) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15595 (= (contains!720 lt!30393 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30876)))

(declare-fun b!70241 () Bool)

(declare-fun lt!30874 () Unit!1913)

(assert (=> b!70241 (= e!45963 lt!30874)))

(assert (=> b!70241 (= lt!30874 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30393) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70241 (isDefined!84 (getValueByKey!130 (toList!726 lt!30393) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70242 () Bool)

(declare-fun Unit!1987 () Unit!1913)

(assert (=> b!70242 (= e!45963 Unit!1987)))

(declare-fun b!70243 () Bool)

(assert (=> b!70243 (= e!45962 (isDefined!84 (getValueByKey!130 (toList!726 lt!30393) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15595 c!10168) b!70241))

(assert (= (and d!15595 (not c!10168)) b!70242))

(assert (= (and d!15595 (not res!37579)) b!70243))

(declare-fun m!66943 () Bool)

(assert (=> d!15595 m!66943))

(declare-fun m!66945 () Bool)

(assert (=> b!70241 m!66945))

(assert (=> b!70241 m!66695))

(assert (=> b!70241 m!66695))

(declare-fun m!66947 () Bool)

(assert (=> b!70241 m!66947))

(assert (=> b!70243 m!66695))

(assert (=> b!70243 m!66695))

(assert (=> b!70243 m!66947))

(assert (=> bm!5921 d!15595))

(declare-fun d!15597 () Bool)

(assert (=> d!15597 (= ($colon$colon!63 e!45300 (ite c!9869 (h!2075 (toList!726 (+!89 lt!29768 lt!29775))) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777)))) (Cons!1490 (ite c!9869 (h!2075 (toList!726 (+!89 lt!29768 lt!29775))) (tuple2!2119 (_1!1069 lt!29777) (_2!1069 lt!29777))) e!45300))))

(assert (=> bm!5915 d!15597))

(declare-fun d!15599 () Bool)

(assert (=> d!15599 (= (isEmpty!316 (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))) (not ((_ is Some!135) (getValueByKey!130 (toList!726 lt!29772) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))))

(assert (=> d!14859 d!15599))

(declare-fun b!70247 () Bool)

(declare-fun e!45965 () Option!136)

(assert (=> b!70247 (= e!45965 None!134)))

(declare-fun d!15601 () Bool)

(declare-fun c!10169 () Bool)

(assert (=> d!15601 (= c!10169 (and ((_ is Cons!1490) (toList!726 lt!30353)) (= (_1!1069 (h!2075 (toList!726 lt!30353))) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45964 () Option!136)

(assert (=> d!15601 (= (getValueByKey!130 (toList!726 lt!30353) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45964)))

(declare-fun b!70244 () Bool)

(assert (=> b!70244 (= e!45964 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30353)))))))

(declare-fun b!70246 () Bool)

(assert (=> b!70246 (= e!45965 (getValueByKey!130 (t!5001 (toList!726 lt!30353)) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70245 () Bool)

(assert (=> b!70245 (= e!45964 e!45965)))

(declare-fun c!10170 () Bool)

(assert (=> b!70245 (= c!10170 (and ((_ is Cons!1490) (toList!726 lt!30353)) (not (= (_1!1069 (h!2075 (toList!726 lt!30353))) (_1!1069 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15601 c!10169) b!70244))

(assert (= (and d!15601 (not c!10169)) b!70245))

(assert (= (and b!70245 c!10170) b!70246))

(assert (= (and b!70245 (not c!10170)) b!70247))

(declare-fun m!66949 () Bool)

(assert (=> b!70246 m!66949))

(assert (=> b!69224 d!15601))

(declare-fun b!70248 () Bool)

(declare-fun e!45966 () (_ BitVec 32))

(assert (=> b!70248 (= e!45966 #b00000000000000000000000000000000)))

(declare-fun b!70249 () Bool)

(declare-fun e!45967 () (_ BitVec 32))

(assert (=> b!70249 (= e!45966 e!45967)))

(declare-fun c!10171 () Bool)

(assert (=> b!70249 (= c!10171 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(declare-fun bm!6032 () Bool)

(declare-fun call!6035 () (_ BitVec 32))

(assert (=> bm!6032 (= call!6035 (arrayCountValidKeys!0 (_keys!3812 (_2!1070 lt!30024)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(declare-fun b!70250 () Bool)

(assert (=> b!70250 (= e!45967 call!6035)))

(declare-fun d!15603 () Bool)

(declare-fun lt!30878 () (_ BitVec 32))

(assert (=> d!15603 (and (bvsge lt!30878 #b00000000000000000000000000000000) (bvsle lt!30878 (bvsub (size!2076 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(assert (=> d!15603 (= lt!30878 e!45966)))

(declare-fun c!10172 () Bool)

(assert (=> d!15603 (= c!10172 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(assert (=> d!15603 (and (bvsle #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2076 (_keys!3812 (_2!1070 lt!30024))) (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(assert (=> d!15603 (= (arrayCountValidKeys!0 (_keys!3812 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))) lt!30878)))

(declare-fun b!70251 () Bool)

(assert (=> b!70251 (= e!45967 (bvadd #b00000000000000000000000000000001 call!6035))))

(assert (= (and d!15603 c!10172) b!70248))

(assert (= (and d!15603 (not c!10172)) b!70249))

(assert (= (and b!70249 c!10171) b!70251))

(assert (= (and b!70249 (not c!10171)) b!70250))

(assert (= (or b!70251 b!70250) bm!6032))

(assert (=> b!70249 m!66643))

(assert (=> b!70249 m!66643))

(assert (=> b!70249 m!66649))

(declare-fun m!66951 () Bool)

(assert (=> bm!6032 m!66951))

(assert (=> b!69280 d!15603))

(assert (=> b!69027 d!15083))

(declare-fun d!15605 () Bool)

(assert (=> d!15605 (= (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29911)) (v!2499 (getValueByKey!130 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29911)))))

(assert (=> d!14923 d!15605))

(declare-fun b!70255 () Bool)

(declare-fun e!45969 () Option!136)

(assert (=> b!70255 (= e!45969 None!134)))

(declare-fun d!15607 () Bool)

(declare-fun c!10173 () Bool)

(assert (=> d!15607 (= c!10173 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29911)))))

(declare-fun e!45968 () Option!136)

(assert (=> d!15607 (= (getValueByKey!130 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!29911) e!45968)))

(declare-fun b!70252 () Bool)

(assert (=> b!70252 (= e!45968 (Some!135 (_2!1069 (h!2075 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))))))))

(declare-fun b!70254 () Bool)

(assert (=> b!70254 (= e!45969 (getValueByKey!130 (t!5001 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) lt!29911))))

(declare-fun b!70253 () Bool)

(assert (=> b!70253 (= e!45968 e!45969)))

(declare-fun c!10174 () Bool)

(assert (=> b!70253 (= c!10174 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992))))))) (not (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29909 (tuple2!2119 lt!29925 (zeroValue!2074 (v!2495 (underlying!255 thiss!992)))))))) lt!29911))))))

(assert (= (and d!15607 c!10173) b!70252))

(assert (= (and d!15607 (not c!10173)) b!70253))

(assert (= (and b!70253 c!10174) b!70254))

(assert (= (and b!70253 (not c!10174)) b!70255))

(declare-fun m!66953 () Bool)

(assert (=> b!70254 m!66953))

(assert (=> d!14923 d!15607))

(declare-fun d!15609 () Bool)

(declare-fun res!37580 () Bool)

(declare-fun e!45970 () Bool)

(assert (=> d!15609 (=> res!37580 e!45970)))

(assert (=> d!15609 (= res!37580 (or ((_ is Nil!1491) lt!30275) ((_ is Nil!1491) (t!5001 lt!30275))))))

(assert (=> d!15609 (= (isStrictlySorted!285 lt!30275) e!45970)))

(declare-fun b!70256 () Bool)

(declare-fun e!45971 () Bool)

(assert (=> b!70256 (= e!45970 e!45971)))

(declare-fun res!37581 () Bool)

(assert (=> b!70256 (=> (not res!37581) (not e!45971))))

(assert (=> b!70256 (= res!37581 (bvslt (_1!1069 (h!2075 lt!30275)) (_1!1069 (h!2075 (t!5001 lt!30275)))))))

(declare-fun b!70257 () Bool)

(assert (=> b!70257 (= e!45971 (isStrictlySorted!285 (t!5001 lt!30275)))))

(assert (= (and d!15609 (not res!37580)) b!70256))

(assert (= (and b!70256 res!37581) b!70257))

(declare-fun m!66955 () Bool)

(assert (=> b!70257 m!66955))

(assert (=> d!14851 d!15609))

(assert (=> d!14851 d!15331))

(declare-fun d!15611 () Bool)

(assert (=> d!15611 (= (apply!73 lt!30303 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1137 (getValueByKey!130 (toList!726 lt!30303) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3009 () Bool)

(assert (= bs!3009 d!15611))

(assert (=> bs!3009 m!66927))

(assert (=> bs!3009 m!66927))

(declare-fun m!66957 () Bool)

(assert (=> bs!3009 m!66957))

(assert (=> b!69150 d!15611))

(declare-fun d!15613 () Bool)

(assert (=> d!15613 (contains!720 (getCurrentListMap!421 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355))))

(declare-fun lt!30881 () Unit!1913)

(declare-fun choose!402 (array!3854 array!3856 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1913)

(assert (=> d!15613 (= lt!30881 (choose!402 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15613 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15613 (= (lemmaArrayContainsKeyThenInListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30881)))

(declare-fun bs!3010 () Bool)

(assert (= bs!3010 d!15613))

(assert (=> bs!3010 m!64251))

(assert (=> bs!3010 m!64251))

(assert (=> bs!3010 m!64043))

(assert (=> bs!3010 m!64489))

(assert (=> bs!3010 m!64043))

(declare-fun m!66959 () Bool)

(assert (=> bs!3010 m!66959))

(assert (=> bs!3010 m!64569))

(assert (=> b!68895 d!15613))

(assert (=> b!68895 d!15437))

(assert (=> b!68895 d!14865))

(assert (=> d!14875 d!14873))

(declare-fun d!15615 () Bool)

(assert (=> d!15615 (= (getValueByKey!130 lt!29863 (_1!1069 lt!29777)) (Some!135 (_2!1069 lt!29777)))))

(assert (=> d!15615 true))

(declare-fun _$22!376 () Unit!1913)

(assert (=> d!15615 (= (choose!390 lt!29863 (_1!1069 lt!29777) (_2!1069 lt!29777)) _$22!376)))

(declare-fun bs!3011 () Bool)

(assert (= bs!3011 d!15615))

(assert (=> bs!3011 m!64233))

(assert (=> d!14875 d!15615))

(declare-fun d!15617 () Bool)

(declare-fun res!37582 () Bool)

(declare-fun e!45972 () Bool)

(assert (=> d!15617 (=> res!37582 e!45972)))

(assert (=> d!15617 (= res!37582 (or ((_ is Nil!1491) lt!29863) ((_ is Nil!1491) (t!5001 lt!29863))))))

(assert (=> d!15617 (= (isStrictlySorted!285 lt!29863) e!45972)))

(declare-fun b!70258 () Bool)

(declare-fun e!45973 () Bool)

(assert (=> b!70258 (= e!45972 e!45973)))

(declare-fun res!37583 () Bool)

(assert (=> b!70258 (=> (not res!37583) (not e!45973))))

(assert (=> b!70258 (= res!37583 (bvslt (_1!1069 (h!2075 lt!29863)) (_1!1069 (h!2075 (t!5001 lt!29863)))))))

(declare-fun b!70259 () Bool)

(assert (=> b!70259 (= e!45973 (isStrictlySorted!285 (t!5001 lt!29863)))))

(assert (= (and d!15617 (not res!37582)) b!70258))

(assert (= (and b!70258 res!37583) b!70259))

(declare-fun m!66961 () Bool)

(assert (=> b!70259 m!66961))

(assert (=> d!14875 d!15617))

(declare-fun d!15619 () Bool)

(assert (=> d!15619 (isDefined!84 (getValueByKey!130 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30882 () Unit!1913)

(assert (=> d!15619 (= lt!30882 (choose!395 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45974 () Bool)

(assert (=> d!15619 e!45974))

(declare-fun res!37584 () Bool)

(assert (=> d!15619 (=> (not res!37584) (not e!45974))))

(assert (=> d!15619 (= res!37584 (isStrictlySorted!285 (toList!726 lt!29836)))))

(assert (=> d!15619 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30882)))

(declare-fun b!70260 () Bool)

(assert (=> b!70260 (= e!45974 (containsKey!134 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15619 res!37584) b!70260))

(assert (=> d!15619 m!64159))

(assert (=> d!15619 m!64615))

(assert (=> d!15619 m!64615))

(assert (=> d!15619 m!64617))

(assert (=> d!15619 m!64159))

(declare-fun m!66963 () Bool)

(assert (=> d!15619 m!66963))

(assert (=> d!15619 m!66361))

(assert (=> b!70260 m!64159))

(assert (=> b!70260 m!64611))

(assert (=> b!69009 d!15619))

(assert (=> b!69009 d!15473))

(assert (=> b!69009 d!15029))

(declare-fun b!70261 () Bool)

(declare-fun e!45975 () (_ BitVec 32))

(assert (=> b!70261 (= e!45975 #b00000000000000000000000000000000)))

(declare-fun b!70262 () Bool)

(declare-fun e!45976 () (_ BitVec 32))

(assert (=> b!70262 (= e!45975 e!45976)))

(declare-fun c!10175 () Bool)

(assert (=> b!70262 (= c!10175 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6033 () Bool)

(declare-fun call!6036 () (_ BitVec 32))

(assert (=> bm!6033 (= call!6036 (arrayCountValidKeys!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!70263 () Bool)

(assert (=> b!70263 (= e!45976 call!6036)))

(declare-fun d!15621 () Bool)

(declare-fun lt!30883 () (_ BitVec 32))

(assert (=> d!15621 (and (bvsge lt!30883 #b00000000000000000000000000000000) (bvsle lt!30883 (bvsub (size!2076 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!15621 (= lt!30883 e!45975)))

(declare-fun c!10176 () Bool)

(assert (=> d!15621 (= c!10176 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15621 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2076 (_keys!3812 newMap!16)) (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15621 (= (arrayCountValidKeys!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))) lt!30883)))

(declare-fun b!70264 () Bool)

(assert (=> b!70264 (= e!45976 (bvadd #b00000000000000000000000000000001 call!6036))))

(assert (= (and d!15621 c!10176) b!70261))

(assert (= (and d!15621 (not c!10176)) b!70262))

(assert (= (and b!70262 c!10175) b!70264))

(assert (= (and b!70262 (not c!10175)) b!70263))

(assert (= (or b!70264 b!70263) bm!6033))

(assert (=> b!70262 m!65269))

(assert (=> b!70262 m!65269))

(assert (=> b!70262 m!65489))

(declare-fun m!66965 () Bool)

(assert (=> bm!6033 m!66965))

(assert (=> bm!5887 d!15621))

(declare-fun d!15623 () Bool)

(declare-fun lt!30884 () Bool)

(assert (=> d!15623 (= lt!30884 (select (content!72 (toList!726 lt!30042)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(declare-fun e!45977 () Bool)

(assert (=> d!15623 (= lt!30884 e!45977)))

(declare-fun res!37586 () Bool)

(assert (=> d!15623 (=> (not res!37586) (not e!45977))))

(assert (=> d!15623 (= res!37586 ((_ is Cons!1490) (toList!726 lt!30042)))))

(assert (=> d!15623 (= (contains!721 (toList!726 lt!30042) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) lt!30884)))

(declare-fun b!70265 () Bool)

(declare-fun e!45978 () Bool)

(assert (=> b!70265 (= e!45977 e!45978)))

(declare-fun res!37585 () Bool)

(assert (=> b!70265 (=> res!37585 e!45978)))

(assert (=> b!70265 (= res!37585 (= (h!2075 (toList!726 lt!30042)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(declare-fun b!70266 () Bool)

(assert (=> b!70266 (= e!45978 (contains!721 (t!5001 (toList!726 lt!30042)) (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))

(assert (= (and d!15623 res!37586) b!70265))

(assert (= (and b!70265 (not res!37585)) b!70266))

(declare-fun m!66967 () Bool)

(assert (=> d!15623 m!66967))

(declare-fun m!66969 () Bool)

(assert (=> d!15623 m!66969))

(declare-fun m!66971 () Bool)

(assert (=> b!70266 m!66971))

(assert (=> b!68805 d!15623))

(assert (=> d!14865 d!14981))

(declare-fun d!15625 () Bool)

(declare-fun e!45979 () Bool)

(assert (=> d!15625 e!45979))

(declare-fun res!37588 () Bool)

(assert (=> d!15625 (=> (not res!37588) (not e!45979))))

(declare-fun lt!30887 () ListLongMap!1421)

(assert (=> d!15625 (= res!37588 (contains!720 lt!30887 (_1!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16)))))))

(declare-fun lt!30888 () List!1494)

(assert (=> d!15625 (= lt!30887 (ListLongMap!1422 lt!30888))))

(declare-fun lt!30885 () Unit!1913)

(declare-fun lt!30886 () Unit!1913)

(assert (=> d!15625 (= lt!30885 lt!30886)))

(assert (=> d!15625 (= (getValueByKey!130 lt!30888 (_1!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16)))))))

(assert (=> d!15625 (= lt!30886 (lemmaContainsTupThenGetReturnValue!49 lt!30888 (_1!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16)))))))

(assert (=> d!15625 (= lt!30888 (insertStrictlySorted!51 (toList!726 lt!30218) (_1!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16)))))))

(assert (=> d!15625 (= (+!89 lt!30218 (tuple2!2119 lt!30233 (minValue!2074 newMap!16))) lt!30887)))

(declare-fun b!70267 () Bool)

(declare-fun res!37587 () Bool)

(assert (=> b!70267 (=> (not res!37587) (not e!45979))))

(assert (=> b!70267 (= res!37587 (= (getValueByKey!130 (toList!726 lt!30887) (_1!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30233 (minValue!2074 newMap!16))))))))

(declare-fun b!70268 () Bool)

(assert (=> b!70268 (= e!45979 (contains!721 (toList!726 lt!30887) (tuple2!2119 lt!30233 (minValue!2074 newMap!16))))))

(assert (= (and d!15625 res!37588) b!70267))

(assert (= (and b!70267 res!37587) b!70268))

(declare-fun m!66973 () Bool)

(assert (=> d!15625 m!66973))

(declare-fun m!66975 () Bool)

(assert (=> d!15625 m!66975))

(declare-fun m!66977 () Bool)

(assert (=> d!15625 m!66977))

(declare-fun m!66979 () Bool)

(assert (=> d!15625 m!66979))

(declare-fun m!66981 () Bool)

(assert (=> b!70267 m!66981))

(declare-fun m!66983 () Bool)

(assert (=> b!70268 m!66983))

(assert (=> b!69054 d!15625))

(declare-fun d!15627 () Bool)

(assert (=> d!15627 (= (apply!73 lt!30235 lt!30229) (get!1137 (getValueByKey!130 (toList!726 lt!30235) lt!30229)))))

(declare-fun bs!3012 () Bool)

(assert (= bs!3012 d!15627))

(declare-fun m!66985 () Bool)

(assert (=> bs!3012 m!66985))

(assert (=> bs!3012 m!66985))

(declare-fun m!66987 () Bool)

(assert (=> bs!3012 m!66987))

(assert (=> b!69054 d!15627))

(declare-fun d!15629 () Bool)

(assert (=> d!15629 (= (apply!73 lt!30215 lt!30217) (get!1137 (getValueByKey!130 (toList!726 lt!30215) lt!30217)))))

(declare-fun bs!3013 () Bool)

(assert (= bs!3013 d!15629))

(declare-fun m!66989 () Bool)

(assert (=> bs!3013 m!66989))

(assert (=> bs!3013 m!66989))

(declare-fun m!66991 () Bool)

(assert (=> bs!3013 m!66991))

(assert (=> b!69054 d!15629))

(declare-fun d!15631 () Bool)

(assert (=> d!15631 (= (apply!73 (+!89 lt!30215 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))) lt!30217) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30215 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16)))) lt!30217)))))

(declare-fun bs!3014 () Bool)

(assert (= bs!3014 d!15631))

(declare-fun m!66993 () Bool)

(assert (=> bs!3014 m!66993))

(assert (=> bs!3014 m!66993))

(declare-fun m!66995 () Bool)

(assert (=> bs!3014 m!66995))

(assert (=> b!69054 d!15631))

(declare-fun d!15633 () Bool)

(assert (=> d!15633 (= (apply!73 (+!89 lt!30235 (tuple2!2119 lt!30220 (minValue!2074 newMap!16))) lt!30229) (apply!73 lt!30235 lt!30229))))

(declare-fun lt!30889 () Unit!1913)

(assert (=> d!15633 (= lt!30889 (choose!397 lt!30235 lt!30220 (minValue!2074 newMap!16) lt!30229))))

(declare-fun e!45980 () Bool)

(assert (=> d!15633 e!45980))

(declare-fun res!37589 () Bool)

(assert (=> d!15633 (=> (not res!37589) (not e!45980))))

(assert (=> d!15633 (= res!37589 (contains!720 lt!30235 lt!30229))))

(assert (=> d!15633 (= (addApplyDifferent!49 lt!30235 lt!30220 (minValue!2074 newMap!16) lt!30229) lt!30889)))

(declare-fun b!70269 () Bool)

(assert (=> b!70269 (= e!45980 (not (= lt!30229 lt!30220)))))

(assert (= (and d!15633 res!37589) b!70269))

(declare-fun m!66997 () Bool)

(assert (=> d!15633 m!66997))

(assert (=> d!15633 m!64721))

(assert (=> d!15633 m!64723))

(declare-fun m!66999 () Bool)

(assert (=> d!15633 m!66999))

(assert (=> d!15633 m!64721))

(assert (=> d!15633 m!64729))

(assert (=> b!69054 d!15633))

(declare-fun d!15635 () Bool)

(declare-fun e!45981 () Bool)

(assert (=> d!15635 e!45981))

(declare-fun res!37591 () Bool)

(assert (=> d!15635 (=> (not res!37591) (not e!45981))))

(declare-fun lt!30892 () ListLongMap!1421)

(assert (=> d!15635 (= res!37591 (contains!720 lt!30892 (_1!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30893 () List!1494)

(assert (=> d!15635 (= lt!30892 (ListLongMap!1422 lt!30893))))

(declare-fun lt!30890 () Unit!1913)

(declare-fun lt!30891 () Unit!1913)

(assert (=> d!15635 (= lt!30890 lt!30891)))

(assert (=> d!15635 (= (getValueByKey!130 lt!30893 (_1!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15635 (= lt!30891 (lemmaContainsTupThenGetReturnValue!49 lt!30893 (_1!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15635 (= lt!30893 (insertStrictlySorted!51 (toList!726 lt!30215) (_1!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15635 (= (+!89 lt!30215 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))) lt!30892)))

(declare-fun b!70270 () Bool)

(declare-fun res!37590 () Bool)

(assert (=> b!70270 (=> (not res!37590) (not e!45981))))

(assert (=> b!70270 (= res!37590 (= (getValueByKey!130 (toList!726 lt!30892) (_1!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70271 () Bool)

(assert (=> b!70271 (= e!45981 (contains!721 (toList!726 lt!30892) (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15635 res!37591) b!70270))

(assert (= (and b!70270 res!37590) b!70271))

(declare-fun m!67001 () Bool)

(assert (=> d!15635 m!67001))

(declare-fun m!67003 () Bool)

(assert (=> d!15635 m!67003))

(declare-fun m!67005 () Bool)

(assert (=> d!15635 m!67005))

(declare-fun m!67007 () Bool)

(assert (=> d!15635 m!67007))

(declare-fun m!67009 () Bool)

(assert (=> b!70270 m!67009))

(declare-fun m!67011 () Bool)

(assert (=> b!70271 m!67011))

(assert (=> b!69054 d!15635))

(declare-fun d!15637 () Bool)

(assert (=> d!15637 (= (apply!73 (+!89 lt!30235 (tuple2!2119 lt!30220 (minValue!2074 newMap!16))) lt!30229) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30235 (tuple2!2119 lt!30220 (minValue!2074 newMap!16)))) lt!30229)))))

(declare-fun bs!3015 () Bool)

(assert (= bs!3015 d!15637))

(declare-fun m!67013 () Bool)

(assert (=> bs!3015 m!67013))

(assert (=> bs!3015 m!67013))

(declare-fun m!67015 () Bool)

(assert (=> bs!3015 m!67015))

(assert (=> b!69054 d!15637))

(declare-fun d!15639 () Bool)

(assert (=> d!15639 (= (apply!73 (+!89 lt!30218 (tuple2!2119 lt!30233 (minValue!2074 newMap!16))) lt!30226) (apply!73 lt!30218 lt!30226))))

(declare-fun lt!30894 () Unit!1913)

(assert (=> d!15639 (= lt!30894 (choose!397 lt!30218 lt!30233 (minValue!2074 newMap!16) lt!30226))))

(declare-fun e!45982 () Bool)

(assert (=> d!15639 e!45982))

(declare-fun res!37592 () Bool)

(assert (=> d!15639 (=> (not res!37592) (not e!45982))))

(assert (=> d!15639 (= res!37592 (contains!720 lt!30218 lt!30226))))

(assert (=> d!15639 (= (addApplyDifferent!49 lt!30218 lt!30233 (minValue!2074 newMap!16) lt!30226) lt!30894)))

(declare-fun b!70272 () Bool)

(assert (=> b!70272 (= e!45982 (not (= lt!30226 lt!30233)))))

(assert (= (and d!15639 res!37592) b!70272))

(declare-fun m!67017 () Bool)

(assert (=> d!15639 m!67017))

(assert (=> d!15639 m!64725))

(assert (=> d!15639 m!64739))

(declare-fun m!67019 () Bool)

(assert (=> d!15639 m!67019))

(assert (=> d!15639 m!64725))

(assert (=> d!15639 m!64709))

(assert (=> b!69054 d!15639))

(declare-fun d!15641 () Bool)

(declare-fun e!45983 () Bool)

(assert (=> d!15641 e!45983))

(declare-fun res!37594 () Bool)

(assert (=> d!15641 (=> (not res!37594) (not e!45983))))

(declare-fun lt!30897 () ListLongMap!1421)

(assert (=> d!15641 (= res!37594 (contains!720 lt!30897 (_1!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30898 () List!1494)

(assert (=> d!15641 (= lt!30897 (ListLongMap!1422 lt!30898))))

(declare-fun lt!30895 () Unit!1913)

(declare-fun lt!30896 () Unit!1913)

(assert (=> d!15641 (= lt!30895 lt!30896)))

(assert (=> d!15641 (= (getValueByKey!130 lt!30898 (_1!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15641 (= lt!30896 (lemmaContainsTupThenGetReturnValue!49 lt!30898 (_1!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15641 (= lt!30898 (insertStrictlySorted!51 (toList!726 lt!30230) (_1!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15641 (= (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))) lt!30897)))

(declare-fun b!70273 () Bool)

(declare-fun res!37593 () Bool)

(assert (=> b!70273 (=> (not res!37593) (not e!45983))))

(assert (=> b!70273 (= res!37593 (= (getValueByKey!130 (toList!726 lt!30897) (_1!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70274 () Bool)

(assert (=> b!70274 (= e!45983 (contains!721 (toList!726 lt!30897) (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15641 res!37594) b!70273))

(assert (= (and b!70273 res!37593) b!70274))

(declare-fun m!67021 () Bool)

(assert (=> d!15641 m!67021))

(declare-fun m!67023 () Bool)

(assert (=> d!15641 m!67023))

(declare-fun m!67025 () Bool)

(assert (=> d!15641 m!67025))

(declare-fun m!67027 () Bool)

(assert (=> d!15641 m!67027))

(declare-fun m!67029 () Bool)

(assert (=> b!70273 m!67029))

(declare-fun m!67031 () Bool)

(assert (=> b!70274 m!67031))

(assert (=> b!69054 d!15641))

(declare-fun d!15643 () Bool)

(declare-fun e!45984 () Bool)

(assert (=> d!15643 e!45984))

(declare-fun res!37595 () Bool)

(assert (=> d!15643 (=> res!37595 e!45984)))

(declare-fun lt!30901 () Bool)

(assert (=> d!15643 (= res!37595 (not lt!30901))))

(declare-fun lt!30902 () Bool)

(assert (=> d!15643 (= lt!30901 lt!30902)))

(declare-fun lt!30900 () Unit!1913)

(declare-fun e!45985 () Unit!1913)

(assert (=> d!15643 (= lt!30900 e!45985)))

(declare-fun c!10177 () Bool)

(assert (=> d!15643 (= c!10177 lt!30902)))

(assert (=> d!15643 (= lt!30902 (containsKey!134 (toList!726 (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))) lt!30222))))

(assert (=> d!15643 (= (contains!720 (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))) lt!30222) lt!30901)))

(declare-fun b!70275 () Bool)

(declare-fun lt!30899 () Unit!1913)

(assert (=> b!70275 (= e!45985 lt!30899)))

(assert (=> b!70275 (= lt!30899 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))) lt!30222))))

(assert (=> b!70275 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))) lt!30222))))

(declare-fun b!70276 () Bool)

(declare-fun Unit!1988 () Unit!1913)

(assert (=> b!70276 (= e!45985 Unit!1988)))

(declare-fun b!70277 () Bool)

(assert (=> b!70277 (= e!45984 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16)))) lt!30222)))))

(assert (= (and d!15643 c!10177) b!70275))

(assert (= (and d!15643 (not c!10177)) b!70276))

(assert (= (and d!15643 (not res!37595)) b!70277))

(declare-fun m!67033 () Bool)

(assert (=> d!15643 m!67033))

(declare-fun m!67035 () Bool)

(assert (=> b!70275 m!67035))

(declare-fun m!67037 () Bool)

(assert (=> b!70275 m!67037))

(assert (=> b!70275 m!67037))

(declare-fun m!67039 () Bool)

(assert (=> b!70275 m!67039))

(assert (=> b!70277 m!67037))

(assert (=> b!70277 m!67037))

(assert (=> b!70277 m!67039))

(assert (=> b!69054 d!15643))

(declare-fun d!15645 () Bool)

(assert (=> d!15645 (contains!720 (+!89 lt!30230 (tuple2!2119 lt!30216 (zeroValue!2074 newMap!16))) lt!30222)))

(declare-fun lt!30903 () Unit!1913)

(assert (=> d!15645 (= lt!30903 (choose!398 lt!30230 lt!30216 (zeroValue!2074 newMap!16) lt!30222))))

(assert (=> d!15645 (contains!720 lt!30230 lt!30222)))

(assert (=> d!15645 (= (addStillContains!49 lt!30230 lt!30216 (zeroValue!2074 newMap!16) lt!30222) lt!30903)))

(declare-fun bs!3016 () Bool)

(assert (= bs!3016 d!15645))

(assert (=> bs!3016 m!64733))

(assert (=> bs!3016 m!64733))

(assert (=> bs!3016 m!64735))

(declare-fun m!67041 () Bool)

(assert (=> bs!3016 m!67041))

(declare-fun m!67043 () Bool)

(assert (=> bs!3016 m!67043))

(assert (=> b!69054 d!15645))

(declare-fun d!15647 () Bool)

(declare-fun e!45986 () Bool)

(assert (=> d!15647 e!45986))

(declare-fun res!37597 () Bool)

(assert (=> d!15647 (=> (not res!37597) (not e!45986))))

(declare-fun lt!30906 () ListLongMap!1421)

(assert (=> d!15647 (= res!37597 (contains!720 lt!30906 (_1!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16)))))))

(declare-fun lt!30907 () List!1494)

(assert (=> d!15647 (= lt!30906 (ListLongMap!1422 lt!30907))))

(declare-fun lt!30904 () Unit!1913)

(declare-fun lt!30905 () Unit!1913)

(assert (=> d!15647 (= lt!30904 lt!30905)))

(assert (=> d!15647 (= (getValueByKey!130 lt!30907 (_1!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16)))))))

(assert (=> d!15647 (= lt!30905 (lemmaContainsTupThenGetReturnValue!49 lt!30907 (_1!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16)))))))

(assert (=> d!15647 (= lt!30907 (insertStrictlySorted!51 (toList!726 lt!30235) (_1!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16)))))))

(assert (=> d!15647 (= (+!89 lt!30235 (tuple2!2119 lt!30220 (minValue!2074 newMap!16))) lt!30906)))

(declare-fun b!70278 () Bool)

(declare-fun res!37596 () Bool)

(assert (=> b!70278 (=> (not res!37596) (not e!45986))))

(assert (=> b!70278 (= res!37596 (= (getValueByKey!130 (toList!726 lt!30906) (_1!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30220 (minValue!2074 newMap!16))))))))

(declare-fun b!70279 () Bool)

(assert (=> b!70279 (= e!45986 (contains!721 (toList!726 lt!30906) (tuple2!2119 lt!30220 (minValue!2074 newMap!16))))))

(assert (= (and d!15647 res!37597) b!70278))

(assert (= (and b!70278 res!37596) b!70279))

(declare-fun m!67045 () Bool)

(assert (=> d!15647 m!67045))

(declare-fun m!67047 () Bool)

(assert (=> d!15647 m!67047))

(declare-fun m!67049 () Bool)

(assert (=> d!15647 m!67049))

(declare-fun m!67051 () Bool)

(assert (=> d!15647 m!67051))

(declare-fun m!67053 () Bool)

(assert (=> b!70278 m!67053))

(declare-fun m!67055 () Bool)

(assert (=> b!70279 m!67055))

(assert (=> b!69054 d!15647))

(declare-fun d!15649 () Bool)

(assert (=> d!15649 (= (apply!73 (+!89 lt!30215 (tuple2!2119 lt!30231 (zeroValue!2074 newMap!16))) lt!30217) (apply!73 lt!30215 lt!30217))))

(declare-fun lt!30908 () Unit!1913)

(assert (=> d!15649 (= lt!30908 (choose!397 lt!30215 lt!30231 (zeroValue!2074 newMap!16) lt!30217))))

(declare-fun e!45987 () Bool)

(assert (=> d!15649 e!45987))

(declare-fun res!37598 () Bool)

(assert (=> d!15649 (=> (not res!37598) (not e!45987))))

(assert (=> d!15649 (= res!37598 (contains!720 lt!30215 lt!30217))))

(assert (=> d!15649 (= (addApplyDifferent!49 lt!30215 lt!30231 (zeroValue!2074 newMap!16) lt!30217) lt!30908)))

(declare-fun b!70280 () Bool)

(assert (=> b!70280 (= e!45987 (not (= lt!30217 lt!30231)))))

(assert (= (and d!15649 res!37598) b!70280))

(declare-fun m!67057 () Bool)

(assert (=> d!15649 m!67057))

(assert (=> d!15649 m!64731))

(assert (=> d!15649 m!64737))

(declare-fun m!67059 () Bool)

(assert (=> d!15649 m!67059))

(assert (=> d!15649 m!64731))

(assert (=> d!15649 m!64715))

(assert (=> b!69054 d!15649))

(declare-fun d!15651 () Bool)

(assert (=> d!15651 (= (apply!73 lt!30218 lt!30226) (get!1137 (getValueByKey!130 (toList!726 lt!30218) lt!30226)))))

(declare-fun bs!3017 () Bool)

(assert (= bs!3017 d!15651))

(declare-fun m!67061 () Bool)

(assert (=> bs!3017 m!67061))

(assert (=> bs!3017 m!67061))

(declare-fun m!67063 () Bool)

(assert (=> bs!3017 m!67063))

(assert (=> b!69054 d!15651))

(declare-fun d!15653 () Bool)

(assert (=> d!15653 (= (apply!73 (+!89 lt!30218 (tuple2!2119 lt!30233 (minValue!2074 newMap!16))) lt!30226) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30218 (tuple2!2119 lt!30233 (minValue!2074 newMap!16)))) lt!30226)))))

(declare-fun bs!3018 () Bool)

(assert (= bs!3018 d!15653))

(declare-fun m!67065 () Bool)

(assert (=> bs!3018 m!67065))

(assert (=> bs!3018 m!67065))

(declare-fun m!67067 () Bool)

(assert (=> bs!3018 m!67067))

(assert (=> b!69054 d!15653))

(declare-fun b!70281 () Bool)

(declare-fun e!45988 () Bool)

(declare-fun lt!30915 () ListLongMap!1421)

(assert (=> b!70281 (= e!45988 (= lt!30915 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16))))))

(declare-fun d!15655 () Bool)

(declare-fun e!45989 () Bool)

(assert (=> d!15655 e!45989))

(declare-fun res!37602 () Bool)

(assert (=> d!15655 (=> (not res!37602) (not e!45989))))

(assert (=> d!15655 (= res!37602 (not (contains!720 lt!30915 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!45992 () ListLongMap!1421)

(assert (=> d!15655 (= lt!30915 e!45992)))

(declare-fun c!10180 () Bool)

(assert (=> d!15655 (= c!10180 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15655 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15655 (= (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30915)))

(declare-fun b!70282 () Bool)

(declare-fun res!37600 () Bool)

(assert (=> b!70282 (=> (not res!37600) (not e!45989))))

(assert (=> b!70282 (= res!37600 (not (contains!720 lt!30915 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun call!6037 () ListLongMap!1421)

(declare-fun bm!6034 () Bool)

(assert (=> bm!6034 (= call!6037 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16)))))

(declare-fun b!70283 () Bool)

(assert (=> b!70283 (= e!45988 (isEmpty!315 lt!30915))))

(declare-fun b!70284 () Bool)

(declare-fun e!45994 () Bool)

(declare-fun e!45993 () Bool)

(assert (=> b!70284 (= e!45994 e!45993)))

(assert (=> b!70284 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun res!37601 () Bool)

(assert (=> b!70284 (= res!37601 (contains!720 lt!30915 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70284 (=> (not res!37601) (not e!45993))))

(declare-fun b!70285 () Bool)

(assert (=> b!70285 (= e!45992 (ListLongMap!1422 Nil!1491))))

(declare-fun b!70286 () Bool)

(assert (=> b!70286 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> b!70286 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029))))))

(assert (=> b!70286 (= e!45993 (= (apply!73 lt!30915 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70287 () Bool)

(declare-fun e!45991 () Bool)

(assert (=> b!70287 (= e!45991 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70287 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!70288 () Bool)

(declare-fun lt!30910 () Unit!1913)

(declare-fun lt!30913 () Unit!1913)

(assert (=> b!70288 (= lt!30910 lt!30913)))

(declare-fun lt!30914 () (_ BitVec 64))

(declare-fun lt!30909 () V!2923)

(declare-fun lt!30912 () (_ BitVec 64))

(declare-fun lt!30911 () ListLongMap!1421)

(assert (=> b!70288 (not (contains!720 (+!89 lt!30911 (tuple2!2119 lt!30914 lt!30909)) lt!30912))))

(assert (=> b!70288 (= lt!30913 (addStillNotContains!24 lt!30911 lt!30914 lt!30909 lt!30912))))

(assert (=> b!70288 (= lt!30912 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!70288 (= lt!30909 (get!1133 (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!70288 (= lt!30914 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70288 (= lt!30911 call!6037)))

(declare-fun e!45990 () ListLongMap!1421)

(assert (=> b!70288 (= e!45990 (+!89 call!6037 (tuple2!2119 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (get!1133 (select (arr!1841 (ite (or c!9749 c!9756) (_values!2151 newMap!16) lt!30029)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70289 () Bool)

(assert (=> b!70289 (= e!45990 call!6037)))

(declare-fun b!70290 () Bool)

(assert (=> b!70290 (= e!45992 e!45990)))

(declare-fun c!10181 () Bool)

(assert (=> b!70290 (= c!10181 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70291 () Bool)

(assert (=> b!70291 (= e!45994 e!45988)))

(declare-fun c!10178 () Bool)

(assert (=> b!70291 (= c!10178 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!70292 () Bool)

(assert (=> b!70292 (= e!45989 e!45994)))

(declare-fun c!10179 () Bool)

(assert (=> b!70292 (= c!10179 e!45991)))

(declare-fun res!37599 () Bool)

(assert (=> b!70292 (=> (not res!37599) (not e!45991))))

(assert (=> b!70292 (= res!37599 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!15655 c!10180) b!70285))

(assert (= (and d!15655 (not c!10180)) b!70290))

(assert (= (and b!70290 c!10181) b!70288))

(assert (= (and b!70290 (not c!10181)) b!70289))

(assert (= (or b!70288 b!70289) bm!6034))

(assert (= (and d!15655 res!37602) b!70282))

(assert (= (and b!70282 res!37600) b!70292))

(assert (= (and b!70292 res!37599) b!70287))

(assert (= (and b!70292 c!10179) b!70284))

(assert (= (and b!70292 (not c!10179)) b!70291))

(assert (= (and b!70284 res!37601) b!70286))

(assert (= (and b!70291 c!10178) b!70281))

(assert (= (and b!70291 (not c!10178)) b!70283))

(declare-fun b_lambda!3135 () Bool)

(assert (=> (not b_lambda!3135) (not b!70286)))

(assert (=> b!70286 t!5009))

(declare-fun b_and!4297 () Bool)

(assert (= b_and!4293 (and (=> t!5009 result!2623) b_and!4297)))

(assert (=> b!70286 t!5011))

(declare-fun b_and!4299 () Bool)

(assert (= b_and!4295 (and (=> t!5011 result!2625) b_and!4299)))

(declare-fun b_lambda!3137 () Bool)

(assert (=> (not b_lambda!3137) (not b!70288)))

(assert (=> b!70288 t!5009))

(declare-fun b_and!4301 () Bool)

(assert (= b_and!4297 (and (=> t!5009 result!2623) b_and!4301)))

(assert (=> b!70288 t!5011))

(declare-fun b_and!4303 () Bool)

(assert (= b_and!4299 (and (=> t!5011 result!2625) b_and!4303)))

(declare-fun m!67069 () Bool)

(assert (=> d!15655 m!67069))

(assert (=> d!15655 m!64569))

(assert (=> b!70284 m!64555))

(assert (=> b!70284 m!64555))

(declare-fun m!67071 () Bool)

(assert (=> b!70284 m!67071))

(declare-fun m!67073 () Bool)

(assert (=> b!70283 m!67073))

(declare-fun m!67075 () Bool)

(assert (=> b!70281 m!67075))

(declare-fun m!67077 () Bool)

(assert (=> b!70282 m!67077))

(assert (=> b!70286 m!64703))

(assert (=> b!70286 m!64703))

(assert (=> b!70286 m!64699))

(assert (=> b!70286 m!64705))

(assert (=> b!70286 m!64555))

(assert (=> b!70286 m!64555))

(declare-fun m!67079 () Bool)

(assert (=> b!70286 m!67079))

(assert (=> b!70286 m!64699))

(assert (=> bm!6034 m!67075))

(assert (=> b!70290 m!64555))

(assert (=> b!70290 m!64555))

(assert (=> b!70290 m!64607))

(assert (=> b!70287 m!64555))

(assert (=> b!70287 m!64555))

(assert (=> b!70287 m!64607))

(declare-fun m!67081 () Bool)

(assert (=> b!70288 m!67081))

(assert (=> b!70288 m!64703))

(assert (=> b!70288 m!64699))

(assert (=> b!70288 m!64705))

(declare-fun m!67083 () Bool)

(assert (=> b!70288 m!67083))

(assert (=> b!70288 m!64555))

(declare-fun m!67085 () Bool)

(assert (=> b!70288 m!67085))

(assert (=> b!70288 m!64699))

(assert (=> b!70288 m!67083))

(declare-fun m!67087 () Bool)

(assert (=> b!70288 m!67087))

(assert (=> b!70288 m!64703))

(assert (=> b!69054 d!15655))

(declare-fun d!15657 () Bool)

(declare-fun res!37603 () Bool)

(declare-fun e!45995 () Bool)

(assert (=> d!15657 (=> res!37603 e!45995)))

(assert (=> d!15657 (= res!37603 (and ((_ is Cons!1490) (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))) (= (_1!1069 (h!2075 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))))) lt!29833)))))

(assert (=> d!15657 (= (containsKey!134 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))) lt!29833) e!45995)))

(declare-fun b!70293 () Bool)

(declare-fun e!45996 () Bool)

(assert (=> b!70293 (= e!45995 e!45996)))

(declare-fun res!37604 () Bool)

(assert (=> b!70293 (=> (not res!37604) (not e!45996))))

(assert (=> b!70293 (= res!37604 (and (or (not ((_ is Cons!1490) (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))))) (bvsle (_1!1069 (h!2075 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))))) lt!29833)) ((_ is Cons!1490) (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))) (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830))))) lt!29833)))))

(declare-fun b!70294 () Bool)

(assert (=> b!70294 (= e!45996 (containsKey!134 (t!5001 (toList!726 (+!89 lt!29832 (tuple2!2119 lt!29835 lt!29830)))) lt!29833))))

(assert (= (and d!15657 (not res!37603)) b!70293))

(assert (= (and b!70293 res!37604) b!70294))

(declare-fun m!67089 () Bool)

(assert (=> b!70294 m!67089))

(assert (=> d!14821 d!15657))

(declare-fun d!15659 () Bool)

(declare-fun e!45997 () Bool)

(assert (=> d!15659 e!45997))

(declare-fun res!37605 () Bool)

(assert (=> d!15659 (=> res!37605 e!45997)))

(declare-fun lt!30918 () Bool)

(assert (=> d!15659 (= res!37605 (not lt!30918))))

(declare-fun lt!30919 () Bool)

(assert (=> d!15659 (= lt!30918 lt!30919)))

(declare-fun lt!30917 () Unit!1913)

(declare-fun e!45998 () Unit!1913)

(assert (=> d!15659 (= lt!30917 e!45998)))

(declare-fun c!10182 () Bool)

(assert (=> d!15659 (= c!10182 lt!30919)))

(assert (=> d!15659 (= lt!30919 (containsKey!134 (toList!726 lt!30206) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> d!15659 (= (contains!720 lt!30206 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30918)))

(declare-fun b!70295 () Bool)

(declare-fun lt!30916 () Unit!1913)

(assert (=> b!70295 (= e!45998 lt!30916)))

(assert (=> b!70295 (= lt!30916 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30206) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(assert (=> b!70295 (isDefined!84 (getValueByKey!130 (toList!726 lt!30206) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70296 () Bool)

(declare-fun Unit!1989 () Unit!1913)

(assert (=> b!70296 (= e!45998 Unit!1989)))

(declare-fun b!70297 () Bool)

(assert (=> b!70297 (= e!45997 (isDefined!84 (getValueByKey!130 (toList!726 lt!30206) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15659 c!10182) b!70295))

(assert (= (and d!15659 (not c!10182)) b!70296))

(assert (= (and d!15659 (not res!37605)) b!70297))

(declare-fun m!67091 () Bool)

(assert (=> d!15659 m!67091))

(declare-fun m!67093 () Bool)

(assert (=> b!70295 m!67093))

(assert (=> b!70295 m!64671))

(assert (=> b!70295 m!64671))

(declare-fun m!67095 () Bool)

(assert (=> b!70295 m!67095))

(assert (=> b!70297 m!64671))

(assert (=> b!70297 m!64671))

(assert (=> b!70297 m!67095))

(assert (=> d!14825 d!15659))

(declare-fun b!70301 () Bool)

(declare-fun e!46000 () Option!136)

(assert (=> b!70301 (= e!46000 None!134)))

(declare-fun d!15661 () Bool)

(declare-fun c!10183 () Bool)

(assert (=> d!15661 (= c!10183 (and ((_ is Cons!1490) lt!30207) (= (_1!1069 (h!2075 lt!30207)) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!45999 () Option!136)

(assert (=> d!15661 (= (getValueByKey!130 lt!30207 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!45999)))

(declare-fun b!70298 () Bool)

(assert (=> b!70298 (= e!45999 (Some!135 (_2!1069 (h!2075 lt!30207))))))

(declare-fun b!70300 () Bool)

(assert (=> b!70300 (= e!46000 (getValueByKey!130 (t!5001 lt!30207) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70299 () Bool)

(assert (=> b!70299 (= e!45999 e!46000)))

(declare-fun c!10184 () Bool)

(assert (=> b!70299 (= c!10184 (and ((_ is Cons!1490) lt!30207) (not (= (_1!1069 (h!2075 lt!30207)) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15661 c!10183) b!70298))

(assert (= (and d!15661 (not c!10183)) b!70299))

(assert (= (and b!70299 c!10184) b!70300))

(assert (= (and b!70299 (not c!10184)) b!70301))

(declare-fun m!67097 () Bool)

(assert (=> b!70300 m!67097))

(assert (=> d!14825 d!15661))

(declare-fun d!15663 () Bool)

(assert (=> d!15663 (= (getValueByKey!130 lt!30207 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun lt!30920 () Unit!1913)

(assert (=> d!15663 (= lt!30920 (choose!390 lt!30207 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun e!46001 () Bool)

(assert (=> d!15663 e!46001))

(declare-fun res!37606 () Bool)

(assert (=> d!15663 (=> (not res!37606) (not e!46001))))

(assert (=> d!15663 (= res!37606 (isStrictlySorted!285 lt!30207))))

(assert (=> d!15663 (= (lemmaContainsTupThenGetReturnValue!49 lt!30207 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30920)))

(declare-fun b!70302 () Bool)

(declare-fun res!37607 () Bool)

(assert (=> b!70302 (=> (not res!37607) (not e!46001))))

(assert (=> b!70302 (= res!37607 (containsKey!134 lt!30207 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70303 () Bool)

(assert (=> b!70303 (= e!46001 (contains!721 lt!30207 (tuple2!2119 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (= (and d!15663 res!37606) b!70302))

(assert (= (and b!70302 res!37607) b!70303))

(assert (=> d!15663 m!64665))

(declare-fun m!67099 () Bool)

(assert (=> d!15663 m!67099))

(declare-fun m!67101 () Bool)

(assert (=> d!15663 m!67101))

(declare-fun m!67103 () Bool)

(assert (=> b!70302 m!67103))

(declare-fun m!67105 () Bool)

(assert (=> b!70303 m!67105))

(assert (=> d!14825 d!15663))

(declare-fun bm!6035 () Bool)

(declare-fun call!6038 () List!1494)

(declare-fun call!6040 () List!1494)

(assert (=> bm!6035 (= call!6038 call!6040)))

(declare-fun b!70304 () Bool)

(declare-fun e!46005 () List!1494)

(declare-fun call!6039 () List!1494)

(assert (=> b!70304 (= e!46005 call!6039)))

(declare-fun b!70305 () Bool)

(declare-fun e!46004 () List!1494)

(assert (=> b!70305 (= e!46004 (insertStrictlySorted!51 (t!5001 (toList!726 call!5782)) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70307 () Bool)

(declare-fun res!37609 () Bool)

(declare-fun e!46003 () Bool)

(assert (=> b!70307 (=> (not res!37609) (not e!46003))))

(declare-fun lt!30921 () List!1494)

(assert (=> b!70307 (= res!37609 (containsKey!134 lt!30921 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70308 () Bool)

(declare-fun e!46002 () List!1494)

(declare-fun e!46006 () List!1494)

(assert (=> b!70308 (= e!46002 e!46006)))

(declare-fun c!10185 () Bool)

(assert (=> b!70308 (= c!10185 (and ((_ is Cons!1490) (toList!726 call!5782)) (= (_1!1069 (h!2075 (toList!726 call!5782))) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun c!10186 () Bool)

(declare-fun b!70309 () Bool)

(assert (=> b!70309 (= e!46004 (ite c!10185 (t!5001 (toList!726 call!5782)) (ite c!10186 (Cons!1490 (h!2075 (toList!726 call!5782)) (t!5001 (toList!726 call!5782))) Nil!1491)))))

(declare-fun b!70310 () Bool)

(assert (=> b!70310 (= e!46005 call!6039)))

(declare-fun b!70311 () Bool)

(assert (=> b!70311 (= e!46006 call!6038)))

(declare-fun b!70312 () Bool)

(assert (=> b!70312 (= e!46002 call!6040)))

(declare-fun bm!6036 () Bool)

(declare-fun c!10187 () Bool)

(assert (=> bm!6036 (= call!6040 ($colon$colon!63 e!46004 (ite c!10187 (h!2075 (toList!726 call!5782)) (tuple2!2119 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(declare-fun c!10188 () Bool)

(assert (=> bm!6036 (= c!10188 c!10187)))

(declare-fun b!70313 () Bool)

(assert (=> b!70313 (= e!46003 (contains!721 lt!30921 (tuple2!2119 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun bm!6037 () Bool)

(assert (=> bm!6037 (= call!6039 call!6038)))

(declare-fun b!70306 () Bool)

(assert (=> b!70306 (= c!10186 (and ((_ is Cons!1490) (toList!726 call!5782)) (bvsgt (_1!1069 (h!2075 (toList!726 call!5782))) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> b!70306 (= e!46006 e!46005)))

(declare-fun d!15665 () Bool)

(assert (=> d!15665 e!46003))

(declare-fun res!37608 () Bool)

(assert (=> d!15665 (=> (not res!37608) (not e!46003))))

(assert (=> d!15665 (= res!37608 (isStrictlySorted!285 lt!30921))))

(assert (=> d!15665 (= lt!30921 e!46002)))

(assert (=> d!15665 (= c!10187 (and ((_ is Cons!1490) (toList!726 call!5782)) (bvslt (_1!1069 (h!2075 (toList!726 call!5782))) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(assert (=> d!15665 (isStrictlySorted!285 (toList!726 call!5782))))

(assert (=> d!15665 (= (insertStrictlySorted!51 (toList!726 call!5782) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) lt!30921)))

(assert (= (and d!15665 c!10187) b!70312))

(assert (= (and d!15665 (not c!10187)) b!70308))

(assert (= (and b!70308 c!10185) b!70311))

(assert (= (and b!70308 (not c!10185)) b!70306))

(assert (= (and b!70306 c!10186) b!70310))

(assert (= (and b!70306 (not c!10186)) b!70304))

(assert (= (or b!70310 b!70304) bm!6037))

(assert (= (or b!70311 bm!6037) bm!6035))

(assert (= (or b!70312 bm!6035) bm!6036))

(assert (= (and bm!6036 c!10188) b!70305))

(assert (= (and bm!6036 (not c!10188)) b!70309))

(assert (= (and d!15665 res!37608) b!70307))

(assert (= (and b!70307 res!37609) b!70313))

(declare-fun m!67107 () Bool)

(assert (=> b!70305 m!67107))

(declare-fun m!67109 () Bool)

(assert (=> d!15665 m!67109))

(declare-fun m!67111 () Bool)

(assert (=> d!15665 m!67111))

(declare-fun m!67113 () Bool)

(assert (=> b!70307 m!67113))

(declare-fun m!67115 () Bool)

(assert (=> bm!6036 m!67115))

(declare-fun m!67117 () Bool)

(assert (=> b!70313 m!67117))

(assert (=> d!14825 d!15665))

(declare-fun d!15667 () Bool)

(assert (=> d!15667 (= (inRange!0 (ite c!9793 (index!3106 lt!30121) (ite c!9794 (index!3105 lt!30124) (index!3108 lt!30124))) (mask!6113 newMap!16)) (and (bvsge (ite c!9793 (index!3106 lt!30121) (ite c!9794 (index!3105 lt!30124) (index!3108 lt!30124))) #b00000000000000000000000000000000) (bvslt (ite c!9793 (index!3106 lt!30121) (ite c!9794 (index!3105 lt!30124) (index!3108 lt!30124))) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5874 d!15667))

(declare-fun lt!30922 () Bool)

(declare-fun d!15669 () Bool)

(assert (=> d!15669 (= lt!30922 (select (content!73 (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!46007 () Bool)

(assert (=> d!15669 (= lt!30922 e!46007)))

(declare-fun res!37611 () Bool)

(assert (=> d!15669 (=> (not res!37611) (not e!46007))))

(assert (=> d!15669 (= res!37611 ((_ is Cons!1491) (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)))))

(assert (=> d!15669 (= (contains!722 (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!30922)))

(declare-fun b!70314 () Bool)

(declare-fun e!46008 () Bool)

(assert (=> b!70314 (= e!46007 e!46008)))

(declare-fun res!37610 () Bool)

(assert (=> b!70314 (=> res!37610 e!46008)))

(assert (=> b!70314 (= res!37610 (= (h!2076 (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!70315 () Bool)

(assert (=> b!70315 (= e!46008 (contains!722 (t!5002 (ite c!9718 (Cons!1491 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!15669 res!37611) b!70314))

(assert (= (and b!70314 (not res!37610)) b!70315))

(declare-fun m!67119 () Bool)

(assert (=> d!15669 m!67119))

(assert (=> d!15669 m!64849))

(declare-fun m!67121 () Bool)

(assert (=> d!15669 m!67121))

(assert (=> b!70315 m!64849))

(declare-fun m!67123 () Bool)

(assert (=> b!70315 m!67123))

(assert (=> b!69113 d!15669))

(declare-fun d!15671 () Bool)

(declare-fun res!37612 () Bool)

(declare-fun e!46009 () Bool)

(assert (=> d!15671 (=> res!37612 e!46009)))

(assert (=> d!15671 (= res!37612 (and ((_ is Cons!1490) (toList!726 lt!29836)) (= (_1!1069 (h!2075 (toList!726 lt!29836))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15671 (= (containsKey!134 (toList!726 lt!29836) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!46009)))

(declare-fun b!70316 () Bool)

(declare-fun e!46010 () Bool)

(assert (=> b!70316 (= e!46009 e!46010)))

(declare-fun res!37613 () Bool)

(assert (=> b!70316 (=> (not res!37613) (not e!46010))))

(assert (=> b!70316 (= res!37613 (and (or (not ((_ is Cons!1490) (toList!726 lt!29836))) (bvsle (_1!1069 (h!2075 (toList!726 lt!29836))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1490) (toList!726 lt!29836)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29836))) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!70317 () Bool)

(assert (=> b!70317 (= e!46010 (containsKey!134 (t!5001 (toList!726 lt!29836)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15671 (not res!37612)) b!70316))

(assert (= (and b!70316 res!37613) b!70317))

(assert (=> b!70317 m!64159))

(declare-fun m!67125 () Bool)

(assert (=> b!70317 m!67125))

(assert (=> d!14811 d!15671))

(declare-fun d!15673 () Bool)

(declare-fun e!46011 () Bool)

(assert (=> d!15673 e!46011))

(declare-fun res!37615 () Bool)

(assert (=> d!15673 (=> (not res!37615) (not e!46011))))

(declare-fun lt!30925 () ListLongMap!1421)

(assert (=> d!15673 (= res!37615 (contains!720 lt!30925 (_1!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(declare-fun lt!30926 () List!1494)

(assert (=> d!15673 (= lt!30925 (ListLongMap!1422 lt!30926))))

(declare-fun lt!30923 () Unit!1913)

(declare-fun lt!30924 () Unit!1913)

(assert (=> d!15673 (= lt!30923 lt!30924)))

(assert (=> d!15673 (= (getValueByKey!130 lt!30926 (_1!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15673 (= lt!30924 (lemmaContainsTupThenGetReturnValue!49 lt!30926 (_1!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15673 (= lt!30926 (insertStrictlySorted!51 (toList!726 lt!30237) (_1!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15673 (= (+!89 lt!30237 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30925)))

(declare-fun b!70318 () Bool)

(declare-fun res!37614 () Bool)

(assert (=> b!70318 (=> (not res!37614) (not e!46011))))

(assert (=> b!70318 (= res!37614 (= (getValueByKey!130 (toList!726 lt!30925) (_1!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))))))))

(declare-fun b!70319 () Bool)

(assert (=> b!70319 (= e!46011 (contains!721 (toList!726 lt!30925) (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))))))

(assert (= (and d!15673 res!37615) b!70318))

(assert (= (and b!70318 res!37614) b!70319))

(declare-fun m!67127 () Bool)

(assert (=> d!15673 m!67127))

(declare-fun m!67129 () Bool)

(assert (=> d!15673 m!67129))

(declare-fun m!67131 () Bool)

(assert (=> d!15673 m!67131))

(declare-fun m!67133 () Bool)

(assert (=> d!15673 m!67133))

(declare-fun m!67135 () Bool)

(assert (=> b!70318 m!67135))

(declare-fun m!67137 () Bool)

(assert (=> b!70319 m!67137))

(assert (=> b!69075 d!15673))

(declare-fun d!15675 () Bool)

(declare-fun e!46012 () Bool)

(assert (=> d!15675 e!46012))

(declare-fun res!37617 () Bool)

(assert (=> d!15675 (=> (not res!37617) (not e!46012))))

(declare-fun lt!30929 () ListLongMap!1421)

(assert (=> d!15675 (= res!37617 (contains!720 lt!30929 (_1!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(declare-fun lt!30930 () List!1494)

(assert (=> d!15675 (= lt!30929 (ListLongMap!1422 lt!30930))))

(declare-fun lt!30927 () Unit!1913)

(declare-fun lt!30928 () Unit!1913)

(assert (=> d!15675 (= lt!30927 lt!30928)))

(assert (=> d!15675 (= (getValueByKey!130 lt!30930 (_1!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15675 (= lt!30928 (lemmaContainsTupThenGetReturnValue!49 lt!30930 (_1!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15675 (= lt!30930 (insertStrictlySorted!51 (toList!726 lt!30252) (_1!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15675 (= (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30929)))

(declare-fun b!70320 () Bool)

(declare-fun res!37616 () Bool)

(assert (=> b!70320 (=> (not res!37616) (not e!46012))))

(assert (=> b!70320 (= res!37616 (= (getValueByKey!130 (toList!726 lt!30929) (_1!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))))))))

(declare-fun b!70321 () Bool)

(assert (=> b!70321 (= e!46012 (contains!721 (toList!726 lt!30929) (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))))))

(assert (= (and d!15675 res!37617) b!70320))

(assert (= (and b!70320 res!37616) b!70321))

(declare-fun m!67139 () Bool)

(assert (=> d!15675 m!67139))

(declare-fun m!67141 () Bool)

(assert (=> d!15675 m!67141))

(declare-fun m!67143 () Bool)

(assert (=> d!15675 m!67143))

(declare-fun m!67145 () Bool)

(assert (=> d!15675 m!67145))

(declare-fun m!67147 () Bool)

(assert (=> b!70320 m!67147))

(declare-fun m!67149 () Bool)

(assert (=> b!70321 m!67149))

(assert (=> b!69075 d!15675))

(declare-fun d!15677 () Bool)

(assert (=> d!15677 (= (apply!73 (+!89 lt!30257 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30251) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30257 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) lt!30251)))))

(declare-fun bs!3019 () Bool)

(assert (= bs!3019 d!15677))

(declare-fun m!67151 () Bool)

(assert (=> bs!3019 m!67151))

(assert (=> bs!3019 m!67151))

(declare-fun m!67153 () Bool)

(assert (=> bs!3019 m!67153))

(assert (=> b!69075 d!15677))

(declare-fun d!15679 () Bool)

(assert (=> d!15679 (= (apply!73 lt!30240 lt!30248) (get!1137 (getValueByKey!130 (toList!726 lt!30240) lt!30248)))))

(declare-fun bs!3020 () Bool)

(assert (= bs!3020 d!15679))

(declare-fun m!67155 () Bool)

(assert (=> bs!3020 m!67155))

(assert (=> bs!3020 m!67155))

(declare-fun m!67157 () Bool)

(assert (=> bs!3020 m!67157))

(assert (=> b!69075 d!15679))

(declare-fun d!15681 () Bool)

(assert (=> d!15681 (= (apply!73 (+!89 lt!30240 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30248) (apply!73 lt!30240 lt!30248))))

(declare-fun lt!30931 () Unit!1913)

(assert (=> d!15681 (= lt!30931 (choose!397 lt!30240 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) lt!30248))))

(declare-fun e!46013 () Bool)

(assert (=> d!15681 e!46013))

(declare-fun res!37618 () Bool)

(assert (=> d!15681 (=> (not res!37618) (not e!46013))))

(assert (=> d!15681 (= res!37618 (contains!720 lt!30240 lt!30248))))

(assert (=> d!15681 (= (addApplyDifferent!49 lt!30240 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) lt!30248) lt!30931)))

(declare-fun b!70322 () Bool)

(assert (=> b!70322 (= e!46013 (not (= lt!30248 lt!30255)))))

(assert (= (and d!15681 res!37618) b!70322))

(declare-fun m!67159 () Bool)

(assert (=> d!15681 m!67159))

(assert (=> d!15681 m!64777))

(assert (=> d!15681 m!64791))

(declare-fun m!67161 () Bool)

(assert (=> d!15681 m!67161))

(assert (=> d!15681 m!64777))

(assert (=> d!15681 m!64761))

(assert (=> b!69075 d!15681))

(declare-fun d!15683 () Bool)

(assert (=> d!15683 (= (apply!73 lt!30257 lt!30251) (get!1137 (getValueByKey!130 (toList!726 lt!30257) lt!30251)))))

(declare-fun bs!3021 () Bool)

(assert (= bs!3021 d!15683))

(declare-fun m!67163 () Bool)

(assert (=> bs!3021 m!67163))

(assert (=> bs!3021 m!67163))

(declare-fun m!67165 () Bool)

(assert (=> bs!3021 m!67165))

(assert (=> b!69075 d!15683))

(declare-fun d!15685 () Bool)

(assert (=> d!15685 (= (apply!73 (+!89 lt!30240 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30248) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30240 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) lt!30248)))))

(declare-fun bs!3022 () Bool)

(assert (= bs!3022 d!15685))

(declare-fun m!67167 () Bool)

(assert (=> bs!3022 m!67167))

(assert (=> bs!3022 m!67167))

(declare-fun m!67169 () Bool)

(assert (=> bs!3022 m!67169))

(assert (=> b!69075 d!15685))

(declare-fun d!15687 () Bool)

(declare-fun e!46014 () Bool)

(assert (=> d!15687 e!46014))

(declare-fun res!37620 () Bool)

(assert (=> d!15687 (=> (not res!37620) (not e!46014))))

(declare-fun lt!30934 () ListLongMap!1421)

(assert (=> d!15687 (= res!37620 (contains!720 lt!30934 (_1!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(declare-fun lt!30935 () List!1494)

(assert (=> d!15687 (= lt!30934 (ListLongMap!1422 lt!30935))))

(declare-fun lt!30932 () Unit!1913)

(declare-fun lt!30933 () Unit!1913)

(assert (=> d!15687 (= lt!30932 lt!30933)))

(assert (=> d!15687 (= (getValueByKey!130 lt!30935 (_1!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!15687 (= lt!30933 (lemmaContainsTupThenGetReturnValue!49 lt!30935 (_1!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!15687 (= lt!30935 (insertStrictlySorted!51 (toList!726 lt!30257) (_1!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!15687 (= (+!89 lt!30257 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30934)))

(declare-fun b!70323 () Bool)

(declare-fun res!37619 () Bool)

(assert (=> b!70323 (=> (not res!37619) (not e!46014))))

(assert (=> b!70323 (= res!37619 (= (getValueByKey!130 (toList!726 lt!30934) (_1!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))))

(declare-fun b!70324 () Bool)

(assert (=> b!70324 (= e!46014 (contains!721 (toList!726 lt!30934) (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))

(assert (= (and d!15687 res!37620) b!70323))

(assert (= (and b!70323 res!37619) b!70324))

(declare-fun m!67171 () Bool)

(assert (=> d!15687 m!67171))

(declare-fun m!67173 () Bool)

(assert (=> d!15687 m!67173))

(declare-fun m!67175 () Bool)

(assert (=> d!15687 m!67175))

(declare-fun m!67177 () Bool)

(assert (=> d!15687 m!67177))

(declare-fun m!67179 () Bool)

(assert (=> b!70323 m!67179))

(declare-fun m!67181 () Bool)

(assert (=> b!70324 m!67181))

(assert (=> b!69075 d!15687))

(declare-fun d!15689 () Bool)

(assert (=> d!15689 (contains!720 (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30244)))

(declare-fun lt!30936 () Unit!1913)

(assert (=> d!15689 (= lt!30936 (choose!398 lt!30252 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) lt!30244))))

(assert (=> d!15689 (contains!720 lt!30252 lt!30244)))

(assert (=> d!15689 (= (addStillContains!49 lt!30252 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) lt!30244) lt!30936)))

(declare-fun bs!3023 () Bool)

(assert (= bs!3023 d!15689))

(assert (=> bs!3023 m!64785))

(assert (=> bs!3023 m!64785))

(assert (=> bs!3023 m!64787))

(declare-fun m!67183 () Bool)

(assert (=> bs!3023 m!67183))

(declare-fun m!67185 () Bool)

(assert (=> bs!3023 m!67185))

(assert (=> b!69075 d!15689))

(declare-fun d!15691 () Bool)

(declare-fun e!46015 () Bool)

(assert (=> d!15691 e!46015))

(declare-fun res!37622 () Bool)

(assert (=> d!15691 (=> (not res!37622) (not e!46015))))

(declare-fun lt!30939 () ListLongMap!1421)

(assert (=> d!15691 (= res!37622 (contains!720 lt!30939 (_1!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(declare-fun lt!30940 () List!1494)

(assert (=> d!15691 (= lt!30939 (ListLongMap!1422 lt!30940))))

(declare-fun lt!30937 () Unit!1913)

(declare-fun lt!30938 () Unit!1913)

(assert (=> d!15691 (= lt!30937 lt!30938)))

(assert (=> d!15691 (= (getValueByKey!130 lt!30940 (_1!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!15691 (= lt!30938 (lemmaContainsTupThenGetReturnValue!49 lt!30940 (_1!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!15691 (= lt!30940 (insertStrictlySorted!51 (toList!726 lt!30240) (_1!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) (_2!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))))))

(assert (=> d!15691 (= (+!89 lt!30240 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30939)))

(declare-fun b!70325 () Bool)

(declare-fun res!37621 () Bool)

(assert (=> b!70325 (=> (not res!37621) (not e!46015))))

(assert (=> b!70325 (= res!37621 (= (getValueByKey!130 (toList!726 lt!30939) (_1!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16))))) (Some!135 (_2!1069 (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))))

(declare-fun b!70326 () Bool)

(assert (=> b!70326 (= e!46015 (contains!721 (toList!726 lt!30939) (tuple2!2119 lt!30255 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))))))

(assert (= (and d!15691 res!37622) b!70325))

(assert (= (and b!70325 res!37621) b!70326))

(declare-fun m!67187 () Bool)

(assert (=> d!15691 m!67187))

(declare-fun m!67189 () Bool)

(assert (=> d!15691 m!67189))

(declare-fun m!67191 () Bool)

(assert (=> d!15691 m!67191))

(declare-fun m!67193 () Bool)

(assert (=> d!15691 m!67193))

(declare-fun m!67195 () Bool)

(assert (=> b!70325 m!67195))

(declare-fun m!67197 () Bool)

(assert (=> b!70326 m!67197))

(assert (=> b!69075 d!15691))

(declare-fun b!70327 () Bool)

(declare-fun e!46016 () Bool)

(declare-fun lt!30947 () ListLongMap!1421)

(assert (=> b!70327 (= e!46016 (= lt!30947 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16))))))

(declare-fun d!15693 () Bool)

(declare-fun e!46017 () Bool)

(assert (=> d!15693 e!46017))

(declare-fun res!37626 () Bool)

(assert (=> d!15693 (=> (not res!37626) (not e!46017))))

(assert (=> d!15693 (= res!37626 (not (contains!720 lt!30947 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!46020 () ListLongMap!1421)

(assert (=> d!15693 (= lt!30947 e!46020)))

(declare-fun c!10191 () Bool)

(assert (=> d!15693 (= c!10191 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15693 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15693 (= (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30947)))

(declare-fun b!70328 () Bool)

(declare-fun res!37624 () Bool)

(assert (=> b!70328 (=> (not res!37624) (not e!46017))))

(assert (=> b!70328 (= res!37624 (not (contains!720 lt!30947 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!6038 () Bool)

(declare-fun call!6041 () ListLongMap!1421)

(assert (=> bm!6038 (= call!6041 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (ite c!9749 (ite c!9751 lt!30016 lt!30028) (extraKeys!2035 newMap!16)) (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16)))))

(declare-fun b!70329 () Bool)

(assert (=> b!70329 (= e!46016 (isEmpty!315 lt!30947))))

(declare-fun b!70330 () Bool)

(declare-fun e!46022 () Bool)

(declare-fun e!46021 () Bool)

(assert (=> b!70330 (= e!46022 e!46021)))

(assert (=> b!70330 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun res!37625 () Bool)

(assert (=> b!70330 (= res!37625 (contains!720 lt!30947 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70330 (=> (not res!37625) (not e!46021))))

(declare-fun b!70331 () Bool)

(assert (=> b!70331 (= e!46020 (ListLongMap!1422 Nil!1491))))

(declare-fun b!70332 () Bool)

(assert (=> b!70332 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> b!70332 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_values!2151 newMap!16))))))

(assert (=> b!70332 (= e!46021 (= (apply!73 lt!30947 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70333 () Bool)

(declare-fun e!46019 () Bool)

(assert (=> b!70333 (= e!46019 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70333 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!70334 () Bool)

(declare-fun lt!30942 () Unit!1913)

(declare-fun lt!30945 () Unit!1913)

(assert (=> b!70334 (= lt!30942 lt!30945)))

(declare-fun lt!30946 () (_ BitVec 64))

(declare-fun lt!30944 () (_ BitVec 64))

(declare-fun lt!30943 () ListLongMap!1421)

(declare-fun lt!30941 () V!2923)

(assert (=> b!70334 (not (contains!720 (+!89 lt!30943 (tuple2!2119 lt!30946 lt!30941)) lt!30944))))

(assert (=> b!70334 (= lt!30945 (addStillNotContains!24 lt!30943 lt!30946 lt!30941 lt!30944))))

(assert (=> b!70334 (= lt!30944 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!70334 (= lt!30941 (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!70334 (= lt!30946 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70334 (= lt!30943 call!6041)))

(declare-fun e!46018 () ListLongMap!1421)

(assert (=> b!70334 (= e!46018 (+!89 call!6041 (tuple2!2119 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (get!1133 (select (arr!1841 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70335 () Bool)

(assert (=> b!70335 (= e!46018 call!6041)))

(declare-fun b!70336 () Bool)

(assert (=> b!70336 (= e!46020 e!46018)))

(declare-fun c!10192 () Bool)

(assert (=> b!70336 (= c!10192 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70337 () Bool)

(assert (=> b!70337 (= e!46022 e!46016)))

(declare-fun c!10189 () Bool)

(assert (=> b!70337 (= c!10189 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!70338 () Bool)

(assert (=> b!70338 (= e!46017 e!46022)))

(declare-fun c!10190 () Bool)

(assert (=> b!70338 (= c!10190 e!46019)))

(declare-fun res!37623 () Bool)

(assert (=> b!70338 (=> (not res!37623) (not e!46019))))

(assert (=> b!70338 (= res!37623 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!15693 c!10191) b!70331))

(assert (= (and d!15693 (not c!10191)) b!70336))

(assert (= (and b!70336 c!10192) b!70334))

(assert (= (and b!70336 (not c!10192)) b!70335))

(assert (= (or b!70334 b!70335) bm!6038))

(assert (= (and d!15693 res!37626) b!70328))

(assert (= (and b!70328 res!37624) b!70338))

(assert (= (and b!70338 res!37623) b!70333))

(assert (= (and b!70338 c!10190) b!70330))

(assert (= (and b!70338 (not c!10190)) b!70337))

(assert (= (and b!70330 res!37625) b!70332))

(assert (= (and b!70337 c!10189) b!70327))

(assert (= (and b!70337 (not c!10189)) b!70329))

(declare-fun b_lambda!3139 () Bool)

(assert (=> (not b_lambda!3139) (not b!70332)))

(assert (=> b!70332 t!5009))

(declare-fun b_and!4305 () Bool)

(assert (= b_and!4301 (and (=> t!5009 result!2623) b_and!4305)))

(assert (=> b!70332 t!5011))

(declare-fun b_and!4307 () Bool)

(assert (= b_and!4303 (and (=> t!5011 result!2625) b_and!4307)))

(declare-fun b_lambda!3141 () Bool)

(assert (=> (not b_lambda!3141) (not b!70334)))

(assert (=> b!70334 t!5009))

(declare-fun b_and!4309 () Bool)

(assert (= b_and!4305 (and (=> t!5009 result!2623) b_and!4309)))

(assert (=> b!70334 t!5011))

(declare-fun b_and!4311 () Bool)

(assert (= b_and!4307 (and (=> t!5011 result!2625) b_and!4311)))

(declare-fun m!67199 () Bool)

(assert (=> d!15693 m!67199))

(assert (=> d!15693 m!64569))

(assert (=> b!70330 m!64555))

(assert (=> b!70330 m!64555))

(declare-fun m!67201 () Bool)

(assert (=> b!70330 m!67201))

(declare-fun m!67203 () Bool)

(assert (=> b!70329 m!67203))

(declare-fun m!67205 () Bool)

(assert (=> b!70327 m!67205))

(declare-fun m!67207 () Bool)

(assert (=> b!70328 m!67207))

(assert (=> b!70332 m!64755))

(assert (=> b!70332 m!64755))

(assert (=> b!70332 m!64699))

(assert (=> b!70332 m!64757))

(assert (=> b!70332 m!64555))

(assert (=> b!70332 m!64555))

(declare-fun m!67209 () Bool)

(assert (=> b!70332 m!67209))

(assert (=> b!70332 m!64699))

(assert (=> bm!6038 m!67205))

(assert (=> b!70336 m!64555))

(assert (=> b!70336 m!64555))

(assert (=> b!70336 m!64607))

(assert (=> b!70333 m!64555))

(assert (=> b!70333 m!64555))

(assert (=> b!70333 m!64607))

(declare-fun m!67211 () Bool)

(assert (=> b!70334 m!67211))

(assert (=> b!70334 m!64755))

(assert (=> b!70334 m!64699))

(assert (=> b!70334 m!64757))

(declare-fun m!67213 () Bool)

(assert (=> b!70334 m!67213))

(assert (=> b!70334 m!64555))

(declare-fun m!67215 () Bool)

(assert (=> b!70334 m!67215))

(assert (=> b!70334 m!64699))

(assert (=> b!70334 m!67213))

(declare-fun m!67217 () Bool)

(assert (=> b!70334 m!67217))

(assert (=> b!70334 m!64755))

(assert (=> b!69075 d!15693))

(declare-fun d!15695 () Bool)

(assert (=> d!15695 (= (apply!73 (+!89 lt!30257 (tuple2!2119 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)))) lt!30251) (apply!73 lt!30257 lt!30251))))

(declare-fun lt!30948 () Unit!1913)

(assert (=> d!15695 (= lt!30948 (choose!397 lt!30257 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) lt!30251))))

(declare-fun e!46023 () Bool)

(assert (=> d!15695 e!46023))

(declare-fun res!37627 () Bool)

(assert (=> d!15695 (=> (not res!37627) (not e!46023))))

(assert (=> d!15695 (= res!37627 (contains!720 lt!30257 lt!30251))))

(assert (=> d!15695 (= (addApplyDifferent!49 lt!30257 lt!30242 (ite c!9749 (ite c!9751 (minValue!2074 newMap!16) lt!29778) (minValue!2074 newMap!16)) lt!30251) lt!30948)))

(declare-fun b!70339 () Bool)

(assert (=> b!70339 (= e!46023 (not (= lt!30251 lt!30242)))))

(assert (= (and d!15695 res!37627) b!70339))

(declare-fun m!67219 () Bool)

(assert (=> d!15695 m!67219))

(assert (=> d!15695 m!64773))

(assert (=> d!15695 m!64775))

(declare-fun m!67221 () Bool)

(assert (=> d!15695 m!67221))

(assert (=> d!15695 m!64773))

(assert (=> d!15695 m!64781))

(assert (=> b!69075 d!15695))

(declare-fun d!15697 () Bool)

(assert (=> d!15697 (= (apply!73 (+!89 lt!30237 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30239) (apply!73 lt!30237 lt!30239))))

(declare-fun lt!30949 () Unit!1913)

(assert (=> d!15697 (= lt!30949 (choose!397 lt!30237 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) lt!30239))))

(declare-fun e!46024 () Bool)

(assert (=> d!15697 e!46024))

(declare-fun res!37628 () Bool)

(assert (=> d!15697 (=> (not res!37628) (not e!46024))))

(assert (=> d!15697 (= res!37628 (contains!720 lt!30237 lt!30239))))

(assert (=> d!15697 (= (addApplyDifferent!49 lt!30237 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)) lt!30239) lt!30949)))

(declare-fun b!70340 () Bool)

(assert (=> b!70340 (= e!46024 (not (= lt!30239 lt!30253)))))

(assert (= (and d!15697 res!37628) b!70340))

(declare-fun m!67223 () Bool)

(assert (=> d!15697 m!67223))

(assert (=> d!15697 m!64783))

(assert (=> d!15697 m!64789))

(declare-fun m!67225 () Bool)

(assert (=> d!15697 m!67225))

(assert (=> d!15697 m!64783))

(assert (=> d!15697 m!64767))

(assert (=> b!69075 d!15697))

(declare-fun d!15699 () Bool)

(declare-fun e!46025 () Bool)

(assert (=> d!15699 e!46025))

(declare-fun res!37629 () Bool)

(assert (=> d!15699 (=> res!37629 e!46025)))

(declare-fun lt!30952 () Bool)

(assert (=> d!15699 (= res!37629 (not lt!30952))))

(declare-fun lt!30953 () Bool)

(assert (=> d!15699 (= lt!30952 lt!30953)))

(declare-fun lt!30951 () Unit!1913)

(declare-fun e!46026 () Unit!1913)

(assert (=> d!15699 (= lt!30951 e!46026)))

(declare-fun c!10193 () Bool)

(assert (=> d!15699 (= c!10193 lt!30953)))

(assert (=> d!15699 (= lt!30953 (containsKey!134 (toList!726 (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) lt!30244))))

(assert (=> d!15699 (= (contains!720 (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30244) lt!30952)))

(declare-fun b!70341 () Bool)

(declare-fun lt!30950 () Unit!1913)

(assert (=> b!70341 (= e!46026 lt!30950)))

(assert (=> b!70341 (= lt!30950 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) lt!30244))))

(assert (=> b!70341 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) lt!30244))))

(declare-fun b!70342 () Bool)

(declare-fun Unit!1990 () Unit!1913)

(assert (=> b!70342 (= e!46026 Unit!1990)))

(declare-fun b!70343 () Bool)

(assert (=> b!70343 (= e!46025 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30252 (tuple2!2119 lt!30238 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) lt!30244)))))

(assert (= (and d!15699 c!10193) b!70341))

(assert (= (and d!15699 (not c!10193)) b!70342))

(assert (= (and d!15699 (not res!37629)) b!70343))

(declare-fun m!67227 () Bool)

(assert (=> d!15699 m!67227))

(declare-fun m!67229 () Bool)

(assert (=> b!70341 m!67229))

(declare-fun m!67231 () Bool)

(assert (=> b!70341 m!67231))

(assert (=> b!70341 m!67231))

(declare-fun m!67233 () Bool)

(assert (=> b!70341 m!67233))

(assert (=> b!70343 m!67231))

(assert (=> b!70343 m!67231))

(assert (=> b!70343 m!67233))

(assert (=> b!69075 d!15699))

(declare-fun d!15701 () Bool)

(assert (=> d!15701 (= (apply!73 (+!89 lt!30237 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16)))) lt!30239) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30237 (tuple2!2119 lt!30253 (ite (and c!9749 c!9751) lt!29778 (zeroValue!2074 newMap!16))))) lt!30239)))))

(declare-fun bs!3024 () Bool)

(assert (= bs!3024 d!15701))

(declare-fun m!67235 () Bool)

(assert (=> bs!3024 m!67235))

(assert (=> bs!3024 m!67235))

(declare-fun m!67237 () Bool)

(assert (=> bs!3024 m!67237))

(assert (=> b!69075 d!15701))

(declare-fun d!15703 () Bool)

(assert (=> d!15703 (= (apply!73 lt!30237 lt!30239) (get!1137 (getValueByKey!130 (toList!726 lt!30237) lt!30239)))))

(declare-fun bs!3025 () Bool)

(assert (= bs!3025 d!15703))

(declare-fun m!67239 () Bool)

(assert (=> bs!3025 m!67239))

(assert (=> bs!3025 m!67239))

(declare-fun m!67241 () Bool)

(assert (=> bs!3025 m!67241))

(assert (=> b!69075 d!15703))

(declare-fun d!15705 () Bool)

(assert (=> d!15705 (= (apply!73 (+!89 lt!30396 (tuple2!2119 lt!30381 (minValue!2074 newMap!16))) lt!30390) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30396 (tuple2!2119 lt!30381 (minValue!2074 newMap!16)))) lt!30390)))))

(declare-fun bs!3026 () Bool)

(assert (= bs!3026 d!15705))

(declare-fun m!67243 () Bool)

(assert (=> bs!3026 m!67243))

(assert (=> bs!3026 m!67243))

(declare-fun m!67245 () Bool)

(assert (=> bs!3026 m!67245))

(assert (=> b!69256 d!15705))

(declare-fun d!15707 () Bool)

(assert (=> d!15707 (= (apply!73 (+!89 lt!30376 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))) lt!30378) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30376 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16)))) lt!30378)))))

(declare-fun bs!3027 () Bool)

(assert (= bs!3027 d!15707))

(declare-fun m!67247 () Bool)

(assert (=> bs!3027 m!67247))

(assert (=> bs!3027 m!67247))

(declare-fun m!67249 () Bool)

(assert (=> bs!3027 m!67249))

(assert (=> b!69256 d!15707))

(declare-fun d!15709 () Bool)

(declare-fun e!46027 () Bool)

(assert (=> d!15709 e!46027))

(declare-fun res!37631 () Bool)

(assert (=> d!15709 (=> (not res!37631) (not e!46027))))

(declare-fun lt!30956 () ListLongMap!1421)

(assert (=> d!15709 (= res!37631 (contains!720 lt!30956 (_1!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16)))))))

(declare-fun lt!30957 () List!1494)

(assert (=> d!15709 (= lt!30956 (ListLongMap!1422 lt!30957))))

(declare-fun lt!30954 () Unit!1913)

(declare-fun lt!30955 () Unit!1913)

(assert (=> d!15709 (= lt!30954 lt!30955)))

(assert (=> d!15709 (= (getValueByKey!130 lt!30957 (_1!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16)))))))

(assert (=> d!15709 (= lt!30955 (lemmaContainsTupThenGetReturnValue!49 lt!30957 (_1!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16)))))))

(assert (=> d!15709 (= lt!30957 (insertStrictlySorted!51 (toList!726 lt!30379) (_1!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16)))))))

(assert (=> d!15709 (= (+!89 lt!30379 (tuple2!2119 lt!30394 (minValue!2074 newMap!16))) lt!30956)))

(declare-fun b!70344 () Bool)

(declare-fun res!37630 () Bool)

(assert (=> b!70344 (=> (not res!37630) (not e!46027))))

(assert (=> b!70344 (= res!37630 (= (getValueByKey!130 (toList!726 lt!30956) (_1!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30394 (minValue!2074 newMap!16))))))))

(declare-fun b!70345 () Bool)

(assert (=> b!70345 (= e!46027 (contains!721 (toList!726 lt!30956) (tuple2!2119 lt!30394 (minValue!2074 newMap!16))))))

(assert (= (and d!15709 res!37631) b!70344))

(assert (= (and b!70344 res!37630) b!70345))

(declare-fun m!67251 () Bool)

(assert (=> d!15709 m!67251))

(declare-fun m!67253 () Bool)

(assert (=> d!15709 m!67253))

(declare-fun m!67255 () Bool)

(assert (=> d!15709 m!67255))

(declare-fun m!67257 () Bool)

(assert (=> d!15709 m!67257))

(declare-fun m!67259 () Bool)

(assert (=> b!70344 m!67259))

(declare-fun m!67261 () Bool)

(assert (=> b!70345 m!67261))

(assert (=> b!69256 d!15709))

(declare-fun d!15711 () Bool)

(declare-fun e!46028 () Bool)

(assert (=> d!15711 e!46028))

(declare-fun res!37632 () Bool)

(assert (=> d!15711 (=> res!37632 e!46028)))

(declare-fun lt!30960 () Bool)

(assert (=> d!15711 (= res!37632 (not lt!30960))))

(declare-fun lt!30961 () Bool)

(assert (=> d!15711 (= lt!30960 lt!30961)))

(declare-fun lt!30959 () Unit!1913)

(declare-fun e!46029 () Unit!1913)

(assert (=> d!15711 (= lt!30959 e!46029)))

(declare-fun c!10194 () Bool)

(assert (=> d!15711 (= c!10194 lt!30961)))

(assert (=> d!15711 (= lt!30961 (containsKey!134 (toList!726 (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))) lt!30383))))

(assert (=> d!15711 (= (contains!720 (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))) lt!30383) lt!30960)))

(declare-fun b!70346 () Bool)

(declare-fun lt!30958 () Unit!1913)

(assert (=> b!70346 (= e!46029 lt!30958)))

(assert (=> b!70346 (= lt!30958 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))) lt!30383))))

(assert (=> b!70346 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))) lt!30383))))

(declare-fun b!70347 () Bool)

(declare-fun Unit!1991 () Unit!1913)

(assert (=> b!70347 (= e!46029 Unit!1991)))

(declare-fun b!70348 () Bool)

(assert (=> b!70348 (= e!46028 (isDefined!84 (getValueByKey!130 (toList!726 (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))) lt!30383)))))

(assert (= (and d!15711 c!10194) b!70346))

(assert (= (and d!15711 (not c!10194)) b!70347))

(assert (= (and d!15711 (not res!37632)) b!70348))

(declare-fun m!67263 () Bool)

(assert (=> d!15711 m!67263))

(declare-fun m!67265 () Bool)

(assert (=> b!70346 m!67265))

(declare-fun m!67267 () Bool)

(assert (=> b!70346 m!67267))

(assert (=> b!70346 m!67267))

(declare-fun m!67269 () Bool)

(assert (=> b!70346 m!67269))

(assert (=> b!70348 m!67267))

(assert (=> b!70348 m!67267))

(assert (=> b!70348 m!67269))

(assert (=> b!69256 d!15711))

(declare-fun d!15713 () Bool)

(assert (=> d!15713 (= (apply!73 lt!30396 lt!30390) (get!1137 (getValueByKey!130 (toList!726 lt!30396) lt!30390)))))

(declare-fun bs!3028 () Bool)

(assert (= bs!3028 d!15713))

(declare-fun m!67271 () Bool)

(assert (=> bs!3028 m!67271))

(assert (=> bs!3028 m!67271))

(declare-fun m!67273 () Bool)

(assert (=> bs!3028 m!67273))

(assert (=> b!69256 d!15713))

(declare-fun d!15715 () Bool)

(declare-fun e!46030 () Bool)

(assert (=> d!15715 e!46030))

(declare-fun res!37634 () Bool)

(assert (=> d!15715 (=> (not res!37634) (not e!46030))))

(declare-fun lt!30964 () ListLongMap!1421)

(assert (=> d!15715 (= res!37634 (contains!720 lt!30964 (_1!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16)))))))

(declare-fun lt!30965 () List!1494)

(assert (=> d!15715 (= lt!30964 (ListLongMap!1422 lt!30965))))

(declare-fun lt!30962 () Unit!1913)

(declare-fun lt!30963 () Unit!1913)

(assert (=> d!15715 (= lt!30962 lt!30963)))

(assert (=> d!15715 (= (getValueByKey!130 lt!30965 (_1!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16)))))))

(assert (=> d!15715 (= lt!30963 (lemmaContainsTupThenGetReturnValue!49 lt!30965 (_1!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16)))))))

(assert (=> d!15715 (= lt!30965 (insertStrictlySorted!51 (toList!726 lt!30396) (_1!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16)))))))

(assert (=> d!15715 (= (+!89 lt!30396 (tuple2!2119 lt!30381 (minValue!2074 newMap!16))) lt!30964)))

(declare-fun b!70349 () Bool)

(declare-fun res!37633 () Bool)

(assert (=> b!70349 (=> (not res!37633) (not e!46030))))

(assert (=> b!70349 (= res!37633 (= (getValueByKey!130 (toList!726 lt!30964) (_1!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30381 (minValue!2074 newMap!16))))))))

(declare-fun b!70350 () Bool)

(assert (=> b!70350 (= e!46030 (contains!721 (toList!726 lt!30964) (tuple2!2119 lt!30381 (minValue!2074 newMap!16))))))

(assert (= (and d!15715 res!37634) b!70349))

(assert (= (and b!70349 res!37633) b!70350))

(declare-fun m!67275 () Bool)

(assert (=> d!15715 m!67275))

(declare-fun m!67277 () Bool)

(assert (=> d!15715 m!67277))

(declare-fun m!67279 () Bool)

(assert (=> d!15715 m!67279))

(declare-fun m!67281 () Bool)

(assert (=> d!15715 m!67281))

(declare-fun m!67283 () Bool)

(assert (=> b!70349 m!67283))

(declare-fun m!67285 () Bool)

(assert (=> b!70350 m!67285))

(assert (=> b!69256 d!15715))

(declare-fun d!15717 () Bool)

(declare-fun e!46031 () Bool)

(assert (=> d!15717 e!46031))

(declare-fun res!37636 () Bool)

(assert (=> d!15717 (=> (not res!37636) (not e!46031))))

(declare-fun lt!30968 () ListLongMap!1421)

(assert (=> d!15717 (= res!37636 (contains!720 lt!30968 (_1!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30969 () List!1494)

(assert (=> d!15717 (= lt!30968 (ListLongMap!1422 lt!30969))))

(declare-fun lt!30966 () Unit!1913)

(declare-fun lt!30967 () Unit!1913)

(assert (=> d!15717 (= lt!30966 lt!30967)))

(assert (=> d!15717 (= (getValueByKey!130 lt!30969 (_1!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15717 (= lt!30967 (lemmaContainsTupThenGetReturnValue!49 lt!30969 (_1!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15717 (= lt!30969 (insertStrictlySorted!51 (toList!726 lt!30376) (_1!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15717 (= (+!89 lt!30376 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))) lt!30968)))

(declare-fun b!70351 () Bool)

(declare-fun res!37635 () Bool)

(assert (=> b!70351 (=> (not res!37635) (not e!46031))))

(assert (=> b!70351 (= res!37635 (= (getValueByKey!130 (toList!726 lt!30968) (_1!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70352 () Bool)

(assert (=> b!70352 (= e!46031 (contains!721 (toList!726 lt!30968) (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15717 res!37636) b!70351))

(assert (= (and b!70351 res!37635) b!70352))

(declare-fun m!67287 () Bool)

(assert (=> d!15717 m!67287))

(declare-fun m!67289 () Bool)

(assert (=> d!15717 m!67289))

(declare-fun m!67291 () Bool)

(assert (=> d!15717 m!67291))

(declare-fun m!67293 () Bool)

(assert (=> d!15717 m!67293))

(declare-fun m!67295 () Bool)

(assert (=> b!70351 m!67295))

(declare-fun m!67297 () Bool)

(assert (=> b!70352 m!67297))

(assert (=> b!69256 d!15717))

(declare-fun d!15719 () Bool)

(assert (=> d!15719 (= (apply!73 (+!89 lt!30379 (tuple2!2119 lt!30394 (minValue!2074 newMap!16))) lt!30387) (get!1137 (getValueByKey!130 (toList!726 (+!89 lt!30379 (tuple2!2119 lt!30394 (minValue!2074 newMap!16)))) lt!30387)))))

(declare-fun bs!3029 () Bool)

(assert (= bs!3029 d!15719))

(declare-fun m!67299 () Bool)

(assert (=> bs!3029 m!67299))

(assert (=> bs!3029 m!67299))

(declare-fun m!67301 () Bool)

(assert (=> bs!3029 m!67301))

(assert (=> b!69256 d!15719))

(declare-fun d!15721 () Bool)

(assert (=> d!15721 (= (apply!73 (+!89 lt!30396 (tuple2!2119 lt!30381 (minValue!2074 newMap!16))) lt!30390) (apply!73 lt!30396 lt!30390))))

(declare-fun lt!30970 () Unit!1913)

(assert (=> d!15721 (= lt!30970 (choose!397 lt!30396 lt!30381 (minValue!2074 newMap!16) lt!30390))))

(declare-fun e!46032 () Bool)

(assert (=> d!15721 e!46032))

(declare-fun res!37637 () Bool)

(assert (=> d!15721 (=> (not res!37637) (not e!46032))))

(assert (=> d!15721 (= res!37637 (contains!720 lt!30396 lt!30390))))

(assert (=> d!15721 (= (addApplyDifferent!49 lt!30396 lt!30381 (minValue!2074 newMap!16) lt!30390) lt!30970)))

(declare-fun b!70353 () Bool)

(assert (=> b!70353 (= e!46032 (not (= lt!30390 lt!30381)))))

(assert (= (and d!15721 res!37637) b!70353))

(declare-fun m!67303 () Bool)

(assert (=> d!15721 m!67303))

(assert (=> d!15721 m!65183))

(assert (=> d!15721 m!65185))

(declare-fun m!67305 () Bool)

(assert (=> d!15721 m!67305))

(assert (=> d!15721 m!65183))

(assert (=> d!15721 m!65191))

(assert (=> b!69256 d!15721))

(declare-fun d!15723 () Bool)

(assert (=> d!15723 (= (apply!73 (+!89 lt!30379 (tuple2!2119 lt!30394 (minValue!2074 newMap!16))) lt!30387) (apply!73 lt!30379 lt!30387))))

(declare-fun lt!30971 () Unit!1913)

(assert (=> d!15723 (= lt!30971 (choose!397 lt!30379 lt!30394 (minValue!2074 newMap!16) lt!30387))))

(declare-fun e!46033 () Bool)

(assert (=> d!15723 e!46033))

(declare-fun res!37638 () Bool)

(assert (=> d!15723 (=> (not res!37638) (not e!46033))))

(assert (=> d!15723 (= res!37638 (contains!720 lt!30379 lt!30387))))

(assert (=> d!15723 (= (addApplyDifferent!49 lt!30379 lt!30394 (minValue!2074 newMap!16) lt!30387) lt!30971)))

(declare-fun b!70354 () Bool)

(assert (=> b!70354 (= e!46033 (not (= lt!30387 lt!30394)))))

(assert (= (and d!15723 res!37638) b!70354))

(declare-fun m!67307 () Bool)

(assert (=> d!15723 m!67307))

(assert (=> d!15723 m!65187))

(assert (=> d!15723 m!65201))

(declare-fun m!67309 () Bool)

(assert (=> d!15723 m!67309))

(assert (=> d!15723 m!65187))

(assert (=> d!15723 m!65171))

(assert (=> b!69256 d!15723))

(declare-fun d!15725 () Bool)

(assert (=> d!15725 (= (apply!73 (+!89 lt!30376 (tuple2!2119 lt!30392 (zeroValue!2074 newMap!16))) lt!30378) (apply!73 lt!30376 lt!30378))))

(declare-fun lt!30972 () Unit!1913)

(assert (=> d!15725 (= lt!30972 (choose!397 lt!30376 lt!30392 (zeroValue!2074 newMap!16) lt!30378))))

(declare-fun e!46034 () Bool)

(assert (=> d!15725 e!46034))

(declare-fun res!37639 () Bool)

(assert (=> d!15725 (=> (not res!37639) (not e!46034))))

(assert (=> d!15725 (= res!37639 (contains!720 lt!30376 lt!30378))))

(assert (=> d!15725 (= (addApplyDifferent!49 lt!30376 lt!30392 (zeroValue!2074 newMap!16) lt!30378) lt!30972)))

(declare-fun b!70355 () Bool)

(assert (=> b!70355 (= e!46034 (not (= lt!30378 lt!30392)))))

(assert (= (and d!15725 res!37639) b!70355))

(declare-fun m!67311 () Bool)

(assert (=> d!15725 m!67311))

(assert (=> d!15725 m!65193))

(assert (=> d!15725 m!65199))

(declare-fun m!67313 () Bool)

(assert (=> d!15725 m!67313))

(assert (=> d!15725 m!65193))

(assert (=> d!15725 m!65177))

(assert (=> b!69256 d!15725))

(declare-fun b!70356 () Bool)

(declare-fun e!46035 () Bool)

(declare-fun lt!30979 () ListLongMap!1421)

(assert (=> b!70356 (= e!46035 (= lt!30979 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16))))))

(declare-fun d!15727 () Bool)

(declare-fun e!46036 () Bool)

(assert (=> d!15727 e!46036))

(declare-fun res!37643 () Bool)

(assert (=> d!15727 (=> (not res!37643) (not e!46036))))

(assert (=> d!15727 (= res!37643 (not (contains!720 lt!30979 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!46039 () ListLongMap!1421)

(assert (=> d!15727 (= lt!30979 e!46039)))

(declare-fun c!10197 () Bool)

(assert (=> d!15727 (= c!10197 (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15727 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15727 (= (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30979)))

(declare-fun b!70357 () Bool)

(declare-fun res!37641 () Bool)

(assert (=> b!70357 (=> (not res!37641) (not e!46036))))

(assert (=> b!70357 (= res!37641 (not (contains!720 lt!30979 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!6039 () Bool)

(declare-fun call!6042 () ListLongMap!1421)

(assert (=> bm!6039 (= call!6042 (getCurrentListMapNoExtraKeys!53 (_keys!3812 newMap!16) (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16)))))

(declare-fun b!70358 () Bool)

(assert (=> b!70358 (= e!46035 (isEmpty!315 lt!30979))))

(declare-fun b!70359 () Bool)

(declare-fun e!46041 () Bool)

(declare-fun e!46040 () Bool)

(assert (=> b!70359 (= e!46041 e!46040)))

(assert (=> b!70359 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun res!37642 () Bool)

(assert (=> b!70359 (= res!37642 (contains!720 lt!30979 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70359 (=> (not res!37642) (not e!46040))))

(declare-fun b!70360 () Bool)

(assert (=> b!70360 (= e!46039 (ListLongMap!1422 Nil!1491))))

(declare-fun b!70361 () Bool)

(assert (=> b!70361 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (=> b!70361 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16))))))))

(assert (=> b!70361 (= e!46040 (= (apply!73 lt!30979 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70362 () Bool)

(declare-fun e!46038 () Bool)

(assert (=> b!70362 (= e!46038 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70362 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!70363 () Bool)

(declare-fun lt!30974 () Unit!1913)

(declare-fun lt!30977 () Unit!1913)

(assert (=> b!70363 (= lt!30974 lt!30977)))

(declare-fun lt!30975 () ListLongMap!1421)

(declare-fun lt!30976 () (_ BitVec 64))

(declare-fun lt!30978 () (_ BitVec 64))

(declare-fun lt!30973 () V!2923)

(assert (=> b!70363 (not (contains!720 (+!89 lt!30975 (tuple2!2119 lt!30978 lt!30973)) lt!30976))))

(assert (=> b!70363 (= lt!30977 (addStillNotContains!24 lt!30975 lt!30978 lt!30973 lt!30976))))

(assert (=> b!70363 (= lt!30976 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!70363 (= lt!30973 (get!1133 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!70363 (= lt!30978 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70363 (= lt!30975 call!6042)))

(declare-fun e!46037 () ListLongMap!1421)

(assert (=> b!70363 (= e!46037 (+!89 call!6042 (tuple2!2119 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (get!1133 (select (arr!1841 (array!3857 (store (arr!1841 (_values!2151 newMap!16)) (index!3106 lt!30007) (ValueCellFull!885 lt!29778)) (size!2077 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70364 () Bool)

(assert (=> b!70364 (= e!46037 call!6042)))

(declare-fun b!70365 () Bool)

(assert (=> b!70365 (= e!46039 e!46037)))

(declare-fun c!10198 () Bool)

(assert (=> b!70365 (= c!10198 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70366 () Bool)

(assert (=> b!70366 (= e!46041 e!46035)))

(declare-fun c!10195 () Bool)

(assert (=> b!70366 (= c!10195 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(declare-fun b!70367 () Bool)

(assert (=> b!70367 (= e!46036 e!46041)))

(declare-fun c!10196 () Bool)

(assert (=> b!70367 (= c!10196 e!46038)))

(declare-fun res!37640 () Bool)

(assert (=> b!70367 (=> (not res!37640) (not e!46038))))

(assert (=> b!70367 (= res!37640 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 newMap!16))))))

(assert (= (and d!15727 c!10197) b!70360))

(assert (= (and d!15727 (not c!10197)) b!70365))

(assert (= (and b!70365 c!10198) b!70363))

(assert (= (and b!70365 (not c!10198)) b!70364))

(assert (= (or b!70363 b!70364) bm!6039))

(assert (= (and d!15727 res!37643) b!70357))

(assert (= (and b!70357 res!37641) b!70367))

(assert (= (and b!70367 res!37640) b!70362))

(assert (= (and b!70367 c!10196) b!70359))

(assert (= (and b!70367 (not c!10196)) b!70366))

(assert (= (and b!70359 res!37642) b!70361))

(assert (= (and b!70366 c!10195) b!70356))

(assert (= (and b!70366 (not c!10195)) b!70358))

(declare-fun b_lambda!3143 () Bool)

(assert (=> (not b_lambda!3143) (not b!70361)))

(assert (=> b!70361 t!5009))

(declare-fun b_and!4313 () Bool)

(assert (= b_and!4309 (and (=> t!5009 result!2623) b_and!4313)))

(assert (=> b!70361 t!5011))

(declare-fun b_and!4315 () Bool)

(assert (= b_and!4311 (and (=> t!5011 result!2625) b_and!4315)))

(declare-fun b_lambda!3145 () Bool)

(assert (=> (not b_lambda!3145) (not b!70363)))

(assert (=> b!70363 t!5009))

(declare-fun b_and!4317 () Bool)

(assert (= b_and!4313 (and (=> t!5009 result!2623) b_and!4317)))

(assert (=> b!70363 t!5011))

(declare-fun b_and!4319 () Bool)

(assert (= b_and!4315 (and (=> t!5011 result!2625) b_and!4319)))

(declare-fun m!67315 () Bool)

(assert (=> d!15727 m!67315))

(assert (=> d!15727 m!64569))

(assert (=> b!70359 m!64555))

(assert (=> b!70359 m!64555))

(declare-fun m!67317 () Bool)

(assert (=> b!70359 m!67317))

(declare-fun m!67319 () Bool)

(assert (=> b!70358 m!67319))

(declare-fun m!67321 () Bool)

(assert (=> b!70356 m!67321))

(declare-fun m!67323 () Bool)

(assert (=> b!70357 m!67323))

(assert (=> b!70361 m!65165))

(assert (=> b!70361 m!65165))

(assert (=> b!70361 m!64699))

(assert (=> b!70361 m!65167))

(assert (=> b!70361 m!64555))

(assert (=> b!70361 m!64555))

(declare-fun m!67325 () Bool)

(assert (=> b!70361 m!67325))

(assert (=> b!70361 m!64699))

(assert (=> bm!6039 m!67321))

(assert (=> b!70365 m!64555))

(assert (=> b!70365 m!64555))

(assert (=> b!70365 m!64607))

(assert (=> b!70362 m!64555))

(assert (=> b!70362 m!64555))

(assert (=> b!70362 m!64607))

(declare-fun m!67327 () Bool)

(assert (=> b!70363 m!67327))

(assert (=> b!70363 m!65165))

(assert (=> b!70363 m!64699))

(assert (=> b!70363 m!65167))

(declare-fun m!67329 () Bool)

(assert (=> b!70363 m!67329))

(assert (=> b!70363 m!64555))

(declare-fun m!67331 () Bool)

(assert (=> b!70363 m!67331))

(assert (=> b!70363 m!64699))

(assert (=> b!70363 m!67329))

(declare-fun m!67333 () Bool)

(assert (=> b!70363 m!67333))

(assert (=> b!70363 m!65165))

(assert (=> b!69256 d!15727))

(declare-fun d!15729 () Bool)

(assert (=> d!15729 (= (apply!73 lt!30376 lt!30378) (get!1137 (getValueByKey!130 (toList!726 lt!30376) lt!30378)))))

(declare-fun bs!3030 () Bool)

(assert (= bs!3030 d!15729))

(declare-fun m!67335 () Bool)

(assert (=> bs!3030 m!67335))

(assert (=> bs!3030 m!67335))

(declare-fun m!67337 () Bool)

(assert (=> bs!3030 m!67337))

(assert (=> b!69256 d!15729))

(declare-fun d!15731 () Bool)

(assert (=> d!15731 (contains!720 (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))) lt!30383)))

(declare-fun lt!30980 () Unit!1913)

(assert (=> d!15731 (= lt!30980 (choose!398 lt!30391 lt!30377 (zeroValue!2074 newMap!16) lt!30383))))

(assert (=> d!15731 (contains!720 lt!30391 lt!30383)))

(assert (=> d!15731 (= (addStillContains!49 lt!30391 lt!30377 (zeroValue!2074 newMap!16) lt!30383) lt!30980)))

(declare-fun bs!3031 () Bool)

(assert (= bs!3031 d!15731))

(assert (=> bs!3031 m!65195))

(assert (=> bs!3031 m!65195))

(assert (=> bs!3031 m!65197))

(declare-fun m!67339 () Bool)

(assert (=> bs!3031 m!67339))

(declare-fun m!67341 () Bool)

(assert (=> bs!3031 m!67341))

(assert (=> b!69256 d!15731))

(declare-fun d!15733 () Bool)

(assert (=> d!15733 (= (apply!73 lt!30379 lt!30387) (get!1137 (getValueByKey!130 (toList!726 lt!30379) lt!30387)))))

(declare-fun bs!3032 () Bool)

(assert (= bs!3032 d!15733))

(declare-fun m!67343 () Bool)

(assert (=> bs!3032 m!67343))

(assert (=> bs!3032 m!67343))

(declare-fun m!67345 () Bool)

(assert (=> bs!3032 m!67345))

(assert (=> b!69256 d!15733))

(declare-fun d!15735 () Bool)

(declare-fun e!46042 () Bool)

(assert (=> d!15735 e!46042))

(declare-fun res!37645 () Bool)

(assert (=> d!15735 (=> (not res!37645) (not e!46042))))

(declare-fun lt!30983 () ListLongMap!1421)

(assert (=> d!15735 (= res!37645 (contains!720 lt!30983 (_1!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30984 () List!1494)

(assert (=> d!15735 (= lt!30983 (ListLongMap!1422 lt!30984))))

(declare-fun lt!30981 () Unit!1913)

(declare-fun lt!30982 () Unit!1913)

(assert (=> d!15735 (= lt!30981 lt!30982)))

(assert (=> d!15735 (= (getValueByKey!130 lt!30984 (_1!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15735 (= lt!30982 (lemmaContainsTupThenGetReturnValue!49 lt!30984 (_1!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15735 (= lt!30984 (insertStrictlySorted!51 (toList!726 lt!30391) (_1!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))) (_2!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15735 (= (+!89 lt!30391 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))) lt!30983)))

(declare-fun b!70368 () Bool)

(declare-fun res!37644 () Bool)

(assert (=> b!70368 (=> (not res!37644) (not e!46042))))

(assert (=> b!70368 (= res!37644 (= (getValueByKey!130 (toList!726 lt!30983) (_1!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70369 () Bool)

(assert (=> b!70369 (= e!46042 (contains!721 (toList!726 lt!30983) (tuple2!2119 lt!30377 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15735 res!37645) b!70368))

(assert (= (and b!70368 res!37644) b!70369))

(declare-fun m!67347 () Bool)

(assert (=> d!15735 m!67347))

(declare-fun m!67349 () Bool)

(assert (=> d!15735 m!67349))

(declare-fun m!67351 () Bool)

(assert (=> d!15735 m!67351))

(declare-fun m!67353 () Bool)

(assert (=> d!15735 m!67353))

(declare-fun m!67355 () Bool)

(assert (=> b!70368 m!67355))

(declare-fun m!67357 () Bool)

(assert (=> b!70369 m!67357))

(assert (=> b!69256 d!15735))

(assert (=> bm!5892 d!15655))

(declare-fun b!70388 () Bool)

(declare-fun e!46055 () SeekEntryResult!244)

(assert (=> b!70388 (= e!46055 (Intermediate!244 false (toIndex!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (mask!6113 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!70389 () Bool)

(declare-fun e!46057 () Bool)

(declare-fun e!46054 () Bool)

(assert (=> b!70389 (= e!46057 e!46054)))

(declare-fun res!37652 () Bool)

(declare-fun lt!30989 () SeekEntryResult!244)

(assert (=> b!70389 (= res!37652 (and ((_ is Intermediate!244) lt!30989) (not (undefined!1056 lt!30989)) (bvslt (x!10858 lt!30989) #b01111111111111111111111111111110) (bvsge (x!10858 lt!30989) #b00000000000000000000000000000000) (bvsge (x!10858 lt!30989) #b00000000000000000000000000000000)))))

(assert (=> b!70389 (=> (not res!37652) (not e!46054))))

(declare-fun b!70390 () Bool)

(declare-fun e!46056 () SeekEntryResult!244)

(assert (=> b!70390 (= e!46056 e!46055)))

(declare-fun c!10205 () Bool)

(declare-fun lt!30990 () (_ BitVec 64))

(assert (=> b!70390 (= c!10205 (or (= lt!30990 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)) (= (bvadd lt!30990 lt!30990) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70391 () Bool)

(assert (=> b!70391 (= e!46056 (Intermediate!244 true (toIndex!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (mask!6113 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!15737 () Bool)

(assert (=> d!15737 e!46057))

(declare-fun c!10206 () Bool)

(assert (=> d!15737 (= c!10206 (and ((_ is Intermediate!244) lt!30989) (undefined!1056 lt!30989)))))

(assert (=> d!15737 (= lt!30989 e!46056)))

(declare-fun c!10207 () Bool)

(assert (=> d!15737 (= c!10207 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!15737 (= lt!30990 (select (arr!1840 (_keys!3812 newMap!16)) (toIndex!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (mask!6113 newMap!16))))))

(assert (=> d!15737 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15737 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (mask!6113 newMap!16)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30989)))

(declare-fun b!70392 () Bool)

(assert (=> b!70392 (= e!46057 (bvsge (x!10858 lt!30989) #b01111111111111111111111111111110))))

(declare-fun b!70393 () Bool)

(assert (=> b!70393 (and (bvsge (index!3107 lt!30989) #b00000000000000000000000000000000) (bvslt (index!3107 lt!30989) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun res!37654 () Bool)

(assert (=> b!70393 (= res!37654 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3107 lt!30989)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355)))))

(declare-fun e!46053 () Bool)

(assert (=> b!70393 (=> res!37654 e!46053)))

(assert (=> b!70393 (= e!46054 e!46053)))

(declare-fun b!70394 () Bool)

(assert (=> b!70394 (= e!46055 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (mask!6113 newMap!16)) #b00000000000000000000000000000000 (mask!6113 newMap!16)) (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!70395 () Bool)

(assert (=> b!70395 (and (bvsge (index!3107 lt!30989) #b00000000000000000000000000000000) (bvslt (index!3107 lt!30989) (size!2076 (_keys!3812 newMap!16))))))

(declare-fun res!37653 () Bool)

(assert (=> b!70395 (= res!37653 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3107 lt!30989)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70395 (=> res!37653 e!46053)))

(declare-fun b!70396 () Bool)

(assert (=> b!70396 (and (bvsge (index!3107 lt!30989) #b00000000000000000000000000000000) (bvslt (index!3107 lt!30989) (size!2076 (_keys!3812 newMap!16))))))

(assert (=> b!70396 (= e!46053 (= (select (arr!1840 (_keys!3812 newMap!16)) (index!3107 lt!30989)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15737 c!10207) b!70391))

(assert (= (and d!15737 (not c!10207)) b!70390))

(assert (= (and b!70390 c!10205) b!70388))

(assert (= (and b!70390 (not c!10205)) b!70394))

(assert (= (and d!15737 c!10206) b!70392))

(assert (= (and d!15737 (not c!10206)) b!70389))

(assert (= (and b!70389 res!37652) b!70393))

(assert (= (and b!70393 (not res!37654)) b!70395))

(assert (= (and b!70395 (not res!37653)) b!70396))

(assert (=> d!15737 m!64579))

(declare-fun m!67359 () Bool)

(assert (=> d!15737 m!67359))

(assert (=> d!15737 m!64569))

(declare-fun m!67361 () Bool)

(assert (=> b!70396 m!67361))

(assert (=> b!70395 m!67361))

(assert (=> b!70394 m!64579))

(declare-fun m!67363 () Bool)

(assert (=> b!70394 m!67363))

(assert (=> b!70394 m!67363))

(assert (=> b!70394 m!64043))

(declare-fun m!67365 () Bool)

(assert (=> b!70394 m!67365))

(assert (=> b!70393 m!67361))

(assert (=> d!14795 d!15737))

(declare-fun d!15739 () Bool)

(declare-fun lt!30996 () (_ BitVec 32))

(declare-fun lt!30995 () (_ BitVec 32))

(assert (=> d!15739 (= lt!30996 (bvmul (bvxor lt!30995 (bvlshr lt!30995 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!15739 (= lt!30995 ((_ extract 31 0) (bvand (bvxor (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvlshr (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!15739 (and (bvsge (mask!6113 newMap!16) #b00000000000000000000000000000000) (let ((res!37655 (let ((h!2078 ((_ extract 31 0) (bvand (bvxor (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (bvlshr (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10961 (bvmul (bvxor h!2078 (bvlshr h!2078 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10961 (bvlshr x!10961 #b00000000000000000000000000001101)) (mask!6113 newMap!16)))))) (and (bvslt res!37655 (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001)) (bvsge res!37655 #b00000000000000000000000000000000))))))

(assert (=> d!15739 (= (toIndex!0 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) (mask!6113 newMap!16)) (bvand (bvxor lt!30996 (bvlshr lt!30996 #b00000000000000000000000000001101)) (mask!6113 newMap!16)))))

(assert (=> d!14795 d!15739))

(assert (=> d!14795 d!14981))

(declare-fun d!15741 () Bool)

(assert (=> d!15741 (= (get!1137 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2499 (getValueByKey!130 (toList!726 lt!29926) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14879 d!15741))

(assert (=> d!14879 d!15061))

(assert (=> b!69088 d!15059))

(assert (=> b!69088 d!15061))

(declare-fun b!70400 () Bool)

(declare-fun e!46059 () Option!136)

(assert (=> b!70400 (= e!46059 None!134)))

(declare-fun d!15743 () Bool)

(declare-fun c!10208 () Bool)

(assert (=> d!15743 (= c!10208 (and ((_ is Cons!1490) (toList!726 lt!30206)) (= (_1!1069 (h!2075 (toList!726 lt!30206))) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992))))))))))

(declare-fun e!46058 () Option!136)

(assert (=> d!15743 (= (getValueByKey!130 (toList!726 lt!30206) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))) e!46058)))

(declare-fun b!70397 () Bool)

(assert (=> b!70397 (= e!46058 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30206)))))))

(declare-fun b!70399 () Bool)

(assert (=> b!70399 (= e!46059 (getValueByKey!130 (t!5001 (toList!726 lt!30206)) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))

(declare-fun b!70398 () Bool)

(assert (=> b!70398 (= e!46058 e!46059)))

(declare-fun c!10209 () Bool)

(assert (=> b!70398 (= c!10209 (and ((_ is Cons!1490) (toList!726 lt!30206)) (not (= (_1!1069 (h!2075 (toList!726 lt!30206))) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2495 (underlying!255 thiss!992)))))))))))

(assert (= (and d!15743 c!10208) b!70397))

(assert (= (and d!15743 (not c!10208)) b!70398))

(assert (= (and b!70398 c!10209) b!70399))

(assert (= (and b!70398 (not c!10209)) b!70400))

(declare-fun m!67367 () Bool)

(assert (=> b!70399 m!67367))

(assert (=> b!69030 d!15743))

(assert (=> b!69144 d!15083))

(declare-fun b!70401 () Bool)

(declare-fun e!46060 () Bool)

(assert (=> b!70401 (= e!46060 (contains!722 (ite c!9833 (Cons!1491 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492) (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!70402 () Bool)

(declare-fun e!46061 () Bool)

(declare-fun call!6043 () Bool)

(assert (=> b!70402 (= e!46061 call!6043)))

(declare-fun c!10210 () Bool)

(declare-fun bm!6040 () Bool)

(assert (=> bm!6040 (= call!6043 (arrayNoDuplicates!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10210 (Cons!1491 (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9833 (Cons!1491 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492)) (ite c!9833 (Cons!1491 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492))))))

(declare-fun d!15745 () Bool)

(declare-fun res!37658 () Bool)

(declare-fun e!46063 () Bool)

(assert (=> d!15745 (=> res!37658 e!46063)))

(assert (=> d!15745 (= res!37658 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2076 (_keys!3812 newMap!16))))))

(assert (=> d!15745 (= (arrayNoDuplicates!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9833 (Cons!1491 (select (arr!1840 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492)) e!46063)))

(declare-fun b!70403 () Bool)

(declare-fun e!46062 () Bool)

(assert (=> b!70403 (= e!46062 e!46061)))

(assert (=> b!70403 (= c!10210 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!70404 () Bool)

(assert (=> b!70404 (= e!46061 call!6043)))

(declare-fun b!70405 () Bool)

(assert (=> b!70405 (= e!46063 e!46062)))

(declare-fun res!37657 () Bool)

(assert (=> b!70405 (=> (not res!37657) (not e!46062))))

(assert (=> b!70405 (= res!37657 (not e!46060))))

(declare-fun res!37656 () Bool)

(assert (=> b!70405 (=> (not res!37656) (not e!46060))))

(assert (=> b!70405 (= res!37656 (validKeyInArray!0 (select (arr!1840 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!15745 (not res!37658)) b!70405))

(assert (= (and b!70405 res!37656) b!70401))

(assert (= (and b!70405 res!37657) b!70403))

(assert (= (and b!70403 c!10210) b!70404))

(assert (= (and b!70403 (not c!10210)) b!70402))

(assert (= (or b!70404 b!70402) bm!6040))

(assert (=> b!70401 m!65269))

(assert (=> b!70401 m!65269))

(declare-fun m!67369 () Bool)

(assert (=> b!70401 m!67369))

(assert (=> bm!6040 m!65269))

(declare-fun m!67371 () Bool)

(assert (=> bm!6040 m!67371))

(assert (=> b!70403 m!65269))

(assert (=> b!70403 m!65269))

(assert (=> b!70403 m!65489))

(assert (=> b!70405 m!65269))

(assert (=> b!70405 m!65269))

(assert (=> b!70405 m!65489))

(assert (=> bm!5888 d!15745))

(declare-fun b!70409 () Bool)

(declare-fun e!46065 () Option!136)

(assert (=> b!70409 (= e!46065 None!134)))

(declare-fun d!15747 () Bool)

(declare-fun c!10211 () Bool)

(assert (=> d!15747 (= c!10211 (and ((_ is Cons!1490) (t!5001 lt!29859)) (= (_1!1069 (h!2075 (t!5001 lt!29859))) (_1!1069 lt!29775))))))

(declare-fun e!46064 () Option!136)

(assert (=> d!15747 (= (getValueByKey!130 (t!5001 lt!29859) (_1!1069 lt!29775)) e!46064)))

(declare-fun b!70406 () Bool)

(assert (=> b!70406 (= e!46064 (Some!135 (_2!1069 (h!2075 (t!5001 lt!29859)))))))

(declare-fun b!70408 () Bool)

(assert (=> b!70408 (= e!46065 (getValueByKey!130 (t!5001 (t!5001 lt!29859)) (_1!1069 lt!29775)))))

(declare-fun b!70407 () Bool)

(assert (=> b!70407 (= e!46064 e!46065)))

(declare-fun c!10212 () Bool)

(assert (=> b!70407 (= c!10212 (and ((_ is Cons!1490) (t!5001 lt!29859)) (not (= (_1!1069 (h!2075 (t!5001 lt!29859))) (_1!1069 lt!29775)))))))

(assert (= (and d!15747 c!10211) b!70406))

(assert (= (and d!15747 (not c!10211)) b!70407))

(assert (= (and b!70407 c!10212) b!70408))

(assert (= (and b!70407 (not c!10212)) b!70409))

(declare-fun m!67373 () Bool)

(assert (=> b!70408 m!67373))

(assert (=> b!69183 d!15747))

(assert (=> bm!5876 d!14783))

(declare-fun d!15749 () Bool)

(declare-fun res!37659 () Bool)

(declare-fun e!46066 () Bool)

(assert (=> d!15749 (=> res!37659 e!46066)))

(assert (=> d!15749 (= res!37659 (or ((_ is Nil!1491) lt!30316) ((_ is Nil!1491) (t!5001 lt!30316))))))

(assert (=> d!15749 (= (isStrictlySorted!285 lt!30316) e!46066)))

(declare-fun b!70410 () Bool)

(declare-fun e!46067 () Bool)

(assert (=> b!70410 (= e!46066 e!46067)))

(declare-fun res!37660 () Bool)

(assert (=> b!70410 (=> (not res!37660) (not e!46067))))

(assert (=> b!70410 (= res!37660 (bvslt (_1!1069 (h!2075 lt!30316)) (_1!1069 (h!2075 (t!5001 lt!30316)))))))

(declare-fun b!70411 () Bool)

(assert (=> b!70411 (= e!46067 (isStrictlySorted!285 (t!5001 lt!30316)))))

(assert (= (and d!15749 (not res!37659)) b!70410))

(assert (= (and b!70410 res!37660) b!70411))

(declare-fun m!67375 () Bool)

(assert (=> b!70411 m!67375))

(assert (=> d!14877 d!15749))

(declare-fun d!15751 () Bool)

(declare-fun res!37661 () Bool)

(declare-fun e!46068 () Bool)

(assert (=> d!15751 (=> res!37661 e!46068)))

(assert (=> d!15751 (= res!37661 (or ((_ is Nil!1491) (toList!726 (+!89 lt!29768 lt!29775))) ((_ is Nil!1491) (t!5001 (toList!726 (+!89 lt!29768 lt!29775))))))))

(assert (=> d!15751 (= (isStrictlySorted!285 (toList!726 (+!89 lt!29768 lt!29775))) e!46068)))

(declare-fun b!70412 () Bool)

(declare-fun e!46069 () Bool)

(assert (=> b!70412 (= e!46068 e!46069)))

(declare-fun res!37662 () Bool)

(assert (=> b!70412 (=> (not res!37662) (not e!46069))))

(assert (=> b!70412 (= res!37662 (bvslt (_1!1069 (h!2075 (toList!726 (+!89 lt!29768 lt!29775)))) (_1!1069 (h!2075 (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))))))))

(declare-fun b!70413 () Bool)

(assert (=> b!70413 (= e!46069 (isStrictlySorted!285 (t!5001 (toList!726 (+!89 lt!29768 lt!29775)))))))

(assert (= (and d!15751 (not res!37661)) b!70412))

(assert (= (and b!70412 res!37662) b!70413))

(assert (=> b!70413 m!66875))

(assert (=> d!14877 d!15751))

(declare-fun d!15753 () Bool)

(assert (=> d!15753 (= (get!1136 (select (arr!1841 (_values!2151 (v!2495 (underlying!255 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!325 (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69013 d!15753))

(assert (=> b!69209 d!14991))

(declare-fun d!15755 () Bool)

(declare-fun e!46070 () Bool)

(assert (=> d!15755 e!46070))

(declare-fun res!37663 () Bool)

(assert (=> d!15755 (=> res!37663 e!46070)))

(declare-fun lt!30999 () Bool)

(assert (=> d!15755 (= res!37663 (not lt!30999))))

(declare-fun lt!31000 () Bool)

(assert (=> d!15755 (= lt!30999 lt!31000)))

(declare-fun lt!30998 () Unit!1913)

(declare-fun e!46071 () Unit!1913)

(assert (=> d!15755 (= lt!30998 e!46071)))

(declare-fun c!10213 () Bool)

(assert (=> d!15755 (= c!10213 lt!31000)))

(assert (=> d!15755 (= lt!31000 (containsKey!134 (toList!726 lt!30042) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> d!15755 (= (contains!720 lt!30042 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!30999)))

(declare-fun b!70414 () Bool)

(declare-fun lt!30997 () Unit!1913)

(assert (=> b!70414 (= e!46071 lt!30997)))

(assert (=> b!70414 (= lt!30997 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!30042) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(assert (=> b!70414 (isDefined!84 (getValueByKey!130 (toList!726 lt!30042) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!70415 () Bool)

(declare-fun Unit!1992 () Unit!1913)

(assert (=> b!70415 (= e!46071 Unit!1992)))

(declare-fun b!70416 () Bool)

(assert (=> b!70416 (= e!46070 (isDefined!84 (getValueByKey!130 (toList!726 lt!30042) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (= (and d!15755 c!10213) b!70414))

(assert (= (and d!15755 (not c!10213)) b!70415))

(assert (= (and d!15755 (not res!37663)) b!70416))

(declare-fun m!67377 () Bool)

(assert (=> d!15755 m!67377))

(declare-fun m!67379 () Bool)

(assert (=> b!70414 m!67379))

(assert (=> b!70414 m!64417))

(assert (=> b!70414 m!64417))

(declare-fun m!67381 () Bool)

(assert (=> b!70414 m!67381))

(assert (=> b!70416 m!64417))

(assert (=> b!70416 m!64417))

(assert (=> b!70416 m!67381))

(assert (=> d!14763 d!15755))

(declare-fun b!70420 () Bool)

(declare-fun e!46073 () Option!136)

(assert (=> b!70420 (= e!46073 None!134)))

(declare-fun d!15757 () Bool)

(declare-fun c!10214 () Bool)

(assert (=> d!15757 (= c!10214 (and ((_ is Cons!1490) lt!30043) (= (_1!1069 (h!2075 lt!30043)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun e!46072 () Option!136)

(assert (=> d!15757 (= (getValueByKey!130 lt!30043 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) e!46072)))

(declare-fun b!70417 () Bool)

(assert (=> b!70417 (= e!46072 (Some!135 (_2!1069 (h!2075 lt!30043))))))

(declare-fun b!70419 () Bool)

(assert (=> b!70419 (= e!46073 (getValueByKey!130 (t!5001 lt!30043) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!70418 () Bool)

(assert (=> b!70418 (= e!46072 e!46073)))

(declare-fun c!10215 () Bool)

(assert (=> b!70418 (= c!10215 (and ((_ is Cons!1490) lt!30043) (not (= (_1!1069 (h!2075 lt!30043)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15757 c!10214) b!70417))

(assert (= (and d!15757 (not c!10214)) b!70418))

(assert (= (and b!70418 c!10215) b!70419))

(assert (= (and b!70418 (not c!10215)) b!70420))

(declare-fun m!67383 () Bool)

(assert (=> b!70419 m!67383))

(assert (=> d!14763 d!15757))

(declare-fun d!15759 () Bool)

(assert (=> d!15759 (= (getValueByKey!130 lt!30043 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) (Some!135 (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun lt!31001 () Unit!1913)

(assert (=> d!15759 (= lt!31001 (choose!390 lt!30043 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun e!46074 () Bool)

(assert (=> d!15759 e!46074))

(declare-fun res!37664 () Bool)

(assert (=> d!15759 (=> (not res!37664) (not e!46074))))

(assert (=> d!15759 (= res!37664 (isStrictlySorted!285 lt!30043))))

(assert (=> d!15759 (= (lemmaContainsTupThenGetReturnValue!49 lt!30043 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!31001)))

(declare-fun b!70421 () Bool)

(declare-fun res!37665 () Bool)

(assert (=> b!70421 (=> (not res!37665) (not e!46074))))

(assert (=> b!70421 (= res!37665 (containsKey!134 lt!30043 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!70422 () Bool)

(assert (=> b!70422 (= e!46074 (contains!721 lt!30043 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (= (and d!15759 res!37664) b!70421))

(assert (= (and b!70421 res!37665) b!70422))

(assert (=> d!15759 m!64411))

(declare-fun m!67385 () Bool)

(assert (=> d!15759 m!67385))

(declare-fun m!67387 () Bool)

(assert (=> d!15759 m!67387))

(declare-fun m!67389 () Bool)

(assert (=> b!70421 m!67389))

(declare-fun m!67391 () Bool)

(assert (=> b!70422 m!67391))

(assert (=> d!14763 d!15759))

(declare-fun bm!6041 () Bool)

(declare-fun call!6044 () List!1494)

(declare-fun call!6046 () List!1494)

(assert (=> bm!6041 (= call!6044 call!6046)))

(declare-fun b!70423 () Bool)

(declare-fun e!46078 () List!1494)

(declare-fun call!6045 () List!1494)

(assert (=> b!70423 (= e!46078 call!6045)))

(declare-fun e!46077 () List!1494)

(declare-fun b!70424 () Bool)

(assert (=> b!70424 (= e!46077 (insertStrictlySorted!51 (t!5001 (toList!726 lt!29768)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!70426 () Bool)

(declare-fun res!37667 () Bool)

(declare-fun e!46076 () Bool)

(assert (=> b!70426 (=> (not res!37667) (not e!46076))))

(declare-fun lt!31002 () List!1494)

(assert (=> b!70426 (= res!37667 (containsKey!134 lt!31002 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!70427 () Bool)

(declare-fun e!46075 () List!1494)

(declare-fun e!46079 () List!1494)

(assert (=> b!70427 (= e!46075 e!46079)))

(declare-fun c!10216 () Bool)

(assert (=> b!70427 (= c!10216 (and ((_ is Cons!1490) (toList!726 lt!29768)) (= (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun c!10217 () Bool)

(declare-fun b!70428 () Bool)

(assert (=> b!70428 (= e!46077 (ite c!10216 (t!5001 (toList!726 lt!29768)) (ite c!10217 (Cons!1490 (h!2075 (toList!726 lt!29768)) (t!5001 (toList!726 lt!29768))) Nil!1491)))))

(declare-fun b!70429 () Bool)

(assert (=> b!70429 (= e!46078 call!6045)))

(declare-fun b!70430 () Bool)

(assert (=> b!70430 (= e!46079 call!6044)))

(declare-fun b!70431 () Bool)

(assert (=> b!70431 (= e!46075 call!6046)))

(declare-fun c!10218 () Bool)

(declare-fun bm!6042 () Bool)

(assert (=> bm!6042 (= call!6046 ($colon$colon!63 e!46077 (ite c!10218 (h!2075 (toList!726 lt!29768)) (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(declare-fun c!10219 () Bool)

(assert (=> bm!6042 (= c!10219 c!10218)))

(declare-fun b!70432 () Bool)

(assert (=> b!70432 (= e!46076 (contains!721 lt!31002 (tuple2!2119 (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun bm!6043 () Bool)

(assert (=> bm!6043 (= call!6045 call!6044)))

(declare-fun b!70425 () Bool)

(assert (=> b!70425 (= c!10217 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvsgt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> b!70425 (= e!46079 e!46078)))

(declare-fun d!15761 () Bool)

(assert (=> d!15761 e!46076))

(declare-fun res!37666 () Bool)

(assert (=> d!15761 (=> (not res!37666) (not e!46076))))

(assert (=> d!15761 (= res!37666 (isStrictlySorted!285 lt!31002))))

(assert (=> d!15761 (= lt!31002 e!46075)))

(assert (=> d!15761 (= c!10218 (and ((_ is Cons!1490) (toList!726 lt!29768)) (bvslt (_1!1069 (h!2075 (toList!726 lt!29768))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(assert (=> d!15761 (isStrictlySorted!285 (toList!726 lt!29768))))

(assert (=> d!15761 (= (insertStrictlySorted!51 (toList!726 lt!29768) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)) (_2!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) lt!31002)))

(assert (= (and d!15761 c!10218) b!70431))

(assert (= (and d!15761 (not c!10218)) b!70427))

(assert (= (and b!70427 c!10216) b!70430))

(assert (= (and b!70427 (not c!10216)) b!70425))

(assert (= (and b!70425 c!10217) b!70429))

(assert (= (and b!70425 (not c!10217)) b!70423))

(assert (= (or b!70429 b!70423) bm!6043))

(assert (= (or b!70430 bm!6043) bm!6041))

(assert (= (or b!70431 bm!6041) bm!6042))

(assert (= (and bm!6042 c!10219) b!70424))

(assert (= (and bm!6042 (not c!10219)) b!70428))

(assert (= (and d!15761 res!37666) b!70426))

(assert (= (and b!70426 res!37667) b!70432))

(declare-fun m!67393 () Bool)

(assert (=> b!70424 m!67393))

(declare-fun m!67395 () Bool)

(assert (=> d!15761 m!67395))

(assert (=> d!15761 m!64453))

(declare-fun m!67397 () Bool)

(assert (=> b!70426 m!67397))

(declare-fun m!67399 () Bool)

(assert (=> bm!6042 m!67399))

(declare-fun m!67401 () Bool)

(assert (=> b!70432 m!67401))

(assert (=> d!14763 d!15761))

(declare-fun d!15763 () Bool)

(declare-fun lt!31003 () Bool)

(assert (=> d!15763 (= lt!31003 (select (content!72 lt!30057) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun e!46080 () Bool)

(assert (=> d!15763 (= lt!31003 e!46080)))

(declare-fun res!37669 () Bool)

(assert (=> d!15763 (=> (not res!37669) (not e!46080))))

(assert (=> d!15763 (= res!37669 ((_ is Cons!1490) lt!30057))))

(assert (=> d!15763 (= (contains!721 lt!30057 (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))) lt!31003)))

(declare-fun b!70433 () Bool)

(declare-fun e!46081 () Bool)

(assert (=> b!70433 (= e!46080 e!46081)))

(declare-fun res!37668 () Bool)

(assert (=> b!70433 (=> res!37668 e!46081)))

(assert (=> b!70433 (= res!37668 (= (h!2075 lt!30057) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(declare-fun b!70434 () Bool)

(assert (=> b!70434 (= e!46081 (contains!721 (t!5001 lt!30057) (tuple2!2119 (_1!1069 lt!29775) (_2!1069 lt!29775))))))

(assert (= (and d!15763 res!37669) b!70433))

(assert (= (and b!70433 (not res!37668)) b!70434))

(declare-fun m!67403 () Bool)

(assert (=> d!15763 m!67403))

(declare-fun m!67405 () Bool)

(assert (=> d!15763 m!67405))

(declare-fun m!67407 () Bool)

(assert (=> b!70434 m!67407))

(assert (=> b!68858 d!15763))

(assert (=> d!14757 d!14759))

(assert (=> d!14757 d!14763))

(assert (=> d!14757 d!14765))

(assert (=> d!14757 d!14761))

(assert (=> d!14957 d!14741))

(assert (=> bm!5878 d!15081))

(declare-fun d!15765 () Bool)

(assert (=> d!15765 (isDefined!84 (getValueByKey!130 (toList!726 lt!29858) (_1!1069 lt!29775)))))

(declare-fun lt!31004 () Unit!1913)

(assert (=> d!15765 (= lt!31004 (choose!395 (toList!726 lt!29858) (_1!1069 lt!29775)))))

(declare-fun e!46082 () Bool)

(assert (=> d!15765 e!46082))

(declare-fun res!37670 () Bool)

(assert (=> d!15765 (=> (not res!37670) (not e!46082))))

(assert (=> d!15765 (= res!37670 (isStrictlySorted!285 (toList!726 lt!29858)))))

(assert (=> d!15765 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!726 lt!29858) (_1!1069 lt!29775)) lt!31004)))

(declare-fun b!70435 () Bool)

(assert (=> b!70435 (= e!46082 (containsKey!134 (toList!726 lt!29858) (_1!1069 lt!29775)))))

(assert (= (and d!15765 res!37670) b!70435))

(assert (=> d!15765 m!64227))

(assert (=> d!15765 m!64227))

(assert (=> d!15765 m!64981))

(declare-fun m!67409 () Bool)

(assert (=> d!15765 m!67409))

(declare-fun m!67411 () Bool)

(assert (=> d!15765 m!67411))

(assert (=> b!70435 m!64977))

(assert (=> b!69178 d!15765))

(assert (=> b!69178 d!15549))

(assert (=> b!69178 d!14955))

(declare-fun b!70439 () Bool)

(declare-fun e!46084 () Option!136)

(assert (=> b!70439 (= e!46084 None!134)))

(declare-fun d!15767 () Bool)

(declare-fun c!10220 () Bool)

(assert (=> d!15767 (= c!10220 (and ((_ is Cons!1490) (t!5001 lt!29852)) (= (_1!1069 (h!2075 (t!5001 lt!29852))) (_1!1069 lt!29775))))))

(declare-fun e!46083 () Option!136)

(assert (=> d!15767 (= (getValueByKey!130 (t!5001 lt!29852) (_1!1069 lt!29775)) e!46083)))

(declare-fun b!70436 () Bool)

(assert (=> b!70436 (= e!46083 (Some!135 (_2!1069 (h!2075 (t!5001 lt!29852)))))))

(declare-fun b!70438 () Bool)

(assert (=> b!70438 (= e!46084 (getValueByKey!130 (t!5001 (t!5001 lt!29852)) (_1!1069 lt!29775)))))

(declare-fun b!70437 () Bool)

(assert (=> b!70437 (= e!46083 e!46084)))

(declare-fun c!10221 () Bool)

(assert (=> b!70437 (= c!10221 (and ((_ is Cons!1490) (t!5001 lt!29852)) (not (= (_1!1069 (h!2075 (t!5001 lt!29852))) (_1!1069 lt!29775)))))))

(assert (= (and d!15767 c!10220) b!70436))

(assert (= (and d!15767 (not c!10220)) b!70437))

(assert (= (and b!70437 c!10221) b!70438))

(assert (= (and b!70437 (not c!10221)) b!70439))

(declare-fun m!67413 () Bool)

(assert (=> b!70438 m!67413))

(assert (=> b!68821 d!15767))

(declare-fun d!15769 () Bool)

(declare-fun e!46085 () Bool)

(assert (=> d!15769 e!46085))

(declare-fun res!37672 () Bool)

(assert (=> d!15769 (=> (not res!37672) (not e!46085))))

(declare-fun lt!31007 () ListLongMap!1421)

(assert (=> d!15769 (= res!37672 (contains!720 lt!31007 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun lt!31008 () List!1494)

(assert (=> d!15769 (= lt!31007 (ListLongMap!1422 lt!31008))))

(declare-fun lt!31005 () Unit!1913)

(declare-fun lt!31006 () Unit!1913)

(assert (=> d!15769 (= lt!31005 lt!31006)))

(assert (=> d!15769 (= (getValueByKey!130 lt!31008 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15769 (= lt!31006 (lemmaContainsTupThenGetReturnValue!49 lt!31008 (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15769 (= lt!31008 (insertStrictlySorted!51 (toList!726 call!5896) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15769 (= (+!89 call!5896 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) lt!31007)))

(declare-fun b!70440 () Bool)

(declare-fun res!37671 () Bool)

(assert (=> b!70440 (=> (not res!37671) (not e!46085))))

(assert (=> b!70440 (= res!37671 (= (getValueByKey!130 (toList!726 lt!31007) (_1!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!135 (_2!1069 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun b!70441 () Bool)

(assert (=> b!70441 (= e!46085 (contains!721 (toList!726 lt!31007) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(assert (= (and d!15769 res!37672) b!70440))

(assert (= (and b!70440 res!37671) b!70441))

(declare-fun m!67415 () Bool)

(assert (=> d!15769 m!67415))

(declare-fun m!67417 () Bool)

(assert (=> d!15769 m!67417))

(declare-fun m!67419 () Bool)

(assert (=> d!15769 m!67419))

(declare-fun m!67421 () Bool)

(assert (=> d!15769 m!67421))

(declare-fun m!67423 () Bool)

(assert (=> b!70440 m!67423))

(declare-fun m!67425 () Bool)

(assert (=> b!70441 m!67425))

(assert (=> b!69053 d!15769))

(assert (=> bm!5899 d!15693))

(assert (=> bm!5923 d!15727))

(declare-fun b!70445 () Bool)

(declare-fun e!46087 () Option!136)

(assert (=> b!70445 (= e!46087 None!134)))

(declare-fun d!15771 () Bool)

(declare-fun c!10222 () Bool)

(assert (=> d!15771 (= c!10222 (and ((_ is Cons!1490) (toList!726 lt!30042)) (= (_1!1069 (h!2075 (toList!726 lt!30042))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778)))))))

(declare-fun e!46086 () Option!136)

(assert (=> d!15771 (= (getValueByKey!130 (toList!726 lt!30042) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))) e!46086)))

(declare-fun b!70442 () Bool)

(assert (=> b!70442 (= e!46086 (Some!135 (_2!1069 (h!2075 (toList!726 lt!30042)))))))

(declare-fun b!70444 () Bool)

(assert (=> b!70444 (= e!46087 (getValueByKey!130 (t!5001 (toList!726 lt!30042)) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))

(declare-fun b!70443 () Bool)

(assert (=> b!70443 (= e!46086 e!46087)))

(declare-fun c!10223 () Bool)

(assert (=> b!70443 (= c!10223 (and ((_ is Cons!1490) (toList!726 lt!30042)) (not (= (_1!1069 (h!2075 (toList!726 lt!30042))) (_1!1069 (tuple2!2119 (select (arr!1840 (_keys!3812 (v!2495 (underlying!255 thiss!992)))) from!355) lt!29778))))))))

(assert (= (and d!15771 c!10222) b!70442))

(assert (= (and d!15771 (not c!10222)) b!70443))

(assert (= (and b!70443 c!10223) b!70444))

(assert (= (and b!70443 (not c!10223)) b!70445))

(declare-fun m!67427 () Bool)

(assert (=> b!70444 m!67427))

(assert (=> b!68804 d!15771))

(assert (=> b!69006 d!15083))

(declare-fun b!70446 () Bool)

(declare-fun res!37675 () Bool)

(declare-fun e!46090 () Bool)

(assert (=> b!70446 (=> (not res!37675) (not e!46090))))

(declare-fun e!46095 () Bool)

(assert (=> b!70446 (= res!37675 e!46095)))

(declare-fun c!10226 () Bool)

(assert (=> b!70446 (= c!10226 (not (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!70447 () Bool)

(declare-fun res!37680 () Bool)

(assert (=> b!70447 (=> (not res!37680) (not e!46090))))

(declare-fun e!46096 () Bool)

(assert (=> b!70447 (= res!37680 e!46096)))

(declare-fun res!37681 () Bool)

(assert (=> b!70447 (=> res!37681 e!46096)))

(declare-fun e!46100 () Bool)

(assert (=> b!70447 (= res!37681 (not e!46100))))

(declare-fun res!37678 () Bool)

(assert (=> b!70447 (=> (not res!37678) (not e!46100))))

(assert (=> b!70447 (= res!37678 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(declare-fun bm!6044 () Bool)

(declare-fun call!6048 () ListLongMap!1421)

(declare-fun call!6050 () ListLongMap!1421)

(assert (=> bm!6044 (= call!6048 call!6050)))

(declare-fun b!70449 () Bool)

(declare-fun e!46094 () ListLongMap!1421)

(declare-fun call!6047 () ListLongMap!1421)

(assert (=> b!70449 (= e!46094 call!6047)))

(declare-fun b!70450 () Bool)

(declare-fun e!46099 () ListLongMap!1421)

(declare-fun e!46089 () ListLongMap!1421)

(assert (=> b!70450 (= e!46099 e!46089)))

(declare-fun c!10229 () Bool)

(assert (=> b!70450 (= c!10229 (and (not (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6045 () Bool)

(declare-fun call!6052 () Bool)

(declare-fun lt!31027 () ListLongMap!1421)

(assert (=> bm!6045 (= call!6052 (contains!720 lt!31027 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70451 () Bool)

(assert (=> b!70451 (= e!46089 call!6047)))

(declare-fun b!70452 () Bool)

(declare-fun e!46088 () Bool)

(declare-fun e!46092 () Bool)

(assert (=> b!70452 (= e!46088 e!46092)))

(declare-fun res!37676 () Bool)

(assert (=> b!70452 (= res!37676 call!6052)))

(assert (=> b!70452 (=> (not res!37676) (not e!46092))))

(declare-fun b!70453 () Bool)

(declare-fun call!6049 () ListLongMap!1421)

(assert (=> b!70453 (= e!46094 call!6049)))

(declare-fun b!70454 () Bool)

(declare-fun e!46093 () Bool)

(assert (=> b!70454 (= e!46093 (= (apply!73 lt!31027 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)) (get!1133 (select (arr!1841 (_values!2151 (_2!1070 lt!30024))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2168 (_2!1070 lt!30024)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70454 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_values!2151 (_2!1070 lt!30024)))))))

(assert (=> b!70454 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(declare-fun b!70455 () Bool)

(assert (=> b!70455 (= e!46090 e!46088)))

(declare-fun c!10227 () Bool)

(assert (=> b!70455 (= c!10227 (not (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!15773 () Bool)

(assert (=> d!15773 e!46090))

(declare-fun res!37679 () Bool)

(assert (=> d!15773 (=> (not res!37679) (not e!46090))))

(assert (=> d!15773 (= res!37679 (or (bvsge #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))))

(declare-fun lt!31019 () ListLongMap!1421)

(assert (=> d!15773 (= lt!31027 lt!31019)))

(declare-fun lt!31023 () Unit!1913)

(declare-fun e!46091 () Unit!1913)

(assert (=> d!15773 (= lt!31023 e!46091)))

(declare-fun c!10228 () Bool)

(declare-fun e!46097 () Bool)

(assert (=> d!15773 (= c!10228 e!46097)))

(declare-fun res!37677 () Bool)

(assert (=> d!15773 (=> (not res!37677) (not e!46097))))

(assert (=> d!15773 (= res!37677 (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(assert (=> d!15773 (= lt!31019 e!46099)))

(declare-fun c!10225 () Bool)

(assert (=> d!15773 (= c!10225 (and (not (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15773 (validMask!0 (mask!6113 (_2!1070 lt!30024)))))

(assert (=> d!15773 (= (getCurrentListMap!421 (_keys!3812 (_2!1070 lt!30024)) (_values!2151 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024)) (extraKeys!2035 (_2!1070 lt!30024)) (zeroValue!2074 (_2!1070 lt!30024)) (minValue!2074 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30024))) lt!31027)))

(declare-fun b!70448 () Bool)

(assert (=> b!70448 (= e!46088 (not call!6052))))

(declare-fun bm!6046 () Bool)

(assert (=> bm!6046 (= call!6049 call!6048)))

(declare-fun bm!6047 () Bool)

(assert (=> bm!6047 (= call!6050 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (_2!1070 lt!30024)) (_values!2151 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024)) (extraKeys!2035 (_2!1070 lt!30024)) (zeroValue!2074 (_2!1070 lt!30024)) (minValue!2074 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30024))))))

(declare-fun b!70456 () Bool)

(declare-fun Unit!1993 () Unit!1913)

(assert (=> b!70456 (= e!46091 Unit!1993)))

(declare-fun b!70457 () Bool)

(declare-fun e!46098 () Bool)

(assert (=> b!70457 (= e!46095 e!46098)))

(declare-fun res!37674 () Bool)

(declare-fun call!6053 () Bool)

(assert (=> b!70457 (= res!37674 call!6053)))

(assert (=> b!70457 (=> (not res!37674) (not e!46098))))

(declare-fun b!70458 () Bool)

(assert (=> b!70458 (= e!46092 (= (apply!73 lt!31027 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 (_2!1070 lt!30024))))))

(declare-fun b!70459 () Bool)

(assert (=> b!70459 (= e!46100 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(declare-fun bm!6048 () Bool)

(assert (=> bm!6048 (= call!6053 (contains!720 lt!31027 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70460 () Bool)

(declare-fun c!10224 () Bool)

(assert (=> b!70460 (= c!10224 (and (not (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (_2!1070 lt!30024)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!70460 (= e!46089 e!46094)))

(declare-fun call!6051 () ListLongMap!1421)

(declare-fun bm!6049 () Bool)

(assert (=> bm!6049 (= call!6051 (+!89 (ite c!10225 call!6050 (ite c!10229 call!6048 call!6049)) (ite (or c!10225 c!10229) (tuple2!2119 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (_2!1070 lt!30024))) (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (_2!1070 lt!30024))))))))

(declare-fun b!70461 () Bool)

(assert (=> b!70461 (= e!46099 (+!89 call!6051 (tuple2!2119 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (_2!1070 lt!30024)))))))

(declare-fun b!70462 () Bool)

(declare-fun lt!31018 () Unit!1913)

(assert (=> b!70462 (= e!46091 lt!31018)))

(declare-fun lt!31025 () ListLongMap!1421)

(assert (=> b!70462 (= lt!31025 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (_2!1070 lt!30024)) (_values!2151 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024)) (extraKeys!2035 (_2!1070 lt!30024)) (zeroValue!2074 (_2!1070 lt!30024)) (minValue!2074 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30024))))))

(declare-fun lt!31011 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31011 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31017 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31017 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000))))

(declare-fun lt!31029 () Unit!1913)

(assert (=> b!70462 (= lt!31029 (addStillContains!49 lt!31025 lt!31011 (zeroValue!2074 (_2!1070 lt!30024)) lt!31017))))

(assert (=> b!70462 (contains!720 (+!89 lt!31025 (tuple2!2119 lt!31011 (zeroValue!2074 (_2!1070 lt!30024)))) lt!31017)))

(declare-fun lt!31016 () Unit!1913)

(assert (=> b!70462 (= lt!31016 lt!31029)))

(declare-fun lt!31013 () ListLongMap!1421)

(assert (=> b!70462 (= lt!31013 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (_2!1070 lt!30024)) (_values!2151 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024)) (extraKeys!2035 (_2!1070 lt!30024)) (zeroValue!2074 (_2!1070 lt!30024)) (minValue!2074 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30024))))))

(declare-fun lt!31028 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31028 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31021 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31021 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000))))

(declare-fun lt!31009 () Unit!1913)

(assert (=> b!70462 (= lt!31009 (addApplyDifferent!49 lt!31013 lt!31028 (minValue!2074 (_2!1070 lt!30024)) lt!31021))))

(assert (=> b!70462 (= (apply!73 (+!89 lt!31013 (tuple2!2119 lt!31028 (minValue!2074 (_2!1070 lt!30024)))) lt!31021) (apply!73 lt!31013 lt!31021))))

(declare-fun lt!31014 () Unit!1913)

(assert (=> b!70462 (= lt!31014 lt!31009)))

(declare-fun lt!31010 () ListLongMap!1421)

(assert (=> b!70462 (= lt!31010 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (_2!1070 lt!30024)) (_values!2151 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024)) (extraKeys!2035 (_2!1070 lt!30024)) (zeroValue!2074 (_2!1070 lt!30024)) (minValue!2074 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30024))))))

(declare-fun lt!31026 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31026 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31012 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31012 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000))))

(declare-fun lt!31022 () Unit!1913)

(assert (=> b!70462 (= lt!31022 (addApplyDifferent!49 lt!31010 lt!31026 (zeroValue!2074 (_2!1070 lt!30024)) lt!31012))))

(assert (=> b!70462 (= (apply!73 (+!89 lt!31010 (tuple2!2119 lt!31026 (zeroValue!2074 (_2!1070 lt!30024)))) lt!31012) (apply!73 lt!31010 lt!31012))))

(declare-fun lt!31020 () Unit!1913)

(assert (=> b!70462 (= lt!31020 lt!31022)))

(declare-fun lt!31030 () ListLongMap!1421)

(assert (=> b!70462 (= lt!31030 (getCurrentListMapNoExtraKeys!53 (_keys!3812 (_2!1070 lt!30024)) (_values!2151 (_2!1070 lt!30024)) (mask!6113 (_2!1070 lt!30024)) (extraKeys!2035 (_2!1070 lt!30024)) (zeroValue!2074 (_2!1070 lt!30024)) (minValue!2074 (_2!1070 lt!30024)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1070 lt!30024))))))

(declare-fun lt!31015 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31015 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31024 () (_ BitVec 64))

(assert (=> b!70462 (= lt!31024 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000))))

(assert (=> b!70462 (= lt!31018 (addApplyDifferent!49 lt!31030 lt!31015 (minValue!2074 (_2!1070 lt!30024)) lt!31024))))

(assert (=> b!70462 (= (apply!73 (+!89 lt!31030 (tuple2!2119 lt!31015 (minValue!2074 (_2!1070 lt!30024)))) lt!31024) (apply!73 lt!31030 lt!31024))))

(declare-fun b!70463 () Bool)

(assert (=> b!70463 (= e!46097 (validKeyInArray!0 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(declare-fun bm!6050 () Bool)

(assert (=> bm!6050 (= call!6047 call!6051)))

(declare-fun b!70464 () Bool)

(assert (=> b!70464 (= e!46095 (not call!6053))))

(declare-fun b!70465 () Bool)

(assert (=> b!70465 (= e!46098 (= (apply!73 lt!31027 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 (_2!1070 lt!30024))))))

(declare-fun b!70466 () Bool)

(assert (=> b!70466 (= e!46096 e!46093)))

(declare-fun res!37673 () Bool)

(assert (=> b!70466 (=> (not res!37673) (not e!46093))))

(assert (=> b!70466 (= res!37673 (contains!720 lt!31027 (select (arr!1840 (_keys!3812 (_2!1070 lt!30024))) #b00000000000000000000000000000000)))))

(assert (=> b!70466 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2076 (_keys!3812 (_2!1070 lt!30024)))))))

(assert (= (and d!15773 c!10225) b!70461))

(assert (= (and d!15773 (not c!10225)) b!70450))

(assert (= (and b!70450 c!10229) b!70451))

(assert (= (and b!70450 (not c!10229)) b!70460))

(assert (= (and b!70460 c!10224) b!70449))

(assert (= (and b!70460 (not c!10224)) b!70453))

(assert (= (or b!70449 b!70453) bm!6046))

(assert (= (or b!70451 bm!6046) bm!6044))

(assert (= (or b!70451 b!70449) bm!6050))

(assert (= (or b!70461 bm!6044) bm!6047))

(assert (= (or b!70461 bm!6050) bm!6049))

(assert (= (and d!15773 res!37677) b!70463))

(assert (= (and d!15773 c!10228) b!70462))

(assert (= (and d!15773 (not c!10228)) b!70456))

(assert (= (and d!15773 res!37679) b!70447))

(assert (= (and b!70447 res!37678) b!70459))

(assert (= (and b!70447 (not res!37681)) b!70466))

(assert (= (and b!70466 res!37673) b!70454))

(assert (= (and b!70447 res!37680) b!70446))

(assert (= (and b!70446 c!10226) b!70457))

(assert (= (and b!70446 (not c!10226)) b!70464))

(assert (= (and b!70457 res!37674) b!70465))

(assert (= (or b!70457 b!70464) bm!6048))

(assert (= (and b!70446 res!37675) b!70455))

(assert (= (and b!70455 c!10227) b!70452))

(assert (= (and b!70455 (not c!10227)) b!70448))

(assert (= (and b!70452 res!37676) b!70458))

(assert (= (or b!70452 b!70448) bm!6045))

(declare-fun b_lambda!3147 () Bool)

(assert (=> (not b_lambda!3147) (not b!70454)))

(declare-fun t!5014 () Bool)

(declare-fun tb!1493 () Bool)

(assert (=> (and b!68443 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 (_2!1070 lt!30024))) t!5014) tb!1493))

(declare-fun result!2627 () Bool)

(assert (=> tb!1493 (= result!2627 tp_is_empty!2457)))

(assert (=> b!70454 t!5014))

(declare-fun b_and!4321 () Bool)

(assert (= b_and!4317 (and (=> t!5014 result!2627) b_and!4321)))

(declare-fun t!5016 () Bool)

(declare-fun tb!1495 () Bool)

(assert (=> (and b!68428 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (_2!1070 lt!30024))) t!5016) tb!1495))

(declare-fun result!2629 () Bool)

(assert (= result!2629 result!2627))

(assert (=> b!70454 t!5016))

(declare-fun b_and!4323 () Bool)

(assert (= b_and!4319 (and (=> t!5016 result!2629) b_and!4323)))

(assert (=> b!70466 m!66643))

(assert (=> b!70466 m!66643))

(declare-fun m!67429 () Bool)

(assert (=> b!70466 m!67429))

(declare-fun m!67431 () Bool)

(assert (=> b!70458 m!67431))

(declare-fun m!67433 () Bool)

(assert (=> b!70465 m!67433))

(declare-fun m!67435 () Bool)

(assert (=> bm!6049 m!67435))

(assert (=> d!15773 m!66275))

(declare-fun m!67437 () Bool)

(assert (=> bm!6048 m!67437))

(assert (=> b!70454 m!66643))

(declare-fun m!67439 () Bool)

(assert (=> b!70454 m!67439))

(assert (=> b!70454 m!66643))

(declare-fun m!67441 () Bool)

(assert (=> b!70454 m!67441))

(declare-fun m!67443 () Bool)

(assert (=> b!70454 m!67443))

(assert (=> b!70454 m!67443))

(assert (=> b!70454 m!67439))

(declare-fun m!67445 () Bool)

(assert (=> b!70454 m!67445))

(declare-fun m!67447 () Bool)

(assert (=> b!70461 m!67447))

(assert (=> b!70462 m!66643))

(declare-fun m!67449 () Bool)

(assert (=> b!70462 m!67449))

(declare-fun m!67451 () Bool)

(assert (=> b!70462 m!67451))

(declare-fun m!67453 () Bool)

(assert (=> b!70462 m!67453))

(declare-fun m!67455 () Bool)

(assert (=> b!70462 m!67455))

(declare-fun m!67457 () Bool)

(assert (=> b!70462 m!67457))

(declare-fun m!67459 () Bool)

(assert (=> b!70462 m!67459))

(declare-fun m!67461 () Bool)

(assert (=> b!70462 m!67461))

(declare-fun m!67463 () Bool)

(assert (=> b!70462 m!67463))

(declare-fun m!67465 () Bool)

(assert (=> b!70462 m!67465))

(declare-fun m!67467 () Bool)

(assert (=> b!70462 m!67467))

(declare-fun m!67469 () Bool)

(assert (=> b!70462 m!67469))

(declare-fun m!67471 () Bool)

(assert (=> b!70462 m!67471))

(assert (=> b!70462 m!67461))

(declare-fun m!67473 () Bool)

(assert (=> b!70462 m!67473))

(declare-fun m!67475 () Bool)

(assert (=> b!70462 m!67475))

(assert (=> b!70462 m!67471))

(declare-fun m!67477 () Bool)

(assert (=> b!70462 m!67477))

(assert (=> b!70462 m!67473))

(assert (=> b!70462 m!67465))

(declare-fun m!67479 () Bool)

(assert (=> b!70462 m!67479))

(assert (=> b!70463 m!66643))

(assert (=> b!70463 m!66643))

(assert (=> b!70463 m!66649))

(assert (=> b!70459 m!66643))

(assert (=> b!70459 m!66643))

(assert (=> b!70459 m!66649))

(declare-fun m!67481 () Bool)

(assert (=> bm!6045 m!67481))

(assert (=> bm!6047 m!67457))

(assert (=> d!14897 d!15773))

(assert (=> b!68922 d!15263))

(declare-fun mapNonEmpty!3115 () Bool)

(declare-fun mapRes!3115 () Bool)

(declare-fun tp!8425 () Bool)

(declare-fun e!46101 () Bool)

(assert (=> mapNonEmpty!3115 (= mapRes!3115 (and tp!8425 e!46101))))

(declare-fun mapRest!3115 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3115 () ValueCell!885)

(declare-fun mapKey!3115 () (_ BitVec 32))

(assert (=> mapNonEmpty!3115 (= mapRest!3113 (store mapRest!3115 mapKey!3115 mapValue!3115))))

(declare-fun mapIsEmpty!3115 () Bool)

(assert (=> mapIsEmpty!3115 mapRes!3115))

(declare-fun condMapEmpty!3115 () Bool)

(declare-fun mapDefault!3115 () ValueCell!885)

(assert (=> mapNonEmpty!3113 (= condMapEmpty!3115 (= mapRest!3113 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3115)))))

(declare-fun e!46102 () Bool)

(assert (=> mapNonEmpty!3113 (= tp!8423 (and e!46102 mapRes!3115))))

(declare-fun b!70467 () Bool)

(assert (=> b!70467 (= e!46101 tp_is_empty!2457)))

(declare-fun b!70468 () Bool)

(assert (=> b!70468 (= e!46102 tp_is_empty!2457)))

(assert (= (and mapNonEmpty!3113 condMapEmpty!3115) mapIsEmpty!3115))

(assert (= (and mapNonEmpty!3113 (not condMapEmpty!3115)) mapNonEmpty!3115))

(assert (= (and mapNonEmpty!3115 ((_ is ValueCellFull!885) mapValue!3115)) b!70467))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!885) mapDefault!3115)) b!70468))

(declare-fun m!67483 () Bool)

(assert (=> mapNonEmpty!3115 m!67483))

(declare-fun mapNonEmpty!3116 () Bool)

(declare-fun mapRes!3116 () Bool)

(declare-fun tp!8426 () Bool)

(declare-fun e!46103 () Bool)

(assert (=> mapNonEmpty!3116 (= mapRes!3116 (and tp!8426 e!46103))))

(declare-fun mapRest!3116 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3116 () ValueCell!885)

(declare-fun mapKey!3116 () (_ BitVec 32))

(assert (=> mapNonEmpty!3116 (= mapRest!3114 (store mapRest!3116 mapKey!3116 mapValue!3116))))

(declare-fun mapIsEmpty!3116 () Bool)

(assert (=> mapIsEmpty!3116 mapRes!3116))

(declare-fun condMapEmpty!3116 () Bool)

(declare-fun mapDefault!3116 () ValueCell!885)

(assert (=> mapNonEmpty!3114 (= condMapEmpty!3116 (= mapRest!3114 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3116)))))

(declare-fun e!46104 () Bool)

(assert (=> mapNonEmpty!3114 (= tp!8424 (and e!46104 mapRes!3116))))

(declare-fun b!70469 () Bool)

(assert (=> b!70469 (= e!46103 tp_is_empty!2457)))

(declare-fun b!70470 () Bool)

(assert (=> b!70470 (= e!46104 tp_is_empty!2457)))

(assert (= (and mapNonEmpty!3114 condMapEmpty!3116) mapIsEmpty!3116))

(assert (= (and mapNonEmpty!3114 (not condMapEmpty!3116)) mapNonEmpty!3116))

(assert (= (and mapNonEmpty!3116 ((_ is ValueCellFull!885) mapValue!3116)) b!70469))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!885) mapDefault!3116)) b!70470))

(declare-fun m!67485 () Bool)

(assert (=> mapNonEmpty!3116 m!67485))

(declare-fun b_lambda!3149 () Bool)

(assert (= b_lambda!3123 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3149)))

(declare-fun b_lambda!3151 () Bool)

(assert (= b_lambda!3121 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3151)))

(declare-fun b_lambda!3153 () Bool)

(assert (= b_lambda!3143 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3153)))

(declare-fun b_lambda!3155 () Bool)

(assert (= b_lambda!3125 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3155)))

(declare-fun b_lambda!3157 () Bool)

(assert (= b_lambda!3129 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3157)))

(declare-fun b_lambda!3159 () Bool)

(assert (= b_lambda!3127 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3159)))

(declare-fun b_lambda!3161 () Bool)

(assert (= b_lambda!3137 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3161)))

(declare-fun b_lambda!3163 () Bool)

(assert (= b_lambda!3131 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3163)))

(declare-fun b_lambda!3165 () Bool)

(assert (= b_lambda!3145 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3165)))

(declare-fun b_lambda!3167 () Bool)

(assert (= b_lambda!3119 (or (and b!68443 b_free!2081) (and b!68428 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))))) b_lambda!3167)))

(declare-fun b_lambda!3169 () Bool)

(assert (= b_lambda!3135 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3169)))

(declare-fun b_lambda!3171 () Bool)

(assert (= b_lambda!3139 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3171)))

(declare-fun b_lambda!3173 () Bool)

(assert (= b_lambda!3117 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3173)))

(declare-fun b_lambda!3175 () Bool)

(assert (= b_lambda!3133 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3175)))

(declare-fun b_lambda!3177 () Bool)

(assert (= b_lambda!3141 (or (and b!68443 b_free!2081 (= (defaultEntry!2168 (v!2495 (underlying!255 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68428 b_free!2083) b_lambda!3177)))

(check-sat (not b!70275) (not d!15367) (not b!70461) (not b!69507) (not b!69510) (not b!70027) (not b!70346) (not bm!6019) (not b!70234) (not b!70124) (not b!70334) (not b!69598) (not d!15501) (not b!70228) (not b!69736) (not b_lambda!3175) (not d!15491) (not b!69661) (not b!70047) (not b!69373) (not b!70348) (not b!69848) (not d!15111) (not d!15045) (not b!69680) (not b!69317) (not b!70329) (not b!69577) (not bm!5934) (not b!69918) (not b!70180) (not b!70171) (not b!69980) (not d!15537) (not b!70403) (not d!15203) (not b_lambda!3173) (not b!69425) (not b!70093) (not d!15097) (not b!69304) (not d!15737) (not bm!6000) (not b!70049) (not b!70078) (not d!15229) (not b!69607) (not b!69366) (not b!70262) (not b!69968) (not b!69790) (not b!70260) (not b!70327) (not b!69446) (not b!69420) (not bm!6022) (not d!15523) (not b!70187) (not b!69954) (not d!15153) (not d!15629) (not b_lambda!3167) (not b!69739) (not b_lambda!3091) (not d!15595) (not d!15205) (not b!69604) (not b!69658) (not b!69832) (not b!69838) (not d!15321) (not b!70128) (not b!69830) (not b!70029) (not bm!5944) (not b!70167) (not b_lambda!3155) (not b!69837) (not bm!5982) (not b!70405) (not b!70295) (not d!14985) (not b!70036) (not b!70326) (not b!69361) (not b!69404) (not bm!5931) (not d!15637) (not b!69587) (not d!15725) (not d!15087) (not d!15641) (not b!69332) (not bm!6002) (not d!15081) (not b!69569) (not d!15421) tp_is_empty!2457 (not b!69771) (not b!70101) (not b!69688) (not d!15695) (not d!15115) (not b!70209) (not b!70325) (not b!70204) (not d!15033) (not b!69959) (not bm!5988) (not b!70319) (not b!70088) (not b!70185) (not d!15481) (not d!15093) (not b!69459) (not b!69793) (not b!69758) (not d!15759) (not d!15645) (not d!15635) (not b!69401) (not d!15347) (not b!69631) (not b!70034) (not b!69891) (not b!70241) (not d!15557) (not b!69663) (not b!70022) (not b!70225) (not b!70207) (not b!70462) (not d!15473) (not d!15665) (not b!69746) (not b!69698) (not d!15345) (not d!15731) (not b!70106) (not b!69442) (not d!15717) (not b!70466) (not d!15729) (not b!70120) (not bm!6014) (not b_lambda!3177) (not d!15677) (not bm!6006) (not d!15015) (not b!69554) (not bm!5951) (not b!69835) (not b!69922) (not b!69920) (not d!15709) (not d!15495) (not b!70118) (not d!15137) (not b_lambda!3087) (not d!15239) (not b!69719) (not b!70279) (not d!15151) (not b!70175) (not d!15217) (not d!15261) (not d!15589) (not b!70249) (not d!15311) (not d!15479) (not bm!6024) (not b!70330) (not b!69842) (not b!69595) (not b!70191) (not d!15215) (not b!69703) (not b!70079) (not d!15319) (not b!70281) (not d!15669) (not b!69466) (not b!69623) (not b!69335) (not b!70219) (not d!14997) (not b!70297) (not b!70368) (not b!70217) (not b!69727) (not b!69952) (not b!70166) (not d!15291) (not b!69418) (not d!15639) (not b!69504) (not b!70303) (not b!70001) (not b!69315) (not b!69480) (not b!70268) (not b!69616) (not d!15091) (not b!69464) (not d!15691) (not b!70046) (not b!69687) (not b!69399) (not d!14979) (not d!15623) (not b!70115) (not b!70059) (not b!70435) (not b!70283) (not b!69685) (not b!69337) (not b!70075) (not b!69809) (not d!15259) (not b!69711) (not b!70313) (not bm!5972) (not d!15565) (not b_next!2081) (not b!69627) (not d!15679) (not d!15075) (not b!70305) (not d!15535) (not b!69692) (not d!15307) (not b!69310) (not d!15211) (not d!15453) (not b!69720) (not b!70056) (not d!15089) (not d!15173) (not b!70323) (not b!69498) (not b!69856) (not b_lambda!3111) (not b!69748) (not bm!5946) (not d!15237) (not d!15251) (not d!15213) (not b!70424) (not d!15375) (not d!15701) (not b!69502) (not b!69560) (not b!70254) (not b!69874) (not d!15155) (not b!70066) (not d!15035) (not b!69969) (not d!15713) (not b!70357) (not b!69754) (not d!15423) (not b!69400) (not b!70129) (not d!15711) (not b!69983) (not d!15773) (not b!70463) (not d!15401) (not b!69460) (not b!69753) (not b!69884) (not b!69314) (not b!70099) (not d!15613) (not bm!5952) (not b!69516) (not d!15077) (not b!69734) (not b!69518) (not bm!6032) (not b!69895) (not bm!6047) (not d!15735) (not d!15121) (not b!70003) (not b_lambda!3147) (not b!70270) (not b!70008) (not b!70284) (not b!69363) (not d!15441) (not b!69907) (not b!70282) (not d!15123) (not b!69744) (not d!15277) (not b_lambda!3089) (not bm!5975) (not d!15547) (not b!69579) (not b!69791) (not b_lambda!3165) (not bm!5991) (not bm!5960) (not b!69863) (not b!69911) (not bm!5949) (not bm!5942) (not b!69602) (not bm!6036) (not bm!5937) (not b!69462) (not d!14969) (not b!69417) (not b!69574) (not d!15675) (not d!14983) (not d!15443) (not d!15275) (not b!69987) (not bm!6004) (not b!69799) (not d!15041) (not b!69756) (not b!69571) (not d!15059) (not d!15359) (not b!69653) (not b!70054) (not b!69934) (not b!70333) (not d!15489) (not d!15139) (not b!69630) (not b!70009) (not b!69764) (not b!69854) (not d!15007) (not b!69359) (not b!69924) (not b!69899) (not d!15297) (not b_lambda!3169) (not b!69463) (not d!15283) (not d!15357) (not b!70130) (not d!15715) (not d!15651) (not b!69633) (not b!70206) (not b!69850) (not d!15577) (not b!70168) (not b!69679) (not bm!6012) (not b!69454) (not b!69971) (not b!69530) (not b!69621) (not d!15527) (not b!69782) (not d!15733) (not d!15659) (not b!69345) (not b!69823) (not d!15301) (not b!70096) (not b!69767) (not b!69976) (not b_lambda!3115) (not d!15009) (not b!69441) (not bm!5940) (not b!69881) (not b!69496) (not b!70365) (not d!15339) (not d!15079) (not b!69412) (not bm!5953) (not b!70233) (not d!15619) (not b!69458) (not b!69629) (not b!69647) (not b!70183) (not d!15363) (not d!15141) (not b!69581) (not b!69365) (not bm!6045) (not bm!6031) (not b!70123) (not b!69561) (not b!69932) (not bm!5995) (not d!15631) (not d!15159) (not d!15207) (not b_lambda!3109) (not bm!5987) (not d!15209) (not b!70169) (not d!15543) (not d!15755) (not bm!6033) (not b!70349) (not d!15721) (not b!69659) (not b!69370) (not b!69651) (not d!15265) (not b_lambda!3159) (not b!70039) (not b!70351) (not b!70132) (not b!69526) (not b!70288) (not d!15689) (not d!15643) (not b!69625) (not b!69606) (not b!69505) (not d!15147) (not b!69829) (not b!69414) (not bm!6040) (not b!70414) (not b!69568) (not b!69996) (not d!15149) (not b!70102) (not b!69901) (not b!69670) (not d!15243) (not b!70454) (not d!15057) (not d!15285) (not b!69644) (not b!69520) (not bm!6005) (not b!70318) (not d!15439) (not d!15163) (not d!15271) (not b!69614) (not d!15101) (not b!69491) (not d!15327) (not d!15025) (not b!70290) (not b!69331) (not b!69313) (not d!15683) (not b!70302) (not b!70408) (not d!15337) (not b!69940) (not b!70344) (not d!15505) (not b!69423) (not b!70438) (not b!69985) (not b!69751) (not d!15351) (not b!70214) (not b!69766) (not bm!5956) b_and!4323 (not b!70061) (not b!70236) (not d!15223) (not b!70212) (not bm!6008) (not b!69806) (not d!15235) (not b!69469) (not b!69708) (not b!69444) (not b!69298) (not d!15393) (not b!70215) (not d!15353) (not d!15693) (not d!15475) (not b!70189) (not b!69690) (not b!69553) (not b!70274) (not b!69562) (not b!69626) (not b_lambda!3079) (not b!70426) (not d!15037) (not b!69452) (not d!15533) (not b!69817) (not b!69853) (not b!70317) (not b!69741) (not d!15333) (not d!15765) (not d!15529) (not d!15719) (not b!69409) (not d!15381) (not d!15579) (not b!70231) (not b!70062) (not b!69613) (not b_lambda!3153) (not b!70158) (not bm!6034) (not b!70031) (not d!15073) (not b!70300) (not b_lambda!3157) (not bm!6049) (not b!70198) (not b!69945) (not b!70259) (not b!69926) (not d!15511) (not b!69612) (not b!69564) (not b!70278) (not d!15515) (not d!15493) (not b!69589) (not d!15197) (not d!15249) (not b!69619) (not d!15697) (not bm!6042) (not b!69917) (not d!15293) (not b!70053) (not b!70352) (not b_lambda!3161) (not d!15707) (not d!15303) (not b!69609) (not d!15193) (not b!69725) (not b!70277) (not bm!5989) (not b!69904) (not d!15399) (not bm!5976) (not b!69439) (not b!70257) (not b!69474) (not d!15189) (not d!15687) (not b!69713) (not b!69770) (not b!70026) (not b_lambda!3113) (not b!70086) (not b!69906) (not b!69556) (not b!69302) (not b!70345) (not d!15273) (not b!69354) (not b!70271) (not d!15763) (not d!15379) (not b!69540) (not b!69523) (not b!70444) (not b!70246) (not b!70359) (not b!69624) (not d!15427) (not b!69501) (not b!70465) (not d!15625) (not d!15191) (not b!69436) (not d!15253) (not d!15519) (not b!70413) (not b!70434) (not b!69576) (not d!15449) (not b!69675) (not b!69937) (not b!70343) (not d!15723) (not b!70160) (not bm!6001) (not d!14973) (not b!69709) (not d!14977) (not d!15611) (not b!70369) (not d!15201) (not b!70287) (not d!15647) (not d!15655) (not d!15705) (not d!15185) (not b!70440) (not b!70419) (not b!70243) (not b!69538) (not b!69397) (not b!69941) (not b!70004) (not b!70416) (not b!69943) (not b!69369) (not b!69738) (not b!69566) (not bm!5958) (not bm!6038) (not b!69807) (not b!69794) (not b!69368) (not b!69557) (not d!15219) (not b!69876) (not d!15465) (not b!70104) (not b!69536) (not bm!5938) (not b!70422) (not b!69840) (not d!15403) (not b!69362) (not b!69948) (not d!15727) (not b!70266) (not b!69811) (not b!69787) (not d!15457) (not d!15433) (not d!15063) (not b!70411) (not d!15437) (not b!69852) (not d!15685) (not b!69494) (not b!69682) (not b!70441) (not b!70178) (not b!69797) (not b!69367) (not d!15199) (not b!69358) (not b!69722) (not d!15305) (not d!15581) (not b!69308) (not d!15005) (not b!69615) (not d!15517) (not b!69334) (not d!15099) (not b!70336) (not bm!6039) (not b!69601) (not d!15143) (not b!69730) (not b!69410) (not b!70005) (not b!70112) (not b!70083) (not d!15023) (not d!15119) (not b!69416) (not b!69827) (not d!15633) (not bm!6048) (not b!69957) (not b!70394) (not bm!5966) (not b!70356) (not b!69820) (not d!15487) (not b!70064) (not d!15649) (not b!70350) (not d!15769) (not d!15455) (not bm!6010) (not b!70081) (not b!69804) (not b!69499) (not b!70320) (not b!69882) (not bm!6026) (not d!15157) (not b!69939) (not d!15145) (not d!15187) (not b!69456) (not b!70051) (not b!70399) (not d!15463) (not b!70363) (not d!15167) (not b!70361) (not b!70321) (not d!14999) (not b!69485) (not d!15653) (not b!70432) (not b!70324) (not b!69638) (not b!70033) (not d!15521) (not b!69513) (not b!69429) (not b!69898) (not b!70294) (not b!69457) (not b!69549) (not d!15031) (not d!15703) (not d!14993) (not b!70358) (not d!15585) (not bm!5974) (not d!15567) (not d!15269) (not b_lambda!3105) (not b!70181) (not b!69343) (not bm!6020) (not b!69872) (not d!15627) (not b!70030) (not d!15257) (not d!15509) (not b!69671) (not b!69470) (not mapNonEmpty!3115) (not b!70273) (not b!70091) (not b!69488) (not b!70307) (not b!70192) (not b!69879) (not b!70018) (not b!70267) (not d!15467) (not bm!5969) (not b!69305) (not b!70328) (not b!69432) (not bm!5936) (not d!15315) (not d!15497) (not b!70044) (not b!70126) (not b!69539) (not b!69801) (not d!15615) (not d!15133) (not b!70122) (not b!70227) (not d!15451) (not b_lambda!3151) (not b!69982) (not d!15681) (not d!15039) (not b!69622) (not b!69859) (not b!70421) (not d!15047) (not b!69824) (not bm!6029) (not b!70194) (not bm!5993) (not d!15181) (not b!69500) (not b!69929) (not b!70229) (not d!15395) (not mapNonEmpty!3116) (not b!69867) (not b!70238) (not b!70094) (not b!69407) (not d!15663) (not b!70362) (not b!69909) (not b!69677) (not b!69656) (not b!69887) (not b!69706) (not b!70401) (not b!69672) (not d!15583) (not d!15573) (not d!15553) (not b!69472) (not b!70000) (not b!69477) (not b!69786) (not b!69325) (not bm!5998) (not bm!5979) (not d!15113) b_and!4321 (not b!70196) (not bm!5963) (not d!15231) (not b!70023) (not bm!5985) (not b!70332) (not b!69773) (not b!70315) (not d!15531) (not b!70341) (not d!15323) (not b!69789) (not d!15171) (not b!70089) (not b!70459) (not b!69610) (not d!15195) (not d!15699) (not d!15761) (not b!69415) (not b!69650) (not b_next!2083) (not b!69700) (not d!15549) (not d!15593) (not b!70113) (not b!69673) (not b_lambda!3107) (not d!15021) (not bm!5994) (not b!70007) (not b_lambda!3171) (not b!70072) (not b!69482) (not d!15673) (not b!69558) (not b!69497) (not b!69319) (not d!15309) (not b_lambda!3163) (not b!70286) (not b!69528) (not b!70458) (not b!69434) (not b!69390) (not b!69870) (not b!69669) (not b!69701) (not b!69307) (not b!69427) (not b!69637) (not b!69525) (not b!70025) (not d!15385) (not b!69865) (not d!14975) (not b!69328) (not d!15085) (not d!15069) (not b_lambda!3149))
(check-sat b_and!4321 b_and!4323 (not b_next!2081) (not b_next!2083))
