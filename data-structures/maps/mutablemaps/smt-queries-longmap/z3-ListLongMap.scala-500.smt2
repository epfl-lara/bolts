; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!11362 () Bool)

(assert start!11362)

(declare-fun b!93975 () Bool)

(declare-fun b_free!2393 () Bool)

(declare-fun b_next!2393 () Bool)

(assert (=> b!93975 (= b_free!2393 (not b_next!2393))))

(declare-fun tp!9447 () Bool)

(declare-fun b_and!5729 () Bool)

(assert (=> b!93975 (= tp!9447 b_and!5729)))

(declare-fun b!93983 () Bool)

(declare-fun b_free!2395 () Bool)

(declare-fun b_next!2395 () Bool)

(assert (=> b!93983 (= b_free!2395 (not b_next!2395))))

(declare-fun tp!9445 () Bool)

(declare-fun b_and!5731 () Bool)

(assert (=> b!93983 (= tp!9445 b_and!5731)))

(declare-datatypes ((V!3131 0))(
  ( (V!3132 (val!1351 Int)) )
))
(declare-datatypes ((array!4200 0))(
  ( (array!4201 (arr!1996 (Array (_ BitVec 32) (_ BitVec 64))) (size!2244 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!963 0))(
  ( (ValueCellFull!963 (v!2762 V!3131)) (EmptyCell!963) )
))
(declare-datatypes ((array!4202 0))(
  ( (array!4203 (arr!1997 (Array (_ BitVec 32) ValueCell!963)) (size!2245 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!834 0))(
  ( (LongMapFixedSize!835 (defaultEntry!2436 Int) (mask!6511 (_ BitVec 32)) (extraKeys!2265 (_ BitVec 32)) (zeroValue!2323 V!3131) (minValue!2323 V!3131) (_size!466 (_ BitVec 32)) (_keys!4118 array!4200) (_values!2419 array!4202) (_vacant!466 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!638 0))(
  ( (Cell!639 (v!2763 LongMapFixedSize!834)) )
))
(declare-datatypes ((LongMap!638 0))(
  ( (LongMap!639 (underlying!330 Cell!638)) )
))
(declare-fun thiss!992 () LongMap!638)

(declare-fun e!61370 () Bool)

(declare-fun e!61384 () Bool)

(declare-fun tp_is_empty!2613 () Bool)

(declare-fun array_inv!1197 (array!4200) Bool)

(declare-fun array_inv!1198 (array!4202) Bool)

(assert (=> b!93975 (= e!61384 (and tp!9447 tp_is_empty!2613 (array_inv!1197 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (array_inv!1198 (_values!2419 (v!2763 (underlying!330 thiss!992)))) e!61370))))

(declare-fun b!93976 () Bool)

(declare-fun e!61375 () Bool)

(declare-fun e!61371 () Bool)

(assert (=> b!93976 (= e!61375 e!61371)))

(declare-fun res!47609 () Bool)

(assert (=> b!93976 (=> (not res!47609) (not e!61371))))

(declare-datatypes ((tuple2!2332 0))(
  ( (tuple2!2333 (_1!1176 Bool) (_2!1176 LongMapFixedSize!834)) )
))
(declare-fun lt!46471 () tuple2!2332)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!93976 (= res!47609 (and (_1!1176 lt!46471) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!2822 0))(
  ( (Unit!2823) )
))
(declare-fun lt!46470 () Unit!2822)

(declare-fun e!61377 () Unit!2822)

(assert (=> b!93976 (= lt!46470 e!61377)))

(declare-datatypes ((tuple2!2334 0))(
  ( (tuple2!2335 (_1!1177 (_ BitVec 64)) (_2!1177 V!3131)) )
))
(declare-datatypes ((List!1600 0))(
  ( (Nil!1597) (Cons!1596 (h!2188 tuple2!2334) (t!5506 List!1600)) )
))
(declare-datatypes ((ListLongMap!1539 0))(
  ( (ListLongMap!1540 (toList!785 List!1600)) )
))
(declare-fun lt!46466 () ListLongMap!1539)

(declare-fun c!15657 () Bool)

(declare-fun contains!797 (ListLongMap!1539 (_ BitVec 64)) Bool)

(assert (=> b!93976 (= c!15657 (contains!797 lt!46466 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun newMap!16 () LongMapFixedSize!834)

(declare-fun update!142 (LongMapFixedSize!834 (_ BitVec 64) V!3131) tuple2!2332)

(declare-fun get!1280 (ValueCell!963 V!3131) V!3131)

(declare-fun dynLambda!374 (Int (_ BitVec 64)) V!3131)

(assert (=> b!93976 (= lt!46471 (update!142 newMap!16 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!93977 () Bool)

(declare-fun res!47607 () Bool)

(declare-fun e!61382 () Bool)

(assert (=> b!93977 (=> (not res!47607) (not e!61382))))

(assert (=> b!93977 (= res!47607 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!93978 () Bool)

(declare-fun res!47612 () Bool)

(assert (=> b!93978 (=> (not res!47612) (not e!61371))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!93978 (= res!47612 (validMask!0 (mask!6511 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!93979 () Bool)

(declare-fun e!61374 () Bool)

(assert (=> b!93979 (= e!61374 tp_is_empty!2613)))

(declare-fun b!93980 () Bool)

(declare-fun e!61372 () Bool)

(declare-fun e!61379 () Bool)

(assert (=> b!93980 (= e!61372 e!61379)))

(declare-fun b!93981 () Bool)

(assert (=> b!93981 (= e!61382 e!61375)))

(declare-fun res!47613 () Bool)

(assert (=> b!93981 (=> (not res!47613) (not e!61375))))

(declare-fun lt!46467 () ListLongMap!1539)

(assert (=> b!93981 (= res!47613 (and (= lt!46467 lt!46466) (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1243 (LongMapFixedSize!834) ListLongMap!1539)

(assert (=> b!93981 (= lt!46466 (map!1243 newMap!16))))

(declare-fun getCurrentListMap!466 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) ListLongMap!1539)

(assert (=> b!93981 (= lt!46467 (getCurrentListMap!466 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!93982 () Bool)

(declare-fun e!61381 () Bool)

(declare-fun mapRes!3675 () Bool)

(assert (=> b!93982 (= e!61370 (and e!61381 mapRes!3675))))

(declare-fun condMapEmpty!3675 () Bool)

(declare-fun mapDefault!3675 () ValueCell!963)

(assert (=> b!93982 (= condMapEmpty!3675 (= (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3675)))))

(declare-fun e!61373 () Bool)

(declare-fun e!61378 () Bool)

(assert (=> b!93983 (= e!61378 (and tp!9445 tp_is_empty!2613 (array_inv!1197 (_keys!4118 newMap!16)) (array_inv!1198 (_values!2419 newMap!16)) e!61373))))

(declare-fun mapIsEmpty!3675 () Bool)

(declare-fun mapRes!3676 () Bool)

(assert (=> mapIsEmpty!3675 mapRes!3676))

(declare-fun b!93984 () Bool)

(declare-fun e!61376 () Bool)

(assert (=> b!93984 (= e!61376 tp_is_empty!2613)))

(declare-fun mapIsEmpty!3676 () Bool)

(assert (=> mapIsEmpty!3676 mapRes!3675))

(declare-fun b!93985 () Bool)

(declare-fun e!61385 () Bool)

(assert (=> b!93985 (= e!61385 tp_is_empty!2613)))

(declare-fun b!93986 () Bool)

(declare-fun Unit!2824 () Unit!2822)

(assert (=> b!93986 (= e!61377 Unit!2824)))

(declare-fun b!93987 () Bool)

(assert (=> b!93987 (= e!61381 tp_is_empty!2613)))

(declare-fun b!93989 () Bool)

(declare-fun res!47611 () Bool)

(assert (=> b!93989 (=> (not res!47611) (not e!61382))))

(assert (=> b!93989 (= res!47611 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6511 newMap!16)) (_size!466 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!93990 () Bool)

(assert (=> b!93990 (= e!61379 e!61384)))

(declare-fun mapNonEmpty!3675 () Bool)

(declare-fun tp!9448 () Bool)

(assert (=> mapNonEmpty!3675 (= mapRes!3676 (and tp!9448 e!61385))))

(declare-fun mapRest!3675 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapKey!3676 () (_ BitVec 32))

(declare-fun mapValue!3676 () ValueCell!963)

(assert (=> mapNonEmpty!3675 (= (arr!1997 (_values!2419 newMap!16)) (store mapRest!3675 mapKey!3676 mapValue!3676))))

(declare-fun b!93991 () Bool)

(assert (=> b!93991 (= e!61371 (not (= (size!2245 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6511 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!93992 () Bool)

(assert (=> b!93992 (= e!61373 (and e!61374 mapRes!3676))))

(declare-fun condMapEmpty!3676 () Bool)

(declare-fun mapDefault!3676 () ValueCell!963)

(assert (=> b!93992 (= condMapEmpty!3676 (= (arr!1997 (_values!2419 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3676)))))

(declare-fun mapNonEmpty!3676 () Bool)

(declare-fun tp!9446 () Bool)

(assert (=> mapNonEmpty!3676 (= mapRes!3675 (and tp!9446 e!61376))))

(declare-fun mapRest!3676 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapValue!3675 () ValueCell!963)

(declare-fun mapKey!3675 () (_ BitVec 32))

(assert (=> mapNonEmpty!3676 (= (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (store mapRest!3676 mapKey!3675 mapValue!3675))))

(declare-fun b!93993 () Bool)

(declare-fun res!47608 () Bool)

(assert (=> b!93993 (=> (not res!47608) (not e!61382))))

(declare-fun valid!376 (LongMapFixedSize!834) Bool)

(assert (=> b!93993 (= res!47608 (valid!376 newMap!16))))

(declare-fun res!47610 () Bool)

(assert (=> start!11362 (=> (not res!47610) (not e!61382))))

(declare-fun valid!377 (LongMap!638) Bool)

(assert (=> start!11362 (= res!47610 (valid!377 thiss!992))))

(assert (=> start!11362 e!61382))

(assert (=> start!11362 e!61372))

(assert (=> start!11362 true))

(assert (=> start!11362 e!61378))

(declare-fun b!93988 () Bool)

(declare-fun Unit!2825 () Unit!2822)

(assert (=> b!93988 (= e!61377 Unit!2825)))

(declare-fun lt!46472 () Unit!2822)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!93 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2822)

(assert (=> b!93988 (= lt!46472 (lemmaListMapContainsThenArrayContainsFrom!93 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4200 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!93988 (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!46469 () Unit!2822)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4200 (_ BitVec 32) (_ BitVec 32)) Unit!2822)

(assert (=> b!93988 (= lt!46469 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1601 0))(
  ( (Nil!1598) (Cons!1597 (h!2189 (_ BitVec 64)) (t!5507 List!1601)) )
))
(declare-fun arrayNoDuplicates!0 (array!4200 (_ BitVec 32) List!1601) Bool)

(assert (=> b!93988 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) from!355 Nil!1598)))

(declare-fun lt!46468 () Unit!2822)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4200 (_ BitVec 32) (_ BitVec 64) List!1601) Unit!2822)

(assert (=> b!93988 (= lt!46468 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598)))))

(assert (=> b!93988 false))

(assert (= (and start!11362 res!47610) b!93977))

(assert (= (and b!93977 res!47607) b!93993))

(assert (= (and b!93993 res!47608) b!93989))

(assert (= (and b!93989 res!47611) b!93981))

(assert (= (and b!93981 res!47613) b!93976))

(assert (= (and b!93976 c!15657) b!93988))

(assert (= (and b!93976 (not c!15657)) b!93986))

(assert (= (and b!93976 res!47609) b!93978))

(assert (= (and b!93978 res!47612) b!93991))

(assert (= (and b!93982 condMapEmpty!3675) mapIsEmpty!3676))

(assert (= (and b!93982 (not condMapEmpty!3675)) mapNonEmpty!3676))

(get-info :version)

(assert (= (and mapNonEmpty!3676 ((_ is ValueCellFull!963) mapValue!3675)) b!93984))

(assert (= (and b!93982 ((_ is ValueCellFull!963) mapDefault!3675)) b!93987))

(assert (= b!93975 b!93982))

(assert (= b!93990 b!93975))

(assert (= b!93980 b!93990))

(assert (= start!11362 b!93980))

(assert (= (and b!93992 condMapEmpty!3676) mapIsEmpty!3675))

(assert (= (and b!93992 (not condMapEmpty!3676)) mapNonEmpty!3675))

(assert (= (and mapNonEmpty!3675 ((_ is ValueCellFull!963) mapValue!3676)) b!93985))

(assert (= (and b!93992 ((_ is ValueCellFull!963) mapDefault!3676)) b!93979))

(assert (= b!93983 b!93992))

(assert (= start!11362 b!93983))

(declare-fun b_lambda!4145 () Bool)

(assert (=> (not b_lambda!4145) (not b!93976)))

(declare-fun t!5503 () Bool)

(declare-fun tb!1873 () Bool)

(assert (=> (and b!93975 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))) t!5503) tb!1873))

(declare-fun result!3191 () Bool)

(assert (=> tb!1873 (= result!3191 tp_is_empty!2613)))

(assert (=> b!93976 t!5503))

(declare-fun b_and!5733 () Bool)

(assert (= b_and!5729 (and (=> t!5503 result!3191) b_and!5733)))

(declare-fun t!5505 () Bool)

(declare-fun tb!1875 () Bool)

(assert (=> (and b!93983 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))) t!5505) tb!1875))

(declare-fun result!3195 () Bool)

(assert (= result!3195 result!3191))

(assert (=> b!93976 t!5505))

(declare-fun b_and!5735 () Bool)

(assert (= b_and!5731 (and (=> t!5505 result!3195) b_and!5735)))

(declare-fun m!101009 () Bool)

(assert (=> mapNonEmpty!3676 m!101009))

(declare-fun m!101011 () Bool)

(assert (=> b!93976 m!101011))

(declare-fun m!101013 () Bool)

(assert (=> b!93976 m!101013))

(declare-fun m!101015 () Bool)

(assert (=> b!93976 m!101015))

(declare-fun m!101017 () Bool)

(assert (=> b!93976 m!101017))

(declare-fun m!101019 () Bool)

(assert (=> b!93976 m!101019))

(assert (=> b!93976 m!101017))

(assert (=> b!93976 m!101013))

(assert (=> b!93976 m!101017))

(assert (=> b!93976 m!101015))

(declare-fun m!101021 () Bool)

(assert (=> b!93976 m!101021))

(assert (=> b!93976 m!101011))

(declare-fun m!101023 () Bool)

(assert (=> b!93975 m!101023))

(declare-fun m!101025 () Bool)

(assert (=> b!93975 m!101025))

(declare-fun m!101027 () Bool)

(assert (=> b!93978 m!101027))

(declare-fun m!101029 () Bool)

(assert (=> mapNonEmpty!3675 m!101029))

(declare-fun m!101031 () Bool)

(assert (=> b!93988 m!101031))

(declare-fun m!101033 () Bool)

(assert (=> b!93988 m!101033))

(assert (=> b!93988 m!101017))

(declare-fun m!101035 () Bool)

(assert (=> b!93988 m!101035))

(assert (=> b!93988 m!101017))

(assert (=> b!93988 m!101017))

(declare-fun m!101037 () Bool)

(assert (=> b!93988 m!101037))

(assert (=> b!93988 m!101017))

(declare-fun m!101039 () Bool)

(assert (=> b!93988 m!101039))

(declare-fun m!101041 () Bool)

(assert (=> b!93993 m!101041))

(assert (=> b!93981 m!101017))

(declare-fun m!101043 () Bool)

(assert (=> b!93981 m!101043))

(declare-fun m!101045 () Bool)

(assert (=> b!93981 m!101045))

(declare-fun m!101047 () Bool)

(assert (=> b!93983 m!101047))

(declare-fun m!101049 () Bool)

(assert (=> b!93983 m!101049))

(declare-fun m!101051 () Bool)

(assert (=> start!11362 m!101051))

(check-sat (not b!93981) (not b!93976) (not b!93988) (not b!93975) (not b!93978) b_and!5735 (not mapNonEmpty!3675) (not b!93993) (not b_lambda!4145) b_and!5733 (not b_next!2393) (not b!93983) (not start!11362) (not b_next!2395) tp_is_empty!2613 (not mapNonEmpty!3676))
(check-sat b_and!5733 b_and!5735 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun b_lambda!4149 () Bool)

(assert (= b_lambda!4145 (or (and b!93975 b_free!2393) (and b!93983 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))) b_lambda!4149)))

(check-sat (not b!93981) (not b!93976) b_and!5733 (not b!93988) (not b!93975) (not b!93978) (not b_lambda!4149) b_and!5735 (not mapNonEmpty!3675) (not b!93993) (not b_next!2393) (not b!93983) (not start!11362) (not b_next!2395) tp_is_empty!2613 (not mapNonEmpty!3676))
(check-sat b_and!5733 b_and!5735 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun d!24525 () Bool)

(assert (=> d!24525 (not (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46496 () Unit!2822)

(declare-fun choose!68 (array!4200 (_ BitVec 32) (_ BitVec 64) List!1601) Unit!2822)

(assert (=> d!24525 (= lt!46496 (choose!68 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598)))))

(assert (=> d!24525 (bvslt (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24525 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598)) lt!46496)))

(declare-fun bs!3848 () Bool)

(assert (= bs!3848 d!24525))

(assert (=> bs!3848 m!101017))

(assert (=> bs!3848 m!101037))

(assert (=> bs!3848 m!101017))

(declare-fun m!101097 () Bool)

(assert (=> bs!3848 m!101097))

(assert (=> b!93988 d!24525))

(declare-fun d!24527 () Bool)

(assert (=> d!24527 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) from!355 Nil!1598)))

(declare-fun lt!46499 () Unit!2822)

(declare-fun choose!39 (array!4200 (_ BitVec 32) (_ BitVec 32)) Unit!2822)

(assert (=> d!24527 (= lt!46499 (choose!39 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!24527 (bvslt (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24527 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355) lt!46499)))

(declare-fun bs!3849 () Bool)

(assert (= bs!3849 d!24527))

(assert (=> bs!3849 m!101033))

(declare-fun m!101099 () Bool)

(assert (=> bs!3849 m!101099))

(assert (=> b!93988 d!24527))

(declare-fun d!24529 () Bool)

(declare-fun res!47639 () Bool)

(declare-fun e!61438 () Bool)

(assert (=> d!24529 (=> res!47639 e!61438)))

(assert (=> d!24529 (= res!47639 (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24529 (= (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!61438)))

(declare-fun b!94059 () Bool)

(declare-fun e!61439 () Bool)

(assert (=> b!94059 (= e!61438 e!61439)))

(declare-fun res!47640 () Bool)

(assert (=> b!94059 (=> (not res!47640) (not e!61439))))

(assert (=> b!94059 (= res!47640 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94060 () Bool)

(assert (=> b!94060 (= e!61439 (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!24529 (not res!47639)) b!94059))

(assert (= (and b!94059 res!47640) b!94060))

(declare-fun m!101101 () Bool)

(assert (=> d!24529 m!101101))

(assert (=> b!94060 m!101017))

(declare-fun m!101103 () Bool)

(assert (=> b!94060 m!101103))

(assert (=> b!93988 d!24529))

(declare-fun d!24531 () Bool)

(declare-fun e!61442 () Bool)

(assert (=> d!24531 e!61442))

(declare-fun c!15663 () Bool)

(assert (=> d!24531 (= c!15663 (and (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!46502 () Unit!2822)

(declare-fun choose!567 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2822)

(assert (=> d!24531 (= lt!46502 (choose!567 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(assert (=> d!24531 (validMask!0 (mask!6511 (v!2763 (underlying!330 thiss!992))))))

(assert (=> d!24531 (= (lemmaListMapContainsThenArrayContainsFrom!93 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))) lt!46502)))

(declare-fun b!94065 () Bool)

(assert (=> b!94065 (= e!61442 (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94066 () Bool)

(assert (=> b!94066 (= e!61442 (ite (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24531 c!15663) b!94065))

(assert (= (and d!24531 (not c!15663)) b!94066))

(assert (=> d!24531 m!101017))

(declare-fun m!101105 () Bool)

(assert (=> d!24531 m!101105))

(assert (=> d!24531 m!101027))

(assert (=> b!94065 m!101017))

(assert (=> b!94065 m!101037))

(assert (=> b!93988 d!24531))

(declare-fun bm!9359 () Bool)

(declare-fun c!15666 () Bool)

(declare-fun call!9362 () Bool)

(assert (=> bm!9359 (= call!9362 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)))))

(declare-fun b!94077 () Bool)

(declare-fun e!61452 () Bool)

(assert (=> b!94077 (= e!61452 call!9362)))

(declare-fun b!94078 () Bool)

(declare-fun e!61451 () Bool)

(assert (=> b!94078 (= e!61451 e!61452)))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!94078 (= c!15666 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun d!24533 () Bool)

(declare-fun res!47648 () Bool)

(declare-fun e!61453 () Bool)

(assert (=> d!24533 (=> res!47648 e!61453)))

(assert (=> d!24533 (= res!47648 (bvsge from!355 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!24533 (= (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) from!355 Nil!1598) e!61453)))

(declare-fun b!94079 () Bool)

(assert (=> b!94079 (= e!61453 e!61451)))

(declare-fun res!47647 () Bool)

(assert (=> b!94079 (=> (not res!47647) (not e!61451))))

(declare-fun e!61454 () Bool)

(assert (=> b!94079 (= res!47647 (not e!61454))))

(declare-fun res!47649 () Bool)

(assert (=> b!94079 (=> (not res!47649) (not e!61454))))

(assert (=> b!94079 (= res!47649 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94080 () Bool)

(declare-fun contains!798 (List!1601 (_ BitVec 64)) Bool)

(assert (=> b!94080 (= e!61454 (contains!798 Nil!1598 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94081 () Bool)

(assert (=> b!94081 (= e!61452 call!9362)))

(assert (= (and d!24533 (not res!47648)) b!94079))

(assert (= (and b!94079 res!47649) b!94080))

(assert (= (and b!94079 res!47647) b!94078))

(assert (= (and b!94078 c!15666) b!94077))

(assert (= (and b!94078 (not c!15666)) b!94081))

(assert (= (or b!94077 b!94081) bm!9359))

(assert (=> bm!9359 m!101017))

(declare-fun m!101107 () Bool)

(assert (=> bm!9359 m!101107))

(assert (=> b!94078 m!101017))

(assert (=> b!94078 m!101017))

(declare-fun m!101109 () Bool)

(assert (=> b!94078 m!101109))

(assert (=> b!94079 m!101017))

(assert (=> b!94079 m!101017))

(assert (=> b!94079 m!101109))

(assert (=> b!94080 m!101017))

(assert (=> b!94080 m!101017))

(declare-fun m!101111 () Bool)

(assert (=> b!94080 m!101111))

(assert (=> b!93988 d!24533))

(declare-fun d!24535 () Bool)

(assert (=> d!24535 (= (array_inv!1197 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvsge (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!93975 d!24535))

(declare-fun d!24537 () Bool)

(assert (=> d!24537 (= (array_inv!1198 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvsge (size!2245 (_values!2419 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!93975 d!24537))

(declare-fun d!24539 () Bool)

(assert (=> d!24539 (= (validMask!0 (mask!6511 (v!2763 (underlying!330 thiss!992)))) (and (or (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000001111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000011111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000001111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000011111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000001111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000011111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000001111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000011111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000001111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000011111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000001111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000011111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000001111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000011111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000111111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000001111111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000011111111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000111111111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00001111111111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00011111111111111111111111111111) (= (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!93978 d!24539))

(declare-fun d!24541 () Bool)

(assert (=> d!24541 (= (valid!377 thiss!992) (valid!376 (v!2763 (underlying!330 thiss!992))))))

(declare-fun bs!3850 () Bool)

(assert (= bs!3850 d!24541))

(declare-fun m!101113 () Bool)

(assert (=> bs!3850 m!101113))

(assert (=> start!11362 d!24541))

(declare-fun d!24543 () Bool)

(assert (=> d!24543 (= (array_inv!1197 (_keys!4118 newMap!16)) (bvsge (size!2244 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!93983 d!24543))

(declare-fun d!24545 () Bool)

(assert (=> d!24545 (= (array_inv!1198 (_values!2419 newMap!16)) (bvsge (size!2245 (_values!2419 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!93983 d!24545))

(declare-fun d!24547 () Bool)

(declare-fun res!47656 () Bool)

(declare-fun e!61457 () Bool)

(assert (=> d!24547 (=> (not res!47656) (not e!61457))))

(declare-fun simpleValid!65 (LongMapFixedSize!834) Bool)

(assert (=> d!24547 (= res!47656 (simpleValid!65 newMap!16))))

(assert (=> d!24547 (= (valid!376 newMap!16) e!61457)))

(declare-fun b!94088 () Bool)

(declare-fun res!47657 () Bool)

(assert (=> b!94088 (=> (not res!47657) (not e!61457))))

(declare-fun arrayCountValidKeys!0 (array!4200 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!94088 (= res!47657 (= (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (_size!466 newMap!16)))))

(declare-fun b!94089 () Bool)

(declare-fun res!47658 () Bool)

(assert (=> b!94089 (=> (not res!47658) (not e!61457))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4200 (_ BitVec 32)) Bool)

(assert (=> b!94089 (= res!47658 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94090 () Bool)

(assert (=> b!94090 (= e!61457 (arrayNoDuplicates!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 Nil!1598))))

(assert (= (and d!24547 res!47656) b!94088))

(assert (= (and b!94088 res!47657) b!94089))

(assert (= (and b!94089 res!47658) b!94090))

(declare-fun m!101115 () Bool)

(assert (=> d!24547 m!101115))

(declare-fun m!101117 () Bool)

(assert (=> b!94088 m!101117))

(declare-fun m!101119 () Bool)

(assert (=> b!94089 m!101119))

(declare-fun m!101121 () Bool)

(assert (=> b!94090 m!101121))

(assert (=> b!93993 d!24547))

(declare-fun d!24549 () Bool)

(assert (=> d!24549 (= (map!1243 newMap!16) (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bs!3851 () Bool)

(assert (= bs!3851 d!24549))

(declare-fun m!101123 () Bool)

(assert (=> bs!3851 m!101123))

(assert (=> b!93981 d!24549))

(declare-fun bm!9374 () Bool)

(declare-fun call!9379 () Bool)

(declare-fun lt!46547 () ListLongMap!1539)

(assert (=> bm!9374 (= call!9379 (contains!797 lt!46547 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94133 () Bool)

(declare-fun e!61491 () ListLongMap!1539)

(declare-fun e!61495 () ListLongMap!1539)

(assert (=> b!94133 (= e!61491 e!61495)))

(declare-fun c!15682 () Bool)

(assert (=> b!94133 (= c!15682 (and (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94134 () Bool)

(declare-fun e!61493 () ListLongMap!1539)

(declare-fun call!9381 () ListLongMap!1539)

(assert (=> b!94134 (= e!61493 call!9381)))

(declare-fun b!94135 () Bool)

(declare-fun res!47678 () Bool)

(declare-fun e!61485 () Bool)

(assert (=> b!94135 (=> (not res!47678) (not e!61485))))

(declare-fun e!61486 () Bool)

(assert (=> b!94135 (= res!47678 e!61486)))

(declare-fun res!47681 () Bool)

(assert (=> b!94135 (=> res!47681 e!61486)))

(declare-fun e!61487 () Bool)

(assert (=> b!94135 (= res!47681 (not e!61487))))

(declare-fun res!47684 () Bool)

(assert (=> b!94135 (=> (not res!47684) (not e!61487))))

(assert (=> b!94135 (= res!47684 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94136 () Bool)

(declare-fun call!9382 () ListLongMap!1539)

(declare-fun +!136 (ListLongMap!1539 tuple2!2334) ListLongMap!1539)

(assert (=> b!94136 (= e!61491 (+!136 call!9382 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94138 () Bool)

(declare-fun res!47683 () Bool)

(assert (=> b!94138 (=> (not res!47683) (not e!61485))))

(declare-fun e!61490 () Bool)

(assert (=> b!94138 (= res!47683 e!61490)))

(declare-fun c!15680 () Bool)

(assert (=> b!94138 (= c!15680 (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94139 () Bool)

(assert (=> b!94139 (= e!61490 (not call!9379))))

(declare-fun b!94140 () Bool)

(declare-fun e!61484 () Bool)

(declare-fun apply!90 (ListLongMap!1539 (_ BitVec 64)) V!3131)

(assert (=> b!94140 (= e!61484 (= (apply!90 lt!46547 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94140 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_values!2419 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> b!94140 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94141 () Bool)

(assert (=> b!94141 (= e!61495 call!9381)))

(declare-fun b!94142 () Bool)

(declare-fun e!61488 () Bool)

(assert (=> b!94142 (= e!61488 (= (apply!90 lt!46547 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!94143 () Bool)

(declare-fun e!61492 () Bool)

(assert (=> b!94143 (= e!61492 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94144 () Bool)

(assert (=> b!94144 (= e!61487 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!9375 () Bool)

(declare-fun call!9378 () ListLongMap!1539)

(declare-fun getCurrentListMapNoExtraKeys!100 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) ListLongMap!1539)

(assert (=> bm!9375 (= call!9378 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun bm!9376 () Bool)

(declare-fun call!9383 () Bool)

(assert (=> bm!9376 (= call!9383 (contains!797 lt!46547 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94145 () Bool)

(declare-fun e!61494 () Unit!2822)

(declare-fun Unit!2826 () Unit!2822)

(assert (=> b!94145 (= e!61494 Unit!2826)))

(declare-fun call!9380 () ListLongMap!1539)

(declare-fun bm!9377 () Bool)

(declare-fun c!15683 () Bool)

(declare-fun call!9377 () ListLongMap!1539)

(assert (=> bm!9377 (= call!9382 (+!136 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)) (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!94146 () Bool)

(declare-fun e!61489 () Bool)

(assert (=> b!94146 (= e!61485 e!61489)))

(declare-fun c!15684 () Bool)

(assert (=> b!94146 (= c!15684 (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94147 () Bool)

(declare-fun c!15679 () Bool)

(assert (=> b!94147 (= c!15679 (and (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94147 (= e!61495 e!61493)))

(declare-fun b!94148 () Bool)

(assert (=> b!94148 (= e!61489 (not call!9383))))

(declare-fun d!24551 () Bool)

(assert (=> d!24551 e!61485))

(declare-fun res!47679 () Bool)

(assert (=> d!24551 (=> (not res!47679) (not e!61485))))

(assert (=> d!24551 (= res!47679 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun lt!46552 () ListLongMap!1539)

(assert (=> d!24551 (= lt!46547 lt!46552)))

(declare-fun lt!46566 () Unit!2822)

(assert (=> d!24551 (= lt!46566 e!61494)))

(declare-fun c!15681 () Bool)

(assert (=> d!24551 (= c!15681 e!61492)))

(declare-fun res!47685 () Bool)

(assert (=> d!24551 (=> (not res!47685) (not e!61492))))

(assert (=> d!24551 (= res!47685 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!24551 (= lt!46552 e!61491)))

(assert (=> d!24551 (= c!15683 (and (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24551 (validMask!0 (mask!6511 (v!2763 (underlying!330 thiss!992))))))

(assert (=> d!24551 (= (getCurrentListMap!466 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))) lt!46547)))

(declare-fun b!94137 () Bool)

(declare-fun e!61496 () Bool)

(assert (=> b!94137 (= e!61496 (= (apply!90 lt!46547 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!94149 () Bool)

(assert (=> b!94149 (= e!61493 call!9380)))

(declare-fun bm!9378 () Bool)

(assert (=> bm!9378 (= call!9380 call!9377)))

(declare-fun b!94150 () Bool)

(declare-fun lt!46563 () Unit!2822)

(assert (=> b!94150 (= e!61494 lt!46563)))

(declare-fun lt!46555 () ListLongMap!1539)

(assert (=> b!94150 (= lt!46555 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun lt!46554 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46554 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46556 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46556 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46557 () Unit!2822)

(declare-fun addStillContains!66 (ListLongMap!1539 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2822)

(assert (=> b!94150 (= lt!46557 (addStillContains!66 lt!46555 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46556))))

(assert (=> b!94150 (contains!797 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46556)))

(declare-fun lt!46562 () Unit!2822)

(assert (=> b!94150 (= lt!46562 lt!46557)))

(declare-fun lt!46548 () ListLongMap!1539)

(assert (=> b!94150 (= lt!46548 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun lt!46560 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46560 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46558 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46558 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46559 () Unit!2822)

(declare-fun addApplyDifferent!66 (ListLongMap!1539 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2822)

(assert (=> b!94150 (= lt!46559 (addApplyDifferent!66 lt!46548 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46558))))

(assert (=> b!94150 (= (apply!90 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46558) (apply!90 lt!46548 lt!46558))))

(declare-fun lt!46567 () Unit!2822)

(assert (=> b!94150 (= lt!46567 lt!46559)))

(declare-fun lt!46553 () ListLongMap!1539)

(assert (=> b!94150 (= lt!46553 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun lt!46561 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46561 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46568 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46568 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46551 () Unit!2822)

(assert (=> b!94150 (= lt!46551 (addApplyDifferent!66 lt!46553 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46568))))

(assert (=> b!94150 (= (apply!90 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46568) (apply!90 lt!46553 lt!46568))))

(declare-fun lt!46564 () Unit!2822)

(assert (=> b!94150 (= lt!46564 lt!46551)))

(declare-fun lt!46550 () ListLongMap!1539)

(assert (=> b!94150 (= lt!46550 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun lt!46565 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46565 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46549 () (_ BitVec 64))

(assert (=> b!94150 (= lt!46549 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!94150 (= lt!46563 (addApplyDifferent!66 lt!46550 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46549))))

(assert (=> b!94150 (= (apply!90 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46549) (apply!90 lt!46550 lt!46549))))

(declare-fun b!94151 () Bool)

(assert (=> b!94151 (= e!61486 e!61484)))

(declare-fun res!47677 () Bool)

(assert (=> b!94151 (=> (not res!47677) (not e!61484))))

(assert (=> b!94151 (= res!47677 (contains!797 lt!46547 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94151 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun bm!9379 () Bool)

(assert (=> bm!9379 (= call!9377 call!9378)))

(declare-fun b!94152 () Bool)

(assert (=> b!94152 (= e!61490 e!61496)))

(declare-fun res!47682 () Bool)

(assert (=> b!94152 (= res!47682 call!9379)))

(assert (=> b!94152 (=> (not res!47682) (not e!61496))))

(declare-fun b!94153 () Bool)

(assert (=> b!94153 (= e!61489 e!61488)))

(declare-fun res!47680 () Bool)

(assert (=> b!94153 (= res!47680 call!9383)))

(assert (=> b!94153 (=> (not res!47680) (not e!61488))))

(declare-fun bm!9380 () Bool)

(assert (=> bm!9380 (= call!9381 call!9382)))

(assert (= (and d!24551 c!15683) b!94136))

(assert (= (and d!24551 (not c!15683)) b!94133))

(assert (= (and b!94133 c!15682) b!94141))

(assert (= (and b!94133 (not c!15682)) b!94147))

(assert (= (and b!94147 c!15679) b!94134))

(assert (= (and b!94147 (not c!15679)) b!94149))

(assert (= (or b!94134 b!94149) bm!9378))

(assert (= (or b!94141 bm!9378) bm!9379))

(assert (= (or b!94141 b!94134) bm!9380))

(assert (= (or b!94136 bm!9379) bm!9375))

(assert (= (or b!94136 bm!9380) bm!9377))

(assert (= (and d!24551 res!47685) b!94143))

(assert (= (and d!24551 c!15681) b!94150))

(assert (= (and d!24551 (not c!15681)) b!94145))

(assert (= (and d!24551 res!47679) b!94135))

(assert (= (and b!94135 res!47684) b!94144))

(assert (= (and b!94135 (not res!47681)) b!94151))

(assert (= (and b!94151 res!47677) b!94140))

(assert (= (and b!94135 res!47678) b!94138))

(assert (= (and b!94138 c!15680) b!94152))

(assert (= (and b!94138 (not c!15680)) b!94139))

(assert (= (and b!94152 res!47682) b!94137))

(assert (= (or b!94152 b!94139) bm!9374))

(assert (= (and b!94138 res!47683) b!94146))

(assert (= (and b!94146 c!15684) b!94153))

(assert (= (and b!94146 (not c!15684)) b!94148))

(assert (= (and b!94153 res!47680) b!94142))

(assert (= (or b!94153 b!94148) bm!9376))

(declare-fun b_lambda!4151 () Bool)

(assert (=> (not b_lambda!4151) (not b!94140)))

(assert (=> b!94140 t!5503))

(declare-fun b_and!5745 () Bool)

(assert (= b_and!5733 (and (=> t!5503 result!3191) b_and!5745)))

(assert (=> b!94140 t!5505))

(declare-fun b_and!5747 () Bool)

(assert (= b_and!5735 (and (=> t!5505 result!3195) b_and!5747)))

(declare-fun m!101125 () Bool)

(assert (=> b!94137 m!101125))

(declare-fun m!101127 () Bool)

(assert (=> b!94136 m!101127))

(declare-fun m!101129 () Bool)

(assert (=> bm!9377 m!101129))

(assert (=> d!24551 m!101027))

(declare-fun m!101131 () Bool)

(assert (=> b!94142 m!101131))

(declare-fun m!101133 () Bool)

(assert (=> bm!9374 m!101133))

(declare-fun m!101135 () Bool)

(assert (=> bm!9376 m!101135))

(declare-fun m!101137 () Bool)

(assert (=> b!94140 m!101137))

(assert (=> b!94140 m!101013))

(declare-fun m!101139 () Bool)

(assert (=> b!94140 m!101139))

(assert (=> b!94140 m!101101))

(assert (=> b!94140 m!101013))

(assert (=> b!94140 m!101137))

(assert (=> b!94140 m!101101))

(declare-fun m!101141 () Bool)

(assert (=> b!94140 m!101141))

(assert (=> b!94151 m!101101))

(assert (=> b!94151 m!101101))

(declare-fun m!101143 () Bool)

(assert (=> b!94151 m!101143))

(declare-fun m!101145 () Bool)

(assert (=> bm!9375 m!101145))

(assert (=> b!94144 m!101101))

(assert (=> b!94144 m!101101))

(declare-fun m!101147 () Bool)

(assert (=> b!94144 m!101147))

(assert (=> b!94143 m!101101))

(assert (=> b!94143 m!101101))

(assert (=> b!94143 m!101147))

(declare-fun m!101149 () Bool)

(assert (=> b!94150 m!101149))

(declare-fun m!101151 () Bool)

(assert (=> b!94150 m!101151))

(declare-fun m!101153 () Bool)

(assert (=> b!94150 m!101153))

(declare-fun m!101155 () Bool)

(assert (=> b!94150 m!101155))

(assert (=> b!94150 m!101101))

(declare-fun m!101157 () Bool)

(assert (=> b!94150 m!101157))

(declare-fun m!101159 () Bool)

(assert (=> b!94150 m!101159))

(declare-fun m!101161 () Bool)

(assert (=> b!94150 m!101161))

(assert (=> b!94150 m!101157))

(declare-fun m!101163 () Bool)

(assert (=> b!94150 m!101163))

(assert (=> b!94150 m!101145))

(declare-fun m!101165 () Bool)

(assert (=> b!94150 m!101165))

(declare-fun m!101167 () Bool)

(assert (=> b!94150 m!101167))

(declare-fun m!101169 () Bool)

(assert (=> b!94150 m!101169))

(declare-fun m!101171 () Bool)

(assert (=> b!94150 m!101171))

(declare-fun m!101173 () Bool)

(assert (=> b!94150 m!101173))

(assert (=> b!94150 m!101149))

(assert (=> b!94150 m!101171))

(assert (=> b!94150 m!101153))

(declare-fun m!101175 () Bool)

(assert (=> b!94150 m!101175))

(declare-fun m!101177 () Bool)

(assert (=> b!94150 m!101177))

(assert (=> b!93981 d!24551))

(declare-fun d!24553 () Bool)

(declare-fun e!61501 () Bool)

(assert (=> d!24553 e!61501))

(declare-fun res!47688 () Bool)

(assert (=> d!24553 (=> res!47688 e!61501)))

(declare-fun lt!46579 () Bool)

(assert (=> d!24553 (= res!47688 (not lt!46579))))

(declare-fun lt!46577 () Bool)

(assert (=> d!24553 (= lt!46579 lt!46577)))

(declare-fun lt!46578 () Unit!2822)

(declare-fun e!61502 () Unit!2822)

(assert (=> d!24553 (= lt!46578 e!61502)))

(declare-fun c!15687 () Bool)

(assert (=> d!24553 (= c!15687 lt!46577)))

(declare-fun containsKey!151 (List!1600 (_ BitVec 64)) Bool)

(assert (=> d!24553 (= lt!46577 (containsKey!151 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24553 (= (contains!797 lt!46466 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!46579)))

(declare-fun b!94160 () Bool)

(declare-fun lt!46580 () Unit!2822)

(assert (=> b!94160 (= e!61502 lt!46580)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!100 (List!1600 (_ BitVec 64)) Unit!2822)

(assert (=> b!94160 (= lt!46580 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-datatypes ((Option!153 0))(
  ( (Some!152 (v!2767 V!3131)) (None!151) )
))
(declare-fun isDefined!101 (Option!153) Bool)

(declare-fun getValueByKey!147 (List!1600 (_ BitVec 64)) Option!153)

(assert (=> b!94160 (isDefined!101 (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94161 () Bool)

(declare-fun Unit!2827 () Unit!2822)

(assert (=> b!94161 (= e!61502 Unit!2827)))

(declare-fun b!94162 () Bool)

(assert (=> b!94162 (= e!61501 (isDefined!101 (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24553 c!15687) b!94160))

(assert (= (and d!24553 (not c!15687)) b!94161))

(assert (= (and d!24553 (not res!47688)) b!94162))

(assert (=> d!24553 m!101017))

(declare-fun m!101179 () Bool)

(assert (=> d!24553 m!101179))

(assert (=> b!94160 m!101017))

(declare-fun m!101181 () Bool)

(assert (=> b!94160 m!101181))

(assert (=> b!94160 m!101017))

(declare-fun m!101183 () Bool)

(assert (=> b!94160 m!101183))

(assert (=> b!94160 m!101183))

(declare-fun m!101185 () Bool)

(assert (=> b!94160 m!101185))

(assert (=> b!94162 m!101017))

(assert (=> b!94162 m!101183))

(assert (=> b!94162 m!101183))

(assert (=> b!94162 m!101185))

(assert (=> b!93976 d!24553))

(declare-fun b!94243 () Bool)

(declare-fun lt!46639 () Unit!2822)

(declare-fun lt!46651 () Unit!2822)

(assert (=> b!94243 (= lt!46639 lt!46651)))

(declare-fun call!9446 () ListLongMap!1539)

(declare-datatypes ((SeekEntryResult!261 0))(
  ( (MissingZero!261 (index!3185 (_ BitVec 32))) (Found!261 (index!3186 (_ BitVec 32))) (Intermediate!261 (undefined!1073 Bool) (index!3187 (_ BitVec 32)) (x!12665 (_ BitVec 32))) (Undefined!261) (MissingVacant!261 (index!3188 (_ BitVec 32))) )
))
(declare-fun lt!46636 () SeekEntryResult!261)

(assert (=> b!94243 (contains!797 call!9446 (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))))

(declare-fun lt!46653 () array!4202)

(declare-fun lemmaValidKeyInArrayIsInListMap!97 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) Unit!2822)

(assert (=> b!94243 (= lt!46651 (lemmaValidKeyInArrayIsInListMap!97 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (defaultEntry!2436 newMap!16)))))

(assert (=> b!94243 (= lt!46653 (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))))

(declare-fun lt!46635 () Unit!2822)

(declare-fun lt!46661 () Unit!2822)

(assert (=> b!94243 (= lt!46635 lt!46661)))

(declare-fun call!9455 () ListLongMap!1539)

(declare-fun call!9451 () ListLongMap!1539)

(assert (=> b!94243 (= call!9455 call!9451)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2822)

(assert (=> b!94243 (= lt!46661 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46652 () Unit!2822)

(declare-fun e!61554 () Unit!2822)

(assert (=> b!94243 (= lt!46652 e!61554)))

(declare-fun c!15718 () Bool)

(declare-fun call!9441 () Bool)

(assert (=> b!94243 (= c!15718 call!9441)))

(declare-fun e!61561 () tuple2!2332)

(assert (=> b!94243 (= e!61561 (tuple2!2333 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (_size!466 newMap!16) (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (_vacant!466 newMap!16))))))

(declare-fun b!94244 () Bool)

(declare-fun res!47721 () Bool)

(declare-fun e!61565 () Bool)

(assert (=> b!94244 (=> (not res!47721) (not e!61565))))

(declare-fun lt!46648 () SeekEntryResult!261)

(assert (=> b!94244 (= res!47721 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3185 lt!46648)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!24555 () Bool)

(declare-fun e!61546 () Bool)

(assert (=> d!24555 e!61546))

(declare-fun res!47720 () Bool)

(assert (=> d!24555 (=> (not res!47720) (not e!61546))))

(declare-fun lt!46650 () tuple2!2332)

(assert (=> d!24555 (= res!47720 (valid!376 (_2!1176 lt!46650)))))

(declare-fun e!61557 () tuple2!2332)

(assert (=> d!24555 (= lt!46650 e!61557)))

(declare-fun c!15725 () Bool)

(assert (=> d!24555 (= c!15725 (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvneg (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24555 (valid!376 newMap!16)))

(assert (=> d!24555 (= (update!142 newMap!16 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!46650)))

(declare-fun b!94245 () Bool)

(declare-fun res!47729 () Bool)

(declare-fun call!9439 () Bool)

(assert (=> b!94245 (= res!47729 call!9439)))

(declare-fun e!61563 () Bool)

(assert (=> b!94245 (=> (not res!47729) (not e!61563))))

(declare-fun b!94246 () Bool)

(declare-fun e!61547 () ListLongMap!1539)

(declare-fun call!9453 () ListLongMap!1539)

(assert (=> b!94246 (= e!61547 call!9453)))

(declare-fun bm!9429 () Bool)

(declare-fun call!9454 () SeekEntryResult!261)

(declare-fun call!9437 () SeekEntryResult!261)

(assert (=> bm!9429 (= call!9454 call!9437)))

(declare-fun b!94247 () Bool)

(declare-fun c!15721 () Bool)

(declare-fun lt!46647 () SeekEntryResult!261)

(assert (=> b!94247 (= c!15721 ((_ is MissingVacant!261) lt!46647))))

(declare-fun e!61559 () Bool)

(declare-fun e!61551 () Bool)

(assert (=> b!94247 (= e!61559 e!61551)))

(declare-fun bm!9430 () Bool)

(declare-fun lt!46640 () (_ BitVec 32))

(declare-fun c!15724 () Bool)

(declare-fun lt!46643 () (_ BitVec 32))

(assert (=> bm!9430 (= call!9453 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun b!94248 () Bool)

(declare-fun call!9436 () Bool)

(assert (=> b!94248 (= e!61565 (not call!9436))))

(declare-fun bm!9431 () Bool)

(declare-fun call!9448 () Bool)

(declare-fun call!9438 () Bool)

(assert (=> bm!9431 (= call!9448 call!9438)))

(declare-fun b!94249 () Bool)

(declare-fun e!61564 () Bool)

(declare-fun call!9444 () ListLongMap!1539)

(declare-fun call!9447 () ListLongMap!1539)

(assert (=> b!94249 (= e!61564 (= call!9444 call!9447))))

(declare-fun b!94250 () Bool)

(declare-fun e!61553 () Bool)

(assert (=> b!94250 (= e!61553 (not call!9436))))

(declare-fun call!9443 () Bool)

(declare-fun bm!9432 () Bool)

(assert (=> bm!9432 (= call!9443 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94251 () Bool)

(declare-fun lt!46641 () Unit!2822)

(declare-fun lt!46657 () Unit!2822)

(assert (=> b!94251 (= lt!46641 lt!46657)))

(declare-fun call!9435 () ListLongMap!1539)

(declare-fun call!9440 () ListLongMap!1539)

(assert (=> b!94251 (= call!9435 call!9440)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!39 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2822)

(assert (=> b!94251 (= lt!46657 (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46640 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)))))

(assert (=> b!94251 (= lt!46640 (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!61560 () tuple2!2332)

(assert (=> b!94251 (= e!61560 (tuple2!2333 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (_size!466 newMap!16) (_keys!4118 newMap!16) (_values!2419 newMap!16) (_vacant!466 newMap!16))))))

(declare-fun b!94252 () Bool)

(declare-fun e!61556 () Bool)

(assert (=> b!94252 (= e!61556 ((_ is Undefined!261) lt!46648))))

(declare-fun b!94253 () Bool)

(assert (=> b!94253 (= e!61551 ((_ is Undefined!261) lt!46647))))

(declare-fun b!94254 () Bool)

(declare-fun c!15720 () Bool)

(assert (=> b!94254 (= c!15720 ((_ is MissingVacant!261) lt!46636))))

(declare-fun e!61548 () tuple2!2332)

(declare-fun e!61549 () tuple2!2332)

(assert (=> b!94254 (= e!61548 e!61549)))

(declare-fun bm!9433 () Bool)

(assert (=> bm!9433 (= call!9435 call!9455)))

(declare-fun bm!9434 () Bool)

(declare-fun call!9450 () Bool)

(assert (=> bm!9434 (= call!9450 call!9443)))

(declare-fun bm!9435 () Bool)

(declare-fun c!15726 () Bool)

(declare-fun c!15716 () Bool)

(assert (=> bm!9435 (= c!15726 c!15716)))

(assert (=> bm!9435 (= call!9441 (contains!797 e!61547 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94255 () Bool)

(declare-fun lt!46638 () Unit!2822)

(declare-fun e!61545 () Unit!2822)

(assert (=> b!94255 (= lt!46638 e!61545)))

(declare-fun c!15715 () Bool)

(assert (=> b!94255 (= c!15715 call!9441)))

(assert (=> b!94255 (= e!61548 (tuple2!2333 false newMap!16))))

(declare-fun e!61552 () Bool)

(declare-fun b!94256 () Bool)

(assert (=> b!94256 (= e!61552 (= call!9444 (+!136 call!9447 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9436 () Bool)

(declare-fun call!9434 () Bool)

(assert (=> bm!9436 (= call!9434 call!9439)))

(declare-fun b!94257 () Bool)

(declare-fun res!47726 () Bool)

(declare-fun e!61558 () Bool)

(assert (=> b!94257 (=> (not res!47726) (not e!61558))))

(assert (=> b!94257 (= res!47726 call!9434)))

(assert (=> b!94257 (= e!61559 e!61558)))

(declare-fun bm!9437 () Bool)

(declare-fun call!9433 () tuple2!2332)

(declare-fun updateHelperNewKey!39 (LongMapFixedSize!834 (_ BitVec 64) V!3131 (_ BitVec 32)) tuple2!2332)

(assert (=> bm!9437 (= call!9433 (updateHelperNewKey!39 newMap!16 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))

(declare-fun b!94258 () Bool)

(declare-fun res!47717 () Bool)

(assert (=> b!94258 (=> (not res!47717) (not e!61565))))

(assert (=> b!94258 (= res!47717 call!9448)))

(declare-fun e!61555 () Bool)

(assert (=> b!94258 (= e!61555 e!61565)))

(declare-fun c!15714 () Bool)

(declare-fun bm!9438 () Bool)

(declare-fun call!9449 () Bool)

(declare-fun lt!46645 () SeekEntryResult!261)

(declare-fun c!15719 () Bool)

(declare-fun lt!46659 () SeekEntryResult!261)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!9438 (= call!9449 (inRange!0 (ite c!15716 (ite c!15715 (index!3186 lt!46645) (ite c!15714 (index!3185 lt!46647) (index!3188 lt!46647))) (ite c!15718 (index!3186 lt!46659) (ite c!15719 (index!3185 lt!46648) (index!3188 lt!46648)))) (mask!6511 newMap!16)))))

(declare-fun b!94259 () Bool)

(assert (=> b!94259 (= e!61546 e!61564)))

(declare-fun c!15723 () Bool)

(assert (=> b!94259 (= c!15723 (_1!1176 lt!46650))))

(declare-fun b!94260 () Bool)

(assert (=> b!94260 (= e!61563 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46645)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94261 () Bool)

(declare-fun res!47718 () Bool)

(assert (=> b!94261 (= res!47718 call!9438)))

(declare-fun e!61562 () Bool)

(assert (=> b!94261 (=> (not res!47718) (not e!61562))))

(declare-fun bm!9439 () Bool)

(assert (=> bm!9439 (= call!9447 (map!1243 newMap!16))))

(declare-fun bm!9440 () Bool)

(assert (=> bm!9440 (= call!9446 (getCurrentListMap!466 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun b!94262 () Bool)

(declare-fun res!47719 () Bool)

(assert (=> b!94262 (=> (not res!47719) (not e!61558))))

(assert (=> b!94262 (= res!47719 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3185 lt!46647)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94263 () Bool)

(declare-fun lt!46644 () Unit!2822)

(assert (=> b!94263 (= e!61554 lt!46644)))

(declare-fun call!9445 () Unit!2822)

(assert (=> b!94263 (= lt!46644 call!9445)))

(assert (=> b!94263 (= lt!46659 call!9454)))

(declare-fun res!47730 () Bool)

(assert (=> b!94263 (= res!47730 ((_ is Found!261) lt!46659))))

(assert (=> b!94263 (=> (not res!47730) (not e!61562))))

(assert (=> b!94263 e!61562))

(declare-fun b!94264 () Bool)

(assert (=> b!94264 (= e!61564 e!61552)))

(declare-fun res!47727 () Bool)

(assert (=> b!94264 (= res!47727 (contains!797 call!9444 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94264 (=> (not res!47727) (not e!61552))))

(declare-fun bm!9441 () Bool)

(declare-fun call!9442 () Unit!2822)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2822)

(assert (=> bm!9441 (= call!9442 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(declare-fun b!94265 () Bool)

(assert (=> b!94265 (= e!61557 e!61548)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4200 (_ BitVec 32)) SeekEntryResult!261)

(assert (=> b!94265 (= lt!46636 (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> b!94265 (= c!15716 ((_ is Undefined!261) lt!46636))))

(declare-fun bm!9442 () Bool)

(assert (=> bm!9442 (= call!9436 call!9443)))

(declare-fun b!94266 () Bool)

(declare-fun lt!46660 () tuple2!2332)

(assert (=> b!94266 (= lt!46660 call!9433)))

(assert (=> b!94266 (= e!61561 (tuple2!2333 (_1!1176 lt!46660) (_2!1176 lt!46660)))))

(declare-fun b!94267 () Bool)

(assert (=> b!94267 (= e!61562 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46659)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun bm!9443 () Bool)

(assert (=> bm!9443 (= call!9444 (map!1243 (_2!1176 lt!46650)))))

(declare-fun bm!9444 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2822)

(assert (=> bm!9444 (= call!9445 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9445 () Bool)

(assert (=> bm!9445 (= call!9451 (getCurrentListMap!466 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun b!94268 () Bool)

(assert (=> b!94268 (= e!61557 e!61560)))

(assert (=> b!94268 (= c!15724 (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94269 () Bool)

(assert (=> b!94269 (= e!61556 e!61553)))

(declare-fun res!47724 () Bool)

(assert (=> b!94269 (= res!47724 call!9448)))

(assert (=> b!94269 (=> (not res!47724) (not e!61553))))

(declare-fun b!94270 () Bool)

(declare-fun c!15717 () Bool)

(assert (=> b!94270 (= c!15717 ((_ is MissingVacant!261) lt!46648))))

(assert (=> b!94270 (= e!61555 e!61556)))

(declare-fun bm!9446 () Bool)

(declare-fun call!9452 () ListLongMap!1539)

(assert (=> bm!9446 (= call!9452 call!9451)))

(declare-fun bm!9447 () Bool)

(assert (=> bm!9447 (= call!9437 (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun bm!9448 () Bool)

(assert (=> bm!9448 (= call!9438 call!9449)))

(declare-fun b!94271 () Bool)

(assert (=> b!94271 (= e!61547 call!9446)))

(declare-fun b!94272 () Bool)

(declare-fun lt!46656 () Unit!2822)

(assert (=> b!94272 (= e!61545 lt!46656)))

(assert (=> b!94272 (= lt!46656 call!9442)))

(declare-fun call!9432 () SeekEntryResult!261)

(assert (=> b!94272 (= lt!46647 call!9432)))

(assert (=> b!94272 (= c!15714 ((_ is MissingZero!261) lt!46647))))

(assert (=> b!94272 e!61559))

(declare-fun bm!9449 () Bool)

(assert (=> bm!9449 (= call!9455 (+!136 (ite c!15725 call!9452 call!9453) (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94273 () Bool)

(declare-fun lt!46654 () tuple2!2332)

(assert (=> b!94273 (= e!61549 (tuple2!2333 (_1!1176 lt!46654) (_2!1176 lt!46654)))))

(assert (=> b!94273 (= lt!46654 call!9433)))

(declare-fun b!94274 () Bool)

(assert (=> b!94274 (= e!61558 (not call!9450))))

(declare-fun b!94275 () Bool)

(declare-fun e!61550 () Bool)

(assert (=> b!94275 (= e!61550 (not call!9450))))

(declare-fun b!94276 () Bool)

(declare-fun res!47722 () Bool)

(assert (=> b!94276 (= res!47722 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!46648)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94276 (=> (not res!47722) (not e!61553))))

(declare-fun bm!9450 () Bool)

(assert (=> bm!9450 (= call!9440 call!9453)))

(declare-fun b!94277 () Bool)

(declare-fun res!47725 () Bool)

(assert (=> b!94277 (= res!47725 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!46647)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94277 (=> (not res!47725) (not e!61550))))

(declare-fun bm!9451 () Bool)

(assert (=> bm!9451 (= call!9432 call!9437)))

(declare-fun b!94278 () Bool)

(declare-fun lt!46637 () Unit!2822)

(declare-fun lt!46646 () Unit!2822)

(assert (=> b!94278 (= lt!46637 lt!46646)))

(assert (=> b!94278 (= call!9435 call!9440)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2822)

(assert (=> b!94278 (= lt!46646 (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> b!94278 (= lt!46643 (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!94278 (= e!61560 (tuple2!2333 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!466 newMap!16) (_keys!4118 newMap!16) (_values!2419 newMap!16) (_vacant!466 newMap!16))))))

(declare-fun bm!9452 () Bool)

(assert (=> bm!9452 (= call!9439 call!9449)))

(declare-fun b!94279 () Bool)

(assert (=> b!94279 (= e!61551 e!61550)))

(declare-fun res!47723 () Bool)

(assert (=> b!94279 (= res!47723 call!9434)))

(assert (=> b!94279 (=> (not res!47723) (not e!61550))))

(declare-fun b!94280 () Bool)

(assert (=> b!94280 (= e!61549 e!61561)))

(declare-fun c!15722 () Bool)

(assert (=> b!94280 (= c!15722 ((_ is MissingZero!261) lt!46636))))

(declare-fun b!94281 () Bool)

(declare-fun Unit!2828 () Unit!2822)

(assert (=> b!94281 (= e!61545 Unit!2828)))

(declare-fun lt!46655 () Unit!2822)

(assert (=> b!94281 (= lt!46655 call!9445)))

(assert (=> b!94281 (= lt!46645 call!9432)))

(declare-fun res!47728 () Bool)

(assert (=> b!94281 (= res!47728 ((_ is Found!261) lt!46645))))

(assert (=> b!94281 (=> (not res!47728) (not e!61563))))

(assert (=> b!94281 e!61563))

(declare-fun lt!46658 () Unit!2822)

(assert (=> b!94281 (= lt!46658 lt!46655)))

(assert (=> b!94281 false))

(declare-fun b!94282 () Bool)

(declare-fun Unit!2829 () Unit!2822)

(assert (=> b!94282 (= e!61554 Unit!2829)))

(declare-fun lt!46649 () Unit!2822)

(assert (=> b!94282 (= lt!46649 call!9442)))

(assert (=> b!94282 (= lt!46648 call!9454)))

(assert (=> b!94282 (= c!15719 ((_ is MissingZero!261) lt!46648))))

(assert (=> b!94282 e!61555))

(declare-fun lt!46642 () Unit!2822)

(assert (=> b!94282 (= lt!46642 lt!46649)))

(assert (=> b!94282 false))

(assert (= (and d!24555 c!15725) b!94268))

(assert (= (and d!24555 (not c!15725)) b!94265))

(assert (= (and b!94268 c!15724) b!94251))

(assert (= (and b!94268 (not c!15724)) b!94278))

(assert (= (or b!94251 b!94278) bm!9450))

(assert (= (or b!94251 b!94278) bm!9446))

(assert (= (or b!94251 b!94278) bm!9433))

(assert (= (and b!94265 c!15716) b!94255))

(assert (= (and b!94265 (not c!15716)) b!94254))

(assert (= (and b!94255 c!15715) b!94281))

(assert (= (and b!94255 (not c!15715)) b!94272))

(assert (= (and b!94281 res!47728) b!94245))

(assert (= (and b!94245 res!47729) b!94260))

(assert (= (and b!94272 c!15714) b!94257))

(assert (= (and b!94272 (not c!15714)) b!94247))

(assert (= (and b!94257 res!47726) b!94262))

(assert (= (and b!94262 res!47719) b!94274))

(assert (= (and b!94247 c!15721) b!94279))

(assert (= (and b!94247 (not c!15721)) b!94253))

(assert (= (and b!94279 res!47723) b!94277))

(assert (= (and b!94277 res!47725) b!94275))

(assert (= (or b!94257 b!94279) bm!9436))

(assert (= (or b!94274 b!94275) bm!9434))

(assert (= (or b!94245 bm!9436) bm!9452))

(assert (= (or b!94281 b!94272) bm!9451))

(assert (= (and b!94254 c!15720) b!94273))

(assert (= (and b!94254 (not c!15720)) b!94280))

(assert (= (and b!94280 c!15722) b!94266))

(assert (= (and b!94280 (not c!15722)) b!94243))

(assert (= (and b!94243 c!15718) b!94263))

(assert (= (and b!94243 (not c!15718)) b!94282))

(assert (= (and b!94263 res!47730) b!94261))

(assert (= (and b!94261 res!47718) b!94267))

(assert (= (and b!94282 c!15719) b!94258))

(assert (= (and b!94282 (not c!15719)) b!94270))

(assert (= (and b!94258 res!47717) b!94244))

(assert (= (and b!94244 res!47721) b!94248))

(assert (= (and b!94270 c!15717) b!94269))

(assert (= (and b!94270 (not c!15717)) b!94252))

(assert (= (and b!94269 res!47724) b!94276))

(assert (= (and b!94276 res!47722) b!94250))

(assert (= (or b!94258 b!94269) bm!9431))

(assert (= (or b!94248 b!94250) bm!9442))

(assert (= (or b!94261 bm!9431) bm!9448))

(assert (= (or b!94263 b!94282) bm!9429))

(assert (= (or b!94273 b!94266) bm!9437))

(assert (= (or b!94281 b!94263) bm!9444))

(assert (= (or bm!9452 bm!9448) bm!9438))

(assert (= (or b!94255 b!94243) bm!9440))

(assert (= (or bm!9451 bm!9429) bm!9447))

(assert (= (or b!94272 b!94282) bm!9441))

(assert (= (or bm!9434 bm!9442) bm!9432))

(assert (= (or b!94255 b!94243) bm!9435))

(assert (= (and bm!9435 c!15726) b!94271))

(assert (= (and bm!9435 (not c!15726)) b!94246))

(assert (= (or bm!9446 b!94243) bm!9445))

(assert (= (or bm!9450 b!94243 b!94246) bm!9430))

(assert (= (or bm!9433 b!94243) bm!9449))

(assert (= (and d!24555 res!47720) b!94259))

(assert (= (and b!94259 c!15723) b!94264))

(assert (= (and b!94259 (not c!15723)) b!94249))

(assert (= (and b!94264 res!47727) b!94256))

(assert (= (or b!94264 b!94256 b!94249) bm!9443))

(assert (= (or b!94256 b!94249) bm!9439))

(assert (=> b!94265 m!101017))

(declare-fun m!101187 () Bool)

(assert (=> b!94265 m!101187))

(declare-fun m!101189 () Bool)

(assert (=> b!94260 m!101189))

(declare-fun m!101191 () Bool)

(assert (=> b!94244 m!101191))

(declare-fun m!101193 () Bool)

(assert (=> b!94256 m!101193))

(assert (=> bm!9437 m!101017))

(assert (=> bm!9437 m!101015))

(declare-fun m!101195 () Bool)

(assert (=> bm!9437 m!101195))

(assert (=> b!94251 m!101015))

(declare-fun m!101197 () Bool)

(assert (=> b!94251 m!101197))

(declare-fun m!101199 () Bool)

(assert (=> b!94243 m!101199))

(declare-fun m!101201 () Bool)

(assert (=> b!94243 m!101201))

(assert (=> b!94243 m!101017))

(assert (=> b!94243 m!101015))

(declare-fun m!101203 () Bool)

(assert (=> b!94243 m!101203))

(declare-fun m!101205 () Bool)

(assert (=> b!94243 m!101205))

(assert (=> b!94243 m!101201))

(declare-fun m!101207 () Bool)

(assert (=> b!94243 m!101207))

(assert (=> bm!9447 m!101017))

(assert (=> bm!9447 m!101187))

(declare-fun m!101209 () Bool)

(assert (=> bm!9449 m!101209))

(assert (=> bm!9439 m!101043))

(declare-fun m!101211 () Bool)

(assert (=> b!94262 m!101211))

(declare-fun m!101213 () Bool)

(assert (=> d!24555 m!101213))

(assert (=> d!24555 m!101041))

(declare-fun m!101215 () Bool)

(assert (=> bm!9438 m!101215))

(declare-fun m!101217 () Bool)

(assert (=> b!94277 m!101217))

(assert (=> bm!9432 m!101017))

(declare-fun m!101219 () Bool)

(assert (=> bm!9432 m!101219))

(declare-fun m!101221 () Bool)

(assert (=> bm!9440 m!101221))

(declare-fun m!101223 () Bool)

(assert (=> bm!9430 m!101223))

(assert (=> b!94278 m!101015))

(declare-fun m!101225 () Bool)

(assert (=> b!94278 m!101225))

(declare-fun m!101227 () Bool)

(assert (=> b!94276 m!101227))

(assert (=> bm!9435 m!101017))

(declare-fun m!101229 () Bool)

(assert (=> bm!9435 m!101229))

(declare-fun m!101231 () Bool)

(assert (=> b!94267 m!101231))

(assert (=> bm!9441 m!101017))

(declare-fun m!101233 () Bool)

(assert (=> bm!9441 m!101233))

(declare-fun m!101235 () Bool)

(assert (=> bm!9443 m!101235))

(assert (=> b!94264 m!101017))

(declare-fun m!101237 () Bool)

(assert (=> b!94264 m!101237))

(assert (=> bm!9445 m!101199))

(declare-fun m!101239 () Bool)

(assert (=> bm!9445 m!101239))

(assert (=> bm!9444 m!101017))

(declare-fun m!101241 () Bool)

(assert (=> bm!9444 m!101241))

(assert (=> b!93976 d!24555))

(declare-fun d!24557 () Bool)

(declare-fun c!15729 () Bool)

(assert (=> d!24557 (= c!15729 ((_ is ValueCellFull!963) (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61568 () V!3131)

(assert (=> d!24557 (= (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61568)))

(declare-fun b!94287 () Bool)

(declare-fun get!1281 (ValueCell!963 V!3131) V!3131)

(assert (=> b!94287 (= e!61568 (get!1281 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94288 () Bool)

(declare-fun get!1282 (ValueCell!963 V!3131) V!3131)

(assert (=> b!94288 (= e!61568 (get!1282 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24557 c!15729) b!94287))

(assert (= (and d!24557 (not c!15729)) b!94288))

(assert (=> b!94287 m!101011))

(assert (=> b!94287 m!101013))

(declare-fun m!101243 () Bool)

(assert (=> b!94287 m!101243))

(assert (=> b!94288 m!101011))

(assert (=> b!94288 m!101013))

(declare-fun m!101245 () Bool)

(assert (=> b!94288 m!101245))

(assert (=> b!93976 d!24557))

(declare-fun mapIsEmpty!3685 () Bool)

(declare-fun mapRes!3685 () Bool)

(assert (=> mapIsEmpty!3685 mapRes!3685))

(declare-fun b!94296 () Bool)

(declare-fun e!61573 () Bool)

(assert (=> b!94296 (= e!61573 tp_is_empty!2613)))

(declare-fun b!94295 () Bool)

(declare-fun e!61574 () Bool)

(assert (=> b!94295 (= e!61574 tp_is_empty!2613)))

(declare-fun condMapEmpty!3685 () Bool)

(declare-fun mapDefault!3685 () ValueCell!963)

(assert (=> mapNonEmpty!3676 (= condMapEmpty!3685 (= mapRest!3676 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3685)))))

(assert (=> mapNonEmpty!3676 (= tp!9446 (and e!61573 mapRes!3685))))

(declare-fun mapNonEmpty!3685 () Bool)

(declare-fun tp!9463 () Bool)

(assert (=> mapNonEmpty!3685 (= mapRes!3685 (and tp!9463 e!61574))))

(declare-fun mapRest!3685 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapValue!3685 () ValueCell!963)

(declare-fun mapKey!3685 () (_ BitVec 32))

(assert (=> mapNonEmpty!3685 (= mapRest!3676 (store mapRest!3685 mapKey!3685 mapValue!3685))))

(assert (= (and mapNonEmpty!3676 condMapEmpty!3685) mapIsEmpty!3685))

(assert (= (and mapNonEmpty!3676 (not condMapEmpty!3685)) mapNonEmpty!3685))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!963) mapValue!3685)) b!94295))

(assert (= (and mapNonEmpty!3676 ((_ is ValueCellFull!963) mapDefault!3685)) b!94296))

(declare-fun m!101247 () Bool)

(assert (=> mapNonEmpty!3685 m!101247))

(declare-fun mapIsEmpty!3686 () Bool)

(declare-fun mapRes!3686 () Bool)

(assert (=> mapIsEmpty!3686 mapRes!3686))

(declare-fun b!94298 () Bool)

(declare-fun e!61575 () Bool)

(assert (=> b!94298 (= e!61575 tp_is_empty!2613)))

(declare-fun b!94297 () Bool)

(declare-fun e!61576 () Bool)

(assert (=> b!94297 (= e!61576 tp_is_empty!2613)))

(declare-fun condMapEmpty!3686 () Bool)

(declare-fun mapDefault!3686 () ValueCell!963)

(assert (=> mapNonEmpty!3675 (= condMapEmpty!3686 (= mapRest!3675 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3686)))))

(assert (=> mapNonEmpty!3675 (= tp!9448 (and e!61575 mapRes!3686))))

(declare-fun mapNonEmpty!3686 () Bool)

(declare-fun tp!9464 () Bool)

(assert (=> mapNonEmpty!3686 (= mapRes!3686 (and tp!9464 e!61576))))

(declare-fun mapValue!3686 () ValueCell!963)

(declare-fun mapKey!3686 () (_ BitVec 32))

(declare-fun mapRest!3686 () (Array (_ BitVec 32) ValueCell!963))

(assert (=> mapNonEmpty!3686 (= mapRest!3675 (store mapRest!3686 mapKey!3686 mapValue!3686))))

(assert (= (and mapNonEmpty!3675 condMapEmpty!3686) mapIsEmpty!3686))

(assert (= (and mapNonEmpty!3675 (not condMapEmpty!3686)) mapNonEmpty!3686))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!963) mapValue!3686)) b!94297))

(assert (= (and mapNonEmpty!3675 ((_ is ValueCellFull!963) mapDefault!3686)) b!94298))

(declare-fun m!101249 () Bool)

(assert (=> mapNonEmpty!3686 m!101249))

(declare-fun b_lambda!4153 () Bool)

(assert (= b_lambda!4151 (or (and b!93975 b_free!2393) (and b!93983 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))) b_lambda!4153)))

(check-sat (not b!94137) (not b!94079) (not b!94288) (not bm!9430) (not b_lambda!4149) b_and!5747 (not b!94060) (not d!24541) (not b!94265) (not d!24547) (not b_lambda!4153) (not b!94160) (not b!94090) (not bm!9447) (not b!94078) (not mapNonEmpty!3685) (not b!94287) (not bm!9438) (not b!94256) (not b!94278) (not b!94088) (not bm!9445) (not bm!9441) (not d!24551) (not b!94151) (not b_next!2393) (not b!94080) (not d!24525) (not b!94089) (not b!94150) (not d!24555) (not bm!9376) (not b_next!2395) (not b!94243) (not bm!9443) (not b!94144) (not bm!9449) (not bm!9440) (not bm!9432) (not d!24531) (not b!94140) (not bm!9435) (not bm!9437) (not b!94264) (not b!94143) (not bm!9359) (not b!94162) (not bm!9377) (not bm!9439) (not d!24549) (not b!94251) (not b!94142) (not d!24553) (not bm!9444) (not mapNonEmpty!3686) tp_is_empty!2613 (not bm!9375) (not d!24527) (not b!94136) b_and!5745 (not b!94065) (not bm!9374))
(check-sat b_and!5745 b_and!5747 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun d!24559 () Bool)

(assert (=> d!24559 (isDefined!101 (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!46664 () Unit!2822)

(declare-fun choose!568 (List!1600 (_ BitVec 64)) Unit!2822)

(assert (=> d!24559 (= lt!46664 (choose!568 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61579 () Bool)

(assert (=> d!24559 e!61579))

(declare-fun res!47733 () Bool)

(assert (=> d!24559 (=> (not res!47733) (not e!61579))))

(declare-fun isStrictlySorted!297 (List!1600) Bool)

(assert (=> d!24559 (= res!47733 (isStrictlySorted!297 (toList!785 lt!46466)))))

(assert (=> d!24559 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!46664)))

(declare-fun b!94301 () Bool)

(assert (=> b!94301 (= e!61579 (containsKey!151 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24559 res!47733) b!94301))

(assert (=> d!24559 m!101017))

(assert (=> d!24559 m!101183))

(assert (=> d!24559 m!101183))

(assert (=> d!24559 m!101185))

(assert (=> d!24559 m!101017))

(declare-fun m!101251 () Bool)

(assert (=> d!24559 m!101251))

(declare-fun m!101253 () Bool)

(assert (=> d!24559 m!101253))

(assert (=> b!94301 m!101017))

(assert (=> b!94301 m!101179))

(assert (=> b!94160 d!24559))

(declare-fun d!24561 () Bool)

(declare-fun isEmpty!355 (Option!153) Bool)

(assert (=> d!24561 (= (isDefined!101 (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) (not (isEmpty!355 (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun bs!3852 () Bool)

(assert (= bs!3852 d!24561))

(assert (=> bs!3852 m!101183))

(declare-fun m!101255 () Bool)

(assert (=> bs!3852 m!101255))

(assert (=> b!94160 d!24561))

(declare-fun e!61585 () Option!153)

(declare-fun b!94312 () Bool)

(assert (=> b!94312 (= e!61585 (getValueByKey!147 (t!5506 (toList!785 lt!46466)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94310 () Bool)

(declare-fun e!61584 () Option!153)

(assert (=> b!94310 (= e!61584 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46466)))))))

(declare-fun b!94313 () Bool)

(assert (=> b!94313 (= e!61585 None!151)))

(declare-fun b!94311 () Bool)

(assert (=> b!94311 (= e!61584 e!61585)))

(declare-fun c!15735 () Bool)

(assert (=> b!94311 (= c!15735 (and ((_ is Cons!1596) (toList!785 lt!46466)) (not (= (_1!1177 (h!2188 (toList!785 lt!46466))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun d!24563 () Bool)

(declare-fun c!15734 () Bool)

(assert (=> d!24563 (= c!15734 (and ((_ is Cons!1596) (toList!785 lt!46466)) (= (_1!1177 (h!2188 (toList!785 lt!46466))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24563 (= (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!61584)))

(assert (= (and d!24563 c!15734) b!94310))

(assert (= (and d!24563 (not c!15734)) b!94311))

(assert (= (and b!94311 c!15735) b!94312))

(assert (= (and b!94311 (not c!15735)) b!94313))

(assert (=> b!94312 m!101017))

(declare-fun m!101257 () Bool)

(assert (=> b!94312 m!101257))

(assert (=> b!94160 d!24563))

(declare-fun bm!9453 () Bool)

(declare-fun call!9458 () Bool)

(declare-fun lt!46665 () ListLongMap!1539)

(assert (=> bm!9453 (= call!9458 (contains!797 lt!46665 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94314 () Bool)

(declare-fun e!61593 () ListLongMap!1539)

(declare-fun e!61597 () ListLongMap!1539)

(assert (=> b!94314 (= e!61593 e!61597)))

(declare-fun c!15739 () Bool)

(assert (=> b!94314 (= c!15739 (and (not (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94315 () Bool)

(declare-fun e!61595 () ListLongMap!1539)

(declare-fun call!9460 () ListLongMap!1539)

(assert (=> b!94315 (= e!61595 call!9460)))

(declare-fun b!94316 () Bool)

(declare-fun res!47735 () Bool)

(declare-fun e!61587 () Bool)

(assert (=> b!94316 (=> (not res!47735) (not e!61587))))

(declare-fun e!61588 () Bool)

(assert (=> b!94316 (= res!47735 e!61588)))

(declare-fun res!47738 () Bool)

(assert (=> b!94316 (=> res!47738 e!61588)))

(declare-fun e!61589 () Bool)

(assert (=> b!94316 (= res!47738 (not e!61589))))

(declare-fun res!47741 () Bool)

(assert (=> b!94316 (=> (not res!47741) (not e!61589))))

(assert (=> b!94316 (= res!47741 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun call!9461 () ListLongMap!1539)

(declare-fun b!94317 () Bool)

(assert (=> b!94317 (= e!61593 (+!136 call!9461 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(declare-fun b!94319 () Bool)

(declare-fun res!47740 () Bool)

(assert (=> b!94319 (=> (not res!47740) (not e!61587))))

(declare-fun e!61592 () Bool)

(assert (=> b!94319 (= res!47740 e!61592)))

(declare-fun c!15737 () Bool)

(assert (=> b!94319 (= c!15737 (not (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94320 () Bool)

(assert (=> b!94320 (= e!61592 (not call!9458))))

(declare-fun b!94321 () Bool)

(declare-fun e!61586 () Bool)

(assert (=> b!94321 (= e!61586 (= (apply!90 lt!46665 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94321 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_values!2419 newMap!16))))))

(assert (=> b!94321 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94322 () Bool)

(assert (=> b!94322 (= e!61597 call!9460)))

(declare-fun e!61590 () Bool)

(declare-fun b!94323 () Bool)

(assert (=> b!94323 (= e!61590 (= (apply!90 lt!46665 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))

(declare-fun b!94324 () Bool)

(declare-fun e!61594 () Bool)

(assert (=> b!94324 (= e!61594 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94325 () Bool)

(assert (=> b!94325 (= e!61589 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9454 () Bool)

(declare-fun call!9457 () ListLongMap!1539)

(assert (=> bm!9454 (= call!9457 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9455 () Bool)

(declare-fun call!9462 () Bool)

(assert (=> bm!9455 (= call!9462 (contains!797 lt!46665 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94326 () Bool)

(declare-fun e!61596 () Unit!2822)

(declare-fun Unit!2830 () Unit!2822)

(assert (=> b!94326 (= e!61596 Unit!2830)))

(declare-fun bm!9456 () Bool)

(declare-fun call!9456 () ListLongMap!1539)

(declare-fun call!9459 () ListLongMap!1539)

(declare-fun c!15740 () Bool)

(assert (=> bm!9456 (= call!9461 (+!136 (ite c!15740 call!9457 (ite c!15739 call!9456 call!9459)) (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun b!94327 () Bool)

(declare-fun e!61591 () Bool)

(assert (=> b!94327 (= e!61587 e!61591)))

(declare-fun c!15741 () Bool)

(assert (=> b!94327 (= c!15741 (not (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94328 () Bool)

(declare-fun c!15736 () Bool)

(assert (=> b!94328 (= c!15736 (and (not (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94328 (= e!61597 e!61595)))

(declare-fun b!94329 () Bool)

(assert (=> b!94329 (= e!61591 (not call!9462))))

(declare-fun d!24565 () Bool)

(assert (=> d!24565 e!61587))

(declare-fun res!47736 () Bool)

(assert (=> d!24565 (=> (not res!47736) (not e!61587))))

(assert (=> d!24565 (= res!47736 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!46670 () ListLongMap!1539)

(assert (=> d!24565 (= lt!46665 lt!46670)))

(declare-fun lt!46684 () Unit!2822)

(assert (=> d!24565 (= lt!46684 e!61596)))

(declare-fun c!15738 () Bool)

(assert (=> d!24565 (= c!15738 e!61594)))

(declare-fun res!47742 () Bool)

(assert (=> d!24565 (=> (not res!47742) (not e!61594))))

(assert (=> d!24565 (= res!47742 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24565 (= lt!46670 e!61593)))

(assert (=> d!24565 (= c!15740 (and (not (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24565 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24565 (= (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46665)))

(declare-fun e!61598 () Bool)

(declare-fun b!94318 () Bool)

(assert (=> b!94318 (= e!61598 (= (apply!90 lt!46665 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))

(declare-fun b!94330 () Bool)

(assert (=> b!94330 (= e!61595 call!9459)))

(declare-fun bm!9457 () Bool)

(assert (=> bm!9457 (= call!9459 call!9456)))

(declare-fun b!94331 () Bool)

(declare-fun lt!46681 () Unit!2822)

(assert (=> b!94331 (= e!61596 lt!46681)))

(declare-fun lt!46673 () ListLongMap!1539)

(assert (=> b!94331 (= lt!46673 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46672 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46672 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46674 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46674 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46675 () Unit!2822)

(assert (=> b!94331 (= lt!46675 (addStillContains!66 lt!46673 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46674))))

(assert (=> b!94331 (contains!797 (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46674)))

(declare-fun lt!46680 () Unit!2822)

(assert (=> b!94331 (= lt!46680 lt!46675)))

(declare-fun lt!46666 () ListLongMap!1539)

(assert (=> b!94331 (= lt!46666 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46678 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46678 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46676 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46676 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46677 () Unit!2822)

(assert (=> b!94331 (= lt!46677 (addApplyDifferent!66 lt!46666 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46676))))

(assert (=> b!94331 (= (apply!90 (+!136 lt!46666 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46676) (apply!90 lt!46666 lt!46676))))

(declare-fun lt!46685 () Unit!2822)

(assert (=> b!94331 (= lt!46685 lt!46677)))

(declare-fun lt!46671 () ListLongMap!1539)

(assert (=> b!94331 (= lt!46671 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46679 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46679 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46686 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46686 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46669 () Unit!2822)

(assert (=> b!94331 (= lt!46669 (addApplyDifferent!66 lt!46671 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46686))))

(assert (=> b!94331 (= (apply!90 (+!136 lt!46671 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46686) (apply!90 lt!46671 lt!46686))))

(declare-fun lt!46682 () Unit!2822)

(assert (=> b!94331 (= lt!46682 lt!46669)))

(declare-fun lt!46668 () ListLongMap!1539)

(assert (=> b!94331 (= lt!46668 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46683 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46683 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46667 () (_ BitVec 64))

(assert (=> b!94331 (= lt!46667 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94331 (= lt!46681 (addApplyDifferent!66 lt!46668 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46667))))

(assert (=> b!94331 (= (apply!90 (+!136 lt!46668 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46667) (apply!90 lt!46668 lt!46667))))

(declare-fun b!94332 () Bool)

(assert (=> b!94332 (= e!61588 e!61586)))

(declare-fun res!47734 () Bool)

(assert (=> b!94332 (=> (not res!47734) (not e!61586))))

(assert (=> b!94332 (= res!47734 (contains!797 lt!46665 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94332 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9458 () Bool)

(assert (=> bm!9458 (= call!9456 call!9457)))

(declare-fun b!94333 () Bool)

(assert (=> b!94333 (= e!61592 e!61598)))

(declare-fun res!47739 () Bool)

(assert (=> b!94333 (= res!47739 call!9458)))

(assert (=> b!94333 (=> (not res!47739) (not e!61598))))

(declare-fun b!94334 () Bool)

(assert (=> b!94334 (= e!61591 e!61590)))

(declare-fun res!47737 () Bool)

(assert (=> b!94334 (= res!47737 call!9462)))

(assert (=> b!94334 (=> (not res!47737) (not e!61590))))

(declare-fun bm!9459 () Bool)

(assert (=> bm!9459 (= call!9460 call!9461)))

(assert (= (and d!24565 c!15740) b!94317))

(assert (= (and d!24565 (not c!15740)) b!94314))

(assert (= (and b!94314 c!15739) b!94322))

(assert (= (and b!94314 (not c!15739)) b!94328))

(assert (= (and b!94328 c!15736) b!94315))

(assert (= (and b!94328 (not c!15736)) b!94330))

(assert (= (or b!94315 b!94330) bm!9457))

(assert (= (or b!94322 bm!9457) bm!9458))

(assert (= (or b!94322 b!94315) bm!9459))

(assert (= (or b!94317 bm!9458) bm!9454))

(assert (= (or b!94317 bm!9459) bm!9456))

(assert (= (and d!24565 res!47742) b!94324))

(assert (= (and d!24565 c!15738) b!94331))

(assert (= (and d!24565 (not c!15738)) b!94326))

(assert (= (and d!24565 res!47736) b!94316))

(assert (= (and b!94316 res!47741) b!94325))

(assert (= (and b!94316 (not res!47738)) b!94332))

(assert (= (and b!94332 res!47734) b!94321))

(assert (= (and b!94316 res!47735) b!94319))

(assert (= (and b!94319 c!15737) b!94333))

(assert (= (and b!94319 (not c!15737)) b!94320))

(assert (= (and b!94333 res!47739) b!94318))

(assert (= (or b!94333 b!94320) bm!9453))

(assert (= (and b!94319 res!47740) b!94327))

(assert (= (and b!94327 c!15741) b!94334))

(assert (= (and b!94327 (not c!15741)) b!94329))

(assert (= (and b!94334 res!47737) b!94323))

(assert (= (or b!94334 b!94329) bm!9455))

(declare-fun b_lambda!4155 () Bool)

(assert (=> (not b_lambda!4155) (not b!94321)))

(declare-fun t!5513 () Bool)

(declare-fun tb!1881 () Bool)

(assert (=> (and b!93975 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16)) t!5513) tb!1881))

(declare-fun result!3205 () Bool)

(assert (=> tb!1881 (= result!3205 tp_is_empty!2613)))

(assert (=> b!94321 t!5513))

(declare-fun b_and!5749 () Bool)

(assert (= b_and!5745 (and (=> t!5513 result!3205) b_and!5749)))

(declare-fun t!5515 () Bool)

(declare-fun tb!1883 () Bool)

(assert (=> (and b!93983 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 newMap!16)) t!5515) tb!1883))

(declare-fun result!3207 () Bool)

(assert (= result!3207 result!3205))

(assert (=> b!94321 t!5515))

(declare-fun b_and!5751 () Bool)

(assert (= b_and!5747 (and (=> t!5515 result!3207) b_and!5751)))

(declare-fun m!101259 () Bool)

(assert (=> b!94318 m!101259))

(declare-fun m!101261 () Bool)

(assert (=> b!94317 m!101261))

(declare-fun m!101263 () Bool)

(assert (=> bm!9456 m!101263))

(declare-fun m!101265 () Bool)

(assert (=> d!24565 m!101265))

(declare-fun m!101267 () Bool)

(assert (=> b!94323 m!101267))

(declare-fun m!101269 () Bool)

(assert (=> bm!9453 m!101269))

(declare-fun m!101271 () Bool)

(assert (=> bm!9455 m!101271))

(declare-fun m!101273 () Bool)

(assert (=> b!94321 m!101273))

(declare-fun m!101275 () Bool)

(assert (=> b!94321 m!101275))

(declare-fun m!101277 () Bool)

(assert (=> b!94321 m!101277))

(declare-fun m!101279 () Bool)

(assert (=> b!94321 m!101279))

(assert (=> b!94321 m!101275))

(assert (=> b!94321 m!101273))

(assert (=> b!94321 m!101279))

(declare-fun m!101281 () Bool)

(assert (=> b!94321 m!101281))

(assert (=> b!94332 m!101279))

(assert (=> b!94332 m!101279))

(declare-fun m!101283 () Bool)

(assert (=> b!94332 m!101283))

(declare-fun m!101285 () Bool)

(assert (=> bm!9454 m!101285))

(assert (=> b!94325 m!101279))

(assert (=> b!94325 m!101279))

(declare-fun m!101287 () Bool)

(assert (=> b!94325 m!101287))

(assert (=> b!94324 m!101279))

(assert (=> b!94324 m!101279))

(assert (=> b!94324 m!101287))

(declare-fun m!101289 () Bool)

(assert (=> b!94331 m!101289))

(declare-fun m!101291 () Bool)

(assert (=> b!94331 m!101291))

(declare-fun m!101293 () Bool)

(assert (=> b!94331 m!101293))

(declare-fun m!101295 () Bool)

(assert (=> b!94331 m!101295))

(assert (=> b!94331 m!101279))

(declare-fun m!101297 () Bool)

(assert (=> b!94331 m!101297))

(declare-fun m!101299 () Bool)

(assert (=> b!94331 m!101299))

(declare-fun m!101301 () Bool)

(assert (=> b!94331 m!101301))

(assert (=> b!94331 m!101297))

(declare-fun m!101303 () Bool)

(assert (=> b!94331 m!101303))

(assert (=> b!94331 m!101285))

(declare-fun m!101305 () Bool)

(assert (=> b!94331 m!101305))

(declare-fun m!101307 () Bool)

(assert (=> b!94331 m!101307))

(declare-fun m!101309 () Bool)

(assert (=> b!94331 m!101309))

(declare-fun m!101311 () Bool)

(assert (=> b!94331 m!101311))

(declare-fun m!101313 () Bool)

(assert (=> b!94331 m!101313))

(assert (=> b!94331 m!101289))

(assert (=> b!94331 m!101311))

(assert (=> b!94331 m!101293))

(declare-fun m!101315 () Bool)

(assert (=> b!94331 m!101315))

(declare-fun m!101317 () Bool)

(assert (=> b!94331 m!101317))

(assert (=> bm!9430 d!24565))

(assert (=> d!24525 d!24529))

(declare-fun d!24567 () Bool)

(assert (=> d!24567 (not (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!24567 true))

(declare-fun _$68!85 () Unit!2822)

(assert (=> d!24567 (= (choose!68 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598)) _$68!85)))

(declare-fun bs!3853 () Bool)

(assert (= bs!3853 d!24567))

(assert (=> bs!3853 m!101017))

(assert (=> bs!3853 m!101037))

(assert (=> d!24525 d!24567))

(assert (=> bm!9439 d!24549))

(declare-fun d!24569 () Bool)

(assert (=> d!24569 (= (get!1281 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2762 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94287 d!24569))

(assert (=> b!94162 d!24561))

(assert (=> b!94162 d!24563))

(declare-fun b!94343 () Bool)

(declare-fun e!61604 () (_ BitVec 32))

(assert (=> b!94343 (= e!61604 #b00000000000000000000000000000000)))

(declare-fun bm!9462 () Bool)

(declare-fun call!9465 () (_ BitVec 32))

(assert (=> bm!9462 (= call!9465 (arrayCountValidKeys!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94344 () Bool)

(declare-fun e!61603 () (_ BitVec 32))

(assert (=> b!94344 (= e!61604 e!61603)))

(declare-fun c!15747 () Bool)

(assert (=> b!94344 (= c!15747 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!24571 () Bool)

(declare-fun lt!46689 () (_ BitVec 32))

(assert (=> d!24571 (and (bvsge lt!46689 #b00000000000000000000000000000000) (bvsle lt!46689 (bvsub (size!2244 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!24571 (= lt!46689 e!61604)))

(declare-fun c!15746 () Bool)

(assert (=> d!24571 (= c!15746 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24571 (and (bvsle #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2244 (_keys!4118 newMap!16)) (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24571 (= (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) lt!46689)))

(declare-fun b!94345 () Bool)

(assert (=> b!94345 (= e!61603 (bvadd #b00000000000000000000000000000001 call!9465))))

(declare-fun b!94346 () Bool)

(assert (=> b!94346 (= e!61603 call!9465)))

(assert (= (and d!24571 c!15746) b!94343))

(assert (= (and d!24571 (not c!15746)) b!94344))

(assert (= (and b!94344 c!15747) b!94345))

(assert (= (and b!94344 (not c!15747)) b!94346))

(assert (= (or b!94345 b!94346) bm!9462))

(declare-fun m!101319 () Bool)

(assert (=> bm!9462 m!101319))

(assert (=> b!94344 m!101279))

(assert (=> b!94344 m!101279))

(assert (=> b!94344 m!101287))

(assert (=> b!94088 d!24571))

(declare-fun d!24573 () Bool)

(declare-fun e!61607 () Bool)

(assert (=> d!24573 e!61607))

(declare-fun res!47747 () Bool)

(assert (=> d!24573 (=> (not res!47747) (not e!61607))))

(declare-fun lt!46701 () ListLongMap!1539)

(assert (=> d!24573 (= res!47747 (contains!797 lt!46701 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!46698 () List!1600)

(assert (=> d!24573 (= lt!46701 (ListLongMap!1540 lt!46698))))

(declare-fun lt!46699 () Unit!2822)

(declare-fun lt!46700 () Unit!2822)

(assert (=> d!24573 (= lt!46699 lt!46700)))

(assert (=> d!24573 (= (getValueByKey!147 lt!46698 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!152 (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!65 (List!1600 (_ BitVec 64) V!3131) Unit!2822)

(assert (=> d!24573 (= lt!46700 (lemmaContainsTupThenGetReturnValue!65 lt!46698 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun insertStrictlySorted!67 (List!1600 (_ BitVec 64) V!3131) List!1600)

(assert (=> d!24573 (= lt!46698 (insertStrictlySorted!67 (toList!785 (ite c!15725 call!9452 call!9453)) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24573 (= (+!136 (ite c!15725 call!9452 call!9453) (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!46701)))

(declare-fun b!94351 () Bool)

(declare-fun res!47748 () Bool)

(assert (=> b!94351 (=> (not res!47748) (not e!61607))))

(assert (=> b!94351 (= res!47748 (= (getValueByKey!147 (toList!785 lt!46701) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!152 (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94352 () Bool)

(declare-fun contains!799 (List!1600 tuple2!2334) Bool)

(assert (=> b!94352 (= e!61607 (contains!799 (toList!785 lt!46701) (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!24573 res!47747) b!94351))

(assert (= (and b!94351 res!47748) b!94352))

(declare-fun m!101321 () Bool)

(assert (=> d!24573 m!101321))

(declare-fun m!101323 () Bool)

(assert (=> d!24573 m!101323))

(declare-fun m!101325 () Bool)

(assert (=> d!24573 m!101325))

(declare-fun m!101327 () Bool)

(assert (=> d!24573 m!101327))

(declare-fun m!101329 () Bool)

(assert (=> b!94351 m!101329))

(declare-fun m!101331 () Bool)

(assert (=> b!94352 m!101331))

(assert (=> bm!9449 d!24573))

(declare-fun d!24575 () Bool)

(declare-fun e!61608 () Bool)

(assert (=> d!24575 e!61608))

(declare-fun res!47749 () Bool)

(assert (=> d!24575 (=> res!47749 e!61608)))

(declare-fun lt!46704 () Bool)

(assert (=> d!24575 (= res!47749 (not lt!46704))))

(declare-fun lt!46702 () Bool)

(assert (=> d!24575 (= lt!46704 lt!46702)))

(declare-fun lt!46703 () Unit!2822)

(declare-fun e!61609 () Unit!2822)

(assert (=> d!24575 (= lt!46703 e!61609)))

(declare-fun c!15748 () Bool)

(assert (=> d!24575 (= c!15748 lt!46702)))

(assert (=> d!24575 (= lt!46702 (containsKey!151 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24575 (= (contains!797 lt!46547 #b0000000000000000000000000000000000000000000000000000000000000000) lt!46704)))

(declare-fun b!94353 () Bool)

(declare-fun lt!46705 () Unit!2822)

(assert (=> b!94353 (= e!61609 lt!46705)))

(assert (=> b!94353 (= lt!46705 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94353 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94354 () Bool)

(declare-fun Unit!2831 () Unit!2822)

(assert (=> b!94354 (= e!61609 Unit!2831)))

(declare-fun b!94355 () Bool)

(assert (=> b!94355 (= e!61608 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24575 c!15748) b!94353))

(assert (= (and d!24575 (not c!15748)) b!94354))

(assert (= (and d!24575 (not res!47749)) b!94355))

(declare-fun m!101333 () Bool)

(assert (=> d!24575 m!101333))

(declare-fun m!101335 () Bool)

(assert (=> b!94353 m!101335))

(declare-fun m!101337 () Bool)

(assert (=> b!94353 m!101337))

(assert (=> b!94353 m!101337))

(declare-fun m!101339 () Bool)

(assert (=> b!94353 m!101339))

(assert (=> b!94355 m!101337))

(assert (=> b!94355 m!101337))

(assert (=> b!94355 m!101339))

(assert (=> bm!9374 d!24575))

(declare-fun bm!9463 () Bool)

(declare-fun call!9466 () Bool)

(declare-fun c!15749 () Bool)

(assert (=> bm!9463 (= call!9466 (arrayNoDuplicates!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15749 (Cons!1597 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1598) Nil!1598)))))

(declare-fun b!94356 () Bool)

(declare-fun e!61611 () Bool)

(assert (=> b!94356 (= e!61611 call!9466)))

(declare-fun b!94357 () Bool)

(declare-fun e!61610 () Bool)

(assert (=> b!94357 (= e!61610 e!61611)))

(assert (=> b!94357 (= c!15749 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!24577 () Bool)

(declare-fun res!47751 () Bool)

(declare-fun e!61612 () Bool)

(assert (=> d!24577 (=> res!47751 e!61612)))

(assert (=> d!24577 (= res!47751 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24577 (= (arrayNoDuplicates!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 Nil!1598) e!61612)))

(declare-fun b!94358 () Bool)

(assert (=> b!94358 (= e!61612 e!61610)))

(declare-fun res!47750 () Bool)

(assert (=> b!94358 (=> (not res!47750) (not e!61610))))

(declare-fun e!61613 () Bool)

(assert (=> b!94358 (= res!47750 (not e!61613))))

(declare-fun res!47752 () Bool)

(assert (=> b!94358 (=> (not res!47752) (not e!61613))))

(assert (=> b!94358 (= res!47752 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94359 () Bool)

(assert (=> b!94359 (= e!61613 (contains!798 Nil!1598 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94360 () Bool)

(assert (=> b!94360 (= e!61611 call!9466)))

(assert (= (and d!24577 (not res!47751)) b!94358))

(assert (= (and b!94358 res!47752) b!94359))

(assert (= (and b!94358 res!47750) b!94357))

(assert (= (and b!94357 c!15749) b!94356))

(assert (= (and b!94357 (not c!15749)) b!94360))

(assert (= (or b!94356 b!94360) bm!9463))

(assert (=> bm!9463 m!101279))

(declare-fun m!101341 () Bool)

(assert (=> bm!9463 m!101341))

(assert (=> b!94357 m!101279))

(assert (=> b!94357 m!101279))

(assert (=> b!94357 m!101287))

(assert (=> b!94358 m!101279))

(assert (=> b!94358 m!101279))

(assert (=> b!94358 m!101287))

(assert (=> b!94359 m!101279))

(assert (=> b!94359 m!101279))

(declare-fun m!101343 () Bool)

(assert (=> b!94359 m!101343))

(assert (=> b!94090 d!24577))

(declare-fun d!24579 () Bool)

(declare-fun e!61614 () Bool)

(assert (=> d!24579 e!61614))

(declare-fun res!47753 () Bool)

(assert (=> d!24579 (=> res!47753 e!61614)))

(declare-fun lt!46708 () Bool)

(assert (=> d!24579 (= res!47753 (not lt!46708))))

(declare-fun lt!46706 () Bool)

(assert (=> d!24579 (= lt!46708 lt!46706)))

(declare-fun lt!46707 () Unit!2822)

(declare-fun e!61615 () Unit!2822)

(assert (=> d!24579 (= lt!46707 e!61615)))

(declare-fun c!15750 () Bool)

(assert (=> d!24579 (= c!15750 lt!46706)))

(assert (=> d!24579 (= lt!46706 (containsKey!151 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(assert (=> d!24579 (= (contains!797 call!9446 (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))) lt!46708)))

(declare-fun b!94361 () Bool)

(declare-fun lt!46709 () Unit!2822)

(assert (=> b!94361 (= e!61615 lt!46709)))

(assert (=> b!94361 (= lt!46709 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(assert (=> b!94361 (isDefined!101 (getValueByKey!147 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(declare-fun b!94362 () Bool)

(declare-fun Unit!2832 () Unit!2822)

(assert (=> b!94362 (= e!61615 Unit!2832)))

(declare-fun b!94363 () Bool)

(assert (=> b!94363 (= e!61614 (isDefined!101 (getValueByKey!147 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))))))

(assert (= (and d!24579 c!15750) b!94361))

(assert (= (and d!24579 (not c!15750)) b!94362))

(assert (= (and d!24579 (not res!47753)) b!94363))

(assert (=> d!24579 m!101201))

(declare-fun m!101345 () Bool)

(assert (=> d!24579 m!101345))

(assert (=> b!94361 m!101201))

(declare-fun m!101347 () Bool)

(assert (=> b!94361 m!101347))

(assert (=> b!94361 m!101201))

(declare-fun m!101349 () Bool)

(assert (=> b!94361 m!101349))

(assert (=> b!94361 m!101349))

(declare-fun m!101351 () Bool)

(assert (=> b!94361 m!101351))

(assert (=> b!94363 m!101201))

(assert (=> b!94363 m!101349))

(assert (=> b!94363 m!101349))

(assert (=> b!94363 m!101351))

(assert (=> b!94243 d!24579))

(declare-fun d!24581 () Bool)

(declare-fun e!61618 () Bool)

(assert (=> d!24581 e!61618))

(declare-fun res!47756 () Bool)

(assert (=> d!24581 (=> (not res!47756) (not e!61618))))

(assert (=> d!24581 (= res!47756 (and (bvsge (index!3186 lt!46636) #b00000000000000000000000000000000) (bvslt (index!3186 lt!46636) (size!2244 (_keys!4118 newMap!16)))))))

(declare-fun lt!46712 () Unit!2822)

(declare-fun choose!569 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) Unit!2822)

(assert (=> d!24581 (= lt!46712 (choose!569 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24581 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24581 (= (lemmaValidKeyInArrayIsInListMap!97 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (defaultEntry!2436 newMap!16)) lt!46712)))

(declare-fun b!94366 () Bool)

(assert (=> b!94366 (= e!61618 (contains!797 (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(assert (= (and d!24581 res!47756) b!94366))

(declare-fun m!101353 () Bool)

(assert (=> d!24581 m!101353))

(assert (=> d!24581 m!101265))

(declare-fun m!101355 () Bool)

(assert (=> b!94366 m!101355))

(assert (=> b!94366 m!101201))

(assert (=> b!94366 m!101355))

(assert (=> b!94366 m!101201))

(declare-fun m!101357 () Bool)

(assert (=> b!94366 m!101357))

(assert (=> b!94243 d!24581))

(declare-fun d!24583 () Bool)

(declare-fun e!61621 () Bool)

(assert (=> d!24583 e!61621))

(declare-fun res!47759 () Bool)

(assert (=> d!24583 (=> (not res!47759) (not e!61621))))

(assert (=> d!24583 (= res!47759 (and (bvsge (index!3186 lt!46636) #b00000000000000000000000000000000) (bvslt (index!3186 lt!46636) (size!2245 (_values!2419 newMap!16)))))))

(declare-fun lt!46715 () Unit!2822)

(declare-fun choose!570 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2822)

(assert (=> d!24583 (= lt!46715 (choose!570 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24583 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24583 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) lt!46715)))

(declare-fun b!94369 () Bool)

(assert (=> b!94369 (= e!61621 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))))))

(assert (= (and d!24583 res!47759) b!94369))

(assert (=> d!24583 m!101017))

(assert (=> d!24583 m!101015))

(declare-fun m!101359 () Bool)

(assert (=> d!24583 m!101359))

(assert (=> d!24583 m!101265))

(assert (=> b!94369 m!101123))

(assert (=> b!94369 m!101123))

(declare-fun m!101361 () Bool)

(assert (=> b!94369 m!101361))

(assert (=> b!94369 m!101199))

(declare-fun m!101363 () Bool)

(assert (=> b!94369 m!101363))

(assert (=> b!94243 d!24583))

(declare-fun b!94394 () Bool)

(declare-fun e!61641 () ListLongMap!1539)

(assert (=> b!94394 (= e!61641 (ListLongMap!1540 Nil!1597))))

(declare-fun b!94395 () Bool)

(declare-fun e!61638 () Bool)

(declare-fun lt!46731 () ListLongMap!1539)

(declare-fun isEmpty!356 (ListLongMap!1539) Bool)

(assert (=> b!94395 (= e!61638 (isEmpty!356 lt!46731))))

(declare-fun b!94396 () Bool)

(assert (=> b!94396 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> b!94396 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_values!2419 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun e!61642 () Bool)

(assert (=> b!94396 (= e!61642 (= (apply!90 lt!46731 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94397 () Bool)

(declare-fun res!47771 () Bool)

(declare-fun e!61640 () Bool)

(assert (=> b!94397 (=> (not res!47771) (not e!61640))))

(assert (=> b!94397 (= res!47771 (not (contains!797 lt!46731 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94398 () Bool)

(declare-fun e!61639 () Bool)

(assert (=> b!94398 (= e!61639 e!61642)))

(assert (=> b!94398 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun res!47768 () Bool)

(assert (=> b!94398 (= res!47768 (contains!797 lt!46731 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94398 (=> (not res!47768) (not e!61642))))

(declare-fun b!94399 () Bool)

(declare-fun lt!46733 () Unit!2822)

(declare-fun lt!46735 () Unit!2822)

(assert (=> b!94399 (= lt!46733 lt!46735)))

(declare-fun lt!46732 () V!3131)

(declare-fun lt!46734 () (_ BitVec 64))

(declare-fun lt!46730 () (_ BitVec 64))

(declare-fun lt!46736 () ListLongMap!1539)

(assert (=> b!94399 (not (contains!797 (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732)) lt!46730))))

(declare-fun addStillNotContains!40 (ListLongMap!1539 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2822)

(assert (=> b!94399 (= lt!46735 (addStillNotContains!40 lt!46736 lt!46734 lt!46732 lt!46730))))

(assert (=> b!94399 (= lt!46730 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94399 (= lt!46732 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94399 (= lt!46734 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!9469 () ListLongMap!1539)

(assert (=> b!94399 (= lt!46736 call!9469)))

(declare-fun e!61636 () ListLongMap!1539)

(assert (=> b!94399 (= e!61636 (+!136 call!9469 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94400 () Bool)

(assert (=> b!94400 (= e!61640 e!61639)))

(declare-fun c!15760 () Bool)

(declare-fun e!61637 () Bool)

(assert (=> b!94400 (= c!15760 e!61637)))

(declare-fun res!47770 () Bool)

(assert (=> b!94400 (=> (not res!47770) (not e!61637))))

(assert (=> b!94400 (= res!47770 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94401 () Bool)

(assert (=> b!94401 (= e!61638 (= lt!46731 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94402 () Bool)

(assert (=> b!94402 (= e!61636 call!9469)))

(declare-fun b!94403 () Bool)

(assert (=> b!94403 (= e!61639 e!61638)))

(declare-fun c!15762 () Bool)

(assert (=> b!94403 (= c!15762 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun bm!9466 () Bool)

(assert (=> bm!9466 (= call!9469 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!94404 () Bool)

(assert (=> b!94404 (= e!61641 e!61636)))

(declare-fun c!15759 () Bool)

(assert (=> b!94404 (= c!15759 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!24585 () Bool)

(assert (=> d!24585 e!61640))

(declare-fun res!47769 () Bool)

(assert (=> d!24585 (=> (not res!47769) (not e!61640))))

(assert (=> d!24585 (= res!47769 (not (contains!797 lt!46731 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24585 (= lt!46731 e!61641)))

(declare-fun c!15761 () Bool)

(assert (=> d!24585 (= c!15761 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!24585 (validMask!0 (mask!6511 (v!2763 (underlying!330 thiss!992))))))

(assert (=> d!24585 (= (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))) lt!46731)))

(declare-fun b!94405 () Bool)

(assert (=> b!94405 (= e!61637 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94405 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(assert (= (and d!24585 c!15761) b!94394))

(assert (= (and d!24585 (not c!15761)) b!94404))

(assert (= (and b!94404 c!15759) b!94399))

(assert (= (and b!94404 (not c!15759)) b!94402))

(assert (= (or b!94399 b!94402) bm!9466))

(assert (= (and d!24585 res!47769) b!94397))

(assert (= (and b!94397 res!47771) b!94400))

(assert (= (and b!94400 res!47770) b!94405))

(assert (= (and b!94400 c!15760) b!94398))

(assert (= (and b!94400 (not c!15760)) b!94403))

(assert (= (and b!94398 res!47768) b!94396))

(assert (= (and b!94403 c!15762) b!94401))

(assert (= (and b!94403 (not c!15762)) b!94395))

(declare-fun b_lambda!4157 () Bool)

(assert (=> (not b_lambda!4157) (not b!94396)))

(assert (=> b!94396 t!5503))

(declare-fun b_and!5753 () Bool)

(assert (= b_and!5749 (and (=> t!5503 result!3191) b_and!5753)))

(assert (=> b!94396 t!5505))

(declare-fun b_and!5755 () Bool)

(assert (= b_and!5751 (and (=> t!5505 result!3195) b_and!5755)))

(declare-fun b_lambda!4159 () Bool)

(assert (=> (not b_lambda!4159) (not b!94399)))

(assert (=> b!94399 t!5503))

(declare-fun b_and!5757 () Bool)

(assert (= b_and!5753 (and (=> t!5503 result!3191) b_and!5757)))

(assert (=> b!94399 t!5505))

(declare-fun b_and!5759 () Bool)

(assert (= b_and!5755 (and (=> t!5505 result!3195) b_and!5759)))

(declare-fun m!101365 () Bool)

(assert (=> b!94397 m!101365))

(assert (=> b!94404 m!101101))

(assert (=> b!94404 m!101101))

(assert (=> b!94404 m!101147))

(assert (=> b!94405 m!101101))

(assert (=> b!94405 m!101101))

(assert (=> b!94405 m!101147))

(declare-fun m!101367 () Bool)

(assert (=> d!24585 m!101367))

(assert (=> d!24585 m!101027))

(assert (=> b!94398 m!101101))

(assert (=> b!94398 m!101101))

(declare-fun m!101369 () Bool)

(assert (=> b!94398 m!101369))

(declare-fun m!101371 () Bool)

(assert (=> b!94395 m!101371))

(declare-fun m!101373 () Bool)

(assert (=> b!94401 m!101373))

(assert (=> b!94396 m!101101))

(declare-fun m!101375 () Bool)

(assert (=> b!94396 m!101375))

(assert (=> b!94396 m!101137))

(assert (=> b!94396 m!101137))

(assert (=> b!94396 m!101013))

(assert (=> b!94396 m!101139))

(assert (=> b!94396 m!101013))

(assert (=> b!94396 m!101101))

(assert (=> bm!9466 m!101373))

(declare-fun m!101377 () Bool)

(assert (=> b!94399 m!101377))

(assert (=> b!94399 m!101137))

(declare-fun m!101379 () Bool)

(assert (=> b!94399 m!101379))

(assert (=> b!94399 m!101137))

(assert (=> b!94399 m!101013))

(assert (=> b!94399 m!101139))

(assert (=> b!94399 m!101013))

(declare-fun m!101381 () Bool)

(assert (=> b!94399 m!101381))

(assert (=> b!94399 m!101379))

(declare-fun m!101383 () Bool)

(assert (=> b!94399 m!101383))

(assert (=> b!94399 m!101101))

(assert (=> bm!9375 d!24585))

(declare-fun b!94440 () Bool)

(declare-fun e!61663 () Bool)

(declare-fun call!9478 () Bool)

(assert (=> b!94440 (= e!61663 (not call!9478))))

(declare-fun b!94441 () Bool)

(declare-fun res!47795 () Bool)

(declare-fun e!61665 () Bool)

(assert (=> b!94441 (=> (not res!47795) (not e!61665))))

(declare-fun lt!46817 () SeekEntryResult!261)

(assert (=> b!94441 (= res!47795 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3185 lt!46817)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94442 () Bool)

(declare-fun e!61666 () Unit!2822)

(declare-fun lt!46826 () Unit!2822)

(assert (=> b!94442 (= e!61666 lt!46826)))

(assert (=> b!94442 (= lt!46826 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(declare-fun call!9481 () SeekEntryResult!261)

(assert (=> b!94442 (= lt!46817 call!9481)))

(declare-fun c!15772 () Bool)

(assert (=> b!94442 (= c!15772 ((_ is MissingZero!261) lt!46817))))

(declare-fun e!61659 () Bool)

(assert (=> b!94442 e!61659))

(declare-fun b!94443 () Bool)

(declare-fun res!47794 () Bool)

(declare-fun call!9480 () Bool)

(assert (=> b!94443 (= res!47794 call!9480)))

(declare-fun e!61662 () Bool)

(assert (=> b!94443 (=> (not res!47794) (not e!61662))))

(declare-fun b!94444 () Bool)

(assert (=> b!94444 (= e!61665 (not call!9478))))

(declare-fun bm!9475 () Bool)

(declare-fun call!9479 () Bool)

(assert (=> bm!9475 (= call!9479 call!9480)))

(declare-fun bm!9476 () Bool)

(assert (=> bm!9476 (= call!9478 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94445 () Bool)

(declare-fun Unit!2833 () Unit!2822)

(assert (=> b!94445 (= e!61666 Unit!2833)))

(declare-fun lt!46804 () Unit!2822)

(assert (=> b!94445 (= lt!46804 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46820 () SeekEntryResult!261)

(assert (=> b!94445 (= lt!46820 call!9481)))

(declare-fun res!47791 () Bool)

(assert (=> b!94445 (= res!47791 ((_ is Found!261) lt!46820))))

(assert (=> b!94445 (=> (not res!47791) (not e!61662))))

(assert (=> b!94445 e!61662))

(declare-fun lt!46812 () Unit!2822)

(assert (=> b!94445 (= lt!46812 lt!46804)))

(assert (=> b!94445 false))

(declare-fun b!94446 () Bool)

(declare-fun res!47793 () Bool)

(declare-fun e!61664 () Bool)

(assert (=> b!94446 (=> (not res!47793) (not e!61664))))

(declare-fun lt!46823 () tuple2!2332)

(assert (=> b!94446 (= res!47793 (contains!797 (map!1243 (_2!1176 lt!46823)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun bm!9477 () Bool)

(assert (=> bm!9477 (= call!9481 (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94447 () Bool)

(declare-fun e!61661 () Unit!2822)

(declare-fun Unit!2834 () Unit!2822)

(assert (=> b!94447 (= e!61661 Unit!2834)))

(declare-fun lt!46824 () Unit!2822)

(declare-fun lemmaArrayContainsKeyThenInListMap!23 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2822)

(assert (=> b!94447 (= lt!46824 (lemmaArrayContainsKeyThenInListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> b!94447 (contains!797 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))

(declare-fun lt!46797 () Unit!2822)

(assert (=> b!94447 (= lt!46797 lt!46824)))

(assert (=> b!94447 false))

(declare-fun d!24587 () Bool)

(assert (=> d!24587 e!61664))

(declare-fun res!47796 () Bool)

(assert (=> d!24587 (=> (not res!47796) (not e!61664))))

(assert (=> d!24587 (= res!47796 (_1!1176 lt!46823))))

(assert (=> d!24587 (= lt!46823 (tuple2!2333 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd (_size!466 newMap!16) #b00000000000000000000000000000001) (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (_vacant!466 newMap!16))))))

(declare-fun lt!46807 () Unit!2822)

(declare-fun lt!46800 () Unit!2822)

(assert (=> d!24587 (= lt!46807 lt!46800)))

(declare-fun lt!46811 () array!4202)

(declare-fun lt!46813 () array!4200)

(assert (=> d!24587 (contains!797 (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))

(assert (=> d!24587 (= lt!46800 (lemmaValidKeyInArrayIsInListMap!97 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24587 (= lt!46811 (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))))

(assert (=> d!24587 (= lt!46813 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun lt!46810 () Unit!2822)

(declare-fun lt!46825 () Unit!2822)

(assert (=> d!24587 (= lt!46810 lt!46825)))

(declare-fun lt!46799 () array!4200)

(assert (=> d!24587 (= (arrayCountValidKeys!0 lt!46799 (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4200 (_ BitVec 32)) Unit!2822)

(assert (=> d!24587 (= lt!46825 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!46799 (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))

(assert (=> d!24587 (= lt!46799 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun lt!46818 () Unit!2822)

(declare-fun lt!46819 () Unit!2822)

(assert (=> d!24587 (= lt!46818 lt!46819)))

(declare-fun lt!46816 () array!4200)

(assert (=> d!24587 (arrayContainsKey!0 lt!46816 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4200 (_ BitVec 64) (_ BitVec 32)) Unit!2822)

(assert (=> d!24587 (= lt!46819 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!46816 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))

(assert (=> d!24587 (= lt!46816 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun lt!46822 () Unit!2822)

(declare-fun lt!46798 () Unit!2822)

(assert (=> d!24587 (= lt!46822 lt!46798)))

(assert (=> d!24587 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!23 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2822)

(assert (=> d!24587 (= lt!46798 (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46802 () Unit!2822)

(declare-fun lt!46815 () Unit!2822)

(assert (=> d!24587 (= lt!46802 lt!46815)))

(assert (=> d!24587 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (mask!6511 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4200 (_ BitVec 32) (_ BitVec 32)) Unit!2822)

(assert (=> d!24587 (= lt!46815 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (mask!6511 newMap!16)))))

(declare-fun lt!46808 () Unit!2822)

(declare-fun lt!46803 () Unit!2822)

(assert (=> d!24587 (= lt!46808 lt!46803)))

(assert (=> d!24587 (= (arrayCountValidKeys!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4200 (_ BitVec 32) (_ BitVec 64)) Unit!2822)

(assert (=> d!24587 (= lt!46803 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4118 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!46801 () Unit!2822)

(declare-fun lt!46805 () Unit!2822)

(assert (=> d!24587 (= lt!46801 lt!46805)))

(declare-fun lt!46806 () List!1601)

(declare-fun lt!46821 () (_ BitVec 32))

(assert (=> d!24587 (arrayNoDuplicates!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) lt!46821 lt!46806)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4200 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1601) Unit!2822)

(assert (=> d!24587 (= lt!46805 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) lt!46821 lt!46806))))

(assert (=> d!24587 (= lt!46806 Nil!1598)))

(assert (=> d!24587 (= lt!46821 #b00000000000000000000000000000000)))

(declare-fun lt!46814 () Unit!2822)

(assert (=> d!24587 (= lt!46814 e!61661)))

(declare-fun c!15773 () Bool)

(assert (=> d!24587 (= c!15773 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!46809 () Unit!2822)

(assert (=> d!24587 (= lt!46809 e!61666)))

(declare-fun c!15771 () Bool)

(assert (=> d!24587 (= c!15771 (contains!797 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24587 (valid!376 newMap!16)))

(assert (=> d!24587 (= (updateHelperNewKey!39 newMap!16 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))) lt!46823)))

(declare-fun bm!9478 () Bool)

(assert (=> bm!9478 (= call!9480 (inRange!0 (ite c!15771 (index!3186 lt!46820) (ite c!15772 (index!3185 lt!46817) (index!3188 lt!46817))) (mask!6511 newMap!16)))))

(declare-fun b!94448 () Bool)

(declare-fun e!61660 () Bool)

(assert (=> b!94448 (= e!61660 ((_ is Undefined!261) lt!46817))))

(declare-fun b!94449 () Bool)

(declare-fun Unit!2835 () Unit!2822)

(assert (=> b!94449 (= e!61661 Unit!2835)))

(declare-fun b!94450 () Bool)

(declare-fun res!47797 () Bool)

(assert (=> b!94450 (=> (not res!47797) (not e!61665))))

(assert (=> b!94450 (= res!47797 call!9479)))

(assert (=> b!94450 (= e!61659 e!61665)))

(declare-fun b!94451 () Bool)

(assert (=> b!94451 (= e!61664 (= (map!1243 (_2!1176 lt!46823)) (+!136 (map!1243 newMap!16) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94452 () Bool)

(declare-fun res!47790 () Bool)

(assert (=> b!94452 (=> (not res!47790) (not e!61664))))

(assert (=> b!94452 (= res!47790 (valid!376 (_2!1176 lt!46823)))))

(declare-fun b!94453 () Bool)

(assert (=> b!94453 (= e!61660 e!61663)))

(declare-fun res!47792 () Bool)

(assert (=> b!94453 (= res!47792 call!9479)))

(assert (=> b!94453 (=> (not res!47792) (not e!61663))))

(declare-fun b!94454 () Bool)

(assert (=> b!94454 (= e!61662 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46820)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94455 () Bool)

(declare-fun res!47798 () Bool)

(assert (=> b!94455 (= res!47798 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!46817)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94455 (=> (not res!47798) (not e!61663))))

(declare-fun b!94456 () Bool)

(declare-fun c!15774 () Bool)

(assert (=> b!94456 (= c!15774 ((_ is MissingVacant!261) lt!46817))))

(assert (=> b!94456 (= e!61659 e!61660)))

(assert (= (and d!24587 c!15771) b!94445))

(assert (= (and d!24587 (not c!15771)) b!94442))

(assert (= (and b!94445 res!47791) b!94443))

(assert (= (and b!94443 res!47794) b!94454))

(assert (= (and b!94442 c!15772) b!94450))

(assert (= (and b!94442 (not c!15772)) b!94456))

(assert (= (and b!94450 res!47797) b!94441))

(assert (= (and b!94441 res!47795) b!94444))

(assert (= (and b!94456 c!15774) b!94453))

(assert (= (and b!94456 (not c!15774)) b!94448))

(assert (= (and b!94453 res!47792) b!94455))

(assert (= (and b!94455 res!47798) b!94440))

(assert (= (or b!94450 b!94453) bm!9475))

(assert (= (or b!94444 b!94440) bm!9476))

(assert (= (or b!94443 bm!9475) bm!9478))

(assert (= (or b!94445 b!94442) bm!9477))

(assert (= (and d!24587 c!15773) b!94447))

(assert (= (and d!24587 (not c!15773)) b!94449))

(assert (= (and d!24587 res!47796) b!94452))

(assert (= (and b!94452 res!47790) b!94446))

(assert (= (and b!94446 res!47793) b!94451))

(declare-fun m!101385 () Bool)

(assert (=> b!94452 m!101385))

(declare-fun m!101387 () Bool)

(assert (=> b!94451 m!101387))

(assert (=> b!94451 m!101043))

(assert (=> b!94451 m!101043))

(declare-fun m!101389 () Bool)

(assert (=> b!94451 m!101389))

(assert (=> b!94445 m!101017))

(assert (=> b!94445 m!101241))

(assert (=> bm!9476 m!101017))

(assert (=> bm!9476 m!101219))

(assert (=> b!94442 m!101017))

(assert (=> b!94442 m!101233))

(assert (=> b!94447 m!101017))

(declare-fun m!101391 () Bool)

(assert (=> b!94447 m!101391))

(assert (=> b!94447 m!101123))

(assert (=> b!94447 m!101123))

(assert (=> b!94447 m!101017))

(declare-fun m!101393 () Bool)

(assert (=> b!94447 m!101393))

(declare-fun m!101395 () Bool)

(assert (=> bm!9478 m!101395))

(assert (=> bm!9477 m!101017))

(assert (=> bm!9477 m!101187))

(declare-fun m!101397 () Bool)

(assert (=> d!24587 m!101397))

(assert (=> d!24587 m!101117))

(assert (=> d!24587 m!101041))

(assert (=> d!24587 m!101017))

(assert (=> d!24587 m!101219))

(assert (=> d!24587 m!101123))

(assert (=> d!24587 m!101017))

(declare-fun m!101399 () Bool)

(assert (=> d!24587 m!101399))

(declare-fun m!101401 () Bool)

(assert (=> d!24587 m!101401))

(declare-fun m!101403 () Bool)

(assert (=> d!24587 m!101403))

(declare-fun m!101405 () Bool)

(assert (=> d!24587 m!101405))

(declare-fun m!101407 () Bool)

(assert (=> d!24587 m!101407))

(assert (=> d!24587 m!101017))

(declare-fun m!101409 () Bool)

(assert (=> d!24587 m!101409))

(declare-fun m!101411 () Bool)

(assert (=> d!24587 m!101411))

(assert (=> d!24587 m!101401))

(declare-fun m!101413 () Bool)

(assert (=> d!24587 m!101413))

(declare-fun m!101415 () Bool)

(assert (=> d!24587 m!101415))

(declare-fun m!101417 () Bool)

(assert (=> d!24587 m!101417))

(assert (=> d!24587 m!101017))

(assert (=> d!24587 m!101015))

(declare-fun m!101419 () Bool)

(assert (=> d!24587 m!101419))

(assert (=> d!24587 m!101123))

(assert (=> d!24587 m!101017))

(assert (=> d!24587 m!101393))

(assert (=> d!24587 m!101017))

(declare-fun m!101421 () Bool)

(assert (=> d!24587 m!101421))

(declare-fun m!101423 () Bool)

(assert (=> d!24587 m!101423))

(assert (=> d!24587 m!101017))

(declare-fun m!101425 () Bool)

(assert (=> d!24587 m!101425))

(assert (=> d!24587 m!101017))

(declare-fun m!101427 () Bool)

(assert (=> d!24587 m!101427))

(declare-fun m!101429 () Bool)

(assert (=> d!24587 m!101429))

(assert (=> d!24587 m!101123))

(assert (=> d!24587 m!101361))

(assert (=> d!24587 m!101411))

(declare-fun m!101431 () Bool)

(assert (=> d!24587 m!101431))

(declare-fun m!101433 () Bool)

(assert (=> b!94454 m!101433))

(assert (=> b!94446 m!101387))

(assert (=> b!94446 m!101387))

(assert (=> b!94446 m!101017))

(declare-fun m!101435 () Bool)

(assert (=> b!94446 m!101435))

(declare-fun m!101437 () Bool)

(assert (=> b!94455 m!101437))

(declare-fun m!101439 () Bool)

(assert (=> b!94441 m!101439))

(assert (=> bm!9437 d!24587))

(declare-fun d!24589 () Bool)

(assert (=> d!24589 (= (inRange!0 (ite c!15716 (ite c!15715 (index!3186 lt!46645) (ite c!15714 (index!3185 lt!46647) (index!3188 lt!46647))) (ite c!15718 (index!3186 lt!46659) (ite c!15719 (index!3185 lt!46648) (index!3188 lt!46648)))) (mask!6511 newMap!16)) (and (bvsge (ite c!15716 (ite c!15715 (index!3186 lt!46645) (ite c!15714 (index!3185 lt!46647) (index!3188 lt!46647))) (ite c!15718 (index!3186 lt!46659) (ite c!15719 (index!3185 lt!46648) (index!3188 lt!46648)))) #b00000000000000000000000000000000) (bvslt (ite c!15716 (ite c!15715 (index!3186 lt!46645) (ite c!15714 (index!3185 lt!46647) (index!3188 lt!46647))) (ite c!15718 (index!3186 lt!46659) (ite c!15719 (index!3185 lt!46648) (index!3188 lt!46648)))) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9438 d!24589))

(declare-fun b!94469 () Bool)

(declare-fun e!61674 () SeekEntryResult!261)

(declare-fun lt!46835 () SeekEntryResult!261)

(assert (=> b!94469 (= e!61674 (MissingZero!261 (index!3187 lt!46835)))))

(declare-fun b!94470 () Bool)

(declare-fun e!61675 () SeekEntryResult!261)

(assert (=> b!94470 (= e!61675 (Found!261 (index!3187 lt!46835)))))

(declare-fun b!94471 () Bool)

(declare-fun c!15783 () Bool)

(declare-fun lt!46833 () (_ BitVec 64))

(assert (=> b!94471 (= c!15783 (= lt!46833 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94471 (= e!61675 e!61674)))

(declare-fun b!94472 () Bool)

(declare-fun e!61673 () SeekEntryResult!261)

(assert (=> b!94472 (= e!61673 Undefined!261)))

(declare-fun b!94473 () Bool)

(assert (=> b!94473 (= e!61673 e!61675)))

(assert (=> b!94473 (= lt!46833 (select (arr!1996 (_keys!4118 newMap!16)) (index!3187 lt!46835)))))

(declare-fun c!15781 () Bool)

(assert (=> b!94473 (= c!15781 (= lt!46833 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun d!24591 () Bool)

(declare-fun lt!46834 () SeekEntryResult!261)

(assert (=> d!24591 (and (or ((_ is Undefined!261) lt!46834) (not ((_ is Found!261) lt!46834)) (and (bvsge (index!3186 lt!46834) #b00000000000000000000000000000000) (bvslt (index!3186 lt!46834) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!46834) ((_ is Found!261) lt!46834) (not ((_ is MissingZero!261) lt!46834)) (and (bvsge (index!3185 lt!46834) #b00000000000000000000000000000000) (bvslt (index!3185 lt!46834) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!46834) ((_ is Found!261) lt!46834) ((_ is MissingZero!261) lt!46834) (not ((_ is MissingVacant!261) lt!46834)) (and (bvsge (index!3188 lt!46834) #b00000000000000000000000000000000) (bvslt (index!3188 lt!46834) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!46834) (ite ((_ is Found!261) lt!46834) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46834)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (ite ((_ is MissingZero!261) lt!46834) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3185 lt!46834)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!261) lt!46834) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!46834)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24591 (= lt!46834 e!61673)))

(declare-fun c!15782 () Bool)

(assert (=> d!24591 (= c!15782 (and ((_ is Intermediate!261) lt!46835) (undefined!1073 lt!46835)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4200 (_ BitVec 32)) SeekEntryResult!261)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!24591 (= lt!46835 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (mask!6511 newMap!16)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!24591 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24591 (= (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!46834)))

(declare-fun b!94474 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4200 (_ BitVec 32)) SeekEntryResult!261)

(assert (=> b!94474 (= e!61674 (seekKeyOrZeroReturnVacant!0 (x!12665 lt!46835) (index!3187 lt!46835) (index!3187 lt!46835) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (= (and d!24591 c!15782) b!94472))

(assert (= (and d!24591 (not c!15782)) b!94473))

(assert (= (and b!94473 c!15781) b!94470))

(assert (= (and b!94473 (not c!15781)) b!94471))

(assert (= (and b!94471 c!15783) b!94469))

(assert (= (and b!94471 (not c!15783)) b!94474))

(declare-fun m!101441 () Bool)

(assert (=> b!94473 m!101441))

(declare-fun m!101443 () Bool)

(assert (=> d!24591 m!101443))

(declare-fun m!101445 () Bool)

(assert (=> d!24591 m!101445))

(declare-fun m!101447 () Bool)

(assert (=> d!24591 m!101447))

(declare-fun m!101449 () Bool)

(assert (=> d!24591 m!101449))

(assert (=> d!24591 m!101017))

(declare-fun m!101451 () Bool)

(assert (=> d!24591 m!101451))

(assert (=> d!24591 m!101265))

(assert (=> d!24591 m!101017))

(assert (=> d!24591 m!101449))

(assert (=> b!94474 m!101017))

(declare-fun m!101453 () Bool)

(assert (=> b!94474 m!101453))

(assert (=> bm!9447 d!24591))

(declare-fun d!24593 () Bool)

(declare-fun e!61678 () Bool)

(assert (=> d!24593 e!61678))

(declare-fun res!47804 () Bool)

(assert (=> d!24593 (=> (not res!47804) (not e!61678))))

(declare-fun lt!46840 () SeekEntryResult!261)

(assert (=> d!24593 (= res!47804 ((_ is Found!261) lt!46840))))

(assert (=> d!24593 (= lt!46840 (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun lt!46841 () Unit!2822)

(declare-fun choose!571 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2822)

(assert (=> d!24593 (= lt!46841 (choose!571 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24593 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24593 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) lt!46841)))

(declare-fun b!94479 () Bool)

(declare-fun res!47803 () Bool)

(assert (=> b!94479 (=> (not res!47803) (not e!61678))))

(assert (=> b!94479 (= res!47803 (inRange!0 (index!3186 lt!46840) (mask!6511 newMap!16)))))

(declare-fun b!94480 () Bool)

(assert (=> b!94480 (= e!61678 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46840)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94480 (and (bvsge (index!3186 lt!46840) #b00000000000000000000000000000000) (bvslt (index!3186 lt!46840) (size!2244 (_keys!4118 newMap!16))))))

(assert (= (and d!24593 res!47804) b!94479))

(assert (= (and b!94479 res!47803) b!94480))

(assert (=> d!24593 m!101017))

(assert (=> d!24593 m!101187))

(assert (=> d!24593 m!101017))

(declare-fun m!101455 () Bool)

(assert (=> d!24593 m!101455))

(assert (=> d!24593 m!101265))

(declare-fun m!101457 () Bool)

(assert (=> b!94479 m!101457))

(declare-fun m!101459 () Bool)

(assert (=> b!94480 m!101459))

(assert (=> bm!9444 d!24593))

(declare-fun d!24595 () Bool)

(assert (=> d!24595 (= (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94143 d!24595))

(declare-fun d!24597 () Bool)

(declare-fun get!1283 (Option!153) V!3131)

(assert (=> d!24597 (= (apply!90 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46558) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46558)))))

(declare-fun bs!3854 () Bool)

(assert (= bs!3854 d!24597))

(declare-fun m!101461 () Bool)

(assert (=> bs!3854 m!101461))

(assert (=> bs!3854 m!101461))

(declare-fun m!101463 () Bool)

(assert (=> bs!3854 m!101463))

(assert (=> b!94150 d!24597))

(declare-fun d!24599 () Bool)

(assert (=> d!24599 (= (apply!90 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46549) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46549)))))

(declare-fun bs!3855 () Bool)

(assert (= bs!3855 d!24599))

(declare-fun m!101465 () Bool)

(assert (=> bs!3855 m!101465))

(assert (=> bs!3855 m!101465))

(declare-fun m!101467 () Bool)

(assert (=> bs!3855 m!101467))

(assert (=> b!94150 d!24599))

(declare-fun d!24601 () Bool)

(declare-fun e!61679 () Bool)

(assert (=> d!24601 e!61679))

(declare-fun res!47805 () Bool)

(assert (=> d!24601 (=> (not res!47805) (not e!61679))))

(declare-fun lt!46845 () ListLongMap!1539)

(assert (=> d!24601 (= res!47805 (contains!797 lt!46845 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!46842 () List!1600)

(assert (=> d!24601 (= lt!46845 (ListLongMap!1540 lt!46842))))

(declare-fun lt!46843 () Unit!2822)

(declare-fun lt!46844 () Unit!2822)

(assert (=> d!24601 (= lt!46843 lt!46844)))

(assert (=> d!24601 (= (getValueByKey!147 lt!46842 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24601 (= lt!46844 (lemmaContainsTupThenGetReturnValue!65 lt!46842 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24601 (= lt!46842 (insertStrictlySorted!67 (toList!785 lt!46555) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24601 (= (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46845)))

(declare-fun b!94481 () Bool)

(declare-fun res!47806 () Bool)

(assert (=> b!94481 (=> (not res!47806) (not e!61679))))

(assert (=> b!94481 (= res!47806 (= (getValueByKey!147 (toList!785 lt!46845) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!94482 () Bool)

(assert (=> b!94482 (= e!61679 (contains!799 (toList!785 lt!46845) (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!24601 res!47805) b!94481))

(assert (= (and b!94481 res!47806) b!94482))

(declare-fun m!101469 () Bool)

(assert (=> d!24601 m!101469))

(declare-fun m!101471 () Bool)

(assert (=> d!24601 m!101471))

(declare-fun m!101473 () Bool)

(assert (=> d!24601 m!101473))

(declare-fun m!101475 () Bool)

(assert (=> d!24601 m!101475))

(declare-fun m!101477 () Bool)

(assert (=> b!94481 m!101477))

(declare-fun m!101479 () Bool)

(assert (=> b!94482 m!101479))

(assert (=> b!94150 d!24601))

(declare-fun d!24603 () Bool)

(declare-fun e!61680 () Bool)

(assert (=> d!24603 e!61680))

(declare-fun res!47807 () Bool)

(assert (=> d!24603 (=> (not res!47807) (not e!61680))))

(declare-fun lt!46849 () ListLongMap!1539)

(assert (=> d!24603 (= res!47807 (contains!797 lt!46849 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!46846 () List!1600)

(assert (=> d!24603 (= lt!46849 (ListLongMap!1540 lt!46846))))

(declare-fun lt!46847 () Unit!2822)

(declare-fun lt!46848 () Unit!2822)

(assert (=> d!24603 (= lt!46847 lt!46848)))

(assert (=> d!24603 (= (getValueByKey!147 lt!46846 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24603 (= lt!46848 (lemmaContainsTupThenGetReturnValue!65 lt!46846 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24603 (= lt!46846 (insertStrictlySorted!67 (toList!785 lt!46548) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24603 (= (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46849)))

(declare-fun b!94483 () Bool)

(declare-fun res!47808 () Bool)

(assert (=> b!94483 (=> (not res!47808) (not e!61680))))

(assert (=> b!94483 (= res!47808 (= (getValueByKey!147 (toList!785 lt!46849) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!94484 () Bool)

(assert (=> b!94484 (= e!61680 (contains!799 (toList!785 lt!46849) (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!24603 res!47807) b!94483))

(assert (= (and b!94483 res!47808) b!94484))

(declare-fun m!101481 () Bool)

(assert (=> d!24603 m!101481))

(declare-fun m!101483 () Bool)

(assert (=> d!24603 m!101483))

(declare-fun m!101485 () Bool)

(assert (=> d!24603 m!101485))

(declare-fun m!101487 () Bool)

(assert (=> d!24603 m!101487))

(declare-fun m!101489 () Bool)

(assert (=> b!94483 m!101489))

(declare-fun m!101491 () Bool)

(assert (=> b!94484 m!101491))

(assert (=> b!94150 d!24603))

(assert (=> b!94150 d!24585))

(declare-fun d!24605 () Bool)

(declare-fun e!61681 () Bool)

(assert (=> d!24605 e!61681))

(declare-fun res!47809 () Bool)

(assert (=> d!24605 (=> (not res!47809) (not e!61681))))

(declare-fun lt!46853 () ListLongMap!1539)

(assert (=> d!24605 (= res!47809 (contains!797 lt!46853 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!46850 () List!1600)

(assert (=> d!24605 (= lt!46853 (ListLongMap!1540 lt!46850))))

(declare-fun lt!46851 () Unit!2822)

(declare-fun lt!46852 () Unit!2822)

(assert (=> d!24605 (= lt!46851 lt!46852)))

(assert (=> d!24605 (= (getValueByKey!147 lt!46850 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24605 (= lt!46852 (lemmaContainsTupThenGetReturnValue!65 lt!46850 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24605 (= lt!46850 (insertStrictlySorted!67 (toList!785 lt!46553) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24605 (= (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46853)))

(declare-fun b!94485 () Bool)

(declare-fun res!47810 () Bool)

(assert (=> b!94485 (=> (not res!47810) (not e!61681))))

(assert (=> b!94485 (= res!47810 (= (getValueByKey!147 (toList!785 lt!46853) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!94486 () Bool)

(assert (=> b!94486 (= e!61681 (contains!799 (toList!785 lt!46853) (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!24605 res!47809) b!94485))

(assert (= (and b!94485 res!47810) b!94486))

(declare-fun m!101493 () Bool)

(assert (=> d!24605 m!101493))

(declare-fun m!101495 () Bool)

(assert (=> d!24605 m!101495))

(declare-fun m!101497 () Bool)

(assert (=> d!24605 m!101497))

(declare-fun m!101499 () Bool)

(assert (=> d!24605 m!101499))

(declare-fun m!101501 () Bool)

(assert (=> b!94485 m!101501))

(declare-fun m!101503 () Bool)

(assert (=> b!94486 m!101503))

(assert (=> b!94150 d!24605))

(declare-fun d!24607 () Bool)

(assert (=> d!24607 (= (apply!90 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46549) (apply!90 lt!46550 lt!46549))))

(declare-fun lt!46856 () Unit!2822)

(declare-fun choose!572 (ListLongMap!1539 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2822)

(assert (=> d!24607 (= lt!46856 (choose!572 lt!46550 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46549))))

(declare-fun e!61684 () Bool)

(assert (=> d!24607 e!61684))

(declare-fun res!47813 () Bool)

(assert (=> d!24607 (=> (not res!47813) (not e!61684))))

(assert (=> d!24607 (= res!47813 (contains!797 lt!46550 lt!46549))))

(assert (=> d!24607 (= (addApplyDifferent!66 lt!46550 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46549) lt!46856)))

(declare-fun b!94490 () Bool)

(assert (=> b!94490 (= e!61684 (not (= lt!46549 lt!46565)))))

(assert (= (and d!24607 res!47813) b!94490))

(declare-fun m!101505 () Bool)

(assert (=> d!24607 m!101505))

(assert (=> d!24607 m!101171))

(assert (=> d!24607 m!101173))

(declare-fun m!101507 () Bool)

(assert (=> d!24607 m!101507))

(assert (=> d!24607 m!101169))

(assert (=> d!24607 m!101171))

(assert (=> b!94150 d!24607))

(declare-fun d!24609 () Bool)

(assert (=> d!24609 (= (apply!90 lt!46553 lt!46568) (get!1283 (getValueByKey!147 (toList!785 lt!46553) lt!46568)))))

(declare-fun bs!3856 () Bool)

(assert (= bs!3856 d!24609))

(declare-fun m!101509 () Bool)

(assert (=> bs!3856 m!101509))

(assert (=> bs!3856 m!101509))

(declare-fun m!101511 () Bool)

(assert (=> bs!3856 m!101511))

(assert (=> b!94150 d!24609))

(declare-fun d!24611 () Bool)

(assert (=> d!24611 (contains!797 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46556)))

(declare-fun lt!46859 () Unit!2822)

(declare-fun choose!573 (ListLongMap!1539 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2822)

(assert (=> d!24611 (= lt!46859 (choose!573 lt!46555 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46556))))

(assert (=> d!24611 (contains!797 lt!46555 lt!46556)))

(assert (=> d!24611 (= (addStillContains!66 lt!46555 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46556) lt!46859)))

(declare-fun bs!3857 () Bool)

(assert (= bs!3857 d!24611))

(assert (=> bs!3857 m!101149))

(assert (=> bs!3857 m!101149))

(assert (=> bs!3857 m!101151))

(declare-fun m!101513 () Bool)

(assert (=> bs!3857 m!101513))

(declare-fun m!101515 () Bool)

(assert (=> bs!3857 m!101515))

(assert (=> b!94150 d!24611))

(declare-fun d!24613 () Bool)

(assert (=> d!24613 (= (apply!90 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46568) (apply!90 lt!46553 lt!46568))))

(declare-fun lt!46860 () Unit!2822)

(assert (=> d!24613 (= lt!46860 (choose!572 lt!46553 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46568))))

(declare-fun e!61685 () Bool)

(assert (=> d!24613 e!61685))

(declare-fun res!47814 () Bool)

(assert (=> d!24613 (=> (not res!47814) (not e!61685))))

(assert (=> d!24613 (= res!47814 (contains!797 lt!46553 lt!46568))))

(assert (=> d!24613 (= (addApplyDifferent!66 lt!46553 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46568) lt!46860)))

(declare-fun b!94492 () Bool)

(assert (=> b!94492 (= e!61685 (not (= lt!46568 lt!46561)))))

(assert (= (and d!24613 res!47814) b!94492))

(declare-fun m!101517 () Bool)

(assert (=> d!24613 m!101517))

(assert (=> d!24613 m!101153))

(assert (=> d!24613 m!101155))

(declare-fun m!101519 () Bool)

(assert (=> d!24613 m!101519))

(assert (=> d!24613 m!101161))

(assert (=> d!24613 m!101153))

(assert (=> b!94150 d!24613))

(declare-fun d!24615 () Bool)

(assert (=> d!24615 (= (apply!90 lt!46548 lt!46558) (get!1283 (getValueByKey!147 (toList!785 lt!46548) lt!46558)))))

(declare-fun bs!3858 () Bool)

(assert (= bs!3858 d!24615))

(declare-fun m!101521 () Bool)

(assert (=> bs!3858 m!101521))

(assert (=> bs!3858 m!101521))

(declare-fun m!101523 () Bool)

(assert (=> bs!3858 m!101523))

(assert (=> b!94150 d!24615))

(declare-fun d!24617 () Bool)

(declare-fun e!61686 () Bool)

(assert (=> d!24617 e!61686))

(declare-fun res!47815 () Bool)

(assert (=> d!24617 (=> res!47815 e!61686)))

(declare-fun lt!46863 () Bool)

(assert (=> d!24617 (= res!47815 (not lt!46863))))

(declare-fun lt!46861 () Bool)

(assert (=> d!24617 (= lt!46863 lt!46861)))

(declare-fun lt!46862 () Unit!2822)

(declare-fun e!61687 () Unit!2822)

(assert (=> d!24617 (= lt!46862 e!61687)))

(declare-fun c!15784 () Bool)

(assert (=> d!24617 (= c!15784 lt!46861)))

(assert (=> d!24617 (= lt!46861 (containsKey!151 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556))))

(assert (=> d!24617 (= (contains!797 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46556) lt!46863)))

(declare-fun b!94493 () Bool)

(declare-fun lt!46864 () Unit!2822)

(assert (=> b!94493 (= e!61687 lt!46864)))

(assert (=> b!94493 (= lt!46864 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556))))

(assert (=> b!94493 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556))))

(declare-fun b!94494 () Bool)

(declare-fun Unit!2836 () Unit!2822)

(assert (=> b!94494 (= e!61687 Unit!2836)))

(declare-fun b!94495 () Bool)

(assert (=> b!94495 (= e!61686 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556)))))

(assert (= (and d!24617 c!15784) b!94493))

(assert (= (and d!24617 (not c!15784)) b!94494))

(assert (= (and d!24617 (not res!47815)) b!94495))

(declare-fun m!101525 () Bool)

(assert (=> d!24617 m!101525))

(declare-fun m!101527 () Bool)

(assert (=> b!94493 m!101527))

(declare-fun m!101529 () Bool)

(assert (=> b!94493 m!101529))

(assert (=> b!94493 m!101529))

(declare-fun m!101531 () Bool)

(assert (=> b!94493 m!101531))

(assert (=> b!94495 m!101529))

(assert (=> b!94495 m!101529))

(assert (=> b!94495 m!101531))

(assert (=> b!94150 d!24617))

(declare-fun d!24619 () Bool)

(assert (=> d!24619 (= (apply!90 lt!46550 lt!46549) (get!1283 (getValueByKey!147 (toList!785 lt!46550) lt!46549)))))

(declare-fun bs!3859 () Bool)

(assert (= bs!3859 d!24619))

(declare-fun m!101533 () Bool)

(assert (=> bs!3859 m!101533))

(assert (=> bs!3859 m!101533))

(declare-fun m!101535 () Bool)

(assert (=> bs!3859 m!101535))

(assert (=> b!94150 d!24619))

(declare-fun d!24621 () Bool)

(declare-fun e!61688 () Bool)

(assert (=> d!24621 e!61688))

(declare-fun res!47816 () Bool)

(assert (=> d!24621 (=> (not res!47816) (not e!61688))))

(declare-fun lt!46868 () ListLongMap!1539)

(assert (=> d!24621 (= res!47816 (contains!797 lt!46868 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!46865 () List!1600)

(assert (=> d!24621 (= lt!46868 (ListLongMap!1540 lt!46865))))

(declare-fun lt!46866 () Unit!2822)

(declare-fun lt!46867 () Unit!2822)

(assert (=> d!24621 (= lt!46866 lt!46867)))

(assert (=> d!24621 (= (getValueByKey!147 lt!46865 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24621 (= lt!46867 (lemmaContainsTupThenGetReturnValue!65 lt!46865 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24621 (= lt!46865 (insertStrictlySorted!67 (toList!785 lt!46550) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24621 (= (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46868)))

(declare-fun b!94496 () Bool)

(declare-fun res!47817 () Bool)

(assert (=> b!94496 (=> (not res!47817) (not e!61688))))

(assert (=> b!94496 (= res!47817 (= (getValueByKey!147 (toList!785 lt!46868) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!94497 () Bool)

(assert (=> b!94497 (= e!61688 (contains!799 (toList!785 lt!46868) (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!24621 res!47816) b!94496))

(assert (= (and b!94496 res!47817) b!94497))

(declare-fun m!101537 () Bool)

(assert (=> d!24621 m!101537))

(declare-fun m!101539 () Bool)

(assert (=> d!24621 m!101539))

(declare-fun m!101541 () Bool)

(assert (=> d!24621 m!101541))

(declare-fun m!101543 () Bool)

(assert (=> d!24621 m!101543))

(declare-fun m!101545 () Bool)

(assert (=> b!94496 m!101545))

(declare-fun m!101547 () Bool)

(assert (=> b!94497 m!101547))

(assert (=> b!94150 d!24621))

(declare-fun d!24623 () Bool)

(assert (=> d!24623 (= (apply!90 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46558) (apply!90 lt!46548 lt!46558))))

(declare-fun lt!46869 () Unit!2822)

(assert (=> d!24623 (= lt!46869 (choose!572 lt!46548 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46558))))

(declare-fun e!61689 () Bool)

(assert (=> d!24623 e!61689))

(declare-fun res!47818 () Bool)

(assert (=> d!24623 (=> (not res!47818) (not e!61689))))

(assert (=> d!24623 (= res!47818 (contains!797 lt!46548 lt!46558))))

(assert (=> d!24623 (= (addApplyDifferent!66 lt!46548 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46558) lt!46869)))

(declare-fun b!94498 () Bool)

(assert (=> b!94498 (= e!61689 (not (= lt!46558 lt!46560)))))

(assert (= (and d!24623 res!47818) b!94498))

(declare-fun m!101549 () Bool)

(assert (=> d!24623 m!101549))

(assert (=> d!24623 m!101157))

(assert (=> d!24623 m!101163))

(declare-fun m!101551 () Bool)

(assert (=> d!24623 m!101551))

(assert (=> d!24623 m!101159))

(assert (=> d!24623 m!101157))

(assert (=> b!94150 d!24623))

(declare-fun d!24625 () Bool)

(assert (=> d!24625 (= (apply!90 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46568) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46568)))))

(declare-fun bs!3860 () Bool)

(assert (= bs!3860 d!24625))

(declare-fun m!101553 () Bool)

(assert (=> bs!3860 m!101553))

(assert (=> bs!3860 m!101553))

(declare-fun m!101555 () Bool)

(assert (=> bs!3860 m!101555))

(assert (=> b!94150 d!24625))

(declare-fun d!24627 () Bool)

(declare-fun res!47819 () Bool)

(declare-fun e!61690 () Bool)

(assert (=> d!24627 (=> res!47819 e!61690)))

(assert (=> d!24627 (= res!47819 (= (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24627 (= (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000) e!61690)))

(declare-fun b!94499 () Bool)

(declare-fun e!61691 () Bool)

(assert (=> b!94499 (= e!61690 e!61691)))

(declare-fun res!47820 () Bool)

(assert (=> b!94499 (=> (not res!47820) (not e!61691))))

(assert (=> b!94499 (= res!47820 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94500 () Bool)

(assert (=> b!94500 (= e!61691 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24627 (not res!47819)) b!94499))

(assert (= (and b!94499 res!47820) b!94500))

(assert (=> d!24627 m!101279))

(assert (=> b!94500 m!101017))

(declare-fun m!101557 () Bool)

(assert (=> b!94500 m!101557))

(assert (=> bm!9432 d!24627))

(declare-fun d!24629 () Bool)

(assert (=> d!24629 (= (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (and (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94078 d!24629))

(declare-fun d!24631 () Bool)

(declare-fun lt!46872 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!96 (List!1601) (InoxSet (_ BitVec 64)))

(assert (=> d!24631 (= lt!46872 (select (content!96 Nil!1598) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61696 () Bool)

(assert (=> d!24631 (= lt!46872 e!61696)))

(declare-fun res!47826 () Bool)

(assert (=> d!24631 (=> (not res!47826) (not e!61696))))

(assert (=> d!24631 (= res!47826 ((_ is Cons!1597) Nil!1598))))

(assert (=> d!24631 (= (contains!798 Nil!1598 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!46872)))

(declare-fun b!94505 () Bool)

(declare-fun e!61697 () Bool)

(assert (=> b!94505 (= e!61696 e!61697)))

(declare-fun res!47825 () Bool)

(assert (=> b!94505 (=> res!47825 e!61697)))

(assert (=> b!94505 (= res!47825 (= (h!2189 Nil!1598) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94506 () Bool)

(assert (=> b!94506 (= e!61697 (contains!798 (t!5507 Nil!1598) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24631 res!47826) b!94505))

(assert (= (and b!94505 (not res!47825)) b!94506))

(declare-fun m!101559 () Bool)

(assert (=> d!24631 m!101559))

(assert (=> d!24631 m!101017))

(declare-fun m!101561 () Bool)

(assert (=> d!24631 m!101561))

(assert (=> b!94506 m!101017))

(declare-fun m!101563 () Bool)

(assert (=> b!94506 m!101563))

(assert (=> b!94080 d!24631))

(declare-fun b!94523 () Bool)

(declare-fun e!61707 () Bool)

(declare-fun e!61708 () Bool)

(assert (=> b!94523 (= e!61707 e!61708)))

(declare-fun c!15790 () Bool)

(declare-fun lt!46878 () SeekEntryResult!261)

(assert (=> b!94523 (= c!15790 ((_ is MissingVacant!261) lt!46878))))

(declare-fun b!94524 () Bool)

(declare-fun e!61706 () Bool)

(declare-fun call!9486 () Bool)

(assert (=> b!94524 (= e!61706 (not call!9486))))

(declare-fun b!94525 () Bool)

(assert (=> b!94525 (and (bvsge (index!3185 lt!46878) #b00000000000000000000000000000000) (bvslt (index!3185 lt!46878) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun res!47835 () Bool)

(assert (=> b!94525 (= res!47835 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3185 lt!46878)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61709 () Bool)

(assert (=> b!94525 (=> (not res!47835) (not e!61709))))

(declare-fun d!24633 () Bool)

(assert (=> d!24633 e!61707))

(declare-fun c!15789 () Bool)

(assert (=> d!24633 (= c!15789 ((_ is MissingZero!261) lt!46878))))

(assert (=> d!24633 (= lt!46878 (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun lt!46877 () Unit!2822)

(declare-fun choose!574 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2822)

(assert (=> d!24633 (= lt!46877 (choose!574 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24633 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24633 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) lt!46877)))

(declare-fun bm!9483 () Bool)

(declare-fun call!9487 () Bool)

(assert (=> bm!9483 (= call!9487 (inRange!0 (ite c!15789 (index!3185 lt!46878) (index!3188 lt!46878)) (mask!6511 newMap!16)))))

(declare-fun bm!9484 () Bool)

(assert (=> bm!9484 (= call!9486 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94526 () Bool)

(declare-fun res!47837 () Bool)

(assert (=> b!94526 (=> (not res!47837) (not e!61706))))

(assert (=> b!94526 (= res!47837 call!9487)))

(assert (=> b!94526 (= e!61708 e!61706)))

(declare-fun b!94527 () Bool)

(assert (=> b!94527 (= e!61709 (not call!9486))))

(declare-fun b!94528 () Bool)

(assert (=> b!94528 (= e!61708 ((_ is Undefined!261) lt!46878))))

(declare-fun b!94529 () Bool)

(declare-fun res!47838 () Bool)

(assert (=> b!94529 (=> (not res!47838) (not e!61706))))

(assert (=> b!94529 (= res!47838 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!46878)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94529 (and (bvsge (index!3188 lt!46878) #b00000000000000000000000000000000) (bvslt (index!3188 lt!46878) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94530 () Bool)

(assert (=> b!94530 (= e!61707 e!61709)))

(declare-fun res!47836 () Bool)

(assert (=> b!94530 (= res!47836 call!9487)))

(assert (=> b!94530 (=> (not res!47836) (not e!61709))))

(assert (= (and d!24633 c!15789) b!94530))

(assert (= (and d!24633 (not c!15789)) b!94523))

(assert (= (and b!94530 res!47836) b!94525))

(assert (= (and b!94525 res!47835) b!94527))

(assert (= (and b!94523 c!15790) b!94526))

(assert (= (and b!94523 (not c!15790)) b!94528))

(assert (= (and b!94526 res!47837) b!94529))

(assert (= (and b!94529 res!47838) b!94524))

(assert (= (or b!94530 b!94526) bm!9483))

(assert (= (or b!94527 b!94524) bm!9484))

(declare-fun m!101565 () Bool)

(assert (=> bm!9483 m!101565))

(declare-fun m!101567 () Bool)

(assert (=> b!94529 m!101567))

(assert (=> bm!9484 m!101017))

(assert (=> bm!9484 m!101219))

(assert (=> d!24633 m!101017))

(assert (=> d!24633 m!101187))

(assert (=> d!24633 m!101017))

(declare-fun m!101569 () Bool)

(assert (=> d!24633 m!101569))

(assert (=> d!24633 m!101265))

(declare-fun m!101571 () Bool)

(assert (=> b!94525 m!101571))

(assert (=> bm!9441 d!24633))

(declare-fun d!24635 () Bool)

(declare-fun res!47843 () Bool)

(declare-fun e!61714 () Bool)

(assert (=> d!24635 (=> res!47843 e!61714)))

(assert (=> d!24635 (= res!47843 (and ((_ is Cons!1596) (toList!785 lt!46466)) (= (_1!1177 (h!2188 (toList!785 lt!46466))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24635 (= (containsKey!151 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!61714)))

(declare-fun b!94535 () Bool)

(declare-fun e!61715 () Bool)

(assert (=> b!94535 (= e!61714 e!61715)))

(declare-fun res!47844 () Bool)

(assert (=> b!94535 (=> (not res!47844) (not e!61715))))

(assert (=> b!94535 (= res!47844 (and (or (not ((_ is Cons!1596) (toList!785 lt!46466))) (bvsle (_1!1177 (h!2188 (toList!785 lt!46466))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1596) (toList!785 lt!46466)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46466))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!94536 () Bool)

(assert (=> b!94536 (= e!61715 (containsKey!151 (t!5506 (toList!785 lt!46466)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24635 (not res!47843)) b!94535))

(assert (= (and b!94535 res!47844) b!94536))

(assert (=> b!94536 m!101017))

(declare-fun m!101573 () Bool)

(assert (=> b!94536 m!101573))

(assert (=> d!24553 d!24635))

(declare-fun d!24637 () Bool)

(assert (=> d!24637 (= (apply!90 lt!46547 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3861 () Bool)

(assert (= bs!3861 d!24637))

(assert (=> bs!3861 m!101337))

(assert (=> bs!3861 m!101337))

(declare-fun m!101575 () Bool)

(assert (=> bs!3861 m!101575))

(assert (=> b!94137 d!24637))

(declare-fun d!24639 () Bool)

(declare-fun res!47855 () Bool)

(declare-fun e!61718 () Bool)

(assert (=> d!24639 (=> (not res!47855) (not e!61718))))

(assert (=> d!24639 (= res!47855 (validMask!0 (mask!6511 newMap!16)))))

(assert (=> d!24639 (= (simpleValid!65 newMap!16) e!61718)))

(declare-fun b!94547 () Bool)

(declare-fun res!47856 () Bool)

(assert (=> b!94547 (=> (not res!47856) (not e!61718))))

(declare-fun size!2248 (LongMapFixedSize!834) (_ BitVec 32))

(assert (=> b!94547 (= res!47856 (= (size!2248 newMap!16) (bvadd (_size!466 newMap!16) (bvsdiv (bvadd (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!94548 () Bool)

(assert (=> b!94548 (= e!61718 (and (bvsge (extraKeys!2265 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2265 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!466 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!94546 () Bool)

(declare-fun res!47854 () Bool)

(assert (=> b!94546 (=> (not res!47854) (not e!61718))))

(assert (=> b!94546 (= res!47854 (bvsge (size!2248 newMap!16) (_size!466 newMap!16)))))

(declare-fun b!94545 () Bool)

(declare-fun res!47853 () Bool)

(assert (=> b!94545 (=> (not res!47853) (not e!61718))))

(assert (=> b!94545 (= res!47853 (and (= (size!2245 (_values!2419 newMap!16)) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001)) (= (size!2244 (_keys!4118 newMap!16)) (size!2245 (_values!2419 newMap!16))) (bvsge (_size!466 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!466 newMap!16) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!24639 res!47855) b!94545))

(assert (= (and b!94545 res!47853) b!94546))

(assert (= (and b!94546 res!47854) b!94547))

(assert (= (and b!94547 res!47856) b!94548))

(assert (=> d!24639 m!101265))

(declare-fun m!101577 () Bool)

(assert (=> b!94547 m!101577))

(assert (=> b!94546 m!101577))

(assert (=> d!24547 d!24639))

(assert (=> d!24551 d!24539))

(declare-fun bm!9487 () Bool)

(declare-fun call!9490 () Bool)

(assert (=> bm!9487 (= call!9490 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94557 () Bool)

(declare-fun e!61725 () Bool)

(declare-fun e!61726 () Bool)

(assert (=> b!94557 (= e!61725 e!61726)))

(declare-fun lt!46887 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46887 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46886 () Unit!2822)

(assert (=> b!94557 (= lt!46886 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 newMap!16) lt!46887 #b00000000000000000000000000000000))))

(assert (=> b!94557 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46887 #b00000000000000000000000000000000)))

(declare-fun lt!46885 () Unit!2822)

(assert (=> b!94557 (= lt!46885 lt!46886)))

(declare-fun res!47862 () Bool)

(assert (=> b!94557 (= res!47862 (= (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!94557 (=> (not res!47862) (not e!61726))))

(declare-fun d!24641 () Bool)

(declare-fun res!47861 () Bool)

(declare-fun e!61727 () Bool)

(assert (=> d!24641 (=> res!47861 e!61727)))

(assert (=> d!24641 (= res!47861 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24641 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 newMap!16) (mask!6511 newMap!16)) e!61727)))

(declare-fun b!94558 () Bool)

(assert (=> b!94558 (= e!61727 e!61725)))

(declare-fun c!15793 () Bool)

(assert (=> b!94558 (= c!15793 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94559 () Bool)

(assert (=> b!94559 (= e!61726 call!9490)))

(declare-fun b!94560 () Bool)

(assert (=> b!94560 (= e!61725 call!9490)))

(assert (= (and d!24641 (not res!47861)) b!94558))

(assert (= (and b!94558 c!15793) b!94557))

(assert (= (and b!94558 (not c!15793)) b!94560))

(assert (= (and b!94557 res!47862) b!94559))

(assert (= (or b!94559 b!94560) bm!9487))

(declare-fun m!101579 () Bool)

(assert (=> bm!9487 m!101579))

(assert (=> b!94557 m!101279))

(declare-fun m!101581 () Bool)

(assert (=> b!94557 m!101581))

(declare-fun m!101583 () Bool)

(assert (=> b!94557 m!101583))

(assert (=> b!94557 m!101279))

(declare-fun m!101585 () Bool)

(assert (=> b!94557 m!101585))

(assert (=> b!94558 m!101279))

(assert (=> b!94558 m!101279))

(assert (=> b!94558 m!101287))

(assert (=> b!94089 d!24641))

(declare-fun d!24643 () Bool)

(assert (=> d!24643 (= (get!1282 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94288 d!24643))

(declare-fun bm!9488 () Bool)

(declare-fun call!9491 () Bool)

(declare-fun c!15794 () Bool)

(assert (=> bm!9488 (= call!9491 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15794 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598))))))

(declare-fun b!94561 () Bool)

(declare-fun e!61729 () Bool)

(assert (=> b!94561 (= e!61729 call!9491)))

(declare-fun b!94562 () Bool)

(declare-fun e!61728 () Bool)

(assert (=> b!94562 (= e!61728 e!61729)))

(assert (=> b!94562 (= c!15794 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!24645 () Bool)

(declare-fun res!47864 () Bool)

(declare-fun e!61730 () Bool)

(assert (=> d!24645 (=> res!47864 e!61730)))

(assert (=> d!24645 (= res!47864 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!24645 (= (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) e!61730)))

(declare-fun b!94563 () Bool)

(assert (=> b!94563 (= e!61730 e!61728)))

(declare-fun res!47863 () Bool)

(assert (=> b!94563 (=> (not res!47863) (not e!61728))))

(declare-fun e!61731 () Bool)

(assert (=> b!94563 (= res!47863 (not e!61731))))

(declare-fun res!47865 () Bool)

(assert (=> b!94563 (=> (not res!47865) (not e!61731))))

(assert (=> b!94563 (= res!47865 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94564 () Bool)

(assert (=> b!94564 (= e!61731 (contains!798 (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94565 () Bool)

(assert (=> b!94565 (= e!61729 call!9491)))

(assert (= (and d!24645 (not res!47864)) b!94563))

(assert (= (and b!94563 res!47865) b!94564))

(assert (= (and b!94563 res!47863) b!94562))

(assert (= (and b!94562 c!15794) b!94561))

(assert (= (and b!94562 (not c!15794)) b!94565))

(assert (= (or b!94561 b!94565) bm!9488))

(declare-fun m!101587 () Bool)

(assert (=> bm!9488 m!101587))

(declare-fun m!101589 () Bool)

(assert (=> bm!9488 m!101589))

(assert (=> b!94562 m!101587))

(assert (=> b!94562 m!101587))

(declare-fun m!101591 () Bool)

(assert (=> b!94562 m!101591))

(assert (=> b!94563 m!101587))

(assert (=> b!94563 m!101587))

(assert (=> b!94563 m!101591))

(assert (=> b!94564 m!101587))

(assert (=> b!94564 m!101587))

(declare-fun m!101593 () Bool)

(assert (=> b!94564 m!101593))

(assert (=> bm!9359 d!24645))

(declare-fun bm!9489 () Bool)

(declare-fun call!9494 () Bool)

(declare-fun lt!46888 () ListLongMap!1539)

(assert (=> bm!9489 (= call!9494 (contains!797 lt!46888 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94566 () Bool)

(declare-fun e!61739 () ListLongMap!1539)

(declare-fun e!61743 () ListLongMap!1539)

(assert (=> b!94566 (= e!61739 e!61743)))

(declare-fun c!15798 () Bool)

(assert (=> b!94566 (= c!15798 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94567 () Bool)

(declare-fun e!61741 () ListLongMap!1539)

(declare-fun call!9496 () ListLongMap!1539)

(assert (=> b!94567 (= e!61741 call!9496)))

(declare-fun b!94568 () Bool)

(declare-fun res!47867 () Bool)

(declare-fun e!61733 () Bool)

(assert (=> b!94568 (=> (not res!47867) (not e!61733))))

(declare-fun e!61734 () Bool)

(assert (=> b!94568 (= res!47867 e!61734)))

(declare-fun res!47870 () Bool)

(assert (=> b!94568 (=> res!47870 e!61734)))

(declare-fun e!61735 () Bool)

(assert (=> b!94568 (= res!47870 (not e!61735))))

(declare-fun res!47873 () Bool)

(assert (=> b!94568 (=> (not res!47873) (not e!61735))))

(assert (=> b!94568 (= res!47873 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94569 () Bool)

(declare-fun call!9497 () ListLongMap!1539)

(assert (=> b!94569 (= e!61739 (+!136 call!9497 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!94571 () Bool)

(declare-fun res!47872 () Bool)

(assert (=> b!94571 (=> (not res!47872) (not e!61733))))

(declare-fun e!61738 () Bool)

(assert (=> b!94571 (= res!47872 e!61738)))

(declare-fun c!15796 () Bool)

(assert (=> b!94571 (= c!15796 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94572 () Bool)

(assert (=> b!94572 (= e!61738 (not call!9494))))

(declare-fun e!61732 () Bool)

(declare-fun b!94573 () Bool)

(assert (=> b!94573 (= e!61732 (= (apply!90 lt!46888 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94573 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (ite c!15716 (_values!2419 newMap!16) lt!46653))))))

(assert (=> b!94573 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94574 () Bool)

(assert (=> b!94574 (= e!61743 call!9496)))

(declare-fun b!94575 () Bool)

(declare-fun e!61736 () Bool)

(assert (=> b!94575 (= e!61736 (= (apply!90 lt!46888 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94576 () Bool)

(declare-fun e!61740 () Bool)

(assert (=> b!94576 (= e!61740 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94577 () Bool)

(assert (=> b!94577 (= e!61735 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9490 () Bool)

(declare-fun call!9493 () ListLongMap!1539)

(assert (=> bm!9490 (= call!9493 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9491 () Bool)

(declare-fun call!9498 () Bool)

(assert (=> bm!9491 (= call!9498 (contains!797 lt!46888 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94578 () Bool)

(declare-fun e!61742 () Unit!2822)

(declare-fun Unit!2837 () Unit!2822)

(assert (=> b!94578 (= e!61742 Unit!2837)))

(declare-fun c!15799 () Bool)

(declare-fun call!9492 () ListLongMap!1539)

(declare-fun call!9495 () ListLongMap!1539)

(declare-fun bm!9492 () Bool)

(assert (=> bm!9492 (= call!9497 (+!136 (ite c!15799 call!9493 (ite c!15798 call!9492 call!9495)) (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!94579 () Bool)

(declare-fun e!61737 () Bool)

(assert (=> b!94579 (= e!61733 e!61737)))

(declare-fun c!15800 () Bool)

(assert (=> b!94579 (= c!15800 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94580 () Bool)

(declare-fun c!15795 () Bool)

(assert (=> b!94580 (= c!15795 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94580 (= e!61743 e!61741)))

(declare-fun b!94581 () Bool)

(assert (=> b!94581 (= e!61737 (not call!9498))))

(declare-fun d!24647 () Bool)

(assert (=> d!24647 e!61733))

(declare-fun res!47868 () Bool)

(assert (=> d!24647 (=> (not res!47868) (not e!61733))))

(assert (=> d!24647 (= res!47868 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!46893 () ListLongMap!1539)

(assert (=> d!24647 (= lt!46888 lt!46893)))

(declare-fun lt!46907 () Unit!2822)

(assert (=> d!24647 (= lt!46907 e!61742)))

(declare-fun c!15797 () Bool)

(assert (=> d!24647 (= c!15797 e!61740)))

(declare-fun res!47874 () Bool)

(assert (=> d!24647 (=> (not res!47874) (not e!61740))))

(assert (=> d!24647 (= res!47874 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24647 (= lt!46893 e!61739)))

(assert (=> d!24647 (= c!15799 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24647 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24647 (= (getCurrentListMap!466 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46888)))

(declare-fun b!94570 () Bool)

(declare-fun e!61744 () Bool)

(assert (=> b!94570 (= e!61744 (= (apply!90 lt!46888 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94582 () Bool)

(assert (=> b!94582 (= e!61741 call!9495)))

(declare-fun bm!9493 () Bool)

(assert (=> bm!9493 (= call!9495 call!9492)))

(declare-fun b!94583 () Bool)

(declare-fun lt!46904 () Unit!2822)

(assert (=> b!94583 (= e!61742 lt!46904)))

(declare-fun lt!46896 () ListLongMap!1539)

(assert (=> b!94583 (= lt!46896 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46895 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46895 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46897 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46897 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46898 () Unit!2822)

(assert (=> b!94583 (= lt!46898 (addStillContains!66 lt!46896 lt!46895 (zeroValue!2323 newMap!16) lt!46897))))

(assert (=> b!94583 (contains!797 (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))) lt!46897)))

(declare-fun lt!46903 () Unit!2822)

(assert (=> b!94583 (= lt!46903 lt!46898)))

(declare-fun lt!46889 () ListLongMap!1539)

(assert (=> b!94583 (= lt!46889 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46901 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46901 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46899 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46899 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46900 () Unit!2822)

(assert (=> b!94583 (= lt!46900 (addApplyDifferent!66 lt!46889 lt!46901 (minValue!2323 newMap!16) lt!46899))))

(assert (=> b!94583 (= (apply!90 (+!136 lt!46889 (tuple2!2335 lt!46901 (minValue!2323 newMap!16))) lt!46899) (apply!90 lt!46889 lt!46899))))

(declare-fun lt!46908 () Unit!2822)

(assert (=> b!94583 (= lt!46908 lt!46900)))

(declare-fun lt!46894 () ListLongMap!1539)

(assert (=> b!94583 (= lt!46894 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46902 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46902 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46909 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46909 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46892 () Unit!2822)

(assert (=> b!94583 (= lt!46892 (addApplyDifferent!66 lt!46894 lt!46902 (zeroValue!2323 newMap!16) lt!46909))))

(assert (=> b!94583 (= (apply!90 (+!136 lt!46894 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))) lt!46909) (apply!90 lt!46894 lt!46909))))

(declare-fun lt!46905 () Unit!2822)

(assert (=> b!94583 (= lt!46905 lt!46892)))

(declare-fun lt!46891 () ListLongMap!1539)

(assert (=> b!94583 (= lt!46891 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46906 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46906 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46890 () (_ BitVec 64))

(assert (=> b!94583 (= lt!46890 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94583 (= lt!46904 (addApplyDifferent!66 lt!46891 lt!46906 (minValue!2323 newMap!16) lt!46890))))

(assert (=> b!94583 (= (apply!90 (+!136 lt!46891 (tuple2!2335 lt!46906 (minValue!2323 newMap!16))) lt!46890) (apply!90 lt!46891 lt!46890))))

(declare-fun b!94584 () Bool)

(assert (=> b!94584 (= e!61734 e!61732)))

(declare-fun res!47866 () Bool)

(assert (=> b!94584 (=> (not res!47866) (not e!61732))))

(assert (=> b!94584 (= res!47866 (contains!797 lt!46888 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94584 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9494 () Bool)

(assert (=> bm!9494 (= call!9492 call!9493)))

(declare-fun b!94585 () Bool)

(assert (=> b!94585 (= e!61738 e!61744)))

(declare-fun res!47871 () Bool)

(assert (=> b!94585 (= res!47871 call!9494)))

(assert (=> b!94585 (=> (not res!47871) (not e!61744))))

(declare-fun b!94586 () Bool)

(assert (=> b!94586 (= e!61737 e!61736)))

(declare-fun res!47869 () Bool)

(assert (=> b!94586 (= res!47869 call!9498)))

(assert (=> b!94586 (=> (not res!47869) (not e!61736))))

(declare-fun bm!9495 () Bool)

(assert (=> bm!9495 (= call!9496 call!9497)))

(assert (= (and d!24647 c!15799) b!94569))

(assert (= (and d!24647 (not c!15799)) b!94566))

(assert (= (and b!94566 c!15798) b!94574))

(assert (= (and b!94566 (not c!15798)) b!94580))

(assert (= (and b!94580 c!15795) b!94567))

(assert (= (and b!94580 (not c!15795)) b!94582))

(assert (= (or b!94567 b!94582) bm!9493))

(assert (= (or b!94574 bm!9493) bm!9494))

(assert (= (or b!94574 b!94567) bm!9495))

(assert (= (or b!94569 bm!9494) bm!9490))

(assert (= (or b!94569 bm!9495) bm!9492))

(assert (= (and d!24647 res!47874) b!94576))

(assert (= (and d!24647 c!15797) b!94583))

(assert (= (and d!24647 (not c!15797)) b!94578))

(assert (= (and d!24647 res!47868) b!94568))

(assert (= (and b!94568 res!47873) b!94577))

(assert (= (and b!94568 (not res!47870)) b!94584))

(assert (= (and b!94584 res!47866) b!94573))

(assert (= (and b!94568 res!47867) b!94571))

(assert (= (and b!94571 c!15796) b!94585))

(assert (= (and b!94571 (not c!15796)) b!94572))

(assert (= (and b!94585 res!47871) b!94570))

(assert (= (or b!94585 b!94572) bm!9489))

(assert (= (and b!94571 res!47872) b!94579))

(assert (= (and b!94579 c!15800) b!94586))

(assert (= (and b!94579 (not c!15800)) b!94581))

(assert (= (and b!94586 res!47869) b!94575))

(assert (= (or b!94586 b!94581) bm!9491))

(declare-fun b_lambda!4161 () Bool)

(assert (=> (not b_lambda!4161) (not b!94573)))

(assert (=> b!94573 t!5513))

(declare-fun b_and!5761 () Bool)

(assert (= b_and!5757 (and (=> t!5513 result!3205) b_and!5761)))

(assert (=> b!94573 t!5515))

(declare-fun b_and!5763 () Bool)

(assert (= b_and!5759 (and (=> t!5515 result!3207) b_and!5763)))

(declare-fun m!101595 () Bool)

(assert (=> b!94570 m!101595))

(declare-fun m!101597 () Bool)

(assert (=> b!94569 m!101597))

(declare-fun m!101599 () Bool)

(assert (=> bm!9492 m!101599))

(assert (=> d!24647 m!101265))

(declare-fun m!101601 () Bool)

(assert (=> b!94575 m!101601))

(declare-fun m!101603 () Bool)

(assert (=> bm!9489 m!101603))

(declare-fun m!101605 () Bool)

(assert (=> bm!9491 m!101605))

(declare-fun m!101607 () Bool)

(assert (=> b!94573 m!101607))

(assert (=> b!94573 m!101275))

(declare-fun m!101609 () Bool)

(assert (=> b!94573 m!101609))

(assert (=> b!94573 m!101279))

(assert (=> b!94573 m!101275))

(assert (=> b!94573 m!101607))

(assert (=> b!94573 m!101279))

(declare-fun m!101611 () Bool)

(assert (=> b!94573 m!101611))

(assert (=> b!94584 m!101279))

(assert (=> b!94584 m!101279))

(declare-fun m!101613 () Bool)

(assert (=> b!94584 m!101613))

(declare-fun m!101615 () Bool)

(assert (=> bm!9490 m!101615))

(assert (=> b!94577 m!101279))

(assert (=> b!94577 m!101279))

(assert (=> b!94577 m!101287))

(assert (=> b!94576 m!101279))

(assert (=> b!94576 m!101279))

(assert (=> b!94576 m!101287))

(declare-fun m!101617 () Bool)

(assert (=> b!94583 m!101617))

(declare-fun m!101619 () Bool)

(assert (=> b!94583 m!101619))

(declare-fun m!101621 () Bool)

(assert (=> b!94583 m!101621))

(declare-fun m!101623 () Bool)

(assert (=> b!94583 m!101623))

(assert (=> b!94583 m!101279))

(declare-fun m!101625 () Bool)

(assert (=> b!94583 m!101625))

(declare-fun m!101627 () Bool)

(assert (=> b!94583 m!101627))

(declare-fun m!101629 () Bool)

(assert (=> b!94583 m!101629))

(assert (=> b!94583 m!101625))

(declare-fun m!101631 () Bool)

(assert (=> b!94583 m!101631))

(assert (=> b!94583 m!101615))

(declare-fun m!101633 () Bool)

(assert (=> b!94583 m!101633))

(declare-fun m!101635 () Bool)

(assert (=> b!94583 m!101635))

(declare-fun m!101637 () Bool)

(assert (=> b!94583 m!101637))

(declare-fun m!101639 () Bool)

(assert (=> b!94583 m!101639))

(declare-fun m!101641 () Bool)

(assert (=> b!94583 m!101641))

(assert (=> b!94583 m!101617))

(assert (=> b!94583 m!101639))

(assert (=> b!94583 m!101621))

(declare-fun m!101643 () Bool)

(assert (=> b!94583 m!101643))

(declare-fun m!101645 () Bool)

(assert (=> b!94583 m!101645))

(assert (=> bm!9440 d!24647))

(assert (=> b!94144 d!24595))

(declare-fun d!24649 () Bool)

(declare-fun e!61745 () Bool)

(assert (=> d!24649 e!61745))

(declare-fun res!47875 () Bool)

(assert (=> d!24649 (=> res!47875 e!61745)))

(declare-fun lt!46912 () Bool)

(assert (=> d!24649 (= res!47875 (not lt!46912))))

(declare-fun lt!46910 () Bool)

(assert (=> d!24649 (= lt!46912 lt!46910)))

(declare-fun lt!46911 () Unit!2822)

(declare-fun e!61746 () Unit!2822)

(assert (=> d!24649 (= lt!46911 e!61746)))

(declare-fun c!15801 () Bool)

(assert (=> d!24649 (= c!15801 lt!46910)))

(assert (=> d!24649 (= lt!46910 (containsKey!151 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24649 (= (contains!797 lt!46547 #b1000000000000000000000000000000000000000000000000000000000000000) lt!46912)))

(declare-fun b!94587 () Bool)

(declare-fun lt!46913 () Unit!2822)

(assert (=> b!94587 (= e!61746 lt!46913)))

(assert (=> b!94587 (= lt!46913 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94587 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94588 () Bool)

(declare-fun Unit!2838 () Unit!2822)

(assert (=> b!94588 (= e!61746 Unit!2838)))

(declare-fun b!94589 () Bool)

(assert (=> b!94589 (= e!61745 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24649 c!15801) b!94587))

(assert (= (and d!24649 (not c!15801)) b!94588))

(assert (= (and d!24649 (not res!47875)) b!94589))

(declare-fun m!101647 () Bool)

(assert (=> d!24649 m!101647))

(declare-fun m!101649 () Bool)

(assert (=> b!94587 m!101649))

(declare-fun m!101651 () Bool)

(assert (=> b!94587 m!101651))

(assert (=> b!94587 m!101651))

(declare-fun m!101653 () Bool)

(assert (=> b!94587 m!101653))

(assert (=> b!94589 m!101651))

(assert (=> b!94589 m!101651))

(assert (=> b!94589 m!101653))

(assert (=> bm!9376 d!24649))

(assert (=> b!94065 d!24529))

(declare-fun d!24651 () Bool)

(declare-fun e!61747 () Bool)

(assert (=> d!24651 e!61747))

(declare-fun res!47876 () Bool)

(assert (=> d!24651 (=> (not res!47876) (not e!61747))))

(declare-fun lt!46917 () ListLongMap!1539)

(assert (=> d!24651 (= res!47876 (contains!797 lt!46917 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun lt!46914 () List!1600)

(assert (=> d!24651 (= lt!46917 (ListLongMap!1540 lt!46914))))

(declare-fun lt!46915 () Unit!2822)

(declare-fun lt!46916 () Unit!2822)

(assert (=> d!24651 (= lt!46915 lt!46916)))

(assert (=> d!24651 (= (getValueByKey!147 lt!46914 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) (Some!152 (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24651 (= lt!46916 (lemmaContainsTupThenGetReturnValue!65 lt!46914 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24651 (= lt!46914 (insertStrictlySorted!67 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24651 (= (+!136 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)) (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46917)))

(declare-fun b!94590 () Bool)

(declare-fun res!47877 () Bool)

(assert (=> b!94590 (=> (not res!47877) (not e!61747))))

(assert (=> b!94590 (= res!47877 (= (getValueByKey!147 (toList!785 lt!46917) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) (Some!152 (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun b!94591 () Bool)

(assert (=> b!94591 (= e!61747 (contains!799 (toList!785 lt!46917) (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (= (and d!24651 res!47876) b!94590))

(assert (= (and b!94590 res!47877) b!94591))

(declare-fun m!101655 () Bool)

(assert (=> d!24651 m!101655))

(declare-fun m!101657 () Bool)

(assert (=> d!24651 m!101657))

(declare-fun m!101659 () Bool)

(assert (=> d!24651 m!101659))

(declare-fun m!101661 () Bool)

(assert (=> d!24651 m!101661))

(declare-fun m!101663 () Bool)

(assert (=> b!94590 m!101663))

(declare-fun m!101665 () Bool)

(assert (=> b!94591 m!101665))

(assert (=> bm!9377 d!24651))

(declare-fun d!24653 () Bool)

(declare-fun res!47878 () Bool)

(declare-fun e!61748 () Bool)

(assert (=> d!24653 (=> (not res!47878) (not e!61748))))

(assert (=> d!24653 (= res!47878 (simpleValid!65 (v!2763 (underlying!330 thiss!992))))))

(assert (=> d!24653 (= (valid!376 (v!2763 (underlying!330 thiss!992))) e!61748)))

(declare-fun b!94592 () Bool)

(declare-fun res!47879 () Bool)

(assert (=> b!94592 (=> (not res!47879) (not e!61748))))

(assert (=> b!94592 (= res!47879 (= (arrayCountValidKeys!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))) (_size!466 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!94593 () Bool)

(declare-fun res!47880 () Bool)

(assert (=> b!94593 (=> (not res!47880) (not e!61748))))

(assert (=> b!94593 (= res!47880 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!94594 () Bool)

(assert (=> b!94594 (= e!61748 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 Nil!1598))))

(assert (= (and d!24653 res!47878) b!94592))

(assert (= (and b!94592 res!47879) b!94593))

(assert (= (and b!94593 res!47880) b!94594))

(declare-fun m!101667 () Bool)

(assert (=> d!24653 m!101667))

(declare-fun m!101669 () Bool)

(assert (=> b!94592 m!101669))

(declare-fun m!101671 () Bool)

(assert (=> b!94593 m!101671))

(declare-fun m!101673 () Bool)

(assert (=> b!94594 m!101673))

(assert (=> d!24541 d!24653))

(declare-fun d!24655 () Bool)

(assert (=> d!24655 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46920 () Unit!2822)

(declare-fun choose!575 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2822)

(assert (=> d!24655 (= lt!46920 (choose!575 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24655 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24655 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) lt!46920)))

(declare-fun bs!3862 () Bool)

(assert (= bs!3862 d!24655))

(assert (=> bs!3862 m!101265))

(assert (=> bs!3862 m!101015))

(declare-fun m!101675 () Bool)

(assert (=> bs!3862 m!101675))

(assert (=> bs!3862 m!101123))

(assert (=> bs!3862 m!101123))

(declare-fun m!101677 () Bool)

(assert (=> bs!3862 m!101677))

(assert (=> bs!3862 m!101015))

(declare-fun m!101679 () Bool)

(assert (=> bs!3862 m!101679))

(assert (=> b!94278 d!24655))

(declare-fun d!24657 () Bool)

(declare-fun res!47881 () Bool)

(declare-fun e!61749 () Bool)

(assert (=> d!24657 (=> (not res!47881) (not e!61749))))

(assert (=> d!24657 (= res!47881 (simpleValid!65 (_2!1176 lt!46650)))))

(assert (=> d!24657 (= (valid!376 (_2!1176 lt!46650)) e!61749)))

(declare-fun b!94595 () Bool)

(declare-fun res!47882 () Bool)

(assert (=> b!94595 (=> (not res!47882) (not e!61749))))

(assert (=> b!94595 (= res!47882 (= (arrayCountValidKeys!0 (_keys!4118 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))) (_size!466 (_2!1176 lt!46650))))))

(declare-fun b!94596 () Bool)

(declare-fun res!47883 () Bool)

(assert (=> b!94596 (=> (not res!47883) (not e!61749))))

(assert (=> b!94596 (= res!47883 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650))))))

(declare-fun b!94597 () Bool)

(assert (=> b!94597 (= e!61749 (arrayNoDuplicates!0 (_keys!4118 (_2!1176 lt!46650)) #b00000000000000000000000000000000 Nil!1598))))

(assert (= (and d!24657 res!47881) b!94595))

(assert (= (and b!94595 res!47882) b!94596))

(assert (= (and b!94596 res!47883) b!94597))

(declare-fun m!101681 () Bool)

(assert (=> d!24657 m!101681))

(declare-fun m!101683 () Bool)

(assert (=> b!94595 m!101683))

(declare-fun m!101685 () Bool)

(assert (=> b!94596 m!101685))

(declare-fun m!101687 () Bool)

(assert (=> b!94597 m!101687))

(assert (=> d!24555 d!24657))

(assert (=> d!24555 d!24547))

(declare-fun d!24659 () Bool)

(assert (=> d!24659 (= (apply!90 lt!46547 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1283 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3863 () Bool)

(assert (= bs!3863 d!24659))

(assert (=> bs!3863 m!101101))

(declare-fun m!101689 () Bool)

(assert (=> bs!3863 m!101689))

(assert (=> bs!3863 m!101689))

(declare-fun m!101691 () Bool)

(assert (=> bs!3863 m!101691))

(assert (=> b!94140 d!24659))

(declare-fun d!24661 () Bool)

(declare-fun c!15802 () Bool)

(assert (=> d!24661 (= c!15802 ((_ is ValueCellFull!963) (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!61750 () V!3131)

(assert (=> d!24661 (= (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61750)))

(declare-fun b!94598 () Bool)

(assert (=> b!94598 (= e!61750 (get!1281 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94599 () Bool)

(assert (=> b!94599 (= e!61750 (get!1282 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24661 c!15802) b!94598))

(assert (= (and d!24661 (not c!15802)) b!94599))

(assert (=> b!94598 m!101137))

(assert (=> b!94598 m!101013))

(declare-fun m!101693 () Bool)

(assert (=> b!94598 m!101693))

(assert (=> b!94599 m!101137))

(assert (=> b!94599 m!101013))

(declare-fun m!101695 () Bool)

(assert (=> b!94599 m!101695))

(assert (=> b!94140 d!24661))

(declare-fun d!24663 () Bool)

(declare-fun e!61751 () Bool)

(assert (=> d!24663 e!61751))

(declare-fun res!47884 () Bool)

(assert (=> d!24663 (=> res!47884 e!61751)))

(declare-fun lt!46923 () Bool)

(assert (=> d!24663 (= res!47884 (not lt!46923))))

(declare-fun lt!46921 () Bool)

(assert (=> d!24663 (= lt!46923 lt!46921)))

(declare-fun lt!46922 () Unit!2822)

(declare-fun e!61752 () Unit!2822)

(assert (=> d!24663 (= lt!46922 e!61752)))

(declare-fun c!15803 () Bool)

(assert (=> d!24663 (= c!15803 lt!46921)))

(assert (=> d!24663 (= lt!46921 (containsKey!151 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24663 (= (contains!797 e!61547 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!46923)))

(declare-fun b!94600 () Bool)

(declare-fun lt!46924 () Unit!2822)

(assert (=> b!94600 (= e!61752 lt!46924)))

(assert (=> b!94600 (= lt!46924 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94600 (isDefined!101 (getValueByKey!147 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94601 () Bool)

(declare-fun Unit!2839 () Unit!2822)

(assert (=> b!94601 (= e!61752 Unit!2839)))

(declare-fun b!94602 () Bool)

(assert (=> b!94602 (= e!61751 (isDefined!101 (getValueByKey!147 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24663 c!15803) b!94600))

(assert (= (and d!24663 (not c!15803)) b!94601))

(assert (= (and d!24663 (not res!47884)) b!94602))

(assert (=> d!24663 m!101017))

(declare-fun m!101697 () Bool)

(assert (=> d!24663 m!101697))

(assert (=> b!94600 m!101017))

(declare-fun m!101699 () Bool)

(assert (=> b!94600 m!101699))

(assert (=> b!94600 m!101017))

(declare-fun m!101701 () Bool)

(assert (=> b!94600 m!101701))

(assert (=> b!94600 m!101701))

(declare-fun m!101703 () Bool)

(assert (=> b!94600 m!101703))

(assert (=> b!94602 m!101017))

(assert (=> b!94602 m!101701))

(assert (=> b!94602 m!101701))

(assert (=> b!94602 m!101703))

(assert (=> bm!9435 d!24663))

(declare-fun d!24665 () Bool)

(assert (=> d!24665 (= (map!1243 (_2!1176 lt!46650)) (getCurrentListMap!466 (_keys!4118 (_2!1176 lt!46650)) (_values!2419 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650)) (extraKeys!2265 (_2!1176 lt!46650)) (zeroValue!2323 (_2!1176 lt!46650)) (minValue!2323 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46650))))))

(declare-fun bs!3864 () Bool)

(assert (= bs!3864 d!24665))

(declare-fun m!101705 () Bool)

(assert (=> bs!3864 m!101705))

(assert (=> bm!9443 d!24665))

(declare-fun d!24667 () Bool)

(declare-fun e!61753 () Bool)

(assert (=> d!24667 e!61753))

(declare-fun res!47885 () Bool)

(assert (=> d!24667 (=> (not res!47885) (not e!61753))))

(declare-fun lt!46928 () ListLongMap!1539)

(assert (=> d!24667 (= res!47885 (contains!797 lt!46928 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!46925 () List!1600)

(assert (=> d!24667 (= lt!46928 (ListLongMap!1540 lt!46925))))

(declare-fun lt!46926 () Unit!2822)

(declare-fun lt!46927 () Unit!2822)

(assert (=> d!24667 (= lt!46926 lt!46927)))

(assert (=> d!24667 (= (getValueByKey!147 lt!46925 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24667 (= lt!46927 (lemmaContainsTupThenGetReturnValue!65 lt!46925 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24667 (= lt!46925 (insertStrictlySorted!67 (toList!785 call!9447) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24667 (= (+!136 call!9447 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!46928)))

(declare-fun b!94603 () Bool)

(declare-fun res!47886 () Bool)

(assert (=> b!94603 (=> (not res!47886) (not e!61753))))

(assert (=> b!94603 (= res!47886 (= (getValueByKey!147 (toList!785 lt!46928) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94604 () Bool)

(assert (=> b!94604 (= e!61753 (contains!799 (toList!785 lt!46928) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24667 res!47885) b!94603))

(assert (= (and b!94603 res!47886) b!94604))

(declare-fun m!101707 () Bool)

(assert (=> d!24667 m!101707))

(declare-fun m!101709 () Bool)

(assert (=> d!24667 m!101709))

(declare-fun m!101711 () Bool)

(assert (=> d!24667 m!101711))

(declare-fun m!101713 () Bool)

(assert (=> d!24667 m!101713))

(declare-fun m!101715 () Bool)

(assert (=> b!94603 m!101715))

(declare-fun m!101717 () Bool)

(assert (=> b!94604 m!101717))

(assert (=> b!94256 d!24667))

(assert (=> d!24527 d!24533))

(declare-fun d!24669 () Bool)

(assert (=> d!24669 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) from!355 Nil!1598)))

(assert (=> d!24669 true))

(declare-fun _$71!126 () Unit!2822)

(assert (=> d!24669 (= (choose!39 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!126)))

(declare-fun bs!3865 () Bool)

(assert (= bs!3865 d!24669))

(assert (=> bs!3865 m!101033))

(assert (=> d!24527 d!24669))

(declare-fun bm!9496 () Bool)

(declare-fun call!9501 () Bool)

(declare-fun lt!46929 () ListLongMap!1539)

(assert (=> bm!9496 (= call!9501 (contains!797 lt!46929 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94605 () Bool)

(declare-fun e!61761 () ListLongMap!1539)

(declare-fun e!61765 () ListLongMap!1539)

(assert (=> b!94605 (= e!61761 e!61765)))

(declare-fun c!15807 () Bool)

(assert (=> b!94605 (= c!15807 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94606 () Bool)

(declare-fun e!61763 () ListLongMap!1539)

(declare-fun call!9503 () ListLongMap!1539)

(assert (=> b!94606 (= e!61763 call!9503)))

(declare-fun b!94607 () Bool)

(declare-fun res!47888 () Bool)

(declare-fun e!61755 () Bool)

(assert (=> b!94607 (=> (not res!47888) (not e!61755))))

(declare-fun e!61756 () Bool)

(assert (=> b!94607 (= res!47888 e!61756)))

(declare-fun res!47891 () Bool)

(assert (=> b!94607 (=> res!47891 e!61756)))

(declare-fun e!61757 () Bool)

(assert (=> b!94607 (= res!47891 (not e!61757))))

(declare-fun res!47894 () Bool)

(assert (=> b!94607 (=> (not res!47894) (not e!61757))))

(assert (=> b!94607 (= res!47894 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94608 () Bool)

(declare-fun call!9504 () ListLongMap!1539)

(assert (=> b!94608 (= e!61761 (+!136 call!9504 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!94610 () Bool)

(declare-fun res!47893 () Bool)

(assert (=> b!94610 (=> (not res!47893) (not e!61755))))

(declare-fun e!61760 () Bool)

(assert (=> b!94610 (= res!47893 e!61760)))

(declare-fun c!15805 () Bool)

(assert (=> b!94610 (= c!15805 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94611 () Bool)

(assert (=> b!94611 (= e!61760 (not call!9501))))

(declare-fun e!61754 () Bool)

(declare-fun b!94612 () Bool)

(assert (=> b!94612 (= e!61754 (= (apply!90 lt!46929 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94612 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))))))))

(assert (=> b!94612 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94613 () Bool)

(assert (=> b!94613 (= e!61765 call!9503)))

(declare-fun b!94614 () Bool)

(declare-fun e!61758 () Bool)

(assert (=> b!94614 (= e!61758 (= (apply!90 lt!46929 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94615 () Bool)

(declare-fun e!61762 () Bool)

(assert (=> b!94615 (= e!61762 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94616 () Bool)

(assert (=> b!94616 (= e!61757 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun call!9500 () ListLongMap!1539)

(declare-fun bm!9497 () Bool)

(assert (=> bm!9497 (= call!9500 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9498 () Bool)

(declare-fun call!9505 () Bool)

(assert (=> bm!9498 (= call!9505 (contains!797 lt!46929 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94617 () Bool)

(declare-fun e!61764 () Unit!2822)

(declare-fun Unit!2840 () Unit!2822)

(assert (=> b!94617 (= e!61764 Unit!2840)))

(declare-fun bm!9499 () Bool)

(declare-fun call!9499 () ListLongMap!1539)

(declare-fun call!9502 () ListLongMap!1539)

(declare-fun c!15808 () Bool)

(assert (=> bm!9499 (= call!9504 (+!136 (ite c!15808 call!9500 (ite c!15807 call!9499 call!9502)) (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!94618 () Bool)

(declare-fun e!61759 () Bool)

(assert (=> b!94618 (= e!61755 e!61759)))

(declare-fun c!15809 () Bool)

(assert (=> b!94618 (= c!15809 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94619 () Bool)

(declare-fun c!15804 () Bool)

(assert (=> b!94619 (= c!15804 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94619 (= e!61765 e!61763)))

(declare-fun b!94620 () Bool)

(assert (=> b!94620 (= e!61759 (not call!9505))))

(declare-fun d!24671 () Bool)

(assert (=> d!24671 e!61755))

(declare-fun res!47889 () Bool)

(assert (=> d!24671 (=> (not res!47889) (not e!61755))))

(assert (=> d!24671 (= res!47889 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!46934 () ListLongMap!1539)

(assert (=> d!24671 (= lt!46929 lt!46934)))

(declare-fun lt!46948 () Unit!2822)

(assert (=> d!24671 (= lt!46948 e!61764)))

(declare-fun c!15806 () Bool)

(assert (=> d!24671 (= c!15806 e!61762)))

(declare-fun res!47895 () Bool)

(assert (=> d!24671 (=> (not res!47895) (not e!61762))))

(assert (=> d!24671 (= res!47895 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24671 (= lt!46934 e!61761)))

(assert (=> d!24671 (= c!15808 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24671 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24671 (= (getCurrentListMap!466 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46929)))

(declare-fun b!94609 () Bool)

(declare-fun e!61766 () Bool)

(assert (=> b!94609 (= e!61766 (= (apply!90 lt!46929 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94621 () Bool)

(assert (=> b!94621 (= e!61763 call!9502)))

(declare-fun bm!9500 () Bool)

(assert (=> bm!9500 (= call!9502 call!9499)))

(declare-fun b!94622 () Bool)

(declare-fun lt!46945 () Unit!2822)

(assert (=> b!94622 (= e!61764 lt!46945)))

(declare-fun lt!46937 () ListLongMap!1539)

(assert (=> b!94622 (= lt!46937 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46936 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46936 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46938 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46938 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46939 () Unit!2822)

(assert (=> b!94622 (= lt!46939 (addStillContains!66 lt!46937 lt!46936 (zeroValue!2323 newMap!16) lt!46938))))

(assert (=> b!94622 (contains!797 (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))) lt!46938)))

(declare-fun lt!46944 () Unit!2822)

(assert (=> b!94622 (= lt!46944 lt!46939)))

(declare-fun lt!46930 () ListLongMap!1539)

(assert (=> b!94622 (= lt!46930 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46942 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46942 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46940 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46940 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46941 () Unit!2822)

(assert (=> b!94622 (= lt!46941 (addApplyDifferent!66 lt!46930 lt!46942 (minValue!2323 newMap!16) lt!46940))))

(assert (=> b!94622 (= (apply!90 (+!136 lt!46930 (tuple2!2335 lt!46942 (minValue!2323 newMap!16))) lt!46940) (apply!90 lt!46930 lt!46940))))

(declare-fun lt!46949 () Unit!2822)

(assert (=> b!94622 (= lt!46949 lt!46941)))

(declare-fun lt!46935 () ListLongMap!1539)

(assert (=> b!94622 (= lt!46935 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46943 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46943 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46950 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46950 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46933 () Unit!2822)

(assert (=> b!94622 (= lt!46933 (addApplyDifferent!66 lt!46935 lt!46943 (zeroValue!2323 newMap!16) lt!46950))))

(assert (=> b!94622 (= (apply!90 (+!136 lt!46935 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))) lt!46950) (apply!90 lt!46935 lt!46950))))

(declare-fun lt!46946 () Unit!2822)

(assert (=> b!94622 (= lt!46946 lt!46933)))

(declare-fun lt!46932 () ListLongMap!1539)

(assert (=> b!94622 (= lt!46932 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46947 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46947 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46931 () (_ BitVec 64))

(assert (=> b!94622 (= lt!46931 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94622 (= lt!46945 (addApplyDifferent!66 lt!46932 lt!46947 (minValue!2323 newMap!16) lt!46931))))

(assert (=> b!94622 (= (apply!90 (+!136 lt!46932 (tuple2!2335 lt!46947 (minValue!2323 newMap!16))) lt!46931) (apply!90 lt!46932 lt!46931))))

(declare-fun b!94623 () Bool)

(assert (=> b!94623 (= e!61756 e!61754)))

(declare-fun res!47887 () Bool)

(assert (=> b!94623 (=> (not res!47887) (not e!61754))))

(assert (=> b!94623 (= res!47887 (contains!797 lt!46929 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94623 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9501 () Bool)

(assert (=> bm!9501 (= call!9499 call!9500)))

(declare-fun b!94624 () Bool)

(assert (=> b!94624 (= e!61760 e!61766)))

(declare-fun res!47892 () Bool)

(assert (=> b!94624 (= res!47892 call!9501)))

(assert (=> b!94624 (=> (not res!47892) (not e!61766))))

(declare-fun b!94625 () Bool)

(assert (=> b!94625 (= e!61759 e!61758)))

(declare-fun res!47890 () Bool)

(assert (=> b!94625 (= res!47890 call!9505)))

(assert (=> b!94625 (=> (not res!47890) (not e!61758))))

(declare-fun bm!9502 () Bool)

(assert (=> bm!9502 (= call!9503 call!9504)))

(assert (= (and d!24671 c!15808) b!94608))

(assert (= (and d!24671 (not c!15808)) b!94605))

(assert (= (and b!94605 c!15807) b!94613))

(assert (= (and b!94605 (not c!15807)) b!94619))

(assert (= (and b!94619 c!15804) b!94606))

(assert (= (and b!94619 (not c!15804)) b!94621))

(assert (= (or b!94606 b!94621) bm!9500))

(assert (= (or b!94613 bm!9500) bm!9501))

(assert (= (or b!94613 b!94606) bm!9502))

(assert (= (or b!94608 bm!9501) bm!9497))

(assert (= (or b!94608 bm!9502) bm!9499))

(assert (= (and d!24671 res!47895) b!94615))

(assert (= (and d!24671 c!15806) b!94622))

(assert (= (and d!24671 (not c!15806)) b!94617))

(assert (= (and d!24671 res!47889) b!94607))

(assert (= (and b!94607 res!47894) b!94616))

(assert (= (and b!94607 (not res!47891)) b!94623))

(assert (= (and b!94623 res!47887) b!94612))

(assert (= (and b!94607 res!47888) b!94610))

(assert (= (and b!94610 c!15805) b!94624))

(assert (= (and b!94610 (not c!15805)) b!94611))

(assert (= (and b!94624 res!47892) b!94609))

(assert (= (or b!94624 b!94611) bm!9496))

(assert (= (and b!94610 res!47893) b!94618))

(assert (= (and b!94618 c!15809) b!94625))

(assert (= (and b!94618 (not c!15809)) b!94620))

(assert (= (and b!94625 res!47890) b!94614))

(assert (= (or b!94625 b!94620) bm!9498))

(declare-fun b_lambda!4163 () Bool)

(assert (=> (not b_lambda!4163) (not b!94612)))

(assert (=> b!94612 t!5513))

(declare-fun b_and!5765 () Bool)

(assert (= b_and!5761 (and (=> t!5513 result!3205) b_and!5765)))

(assert (=> b!94612 t!5515))

(declare-fun b_and!5767 () Bool)

(assert (= b_and!5763 (and (=> t!5515 result!3207) b_and!5767)))

(declare-fun m!101719 () Bool)

(assert (=> b!94609 m!101719))

(declare-fun m!101721 () Bool)

(assert (=> b!94608 m!101721))

(declare-fun m!101723 () Bool)

(assert (=> bm!9499 m!101723))

(assert (=> d!24671 m!101265))

(declare-fun m!101725 () Bool)

(assert (=> b!94614 m!101725))

(declare-fun m!101727 () Bool)

(assert (=> bm!9496 m!101727))

(declare-fun m!101729 () Bool)

(assert (=> bm!9498 m!101729))

(declare-fun m!101731 () Bool)

(assert (=> b!94612 m!101731))

(assert (=> b!94612 m!101275))

(declare-fun m!101733 () Bool)

(assert (=> b!94612 m!101733))

(assert (=> b!94612 m!101279))

(assert (=> b!94612 m!101275))

(assert (=> b!94612 m!101731))

(assert (=> b!94612 m!101279))

(declare-fun m!101735 () Bool)

(assert (=> b!94612 m!101735))

(assert (=> b!94623 m!101279))

(assert (=> b!94623 m!101279))

(declare-fun m!101737 () Bool)

(assert (=> b!94623 m!101737))

(declare-fun m!101739 () Bool)

(assert (=> bm!9497 m!101739))

(assert (=> b!94616 m!101279))

(assert (=> b!94616 m!101279))

(assert (=> b!94616 m!101287))

(assert (=> b!94615 m!101279))

(assert (=> b!94615 m!101279))

(assert (=> b!94615 m!101287))

(declare-fun m!101741 () Bool)

(assert (=> b!94622 m!101741))

(declare-fun m!101743 () Bool)

(assert (=> b!94622 m!101743))

(declare-fun m!101745 () Bool)

(assert (=> b!94622 m!101745))

(declare-fun m!101747 () Bool)

(assert (=> b!94622 m!101747))

(assert (=> b!94622 m!101279))

(declare-fun m!101749 () Bool)

(assert (=> b!94622 m!101749))

(declare-fun m!101751 () Bool)

(assert (=> b!94622 m!101751))

(declare-fun m!101753 () Bool)

(assert (=> b!94622 m!101753))

(assert (=> b!94622 m!101749))

(declare-fun m!101755 () Bool)

(assert (=> b!94622 m!101755))

(assert (=> b!94622 m!101739))

(declare-fun m!101757 () Bool)

(assert (=> b!94622 m!101757))

(declare-fun m!101759 () Bool)

(assert (=> b!94622 m!101759))

(declare-fun m!101761 () Bool)

(assert (=> b!94622 m!101761))

(declare-fun m!101763 () Bool)

(assert (=> b!94622 m!101763))

(declare-fun m!101765 () Bool)

(assert (=> b!94622 m!101765))

(assert (=> b!94622 m!101741))

(assert (=> b!94622 m!101763))

(assert (=> b!94622 m!101745))

(declare-fun m!101767 () Bool)

(assert (=> b!94622 m!101767))

(declare-fun m!101769 () Bool)

(assert (=> b!94622 m!101769))

(assert (=> bm!9445 d!24671))

(declare-fun d!24673 () Bool)

(declare-fun e!61769 () Bool)

(assert (=> d!24673 e!61769))

(declare-fun c!15812 () Bool)

(assert (=> d!24673 (= c!15812 (and (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!24673 true))

(declare-fun _$29!120 () Unit!2822)

(assert (=> d!24673 (= (choose!567 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))) _$29!120)))

(declare-fun b!94630 () Bool)

(assert (=> b!94630 (= e!61769 (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94631 () Bool)

(assert (=> b!94631 (= e!61769 (ite (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24673 c!15812) b!94630))

(assert (= (and d!24673 (not c!15812)) b!94631))

(assert (=> b!94630 m!101017))

(assert (=> b!94630 m!101037))

(assert (=> d!24531 d!24673))

(assert (=> d!24531 d!24539))

(declare-fun d!24675 () Bool)

(assert (=> d!24675 (= (apply!90 lt!46547 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3866 () Bool)

(assert (= bs!3866 d!24675))

(assert (=> bs!3866 m!101651))

(assert (=> bs!3866 m!101651))

(declare-fun m!101771 () Bool)

(assert (=> bs!3866 m!101771))

(assert (=> b!94142 d!24675))

(declare-fun bm!9503 () Bool)

(declare-fun call!9508 () Bool)

(declare-fun lt!46951 () ListLongMap!1539)

(assert (=> bm!9503 (= call!9508 (contains!797 lt!46951 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94632 () Bool)

(declare-fun e!61777 () ListLongMap!1539)

(declare-fun e!61781 () ListLongMap!1539)

(assert (=> b!94632 (= e!61777 e!61781)))

(declare-fun c!15816 () Bool)

(assert (=> b!94632 (= c!15816 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94633 () Bool)

(declare-fun e!61779 () ListLongMap!1539)

(declare-fun call!9510 () ListLongMap!1539)

(assert (=> b!94633 (= e!61779 call!9510)))

(declare-fun b!94634 () Bool)

(declare-fun res!47897 () Bool)

(declare-fun e!61771 () Bool)

(assert (=> b!94634 (=> (not res!47897) (not e!61771))))

(declare-fun e!61772 () Bool)

(assert (=> b!94634 (= res!47897 e!61772)))

(declare-fun res!47900 () Bool)

(assert (=> b!94634 (=> res!47900 e!61772)))

(declare-fun e!61773 () Bool)

(assert (=> b!94634 (= res!47900 (not e!61773))))

(declare-fun res!47903 () Bool)

(assert (=> b!94634 (=> (not res!47903) (not e!61773))))

(assert (=> b!94634 (= res!47903 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94635 () Bool)

(declare-fun call!9511 () ListLongMap!1539)

(assert (=> b!94635 (= e!61777 (+!136 call!9511 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!94637 () Bool)

(declare-fun res!47902 () Bool)

(assert (=> b!94637 (=> (not res!47902) (not e!61771))))

(declare-fun e!61776 () Bool)

(assert (=> b!94637 (= res!47902 e!61776)))

(declare-fun c!15814 () Bool)

(assert (=> b!94637 (= c!15814 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94638 () Bool)

(assert (=> b!94638 (= e!61776 (not call!9508))))

(declare-fun b!94639 () Bool)

(declare-fun e!61770 () Bool)

(assert (=> b!94639 (= e!61770 (= (apply!90 lt!46951 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94639 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_values!2419 newMap!16))))))

(assert (=> b!94639 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94640 () Bool)

(assert (=> b!94640 (= e!61781 call!9510)))

(declare-fun b!94641 () Bool)

(declare-fun e!61774 () Bool)

(assert (=> b!94641 (= e!61774 (= (apply!90 lt!46951 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94642 () Bool)

(declare-fun e!61778 () Bool)

(assert (=> b!94642 (= e!61778 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94643 () Bool)

(assert (=> b!94643 (= e!61773 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9504 () Bool)

(declare-fun call!9507 () ListLongMap!1539)

(assert (=> bm!9504 (= call!9507 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9505 () Bool)

(declare-fun call!9512 () Bool)

(assert (=> bm!9505 (= call!9512 (contains!797 lt!46951 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94644 () Bool)

(declare-fun e!61780 () Unit!2822)

(declare-fun Unit!2841 () Unit!2822)

(assert (=> b!94644 (= e!61780 Unit!2841)))

(declare-fun call!9509 () ListLongMap!1539)

(declare-fun bm!9506 () Bool)

(declare-fun c!15817 () Bool)

(declare-fun call!9506 () ListLongMap!1539)

(assert (=> bm!9506 (= call!9511 (+!136 (ite c!15817 call!9507 (ite c!15816 call!9506 call!9509)) (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!94645 () Bool)

(declare-fun e!61775 () Bool)

(assert (=> b!94645 (= e!61771 e!61775)))

(declare-fun c!15818 () Bool)

(assert (=> b!94645 (= c!15818 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94646 () Bool)

(declare-fun c!15813 () Bool)

(assert (=> b!94646 (= c!15813 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94646 (= e!61781 e!61779)))

(declare-fun b!94647 () Bool)

(assert (=> b!94647 (= e!61775 (not call!9512))))

(declare-fun d!24677 () Bool)

(assert (=> d!24677 e!61771))

(declare-fun res!47898 () Bool)

(assert (=> d!24677 (=> (not res!47898) (not e!61771))))

(assert (=> d!24677 (= res!47898 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!46956 () ListLongMap!1539)

(assert (=> d!24677 (= lt!46951 lt!46956)))

(declare-fun lt!46970 () Unit!2822)

(assert (=> d!24677 (= lt!46970 e!61780)))

(declare-fun c!15815 () Bool)

(assert (=> d!24677 (= c!15815 e!61778)))

(declare-fun res!47904 () Bool)

(assert (=> d!24677 (=> (not res!47904) (not e!61778))))

(assert (=> d!24677 (= res!47904 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24677 (= lt!46956 e!61777)))

(assert (=> d!24677 (= c!15817 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24677 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24677 (= (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46951)))

(declare-fun b!94636 () Bool)

(declare-fun e!61782 () Bool)

(assert (=> b!94636 (= e!61782 (= (apply!90 lt!46951 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94648 () Bool)

(assert (=> b!94648 (= e!61779 call!9509)))

(declare-fun bm!9507 () Bool)

(assert (=> bm!9507 (= call!9509 call!9506)))

(declare-fun b!94649 () Bool)

(declare-fun lt!46967 () Unit!2822)

(assert (=> b!94649 (= e!61780 lt!46967)))

(declare-fun lt!46959 () ListLongMap!1539)

(assert (=> b!94649 (= lt!46959 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46958 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46958 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46960 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46960 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46961 () Unit!2822)

(assert (=> b!94649 (= lt!46961 (addStillContains!66 lt!46959 lt!46958 (zeroValue!2323 newMap!16) lt!46960))))

(assert (=> b!94649 (contains!797 (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))) lt!46960)))

(declare-fun lt!46966 () Unit!2822)

(assert (=> b!94649 (= lt!46966 lt!46961)))

(declare-fun lt!46952 () ListLongMap!1539)

(assert (=> b!94649 (= lt!46952 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46964 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46964 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46962 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46962 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46963 () Unit!2822)

(assert (=> b!94649 (= lt!46963 (addApplyDifferent!66 lt!46952 lt!46964 (minValue!2323 newMap!16) lt!46962))))

(assert (=> b!94649 (= (apply!90 (+!136 lt!46952 (tuple2!2335 lt!46964 (minValue!2323 newMap!16))) lt!46962) (apply!90 lt!46952 lt!46962))))

(declare-fun lt!46971 () Unit!2822)

(assert (=> b!94649 (= lt!46971 lt!46963)))

(declare-fun lt!46957 () ListLongMap!1539)

(assert (=> b!94649 (= lt!46957 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46965 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46965 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46972 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46972 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46955 () Unit!2822)

(assert (=> b!94649 (= lt!46955 (addApplyDifferent!66 lt!46957 lt!46965 (zeroValue!2323 newMap!16) lt!46972))))

(assert (=> b!94649 (= (apply!90 (+!136 lt!46957 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))) lt!46972) (apply!90 lt!46957 lt!46972))))

(declare-fun lt!46968 () Unit!2822)

(assert (=> b!94649 (= lt!46968 lt!46955)))

(declare-fun lt!46954 () ListLongMap!1539)

(assert (=> b!94649 (= lt!46954 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46969 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46969 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46953 () (_ BitVec 64))

(assert (=> b!94649 (= lt!46953 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94649 (= lt!46967 (addApplyDifferent!66 lt!46954 lt!46969 (minValue!2323 newMap!16) lt!46953))))

(assert (=> b!94649 (= (apply!90 (+!136 lt!46954 (tuple2!2335 lt!46969 (minValue!2323 newMap!16))) lt!46953) (apply!90 lt!46954 lt!46953))))

(declare-fun b!94650 () Bool)

(assert (=> b!94650 (= e!61772 e!61770)))

(declare-fun res!47896 () Bool)

(assert (=> b!94650 (=> (not res!47896) (not e!61770))))

(assert (=> b!94650 (= res!47896 (contains!797 lt!46951 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94650 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9508 () Bool)

(assert (=> bm!9508 (= call!9506 call!9507)))

(declare-fun b!94651 () Bool)

(assert (=> b!94651 (= e!61776 e!61782)))

(declare-fun res!47901 () Bool)

(assert (=> b!94651 (= res!47901 call!9508)))

(assert (=> b!94651 (=> (not res!47901) (not e!61782))))

(declare-fun b!94652 () Bool)

(assert (=> b!94652 (= e!61775 e!61774)))

(declare-fun res!47899 () Bool)

(assert (=> b!94652 (= res!47899 call!9512)))

(assert (=> b!94652 (=> (not res!47899) (not e!61774))))

(declare-fun bm!9509 () Bool)

(assert (=> bm!9509 (= call!9510 call!9511)))

(assert (= (and d!24677 c!15817) b!94635))

(assert (= (and d!24677 (not c!15817)) b!94632))

(assert (= (and b!94632 c!15816) b!94640))

(assert (= (and b!94632 (not c!15816)) b!94646))

(assert (= (and b!94646 c!15813) b!94633))

(assert (= (and b!94646 (not c!15813)) b!94648))

(assert (= (or b!94633 b!94648) bm!9507))

(assert (= (or b!94640 bm!9507) bm!9508))

(assert (= (or b!94640 b!94633) bm!9509))

(assert (= (or b!94635 bm!9508) bm!9504))

(assert (= (or b!94635 bm!9509) bm!9506))

(assert (= (and d!24677 res!47904) b!94642))

(assert (= (and d!24677 c!15815) b!94649))

(assert (= (and d!24677 (not c!15815)) b!94644))

(assert (= (and d!24677 res!47898) b!94634))

(assert (= (and b!94634 res!47903) b!94643))

(assert (= (and b!94634 (not res!47900)) b!94650))

(assert (= (and b!94650 res!47896) b!94639))

(assert (= (and b!94634 res!47897) b!94637))

(assert (= (and b!94637 c!15814) b!94651))

(assert (= (and b!94637 (not c!15814)) b!94638))

(assert (= (and b!94651 res!47901) b!94636))

(assert (= (or b!94651 b!94638) bm!9503))

(assert (= (and b!94637 res!47902) b!94645))

(assert (= (and b!94645 c!15818) b!94652))

(assert (= (and b!94645 (not c!15818)) b!94647))

(assert (= (and b!94652 res!47899) b!94641))

(assert (= (or b!94652 b!94647) bm!9505))

(declare-fun b_lambda!4165 () Bool)

(assert (=> (not b_lambda!4165) (not b!94639)))

(assert (=> b!94639 t!5513))

(declare-fun b_and!5769 () Bool)

(assert (= b_and!5765 (and (=> t!5513 result!3205) b_and!5769)))

(assert (=> b!94639 t!5515))

(declare-fun b_and!5771 () Bool)

(assert (= b_and!5767 (and (=> t!5515 result!3207) b_and!5771)))

(declare-fun m!101773 () Bool)

(assert (=> b!94636 m!101773))

(declare-fun m!101775 () Bool)

(assert (=> b!94635 m!101775))

(declare-fun m!101777 () Bool)

(assert (=> bm!9506 m!101777))

(assert (=> d!24677 m!101265))

(declare-fun m!101779 () Bool)

(assert (=> b!94641 m!101779))

(declare-fun m!101781 () Bool)

(assert (=> bm!9503 m!101781))

(declare-fun m!101783 () Bool)

(assert (=> bm!9505 m!101783))

(assert (=> b!94639 m!101273))

(assert (=> b!94639 m!101275))

(assert (=> b!94639 m!101277))

(assert (=> b!94639 m!101279))

(assert (=> b!94639 m!101275))

(assert (=> b!94639 m!101273))

(assert (=> b!94639 m!101279))

(declare-fun m!101785 () Bool)

(assert (=> b!94639 m!101785))

(assert (=> b!94650 m!101279))

(assert (=> b!94650 m!101279))

(declare-fun m!101787 () Bool)

(assert (=> b!94650 m!101787))

(declare-fun m!101789 () Bool)

(assert (=> bm!9504 m!101789))

(assert (=> b!94643 m!101279))

(assert (=> b!94643 m!101279))

(assert (=> b!94643 m!101287))

(assert (=> b!94642 m!101279))

(assert (=> b!94642 m!101279))

(assert (=> b!94642 m!101287))

(declare-fun m!101791 () Bool)

(assert (=> b!94649 m!101791))

(declare-fun m!101793 () Bool)

(assert (=> b!94649 m!101793))

(declare-fun m!101795 () Bool)

(assert (=> b!94649 m!101795))

(declare-fun m!101797 () Bool)

(assert (=> b!94649 m!101797))

(assert (=> b!94649 m!101279))

(declare-fun m!101799 () Bool)

(assert (=> b!94649 m!101799))

(declare-fun m!101801 () Bool)

(assert (=> b!94649 m!101801))

(declare-fun m!101803 () Bool)

(assert (=> b!94649 m!101803))

(assert (=> b!94649 m!101799))

(declare-fun m!101805 () Bool)

(assert (=> b!94649 m!101805))

(assert (=> b!94649 m!101789))

(declare-fun m!101807 () Bool)

(assert (=> b!94649 m!101807))

(declare-fun m!101809 () Bool)

(assert (=> b!94649 m!101809))

(declare-fun m!101811 () Bool)

(assert (=> b!94649 m!101811))

(declare-fun m!101813 () Bool)

(assert (=> b!94649 m!101813))

(declare-fun m!101815 () Bool)

(assert (=> b!94649 m!101815))

(assert (=> b!94649 m!101791))

(assert (=> b!94649 m!101813))

(assert (=> b!94649 m!101795))

(declare-fun m!101817 () Bool)

(assert (=> b!94649 m!101817))

(declare-fun m!101819 () Bool)

(assert (=> b!94649 m!101819))

(assert (=> d!24549 d!24677))

(declare-fun d!24679 () Bool)

(declare-fun e!61783 () Bool)

(assert (=> d!24679 e!61783))

(declare-fun res!47905 () Bool)

(assert (=> d!24679 (=> res!47905 e!61783)))

(declare-fun lt!46975 () Bool)

(assert (=> d!24679 (= res!47905 (not lt!46975))))

(declare-fun lt!46973 () Bool)

(assert (=> d!24679 (= lt!46975 lt!46973)))

(declare-fun lt!46974 () Unit!2822)

(declare-fun e!61784 () Unit!2822)

(assert (=> d!24679 (= lt!46974 e!61784)))

(declare-fun c!15819 () Bool)

(assert (=> d!24679 (= c!15819 lt!46973)))

(assert (=> d!24679 (= lt!46973 (containsKey!151 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!24679 (= (contains!797 lt!46547 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!46975)))

(declare-fun b!94653 () Bool)

(declare-fun lt!46976 () Unit!2822)

(assert (=> b!94653 (= e!61784 lt!46976)))

(assert (=> b!94653 (= lt!46976 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94653 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94654 () Bool)

(declare-fun Unit!2842 () Unit!2822)

(assert (=> b!94654 (= e!61784 Unit!2842)))

(declare-fun b!94655 () Bool)

(assert (=> b!94655 (= e!61783 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!24679 c!15819) b!94653))

(assert (= (and d!24679 (not c!15819)) b!94654))

(assert (= (and d!24679 (not res!47905)) b!94655))

(assert (=> d!24679 m!101101))

(declare-fun m!101821 () Bool)

(assert (=> d!24679 m!101821))

(assert (=> b!94653 m!101101))

(declare-fun m!101823 () Bool)

(assert (=> b!94653 m!101823))

(assert (=> b!94653 m!101101))

(assert (=> b!94653 m!101689))

(assert (=> b!94653 m!101689))

(declare-fun m!101825 () Bool)

(assert (=> b!94653 m!101825))

(assert (=> b!94655 m!101101))

(assert (=> b!94655 m!101689))

(assert (=> b!94655 m!101689))

(assert (=> b!94655 m!101825))

(assert (=> b!94151 d!24679))

(declare-fun d!24681 () Bool)

(assert (=> d!24681 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46979 () Unit!2822)

(declare-fun choose!576 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2822)

(assert (=> d!24681 (= lt!46979 (choose!576 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46640 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24681 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24681 (= (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46640 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)) lt!46979)))

(declare-fun bs!3867 () Bool)

(assert (= bs!3867 d!24681))

(assert (=> bs!3867 m!101123))

(assert (=> bs!3867 m!101265))

(assert (=> bs!3867 m!101123))

(declare-fun m!101827 () Bool)

(assert (=> bs!3867 m!101827))

(assert (=> bs!3867 m!101015))

(declare-fun m!101829 () Bool)

(assert (=> bs!3867 m!101829))

(assert (=> bs!3867 m!101015))

(declare-fun m!101831 () Bool)

(assert (=> bs!3867 m!101831))

(assert (=> b!94251 d!24681))

(assert (=> b!94079 d!24629))

(declare-fun d!24683 () Bool)

(declare-fun e!61785 () Bool)

(assert (=> d!24683 e!61785))

(declare-fun res!47906 () Bool)

(assert (=> d!24683 (=> res!47906 e!61785)))

(declare-fun lt!46982 () Bool)

(assert (=> d!24683 (= res!47906 (not lt!46982))))

(declare-fun lt!46980 () Bool)

(assert (=> d!24683 (= lt!46982 lt!46980)))

(declare-fun lt!46981 () Unit!2822)

(declare-fun e!61786 () Unit!2822)

(assert (=> d!24683 (= lt!46981 e!61786)))

(declare-fun c!15820 () Bool)

(assert (=> d!24683 (= c!15820 lt!46980)))

(assert (=> d!24683 (= lt!46980 (containsKey!151 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24683 (= (contains!797 call!9444 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!46982)))

(declare-fun b!94656 () Bool)

(declare-fun lt!46983 () Unit!2822)

(assert (=> b!94656 (= e!61786 lt!46983)))

(assert (=> b!94656 (= lt!46983 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94656 (isDefined!101 (getValueByKey!147 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94657 () Bool)

(declare-fun Unit!2843 () Unit!2822)

(assert (=> b!94657 (= e!61786 Unit!2843)))

(declare-fun b!94658 () Bool)

(assert (=> b!94658 (= e!61785 (isDefined!101 (getValueByKey!147 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24683 c!15820) b!94656))

(assert (= (and d!24683 (not c!15820)) b!94657))

(assert (= (and d!24683 (not res!47906)) b!94658))

(assert (=> d!24683 m!101017))

(declare-fun m!101833 () Bool)

(assert (=> d!24683 m!101833))

(assert (=> b!94656 m!101017))

(declare-fun m!101835 () Bool)

(assert (=> b!94656 m!101835))

(assert (=> b!94656 m!101017))

(declare-fun m!101837 () Bool)

(assert (=> b!94656 m!101837))

(assert (=> b!94656 m!101837))

(declare-fun m!101839 () Bool)

(assert (=> b!94656 m!101839))

(assert (=> b!94658 m!101017))

(assert (=> b!94658 m!101837))

(assert (=> b!94658 m!101837))

(assert (=> b!94658 m!101839))

(assert (=> b!94264 d!24683))

(declare-fun d!24685 () Bool)

(declare-fun res!47907 () Bool)

(declare-fun e!61787 () Bool)

(assert (=> d!24685 (=> res!47907 e!61787)))

(assert (=> d!24685 (= res!47907 (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24685 (= (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!61787)))

(declare-fun b!94659 () Bool)

(declare-fun e!61788 () Bool)

(assert (=> b!94659 (= e!61787 e!61788)))

(declare-fun res!47908 () Bool)

(assert (=> b!94659 (=> (not res!47908) (not e!61788))))

(assert (=> b!94659 (= res!47908 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94660 () Bool)

(assert (=> b!94660 (= e!61788 (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!24685 (not res!47907)) b!94659))

(assert (= (and b!94659 res!47908) b!94660))

(declare-fun m!101841 () Bool)

(assert (=> d!24685 m!101841))

(assert (=> b!94660 m!101017))

(declare-fun m!101843 () Bool)

(assert (=> b!94660 m!101843))

(assert (=> b!94060 d!24685))

(declare-fun d!24687 () Bool)

(declare-fun e!61789 () Bool)

(assert (=> d!24687 e!61789))

(declare-fun res!47909 () Bool)

(assert (=> d!24687 (=> (not res!47909) (not e!61789))))

(declare-fun lt!46987 () ListLongMap!1539)

(assert (=> d!24687 (= res!47909 (contains!797 lt!46987 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!46984 () List!1600)

(assert (=> d!24687 (= lt!46987 (ListLongMap!1540 lt!46984))))

(declare-fun lt!46985 () Unit!2822)

(declare-fun lt!46986 () Unit!2822)

(assert (=> d!24687 (= lt!46985 lt!46986)))

(assert (=> d!24687 (= (getValueByKey!147 lt!46984 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24687 (= lt!46986 (lemmaContainsTupThenGetReturnValue!65 lt!46984 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24687 (= lt!46984 (insertStrictlySorted!67 (toList!785 call!9382) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24687 (= (+!136 call!9382 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46987)))

(declare-fun b!94661 () Bool)

(declare-fun res!47910 () Bool)

(assert (=> b!94661 (=> (not res!47910) (not e!61789))))

(assert (=> b!94661 (= res!47910 (= (getValueByKey!147 (toList!785 lt!46987) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!94662 () Bool)

(assert (=> b!94662 (= e!61789 (contains!799 (toList!785 lt!46987) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!24687 res!47909) b!94661))

(assert (= (and b!94661 res!47910) b!94662))

(declare-fun m!101845 () Bool)

(assert (=> d!24687 m!101845))

(declare-fun m!101847 () Bool)

(assert (=> d!24687 m!101847))

(declare-fun m!101849 () Bool)

(assert (=> d!24687 m!101849))

(declare-fun m!101851 () Bool)

(assert (=> d!24687 m!101851))

(declare-fun m!101853 () Bool)

(assert (=> b!94661 m!101853))

(declare-fun m!101855 () Bool)

(assert (=> b!94662 m!101855))

(assert (=> b!94136 d!24687))

(assert (=> b!94265 d!24591))

(declare-fun mapIsEmpty!3687 () Bool)

(declare-fun mapRes!3687 () Bool)

(assert (=> mapIsEmpty!3687 mapRes!3687))

(declare-fun b!94664 () Bool)

(declare-fun e!61790 () Bool)

(assert (=> b!94664 (= e!61790 tp_is_empty!2613)))

(declare-fun b!94663 () Bool)

(declare-fun e!61791 () Bool)

(assert (=> b!94663 (= e!61791 tp_is_empty!2613)))

(declare-fun condMapEmpty!3687 () Bool)

(declare-fun mapDefault!3687 () ValueCell!963)

(assert (=> mapNonEmpty!3685 (= condMapEmpty!3687 (= mapRest!3685 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3687)))))

(assert (=> mapNonEmpty!3685 (= tp!9463 (and e!61790 mapRes!3687))))

(declare-fun mapNonEmpty!3687 () Bool)

(declare-fun tp!9465 () Bool)

(assert (=> mapNonEmpty!3687 (= mapRes!3687 (and tp!9465 e!61791))))

(declare-fun mapKey!3687 () (_ BitVec 32))

(declare-fun mapRest!3687 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapValue!3687 () ValueCell!963)

(assert (=> mapNonEmpty!3687 (= mapRest!3685 (store mapRest!3687 mapKey!3687 mapValue!3687))))

(assert (= (and mapNonEmpty!3685 condMapEmpty!3687) mapIsEmpty!3687))

(assert (= (and mapNonEmpty!3685 (not condMapEmpty!3687)) mapNonEmpty!3687))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!963) mapValue!3687)) b!94663))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!963) mapDefault!3687)) b!94664))

(declare-fun m!101857 () Bool)

(assert (=> mapNonEmpty!3687 m!101857))

(declare-fun mapIsEmpty!3688 () Bool)

(declare-fun mapRes!3688 () Bool)

(assert (=> mapIsEmpty!3688 mapRes!3688))

(declare-fun b!94666 () Bool)

(declare-fun e!61792 () Bool)

(assert (=> b!94666 (= e!61792 tp_is_empty!2613)))

(declare-fun b!94665 () Bool)

(declare-fun e!61793 () Bool)

(assert (=> b!94665 (= e!61793 tp_is_empty!2613)))

(declare-fun condMapEmpty!3688 () Bool)

(declare-fun mapDefault!3688 () ValueCell!963)

(assert (=> mapNonEmpty!3686 (= condMapEmpty!3688 (= mapRest!3686 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3688)))))

(assert (=> mapNonEmpty!3686 (= tp!9464 (and e!61792 mapRes!3688))))

(declare-fun mapNonEmpty!3688 () Bool)

(declare-fun tp!9466 () Bool)

(assert (=> mapNonEmpty!3688 (= mapRes!3688 (and tp!9466 e!61793))))

(declare-fun mapKey!3688 () (_ BitVec 32))

(declare-fun mapValue!3688 () ValueCell!963)

(declare-fun mapRest!3688 () (Array (_ BitVec 32) ValueCell!963))

(assert (=> mapNonEmpty!3688 (= mapRest!3686 (store mapRest!3688 mapKey!3688 mapValue!3688))))

(assert (= (and mapNonEmpty!3686 condMapEmpty!3688) mapIsEmpty!3688))

(assert (= (and mapNonEmpty!3686 (not condMapEmpty!3688)) mapNonEmpty!3688))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!963) mapValue!3688)) b!94665))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!963) mapDefault!3688)) b!94666))

(declare-fun m!101859 () Bool)

(assert (=> mapNonEmpty!3688 m!101859))

(declare-fun b_lambda!4167 () Bool)

(assert (= b_lambda!4165 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4167)))

(declare-fun b_lambda!4169 () Bool)

(assert (= b_lambda!4157 (or (and b!93975 b_free!2393) (and b!93983 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))) b_lambda!4169)))

(declare-fun b_lambda!4171 () Bool)

(assert (= b_lambda!4161 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4171)))

(declare-fun b_lambda!4173 () Bool)

(assert (= b_lambda!4159 (or (and b!93975 b_free!2393) (and b!93983 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))) b_lambda!4173)))

(declare-fun b_lambda!4175 () Bool)

(assert (= b_lambda!4163 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4175)))

(declare-fun b_lambda!4177 () Bool)

(assert (= b_lambda!4155 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4177)))

(check-sat (not bm!9483) (not d!24639) (not b!94577) (not b!94636) (not d!24669) (not b!94452) (not b!94485) (not b!94653) (not b!94445) (not d!24615) (not bm!9466) (not b!94595) (not b!94590) (not b!94575) (not b!94558) (not b!94643) (not d!24663) (not b_lambda!4153) (not b!94325) (not bm!9488) (not b!94369) (not b!94587) (not d!24675) (not d!24575) (not b!94623) (not d!24607) (not b!94642) (not d!24621) (not b!94497) (not b!94395) (not b!94301) (not b!94536) (not d!24655) (not b!94650) (not b!94658) (not b!94596) (not d!24603) (not b!94597) (not b!94592) (not b!94351) (not b!94344) (not b!94546) (not d!24667) (not b!94451) (not bm!9498) (not b!94482) (not mapNonEmpty!3687) (not b!94557) (not d!24565) (not b!94396) (not b_lambda!4177) (not mapNonEmpty!3688) (not b!94615) (not b!94564) (not b!94661) (not bm!9492) (not d!24617) (not d!24601) (not b!94483) (not b!94474) (not d!24559) (not b!94404) (not b!94323) (not d!24625) (not b!94562) (not d!24593) (not b!94399) (not b!94321) (not d!24631) (not b!94447) (not b!94603) (not d!24647) (not b!94569) (not b!94599) (not b!94630) (not b!94622) (not b_next!2393) (not bm!9497) (not b!94547) (not b!94366) (not b!94612) (not b!94635) (not d!24683) (not bm!9455) (not b!94614) (not d!24573) (not b_lambda!4167) (not b!94318) (not bm!9496) (not b_next!2395) (not bm!9454) (not b!94446) (not b_lambda!4175) (not b!94573) (not b!94589) (not b!94591) (not bm!9503) (not b!94312) (not b!94602) (not b!94352) (not b!94649) (not d!24637) (not b!94639) (not b!94355) (not d!24677) (not bm!9463) (not bm!9456) (not d!24659) (not bm!9476) (not b!94656) (not b!94660) (not b!94358) (not d!24687) (not bm!9491) (not b!94584) (not b!94479) (not bm!9504) (not b!94655) (not d!24597) (not b!94608) (not b!94495) b_and!5771 (not d!24579) (not b_lambda!4149) (not b!94484) (not b!94353) (not b!94593) (not d!24583) (not b!94641) (not b!94405) (not b!94359) (not bm!9490) (not d!24623) (not d!24599) (not b!94401) (not b_lambda!4171) (not b!94598) (not b!94576) (not b!94357) (not bm!9484) (not d!24609) (not b!94442) (not bm!9478) (not d!24605) (not d!24649) (not b!94616) (not bm!9505) (not b!94361) (not b!94583) (not d!24585) (not b!94486) (not b!94604) (not bm!9462) (not b!94481) (not b!94594) (not b!94398) (not b!94570) (not d!24679) (not d!24633) (not bm!9487) (not d!24619) (not b_lambda!4169) b_and!5769 (not d!24561) (not b!94600) (not b!94662) (not b!94609) (not d!24611) (not bm!9489) (not b_lambda!4173) tp_is_empty!2613 (not d!24651) (not bm!9499) (not bm!9506) (not b!94324) (not b!94397) (not b!94317) (not d!24581) (not d!24671) (not d!24657) (not bm!9453) (not d!24591) (not b!94563) (not d!24613) (not d!24567) (not b!94496) (not d!24653) (not d!24665) (not b!94331) (not b!94493) (not d!24681) (not b!94506) (not b!94500) (not bm!9477) (not b!94363) (not b!94332) (not d!24587))
(check-sat b_and!5769 b_and!5771 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun d!24689 () Bool)

(assert (=> d!24689 (= (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94325 d!24689))

(declare-fun d!24691 () Bool)

(declare-fun lt!46988 () Bool)

(assert (=> d!24691 (= lt!46988 (select (content!96 Nil!1598) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!61794 () Bool)

(assert (=> d!24691 (= lt!46988 e!61794)))

(declare-fun res!47912 () Bool)

(assert (=> d!24691 (=> (not res!47912) (not e!61794))))

(assert (=> d!24691 (= res!47912 ((_ is Cons!1597) Nil!1598))))

(assert (=> d!24691 (= (contains!798 Nil!1598 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!46988)))

(declare-fun b!94667 () Bool)

(declare-fun e!61795 () Bool)

(assert (=> b!94667 (= e!61794 e!61795)))

(declare-fun res!47911 () Bool)

(assert (=> b!94667 (=> res!47911 e!61795)))

(assert (=> b!94667 (= res!47911 (= (h!2189 Nil!1598) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94668 () Bool)

(assert (=> b!94668 (= e!61795 (contains!798 (t!5507 Nil!1598) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24691 res!47912) b!94667))

(assert (= (and b!94667 (not res!47911)) b!94668))

(assert (=> d!24691 m!101559))

(assert (=> d!24691 m!101279))

(declare-fun m!101861 () Bool)

(assert (=> d!24691 m!101861))

(assert (=> b!94668 m!101279))

(declare-fun m!101863 () Bool)

(assert (=> b!94668 m!101863))

(assert (=> b!94359 d!24691))

(assert (=> d!24613 d!24605))

(declare-fun d!24693 () Bool)

(declare-fun e!61796 () Bool)

(assert (=> d!24693 e!61796))

(declare-fun res!47913 () Bool)

(assert (=> d!24693 (=> res!47913 e!61796)))

(declare-fun lt!46991 () Bool)

(assert (=> d!24693 (= res!47913 (not lt!46991))))

(declare-fun lt!46989 () Bool)

(assert (=> d!24693 (= lt!46991 lt!46989)))

(declare-fun lt!46990 () Unit!2822)

(declare-fun e!61797 () Unit!2822)

(assert (=> d!24693 (= lt!46990 e!61797)))

(declare-fun c!15821 () Bool)

(assert (=> d!24693 (= c!15821 lt!46989)))

(assert (=> d!24693 (= lt!46989 (containsKey!151 (toList!785 lt!46553) lt!46568))))

(assert (=> d!24693 (= (contains!797 lt!46553 lt!46568) lt!46991)))

(declare-fun b!94669 () Bool)

(declare-fun lt!46992 () Unit!2822)

(assert (=> b!94669 (= e!61797 lt!46992)))

(assert (=> b!94669 (= lt!46992 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46553) lt!46568))))

(assert (=> b!94669 (isDefined!101 (getValueByKey!147 (toList!785 lt!46553) lt!46568))))

(declare-fun b!94670 () Bool)

(declare-fun Unit!2844 () Unit!2822)

(assert (=> b!94670 (= e!61797 Unit!2844)))

(declare-fun b!94671 () Bool)

(assert (=> b!94671 (= e!61796 (isDefined!101 (getValueByKey!147 (toList!785 lt!46553) lt!46568)))))

(assert (= (and d!24693 c!15821) b!94669))

(assert (= (and d!24693 (not c!15821)) b!94670))

(assert (= (and d!24693 (not res!47913)) b!94671))

(declare-fun m!101865 () Bool)

(assert (=> d!24693 m!101865))

(declare-fun m!101867 () Bool)

(assert (=> b!94669 m!101867))

(assert (=> b!94669 m!101509))

(assert (=> b!94669 m!101509))

(declare-fun m!101869 () Bool)

(assert (=> b!94669 m!101869))

(assert (=> b!94671 m!101509))

(assert (=> b!94671 m!101509))

(assert (=> b!94671 m!101869))

(assert (=> d!24613 d!24693))

(declare-fun d!24695 () Bool)

(assert (=> d!24695 (= (apply!90 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46568) (apply!90 lt!46553 lt!46568))))

(assert (=> d!24695 true))

(declare-fun _$34!847 () Unit!2822)

(assert (=> d!24695 (= (choose!572 lt!46553 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46568) _$34!847)))

(declare-fun bs!3868 () Bool)

(assert (= bs!3868 d!24695))

(assert (=> bs!3868 m!101153))

(assert (=> bs!3868 m!101153))

(assert (=> bs!3868 m!101155))

(assert (=> bs!3868 m!101161))

(assert (=> d!24613 d!24695))

(assert (=> d!24613 d!24609))

(assert (=> d!24613 d!24625))

(declare-fun b!94673 () Bool)

(declare-fun e!61803 () ListLongMap!1539)

(assert (=> b!94673 (= e!61803 (ListLongMap!1540 Nil!1597))))

(declare-fun b!94674 () Bool)

(declare-fun e!61800 () Bool)

(declare-fun lt!46994 () ListLongMap!1539)

(assert (=> b!94674 (= e!61800 (isEmpty!356 lt!46994))))

(declare-fun b!94675 () Bool)

(assert (=> b!94675 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> b!94675 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (ite c!15716 (_values!2419 newMap!16) lt!46653))))))

(declare-fun e!61804 () Bool)

(assert (=> b!94675 (= e!61804 (= (apply!90 lt!46994 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94676 () Bool)

(declare-fun res!47917 () Bool)

(declare-fun e!61802 () Bool)

(assert (=> b!94676 (=> (not res!47917) (not e!61802))))

(assert (=> b!94676 (= res!47917 (not (contains!797 lt!46994 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94677 () Bool)

(declare-fun e!61801 () Bool)

(assert (=> b!94677 (= e!61801 e!61804)))

(assert (=> b!94677 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun res!47914 () Bool)

(assert (=> b!94677 (= res!47914 (contains!797 lt!46994 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94677 (=> (not res!47914) (not e!61804))))

(declare-fun b!94678 () Bool)

(declare-fun lt!46996 () Unit!2822)

(declare-fun lt!46998 () Unit!2822)

(assert (=> b!94678 (= lt!46996 lt!46998)))

(declare-fun lt!46995 () V!3131)

(declare-fun lt!46993 () (_ BitVec 64))

(declare-fun lt!46999 () ListLongMap!1539)

(declare-fun lt!46997 () (_ BitVec 64))

(assert (=> b!94678 (not (contains!797 (+!136 lt!46999 (tuple2!2335 lt!46997 lt!46995)) lt!46993))))

(assert (=> b!94678 (= lt!46998 (addStillNotContains!40 lt!46999 lt!46997 lt!46995 lt!46993))))

(assert (=> b!94678 (= lt!46993 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94678 (= lt!46995 (get!1280 (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94678 (= lt!46997 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!9513 () ListLongMap!1539)

(assert (=> b!94678 (= lt!46999 call!9513)))

(declare-fun e!61798 () ListLongMap!1539)

(assert (=> b!94678 (= e!61798 (+!136 call!9513 (tuple2!2335 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (get!1280 (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94679 () Bool)

(assert (=> b!94679 (= e!61802 e!61801)))

(declare-fun c!15823 () Bool)

(declare-fun e!61799 () Bool)

(assert (=> b!94679 (= c!15823 e!61799)))

(declare-fun res!47916 () Bool)

(assert (=> b!94679 (=> (not res!47916) (not e!61799))))

(assert (=> b!94679 (= res!47916 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94680 () Bool)

(assert (=> b!94680 (= e!61800 (= lt!46994 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16))))))

(declare-fun b!94681 () Bool)

(assert (=> b!94681 (= e!61798 call!9513)))

(declare-fun b!94682 () Bool)

(assert (=> b!94682 (= e!61801 e!61800)))

(declare-fun c!15825 () Bool)

(assert (=> b!94682 (= c!15825 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9510 () Bool)

(assert (=> bm!9510 (= call!9513 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16)))))

(declare-fun b!94683 () Bool)

(assert (=> b!94683 (= e!61803 e!61798)))

(declare-fun c!15822 () Bool)

(assert (=> b!94683 (= c!15822 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!24697 () Bool)

(assert (=> d!24697 e!61802))

(declare-fun res!47915 () Bool)

(assert (=> d!24697 (=> (not res!47915) (not e!61802))))

(assert (=> d!24697 (= res!47915 (not (contains!797 lt!46994 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24697 (= lt!46994 e!61803)))

(declare-fun c!15824 () Bool)

(assert (=> d!24697 (= c!15824 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24697 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24697 (= (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15716 (_values!2419 newMap!16) lt!46653) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46994)))

(declare-fun b!94684 () Bool)

(assert (=> b!94684 (= e!61799 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94684 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!24697 c!15824) b!94673))

(assert (= (and d!24697 (not c!15824)) b!94683))

(assert (= (and b!94683 c!15822) b!94678))

(assert (= (and b!94683 (not c!15822)) b!94681))

(assert (= (or b!94678 b!94681) bm!9510))

(assert (= (and d!24697 res!47915) b!94676))

(assert (= (and b!94676 res!47917) b!94679))

(assert (= (and b!94679 res!47916) b!94684))

(assert (= (and b!94679 c!15823) b!94677))

(assert (= (and b!94679 (not c!15823)) b!94682))

(assert (= (and b!94677 res!47914) b!94675))

(assert (= (and b!94682 c!15825) b!94680))

(assert (= (and b!94682 (not c!15825)) b!94674))

(declare-fun b_lambda!4179 () Bool)

(assert (=> (not b_lambda!4179) (not b!94675)))

(assert (=> b!94675 t!5513))

(declare-fun b_and!5773 () Bool)

(assert (= b_and!5769 (and (=> t!5513 result!3205) b_and!5773)))

(assert (=> b!94675 t!5515))

(declare-fun b_and!5775 () Bool)

(assert (= b_and!5771 (and (=> t!5515 result!3207) b_and!5775)))

(declare-fun b_lambda!4181 () Bool)

(assert (=> (not b_lambda!4181) (not b!94678)))

(assert (=> b!94678 t!5513))

(declare-fun b_and!5777 () Bool)

(assert (= b_and!5773 (and (=> t!5513 result!3205) b_and!5777)))

(assert (=> b!94678 t!5515))

(declare-fun b_and!5779 () Bool)

(assert (= b_and!5775 (and (=> t!5515 result!3207) b_and!5779)))

(declare-fun m!101871 () Bool)

(assert (=> b!94676 m!101871))

(assert (=> b!94683 m!101279))

(assert (=> b!94683 m!101279))

(assert (=> b!94683 m!101287))

(assert (=> b!94684 m!101279))

(assert (=> b!94684 m!101279))

(assert (=> b!94684 m!101287))

(declare-fun m!101873 () Bool)

(assert (=> d!24697 m!101873))

(assert (=> d!24697 m!101265))

(assert (=> b!94677 m!101279))

(assert (=> b!94677 m!101279))

(declare-fun m!101875 () Bool)

(assert (=> b!94677 m!101875))

(declare-fun m!101877 () Bool)

(assert (=> b!94674 m!101877))

(declare-fun m!101879 () Bool)

(assert (=> b!94680 m!101879))

(assert (=> b!94675 m!101279))

(declare-fun m!101881 () Bool)

(assert (=> b!94675 m!101881))

(assert (=> b!94675 m!101607))

(assert (=> b!94675 m!101607))

(assert (=> b!94675 m!101275))

(assert (=> b!94675 m!101609))

(assert (=> b!94675 m!101275))

(assert (=> b!94675 m!101279))

(assert (=> bm!9510 m!101879))

(declare-fun m!101883 () Bool)

(assert (=> b!94678 m!101883))

(assert (=> b!94678 m!101607))

(declare-fun m!101885 () Bool)

(assert (=> b!94678 m!101885))

(assert (=> b!94678 m!101607))

(assert (=> b!94678 m!101275))

(assert (=> b!94678 m!101609))

(assert (=> b!94678 m!101275))

(declare-fun m!101887 () Bool)

(assert (=> b!94678 m!101887))

(assert (=> b!94678 m!101885))

(declare-fun m!101889 () Bool)

(assert (=> b!94678 m!101889))

(assert (=> b!94678 m!101279))

(assert (=> bm!9490 d!24697))

(declare-fun lt!47002 () Bool)

(declare-fun d!24699 () Bool)

(declare-fun content!97 (List!1600) (InoxSet tuple2!2334))

(assert (=> d!24699 (= lt!47002 (select (content!97 (toList!785 lt!46849)) (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun e!61810 () Bool)

(assert (=> d!24699 (= lt!47002 e!61810)))

(declare-fun res!47922 () Bool)

(assert (=> d!24699 (=> (not res!47922) (not e!61810))))

(assert (=> d!24699 (= res!47922 ((_ is Cons!1596) (toList!785 lt!46849)))))

(assert (=> d!24699 (= (contains!799 (toList!785 lt!46849) (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!47002)))

(declare-fun b!94689 () Bool)

(declare-fun e!61809 () Bool)

(assert (=> b!94689 (= e!61810 e!61809)))

(declare-fun res!47923 () Bool)

(assert (=> b!94689 (=> res!47923 e!61809)))

(assert (=> b!94689 (= res!47923 (= (h!2188 (toList!785 lt!46849)) (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94690 () Bool)

(assert (=> b!94690 (= e!61809 (contains!799 (t!5506 (toList!785 lt!46849)) (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!24699 res!47922) b!94689))

(assert (= (and b!94689 (not res!47923)) b!94690))

(declare-fun m!101891 () Bool)

(assert (=> d!24699 m!101891))

(declare-fun m!101893 () Bool)

(assert (=> d!24699 m!101893))

(declare-fun m!101895 () Bool)

(assert (=> b!94690 m!101895))

(assert (=> b!94484 d!24699))

(declare-fun d!24701 () Bool)

(assert (=> d!24701 (= (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94562 d!24701))

(assert (=> d!24633 d!24591))

(declare-fun d!24703 () Bool)

(declare-fun e!61819 () Bool)

(assert (=> d!24703 e!61819))

(declare-fun c!15830 () Bool)

(declare-fun lt!47005 () SeekEntryResult!261)

(assert (=> d!24703 (= c!15830 ((_ is MissingZero!261) lt!47005))))

(assert (=> d!24703 (= lt!47005 (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!24703 true))

(declare-fun _$34!850 () Unit!2822)

(assert (=> d!24703 (= (choose!574 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) _$34!850)))

(declare-fun b!94707 () Bool)

(declare-fun e!61820 () Bool)

(declare-fun call!9518 () Bool)

(assert (=> b!94707 (= e!61820 (not call!9518))))

(declare-fun b!94708 () Bool)

(declare-fun e!61821 () Bool)

(assert (=> b!94708 (= e!61821 (not call!9518))))

(declare-fun b!94709 () Bool)

(declare-fun res!47935 () Bool)

(assert (=> b!94709 (= res!47935 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3185 lt!47005)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94709 (=> (not res!47935) (not e!61821))))

(declare-fun call!9519 () Bool)

(declare-fun bm!9515 () Bool)

(assert (=> bm!9515 (= call!9519 (inRange!0 (ite c!15830 (index!3185 lt!47005) (index!3188 lt!47005)) (mask!6511 newMap!16)))))

(declare-fun b!94710 () Bool)

(declare-fun res!47932 () Bool)

(assert (=> b!94710 (=> (not res!47932) (not e!61820))))

(assert (=> b!94710 (= res!47932 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!47005)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9516 () Bool)

(assert (=> bm!9516 (= call!9518 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94711 () Bool)

(declare-fun res!47933 () Bool)

(assert (=> b!94711 (=> (not res!47933) (not e!61820))))

(assert (=> b!94711 (= res!47933 call!9519)))

(declare-fun e!61822 () Bool)

(assert (=> b!94711 (= e!61822 e!61820)))

(declare-fun b!94712 () Bool)

(assert (=> b!94712 (= e!61822 ((_ is Undefined!261) lt!47005))))

(declare-fun b!94713 () Bool)

(assert (=> b!94713 (= e!61819 e!61821)))

(declare-fun res!47934 () Bool)

(assert (=> b!94713 (= res!47934 call!9519)))

(assert (=> b!94713 (=> (not res!47934) (not e!61821))))

(declare-fun b!94714 () Bool)

(assert (=> b!94714 (= e!61819 e!61822)))

(declare-fun c!15831 () Bool)

(assert (=> b!94714 (= c!15831 ((_ is MissingVacant!261) lt!47005))))

(assert (= (and d!24703 c!15830) b!94713))

(assert (= (and d!24703 (not c!15830)) b!94714))

(assert (= (and b!94713 res!47934) b!94709))

(assert (= (and b!94709 res!47935) b!94708))

(assert (= (and b!94714 c!15831) b!94711))

(assert (= (and b!94714 (not c!15831)) b!94712))

(assert (= (and b!94711 res!47933) b!94710))

(assert (= (and b!94710 res!47932) b!94707))

(assert (= (or b!94713 b!94711) bm!9515))

(assert (= (or b!94708 b!94707) bm!9516))

(assert (=> d!24703 m!101017))

(assert (=> d!24703 m!101187))

(declare-fun m!101897 () Bool)

(assert (=> bm!9515 m!101897))

(declare-fun m!101899 () Bool)

(assert (=> b!94709 m!101899))

(declare-fun m!101901 () Bool)

(assert (=> b!94710 m!101901))

(assert (=> bm!9516 m!101017))

(assert (=> bm!9516 m!101219))

(assert (=> d!24633 d!24703))

(declare-fun d!24705 () Bool)

(assert (=> d!24705 (= (validMask!0 (mask!6511 newMap!16)) (and (or (= (mask!6511 newMap!16) #b00000000000000000000000000000111) (= (mask!6511 newMap!16) #b00000000000000000000000000001111) (= (mask!6511 newMap!16) #b00000000000000000000000000011111) (= (mask!6511 newMap!16) #b00000000000000000000000000111111) (= (mask!6511 newMap!16) #b00000000000000000000000001111111) (= (mask!6511 newMap!16) #b00000000000000000000000011111111) (= (mask!6511 newMap!16) #b00000000000000000000000111111111) (= (mask!6511 newMap!16) #b00000000000000000000001111111111) (= (mask!6511 newMap!16) #b00000000000000000000011111111111) (= (mask!6511 newMap!16) #b00000000000000000000111111111111) (= (mask!6511 newMap!16) #b00000000000000000001111111111111) (= (mask!6511 newMap!16) #b00000000000000000011111111111111) (= (mask!6511 newMap!16) #b00000000000000000111111111111111) (= (mask!6511 newMap!16) #b00000000000000001111111111111111) (= (mask!6511 newMap!16) #b00000000000000011111111111111111) (= (mask!6511 newMap!16) #b00000000000000111111111111111111) (= (mask!6511 newMap!16) #b00000000000001111111111111111111) (= (mask!6511 newMap!16) #b00000000000011111111111111111111) (= (mask!6511 newMap!16) #b00000000000111111111111111111111) (= (mask!6511 newMap!16) #b00000000001111111111111111111111) (= (mask!6511 newMap!16) #b00000000011111111111111111111111) (= (mask!6511 newMap!16) #b00000000111111111111111111111111) (= (mask!6511 newMap!16) #b00000001111111111111111111111111) (= (mask!6511 newMap!16) #b00000011111111111111111111111111) (= (mask!6511 newMap!16) #b00000111111111111111111111111111) (= (mask!6511 newMap!16) #b00001111111111111111111111111111) (= (mask!6511 newMap!16) #b00011111111111111111111111111111) (= (mask!6511 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6511 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!24633 d!24705))

(declare-fun d!24707 () Bool)

(declare-fun e!61823 () Bool)

(assert (=> d!24707 e!61823))

(declare-fun res!47936 () Bool)

(assert (=> d!24707 (=> (not res!47936) (not e!61823))))

(declare-fun lt!47009 () ListLongMap!1539)

(assert (=> d!24707 (= res!47936 (contains!797 lt!47009 (_1!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun lt!47006 () List!1600)

(assert (=> d!24707 (= lt!47009 (ListLongMap!1540 lt!47006))))

(declare-fun lt!47007 () Unit!2822)

(declare-fun lt!47008 () Unit!2822)

(assert (=> d!24707 (= lt!47007 lt!47008)))

(assert (=> d!24707 (= (getValueByKey!147 lt!47006 (_1!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))) (Some!152 (_2!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(assert (=> d!24707 (= lt!47008 (lemmaContainsTupThenGetReturnValue!65 lt!47006 (_1!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (_2!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(assert (=> d!24707 (= lt!47006 (insertStrictlySorted!67 (toList!785 (ite c!15740 call!9457 (ite c!15739 call!9456 call!9459))) (_1!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (_2!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(assert (=> d!24707 (= (+!136 (ite c!15740 call!9457 (ite c!15739 call!9456 call!9459)) (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) lt!47009)))

(declare-fun b!94715 () Bool)

(declare-fun res!47937 () Bool)

(assert (=> b!94715 (=> (not res!47937) (not e!61823))))

(assert (=> b!94715 (= res!47937 (= (getValueByKey!147 (toList!785 lt!47009) (_1!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))) (Some!152 (_2!1177 (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))))

(declare-fun b!94716 () Bool)

(assert (=> b!94716 (= e!61823 (contains!799 (toList!785 lt!47009) (ite (or c!15740 c!15739) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (= (and d!24707 res!47936) b!94715))

(assert (= (and b!94715 res!47937) b!94716))

(declare-fun m!101903 () Bool)

(assert (=> d!24707 m!101903))

(declare-fun m!101905 () Bool)

(assert (=> d!24707 m!101905))

(declare-fun m!101907 () Bool)

(assert (=> d!24707 m!101907))

(declare-fun m!101909 () Bool)

(assert (=> d!24707 m!101909))

(declare-fun m!101911 () Bool)

(assert (=> b!94715 m!101911))

(declare-fun m!101913 () Bool)

(assert (=> b!94716 m!101913))

(assert (=> bm!9456 d!24707))

(declare-fun d!24709 () Bool)

(assert (=> d!24709 (= (size!2248 newMap!16) (bvadd (_size!466 newMap!16) (bvsdiv (bvadd (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!94546 d!24709))

(declare-fun b!94717 () Bool)

(declare-fun e!61829 () ListLongMap!1539)

(assert (=> b!94717 (= e!61829 (ListLongMap!1540 Nil!1597))))

(declare-fun b!94718 () Bool)

(declare-fun e!61826 () Bool)

(declare-fun lt!47011 () ListLongMap!1539)

(assert (=> b!94718 (= e!61826 (isEmpty!356 lt!47011))))

(declare-fun b!94719 () Bool)

(assert (=> b!94719 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> b!94719 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))))))))

(declare-fun e!61830 () Bool)

(assert (=> b!94719 (= e!61830 (= (apply!90 lt!47011 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94720 () Bool)

(declare-fun res!47941 () Bool)

(declare-fun e!61828 () Bool)

(assert (=> b!94720 (=> (not res!47941) (not e!61828))))

(assert (=> b!94720 (= res!47941 (not (contains!797 lt!47011 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94721 () Bool)

(declare-fun e!61827 () Bool)

(assert (=> b!94721 (= e!61827 e!61830)))

(assert (=> b!94721 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun res!47938 () Bool)

(assert (=> b!94721 (= res!47938 (contains!797 lt!47011 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94721 (=> (not res!47938) (not e!61830))))

(declare-fun b!94722 () Bool)

(declare-fun lt!47013 () Unit!2822)

(declare-fun lt!47015 () Unit!2822)

(assert (=> b!94722 (= lt!47013 lt!47015)))

(declare-fun lt!47010 () (_ BitVec 64))

(declare-fun lt!47016 () ListLongMap!1539)

(declare-fun lt!47012 () V!3131)

(declare-fun lt!47014 () (_ BitVec 64))

(assert (=> b!94722 (not (contains!797 (+!136 lt!47016 (tuple2!2335 lt!47014 lt!47012)) lt!47010))))

(assert (=> b!94722 (= lt!47015 (addStillNotContains!40 lt!47016 lt!47014 lt!47012 lt!47010))))

(assert (=> b!94722 (= lt!47010 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94722 (= lt!47012 (get!1280 (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94722 (= lt!47014 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!9520 () ListLongMap!1539)

(assert (=> b!94722 (= lt!47016 call!9520)))

(declare-fun e!61824 () ListLongMap!1539)

(assert (=> b!94722 (= e!61824 (+!136 call!9520 (tuple2!2335 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (get!1280 (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94723 () Bool)

(assert (=> b!94723 (= e!61828 e!61827)))

(declare-fun c!15833 () Bool)

(declare-fun e!61825 () Bool)

(assert (=> b!94723 (= c!15833 e!61825)))

(declare-fun res!47940 () Bool)

(assert (=> b!94723 (=> (not res!47940) (not e!61825))))

(assert (=> b!94723 (= res!47940 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94724 () Bool)

(assert (=> b!94724 (= e!61826 (= lt!47011 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16))))))

(declare-fun b!94725 () Bool)

(assert (=> b!94725 (= e!61824 call!9520)))

(declare-fun b!94726 () Bool)

(assert (=> b!94726 (= e!61827 e!61826)))

(declare-fun c!15835 () Bool)

(assert (=> b!94726 (= c!15835 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9517 () Bool)

(assert (=> bm!9517 (= call!9520 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16)))))

(declare-fun b!94727 () Bool)

(assert (=> b!94727 (= e!61829 e!61824)))

(declare-fun c!15832 () Bool)

(assert (=> b!94727 (= c!15832 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!24711 () Bool)

(assert (=> d!24711 e!61828))

(declare-fun res!47939 () Bool)

(assert (=> d!24711 (=> (not res!47939) (not e!61828))))

(assert (=> d!24711 (= res!47939 (not (contains!797 lt!47011 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24711 (= lt!47011 e!61829)))

(declare-fun c!15834 () Bool)

(assert (=> d!24711 (= c!15834 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24711 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24711 (= (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47011)))

(declare-fun b!94728 () Bool)

(assert (=> b!94728 (= e!61825 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94728 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!24711 c!15834) b!94717))

(assert (= (and d!24711 (not c!15834)) b!94727))

(assert (= (and b!94727 c!15832) b!94722))

(assert (= (and b!94727 (not c!15832)) b!94725))

(assert (= (or b!94722 b!94725) bm!9517))

(assert (= (and d!24711 res!47939) b!94720))

(assert (= (and b!94720 res!47941) b!94723))

(assert (= (and b!94723 res!47940) b!94728))

(assert (= (and b!94723 c!15833) b!94721))

(assert (= (and b!94723 (not c!15833)) b!94726))

(assert (= (and b!94721 res!47938) b!94719))

(assert (= (and b!94726 c!15835) b!94724))

(assert (= (and b!94726 (not c!15835)) b!94718))

(declare-fun b_lambda!4183 () Bool)

(assert (=> (not b_lambda!4183) (not b!94719)))

(assert (=> b!94719 t!5513))

(declare-fun b_and!5781 () Bool)

(assert (= b_and!5777 (and (=> t!5513 result!3205) b_and!5781)))

(assert (=> b!94719 t!5515))

(declare-fun b_and!5783 () Bool)

(assert (= b_and!5779 (and (=> t!5515 result!3207) b_and!5783)))

(declare-fun b_lambda!4185 () Bool)

(assert (=> (not b_lambda!4185) (not b!94722)))

(assert (=> b!94722 t!5513))

(declare-fun b_and!5785 () Bool)

(assert (= b_and!5781 (and (=> t!5513 result!3205) b_and!5785)))

(assert (=> b!94722 t!5515))

(declare-fun b_and!5787 () Bool)

(assert (= b_and!5783 (and (=> t!5515 result!3207) b_and!5787)))

(declare-fun m!101915 () Bool)

(assert (=> b!94720 m!101915))

(assert (=> b!94727 m!101279))

(assert (=> b!94727 m!101279))

(assert (=> b!94727 m!101287))

(assert (=> b!94728 m!101279))

(assert (=> b!94728 m!101279))

(assert (=> b!94728 m!101287))

(declare-fun m!101917 () Bool)

(assert (=> d!24711 m!101917))

(assert (=> d!24711 m!101265))

(assert (=> b!94721 m!101279))

(assert (=> b!94721 m!101279))

(declare-fun m!101919 () Bool)

(assert (=> b!94721 m!101919))

(declare-fun m!101921 () Bool)

(assert (=> b!94718 m!101921))

(declare-fun m!101923 () Bool)

(assert (=> b!94724 m!101923))

(assert (=> b!94719 m!101279))

(declare-fun m!101925 () Bool)

(assert (=> b!94719 m!101925))

(assert (=> b!94719 m!101731))

(assert (=> b!94719 m!101731))

(assert (=> b!94719 m!101275))

(assert (=> b!94719 m!101733))

(assert (=> b!94719 m!101275))

(assert (=> b!94719 m!101279))

(assert (=> bm!9517 m!101923))

(declare-fun m!101927 () Bool)

(assert (=> b!94722 m!101927))

(assert (=> b!94722 m!101731))

(declare-fun m!101929 () Bool)

(assert (=> b!94722 m!101929))

(assert (=> b!94722 m!101731))

(assert (=> b!94722 m!101275))

(assert (=> b!94722 m!101733))

(assert (=> b!94722 m!101275))

(declare-fun m!101931 () Bool)

(assert (=> b!94722 m!101931))

(assert (=> b!94722 m!101929))

(declare-fun m!101933 () Bool)

(assert (=> b!94722 m!101933))

(assert (=> b!94722 m!101279))

(assert (=> bm!9497 d!24711))

(declare-fun bm!9518 () Bool)

(declare-fun call!9521 () Bool)

(assert (=> bm!9518 (= call!9521 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650))))))

(declare-fun b!94729 () Bool)

(declare-fun e!61831 () Bool)

(declare-fun e!61832 () Bool)

(assert (=> b!94729 (= e!61831 e!61832)))

(declare-fun lt!47019 () (_ BitVec 64))

(assert (=> b!94729 (= lt!47019 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000))))

(declare-fun lt!47018 () Unit!2822)

(assert (=> b!94729 (= lt!47018 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 (_2!1176 lt!46650)) lt!47019 #b00000000000000000000000000000000))))

(assert (=> b!94729 (arrayContainsKey!0 (_keys!4118 (_2!1176 lt!46650)) lt!47019 #b00000000000000000000000000000000)))

(declare-fun lt!47017 () Unit!2822)

(assert (=> b!94729 (= lt!47017 lt!47018)))

(declare-fun res!47943 () Bool)

(assert (=> b!94729 (= res!47943 (= (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000) (_keys!4118 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650))) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!94729 (=> (not res!47943) (not e!61832))))

(declare-fun d!24713 () Bool)

(declare-fun res!47942 () Bool)

(declare-fun e!61833 () Bool)

(assert (=> d!24713 (=> res!47942 e!61833)))

(assert (=> d!24713 (= res!47942 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(assert (=> d!24713 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650))) e!61833)))

(declare-fun b!94730 () Bool)

(assert (=> b!94730 (= e!61833 e!61831)))

(declare-fun c!15836 () Bool)

(assert (=> b!94730 (= c!15836 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(declare-fun b!94731 () Bool)

(assert (=> b!94731 (= e!61832 call!9521)))

(declare-fun b!94732 () Bool)

(assert (=> b!94732 (= e!61831 call!9521)))

(assert (= (and d!24713 (not res!47942)) b!94730))

(assert (= (and b!94730 c!15836) b!94729))

(assert (= (and b!94730 (not c!15836)) b!94732))

(assert (= (and b!94729 res!47943) b!94731))

(assert (= (or b!94731 b!94732) bm!9518))

(declare-fun m!101935 () Bool)

(assert (=> bm!9518 m!101935))

(declare-fun m!101937 () Bool)

(assert (=> b!94729 m!101937))

(declare-fun m!101939 () Bool)

(assert (=> b!94729 m!101939))

(declare-fun m!101941 () Bool)

(assert (=> b!94729 m!101941))

(assert (=> b!94729 m!101937))

(declare-fun m!101943 () Bool)

(assert (=> b!94729 m!101943))

(assert (=> b!94730 m!101937))

(assert (=> b!94730 m!101937))

(declare-fun m!101945 () Bool)

(assert (=> b!94730 m!101945))

(assert (=> b!94596 d!24713))

(declare-fun d!24715 () Bool)

(assert (=> d!24715 (= (get!1281 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2762 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94598 d!24715))

(assert (=> d!24647 d!24705))

(declare-fun d!24717 () Bool)

(assert (not d!24717))

(assert (=> b!94506 d!24717))

(declare-fun d!24719 () Bool)

(assert (=> d!24719 (= (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46558)) (v!2767 (getValueByKey!147 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46558)))))

(assert (=> d!24597 d!24719))

(declare-fun e!61835 () Option!153)

(declare-fun b!94735 () Bool)

(assert (=> b!94735 (= e!61835 (getValueByKey!147 (t!5506 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!46558))))

(declare-fun b!94733 () Bool)

(declare-fun e!61834 () Option!153)

(assert (=> b!94733 (= e!61834 (Some!152 (_2!1177 (h!2188 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))))

(declare-fun b!94736 () Bool)

(assert (=> b!94736 (= e!61835 None!151)))

(declare-fun b!94734 () Bool)

(assert (=> b!94734 (= e!61834 e!61835)))

(declare-fun c!15838 () Bool)

(assert (=> b!94734 (= c!15838 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) (not (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46558))))))

(declare-fun c!15837 () Bool)

(declare-fun d!24721 () Bool)

(assert (=> d!24721 (= c!15837 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46558)))))

(assert (=> d!24721 (= (getValueByKey!147 (toList!785 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46558) e!61834)))

(assert (= (and d!24721 c!15837) b!94733))

(assert (= (and d!24721 (not c!15837)) b!94734))

(assert (= (and b!94734 c!15838) b!94735))

(assert (= (and b!94734 (not c!15838)) b!94736))

(declare-fun m!101947 () Bool)

(assert (=> b!94735 m!101947))

(assert (=> d!24597 d!24721))

(declare-fun d!24723 () Bool)

(declare-fun lt!47020 () Bool)

(assert (=> d!24723 (= lt!47020 (select (content!97 (toList!785 lt!46987)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun e!61837 () Bool)

(assert (=> d!24723 (= lt!47020 e!61837)))

(declare-fun res!47944 () Bool)

(assert (=> d!24723 (=> (not res!47944) (not e!61837))))

(assert (=> d!24723 (= res!47944 ((_ is Cons!1596) (toList!785 lt!46987)))))

(assert (=> d!24723 (= (contains!799 (toList!785 lt!46987) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!47020)))

(declare-fun b!94737 () Bool)

(declare-fun e!61836 () Bool)

(assert (=> b!94737 (= e!61837 e!61836)))

(declare-fun res!47945 () Bool)

(assert (=> b!94737 (=> res!47945 e!61836)))

(assert (=> b!94737 (= res!47945 (= (h!2188 (toList!785 lt!46987)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!94738 () Bool)

(assert (=> b!94738 (= e!61836 (contains!799 (t!5506 (toList!785 lt!46987)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!24723 res!47944) b!94737))

(assert (= (and b!94737 (not res!47945)) b!94738))

(declare-fun m!101949 () Bool)

(assert (=> d!24723 m!101949))

(declare-fun m!101951 () Bool)

(assert (=> d!24723 m!101951))

(declare-fun m!101953 () Bool)

(assert (=> b!94738 m!101953))

(assert (=> b!94662 d!24723))

(declare-fun d!24725 () Bool)

(assert (=> d!24725 (= (apply!90 lt!46665 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1283 (getValueByKey!147 (toList!785 lt!46665) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3869 () Bool)

(assert (= bs!3869 d!24725))

(assert (=> bs!3869 m!101279))

(declare-fun m!101955 () Bool)

(assert (=> bs!3869 m!101955))

(assert (=> bs!3869 m!101955))

(declare-fun m!101957 () Bool)

(assert (=> bs!3869 m!101957))

(assert (=> b!94321 d!24725))

(declare-fun d!24727 () Bool)

(declare-fun c!15839 () Bool)

(assert (=> d!24727 (= c!15839 ((_ is ValueCellFull!963) (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!61838 () V!3131)

(assert (=> d!24727 (= (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61838)))

(declare-fun b!94739 () Bool)

(assert (=> b!94739 (= e!61838 (get!1281 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94740 () Bool)

(assert (=> b!94740 (= e!61838 (get!1282 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24727 c!15839) b!94739))

(assert (= (and d!24727 (not c!15839)) b!94740))

(assert (=> b!94739 m!101273))

(assert (=> b!94739 m!101275))

(declare-fun m!101959 () Bool)

(assert (=> b!94739 m!101959))

(assert (=> b!94740 m!101273))

(assert (=> b!94740 m!101275))

(declare-fun m!101961 () Bool)

(assert (=> b!94740 m!101961))

(assert (=> b!94321 d!24727))

(declare-fun d!24729 () Bool)

(declare-fun res!47946 () Bool)

(declare-fun e!61839 () Bool)

(assert (=> d!24729 (=> res!47946 e!61839)))

(assert (=> d!24729 (= res!47946 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46556)))))

(assert (=> d!24729 (= (containsKey!151 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556) e!61839)))

(declare-fun b!94741 () Bool)

(declare-fun e!61840 () Bool)

(assert (=> b!94741 (= e!61839 e!61840)))

(declare-fun res!47947 () Bool)

(assert (=> b!94741 (=> (not res!47947) (not e!61840))))

(assert (=> b!94741 (= res!47947 (and (or (not ((_ is Cons!1596) (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) (bvsle (_1!1177 (h!2188 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46556)) ((_ is Cons!1596) (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) (bvslt (_1!1177 (h!2188 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46556)))))

(declare-fun b!94742 () Bool)

(assert (=> b!94742 (= e!61840 (containsKey!151 (t!5506 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!46556))))

(assert (= (and d!24729 (not res!47946)) b!94741))

(assert (= (and b!94741 res!47947) b!94742))

(declare-fun m!101963 () Bool)

(assert (=> b!94742 m!101963))

(assert (=> d!24617 d!24729))

(declare-fun d!24731 () Bool)

(declare-fun res!47948 () Bool)

(declare-fun e!61841 () Bool)

(assert (=> d!24731 (=> res!47948 e!61841)))

(assert (=> d!24731 (= res!47948 (and ((_ is Cons!1596) (toList!785 call!9444)) (= (_1!1177 (h!2188 (toList!785 call!9444))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24731 (= (containsKey!151 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!61841)))

(declare-fun b!94743 () Bool)

(declare-fun e!61842 () Bool)

(assert (=> b!94743 (= e!61841 e!61842)))

(declare-fun res!47949 () Bool)

(assert (=> b!94743 (=> (not res!47949) (not e!61842))))

(assert (=> b!94743 (= res!47949 (and (or (not ((_ is Cons!1596) (toList!785 call!9444))) (bvsle (_1!1177 (h!2188 (toList!785 call!9444))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1596) (toList!785 call!9444)) (bvslt (_1!1177 (h!2188 (toList!785 call!9444))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!94744 () Bool)

(assert (=> b!94744 (= e!61842 (containsKey!151 (t!5506 (toList!785 call!9444)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24731 (not res!47948)) b!94743))

(assert (= (and b!94743 res!47949) b!94744))

(assert (=> b!94744 m!101017))

(declare-fun m!101965 () Bool)

(assert (=> b!94744 m!101965))

(assert (=> d!24683 d!24731))

(declare-fun call!9522 () Bool)

(declare-fun c!15840 () Bool)

(declare-fun bm!9519 () Bool)

(assert (=> bm!9519 (= call!9522 (arrayNoDuplicates!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15840 (Cons!1597 (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!15749 (Cons!1597 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1598) Nil!1598)) (ite c!15749 (Cons!1597 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1598) Nil!1598))))))

(declare-fun b!94745 () Bool)

(declare-fun e!61844 () Bool)

(assert (=> b!94745 (= e!61844 call!9522)))

(declare-fun b!94746 () Bool)

(declare-fun e!61843 () Bool)

(assert (=> b!94746 (= e!61843 e!61844)))

(assert (=> b!94746 (= c!15840 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!24733 () Bool)

(declare-fun res!47951 () Bool)

(declare-fun e!61845 () Bool)

(assert (=> d!24733 (=> res!47951 e!61845)))

(assert (=> d!24733 (= res!47951 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24733 (= (arrayNoDuplicates!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15749 (Cons!1597 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1598) Nil!1598)) e!61845)))

(declare-fun b!94747 () Bool)

(assert (=> b!94747 (= e!61845 e!61843)))

(declare-fun res!47950 () Bool)

(assert (=> b!94747 (=> (not res!47950) (not e!61843))))

(declare-fun e!61846 () Bool)

(assert (=> b!94747 (= res!47950 (not e!61846))))

(declare-fun res!47952 () Bool)

(assert (=> b!94747 (=> (not res!47952) (not e!61846))))

(assert (=> b!94747 (= res!47952 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!94748 () Bool)

(assert (=> b!94748 (= e!61846 (contains!798 (ite c!15749 (Cons!1597 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1598) Nil!1598) (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!94749 () Bool)

(assert (=> b!94749 (= e!61844 call!9522)))

(assert (= (and d!24733 (not res!47951)) b!94747))

(assert (= (and b!94747 res!47952) b!94748))

(assert (= (and b!94747 res!47950) b!94746))

(assert (= (and b!94746 c!15840) b!94745))

(assert (= (and b!94746 (not c!15840)) b!94749))

(assert (= (or b!94745 b!94749) bm!9519))

(declare-fun m!101967 () Bool)

(assert (=> bm!9519 m!101967))

(declare-fun m!101969 () Bool)

(assert (=> bm!9519 m!101969))

(assert (=> b!94746 m!101967))

(assert (=> b!94746 m!101967))

(declare-fun m!101971 () Bool)

(assert (=> b!94746 m!101971))

(assert (=> b!94747 m!101967))

(assert (=> b!94747 m!101967))

(assert (=> b!94747 m!101971))

(assert (=> b!94748 m!101967))

(assert (=> b!94748 m!101967))

(declare-fun m!101973 () Bool)

(assert (=> b!94748 m!101973))

(assert (=> bm!9463 d!24733))

(declare-fun d!24735 () Bool)

(assert (=> d!24735 (= (get!1283 (getValueByKey!147 (toList!785 lt!46550) lt!46549)) (v!2767 (getValueByKey!147 (toList!785 lt!46550) lt!46549)))))

(assert (=> d!24619 d!24735))

(declare-fun b!94752 () Bool)

(declare-fun e!61848 () Option!153)

(assert (=> b!94752 (= e!61848 (getValueByKey!147 (t!5506 (toList!785 lt!46550)) lt!46549))))

(declare-fun b!94750 () Bool)

(declare-fun e!61847 () Option!153)

(assert (=> b!94750 (= e!61847 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46550)))))))

(declare-fun b!94753 () Bool)

(assert (=> b!94753 (= e!61848 None!151)))

(declare-fun b!94751 () Bool)

(assert (=> b!94751 (= e!61847 e!61848)))

(declare-fun c!15842 () Bool)

(assert (=> b!94751 (= c!15842 (and ((_ is Cons!1596) (toList!785 lt!46550)) (not (= (_1!1177 (h!2188 (toList!785 lt!46550))) lt!46549))))))

(declare-fun d!24737 () Bool)

(declare-fun c!15841 () Bool)

(assert (=> d!24737 (= c!15841 (and ((_ is Cons!1596) (toList!785 lt!46550)) (= (_1!1177 (h!2188 (toList!785 lt!46550))) lt!46549)))))

(assert (=> d!24737 (= (getValueByKey!147 (toList!785 lt!46550) lt!46549) e!61847)))

(assert (= (and d!24737 c!15841) b!94750))

(assert (= (and d!24737 (not c!15841)) b!94751))

(assert (= (and b!94751 c!15842) b!94752))

(assert (= (and b!94751 (not c!15842)) b!94753))

(declare-fun m!101975 () Bool)

(assert (=> b!94752 m!101975))

(assert (=> d!24619 d!24737))

(declare-fun d!24739 () Bool)

(declare-fun res!47953 () Bool)

(declare-fun e!61849 () Bool)

(assert (=> d!24739 (=> res!47953 e!61849)))

(assert (=> d!24739 (= res!47953 (and ((_ is Cons!1596) (toList!785 lt!46547)) (= (_1!1177 (h!2188 (toList!785 lt!46547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24739 (= (containsKey!151 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!61849)))

(declare-fun b!94754 () Bool)

(declare-fun e!61850 () Bool)

(assert (=> b!94754 (= e!61849 e!61850)))

(declare-fun res!47954 () Bool)

(assert (=> b!94754 (=> (not res!47954) (not e!61850))))

(assert (=> b!94754 (= res!47954 (and (or (not ((_ is Cons!1596) (toList!785 lt!46547))) (bvsle (_1!1177 (h!2188 (toList!785 lt!46547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1596) (toList!785 lt!46547)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!94755 () Bool)

(assert (=> b!94755 (= e!61850 (containsKey!151 (t!5506 (toList!785 lt!46547)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!24739 (not res!47953)) b!94754))

(assert (= (and b!94754 res!47954) b!94755))

(assert (=> b!94755 m!101101))

(declare-fun m!101977 () Bool)

(assert (=> b!94755 m!101977))

(assert (=> d!24679 d!24739))

(declare-fun d!24741 () Bool)

(assert (=> d!24741 (= (apply!90 lt!46929 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46929) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3870 () Bool)

(assert (= bs!3870 d!24741))

(declare-fun m!101979 () Bool)

(assert (=> bs!3870 m!101979))

(assert (=> bs!3870 m!101979))

(declare-fun m!101981 () Bool)

(assert (=> bs!3870 m!101981))

(assert (=> b!94609 d!24741))

(assert (=> d!24671 d!24705))

(declare-fun d!24743 () Bool)

(declare-fun e!61851 () Bool)

(assert (=> d!24743 e!61851))

(declare-fun res!47955 () Bool)

(assert (=> d!24743 (=> res!47955 e!61851)))

(declare-fun lt!47023 () Bool)

(assert (=> d!24743 (= res!47955 (not lt!47023))))

(declare-fun lt!47021 () Bool)

(assert (=> d!24743 (= lt!47023 lt!47021)))

(declare-fun lt!47022 () Unit!2822)

(declare-fun e!61852 () Unit!2822)

(assert (=> d!24743 (= lt!47022 e!61852)))

(declare-fun c!15843 () Bool)

(assert (=> d!24743 (= c!15843 lt!47021)))

(assert (=> d!24743 (= lt!47021 (containsKey!151 (toList!785 (map!1243 (_2!1176 lt!46823))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24743 (= (contains!797 (map!1243 (_2!1176 lt!46823)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!47023)))

(declare-fun b!94756 () Bool)

(declare-fun lt!47024 () Unit!2822)

(assert (=> b!94756 (= e!61852 lt!47024)))

(assert (=> b!94756 (= lt!47024 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (map!1243 (_2!1176 lt!46823))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94756 (isDefined!101 (getValueByKey!147 (toList!785 (map!1243 (_2!1176 lt!46823))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94757 () Bool)

(declare-fun Unit!2845 () Unit!2822)

(assert (=> b!94757 (= e!61852 Unit!2845)))

(declare-fun b!94758 () Bool)

(assert (=> b!94758 (= e!61851 (isDefined!101 (getValueByKey!147 (toList!785 (map!1243 (_2!1176 lt!46823))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24743 c!15843) b!94756))

(assert (= (and d!24743 (not c!15843)) b!94757))

(assert (= (and d!24743 (not res!47955)) b!94758))

(assert (=> d!24743 m!101017))

(declare-fun m!101983 () Bool)

(assert (=> d!24743 m!101983))

(assert (=> b!94756 m!101017))

(declare-fun m!101985 () Bool)

(assert (=> b!94756 m!101985))

(assert (=> b!94756 m!101017))

(declare-fun m!101987 () Bool)

(assert (=> b!94756 m!101987))

(assert (=> b!94756 m!101987))

(declare-fun m!101989 () Bool)

(assert (=> b!94756 m!101989))

(assert (=> b!94758 m!101017))

(assert (=> b!94758 m!101987))

(assert (=> b!94758 m!101987))

(assert (=> b!94758 m!101989))

(assert (=> b!94446 d!24743))

(declare-fun d!24745 () Bool)

(assert (=> d!24745 (= (map!1243 (_2!1176 lt!46823)) (getCurrentListMap!466 (_keys!4118 (_2!1176 lt!46823)) (_values!2419 (_2!1176 lt!46823)) (mask!6511 (_2!1176 lt!46823)) (extraKeys!2265 (_2!1176 lt!46823)) (zeroValue!2323 (_2!1176 lt!46823)) (minValue!2323 (_2!1176 lt!46823)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46823))))))

(declare-fun bs!3871 () Bool)

(assert (= bs!3871 d!24745))

(declare-fun m!101991 () Bool)

(assert (=> bs!3871 m!101991))

(assert (=> b!94446 d!24745))

(assert (=> b!94405 d!24595))

(declare-fun d!24747 () Bool)

(declare-fun e!61853 () Bool)

(assert (=> d!24747 e!61853))

(declare-fun res!47956 () Bool)

(assert (=> d!24747 (=> (not res!47956) (not e!61853))))

(declare-fun lt!47028 () ListLongMap!1539)

(assert (=> d!24747 (= res!47956 (contains!797 lt!47028 (_1!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16)))))))

(declare-fun lt!47025 () List!1600)

(assert (=> d!24747 (= lt!47028 (ListLongMap!1540 lt!47025))))

(declare-fun lt!47026 () Unit!2822)

(declare-fun lt!47027 () Unit!2822)

(assert (=> d!24747 (= lt!47026 lt!47027)))

(assert (=> d!24747 (= (getValueByKey!147 lt!47025 (_1!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16)))))))

(assert (=> d!24747 (= lt!47027 (lemmaContainsTupThenGetReturnValue!65 lt!47025 (_1!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16)))))))

(assert (=> d!24747 (= lt!47025 (insertStrictlySorted!67 (toList!785 lt!46889) (_1!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16)))))))

(assert (=> d!24747 (= (+!136 lt!46889 (tuple2!2335 lt!46901 (minValue!2323 newMap!16))) lt!47028)))

(declare-fun b!94759 () Bool)

(declare-fun res!47957 () Bool)

(assert (=> b!94759 (=> (not res!47957) (not e!61853))))

(assert (=> b!94759 (= res!47957 (= (getValueByKey!147 (toList!785 lt!47028) (_1!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46901 (minValue!2323 newMap!16))))))))

(declare-fun b!94760 () Bool)

(assert (=> b!94760 (= e!61853 (contains!799 (toList!785 lt!47028) (tuple2!2335 lt!46901 (minValue!2323 newMap!16))))))

(assert (= (and d!24747 res!47956) b!94759))

(assert (= (and b!94759 res!47957) b!94760))

(declare-fun m!101993 () Bool)

(assert (=> d!24747 m!101993))

(declare-fun m!101995 () Bool)

(assert (=> d!24747 m!101995))

(declare-fun m!101997 () Bool)

(assert (=> d!24747 m!101997))

(declare-fun m!101999 () Bool)

(assert (=> d!24747 m!101999))

(declare-fun m!102001 () Bool)

(assert (=> b!94759 m!102001))

(declare-fun m!102003 () Bool)

(assert (=> b!94760 m!102003))

(assert (=> b!94583 d!24747))

(declare-fun d!24749 () Bool)

(assert (=> d!24749 (= (apply!90 (+!136 lt!46894 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))) lt!46909) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46894 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16)))) lt!46909)))))

(declare-fun bs!3872 () Bool)

(assert (= bs!3872 d!24749))

(declare-fun m!102005 () Bool)

(assert (=> bs!3872 m!102005))

(assert (=> bs!3872 m!102005))

(declare-fun m!102007 () Bool)

(assert (=> bs!3872 m!102007))

(assert (=> b!94583 d!24749))

(declare-fun d!24751 () Bool)

(assert (=> d!24751 (= (apply!90 (+!136 lt!46891 (tuple2!2335 lt!46906 (minValue!2323 newMap!16))) lt!46890) (apply!90 lt!46891 lt!46890))))

(declare-fun lt!47029 () Unit!2822)

(assert (=> d!24751 (= lt!47029 (choose!572 lt!46891 lt!46906 (minValue!2323 newMap!16) lt!46890))))

(declare-fun e!61854 () Bool)

(assert (=> d!24751 e!61854))

(declare-fun res!47958 () Bool)

(assert (=> d!24751 (=> (not res!47958) (not e!61854))))

(assert (=> d!24751 (= res!47958 (contains!797 lt!46891 lt!46890))))

(assert (=> d!24751 (= (addApplyDifferent!66 lt!46891 lt!46906 (minValue!2323 newMap!16) lt!46890) lt!47029)))

(declare-fun b!94761 () Bool)

(assert (=> b!94761 (= e!61854 (not (= lt!46890 lt!46906)))))

(assert (= (and d!24751 res!47958) b!94761))

(declare-fun m!102009 () Bool)

(assert (=> d!24751 m!102009))

(assert (=> d!24751 m!101639))

(assert (=> d!24751 m!101641))

(declare-fun m!102011 () Bool)

(assert (=> d!24751 m!102011))

(assert (=> d!24751 m!101637))

(assert (=> d!24751 m!101639))

(assert (=> b!94583 d!24751))

(declare-fun d!24753 () Bool)

(assert (=> d!24753 (= (apply!90 (+!136 lt!46889 (tuple2!2335 lt!46901 (minValue!2323 newMap!16))) lt!46899) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46889 (tuple2!2335 lt!46901 (minValue!2323 newMap!16)))) lt!46899)))))

(declare-fun bs!3873 () Bool)

(assert (= bs!3873 d!24753))

(declare-fun m!102013 () Bool)

(assert (=> bs!3873 m!102013))

(assert (=> bs!3873 m!102013))

(declare-fun m!102015 () Bool)

(assert (=> bs!3873 m!102015))

(assert (=> b!94583 d!24753))

(declare-fun d!24755 () Bool)

(declare-fun e!61855 () Bool)

(assert (=> d!24755 e!61855))

(declare-fun res!47959 () Bool)

(assert (=> d!24755 (=> (not res!47959) (not e!61855))))

(declare-fun lt!47033 () ListLongMap!1539)

(assert (=> d!24755 (= res!47959 (contains!797 lt!47033 (_1!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16)))))))

(declare-fun lt!47030 () List!1600)

(assert (=> d!24755 (= lt!47033 (ListLongMap!1540 lt!47030))))

(declare-fun lt!47031 () Unit!2822)

(declare-fun lt!47032 () Unit!2822)

(assert (=> d!24755 (= lt!47031 lt!47032)))

(assert (=> d!24755 (= (getValueByKey!147 lt!47030 (_1!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16)))))))

(assert (=> d!24755 (= lt!47032 (lemmaContainsTupThenGetReturnValue!65 lt!47030 (_1!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16)))))))

(assert (=> d!24755 (= lt!47030 (insertStrictlySorted!67 (toList!785 lt!46891) (_1!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16)))))))

(assert (=> d!24755 (= (+!136 lt!46891 (tuple2!2335 lt!46906 (minValue!2323 newMap!16))) lt!47033)))

(declare-fun b!94762 () Bool)

(declare-fun res!47960 () Bool)

(assert (=> b!94762 (=> (not res!47960) (not e!61855))))

(assert (=> b!94762 (= res!47960 (= (getValueByKey!147 (toList!785 lt!47033) (_1!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46906 (minValue!2323 newMap!16))))))))

(declare-fun b!94763 () Bool)

(assert (=> b!94763 (= e!61855 (contains!799 (toList!785 lt!47033) (tuple2!2335 lt!46906 (minValue!2323 newMap!16))))))

(assert (= (and d!24755 res!47959) b!94762))

(assert (= (and b!94762 res!47960) b!94763))

(declare-fun m!102017 () Bool)

(assert (=> d!24755 m!102017))

(declare-fun m!102019 () Bool)

(assert (=> d!24755 m!102019))

(declare-fun m!102021 () Bool)

(assert (=> d!24755 m!102021))

(declare-fun m!102023 () Bool)

(assert (=> d!24755 m!102023))

(declare-fun m!102025 () Bool)

(assert (=> b!94762 m!102025))

(declare-fun m!102027 () Bool)

(assert (=> b!94763 m!102027))

(assert (=> b!94583 d!24755))

(declare-fun d!24757 () Bool)

(declare-fun e!61856 () Bool)

(assert (=> d!24757 e!61856))

(declare-fun res!47961 () Bool)

(assert (=> d!24757 (=> (not res!47961) (not e!61856))))

(declare-fun lt!47037 () ListLongMap!1539)

(assert (=> d!24757 (= res!47961 (contains!797 lt!47037 (_1!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47034 () List!1600)

(assert (=> d!24757 (= lt!47037 (ListLongMap!1540 lt!47034))))

(declare-fun lt!47035 () Unit!2822)

(declare-fun lt!47036 () Unit!2822)

(assert (=> d!24757 (= lt!47035 lt!47036)))

(assert (=> d!24757 (= (getValueByKey!147 lt!47034 (_1!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24757 (= lt!47036 (lemmaContainsTupThenGetReturnValue!65 lt!47034 (_1!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24757 (= lt!47034 (insertStrictlySorted!67 (toList!785 lt!46894) (_1!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24757 (= (+!136 lt!46894 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))) lt!47037)))

(declare-fun b!94764 () Bool)

(declare-fun res!47962 () Bool)

(assert (=> b!94764 (=> (not res!47962) (not e!61856))))

(assert (=> b!94764 (= res!47962 (= (getValueByKey!147 (toList!785 lt!47037) (_1!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94765 () Bool)

(assert (=> b!94765 (= e!61856 (contains!799 (toList!785 lt!47037) (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24757 res!47961) b!94764))

(assert (= (and b!94764 res!47962) b!94765))

(declare-fun m!102029 () Bool)

(assert (=> d!24757 m!102029))

(declare-fun m!102031 () Bool)

(assert (=> d!24757 m!102031))

(declare-fun m!102033 () Bool)

(assert (=> d!24757 m!102033))

(declare-fun m!102035 () Bool)

(assert (=> d!24757 m!102035))

(declare-fun m!102037 () Bool)

(assert (=> b!94764 m!102037))

(declare-fun m!102039 () Bool)

(assert (=> b!94765 m!102039))

(assert (=> b!94583 d!24757))

(declare-fun d!24759 () Bool)

(declare-fun e!61857 () Bool)

(assert (=> d!24759 e!61857))

(declare-fun res!47963 () Bool)

(assert (=> d!24759 (=> (not res!47963) (not e!61857))))

(declare-fun lt!47041 () ListLongMap!1539)

(assert (=> d!24759 (= res!47963 (contains!797 lt!47041 (_1!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47038 () List!1600)

(assert (=> d!24759 (= lt!47041 (ListLongMap!1540 lt!47038))))

(declare-fun lt!47039 () Unit!2822)

(declare-fun lt!47040 () Unit!2822)

(assert (=> d!24759 (= lt!47039 lt!47040)))

(assert (=> d!24759 (= (getValueByKey!147 lt!47038 (_1!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24759 (= lt!47040 (lemmaContainsTupThenGetReturnValue!65 lt!47038 (_1!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24759 (= lt!47038 (insertStrictlySorted!67 (toList!785 lt!46896) (_1!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24759 (= (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))) lt!47041)))

(declare-fun b!94766 () Bool)

(declare-fun res!47964 () Bool)

(assert (=> b!94766 (=> (not res!47964) (not e!61857))))

(assert (=> b!94766 (= res!47964 (= (getValueByKey!147 (toList!785 lt!47041) (_1!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94767 () Bool)

(assert (=> b!94767 (= e!61857 (contains!799 (toList!785 lt!47041) (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24759 res!47963) b!94766))

(assert (= (and b!94766 res!47964) b!94767))

(declare-fun m!102041 () Bool)

(assert (=> d!24759 m!102041))

(declare-fun m!102043 () Bool)

(assert (=> d!24759 m!102043))

(declare-fun m!102045 () Bool)

(assert (=> d!24759 m!102045))

(declare-fun m!102047 () Bool)

(assert (=> d!24759 m!102047))

(declare-fun m!102049 () Bool)

(assert (=> b!94766 m!102049))

(declare-fun m!102051 () Bool)

(assert (=> b!94767 m!102051))

(assert (=> b!94583 d!24759))

(declare-fun d!24761 () Bool)

(assert (=> d!24761 (= (apply!90 (+!136 lt!46889 (tuple2!2335 lt!46901 (minValue!2323 newMap!16))) lt!46899) (apply!90 lt!46889 lt!46899))))

(declare-fun lt!47042 () Unit!2822)

(assert (=> d!24761 (= lt!47042 (choose!572 lt!46889 lt!46901 (minValue!2323 newMap!16) lt!46899))))

(declare-fun e!61858 () Bool)

(assert (=> d!24761 e!61858))

(declare-fun res!47965 () Bool)

(assert (=> d!24761 (=> (not res!47965) (not e!61858))))

(assert (=> d!24761 (= res!47965 (contains!797 lt!46889 lt!46899))))

(assert (=> d!24761 (= (addApplyDifferent!66 lt!46889 lt!46901 (minValue!2323 newMap!16) lt!46899) lt!47042)))

(declare-fun b!94768 () Bool)

(assert (=> b!94768 (= e!61858 (not (= lt!46899 lt!46901)))))

(assert (= (and d!24761 res!47965) b!94768))

(declare-fun m!102053 () Bool)

(assert (=> d!24761 m!102053))

(assert (=> d!24761 m!101625))

(assert (=> d!24761 m!101631))

(declare-fun m!102055 () Bool)

(assert (=> d!24761 m!102055))

(assert (=> d!24761 m!101627))

(assert (=> d!24761 m!101625))

(assert (=> b!94583 d!24761))

(declare-fun d!24763 () Bool)

(assert (=> d!24763 (= (apply!90 (+!136 lt!46894 (tuple2!2335 lt!46902 (zeroValue!2323 newMap!16))) lt!46909) (apply!90 lt!46894 lt!46909))))

(declare-fun lt!47043 () Unit!2822)

(assert (=> d!24763 (= lt!47043 (choose!572 lt!46894 lt!46902 (zeroValue!2323 newMap!16) lt!46909))))

(declare-fun e!61859 () Bool)

(assert (=> d!24763 e!61859))

(declare-fun res!47966 () Bool)

(assert (=> d!24763 (=> (not res!47966) (not e!61859))))

(assert (=> d!24763 (= res!47966 (contains!797 lt!46894 lt!46909))))

(assert (=> d!24763 (= (addApplyDifferent!66 lt!46894 lt!46902 (zeroValue!2323 newMap!16) lt!46909) lt!47043)))

(declare-fun b!94769 () Bool)

(assert (=> b!94769 (= e!61859 (not (= lt!46909 lt!46902)))))

(assert (= (and d!24763 res!47966) b!94769))

(declare-fun m!102057 () Bool)

(assert (=> d!24763 m!102057))

(assert (=> d!24763 m!101621))

(assert (=> d!24763 m!101623))

(declare-fun m!102059 () Bool)

(assert (=> d!24763 m!102059))

(assert (=> d!24763 m!101629))

(assert (=> d!24763 m!101621))

(assert (=> b!94583 d!24763))

(declare-fun d!24765 () Bool)

(declare-fun e!61860 () Bool)

(assert (=> d!24765 e!61860))

(declare-fun res!47967 () Bool)

(assert (=> d!24765 (=> res!47967 e!61860)))

(declare-fun lt!47046 () Bool)

(assert (=> d!24765 (= res!47967 (not lt!47046))))

(declare-fun lt!47044 () Bool)

(assert (=> d!24765 (= lt!47046 lt!47044)))

(declare-fun lt!47045 () Unit!2822)

(declare-fun e!61861 () Unit!2822)

(assert (=> d!24765 (= lt!47045 e!61861)))

(declare-fun c!15844 () Bool)

(assert (=> d!24765 (= c!15844 lt!47044)))

(assert (=> d!24765 (= lt!47044 (containsKey!151 (toList!785 (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))) lt!46897))))

(assert (=> d!24765 (= (contains!797 (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))) lt!46897) lt!47046)))

(declare-fun b!94770 () Bool)

(declare-fun lt!47047 () Unit!2822)

(assert (=> b!94770 (= e!61861 lt!47047)))

(assert (=> b!94770 (= lt!47047 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))) lt!46897))))

(assert (=> b!94770 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))) lt!46897))))

(declare-fun b!94771 () Bool)

(declare-fun Unit!2846 () Unit!2822)

(assert (=> b!94771 (= e!61861 Unit!2846)))

(declare-fun b!94772 () Bool)

(assert (=> b!94772 (= e!61860 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16)))) lt!46897)))))

(assert (= (and d!24765 c!15844) b!94770))

(assert (= (and d!24765 (not c!15844)) b!94771))

(assert (= (and d!24765 (not res!47967)) b!94772))

(declare-fun m!102061 () Bool)

(assert (=> d!24765 m!102061))

(declare-fun m!102063 () Bool)

(assert (=> b!94770 m!102063))

(declare-fun m!102065 () Bool)

(assert (=> b!94770 m!102065))

(assert (=> b!94770 m!102065))

(declare-fun m!102067 () Bool)

(assert (=> b!94770 m!102067))

(assert (=> b!94772 m!102065))

(assert (=> b!94772 m!102065))

(assert (=> b!94772 m!102067))

(assert (=> b!94583 d!24765))

(declare-fun d!24767 () Bool)

(assert (=> d!24767 (contains!797 (+!136 lt!46896 (tuple2!2335 lt!46895 (zeroValue!2323 newMap!16))) lt!46897)))

(declare-fun lt!47048 () Unit!2822)

(assert (=> d!24767 (= lt!47048 (choose!573 lt!46896 lt!46895 (zeroValue!2323 newMap!16) lt!46897))))

(assert (=> d!24767 (contains!797 lt!46896 lt!46897)))

(assert (=> d!24767 (= (addStillContains!66 lt!46896 lt!46895 (zeroValue!2323 newMap!16) lt!46897) lt!47048)))

(declare-fun bs!3874 () Bool)

(assert (= bs!3874 d!24767))

(assert (=> bs!3874 m!101617))

(assert (=> bs!3874 m!101617))

(assert (=> bs!3874 m!101619))

(declare-fun m!102069 () Bool)

(assert (=> bs!3874 m!102069))

(declare-fun m!102071 () Bool)

(assert (=> bs!3874 m!102071))

(assert (=> b!94583 d!24767))

(declare-fun d!24769 () Bool)

(assert (=> d!24769 (= (apply!90 lt!46889 lt!46899) (get!1283 (getValueByKey!147 (toList!785 lt!46889) lt!46899)))))

(declare-fun bs!3875 () Bool)

(assert (= bs!3875 d!24769))

(declare-fun m!102073 () Bool)

(assert (=> bs!3875 m!102073))

(assert (=> bs!3875 m!102073))

(declare-fun m!102075 () Bool)

(assert (=> bs!3875 m!102075))

(assert (=> b!94583 d!24769))

(declare-fun d!24771 () Bool)

(assert (=> d!24771 (= (apply!90 (+!136 lt!46891 (tuple2!2335 lt!46906 (minValue!2323 newMap!16))) lt!46890) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46891 (tuple2!2335 lt!46906 (minValue!2323 newMap!16)))) lt!46890)))))

(declare-fun bs!3876 () Bool)

(assert (= bs!3876 d!24771))

(declare-fun m!102077 () Bool)

(assert (=> bs!3876 m!102077))

(assert (=> bs!3876 m!102077))

(declare-fun m!102079 () Bool)

(assert (=> bs!3876 m!102079))

(assert (=> b!94583 d!24771))

(declare-fun d!24773 () Bool)

(assert (=> d!24773 (= (apply!90 lt!46894 lt!46909) (get!1283 (getValueByKey!147 (toList!785 lt!46894) lt!46909)))))

(declare-fun bs!3877 () Bool)

(assert (= bs!3877 d!24773))

(declare-fun m!102081 () Bool)

(assert (=> bs!3877 m!102081))

(assert (=> bs!3877 m!102081))

(declare-fun m!102083 () Bool)

(assert (=> bs!3877 m!102083))

(assert (=> b!94583 d!24773))

(assert (=> b!94583 d!24697))

(declare-fun d!24775 () Bool)

(assert (=> d!24775 (= (apply!90 lt!46891 lt!46890) (get!1283 (getValueByKey!147 (toList!785 lt!46891) lt!46890)))))

(declare-fun bs!3878 () Bool)

(assert (= bs!3878 d!24775))

(declare-fun m!102085 () Bool)

(assert (=> bs!3878 m!102085))

(assert (=> bs!3878 m!102085))

(declare-fun m!102087 () Bool)

(assert (=> bs!3878 m!102087))

(assert (=> b!94583 d!24775))

(assert (=> b!94643 d!24689))

(declare-fun d!24777 () Bool)

(declare-fun e!61862 () Bool)

(assert (=> d!24777 e!61862))

(declare-fun res!47968 () Bool)

(assert (=> d!24777 (=> res!47968 e!61862)))

(declare-fun lt!47051 () Bool)

(assert (=> d!24777 (= res!47968 (not lt!47051))))

(declare-fun lt!47049 () Bool)

(assert (=> d!24777 (= lt!47051 lt!47049)))

(declare-fun lt!47050 () Unit!2822)

(declare-fun e!61863 () Unit!2822)

(assert (=> d!24777 (= lt!47050 e!61863)))

(declare-fun c!15845 () Bool)

(assert (=> d!24777 (= c!15845 lt!47049)))

(assert (=> d!24777 (= lt!47049 (containsKey!151 (toList!785 lt!46731) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!24777 (= (contains!797 lt!46731 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47051)))

(declare-fun b!94773 () Bool)

(declare-fun lt!47052 () Unit!2822)

(assert (=> b!94773 (= e!61863 lt!47052)))

(assert (=> b!94773 (= lt!47052 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46731) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94773 (isDefined!101 (getValueByKey!147 (toList!785 lt!46731) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94774 () Bool)

(declare-fun Unit!2847 () Unit!2822)

(assert (=> b!94774 (= e!61863 Unit!2847)))

(declare-fun b!94775 () Bool)

(assert (=> b!94775 (= e!61862 (isDefined!101 (getValueByKey!147 (toList!785 lt!46731) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!24777 c!15845) b!94773))

(assert (= (and d!24777 (not c!15845)) b!94774))

(assert (= (and d!24777 (not res!47968)) b!94775))

(assert (=> d!24777 m!101101))

(declare-fun m!102089 () Bool)

(assert (=> d!24777 m!102089))

(assert (=> b!94773 m!101101))

(declare-fun m!102091 () Bool)

(assert (=> b!94773 m!102091))

(assert (=> b!94773 m!101101))

(declare-fun m!102093 () Bool)

(assert (=> b!94773 m!102093))

(assert (=> b!94773 m!102093))

(declare-fun m!102095 () Bool)

(assert (=> b!94773 m!102095))

(assert (=> b!94775 m!101101))

(assert (=> b!94775 m!102093))

(assert (=> b!94775 m!102093))

(assert (=> b!94775 m!102095))

(assert (=> b!94398 d!24777))

(declare-fun e!61865 () Option!153)

(declare-fun b!94778 () Bool)

(assert (=> b!94778 (= e!61865 (getValueByKey!147 (t!5506 (t!5506 (toList!785 lt!46466))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94776 () Bool)

(declare-fun e!61864 () Option!153)

(assert (=> b!94776 (= e!61864 (Some!152 (_2!1177 (h!2188 (t!5506 (toList!785 lt!46466))))))))

(declare-fun b!94779 () Bool)

(assert (=> b!94779 (= e!61865 None!151)))

(declare-fun b!94777 () Bool)

(assert (=> b!94777 (= e!61864 e!61865)))

(declare-fun c!15847 () Bool)

(assert (=> b!94777 (= c!15847 (and ((_ is Cons!1596) (t!5506 (toList!785 lt!46466))) (not (= (_1!1177 (h!2188 (t!5506 (toList!785 lt!46466)))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun c!15846 () Bool)

(declare-fun d!24779 () Bool)

(assert (=> d!24779 (= c!15846 (and ((_ is Cons!1596) (t!5506 (toList!785 lt!46466))) (= (_1!1177 (h!2188 (t!5506 (toList!785 lt!46466)))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24779 (= (getValueByKey!147 (t!5506 (toList!785 lt!46466)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!61864)))

(assert (= (and d!24779 c!15846) b!94776))

(assert (= (and d!24779 (not c!15846)) b!94777))

(assert (= (and b!94777 c!15847) b!94778))

(assert (= (and b!94777 (not c!15847)) b!94779))

(assert (=> b!94778 m!101017))

(declare-fun m!102097 () Bool)

(assert (=> b!94778 m!102097))

(assert (=> b!94312 d!24779))

(declare-fun d!24781 () Bool)

(assert (=> d!24781 (= (content!96 Nil!1598) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!24631 d!24781))

(declare-fun d!24783 () Bool)

(declare-fun res!47971 () Bool)

(declare-fun e!61866 () Bool)

(assert (=> d!24783 (=> (not res!47971) (not e!61866))))

(assert (=> d!24783 (= res!47971 (validMask!0 (mask!6511 (v!2763 (underlying!330 thiss!992)))))))

(assert (=> d!24783 (= (simpleValid!65 (v!2763 (underlying!330 thiss!992))) e!61866)))

(declare-fun b!94782 () Bool)

(declare-fun res!47972 () Bool)

(assert (=> b!94782 (=> (not res!47972) (not e!61866))))

(assert (=> b!94782 (= res!47972 (= (size!2248 (v!2763 (underlying!330 thiss!992))) (bvadd (_size!466 (v!2763 (underlying!330 thiss!992))) (bvsdiv (bvadd (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!94783 () Bool)

(assert (=> b!94783 (= e!61866 (and (bvsge (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!466 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!94781 () Bool)

(declare-fun res!47970 () Bool)

(assert (=> b!94781 (=> (not res!47970) (not e!61866))))

(assert (=> b!94781 (= res!47970 (bvsge (size!2248 (v!2763 (underlying!330 thiss!992))) (_size!466 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!94780 () Bool)

(declare-fun res!47969 () Bool)

(assert (=> b!94780 (=> (not res!47969) (not e!61866))))

(assert (=> b!94780 (= res!47969 (and (= (size!2245 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001)) (= (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (size!2245 (_values!2419 (v!2763 (underlying!330 thiss!992))))) (bvsge (_size!466 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!466 (v!2763 (underlying!330 thiss!992))) (bvadd (mask!6511 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!24783 res!47971) b!94780))

(assert (= (and b!94780 res!47969) b!94781))

(assert (= (and b!94781 res!47970) b!94782))

(assert (= (and b!94782 res!47972) b!94783))

(assert (=> d!24783 m!101027))

(declare-fun m!102099 () Bool)

(assert (=> b!94782 m!102099))

(assert (=> b!94781 m!102099))

(assert (=> d!24653 d!24783))

(declare-fun d!24785 () Bool)

(declare-fun e!61867 () Bool)

(assert (=> d!24785 e!61867))

(declare-fun res!47973 () Bool)

(assert (=> d!24785 (=> (not res!47973) (not e!61867))))

(declare-fun lt!47056 () ListLongMap!1539)

(assert (=> d!24785 (= res!47973 (contains!797 lt!47056 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun lt!47053 () List!1600)

(assert (=> d!24785 (= lt!47056 (ListLongMap!1540 lt!47053))))

(declare-fun lt!47054 () Unit!2822)

(declare-fun lt!47055 () Unit!2822)

(assert (=> d!24785 (= lt!47054 lt!47055)))

(assert (=> d!24785 (= (getValueByKey!147 lt!47053 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24785 (= lt!47055 (lemmaContainsTupThenGetReturnValue!65 lt!47053 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24785 (= lt!47053 (insertStrictlySorted!67 (toList!785 call!9461) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24785 (= (+!136 call!9461 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!47056)))

(declare-fun b!94784 () Bool)

(declare-fun res!47974 () Bool)

(assert (=> b!94784 (=> (not res!47974) (not e!61867))))

(assert (=> b!94784 (= res!47974 (= (getValueByKey!147 (toList!785 lt!47056) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun b!94785 () Bool)

(assert (=> b!94785 (= e!61867 (contains!799 (toList!785 lt!47056) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(assert (= (and d!24785 res!47973) b!94784))

(assert (= (and b!94784 res!47974) b!94785))

(declare-fun m!102101 () Bool)

(assert (=> d!24785 m!102101))

(declare-fun m!102103 () Bool)

(assert (=> d!24785 m!102103))

(declare-fun m!102105 () Bool)

(assert (=> d!24785 m!102105))

(declare-fun m!102107 () Bool)

(assert (=> d!24785 m!102107))

(declare-fun m!102109 () Bool)

(assert (=> b!94784 m!102109))

(declare-fun m!102111 () Bool)

(assert (=> b!94785 m!102111))

(assert (=> b!94317 d!24785))

(declare-fun d!24787 () Bool)

(declare-fun e!61868 () Bool)

(assert (=> d!24787 e!61868))

(declare-fun res!47975 () Bool)

(assert (=> d!24787 (=> (not res!47975) (not e!61868))))

(declare-fun lt!47060 () ListLongMap!1539)

(assert (=> d!24787 (= res!47975 (contains!797 lt!47060 (_1!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16)))))))

(declare-fun lt!47057 () List!1600)

(assert (=> d!24787 (= lt!47060 (ListLongMap!1540 lt!47057))))

(declare-fun lt!47058 () Unit!2822)

(declare-fun lt!47059 () Unit!2822)

(assert (=> d!24787 (= lt!47058 lt!47059)))

(assert (=> d!24787 (= (getValueByKey!147 lt!47057 (_1!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16)))))))

(assert (=> d!24787 (= lt!47059 (lemmaContainsTupThenGetReturnValue!65 lt!47057 (_1!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16)))))))

(assert (=> d!24787 (= lt!47057 (insertStrictlySorted!67 (toList!785 lt!46930) (_1!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16)))))))

(assert (=> d!24787 (= (+!136 lt!46930 (tuple2!2335 lt!46942 (minValue!2323 newMap!16))) lt!47060)))

(declare-fun b!94786 () Bool)

(declare-fun res!47976 () Bool)

(assert (=> b!94786 (=> (not res!47976) (not e!61868))))

(assert (=> b!94786 (= res!47976 (= (getValueByKey!147 (toList!785 lt!47060) (_1!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46942 (minValue!2323 newMap!16))))))))

(declare-fun b!94787 () Bool)

(assert (=> b!94787 (= e!61868 (contains!799 (toList!785 lt!47060) (tuple2!2335 lt!46942 (minValue!2323 newMap!16))))))

(assert (= (and d!24787 res!47975) b!94786))

(assert (= (and b!94786 res!47976) b!94787))

(declare-fun m!102113 () Bool)

(assert (=> d!24787 m!102113))

(declare-fun m!102115 () Bool)

(assert (=> d!24787 m!102115))

(declare-fun m!102117 () Bool)

(assert (=> d!24787 m!102117))

(declare-fun m!102119 () Bool)

(assert (=> d!24787 m!102119))

(declare-fun m!102121 () Bool)

(assert (=> b!94786 m!102121))

(declare-fun m!102123 () Bool)

(assert (=> b!94787 m!102123))

(assert (=> b!94622 d!24787))

(declare-fun d!24789 () Bool)

(assert (=> d!24789 (= (apply!90 lt!46935 lt!46950) (get!1283 (getValueByKey!147 (toList!785 lt!46935) lt!46950)))))

(declare-fun bs!3879 () Bool)

(assert (= bs!3879 d!24789))

(declare-fun m!102125 () Bool)

(assert (=> bs!3879 m!102125))

(assert (=> bs!3879 m!102125))

(declare-fun m!102127 () Bool)

(assert (=> bs!3879 m!102127))

(assert (=> b!94622 d!24789))

(declare-fun d!24791 () Bool)

(assert (=> d!24791 (= (apply!90 (+!136 lt!46930 (tuple2!2335 lt!46942 (minValue!2323 newMap!16))) lt!46940) (apply!90 lt!46930 lt!46940))))

(declare-fun lt!47061 () Unit!2822)

(assert (=> d!24791 (= lt!47061 (choose!572 lt!46930 lt!46942 (minValue!2323 newMap!16) lt!46940))))

(declare-fun e!61869 () Bool)

(assert (=> d!24791 e!61869))

(declare-fun res!47977 () Bool)

(assert (=> d!24791 (=> (not res!47977) (not e!61869))))

(assert (=> d!24791 (= res!47977 (contains!797 lt!46930 lt!46940))))

(assert (=> d!24791 (= (addApplyDifferent!66 lt!46930 lt!46942 (minValue!2323 newMap!16) lt!46940) lt!47061)))

(declare-fun b!94788 () Bool)

(assert (=> b!94788 (= e!61869 (not (= lt!46940 lt!46942)))))

(assert (= (and d!24791 res!47977) b!94788))

(declare-fun m!102129 () Bool)

(assert (=> d!24791 m!102129))

(assert (=> d!24791 m!101749))

(assert (=> d!24791 m!101755))

(declare-fun m!102131 () Bool)

(assert (=> d!24791 m!102131))

(assert (=> d!24791 m!101751))

(assert (=> d!24791 m!101749))

(assert (=> b!94622 d!24791))

(declare-fun d!24793 () Bool)

(declare-fun e!61870 () Bool)

(assert (=> d!24793 e!61870))

(declare-fun res!47978 () Bool)

(assert (=> d!24793 (=> (not res!47978) (not e!61870))))

(declare-fun lt!47065 () ListLongMap!1539)

(assert (=> d!24793 (= res!47978 (contains!797 lt!47065 (_1!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16)))))))

(declare-fun lt!47062 () List!1600)

(assert (=> d!24793 (= lt!47065 (ListLongMap!1540 lt!47062))))

(declare-fun lt!47063 () Unit!2822)

(declare-fun lt!47064 () Unit!2822)

(assert (=> d!24793 (= lt!47063 lt!47064)))

(assert (=> d!24793 (= (getValueByKey!147 lt!47062 (_1!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16)))))))

(assert (=> d!24793 (= lt!47064 (lemmaContainsTupThenGetReturnValue!65 lt!47062 (_1!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16)))))))

(assert (=> d!24793 (= lt!47062 (insertStrictlySorted!67 (toList!785 lt!46932) (_1!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16)))))))

(assert (=> d!24793 (= (+!136 lt!46932 (tuple2!2335 lt!46947 (minValue!2323 newMap!16))) lt!47065)))

(declare-fun b!94789 () Bool)

(declare-fun res!47979 () Bool)

(assert (=> b!94789 (=> (not res!47979) (not e!61870))))

(assert (=> b!94789 (= res!47979 (= (getValueByKey!147 (toList!785 lt!47065) (_1!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46947 (minValue!2323 newMap!16))))))))

(declare-fun b!94790 () Bool)

(assert (=> b!94790 (= e!61870 (contains!799 (toList!785 lt!47065) (tuple2!2335 lt!46947 (minValue!2323 newMap!16))))))

(assert (= (and d!24793 res!47978) b!94789))

(assert (= (and b!94789 res!47979) b!94790))

(declare-fun m!102133 () Bool)

(assert (=> d!24793 m!102133))

(declare-fun m!102135 () Bool)

(assert (=> d!24793 m!102135))

(declare-fun m!102137 () Bool)

(assert (=> d!24793 m!102137))

(declare-fun m!102139 () Bool)

(assert (=> d!24793 m!102139))

(declare-fun m!102141 () Bool)

(assert (=> b!94789 m!102141))

(declare-fun m!102143 () Bool)

(assert (=> b!94790 m!102143))

(assert (=> b!94622 d!24793))

(declare-fun d!24795 () Bool)

(assert (=> d!24795 (= (apply!90 (+!136 lt!46932 (tuple2!2335 lt!46947 (minValue!2323 newMap!16))) lt!46931) (apply!90 lt!46932 lt!46931))))

(declare-fun lt!47066 () Unit!2822)

(assert (=> d!24795 (= lt!47066 (choose!572 lt!46932 lt!46947 (minValue!2323 newMap!16) lt!46931))))

(declare-fun e!61871 () Bool)

(assert (=> d!24795 e!61871))

(declare-fun res!47980 () Bool)

(assert (=> d!24795 (=> (not res!47980) (not e!61871))))

(assert (=> d!24795 (= res!47980 (contains!797 lt!46932 lt!46931))))

(assert (=> d!24795 (= (addApplyDifferent!66 lt!46932 lt!46947 (minValue!2323 newMap!16) lt!46931) lt!47066)))

(declare-fun b!94791 () Bool)

(assert (=> b!94791 (= e!61871 (not (= lt!46931 lt!46947)))))

(assert (= (and d!24795 res!47980) b!94791))

(declare-fun m!102145 () Bool)

(assert (=> d!24795 m!102145))

(assert (=> d!24795 m!101763))

(assert (=> d!24795 m!101765))

(declare-fun m!102147 () Bool)

(assert (=> d!24795 m!102147))

(assert (=> d!24795 m!101761))

(assert (=> d!24795 m!101763))

(assert (=> b!94622 d!24795))

(declare-fun d!24797 () Bool)

(assert (=> d!24797 (= (apply!90 (+!136 lt!46930 (tuple2!2335 lt!46942 (minValue!2323 newMap!16))) lt!46940) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46930 (tuple2!2335 lt!46942 (minValue!2323 newMap!16)))) lt!46940)))))

(declare-fun bs!3880 () Bool)

(assert (= bs!3880 d!24797))

(declare-fun m!102149 () Bool)

(assert (=> bs!3880 m!102149))

(assert (=> bs!3880 m!102149))

(declare-fun m!102151 () Bool)

(assert (=> bs!3880 m!102151))

(assert (=> b!94622 d!24797))

(declare-fun d!24799 () Bool)

(assert (=> d!24799 (= (apply!90 (+!136 lt!46932 (tuple2!2335 lt!46947 (minValue!2323 newMap!16))) lt!46931) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46932 (tuple2!2335 lt!46947 (minValue!2323 newMap!16)))) lt!46931)))))

(declare-fun bs!3881 () Bool)

(assert (= bs!3881 d!24799))

(declare-fun m!102153 () Bool)

(assert (=> bs!3881 m!102153))

(assert (=> bs!3881 m!102153))

(declare-fun m!102155 () Bool)

(assert (=> bs!3881 m!102155))

(assert (=> b!94622 d!24799))

(declare-fun d!24801 () Bool)

(declare-fun e!61872 () Bool)

(assert (=> d!24801 e!61872))

(declare-fun res!47981 () Bool)

(assert (=> d!24801 (=> res!47981 e!61872)))

(declare-fun lt!47069 () Bool)

(assert (=> d!24801 (= res!47981 (not lt!47069))))

(declare-fun lt!47067 () Bool)

(assert (=> d!24801 (= lt!47069 lt!47067)))

(declare-fun lt!47068 () Unit!2822)

(declare-fun e!61873 () Unit!2822)

(assert (=> d!24801 (= lt!47068 e!61873)))

(declare-fun c!15848 () Bool)

(assert (=> d!24801 (= c!15848 lt!47067)))

(assert (=> d!24801 (= lt!47067 (containsKey!151 (toList!785 (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))) lt!46938))))

(assert (=> d!24801 (= (contains!797 (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))) lt!46938) lt!47069)))

(declare-fun b!94792 () Bool)

(declare-fun lt!47070 () Unit!2822)

(assert (=> b!94792 (= e!61873 lt!47070)))

(assert (=> b!94792 (= lt!47070 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))) lt!46938))))

(assert (=> b!94792 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))) lt!46938))))

(declare-fun b!94793 () Bool)

(declare-fun Unit!2848 () Unit!2822)

(assert (=> b!94793 (= e!61873 Unit!2848)))

(declare-fun b!94794 () Bool)

(assert (=> b!94794 (= e!61872 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))) lt!46938)))))

(assert (= (and d!24801 c!15848) b!94792))

(assert (= (and d!24801 (not c!15848)) b!94793))

(assert (= (and d!24801 (not res!47981)) b!94794))

(declare-fun m!102157 () Bool)

(assert (=> d!24801 m!102157))

(declare-fun m!102159 () Bool)

(assert (=> b!94792 m!102159))

(declare-fun m!102161 () Bool)

(assert (=> b!94792 m!102161))

(assert (=> b!94792 m!102161))

(declare-fun m!102163 () Bool)

(assert (=> b!94792 m!102163))

(assert (=> b!94794 m!102161))

(assert (=> b!94794 m!102161))

(assert (=> b!94794 m!102163))

(assert (=> b!94622 d!24801))

(declare-fun d!24803 () Bool)

(assert (=> d!24803 (= (apply!90 lt!46932 lt!46931) (get!1283 (getValueByKey!147 (toList!785 lt!46932) lt!46931)))))

(declare-fun bs!3882 () Bool)

(assert (= bs!3882 d!24803))

(declare-fun m!102165 () Bool)

(assert (=> bs!3882 m!102165))

(assert (=> bs!3882 m!102165))

(declare-fun m!102167 () Bool)

(assert (=> bs!3882 m!102167))

(assert (=> b!94622 d!24803))

(declare-fun d!24805 () Bool)

(assert (=> d!24805 (= (apply!90 (+!136 lt!46935 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))) lt!46950) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46935 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16)))) lt!46950)))))

(declare-fun bs!3883 () Bool)

(assert (= bs!3883 d!24805))

(declare-fun m!102169 () Bool)

(assert (=> bs!3883 m!102169))

(assert (=> bs!3883 m!102169))

(declare-fun m!102171 () Bool)

(assert (=> bs!3883 m!102171))

(assert (=> b!94622 d!24805))

(declare-fun d!24807 () Bool)

(declare-fun e!61874 () Bool)

(assert (=> d!24807 e!61874))

(declare-fun res!47982 () Bool)

(assert (=> d!24807 (=> (not res!47982) (not e!61874))))

(declare-fun lt!47074 () ListLongMap!1539)

(assert (=> d!24807 (= res!47982 (contains!797 lt!47074 (_1!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47071 () List!1600)

(assert (=> d!24807 (= lt!47074 (ListLongMap!1540 lt!47071))))

(declare-fun lt!47072 () Unit!2822)

(declare-fun lt!47073 () Unit!2822)

(assert (=> d!24807 (= lt!47072 lt!47073)))

(assert (=> d!24807 (= (getValueByKey!147 lt!47071 (_1!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24807 (= lt!47073 (lemmaContainsTupThenGetReturnValue!65 lt!47071 (_1!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24807 (= lt!47071 (insertStrictlySorted!67 (toList!785 lt!46937) (_1!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24807 (= (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))) lt!47074)))

(declare-fun b!94795 () Bool)

(declare-fun res!47983 () Bool)

(assert (=> b!94795 (=> (not res!47983) (not e!61874))))

(assert (=> b!94795 (= res!47983 (= (getValueByKey!147 (toList!785 lt!47074) (_1!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94796 () Bool)

(assert (=> b!94796 (= e!61874 (contains!799 (toList!785 lt!47074) (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24807 res!47982) b!94795))

(assert (= (and b!94795 res!47983) b!94796))

(declare-fun m!102173 () Bool)

(assert (=> d!24807 m!102173))

(declare-fun m!102175 () Bool)

(assert (=> d!24807 m!102175))

(declare-fun m!102177 () Bool)

(assert (=> d!24807 m!102177))

(declare-fun m!102179 () Bool)

(assert (=> d!24807 m!102179))

(declare-fun m!102181 () Bool)

(assert (=> b!94795 m!102181))

(declare-fun m!102183 () Bool)

(assert (=> b!94796 m!102183))

(assert (=> b!94622 d!24807))

(declare-fun d!24809 () Bool)

(assert (=> d!24809 (= (apply!90 lt!46930 lt!46940) (get!1283 (getValueByKey!147 (toList!785 lt!46930) lt!46940)))))

(declare-fun bs!3884 () Bool)

(assert (= bs!3884 d!24809))

(declare-fun m!102185 () Bool)

(assert (=> bs!3884 m!102185))

(assert (=> bs!3884 m!102185))

(declare-fun m!102187 () Bool)

(assert (=> bs!3884 m!102187))

(assert (=> b!94622 d!24809))

(assert (=> b!94622 d!24711))

(declare-fun d!24811 () Bool)

(assert (=> d!24811 (= (apply!90 (+!136 lt!46935 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))) lt!46950) (apply!90 lt!46935 lt!46950))))

(declare-fun lt!47075 () Unit!2822)

(assert (=> d!24811 (= lt!47075 (choose!572 lt!46935 lt!46943 (zeroValue!2323 newMap!16) lt!46950))))

(declare-fun e!61875 () Bool)

(assert (=> d!24811 e!61875))

(declare-fun res!47984 () Bool)

(assert (=> d!24811 (=> (not res!47984) (not e!61875))))

(assert (=> d!24811 (= res!47984 (contains!797 lt!46935 lt!46950))))

(assert (=> d!24811 (= (addApplyDifferent!66 lt!46935 lt!46943 (zeroValue!2323 newMap!16) lt!46950) lt!47075)))

(declare-fun b!94797 () Bool)

(assert (=> b!94797 (= e!61875 (not (= lt!46950 lt!46943)))))

(assert (= (and d!24811 res!47984) b!94797))

(declare-fun m!102189 () Bool)

(assert (=> d!24811 m!102189))

(assert (=> d!24811 m!101745))

(assert (=> d!24811 m!101747))

(declare-fun m!102191 () Bool)

(assert (=> d!24811 m!102191))

(assert (=> d!24811 m!101753))

(assert (=> d!24811 m!101745))

(assert (=> b!94622 d!24811))

(declare-fun d!24813 () Bool)

(assert (=> d!24813 (contains!797 (+!136 lt!46937 (tuple2!2335 lt!46936 (zeroValue!2323 newMap!16))) lt!46938)))

(declare-fun lt!47076 () Unit!2822)

(assert (=> d!24813 (= lt!47076 (choose!573 lt!46937 lt!46936 (zeroValue!2323 newMap!16) lt!46938))))

(assert (=> d!24813 (contains!797 lt!46937 lt!46938)))

(assert (=> d!24813 (= (addStillContains!66 lt!46937 lt!46936 (zeroValue!2323 newMap!16) lt!46938) lt!47076)))

(declare-fun bs!3885 () Bool)

(assert (= bs!3885 d!24813))

(assert (=> bs!3885 m!101741))

(assert (=> bs!3885 m!101741))

(assert (=> bs!3885 m!101743))

(declare-fun m!102193 () Bool)

(assert (=> bs!3885 m!102193))

(declare-fun m!102195 () Bool)

(assert (=> bs!3885 m!102195))

(assert (=> b!94622 d!24813))

(declare-fun d!24815 () Bool)

(declare-fun e!61876 () Bool)

(assert (=> d!24815 e!61876))

(declare-fun res!47985 () Bool)

(assert (=> d!24815 (=> (not res!47985) (not e!61876))))

(declare-fun lt!47080 () ListLongMap!1539)

(assert (=> d!24815 (= res!47985 (contains!797 lt!47080 (_1!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47077 () List!1600)

(assert (=> d!24815 (= lt!47080 (ListLongMap!1540 lt!47077))))

(declare-fun lt!47078 () Unit!2822)

(declare-fun lt!47079 () Unit!2822)

(assert (=> d!24815 (= lt!47078 lt!47079)))

(assert (=> d!24815 (= (getValueByKey!147 lt!47077 (_1!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24815 (= lt!47079 (lemmaContainsTupThenGetReturnValue!65 lt!47077 (_1!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24815 (= lt!47077 (insertStrictlySorted!67 (toList!785 lt!46935) (_1!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24815 (= (+!136 lt!46935 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))) lt!47080)))

(declare-fun b!94798 () Bool)

(declare-fun res!47986 () Bool)

(assert (=> b!94798 (=> (not res!47986) (not e!61876))))

(assert (=> b!94798 (= res!47986 (= (getValueByKey!147 (toList!785 lt!47080) (_1!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94799 () Bool)

(assert (=> b!94799 (= e!61876 (contains!799 (toList!785 lt!47080) (tuple2!2335 lt!46943 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24815 res!47985) b!94798))

(assert (= (and b!94798 res!47986) b!94799))

(declare-fun m!102197 () Bool)

(assert (=> d!24815 m!102197))

(declare-fun m!102199 () Bool)

(assert (=> d!24815 m!102199))

(declare-fun m!102201 () Bool)

(assert (=> d!24815 m!102201))

(declare-fun m!102203 () Bool)

(assert (=> d!24815 m!102203))

(declare-fun m!102205 () Bool)

(assert (=> b!94798 m!102205))

(declare-fun m!102207 () Bool)

(assert (=> b!94799 m!102207))

(assert (=> b!94622 d!24815))

(declare-fun d!24817 () Bool)

(assert (=> d!24817 (= (get!1283 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2767 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24637 d!24817))

(declare-fun b!94802 () Bool)

(declare-fun e!61878 () Option!153)

(assert (=> b!94802 (= e!61878 (getValueByKey!147 (t!5506 (toList!785 lt!46547)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94800 () Bool)

(declare-fun e!61877 () Option!153)

(assert (=> b!94800 (= e!61877 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46547)))))))

(declare-fun b!94803 () Bool)

(assert (=> b!94803 (= e!61878 None!151)))

(declare-fun b!94801 () Bool)

(assert (=> b!94801 (= e!61877 e!61878)))

(declare-fun c!15850 () Bool)

(assert (=> b!94801 (= c!15850 (and ((_ is Cons!1596) (toList!785 lt!46547)) (not (= (_1!1177 (h!2188 (toList!785 lt!46547))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!24819 () Bool)

(declare-fun c!15849 () Bool)

(assert (=> d!24819 (= c!15849 (and ((_ is Cons!1596) (toList!785 lt!46547)) (= (_1!1177 (h!2188 (toList!785 lt!46547))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24819 (= (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000) e!61877)))

(assert (= (and d!24819 c!15849) b!94800))

(assert (= (and d!24819 (not c!15849)) b!94801))

(assert (= (and b!94801 c!15850) b!94802))

(assert (= (and b!94801 (not c!15850)) b!94803))

(declare-fun m!102209 () Bool)

(assert (=> b!94802 m!102209))

(assert (=> d!24637 d!24819))

(declare-fun d!24821 () Bool)

(assert (=> d!24821 (= (apply!90 lt!46888 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46888) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3886 () Bool)

(assert (= bs!3886 d!24821))

(declare-fun m!102211 () Bool)

(assert (=> bs!3886 m!102211))

(assert (=> bs!3886 m!102211))

(declare-fun m!102213 () Bool)

(assert (=> bs!3886 m!102213))

(assert (=> b!94570 d!24821))

(declare-fun d!24823 () Bool)

(assert (=> d!24823 (= (inRange!0 (ite c!15789 (index!3185 lt!46878) (index!3188 lt!46878)) (mask!6511 newMap!16)) (and (bvsge (ite c!15789 (index!3185 lt!46878) (index!3188 lt!46878)) #b00000000000000000000000000000000) (bvslt (ite c!15789 (index!3185 lt!46878) (index!3188 lt!46878)) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9483 d!24823))

(declare-fun d!24825 () Bool)

(declare-fun e!61879 () Bool)

(assert (=> d!24825 e!61879))

(declare-fun res!47987 () Bool)

(assert (=> d!24825 (=> (not res!47987) (not e!61879))))

(declare-fun lt!47084 () ListLongMap!1539)

(assert (=> d!24825 (= res!47987 (contains!797 lt!47084 (_1!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun lt!47081 () List!1600)

(assert (=> d!24825 (= lt!47084 (ListLongMap!1540 lt!47081))))

(declare-fun lt!47082 () Unit!2822)

(declare-fun lt!47083 () Unit!2822)

(assert (=> d!24825 (= lt!47082 lt!47083)))

(assert (=> d!24825 (= (getValueByKey!147 lt!47081 (_1!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!24825 (= lt!47083 (lemmaContainsTupThenGetReturnValue!65 lt!47081 (_1!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!24825 (= lt!47081 (insertStrictlySorted!67 (toList!785 (ite c!15817 call!9507 (ite c!15816 call!9506 call!9509))) (_1!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!24825 (= (+!136 (ite c!15817 call!9507 (ite c!15816 call!9506 call!9509)) (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) lt!47084)))

(declare-fun b!94804 () Bool)

(declare-fun res!47988 () Bool)

(assert (=> b!94804 (=> (not res!47988) (not e!61879))))

(assert (=> b!94804 (= res!47988 (= (getValueByKey!147 (toList!785 lt!47084) (_1!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))))

(declare-fun b!94805 () Bool)

(assert (=> b!94805 (= e!61879 (contains!799 (toList!785 lt!47084) (ite (or c!15817 c!15816) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (= (and d!24825 res!47987) b!94804))

(assert (= (and b!94804 res!47988) b!94805))

(declare-fun m!102215 () Bool)

(assert (=> d!24825 m!102215))

(declare-fun m!102217 () Bool)

(assert (=> d!24825 m!102217))

(declare-fun m!102219 () Bool)

(assert (=> d!24825 m!102219))

(declare-fun m!102221 () Bool)

(assert (=> d!24825 m!102221))

(declare-fun m!102223 () Bool)

(assert (=> b!94804 m!102223))

(declare-fun m!102225 () Bool)

(assert (=> b!94805 m!102225))

(assert (=> bm!9506 d!24825))

(declare-fun e!61881 () Option!153)

(declare-fun b!94808 () Bool)

(assert (=> b!94808 (= e!61881 (getValueByKey!147 (t!5506 (toList!785 lt!46701)) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94806 () Bool)

(declare-fun e!61880 () Option!153)

(assert (=> b!94806 (= e!61880 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46701)))))))

(declare-fun b!94809 () Bool)

(assert (=> b!94809 (= e!61881 None!151)))

(declare-fun b!94807 () Bool)

(assert (=> b!94807 (= e!61880 e!61881)))

(declare-fun c!15852 () Bool)

(assert (=> b!94807 (= c!15852 (and ((_ is Cons!1596) (toList!785 lt!46701)) (not (= (_1!1177 (h!2188 (toList!785 lt!46701))) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!15851 () Bool)

(declare-fun d!24827 () Bool)

(assert (=> d!24827 (= c!15851 (and ((_ is Cons!1596) (toList!785 lt!46701)) (= (_1!1177 (h!2188 (toList!785 lt!46701))) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!24827 (= (getValueByKey!147 (toList!785 lt!46701) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!61880)))

(assert (= (and d!24827 c!15851) b!94806))

(assert (= (and d!24827 (not c!15851)) b!94807))

(assert (= (and b!94807 c!15852) b!94808))

(assert (= (and b!94807 (not c!15852)) b!94809))

(declare-fun m!102227 () Bool)

(assert (=> b!94808 m!102227))

(assert (=> b!94351 d!24827))

(declare-fun d!24829 () Bool)

(declare-fun lt!47085 () Bool)

(assert (=> d!24829 (= lt!47085 (select (content!97 (toList!785 lt!46928)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!61883 () Bool)

(assert (=> d!24829 (= lt!47085 e!61883)))

(declare-fun res!47989 () Bool)

(assert (=> d!24829 (=> (not res!47989) (not e!61883))))

(assert (=> d!24829 (= res!47989 ((_ is Cons!1596) (toList!785 lt!46928)))))

(assert (=> d!24829 (= (contains!799 (toList!785 lt!46928) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47085)))

(declare-fun b!94810 () Bool)

(declare-fun e!61882 () Bool)

(assert (=> b!94810 (= e!61883 e!61882)))

(declare-fun res!47990 () Bool)

(assert (=> b!94810 (=> res!47990 e!61882)))

(assert (=> b!94810 (= res!47990 (= (h!2188 (toList!785 lt!46928)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94811 () Bool)

(assert (=> b!94811 (= e!61882 (contains!799 (t!5506 (toList!785 lt!46928)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24829 res!47989) b!94810))

(assert (= (and b!94810 (not res!47990)) b!94811))

(declare-fun m!102229 () Bool)

(assert (=> d!24829 m!102229))

(declare-fun m!102231 () Bool)

(assert (=> d!24829 m!102231))

(declare-fun m!102233 () Bool)

(assert (=> b!94811 m!102233))

(assert (=> b!94604 d!24829))

(assert (=> b!94547 d!24709))

(declare-fun d!24831 () Bool)

(assert (=> d!24831 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556))))

(declare-fun lt!47086 () Unit!2822)

(assert (=> d!24831 (= lt!47086 (choose!568 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556))))

(declare-fun e!61884 () Bool)

(assert (=> d!24831 e!61884))

(declare-fun res!47991 () Bool)

(assert (=> d!24831 (=> (not res!47991) (not e!61884))))

(assert (=> d!24831 (= res!47991 (isStrictlySorted!297 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24831 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556) lt!47086)))

(declare-fun b!94812 () Bool)

(assert (=> b!94812 (= e!61884 (containsKey!151 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556))))

(assert (= (and d!24831 res!47991) b!94812))

(assert (=> d!24831 m!101529))

(assert (=> d!24831 m!101529))

(assert (=> d!24831 m!101531))

(declare-fun m!102235 () Bool)

(assert (=> d!24831 m!102235))

(declare-fun m!102237 () Bool)

(assert (=> d!24831 m!102237))

(assert (=> b!94812 m!101525))

(assert (=> b!94493 d!24831))

(declare-fun d!24833 () Bool)

(assert (=> d!24833 (= (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556)) (not (isEmpty!355 (getValueByKey!147 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556))))))

(declare-fun bs!3887 () Bool)

(assert (= bs!3887 d!24833))

(assert (=> bs!3887 m!101529))

(declare-fun m!102239 () Bool)

(assert (=> bs!3887 m!102239))

(assert (=> b!94493 d!24833))

(declare-fun e!61886 () Option!153)

(declare-fun b!94815 () Bool)

(assert (=> b!94815 (= e!61886 (getValueByKey!147 (t!5506 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!46556))))

(declare-fun b!94813 () Bool)

(declare-fun e!61885 () Option!153)

(assert (=> b!94813 (= e!61885 (Some!152 (_2!1177 (h!2188 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))))

(declare-fun b!94816 () Bool)

(assert (=> b!94816 (= e!61886 None!151)))

(declare-fun b!94814 () Bool)

(assert (=> b!94814 (= e!61885 e!61886)))

(declare-fun c!15854 () Bool)

(assert (=> b!94814 (= c!15854 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) (not (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46556))))))

(declare-fun d!24835 () Bool)

(declare-fun c!15853 () Bool)

(assert (=> d!24835 (= c!15853 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46556)))))

(assert (=> d!24835 (= (getValueByKey!147 (toList!785 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46556) e!61885)))

(assert (= (and d!24835 c!15853) b!94813))

(assert (= (and d!24835 (not c!15853)) b!94814))

(assert (= (and b!94814 c!15854) b!94815))

(assert (= (and b!94814 (not c!15854)) b!94816))

(declare-fun m!102241 () Bool)

(assert (=> b!94815 m!102241))

(assert (=> b!94493 d!24835))

(declare-fun d!24837 () Bool)

(assert (=> d!24837 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!47087 () Unit!2822)

(assert (=> d!24837 (= lt!47087 (choose!568 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!61887 () Bool)

(assert (=> d!24837 e!61887))

(declare-fun res!47992 () Bool)

(assert (=> d!24837 (=> (not res!47992) (not e!61887))))

(assert (=> d!24837 (= res!47992 (isStrictlySorted!297 (toList!785 lt!46547)))))

(assert (=> d!24837 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47087)))

(declare-fun b!94817 () Bool)

(assert (=> b!94817 (= e!61887 (containsKey!151 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!24837 res!47992) b!94817))

(assert (=> d!24837 m!101101))

(assert (=> d!24837 m!101689))

(assert (=> d!24837 m!101689))

(assert (=> d!24837 m!101825))

(assert (=> d!24837 m!101101))

(declare-fun m!102243 () Bool)

(assert (=> d!24837 m!102243))

(declare-fun m!102245 () Bool)

(assert (=> d!24837 m!102245))

(assert (=> b!94817 m!101101))

(assert (=> b!94817 m!101821))

(assert (=> b!94653 d!24837))

(declare-fun d!24839 () Bool)

(assert (=> d!24839 (= (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!355 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3888 () Bool)

(assert (= bs!3888 d!24839))

(assert (=> bs!3888 m!101689))

(declare-fun m!102247 () Bool)

(assert (=> bs!3888 m!102247))

(assert (=> b!94653 d!24839))

(declare-fun e!61889 () Option!153)

(declare-fun b!94820 () Bool)

(assert (=> b!94820 (= e!61889 (getValueByKey!147 (t!5506 (toList!785 lt!46547)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94818 () Bool)

(declare-fun e!61888 () Option!153)

(assert (=> b!94818 (= e!61888 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46547)))))))

(declare-fun b!94821 () Bool)

(assert (=> b!94821 (= e!61889 None!151)))

(declare-fun b!94819 () Bool)

(assert (=> b!94819 (= e!61888 e!61889)))

(declare-fun c!15856 () Bool)

(assert (=> b!94819 (= c!15856 (and ((_ is Cons!1596) (toList!785 lt!46547)) (not (= (_1!1177 (h!2188 (toList!785 lt!46547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!24841 () Bool)

(declare-fun c!15855 () Bool)

(assert (=> d!24841 (= c!15855 (and ((_ is Cons!1596) (toList!785 lt!46547)) (= (_1!1177 (h!2188 (toList!785 lt!46547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24841 (= (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!61888)))

(assert (= (and d!24841 c!15855) b!94818))

(assert (= (and d!24841 (not c!15855)) b!94819))

(assert (= (and b!94819 c!15856) b!94820))

(assert (= (and b!94819 (not c!15856)) b!94821))

(assert (=> b!94820 m!101101))

(declare-fun m!102249 () Bool)

(assert (=> b!94820 m!102249))

(assert (=> b!94653 d!24841))

(declare-fun d!24843 () Bool)

(declare-fun e!61890 () Bool)

(assert (=> d!24843 e!61890))

(declare-fun res!47993 () Bool)

(assert (=> d!24843 (=> res!47993 e!61890)))

(declare-fun lt!47090 () Bool)

(assert (=> d!24843 (= res!47993 (not lt!47090))))

(declare-fun lt!47088 () Bool)

(assert (=> d!24843 (= lt!47090 lt!47088)))

(declare-fun lt!47089 () Unit!2822)

(declare-fun e!61891 () Unit!2822)

(assert (=> d!24843 (= lt!47089 e!61891)))

(declare-fun c!15857 () Bool)

(assert (=> d!24843 (= c!15857 lt!47088)))

(assert (=> d!24843 (= lt!47088 (containsKey!151 (toList!785 lt!46929) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24843 (= (contains!797 lt!46929 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47090)))

(declare-fun b!94822 () Bool)

(declare-fun lt!47091 () Unit!2822)

(assert (=> b!94822 (= e!61891 lt!47091)))

(assert (=> b!94822 (= lt!47091 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46929) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94822 (isDefined!101 (getValueByKey!147 (toList!785 lt!46929) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94823 () Bool)

(declare-fun Unit!2849 () Unit!2822)

(assert (=> b!94823 (= e!61891 Unit!2849)))

(declare-fun b!94824 () Bool)

(assert (=> b!94824 (= e!61890 (isDefined!101 (getValueByKey!147 (toList!785 lt!46929) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24843 c!15857) b!94822))

(assert (= (and d!24843 (not c!15857)) b!94823))

(assert (= (and d!24843 (not res!47993)) b!94824))

(declare-fun m!102251 () Bool)

(assert (=> d!24843 m!102251))

(declare-fun m!102253 () Bool)

(assert (=> b!94822 m!102253))

(declare-fun m!102255 () Bool)

(assert (=> b!94822 m!102255))

(assert (=> b!94822 m!102255))

(declare-fun m!102257 () Bool)

(assert (=> b!94822 m!102257))

(assert (=> b!94824 m!102255))

(assert (=> b!94824 m!102255))

(assert (=> b!94824 m!102257))

(assert (=> bm!9498 d!24843))

(assert (=> d!24611 d!24617))

(assert (=> d!24611 d!24601))

(declare-fun d!24845 () Bool)

(assert (=> d!24845 (contains!797 (+!136 lt!46555 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46556)))

(assert (=> d!24845 true))

(declare-fun _$35!333 () Unit!2822)

(assert (=> d!24845 (= (choose!573 lt!46555 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46556) _$35!333)))

(declare-fun bs!3889 () Bool)

(assert (= bs!3889 d!24845))

(assert (=> bs!3889 m!101149))

(assert (=> bs!3889 m!101149))

(assert (=> bs!3889 m!101151))

(assert (=> d!24611 d!24845))

(declare-fun d!24847 () Bool)

(declare-fun e!61892 () Bool)

(assert (=> d!24847 e!61892))

(declare-fun res!47994 () Bool)

(assert (=> d!24847 (=> res!47994 e!61892)))

(declare-fun lt!47094 () Bool)

(assert (=> d!24847 (= res!47994 (not lt!47094))))

(declare-fun lt!47092 () Bool)

(assert (=> d!24847 (= lt!47094 lt!47092)))

(declare-fun lt!47093 () Unit!2822)

(declare-fun e!61893 () Unit!2822)

(assert (=> d!24847 (= lt!47093 e!61893)))

(declare-fun c!15858 () Bool)

(assert (=> d!24847 (= c!15858 lt!47092)))

(assert (=> d!24847 (= lt!47092 (containsKey!151 (toList!785 lt!46555) lt!46556))))

(assert (=> d!24847 (= (contains!797 lt!46555 lt!46556) lt!47094)))

(declare-fun b!94826 () Bool)

(declare-fun lt!47095 () Unit!2822)

(assert (=> b!94826 (= e!61893 lt!47095)))

(assert (=> b!94826 (= lt!47095 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46555) lt!46556))))

(assert (=> b!94826 (isDefined!101 (getValueByKey!147 (toList!785 lt!46555) lt!46556))))

(declare-fun b!94827 () Bool)

(declare-fun Unit!2850 () Unit!2822)

(assert (=> b!94827 (= e!61893 Unit!2850)))

(declare-fun b!94828 () Bool)

(assert (=> b!94828 (= e!61892 (isDefined!101 (getValueByKey!147 (toList!785 lt!46555) lt!46556)))))

(assert (= (and d!24847 c!15858) b!94826))

(assert (= (and d!24847 (not c!15858)) b!94827))

(assert (= (and d!24847 (not res!47994)) b!94828))

(declare-fun m!102259 () Bool)

(assert (=> d!24847 m!102259))

(declare-fun m!102261 () Bool)

(assert (=> b!94826 m!102261))

(declare-fun m!102263 () Bool)

(assert (=> b!94826 m!102263))

(assert (=> b!94826 m!102263))

(declare-fun m!102265 () Bool)

(assert (=> b!94826 m!102265))

(assert (=> b!94828 m!102263))

(assert (=> b!94828 m!102263))

(assert (=> b!94828 m!102265))

(assert (=> d!24611 d!24847))

(declare-fun d!24849 () Bool)

(assert (=> d!24849 (= (apply!90 lt!46951 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1283 (getValueByKey!147 (toList!785 lt!46951) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3890 () Bool)

(assert (= bs!3890 d!24849))

(assert (=> bs!3890 m!101279))

(declare-fun m!102267 () Bool)

(assert (=> bs!3890 m!102267))

(assert (=> bs!3890 m!102267))

(declare-fun m!102269 () Bool)

(assert (=> bs!3890 m!102269))

(assert (=> b!94639 d!24849))

(assert (=> b!94639 d!24727))

(declare-fun d!24851 () Bool)

(declare-fun e!61894 () Bool)

(assert (=> d!24851 e!61894))

(declare-fun res!47995 () Bool)

(assert (=> d!24851 (=> (not res!47995) (not e!61894))))

(declare-fun lt!47099 () ListLongMap!1539)

(assert (=> d!24851 (= res!47995 (contains!797 lt!47099 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47096 () List!1600)

(assert (=> d!24851 (= lt!47099 (ListLongMap!1540 lt!47096))))

(declare-fun lt!47097 () Unit!2822)

(declare-fun lt!47098 () Unit!2822)

(assert (=> d!24851 (= lt!47097 lt!47098)))

(assert (=> d!24851 (= (getValueByKey!147 lt!47096 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24851 (= lt!47098 (lemmaContainsTupThenGetReturnValue!65 lt!47096 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24851 (= lt!47096 (insertStrictlySorted!67 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24851 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47099)))

(declare-fun b!94829 () Bool)

(declare-fun res!47996 () Bool)

(assert (=> b!94829 (=> (not res!47996) (not e!61894))))

(assert (=> b!94829 (= res!47996 (= (getValueByKey!147 (toList!785 lt!47099) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94830 () Bool)

(assert (=> b!94830 (= e!61894 (contains!799 (toList!785 lt!47099) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24851 res!47995) b!94829))

(assert (= (and b!94829 res!47996) b!94830))

(declare-fun m!102271 () Bool)

(assert (=> d!24851 m!102271))

(declare-fun m!102273 () Bool)

(assert (=> d!24851 m!102273))

(declare-fun m!102275 () Bool)

(assert (=> d!24851 m!102275))

(declare-fun m!102277 () Bool)

(assert (=> d!24851 m!102277))

(declare-fun m!102279 () Bool)

(assert (=> b!94829 m!102279))

(declare-fun m!102281 () Bool)

(assert (=> b!94830 m!102281))

(assert (=> d!24655 d!24851))

(declare-fun d!24853 () Bool)

(assert (=> d!24853 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!24853 true))

(declare-fun _$8!79 () Unit!2822)

(assert (=> d!24853 (= (choose!575 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) _$8!79)))

(declare-fun bs!3891 () Bool)

(assert (= bs!3891 d!24853))

(assert (=> bs!3891 m!101123))

(assert (=> bs!3891 m!101123))

(assert (=> bs!3891 m!101677))

(assert (=> bs!3891 m!101015))

(assert (=> bs!3891 m!101675))

(assert (=> d!24655 d!24853))

(assert (=> d!24655 d!24677))

(declare-fun bm!9520 () Bool)

(declare-fun call!9525 () Bool)

(declare-fun lt!47100 () ListLongMap!1539)

(assert (=> bm!9520 (= call!9525 (contains!797 lt!47100 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94831 () Bool)

(declare-fun e!61902 () ListLongMap!1539)

(declare-fun e!61906 () ListLongMap!1539)

(assert (=> b!94831 (= e!61902 e!61906)))

(declare-fun c!15862 () Bool)

(assert (=> b!94831 (= c!15862 (and (not (= (bvand lt!46643 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46643 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94832 () Bool)

(declare-fun e!61904 () ListLongMap!1539)

(declare-fun call!9527 () ListLongMap!1539)

(assert (=> b!94832 (= e!61904 call!9527)))

(declare-fun b!94833 () Bool)

(declare-fun res!47998 () Bool)

(declare-fun e!61896 () Bool)

(assert (=> b!94833 (=> (not res!47998) (not e!61896))))

(declare-fun e!61897 () Bool)

(assert (=> b!94833 (= res!47998 e!61897)))

(declare-fun res!48001 () Bool)

(assert (=> b!94833 (=> res!48001 e!61897)))

(declare-fun e!61898 () Bool)

(assert (=> b!94833 (= res!48001 (not e!61898))))

(declare-fun res!48004 () Bool)

(assert (=> b!94833 (=> (not res!48004) (not e!61898))))

(assert (=> b!94833 (= res!48004 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94834 () Bool)

(declare-fun call!9528 () ListLongMap!1539)

(assert (=> b!94834 (= e!61902 (+!136 call!9528 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94836 () Bool)

(declare-fun res!48003 () Bool)

(assert (=> b!94836 (=> (not res!48003) (not e!61896))))

(declare-fun e!61901 () Bool)

(assert (=> b!94836 (= res!48003 e!61901)))

(declare-fun c!15860 () Bool)

(assert (=> b!94836 (= c!15860 (not (= (bvand lt!46643 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94837 () Bool)

(assert (=> b!94837 (= e!61901 (not call!9525))))

(declare-fun b!94838 () Bool)

(declare-fun e!61895 () Bool)

(assert (=> b!94838 (= e!61895 (= (apply!90 lt!47100 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_values!2419 newMap!16))))))

(assert (=> b!94838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94839 () Bool)

(assert (=> b!94839 (= e!61906 call!9527)))

(declare-fun b!94840 () Bool)

(declare-fun e!61899 () Bool)

(assert (=> b!94840 (= e!61899 (= (apply!90 lt!47100 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94841 () Bool)

(declare-fun e!61903 () Bool)

(assert (=> b!94841 (= e!61903 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94842 () Bool)

(assert (=> b!94842 (= e!61898 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun call!9524 () ListLongMap!1539)

(declare-fun bm!9521 () Bool)

(assert (=> bm!9521 (= call!9524 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9522 () Bool)

(declare-fun call!9529 () Bool)

(assert (=> bm!9522 (= call!9529 (contains!797 lt!47100 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94843 () Bool)

(declare-fun e!61905 () Unit!2822)

(declare-fun Unit!2851 () Unit!2822)

(assert (=> b!94843 (= e!61905 Unit!2851)))

(declare-fun call!9526 () ListLongMap!1539)

(declare-fun bm!9523 () Bool)

(declare-fun c!15863 () Bool)

(declare-fun call!9523 () ListLongMap!1539)

(assert (=> bm!9523 (= call!9528 (+!136 (ite c!15863 call!9524 (ite c!15862 call!9523 call!9526)) (ite (or c!15863 c!15862) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94844 () Bool)

(declare-fun e!61900 () Bool)

(assert (=> b!94844 (= e!61896 e!61900)))

(declare-fun c!15864 () Bool)

(assert (=> b!94844 (= c!15864 (not (= (bvand lt!46643 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94845 () Bool)

(declare-fun c!15859 () Bool)

(assert (=> b!94845 (= c!15859 (and (not (= (bvand lt!46643 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46643 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94845 (= e!61906 e!61904)))

(declare-fun b!94846 () Bool)

(assert (=> b!94846 (= e!61900 (not call!9529))))

(declare-fun d!24855 () Bool)

(assert (=> d!24855 e!61896))

(declare-fun res!47999 () Bool)

(assert (=> d!24855 (=> (not res!47999) (not e!61896))))

(assert (=> d!24855 (= res!47999 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!47105 () ListLongMap!1539)

(assert (=> d!24855 (= lt!47100 lt!47105)))

(declare-fun lt!47119 () Unit!2822)

(assert (=> d!24855 (= lt!47119 e!61905)))

(declare-fun c!15861 () Bool)

(assert (=> d!24855 (= c!15861 e!61903)))

(declare-fun res!48005 () Bool)

(assert (=> d!24855 (=> (not res!48005) (not e!61903))))

(assert (=> d!24855 (= res!48005 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24855 (= lt!47105 e!61902)))

(assert (=> d!24855 (= c!15863 (and (not (= (bvand lt!46643 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46643 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24855 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24855 (= (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47100)))

(declare-fun b!94835 () Bool)

(declare-fun e!61907 () Bool)

(assert (=> b!94835 (= e!61907 (= (apply!90 lt!47100 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94847 () Bool)

(assert (=> b!94847 (= e!61904 call!9526)))

(declare-fun bm!9524 () Bool)

(assert (=> bm!9524 (= call!9526 call!9523)))

(declare-fun b!94848 () Bool)

(declare-fun lt!47116 () Unit!2822)

(assert (=> b!94848 (= e!61905 lt!47116)))

(declare-fun lt!47108 () ListLongMap!1539)

(assert (=> b!94848 (= lt!47108 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47107 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47107 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47109 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47109 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47110 () Unit!2822)

(assert (=> b!94848 (= lt!47110 (addStillContains!66 lt!47108 lt!47107 (zeroValue!2323 newMap!16) lt!47109))))

(assert (=> b!94848 (contains!797 (+!136 lt!47108 (tuple2!2335 lt!47107 (zeroValue!2323 newMap!16))) lt!47109)))

(declare-fun lt!47115 () Unit!2822)

(assert (=> b!94848 (= lt!47115 lt!47110)))

(declare-fun lt!47101 () ListLongMap!1539)

(assert (=> b!94848 (= lt!47101 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47113 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47113 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47111 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47111 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47112 () Unit!2822)

(assert (=> b!94848 (= lt!47112 (addApplyDifferent!66 lt!47101 lt!47113 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47111))))

(assert (=> b!94848 (= (apply!90 (+!136 lt!47101 (tuple2!2335 lt!47113 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47111) (apply!90 lt!47101 lt!47111))))

(declare-fun lt!47120 () Unit!2822)

(assert (=> b!94848 (= lt!47120 lt!47112)))

(declare-fun lt!47106 () ListLongMap!1539)

(assert (=> b!94848 (= lt!47106 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47114 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47114 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47121 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47121 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47104 () Unit!2822)

(assert (=> b!94848 (= lt!47104 (addApplyDifferent!66 lt!47106 lt!47114 (zeroValue!2323 newMap!16) lt!47121))))

(assert (=> b!94848 (= (apply!90 (+!136 lt!47106 (tuple2!2335 lt!47114 (zeroValue!2323 newMap!16))) lt!47121) (apply!90 lt!47106 lt!47121))))

(declare-fun lt!47117 () Unit!2822)

(assert (=> b!94848 (= lt!47117 lt!47104)))

(declare-fun lt!47103 () ListLongMap!1539)

(assert (=> b!94848 (= lt!47103 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46643 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47118 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47118 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47102 () (_ BitVec 64))

(assert (=> b!94848 (= lt!47102 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94848 (= lt!47116 (addApplyDifferent!66 lt!47103 lt!47118 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47102))))

(assert (=> b!94848 (= (apply!90 (+!136 lt!47103 (tuple2!2335 lt!47118 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47102) (apply!90 lt!47103 lt!47102))))

(declare-fun b!94849 () Bool)

(assert (=> b!94849 (= e!61897 e!61895)))

(declare-fun res!47997 () Bool)

(assert (=> b!94849 (=> (not res!47997) (not e!61895))))

(assert (=> b!94849 (= res!47997 (contains!797 lt!47100 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94849 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9525 () Bool)

(assert (=> bm!9525 (= call!9523 call!9524)))

(declare-fun b!94850 () Bool)

(assert (=> b!94850 (= e!61901 e!61907)))

(declare-fun res!48002 () Bool)

(assert (=> b!94850 (= res!48002 call!9525)))

(assert (=> b!94850 (=> (not res!48002) (not e!61907))))

(declare-fun b!94851 () Bool)

(assert (=> b!94851 (= e!61900 e!61899)))

(declare-fun res!48000 () Bool)

(assert (=> b!94851 (= res!48000 call!9529)))

(assert (=> b!94851 (=> (not res!48000) (not e!61899))))

(declare-fun bm!9526 () Bool)

(assert (=> bm!9526 (= call!9527 call!9528)))

(assert (= (and d!24855 c!15863) b!94834))

(assert (= (and d!24855 (not c!15863)) b!94831))

(assert (= (and b!94831 c!15862) b!94839))

(assert (= (and b!94831 (not c!15862)) b!94845))

(assert (= (and b!94845 c!15859) b!94832))

(assert (= (and b!94845 (not c!15859)) b!94847))

(assert (= (or b!94832 b!94847) bm!9524))

(assert (= (or b!94839 bm!9524) bm!9525))

(assert (= (or b!94839 b!94832) bm!9526))

(assert (= (or b!94834 bm!9525) bm!9521))

(assert (= (or b!94834 bm!9526) bm!9523))

(assert (= (and d!24855 res!48005) b!94841))

(assert (= (and d!24855 c!15861) b!94848))

(assert (= (and d!24855 (not c!15861)) b!94843))

(assert (= (and d!24855 res!47999) b!94833))

(assert (= (and b!94833 res!48004) b!94842))

(assert (= (and b!94833 (not res!48001)) b!94849))

(assert (= (and b!94849 res!47997) b!94838))

(assert (= (and b!94833 res!47998) b!94836))

(assert (= (and b!94836 c!15860) b!94850))

(assert (= (and b!94836 (not c!15860)) b!94837))

(assert (= (and b!94850 res!48002) b!94835))

(assert (= (or b!94850 b!94837) bm!9520))

(assert (= (and b!94836 res!48003) b!94844))

(assert (= (and b!94844 c!15864) b!94851))

(assert (= (and b!94844 (not c!15864)) b!94846))

(assert (= (and b!94851 res!48000) b!94840))

(assert (= (or b!94851 b!94846) bm!9522))

(declare-fun b_lambda!4187 () Bool)

(assert (=> (not b_lambda!4187) (not b!94838)))

(assert (=> b!94838 t!5513))

(declare-fun b_and!5789 () Bool)

(assert (= b_and!5785 (and (=> t!5513 result!3205) b_and!5789)))

(assert (=> b!94838 t!5515))

(declare-fun b_and!5791 () Bool)

(assert (= b_and!5787 (and (=> t!5515 result!3207) b_and!5791)))

(declare-fun m!102283 () Bool)

(assert (=> b!94835 m!102283))

(declare-fun m!102285 () Bool)

(assert (=> b!94834 m!102285))

(declare-fun m!102287 () Bool)

(assert (=> bm!9523 m!102287))

(assert (=> d!24855 m!101265))

(declare-fun m!102289 () Bool)

(assert (=> b!94840 m!102289))

(declare-fun m!102291 () Bool)

(assert (=> bm!9520 m!102291))

(declare-fun m!102293 () Bool)

(assert (=> bm!9522 m!102293))

(assert (=> b!94838 m!101273))

(assert (=> b!94838 m!101275))

(assert (=> b!94838 m!101277))

(assert (=> b!94838 m!101279))

(assert (=> b!94838 m!101275))

(assert (=> b!94838 m!101273))

(assert (=> b!94838 m!101279))

(declare-fun m!102295 () Bool)

(assert (=> b!94838 m!102295))

(assert (=> b!94849 m!101279))

(assert (=> b!94849 m!101279))

(declare-fun m!102297 () Bool)

(assert (=> b!94849 m!102297))

(assert (=> bm!9521 m!101015))

(declare-fun m!102299 () Bool)

(assert (=> bm!9521 m!102299))

(assert (=> b!94842 m!101279))

(assert (=> b!94842 m!101279))

(assert (=> b!94842 m!101287))

(assert (=> b!94841 m!101279))

(assert (=> b!94841 m!101279))

(assert (=> b!94841 m!101287))

(declare-fun m!102301 () Bool)

(assert (=> b!94848 m!102301))

(declare-fun m!102303 () Bool)

(assert (=> b!94848 m!102303))

(declare-fun m!102305 () Bool)

(assert (=> b!94848 m!102305))

(declare-fun m!102307 () Bool)

(assert (=> b!94848 m!102307))

(assert (=> b!94848 m!101279))

(declare-fun m!102309 () Bool)

(assert (=> b!94848 m!102309))

(declare-fun m!102311 () Bool)

(assert (=> b!94848 m!102311))

(declare-fun m!102313 () Bool)

(assert (=> b!94848 m!102313))

(assert (=> b!94848 m!102309))

(declare-fun m!102315 () Bool)

(assert (=> b!94848 m!102315))

(assert (=> b!94848 m!101015))

(assert (=> b!94848 m!102299))

(assert (=> b!94848 m!101015))

(declare-fun m!102317 () Bool)

(assert (=> b!94848 m!102317))

(assert (=> b!94848 m!101015))

(declare-fun m!102319 () Bool)

(assert (=> b!94848 m!102319))

(declare-fun m!102321 () Bool)

(assert (=> b!94848 m!102321))

(declare-fun m!102323 () Bool)

(assert (=> b!94848 m!102323))

(declare-fun m!102325 () Bool)

(assert (=> b!94848 m!102325))

(assert (=> b!94848 m!102301))

(assert (=> b!94848 m!102323))

(assert (=> b!94848 m!102305))

(declare-fun m!102327 () Bool)

(assert (=> b!94848 m!102327))

(declare-fun m!102329 () Bool)

(assert (=> b!94848 m!102329))

(assert (=> d!24655 d!24855))

(assert (=> d!24655 d!24705))

(declare-fun d!24857 () Bool)

(declare-fun e!61908 () Bool)

(assert (=> d!24857 e!61908))

(declare-fun res!48006 () Bool)

(assert (=> d!24857 (=> res!48006 e!61908)))

(declare-fun lt!47124 () Bool)

(assert (=> d!24857 (= res!48006 (not lt!47124))))

(declare-fun lt!47122 () Bool)

(assert (=> d!24857 (= lt!47124 lt!47122)))

(declare-fun lt!47123 () Unit!2822)

(declare-fun e!61909 () Unit!2822)

(assert (=> d!24857 (= lt!47123 e!61909)))

(declare-fun c!15865 () Bool)

(assert (=> d!24857 (= c!15865 lt!47122)))

(assert (=> d!24857 (= lt!47122 (containsKey!151 (toList!785 lt!46665) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24857 (= (contains!797 lt!46665 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47124)))

(declare-fun b!94852 () Bool)

(declare-fun lt!47125 () Unit!2822)

(assert (=> b!94852 (= e!61909 lt!47125)))

(assert (=> b!94852 (= lt!47125 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46665) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94852 (isDefined!101 (getValueByKey!147 (toList!785 lt!46665) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94853 () Bool)

(declare-fun Unit!2852 () Unit!2822)

(assert (=> b!94853 (= e!61909 Unit!2852)))

(declare-fun b!94854 () Bool)

(assert (=> b!94854 (= e!61908 (isDefined!101 (getValueByKey!147 (toList!785 lt!46665) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24857 c!15865) b!94852))

(assert (= (and d!24857 (not c!15865)) b!94853))

(assert (= (and d!24857 (not res!48006)) b!94854))

(declare-fun m!102331 () Bool)

(assert (=> d!24857 m!102331))

(declare-fun m!102333 () Bool)

(assert (=> b!94852 m!102333))

(declare-fun m!102335 () Bool)

(assert (=> b!94852 m!102335))

(assert (=> b!94852 m!102335))

(declare-fun m!102337 () Bool)

(assert (=> b!94852 m!102337))

(assert (=> b!94854 m!102335))

(assert (=> b!94854 m!102335))

(assert (=> b!94854 m!102337))

(assert (=> bm!9453 d!24857))

(declare-fun b!94873 () Bool)

(declare-fun lt!47131 () SeekEntryResult!261)

(assert (=> b!94873 (and (bvsge (index!3187 lt!47131) #b00000000000000000000000000000000) (bvslt (index!3187 lt!47131) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun e!61924 () Bool)

(assert (=> b!94873 (= e!61924 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3187 lt!47131)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94874 () Bool)

(declare-fun e!61922 () Bool)

(declare-fun e!61921 () Bool)

(assert (=> b!94874 (= e!61922 e!61921)))

(declare-fun res!48013 () Bool)

(assert (=> b!94874 (= res!48013 (and ((_ is Intermediate!261) lt!47131) (not (undefined!1073 lt!47131)) (bvslt (x!12665 lt!47131) #b01111111111111111111111111111110) (bvsge (x!12665 lt!47131) #b00000000000000000000000000000000) (bvsge (x!12665 lt!47131) #b00000000000000000000000000000000)))))

(assert (=> b!94874 (=> (not res!48013) (not e!61921))))

(declare-fun b!94875 () Bool)

(assert (=> b!94875 (= e!61922 (bvsge (x!12665 lt!47131) #b01111111111111111111111111111110))))

(declare-fun b!94876 () Bool)

(declare-fun e!61920 () SeekEntryResult!261)

(declare-fun e!61923 () SeekEntryResult!261)

(assert (=> b!94876 (= e!61920 e!61923)))

(declare-fun lt!47130 () (_ BitVec 64))

(declare-fun c!15873 () Bool)

(assert (=> b!94876 (= c!15873 (or (= lt!47130 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (= (bvadd lt!47130 lt!47130) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94878 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!94878 (= e!61923 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (mask!6511 newMap!16)) #b00000000000000000000000000000000 (mask!6511 newMap!16)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94879 () Bool)

(assert (=> b!94879 (= e!61920 (Intermediate!261 true (toIndex!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (mask!6511 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!94880 () Bool)

(assert (=> b!94880 (= e!61923 (Intermediate!261 false (toIndex!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (mask!6511 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!94881 () Bool)

(assert (=> b!94881 (and (bvsge (index!3187 lt!47131) #b00000000000000000000000000000000) (bvslt (index!3187 lt!47131) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun res!48014 () Bool)

(assert (=> b!94881 (= res!48014 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3187 lt!47131)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94881 (=> res!48014 e!61924)))

(assert (=> b!94881 (= e!61921 e!61924)))

(declare-fun d!24859 () Bool)

(assert (=> d!24859 e!61922))

(declare-fun c!15872 () Bool)

(assert (=> d!24859 (= c!15872 (and ((_ is Intermediate!261) lt!47131) (undefined!1073 lt!47131)))))

(assert (=> d!24859 (= lt!47131 e!61920)))

(declare-fun c!15874 () Bool)

(assert (=> d!24859 (= c!15874 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!24859 (= lt!47130 (select (arr!1996 (_keys!4118 newMap!16)) (toIndex!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (mask!6511 newMap!16))))))

(assert (=> d!24859 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24859 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (mask!6511 newMap!16)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!47131)))

(declare-fun b!94877 () Bool)

(assert (=> b!94877 (and (bvsge (index!3187 lt!47131) #b00000000000000000000000000000000) (bvslt (index!3187 lt!47131) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun res!48015 () Bool)

(assert (=> b!94877 (= res!48015 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3187 lt!47131)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94877 (=> res!48015 e!61924)))

(assert (= (and d!24859 c!15874) b!94879))

(assert (= (and d!24859 (not c!15874)) b!94876))

(assert (= (and b!94876 c!15873) b!94880))

(assert (= (and b!94876 (not c!15873)) b!94878))

(assert (= (and d!24859 c!15872) b!94875))

(assert (= (and d!24859 (not c!15872)) b!94874))

(assert (= (and b!94874 res!48013) b!94881))

(assert (= (and b!94881 (not res!48014)) b!94877))

(assert (= (and b!94877 (not res!48015)) b!94873))

(declare-fun m!102339 () Bool)

(assert (=> b!94881 m!102339))

(assert (=> b!94878 m!101449))

(declare-fun m!102341 () Bool)

(assert (=> b!94878 m!102341))

(assert (=> b!94878 m!102341))

(assert (=> b!94878 m!101017))

(declare-fun m!102343 () Bool)

(assert (=> b!94878 m!102343))

(assert (=> b!94873 m!102339))

(assert (=> d!24859 m!101449))

(declare-fun m!102345 () Bool)

(assert (=> d!24859 m!102345))

(assert (=> d!24859 m!101265))

(assert (=> b!94877 m!102339))

(assert (=> d!24591 d!24859))

(declare-fun d!24861 () Bool)

(declare-fun lt!47137 () (_ BitVec 32))

(declare-fun lt!47136 () (_ BitVec 32))

(assert (=> d!24861 (= lt!47137 (bvmul (bvxor lt!47136 (bvlshr lt!47136 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!24861 (= lt!47136 ((_ extract 31 0) (bvand (bvxor (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvlshr (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!24861 (and (bvsge (mask!6511 newMap!16) #b00000000000000000000000000000000) (let ((res!48016 (let ((h!2190 ((_ extract 31 0) (bvand (bvxor (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvlshr (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12768 (bvmul (bvxor h!2190 (bvlshr h!2190 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12768 (bvlshr x!12768 #b00000000000000000000000000001101)) (mask!6511 newMap!16)))))) (and (bvslt res!48016 (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001)) (bvsge res!48016 #b00000000000000000000000000000000))))))

(assert (=> d!24861 (= (toIndex!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (mask!6511 newMap!16)) (bvand (bvxor lt!47137 (bvlshr lt!47137 #b00000000000000000000000000001101)) (mask!6511 newMap!16)))))

(assert (=> d!24591 d!24861))

(assert (=> d!24591 d!24705))

(declare-fun d!24863 () Bool)

(declare-fun res!48017 () Bool)

(declare-fun e!61925 () Bool)

(assert (=> d!24863 (=> res!48017 e!61925)))

(assert (=> d!24863 (= res!48017 (= (select (arr!1996 lt!46816) #b00000000000000000000000000000000) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24863 (= (arrayContainsKey!0 lt!46816 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000) e!61925)))

(declare-fun b!94882 () Bool)

(declare-fun e!61926 () Bool)

(assert (=> b!94882 (= e!61925 e!61926)))

(declare-fun res!48018 () Bool)

(assert (=> b!94882 (=> (not res!48018) (not e!61926))))

(assert (=> b!94882 (= res!48018 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 lt!46816)))))

(declare-fun b!94883 () Bool)

(assert (=> b!94883 (= e!61926 (arrayContainsKey!0 lt!46816 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24863 (not res!48017)) b!94882))

(assert (= (and b!94882 res!48018) b!94883))

(declare-fun m!102347 () Bool)

(assert (=> d!24863 m!102347))

(assert (=> b!94883 m!101017))

(declare-fun m!102349 () Bool)

(assert (=> b!94883 m!102349))

(assert (=> d!24587 d!24863))

(declare-fun d!24865 () Bool)

(declare-fun e!61929 () Bool)

(assert (=> d!24865 e!61929))

(declare-fun res!48021 () Bool)

(assert (=> d!24865 (=> (not res!48021) (not e!61929))))

(assert (=> d!24865 (= res!48021 (and (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2244 (_keys!4118 newMap!16)))))))

(declare-fun lt!47140 () Unit!2822)

(declare-fun choose!41 (array!4200 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1601) Unit!2822)

(assert (=> d!24865 (= lt!47140 (choose!41 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) lt!46821 lt!46806))))

(assert (=> d!24865 (bvslt (size!2244 (_keys!4118 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!24865 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) lt!46821 lt!46806) lt!47140)))

(declare-fun b!94886 () Bool)

(assert (=> b!94886 (= e!61929 (arrayNoDuplicates!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) lt!46821 lt!46806))))

(assert (= (and d!24865 res!48021) b!94886))

(assert (=> d!24865 m!101017))

(declare-fun m!102351 () Bool)

(assert (=> d!24865 m!102351))

(assert (=> b!94886 m!101403))

(assert (=> b!94886 m!101423))

(assert (=> d!24587 d!24865))

(declare-fun d!24867 () Bool)

(declare-fun e!61930 () Bool)

(assert (=> d!24867 e!61930))

(declare-fun res!48022 () Bool)

(assert (=> d!24867 (=> res!48022 e!61930)))

(declare-fun lt!47143 () Bool)

(assert (=> d!24867 (= res!48022 (not lt!47143))))

(declare-fun lt!47141 () Bool)

(assert (=> d!24867 (= lt!47143 lt!47141)))

(declare-fun lt!47142 () Unit!2822)

(declare-fun e!61931 () Unit!2822)

(assert (=> d!24867 (= lt!47142 e!61931)))

(declare-fun c!15875 () Bool)

(assert (=> d!24867 (= c!15875 lt!47141)))

(assert (=> d!24867 (= lt!47141 (containsKey!151 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24867 (= (contains!797 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!47143)))

(declare-fun b!94887 () Bool)

(declare-fun lt!47144 () Unit!2822)

(assert (=> b!94887 (= e!61931 lt!47144)))

(assert (=> b!94887 (= lt!47144 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94887 (isDefined!101 (getValueByKey!147 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94888 () Bool)

(declare-fun Unit!2853 () Unit!2822)

(assert (=> b!94888 (= e!61931 Unit!2853)))

(declare-fun b!94889 () Bool)

(assert (=> b!94889 (= e!61930 (isDefined!101 (getValueByKey!147 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24867 c!15875) b!94887))

(assert (= (and d!24867 (not c!15875)) b!94888))

(assert (= (and d!24867 (not res!48022)) b!94889))

(assert (=> d!24867 m!101017))

(declare-fun m!102353 () Bool)

(assert (=> d!24867 m!102353))

(assert (=> b!94887 m!101017))

(declare-fun m!102355 () Bool)

(assert (=> b!94887 m!102355))

(assert (=> b!94887 m!101017))

(declare-fun m!102357 () Bool)

(assert (=> b!94887 m!102357))

(assert (=> b!94887 m!102357))

(declare-fun m!102359 () Bool)

(assert (=> b!94887 m!102359))

(assert (=> b!94889 m!101017))

(assert (=> b!94889 m!102357))

(assert (=> b!94889 m!102357))

(assert (=> b!94889 m!102359))

(assert (=> d!24587 d!24867))

(declare-fun d!24869 () Bool)

(declare-fun e!61932 () Bool)

(assert (=> d!24869 e!61932))

(declare-fun res!48023 () Bool)

(assert (=> d!24869 (=> (not res!48023) (not e!61932))))

(assert (=> d!24869 (= res!48023 (and (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2244 lt!46813))))))

(declare-fun lt!47145 () Unit!2822)

(assert (=> d!24869 (= lt!47145 (choose!569 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24869 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24869 (= (lemmaValidKeyInArrayIsInListMap!97 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (defaultEntry!2436 newMap!16)) lt!47145)))

(declare-fun b!94890 () Bool)

(assert (=> b!94890 (= e!61932 (contains!797 (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 lt!46813) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))))))

(assert (= (and d!24869 res!48023) b!94890))

(declare-fun m!102361 () Bool)

(assert (=> d!24869 m!102361))

(assert (=> d!24869 m!101265))

(assert (=> b!94890 m!101411))

(declare-fun m!102363 () Bool)

(assert (=> b!94890 m!102363))

(assert (=> b!94890 m!101411))

(assert (=> b!94890 m!102363))

(declare-fun m!102365 () Bool)

(assert (=> b!94890 m!102365))

(assert (=> d!24587 d!24869))

(declare-fun b!94891 () Bool)

(declare-fun e!61934 () (_ BitVec 32))

(assert (=> b!94891 (= e!61934 #b00000000000000000000000000000000)))

(declare-fun call!9530 () (_ BitVec 32))

(declare-fun bm!9527 () Bool)

(assert (=> bm!9527 (= call!9530 (arrayCountValidKeys!0 lt!46799 (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001) (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001)))))

(declare-fun b!94892 () Bool)

(declare-fun e!61933 () (_ BitVec 32))

(assert (=> b!94892 (= e!61934 e!61933)))

(declare-fun c!15877 () Bool)

(assert (=> b!94892 (= c!15877 (validKeyInArray!0 (select (arr!1996 lt!46799) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))))))

(declare-fun d!24871 () Bool)

(declare-fun lt!47146 () (_ BitVec 32))

(assert (=> d!24871 (and (bvsge lt!47146 #b00000000000000000000000000000000) (bvsle lt!47146 (bvsub (size!2244 lt!46799) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))))))

(assert (=> d!24871 (= lt!47146 e!61934)))

(declare-fun c!15876 () Bool)

(assert (=> d!24871 (= c!15876 (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001)))))

(assert (=> d!24871 (and (bvsle (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001)) (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001) (size!2244 lt!46799)))))

(assert (=> d!24871 (= (arrayCountValidKeys!0 lt!46799 (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001)) lt!47146)))

(declare-fun b!94893 () Bool)

(assert (=> b!94893 (= e!61933 (bvadd #b00000000000000000000000000000001 call!9530))))

(declare-fun b!94894 () Bool)

(assert (=> b!94894 (= e!61933 call!9530)))

(assert (= (and d!24871 c!15876) b!94891))

(assert (= (and d!24871 (not c!15876)) b!94892))

(assert (= (and b!94892 c!15877) b!94893))

(assert (= (and b!94892 (not c!15877)) b!94894))

(assert (= (or b!94893 b!94894) bm!9527))

(declare-fun m!102367 () Bool)

(assert (=> bm!9527 m!102367))

(declare-fun m!102369 () Bool)

(assert (=> b!94892 m!102369))

(assert (=> b!94892 m!102369))

(declare-fun m!102371 () Bool)

(assert (=> b!94892 m!102371))

(assert (=> d!24587 d!24871))

(assert (=> d!24587 d!24627))

(declare-fun d!24873 () Bool)

(declare-fun e!61935 () Bool)

(assert (=> d!24873 e!61935))

(declare-fun res!48024 () Bool)

(assert (=> d!24873 (=> res!48024 e!61935)))

(declare-fun lt!47149 () Bool)

(assert (=> d!24873 (= res!48024 (not lt!47149))))

(declare-fun lt!47147 () Bool)

(assert (=> d!24873 (= lt!47149 lt!47147)))

(declare-fun lt!47148 () Unit!2822)

(declare-fun e!61936 () Unit!2822)

(assert (=> d!24873 (= lt!47148 e!61936)))

(declare-fun c!15878 () Bool)

(assert (=> d!24873 (= c!15878 lt!47147)))

(assert (=> d!24873 (= lt!47147 (containsKey!151 (toList!785 (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))))))

(assert (=> d!24873 (= (contains!797 (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))) lt!47149)))

(declare-fun b!94895 () Bool)

(declare-fun lt!47150 () Unit!2822)

(assert (=> b!94895 (= e!61936 lt!47150)))

(assert (=> b!94895 (= lt!47150 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))))))

(assert (=> b!94895 (isDefined!101 (getValueByKey!147 (toList!785 (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))))))

(declare-fun b!94896 () Bool)

(declare-fun Unit!2854 () Unit!2822)

(assert (=> b!94896 (= e!61936 Unit!2854)))

(declare-fun b!94897 () Bool)

(assert (=> b!94897 (= e!61935 (isDefined!101 (getValueByKey!147 (toList!785 (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))))

(assert (= (and d!24873 c!15878) b!94895))

(assert (= (and d!24873 (not c!15878)) b!94896))

(assert (= (and d!24873 (not res!48024)) b!94897))

(assert (=> d!24873 m!101401))

(declare-fun m!102373 () Bool)

(assert (=> d!24873 m!102373))

(assert (=> b!94895 m!101401))

(declare-fun m!102375 () Bool)

(assert (=> b!94895 m!102375))

(assert (=> b!94895 m!101401))

(declare-fun m!102377 () Bool)

(assert (=> b!94895 m!102377))

(assert (=> b!94895 m!102377))

(declare-fun m!102379 () Bool)

(assert (=> b!94895 m!102379))

(assert (=> b!94897 m!101401))

(assert (=> b!94897 m!102377))

(assert (=> b!94897 m!102377))

(assert (=> b!94897 m!102379))

(assert (=> d!24587 d!24873))

(declare-fun bm!9528 () Bool)

(declare-fun call!9533 () Bool)

(declare-fun lt!47151 () ListLongMap!1539)

(assert (=> bm!9528 (= call!9533 (contains!797 lt!47151 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94898 () Bool)

(declare-fun e!61944 () ListLongMap!1539)

(declare-fun e!61948 () ListLongMap!1539)

(assert (=> b!94898 (= e!61944 e!61948)))

(declare-fun c!15882 () Bool)

(assert (=> b!94898 (= c!15882 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94899 () Bool)

(declare-fun e!61946 () ListLongMap!1539)

(declare-fun call!9535 () ListLongMap!1539)

(assert (=> b!94899 (= e!61946 call!9535)))

(declare-fun b!94900 () Bool)

(declare-fun res!48026 () Bool)

(declare-fun e!61938 () Bool)

(assert (=> b!94900 (=> (not res!48026) (not e!61938))))

(declare-fun e!61939 () Bool)

(assert (=> b!94900 (= res!48026 e!61939)))

(declare-fun res!48029 () Bool)

(assert (=> b!94900 (=> res!48029 e!61939)))

(declare-fun e!61940 () Bool)

(assert (=> b!94900 (= res!48029 (not e!61940))))

(declare-fun res!48032 () Bool)

(assert (=> b!94900 (=> (not res!48032) (not e!61940))))

(assert (=> b!94900 (= res!48032 (bvslt #b00000000000000000000000000000000 (size!2244 lt!46813)))))

(declare-fun b!94901 () Bool)

(declare-fun call!9536 () ListLongMap!1539)

(assert (=> b!94901 (= e!61944 (+!136 call!9536 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!94903 () Bool)

(declare-fun res!48031 () Bool)

(assert (=> b!94903 (=> (not res!48031) (not e!61938))))

(declare-fun e!61943 () Bool)

(assert (=> b!94903 (= res!48031 e!61943)))

(declare-fun c!15880 () Bool)

(assert (=> b!94903 (= c!15880 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94904 () Bool)

(assert (=> b!94904 (= e!61943 (not call!9533))))

(declare-fun e!61937 () Bool)

(declare-fun b!94905 () Bool)

(assert (=> b!94905 (= e!61937 (= (apply!90 lt!47151 (select (arr!1996 lt!46813) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 lt!46811) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94905 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 lt!46811)))))

(assert (=> b!94905 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 lt!46813)))))

(declare-fun b!94906 () Bool)

(assert (=> b!94906 (= e!61948 call!9535)))

(declare-fun b!94907 () Bool)

(declare-fun e!61941 () Bool)

(assert (=> b!94907 (= e!61941 (= (apply!90 lt!47151 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94908 () Bool)

(declare-fun e!61945 () Bool)

(assert (=> b!94908 (= e!61945 (validKeyInArray!0 (select (arr!1996 lt!46813) #b00000000000000000000000000000000)))))

(declare-fun b!94909 () Bool)

(assert (=> b!94909 (= e!61940 (validKeyInArray!0 (select (arr!1996 lt!46813) #b00000000000000000000000000000000)))))

(declare-fun bm!9529 () Bool)

(declare-fun call!9532 () ListLongMap!1539)

(assert (=> bm!9529 (= call!9532 (getCurrentListMapNoExtraKeys!100 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9530 () Bool)

(declare-fun call!9537 () Bool)

(assert (=> bm!9530 (= call!9537 (contains!797 lt!47151 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94910 () Bool)

(declare-fun e!61947 () Unit!2822)

(declare-fun Unit!2855 () Unit!2822)

(assert (=> b!94910 (= e!61947 Unit!2855)))

(declare-fun c!15883 () Bool)

(declare-fun bm!9531 () Bool)

(declare-fun call!9534 () ListLongMap!1539)

(declare-fun call!9531 () ListLongMap!1539)

(assert (=> bm!9531 (= call!9536 (+!136 (ite c!15883 call!9532 (ite c!15882 call!9531 call!9534)) (ite (or c!15883 c!15882) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!94911 () Bool)

(declare-fun e!61942 () Bool)

(assert (=> b!94911 (= e!61938 e!61942)))

(declare-fun c!15884 () Bool)

(assert (=> b!94911 (= c!15884 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94912 () Bool)

(declare-fun c!15879 () Bool)

(assert (=> b!94912 (= c!15879 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94912 (= e!61948 e!61946)))

(declare-fun b!94913 () Bool)

(assert (=> b!94913 (= e!61942 (not call!9537))))

(declare-fun d!24875 () Bool)

(assert (=> d!24875 e!61938))

(declare-fun res!48027 () Bool)

(assert (=> d!24875 (=> (not res!48027) (not e!61938))))

(assert (=> d!24875 (= res!48027 (or (bvsge #b00000000000000000000000000000000 (size!2244 lt!46813)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 lt!46813)))))))

(declare-fun lt!47156 () ListLongMap!1539)

(assert (=> d!24875 (= lt!47151 lt!47156)))

(declare-fun lt!47170 () Unit!2822)

(assert (=> d!24875 (= lt!47170 e!61947)))

(declare-fun c!15881 () Bool)

(assert (=> d!24875 (= c!15881 e!61945)))

(declare-fun res!48033 () Bool)

(assert (=> d!24875 (=> (not res!48033) (not e!61945))))

(assert (=> d!24875 (= res!48033 (bvslt #b00000000000000000000000000000000 (size!2244 lt!46813)))))

(assert (=> d!24875 (= lt!47156 e!61944)))

(assert (=> d!24875 (= c!15883 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24875 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24875 (= (getCurrentListMap!466 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47151)))

(declare-fun b!94902 () Bool)

(declare-fun e!61949 () Bool)

(assert (=> b!94902 (= e!61949 (= (apply!90 lt!47151 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94914 () Bool)

(assert (=> b!94914 (= e!61946 call!9534)))

(declare-fun bm!9532 () Bool)

(assert (=> bm!9532 (= call!9534 call!9531)))

(declare-fun b!94915 () Bool)

(declare-fun lt!47167 () Unit!2822)

(assert (=> b!94915 (= e!61947 lt!47167)))

(declare-fun lt!47159 () ListLongMap!1539)

(assert (=> b!94915 (= lt!47159 (getCurrentListMapNoExtraKeys!100 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47158 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47158 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47160 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47160 (select (arr!1996 lt!46813) #b00000000000000000000000000000000))))

(declare-fun lt!47161 () Unit!2822)

(assert (=> b!94915 (= lt!47161 (addStillContains!66 lt!47159 lt!47158 (zeroValue!2323 newMap!16) lt!47160))))

(assert (=> b!94915 (contains!797 (+!136 lt!47159 (tuple2!2335 lt!47158 (zeroValue!2323 newMap!16))) lt!47160)))

(declare-fun lt!47166 () Unit!2822)

(assert (=> b!94915 (= lt!47166 lt!47161)))

(declare-fun lt!47152 () ListLongMap!1539)

(assert (=> b!94915 (= lt!47152 (getCurrentListMapNoExtraKeys!100 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47164 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47164 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47162 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47162 (select (arr!1996 lt!46813) #b00000000000000000000000000000000))))

(declare-fun lt!47163 () Unit!2822)

(assert (=> b!94915 (= lt!47163 (addApplyDifferent!66 lt!47152 lt!47164 (minValue!2323 newMap!16) lt!47162))))

(assert (=> b!94915 (= (apply!90 (+!136 lt!47152 (tuple2!2335 lt!47164 (minValue!2323 newMap!16))) lt!47162) (apply!90 lt!47152 lt!47162))))

(declare-fun lt!47171 () Unit!2822)

(assert (=> b!94915 (= lt!47171 lt!47163)))

(declare-fun lt!47157 () ListLongMap!1539)

(assert (=> b!94915 (= lt!47157 (getCurrentListMapNoExtraKeys!100 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47165 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47165 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47172 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47172 (select (arr!1996 lt!46813) #b00000000000000000000000000000000))))

(declare-fun lt!47155 () Unit!2822)

(assert (=> b!94915 (= lt!47155 (addApplyDifferent!66 lt!47157 lt!47165 (zeroValue!2323 newMap!16) lt!47172))))

(assert (=> b!94915 (= (apply!90 (+!136 lt!47157 (tuple2!2335 lt!47165 (zeroValue!2323 newMap!16))) lt!47172) (apply!90 lt!47157 lt!47172))))

(declare-fun lt!47168 () Unit!2822)

(assert (=> b!94915 (= lt!47168 lt!47155)))

(declare-fun lt!47154 () ListLongMap!1539)

(assert (=> b!94915 (= lt!47154 (getCurrentListMapNoExtraKeys!100 lt!46813 lt!46811 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47169 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47169 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47153 () (_ BitVec 64))

(assert (=> b!94915 (= lt!47153 (select (arr!1996 lt!46813) #b00000000000000000000000000000000))))

(assert (=> b!94915 (= lt!47167 (addApplyDifferent!66 lt!47154 lt!47169 (minValue!2323 newMap!16) lt!47153))))

(assert (=> b!94915 (= (apply!90 (+!136 lt!47154 (tuple2!2335 lt!47169 (minValue!2323 newMap!16))) lt!47153) (apply!90 lt!47154 lt!47153))))

(declare-fun b!94916 () Bool)

(assert (=> b!94916 (= e!61939 e!61937)))

(declare-fun res!48025 () Bool)

(assert (=> b!94916 (=> (not res!48025) (not e!61937))))

(assert (=> b!94916 (= res!48025 (contains!797 lt!47151 (select (arr!1996 lt!46813) #b00000000000000000000000000000000)))))

(assert (=> b!94916 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 lt!46813)))))

(declare-fun bm!9533 () Bool)

(assert (=> bm!9533 (= call!9531 call!9532)))

(declare-fun b!94917 () Bool)

(assert (=> b!94917 (= e!61943 e!61949)))

(declare-fun res!48030 () Bool)

(assert (=> b!94917 (= res!48030 call!9533)))

(assert (=> b!94917 (=> (not res!48030) (not e!61949))))

(declare-fun b!94918 () Bool)

(assert (=> b!94918 (= e!61942 e!61941)))

(declare-fun res!48028 () Bool)

(assert (=> b!94918 (= res!48028 call!9537)))

(assert (=> b!94918 (=> (not res!48028) (not e!61941))))

(declare-fun bm!9534 () Bool)

(assert (=> bm!9534 (= call!9535 call!9536)))

(assert (= (and d!24875 c!15883) b!94901))

(assert (= (and d!24875 (not c!15883)) b!94898))

(assert (= (and b!94898 c!15882) b!94906))

(assert (= (and b!94898 (not c!15882)) b!94912))

(assert (= (and b!94912 c!15879) b!94899))

(assert (= (and b!94912 (not c!15879)) b!94914))

(assert (= (or b!94899 b!94914) bm!9532))

(assert (= (or b!94906 bm!9532) bm!9533))

(assert (= (or b!94906 b!94899) bm!9534))

(assert (= (or b!94901 bm!9533) bm!9529))

(assert (= (or b!94901 bm!9534) bm!9531))

(assert (= (and d!24875 res!48033) b!94908))

(assert (= (and d!24875 c!15881) b!94915))

(assert (= (and d!24875 (not c!15881)) b!94910))

(assert (= (and d!24875 res!48027) b!94900))

(assert (= (and b!94900 res!48032) b!94909))

(assert (= (and b!94900 (not res!48029)) b!94916))

(assert (= (and b!94916 res!48025) b!94905))

(assert (= (and b!94900 res!48026) b!94903))

(assert (= (and b!94903 c!15880) b!94917))

(assert (= (and b!94903 (not c!15880)) b!94904))

(assert (= (and b!94917 res!48030) b!94902))

(assert (= (or b!94917 b!94904) bm!9528))

(assert (= (and b!94903 res!48031) b!94911))

(assert (= (and b!94911 c!15884) b!94918))

(assert (= (and b!94911 (not c!15884)) b!94913))

(assert (= (and b!94918 res!48028) b!94907))

(assert (= (or b!94918 b!94913) bm!9530))

(declare-fun b_lambda!4189 () Bool)

(assert (=> (not b_lambda!4189) (not b!94905)))

(assert (=> b!94905 t!5513))

(declare-fun b_and!5793 () Bool)

(assert (= b_and!5789 (and (=> t!5513 result!3205) b_and!5793)))

(assert (=> b!94905 t!5515))

(declare-fun b_and!5795 () Bool)

(assert (= b_and!5791 (and (=> t!5515 result!3207) b_and!5795)))

(declare-fun m!102381 () Bool)

(assert (=> b!94902 m!102381))

(declare-fun m!102383 () Bool)

(assert (=> b!94901 m!102383))

(declare-fun m!102385 () Bool)

(assert (=> bm!9531 m!102385))

(assert (=> d!24875 m!101265))

(declare-fun m!102387 () Bool)

(assert (=> b!94907 m!102387))

(declare-fun m!102389 () Bool)

(assert (=> bm!9528 m!102389))

(declare-fun m!102391 () Bool)

(assert (=> bm!9530 m!102391))

(declare-fun m!102393 () Bool)

(assert (=> b!94905 m!102393))

(assert (=> b!94905 m!101275))

(declare-fun m!102395 () Bool)

(assert (=> b!94905 m!102395))

(declare-fun m!102397 () Bool)

(assert (=> b!94905 m!102397))

(assert (=> b!94905 m!101275))

(assert (=> b!94905 m!102393))

(assert (=> b!94905 m!102397))

(declare-fun m!102399 () Bool)

(assert (=> b!94905 m!102399))

(assert (=> b!94916 m!102397))

(assert (=> b!94916 m!102397))

(declare-fun m!102401 () Bool)

(assert (=> b!94916 m!102401))

(declare-fun m!102403 () Bool)

(assert (=> bm!9529 m!102403))

(assert (=> b!94909 m!102397))

(assert (=> b!94909 m!102397))

(declare-fun m!102405 () Bool)

(assert (=> b!94909 m!102405))

(assert (=> b!94908 m!102397))

(assert (=> b!94908 m!102397))

(assert (=> b!94908 m!102405))

(declare-fun m!102407 () Bool)

(assert (=> b!94915 m!102407))

(declare-fun m!102409 () Bool)

(assert (=> b!94915 m!102409))

(declare-fun m!102411 () Bool)

(assert (=> b!94915 m!102411))

(declare-fun m!102413 () Bool)

(assert (=> b!94915 m!102413))

(assert (=> b!94915 m!102397))

(declare-fun m!102415 () Bool)

(assert (=> b!94915 m!102415))

(declare-fun m!102417 () Bool)

(assert (=> b!94915 m!102417))

(declare-fun m!102419 () Bool)

(assert (=> b!94915 m!102419))

(assert (=> b!94915 m!102415))

(declare-fun m!102421 () Bool)

(assert (=> b!94915 m!102421))

(assert (=> b!94915 m!102403))

(declare-fun m!102423 () Bool)

(assert (=> b!94915 m!102423))

(declare-fun m!102425 () Bool)

(assert (=> b!94915 m!102425))

(declare-fun m!102427 () Bool)

(assert (=> b!94915 m!102427))

(declare-fun m!102429 () Bool)

(assert (=> b!94915 m!102429))

(declare-fun m!102431 () Bool)

(assert (=> b!94915 m!102431))

(assert (=> b!94915 m!102407))

(assert (=> b!94915 m!102429))

(assert (=> b!94915 m!102411))

(declare-fun m!102433 () Bool)

(assert (=> b!94915 m!102433))

(declare-fun m!102435 () Bool)

(assert (=> b!94915 m!102435))

(assert (=> d!24587 d!24875))

(declare-fun d!24877 () Bool)

(assert (=> d!24877 (arrayContainsKey!0 lt!46816 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!47175 () Unit!2822)

(declare-fun choose!13 (array!4200 (_ BitVec 64) (_ BitVec 32)) Unit!2822)

(assert (=> d!24877 (= lt!47175 (choose!13 lt!46816 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))

(assert (=> d!24877 (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000)))

(assert (=> d!24877 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!46816 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))) lt!47175)))

(declare-fun bs!3892 () Bool)

(assert (= bs!3892 d!24877))

(assert (=> bs!3892 m!101017))

(assert (=> bs!3892 m!101427))

(assert (=> bs!3892 m!101017))

(declare-fun m!102437 () Bool)

(assert (=> bs!3892 m!102437))

(assert (=> d!24587 d!24877))

(declare-fun d!24879 () Bool)

(declare-fun e!61950 () Bool)

(assert (=> d!24879 e!61950))

(declare-fun res!48034 () Bool)

(assert (=> d!24879 (=> (not res!48034) (not e!61950))))

(declare-fun lt!47179 () ListLongMap!1539)

(assert (=> d!24879 (= res!48034 (contains!797 lt!47179 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47176 () List!1600)

(assert (=> d!24879 (= lt!47179 (ListLongMap!1540 lt!47176))))

(declare-fun lt!47177 () Unit!2822)

(declare-fun lt!47178 () Unit!2822)

(assert (=> d!24879 (= lt!47177 lt!47178)))

(assert (=> d!24879 (= (getValueByKey!147 lt!47176 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24879 (= lt!47178 (lemmaContainsTupThenGetReturnValue!65 lt!47176 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24879 (= lt!47176 (insertStrictlySorted!67 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24879 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47179)))

(declare-fun b!94919 () Bool)

(declare-fun res!48035 () Bool)

(assert (=> b!94919 (=> (not res!48035) (not e!61950))))

(assert (=> b!94919 (= res!48035 (= (getValueByKey!147 (toList!785 lt!47179) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94920 () Bool)

(assert (=> b!94920 (= e!61950 (contains!799 (toList!785 lt!47179) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24879 res!48034) b!94919))

(assert (= (and b!94919 res!48035) b!94920))

(declare-fun m!102439 () Bool)

(assert (=> d!24879 m!102439))

(declare-fun m!102441 () Bool)

(assert (=> d!24879 m!102441))

(declare-fun m!102443 () Bool)

(assert (=> d!24879 m!102443))

(declare-fun m!102445 () Bool)

(assert (=> d!24879 m!102445))

(declare-fun m!102447 () Bool)

(assert (=> b!94919 m!102447))

(declare-fun m!102449 () Bool)

(assert (=> b!94920 m!102449))

(assert (=> d!24587 d!24879))

(assert (=> d!24587 d!24677))

(declare-fun b!94930 () Bool)

(declare-fun res!48046 () Bool)

(declare-fun e!61956 () Bool)

(assert (=> b!94930 (=> (not res!48046) (not e!61956))))

(assert (=> b!94930 (= res!48046 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94931 () Bool)

(assert (=> b!94931 (= e!61956 (bvslt (size!2244 (_keys!4118 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!94929 () Bool)

(declare-fun res!48044 () Bool)

(assert (=> b!94929 (=> (not res!48044) (not e!61956))))

(assert (=> b!94929 (= res!48044 (not (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))))

(declare-fun b!94932 () Bool)

(declare-fun e!61955 () Bool)

(assert (=> b!94932 (= e!61955 (= (arrayCountValidKeys!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!24881 () Bool)

(assert (=> d!24881 e!61955))

(declare-fun res!48047 () Bool)

(assert (=> d!24881 (=> (not res!48047) (not e!61955))))

(assert (=> d!24881 (= res!48047 (and (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2244 (_keys!4118 newMap!16)))))))

(declare-fun lt!47182 () Unit!2822)

(declare-fun choose!1 (array!4200 (_ BitVec 32) (_ BitVec 64)) Unit!2822)

(assert (=> d!24881 (= lt!47182 (choose!1 (_keys!4118 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24881 e!61956))

(declare-fun res!48045 () Bool)

(assert (=> d!24881 (=> (not res!48045) (not e!61956))))

(assert (=> d!24881 (= res!48045 (and (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2244 (_keys!4118 newMap!16)))))))

(assert (=> d!24881 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4118 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!47182)))

(assert (= (and d!24881 res!48045) b!94929))

(assert (= (and b!94929 res!48044) b!94930))

(assert (= (and b!94930 res!48046) b!94931))

(assert (= (and d!24881 res!48047) b!94932))

(assert (=> b!94930 m!101017))

(assert (=> b!94930 m!101109))

(declare-fun m!102451 () Bool)

(assert (=> b!94929 m!102451))

(assert (=> b!94929 m!102451))

(declare-fun m!102453 () Bool)

(assert (=> b!94929 m!102453))

(assert (=> b!94932 m!101403))

(assert (=> b!94932 m!101417))

(assert (=> b!94932 m!101117))

(assert (=> d!24881 m!101017))

(declare-fun m!102455 () Bool)

(assert (=> d!24881 m!102455))

(assert (=> d!24587 d!24881))

(declare-fun d!24883 () Bool)

(assert (=> d!24883 (= (arrayCountValidKeys!0 lt!46799 (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (bvadd (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!47185 () Unit!2822)

(declare-fun choose!2 (array!4200 (_ BitVec 32)) Unit!2822)

(assert (=> d!24883 (= lt!47185 (choose!2 lt!46799 (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))))))

(declare-fun e!61959 () Bool)

(assert (=> d!24883 e!61959))

(declare-fun res!48052 () Bool)

(assert (=> d!24883 (=> (not res!48052) (not e!61959))))

(assert (=> d!24883 (= res!48052 (and (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2244 lt!46799))))))

(assert (=> d!24883 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!46799 (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636))) lt!47185)))

(declare-fun b!94937 () Bool)

(declare-fun res!48053 () Bool)

(assert (=> b!94937 (=> (not res!48053) (not e!61959))))

(assert (=> b!94937 (= res!48053 (validKeyInArray!0 (select (arr!1996 lt!46799) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)))))))

(declare-fun b!94938 () Bool)

(assert (=> b!94938 (= e!61959 (bvslt (size!2244 lt!46799) #b01111111111111111111111111111111))))

(assert (= (and d!24883 res!48052) b!94937))

(assert (= (and b!94937 res!48053) b!94938))

(assert (=> d!24883 m!101397))

(declare-fun m!102457 () Bool)

(assert (=> d!24883 m!102457))

(assert (=> b!94937 m!102369))

(assert (=> b!94937 m!102369))

(assert (=> b!94937 m!102371))

(assert (=> d!24587 d!24883))

(declare-fun c!15885 () Bool)

(declare-fun bm!9535 () Bool)

(declare-fun call!9538 () Bool)

(assert (=> bm!9535 (= call!9538 (arrayNoDuplicates!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (bvadd lt!46821 #b00000000000000000000000000000001) (ite c!15885 (Cons!1597 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) lt!46821) lt!46806) lt!46806)))))

(declare-fun b!94939 () Bool)

(declare-fun e!61961 () Bool)

(assert (=> b!94939 (= e!61961 call!9538)))

(declare-fun b!94940 () Bool)

(declare-fun e!61960 () Bool)

(assert (=> b!94940 (= e!61960 e!61961)))

(assert (=> b!94940 (= c!15885 (validKeyInArray!0 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) lt!46821)))))

(declare-fun d!24885 () Bool)

(declare-fun res!48055 () Bool)

(declare-fun e!61962 () Bool)

(assert (=> d!24885 (=> res!48055 e!61962)))

(assert (=> d!24885 (= res!48055 (bvsge lt!46821 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))

(assert (=> d!24885 (= (arrayNoDuplicates!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) lt!46821 lt!46806) e!61962)))

(declare-fun b!94941 () Bool)

(assert (=> b!94941 (= e!61962 e!61960)))

(declare-fun res!48054 () Bool)

(assert (=> b!94941 (=> (not res!48054) (not e!61960))))

(declare-fun e!61963 () Bool)

(assert (=> b!94941 (= res!48054 (not e!61963))))

(declare-fun res!48056 () Bool)

(assert (=> b!94941 (=> (not res!48056) (not e!61963))))

(assert (=> b!94941 (= res!48056 (validKeyInArray!0 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) lt!46821)))))

(declare-fun b!94942 () Bool)

(assert (=> b!94942 (= e!61963 (contains!798 lt!46806 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) lt!46821)))))

(declare-fun b!94943 () Bool)

(assert (=> b!94943 (= e!61961 call!9538)))

(assert (= (and d!24885 (not res!48055)) b!94941))

(assert (= (and b!94941 res!48056) b!94942))

(assert (= (and b!94941 res!48054) b!94940))

(assert (= (and b!94940 c!15885) b!94939))

(assert (= (and b!94940 (not c!15885)) b!94943))

(assert (= (or b!94939 b!94943) bm!9535))

(declare-fun m!102459 () Bool)

(assert (=> bm!9535 m!102459))

(declare-fun m!102461 () Bool)

(assert (=> bm!9535 m!102461))

(assert (=> b!94940 m!102459))

(assert (=> b!94940 m!102459))

(declare-fun m!102463 () Bool)

(assert (=> b!94940 m!102463))

(assert (=> b!94941 m!102459))

(assert (=> b!94941 m!102459))

(assert (=> b!94941 m!102463))

(assert (=> b!94942 m!102459))

(assert (=> b!94942 m!102459))

(declare-fun m!102465 () Bool)

(assert (=> b!94942 m!102465))

(assert (=> d!24587 d!24885))

(assert (=> d!24587 d!24547))

(declare-fun bm!9536 () Bool)

(declare-fun call!9539 () Bool)

(assert (=> bm!9536 (= call!9539 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (mask!6511 newMap!16)))))

(declare-fun b!94944 () Bool)

(declare-fun e!61964 () Bool)

(declare-fun e!61965 () Bool)

(assert (=> b!94944 (= e!61964 e!61965)))

(declare-fun lt!47188 () (_ BitVec 64))

(assert (=> b!94944 (= lt!47188 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47187 () Unit!2822)

(assert (=> b!94944 (= lt!47187 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) lt!47188 #b00000000000000000000000000000000))))

(assert (=> b!94944 (arrayContainsKey!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) lt!47188 #b00000000000000000000000000000000)))

(declare-fun lt!47186 () Unit!2822)

(assert (=> b!94944 (= lt!47186 lt!47187)))

(declare-fun res!48058 () Bool)

(assert (=> b!94944 (= res!48058 (= (seekEntryOrOpen!0 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000) (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (mask!6511 newMap!16)) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!94944 (=> (not res!48058) (not e!61965))))

(declare-fun d!24887 () Bool)

(declare-fun res!48057 () Bool)

(declare-fun e!61966 () Bool)

(assert (=> d!24887 (=> res!48057 e!61966)))

(assert (=> d!24887 (= res!48057 (bvsge #b00000000000000000000000000000000 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))

(assert (=> d!24887 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (mask!6511 newMap!16)) e!61966)))

(declare-fun b!94945 () Bool)

(assert (=> b!94945 (= e!61966 e!61964)))

(declare-fun c!15886 () Bool)

(assert (=> b!94945 (= c!15886 (validKeyInArray!0 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!94946 () Bool)

(assert (=> b!94946 (= e!61965 call!9539)))

(declare-fun b!94947 () Bool)

(assert (=> b!94947 (= e!61964 call!9539)))

(assert (= (and d!24887 (not res!48057)) b!94945))

(assert (= (and b!94945 c!15886) b!94944))

(assert (= (and b!94945 (not c!15886)) b!94947))

(assert (= (and b!94944 res!48058) b!94946))

(assert (= (or b!94946 b!94947) bm!9536))

(declare-fun m!102467 () Bool)

(assert (=> bm!9536 m!102467))

(declare-fun m!102469 () Bool)

(assert (=> b!94944 m!102469))

(declare-fun m!102471 () Bool)

(assert (=> b!94944 m!102471))

(declare-fun m!102473 () Bool)

(assert (=> b!94944 m!102473))

(assert (=> b!94944 m!102469))

(declare-fun m!102475 () Bool)

(assert (=> b!94944 m!102475))

(assert (=> b!94945 m!102469))

(assert (=> b!94945 m!102469))

(declare-fun m!102477 () Bool)

(assert (=> b!94945 m!102477))

(assert (=> d!24587 d!24887))

(declare-fun bm!9537 () Bool)

(declare-fun call!9542 () Bool)

(declare-fun lt!47189 () ListLongMap!1539)

(assert (=> bm!9537 (= call!9542 (contains!797 lt!47189 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94948 () Bool)

(declare-fun e!61974 () ListLongMap!1539)

(declare-fun e!61978 () ListLongMap!1539)

(assert (=> b!94948 (= e!61974 e!61978)))

(declare-fun c!15890 () Bool)

(assert (=> b!94948 (= c!15890 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94949 () Bool)

(declare-fun e!61976 () ListLongMap!1539)

(declare-fun call!9544 () ListLongMap!1539)

(assert (=> b!94949 (= e!61976 call!9544)))

(declare-fun b!94950 () Bool)

(declare-fun res!48060 () Bool)

(declare-fun e!61968 () Bool)

(assert (=> b!94950 (=> (not res!48060) (not e!61968))))

(declare-fun e!61969 () Bool)

(assert (=> b!94950 (= res!48060 e!61969)))

(declare-fun res!48063 () Bool)

(assert (=> b!94950 (=> res!48063 e!61969)))

(declare-fun e!61970 () Bool)

(assert (=> b!94950 (= res!48063 (not e!61970))))

(declare-fun res!48066 () Bool)

(assert (=> b!94950 (=> (not res!48066) (not e!61970))))

(assert (=> b!94950 (= res!48066 (bvslt #b00000000000000000000000000000000 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun b!94951 () Bool)

(declare-fun call!9545 () ListLongMap!1539)

(assert (=> b!94951 (= e!61974 (+!136 call!9545 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!94953 () Bool)

(declare-fun res!48065 () Bool)

(assert (=> b!94953 (=> (not res!48065) (not e!61968))))

(declare-fun e!61973 () Bool)

(assert (=> b!94953 (= res!48065 e!61973)))

(declare-fun c!15888 () Bool)

(assert (=> b!94953 (= c!15888 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94954 () Bool)

(assert (=> b!94954 (= e!61973 (not call!9542))))

(declare-fun b!94955 () Bool)

(declare-fun e!61967 () Bool)

(assert (=> b!94955 (= e!61967 (= (apply!90 lt!47189 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94955 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))))))

(assert (=> b!94955 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun b!94956 () Bool)

(assert (=> b!94956 (= e!61978 call!9544)))

(declare-fun b!94957 () Bool)

(declare-fun e!61971 () Bool)

(assert (=> b!94957 (= e!61971 (= (apply!90 lt!47189 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94958 () Bool)

(declare-fun e!61975 () Bool)

(assert (=> b!94958 (= e!61975 (validKeyInArray!0 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!94959 () Bool)

(assert (=> b!94959 (= e!61970 (validKeyInArray!0 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9538 () Bool)

(declare-fun call!9541 () ListLongMap!1539)

(assert (=> bm!9538 (= call!9541 (getCurrentListMapNoExtraKeys!100 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9539 () Bool)

(declare-fun call!9546 () Bool)

(assert (=> bm!9539 (= call!9546 (contains!797 lt!47189 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94960 () Bool)

(declare-fun e!61977 () Unit!2822)

(declare-fun Unit!2856 () Unit!2822)

(assert (=> b!94960 (= e!61977 Unit!2856)))

(declare-fun c!15891 () Bool)

(declare-fun call!9540 () ListLongMap!1539)

(declare-fun call!9543 () ListLongMap!1539)

(declare-fun bm!9540 () Bool)

(assert (=> bm!9540 (= call!9545 (+!136 (ite c!15891 call!9541 (ite c!15890 call!9540 call!9543)) (ite (or c!15891 c!15890) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!94961 () Bool)

(declare-fun e!61972 () Bool)

(assert (=> b!94961 (= e!61968 e!61972)))

(declare-fun c!15892 () Bool)

(assert (=> b!94961 (= c!15892 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94962 () Bool)

(declare-fun c!15887 () Bool)

(assert (=> b!94962 (= c!15887 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94962 (= e!61978 e!61976)))

(declare-fun b!94963 () Bool)

(assert (=> b!94963 (= e!61972 (not call!9546))))

(declare-fun d!24889 () Bool)

(assert (=> d!24889 e!61968))

(declare-fun res!48061 () Bool)

(assert (=> d!24889 (=> (not res!48061) (not e!61968))))

(assert (=> d!24889 (= res!48061 (or (bvsge #b00000000000000000000000000000000 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))))

(declare-fun lt!47194 () ListLongMap!1539)

(assert (=> d!24889 (= lt!47189 lt!47194)))

(declare-fun lt!47208 () Unit!2822)

(assert (=> d!24889 (= lt!47208 e!61977)))

(declare-fun c!15889 () Bool)

(assert (=> d!24889 (= c!15889 e!61975)))

(declare-fun res!48067 () Bool)

(assert (=> d!24889 (=> (not res!48067) (not e!61975))))

(assert (=> d!24889 (= res!48067 (bvslt #b00000000000000000000000000000000 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))

(assert (=> d!24889 (= lt!47194 e!61974)))

(assert (=> d!24889 (= c!15891 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24889 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24889 (= (getCurrentListMap!466 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47189)))

(declare-fun b!94952 () Bool)

(declare-fun e!61979 () Bool)

(assert (=> b!94952 (= e!61979 (= (apply!90 lt!47189 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94964 () Bool)

(assert (=> b!94964 (= e!61976 call!9543)))

(declare-fun bm!9541 () Bool)

(assert (=> bm!9541 (= call!9543 call!9540)))

(declare-fun b!94965 () Bool)

(declare-fun lt!47205 () Unit!2822)

(assert (=> b!94965 (= e!61977 lt!47205)))

(declare-fun lt!47197 () ListLongMap!1539)

(assert (=> b!94965 (= lt!47197 (getCurrentListMapNoExtraKeys!100 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47196 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47196 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47198 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47198 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47199 () Unit!2822)

(assert (=> b!94965 (= lt!47199 (addStillContains!66 lt!47197 lt!47196 (zeroValue!2323 newMap!16) lt!47198))))

(assert (=> b!94965 (contains!797 (+!136 lt!47197 (tuple2!2335 lt!47196 (zeroValue!2323 newMap!16))) lt!47198)))

(declare-fun lt!47204 () Unit!2822)

(assert (=> b!94965 (= lt!47204 lt!47199)))

(declare-fun lt!47190 () ListLongMap!1539)

(assert (=> b!94965 (= lt!47190 (getCurrentListMapNoExtraKeys!100 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47202 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47202 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47200 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47200 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47201 () Unit!2822)

(assert (=> b!94965 (= lt!47201 (addApplyDifferent!66 lt!47190 lt!47202 (minValue!2323 newMap!16) lt!47200))))

(assert (=> b!94965 (= (apply!90 (+!136 lt!47190 (tuple2!2335 lt!47202 (minValue!2323 newMap!16))) lt!47200) (apply!90 lt!47190 lt!47200))))

(declare-fun lt!47209 () Unit!2822)

(assert (=> b!94965 (= lt!47209 lt!47201)))

(declare-fun lt!47195 () ListLongMap!1539)

(assert (=> b!94965 (= lt!47195 (getCurrentListMapNoExtraKeys!100 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47203 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47203 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47210 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47210 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47193 () Unit!2822)

(assert (=> b!94965 (= lt!47193 (addApplyDifferent!66 lt!47195 lt!47203 (zeroValue!2323 newMap!16) lt!47210))))

(assert (=> b!94965 (= (apply!90 (+!136 lt!47195 (tuple2!2335 lt!47203 (zeroValue!2323 newMap!16))) lt!47210) (apply!90 lt!47195 lt!47210))))

(declare-fun lt!47206 () Unit!2822)

(assert (=> b!94965 (= lt!47206 lt!47193)))

(declare-fun lt!47192 () ListLongMap!1539)

(assert (=> b!94965 (= lt!47192 (getCurrentListMapNoExtraKeys!100 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47207 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47207 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47191 () (_ BitVec 64))

(assert (=> b!94965 (= lt!47191 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!94965 (= lt!47205 (addApplyDifferent!66 lt!47192 lt!47207 (minValue!2323 newMap!16) lt!47191))))

(assert (=> b!94965 (= (apply!90 (+!136 lt!47192 (tuple2!2335 lt!47207 (minValue!2323 newMap!16))) lt!47191) (apply!90 lt!47192 lt!47191))))

(declare-fun b!94966 () Bool)

(assert (=> b!94966 (= e!61969 e!61967)))

(declare-fun res!48059 () Bool)

(assert (=> b!94966 (=> (not res!48059) (not e!61967))))

(assert (=> b!94966 (= res!48059 (contains!797 lt!47189 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!94966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun bm!9542 () Bool)

(assert (=> bm!9542 (= call!9540 call!9541)))

(declare-fun b!94967 () Bool)

(assert (=> b!94967 (= e!61973 e!61979)))

(declare-fun res!48064 () Bool)

(assert (=> b!94967 (= res!48064 call!9542)))

(assert (=> b!94967 (=> (not res!48064) (not e!61979))))

(declare-fun b!94968 () Bool)

(assert (=> b!94968 (= e!61972 e!61971)))

(declare-fun res!48062 () Bool)

(assert (=> b!94968 (= res!48062 call!9546)))

(assert (=> b!94968 (=> (not res!48062) (not e!61971))))

(declare-fun bm!9543 () Bool)

(assert (=> bm!9543 (= call!9544 call!9545)))

(assert (= (and d!24889 c!15891) b!94951))

(assert (= (and d!24889 (not c!15891)) b!94948))

(assert (= (and b!94948 c!15890) b!94956))

(assert (= (and b!94948 (not c!15890)) b!94962))

(assert (= (and b!94962 c!15887) b!94949))

(assert (= (and b!94962 (not c!15887)) b!94964))

(assert (= (or b!94949 b!94964) bm!9541))

(assert (= (or b!94956 bm!9541) bm!9542))

(assert (= (or b!94956 b!94949) bm!9543))

(assert (= (or b!94951 bm!9542) bm!9538))

(assert (= (or b!94951 bm!9543) bm!9540))

(assert (= (and d!24889 res!48067) b!94958))

(assert (= (and d!24889 c!15889) b!94965))

(assert (= (and d!24889 (not c!15889)) b!94960))

(assert (= (and d!24889 res!48061) b!94950))

(assert (= (and b!94950 res!48066) b!94959))

(assert (= (and b!94950 (not res!48063)) b!94966))

(assert (= (and b!94966 res!48059) b!94955))

(assert (= (and b!94950 res!48060) b!94953))

(assert (= (and b!94953 c!15888) b!94967))

(assert (= (and b!94953 (not c!15888)) b!94954))

(assert (= (and b!94967 res!48064) b!94952))

(assert (= (or b!94967 b!94954) bm!9537))

(assert (= (and b!94953 res!48065) b!94961))

(assert (= (and b!94961 c!15892) b!94968))

(assert (= (and b!94961 (not c!15892)) b!94963))

(assert (= (and b!94968 res!48062) b!94957))

(assert (= (or b!94968 b!94963) bm!9539))

(declare-fun b_lambda!4191 () Bool)

(assert (=> (not b_lambda!4191) (not b!94955)))

(assert (=> b!94955 t!5513))

(declare-fun b_and!5797 () Bool)

(assert (= b_and!5793 (and (=> t!5513 result!3205) b_and!5797)))

(assert (=> b!94955 t!5515))

(declare-fun b_and!5799 () Bool)

(assert (= b_and!5795 (and (=> t!5515 result!3207) b_and!5799)))

(declare-fun m!102479 () Bool)

(assert (=> b!94952 m!102479))

(declare-fun m!102481 () Bool)

(assert (=> b!94951 m!102481))

(declare-fun m!102483 () Bool)

(assert (=> bm!9540 m!102483))

(assert (=> d!24889 m!101265))

(declare-fun m!102485 () Bool)

(assert (=> b!94957 m!102485))

(declare-fun m!102487 () Bool)

(assert (=> bm!9537 m!102487))

(declare-fun m!102489 () Bool)

(assert (=> bm!9539 m!102489))

(declare-fun m!102491 () Bool)

(assert (=> b!94955 m!102491))

(assert (=> b!94955 m!101275))

(declare-fun m!102493 () Bool)

(assert (=> b!94955 m!102493))

(assert (=> b!94955 m!102469))

(assert (=> b!94955 m!101275))

(assert (=> b!94955 m!102491))

(assert (=> b!94955 m!102469))

(declare-fun m!102495 () Bool)

(assert (=> b!94955 m!102495))

(assert (=> b!94966 m!102469))

(assert (=> b!94966 m!102469))

(declare-fun m!102497 () Bool)

(assert (=> b!94966 m!102497))

(declare-fun m!102499 () Bool)

(assert (=> bm!9538 m!102499))

(assert (=> b!94959 m!102469))

(assert (=> b!94959 m!102469))

(assert (=> b!94959 m!102477))

(assert (=> b!94958 m!102469))

(assert (=> b!94958 m!102469))

(assert (=> b!94958 m!102477))

(declare-fun m!102501 () Bool)

(assert (=> b!94965 m!102501))

(declare-fun m!102503 () Bool)

(assert (=> b!94965 m!102503))

(declare-fun m!102505 () Bool)

(assert (=> b!94965 m!102505))

(declare-fun m!102507 () Bool)

(assert (=> b!94965 m!102507))

(assert (=> b!94965 m!102469))

(declare-fun m!102509 () Bool)

(assert (=> b!94965 m!102509))

(declare-fun m!102511 () Bool)

(assert (=> b!94965 m!102511))

(declare-fun m!102513 () Bool)

(assert (=> b!94965 m!102513))

(assert (=> b!94965 m!102509))

(declare-fun m!102515 () Bool)

(assert (=> b!94965 m!102515))

(assert (=> b!94965 m!102499))

(declare-fun m!102517 () Bool)

(assert (=> b!94965 m!102517))

(declare-fun m!102519 () Bool)

(assert (=> b!94965 m!102519))

(declare-fun m!102521 () Bool)

(assert (=> b!94965 m!102521))

(declare-fun m!102523 () Bool)

(assert (=> b!94965 m!102523))

(declare-fun m!102525 () Bool)

(assert (=> b!94965 m!102525))

(assert (=> b!94965 m!102501))

(assert (=> b!94965 m!102523))

(assert (=> b!94965 m!102505))

(declare-fun m!102527 () Bool)

(assert (=> b!94965 m!102527))

(declare-fun m!102529 () Bool)

(assert (=> b!94965 m!102529))

(assert (=> d!24587 d!24889))

(assert (=> d!24587 d!24571))

(declare-fun d!24891 () Bool)

(declare-fun e!61982 () Bool)

(assert (=> d!24891 e!61982))

(declare-fun res!48070 () Bool)

(assert (=> d!24891 (=> (not res!48070) (not e!61982))))

(assert (=> d!24891 (= res!48070 (and (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2244 (_keys!4118 newMap!16)))))))

(declare-fun lt!47213 () Unit!2822)

(declare-fun choose!102 ((_ BitVec 64) array!4200 (_ BitVec 32) (_ BitVec 32)) Unit!2822)

(assert (=> d!24891 (= lt!47213 (choose!102 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (mask!6511 newMap!16)))))

(assert (=> d!24891 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24891 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (mask!6511 newMap!16)) lt!47213)))

(declare-fun b!94971 () Bool)

(assert (=> b!94971 (= e!61982 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (mask!6511 newMap!16)))))

(assert (= (and d!24891 res!48070) b!94971))

(assert (=> d!24891 m!101017))

(declare-fun m!102531 () Bool)

(assert (=> d!24891 m!102531))

(assert (=> d!24891 m!101265))

(assert (=> b!94971 m!101403))

(assert (=> b!94971 m!101405))

(assert (=> d!24587 d!24891))

(declare-fun d!24893 () Bool)

(declare-fun e!61985 () Bool)

(assert (=> d!24893 e!61985))

(declare-fun res!48073 () Bool)

(assert (=> d!24893 (=> (not res!48073) (not e!61985))))

(assert (=> d!24893 (= res!48073 (and (bvsge (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) #b00000000000000000000000000000000) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2244 (_keys!4118 newMap!16))) (bvslt (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (size!2245 (_values!2419 newMap!16)))))))

(declare-fun lt!47216 () Unit!2822)

(declare-fun choose!577 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2822)

(assert (=> d!24893 (= lt!47216 (choose!577 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24893 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24893 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) lt!47216)))

(declare-fun b!94974 () Bool)

(assert (=> b!94974 (= e!61985 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))))))

(assert (= (and d!24893 res!48073) b!94974))

(assert (=> d!24893 m!101017))

(assert (=> d!24893 m!101015))

(declare-fun m!102533 () Bool)

(assert (=> d!24893 m!102533))

(assert (=> d!24893 m!101265))

(assert (=> b!94974 m!101407))

(assert (=> b!94974 m!101415))

(assert (=> b!94974 m!101403))

(assert (=> b!94974 m!101123))

(assert (=> b!94974 m!101123))

(assert (=> b!94974 m!101361))

(assert (=> d!24587 d!24893))

(declare-fun b!94975 () Bool)

(declare-fun e!61987 () (_ BitVec 32))

(assert (=> b!94975 (= e!61987 #b00000000000000000000000000000000)))

(declare-fun bm!9544 () Bool)

(declare-fun call!9547 () (_ BitVec 32))

(assert (=> bm!9544 (= call!9547 (arrayCountValidKeys!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94976 () Bool)

(declare-fun e!61986 () (_ BitVec 32))

(assert (=> b!94976 (= e!61987 e!61986)))

(declare-fun c!15894 () Bool)

(assert (=> b!94976 (= c!15894 (validKeyInArray!0 (select (arr!1996 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun lt!47217 () (_ BitVec 32))

(declare-fun d!24895 () Bool)

(assert (=> d!24895 (and (bvsge lt!47217 #b00000000000000000000000000000000) (bvsle lt!47217 (bvsub (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!24895 (= lt!47217 e!61987)))

(declare-fun c!15893 () Bool)

(assert (=> d!24895 (= c!15893 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24895 (and (bvsle #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2244 (_keys!4118 newMap!16)) (size!2244 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))))))))

(assert (=> d!24895 (= (arrayCountValidKeys!0 (array!4201 (store (arr!1996 (_keys!4118 newMap!16)) (ite c!15720 (index!3188 lt!46636) (index!3185 lt!46636)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (size!2244 (_keys!4118 newMap!16))) #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) lt!47217)))

(declare-fun b!94977 () Bool)

(assert (=> b!94977 (= e!61986 (bvadd #b00000000000000000000000000000001 call!9547))))

(declare-fun b!94978 () Bool)

(assert (=> b!94978 (= e!61986 call!9547)))

(assert (= (and d!24895 c!15893) b!94975))

(assert (= (and d!24895 (not c!15893)) b!94976))

(assert (= (and b!94976 c!15894) b!94977))

(assert (= (and b!94976 (not c!15894)) b!94978))

(assert (= (or b!94977 b!94978) bm!9544))

(declare-fun m!102535 () Bool)

(assert (=> bm!9544 m!102535))

(assert (=> b!94976 m!102469))

(assert (=> b!94976 m!102469))

(assert (=> b!94976 m!102477))

(assert (=> d!24587 d!24895))

(declare-fun d!24897 () Bool)

(declare-fun res!48074 () Bool)

(declare-fun e!61988 () Bool)

(assert (=> d!24897 (=> res!48074 e!61988)))

(assert (=> d!24897 (= res!48074 (and ((_ is Cons!1596) (t!5506 (toList!785 lt!46466))) (= (_1!1177 (h!2188 (t!5506 (toList!785 lt!46466)))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24897 (= (containsKey!151 (t!5506 (toList!785 lt!46466)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!61988)))

(declare-fun b!94979 () Bool)

(declare-fun e!61989 () Bool)

(assert (=> b!94979 (= e!61988 e!61989)))

(declare-fun res!48075 () Bool)

(assert (=> b!94979 (=> (not res!48075) (not e!61989))))

(assert (=> b!94979 (= res!48075 (and (or (not ((_ is Cons!1596) (t!5506 (toList!785 lt!46466)))) (bvsle (_1!1177 (h!2188 (t!5506 (toList!785 lt!46466)))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1596) (t!5506 (toList!785 lt!46466))) (bvslt (_1!1177 (h!2188 (t!5506 (toList!785 lt!46466)))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!94980 () Bool)

(assert (=> b!94980 (= e!61989 (containsKey!151 (t!5506 (t!5506 (toList!785 lt!46466))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24897 (not res!48074)) b!94979))

(assert (= (and b!94979 res!48075) b!94980))

(assert (=> b!94980 m!101017))

(declare-fun m!102537 () Bool)

(assert (=> b!94980 m!102537))

(assert (=> b!94536 d!24897))

(declare-fun d!24899 () Bool)

(assert (=> d!24899 (= (get!1283 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2767 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24675 d!24899))

(declare-fun b!94983 () Bool)

(declare-fun e!61991 () Option!153)

(assert (=> b!94983 (= e!61991 (getValueByKey!147 (t!5506 (toList!785 lt!46547)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94981 () Bool)

(declare-fun e!61990 () Option!153)

(assert (=> b!94981 (= e!61990 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46547)))))))

(declare-fun b!94984 () Bool)

(assert (=> b!94984 (= e!61991 None!151)))

(declare-fun b!94982 () Bool)

(assert (=> b!94982 (= e!61990 e!61991)))

(declare-fun c!15896 () Bool)

(assert (=> b!94982 (= c!15896 (and ((_ is Cons!1596) (toList!785 lt!46547)) (not (= (_1!1177 (h!2188 (toList!785 lt!46547))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!24901 () Bool)

(declare-fun c!15895 () Bool)

(assert (=> d!24901 (= c!15895 (and ((_ is Cons!1596) (toList!785 lt!46547)) (= (_1!1177 (h!2188 (toList!785 lt!46547))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24901 (= (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000) e!61990)))

(assert (= (and d!24901 c!15895) b!94981))

(assert (= (and d!24901 (not c!15895)) b!94982))

(assert (= (and b!94982 c!15896) b!94983))

(assert (= (and b!94982 (not c!15896)) b!94984))

(declare-fun m!102539 () Bool)

(assert (=> b!94983 m!102539))

(assert (=> d!24675 d!24901))

(declare-fun d!24903 () Bool)

(assert (=> d!24903 (= (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!355 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3893 () Bool)

(assert (= bs!3893 d!24903))

(assert (=> bs!3893 m!101651))

(declare-fun m!102541 () Bool)

(assert (=> bs!3893 m!102541))

(assert (=> b!94589 d!24903))

(assert (=> b!94589 d!24901))

(declare-fun d!24905 () Bool)

(assert (=> d!24905 (= (apply!90 lt!46929 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46929) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3894 () Bool)

(assert (= bs!3894 d!24905))

(assert (=> bs!3894 m!102255))

(assert (=> bs!3894 m!102255))

(declare-fun m!102543 () Bool)

(assert (=> bs!3894 m!102543))

(assert (=> b!94614 d!24905))

(declare-fun b!94985 () Bool)

(declare-fun e!61997 () ListLongMap!1539)

(assert (=> b!94985 (= e!61997 (ListLongMap!1540 Nil!1597))))

(declare-fun b!94986 () Bool)

(declare-fun e!61994 () Bool)

(declare-fun lt!47219 () ListLongMap!1539)

(assert (=> b!94986 (= e!61994 (isEmpty!356 lt!47219))))

(declare-fun b!94987 () Bool)

(assert (=> b!94987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> b!94987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_values!2419 newMap!16))))))

(declare-fun e!61998 () Bool)

(assert (=> b!94987 (= e!61998 (= (apply!90 lt!47219 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94988 () Bool)

(declare-fun res!48079 () Bool)

(declare-fun e!61996 () Bool)

(assert (=> b!94988 (=> (not res!48079) (not e!61996))))

(assert (=> b!94988 (= res!48079 (not (contains!797 lt!47219 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94989 () Bool)

(declare-fun e!61995 () Bool)

(assert (=> b!94989 (= e!61995 e!61998)))

(assert (=> b!94989 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun res!48076 () Bool)

(assert (=> b!94989 (= res!48076 (contains!797 lt!47219 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94989 (=> (not res!48076) (not e!61998))))

(declare-fun b!94990 () Bool)

(declare-fun lt!47221 () Unit!2822)

(declare-fun lt!47223 () Unit!2822)

(assert (=> b!94990 (= lt!47221 lt!47223)))

(declare-fun lt!47224 () ListLongMap!1539)

(declare-fun lt!47220 () V!3131)

(declare-fun lt!47218 () (_ BitVec 64))

(declare-fun lt!47222 () (_ BitVec 64))

(assert (=> b!94990 (not (contains!797 (+!136 lt!47224 (tuple2!2335 lt!47222 lt!47220)) lt!47218))))

(assert (=> b!94990 (= lt!47223 (addStillNotContains!40 lt!47224 lt!47222 lt!47220 lt!47218))))

(assert (=> b!94990 (= lt!47218 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94990 (= lt!47220 (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94990 (= lt!47222 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!9548 () ListLongMap!1539)

(assert (=> b!94990 (= lt!47224 call!9548)))

(declare-fun e!61992 () ListLongMap!1539)

(assert (=> b!94990 (= e!61992 (+!136 call!9548 (tuple2!2335 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94991 () Bool)

(assert (=> b!94991 (= e!61996 e!61995)))

(declare-fun c!15898 () Bool)

(declare-fun e!61993 () Bool)

(assert (=> b!94991 (= c!15898 e!61993)))

(declare-fun res!48078 () Bool)

(assert (=> b!94991 (=> (not res!48078) (not e!61993))))

(assert (=> b!94991 (= res!48078 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!94992 () Bool)

(assert (=> b!94992 (= e!61994 (= lt!47219 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16))))))

(declare-fun b!94993 () Bool)

(assert (=> b!94993 (= e!61992 call!9548)))

(declare-fun b!94994 () Bool)

(assert (=> b!94994 (= e!61995 e!61994)))

(declare-fun c!15900 () Bool)

(assert (=> b!94994 (= c!15900 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9545 () Bool)

(assert (=> bm!9545 (= call!9548 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16)))))

(declare-fun b!94995 () Bool)

(assert (=> b!94995 (= e!61997 e!61992)))

(declare-fun c!15897 () Bool)

(assert (=> b!94995 (= c!15897 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!24907 () Bool)

(assert (=> d!24907 e!61996))

(declare-fun res!48077 () Bool)

(assert (=> d!24907 (=> (not res!48077) (not e!61996))))

(assert (=> d!24907 (= res!48077 (not (contains!797 lt!47219 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24907 (= lt!47219 e!61997)))

(declare-fun c!15899 () Bool)

(assert (=> d!24907 (= c!15899 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24907 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24907 (= (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (ite c!15725 (ite c!15724 lt!46640 lt!46643) (extraKeys!2265 newMap!16)) (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47219)))

(declare-fun b!94996 () Bool)

(assert (=> b!94996 (= e!61993 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94996 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!24907 c!15899) b!94985))

(assert (= (and d!24907 (not c!15899)) b!94995))

(assert (= (and b!94995 c!15897) b!94990))

(assert (= (and b!94995 (not c!15897)) b!94993))

(assert (= (or b!94990 b!94993) bm!9545))

(assert (= (and d!24907 res!48077) b!94988))

(assert (= (and b!94988 res!48079) b!94991))

(assert (= (and b!94991 res!48078) b!94996))

(assert (= (and b!94991 c!15898) b!94989))

(assert (= (and b!94991 (not c!15898)) b!94994))

(assert (= (and b!94989 res!48076) b!94987))

(assert (= (and b!94994 c!15900) b!94992))

(assert (= (and b!94994 (not c!15900)) b!94986))

(declare-fun b_lambda!4193 () Bool)

(assert (=> (not b_lambda!4193) (not b!94987)))

(assert (=> b!94987 t!5513))

(declare-fun b_and!5801 () Bool)

(assert (= b_and!5797 (and (=> t!5513 result!3205) b_and!5801)))

(assert (=> b!94987 t!5515))

(declare-fun b_and!5803 () Bool)

(assert (= b_and!5799 (and (=> t!5515 result!3207) b_and!5803)))

(declare-fun b_lambda!4195 () Bool)

(assert (=> (not b_lambda!4195) (not b!94990)))

(assert (=> b!94990 t!5513))

(declare-fun b_and!5805 () Bool)

(assert (= b_and!5801 (and (=> t!5513 result!3205) b_and!5805)))

(assert (=> b!94990 t!5515))

(declare-fun b_and!5807 () Bool)

(assert (= b_and!5803 (and (=> t!5515 result!3207) b_and!5807)))

(declare-fun m!102545 () Bool)

(assert (=> b!94988 m!102545))

(assert (=> b!94995 m!101279))

(assert (=> b!94995 m!101279))

(assert (=> b!94995 m!101287))

(assert (=> b!94996 m!101279))

(assert (=> b!94996 m!101279))

(assert (=> b!94996 m!101287))

(declare-fun m!102547 () Bool)

(assert (=> d!24907 m!102547))

(assert (=> d!24907 m!101265))

(assert (=> b!94989 m!101279))

(assert (=> b!94989 m!101279))

(declare-fun m!102549 () Bool)

(assert (=> b!94989 m!102549))

(declare-fun m!102551 () Bool)

(assert (=> b!94986 m!102551))

(declare-fun m!102553 () Bool)

(assert (=> b!94992 m!102553))

(assert (=> b!94987 m!101279))

(declare-fun m!102555 () Bool)

(assert (=> b!94987 m!102555))

(assert (=> b!94987 m!101273))

(assert (=> b!94987 m!101273))

(assert (=> b!94987 m!101275))

(assert (=> b!94987 m!101277))

(assert (=> b!94987 m!101275))

(assert (=> b!94987 m!101279))

(assert (=> bm!9545 m!102553))

(declare-fun m!102557 () Bool)

(assert (=> b!94990 m!102557))

(assert (=> b!94990 m!101273))

(declare-fun m!102559 () Bool)

(assert (=> b!94990 m!102559))

(assert (=> b!94990 m!101273))

(assert (=> b!94990 m!101275))

(assert (=> b!94990 m!101277))

(assert (=> b!94990 m!101275))

(declare-fun m!102561 () Bool)

(assert (=> b!94990 m!102561))

(assert (=> b!94990 m!102559))

(declare-fun m!102563 () Bool)

(assert (=> b!94990 m!102563))

(assert (=> b!94990 m!101279))

(assert (=> bm!9454 d!24907))

(declare-fun d!24909 () Bool)

(declare-fun e!61999 () Bool)

(assert (=> d!24909 e!61999))

(declare-fun res!48080 () Bool)

(assert (=> d!24909 (=> res!48080 e!61999)))

(declare-fun lt!47227 () Bool)

(assert (=> d!24909 (= res!48080 (not lt!47227))))

(declare-fun lt!47225 () Bool)

(assert (=> d!24909 (= lt!47227 lt!47225)))

(declare-fun lt!47226 () Unit!2822)

(declare-fun e!62000 () Unit!2822)

(assert (=> d!24909 (= lt!47226 e!62000)))

(declare-fun c!15901 () Bool)

(assert (=> d!24909 (= c!15901 lt!47225)))

(assert (=> d!24909 (= lt!47225 (containsKey!151 (toList!785 lt!46888) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24909 (= (contains!797 lt!46888 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47227)))

(declare-fun b!94997 () Bool)

(declare-fun lt!47228 () Unit!2822)

(assert (=> b!94997 (= e!62000 lt!47228)))

(assert (=> b!94997 (= lt!47228 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46888) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94997 (isDefined!101 (getValueByKey!147 (toList!785 lt!46888) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94998 () Bool)

(declare-fun Unit!2857 () Unit!2822)

(assert (=> b!94998 (= e!62000 Unit!2857)))

(declare-fun b!94999 () Bool)

(assert (=> b!94999 (= e!61999 (isDefined!101 (getValueByKey!147 (toList!785 lt!46888) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24909 c!15901) b!94997))

(assert (= (and d!24909 (not c!15901)) b!94998))

(assert (= (and d!24909 (not res!48080)) b!94999))

(declare-fun m!102565 () Bool)

(assert (=> d!24909 m!102565))

(declare-fun m!102567 () Bool)

(assert (=> b!94997 m!102567))

(declare-fun m!102569 () Bool)

(assert (=> b!94997 m!102569))

(assert (=> b!94997 m!102569))

(declare-fun m!102571 () Bool)

(assert (=> b!94997 m!102571))

(assert (=> b!94999 m!102569))

(assert (=> b!94999 m!102569))

(assert (=> b!94999 m!102571))

(assert (=> bm!9491 d!24909))

(declare-fun e!62002 () Option!153)

(declare-fun b!95002 () Bool)

(assert (=> b!95002 (= e!62002 (getValueByKey!147 (t!5506 (toList!785 lt!46853)) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95000 () Bool)

(declare-fun e!62001 () Option!153)

(assert (=> b!95000 (= e!62001 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46853)))))))

(declare-fun b!95003 () Bool)

(assert (=> b!95003 (= e!62002 None!151)))

(declare-fun b!95001 () Bool)

(assert (=> b!95001 (= e!62001 e!62002)))

(declare-fun c!15903 () Bool)

(assert (=> b!95001 (= c!15903 (and ((_ is Cons!1596) (toList!785 lt!46853)) (not (= (_1!1177 (h!2188 (toList!785 lt!46853))) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!15902 () Bool)

(declare-fun d!24911 () Bool)

(assert (=> d!24911 (= c!15902 (and ((_ is Cons!1596) (toList!785 lt!46853)) (= (_1!1177 (h!2188 (toList!785 lt!46853))) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24911 (= (getValueByKey!147 (toList!785 lt!46853) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62001)))

(assert (= (and d!24911 c!15902) b!95000))

(assert (= (and d!24911 (not c!15902)) b!95001))

(assert (= (and b!95001 c!15903) b!95002))

(assert (= (and b!95001 (not c!15903)) b!95003))

(declare-fun m!102573 () Bool)

(assert (=> b!95002 m!102573))

(assert (=> b!94485 d!24911))

(declare-fun d!24913 () Bool)

(declare-fun e!62003 () Bool)

(assert (=> d!24913 e!62003))

(declare-fun res!48081 () Bool)

(assert (=> d!24913 (=> (not res!48081) (not e!62003))))

(declare-fun lt!47232 () ListLongMap!1539)

(assert (=> d!24913 (= res!48081 (contains!797 lt!47232 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun lt!47229 () List!1600)

(assert (=> d!24913 (= lt!47232 (ListLongMap!1540 lt!47229))))

(declare-fun lt!47230 () Unit!2822)

(declare-fun lt!47231 () Unit!2822)

(assert (=> d!24913 (= lt!47230 lt!47231)))

(assert (=> d!24913 (= (getValueByKey!147 lt!47229 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24913 (= lt!47231 (lemmaContainsTupThenGetReturnValue!65 lt!47229 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24913 (= lt!47229 (insertStrictlySorted!67 (toList!785 call!9511) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24913 (= (+!136 call!9511 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) lt!47232)))

(declare-fun b!95004 () Bool)

(declare-fun res!48082 () Bool)

(assert (=> b!95004 (=> (not res!48082) (not e!62003))))

(assert (=> b!95004 (= res!48082 (= (getValueByKey!147 (toList!785 lt!47232) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun b!95005 () Bool)

(assert (=> b!95005 (= e!62003 (contains!799 (toList!785 lt!47232) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(assert (= (and d!24913 res!48081) b!95004))

(assert (= (and b!95004 res!48082) b!95005))

(declare-fun m!102575 () Bool)

(assert (=> d!24913 m!102575))

(declare-fun m!102577 () Bool)

(assert (=> d!24913 m!102577))

(declare-fun m!102579 () Bool)

(assert (=> d!24913 m!102579))

(declare-fun m!102581 () Bool)

(assert (=> d!24913 m!102581))

(declare-fun m!102583 () Bool)

(assert (=> b!95004 m!102583))

(declare-fun m!102585 () Bool)

(assert (=> b!95005 m!102585))

(assert (=> b!94635 d!24913))

(assert (=> b!94563 d!24701))

(assert (=> d!24623 d!24597))

(assert (=> d!24623 d!24603))

(declare-fun d!24915 () Bool)

(assert (=> d!24915 (= (apply!90 (+!136 lt!46548 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46558) (apply!90 lt!46548 lt!46558))))

(assert (=> d!24915 true))

(declare-fun _$34!851 () Unit!2822)

(assert (=> d!24915 (= (choose!572 lt!46548 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46558) _$34!851)))

(declare-fun bs!3895 () Bool)

(assert (= bs!3895 d!24915))

(assert (=> bs!3895 m!101157))

(assert (=> bs!3895 m!101157))

(assert (=> bs!3895 m!101163))

(assert (=> bs!3895 m!101159))

(assert (=> d!24623 d!24915))

(declare-fun d!24917 () Bool)

(declare-fun e!62004 () Bool)

(assert (=> d!24917 e!62004))

(declare-fun res!48083 () Bool)

(assert (=> d!24917 (=> res!48083 e!62004)))

(declare-fun lt!47235 () Bool)

(assert (=> d!24917 (= res!48083 (not lt!47235))))

(declare-fun lt!47233 () Bool)

(assert (=> d!24917 (= lt!47235 lt!47233)))

(declare-fun lt!47234 () Unit!2822)

(declare-fun e!62005 () Unit!2822)

(assert (=> d!24917 (= lt!47234 e!62005)))

(declare-fun c!15904 () Bool)

(assert (=> d!24917 (= c!15904 lt!47233)))

(assert (=> d!24917 (= lt!47233 (containsKey!151 (toList!785 lt!46548) lt!46558))))

(assert (=> d!24917 (= (contains!797 lt!46548 lt!46558) lt!47235)))

(declare-fun b!95006 () Bool)

(declare-fun lt!47236 () Unit!2822)

(assert (=> b!95006 (= e!62005 lt!47236)))

(assert (=> b!95006 (= lt!47236 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46548) lt!46558))))

(assert (=> b!95006 (isDefined!101 (getValueByKey!147 (toList!785 lt!46548) lt!46558))))

(declare-fun b!95007 () Bool)

(declare-fun Unit!2858 () Unit!2822)

(assert (=> b!95007 (= e!62005 Unit!2858)))

(declare-fun b!95008 () Bool)

(assert (=> b!95008 (= e!62004 (isDefined!101 (getValueByKey!147 (toList!785 lt!46548) lt!46558)))))

(assert (= (and d!24917 c!15904) b!95006))

(assert (= (and d!24917 (not c!15904)) b!95007))

(assert (= (and d!24917 (not res!48083)) b!95008))

(declare-fun m!102587 () Bool)

(assert (=> d!24917 m!102587))

(declare-fun m!102589 () Bool)

(assert (=> b!95006 m!102589))

(assert (=> b!95006 m!101521))

(assert (=> b!95006 m!101521))

(declare-fun m!102591 () Bool)

(assert (=> b!95006 m!102591))

(assert (=> b!95008 m!101521))

(assert (=> b!95008 m!101521))

(assert (=> b!95008 m!102591))

(assert (=> d!24623 d!24917))

(assert (=> d!24623 d!24615))

(declare-fun d!24919 () Bool)

(assert (=> d!24919 (isDefined!101 (getValueByKey!147 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!47237 () Unit!2822)

(assert (=> d!24919 (= lt!47237 (choose!568 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!62006 () Bool)

(assert (=> d!24919 e!62006))

(declare-fun res!48084 () Bool)

(assert (=> d!24919 (=> (not res!48084) (not e!62006))))

(assert (=> d!24919 (= res!48084 (isStrictlySorted!297 (toList!785 call!9444)))))

(assert (=> d!24919 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!47237)))

(declare-fun b!95009 () Bool)

(assert (=> b!95009 (= e!62006 (containsKey!151 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24919 res!48084) b!95009))

(assert (=> d!24919 m!101017))

(assert (=> d!24919 m!101837))

(assert (=> d!24919 m!101837))

(assert (=> d!24919 m!101839))

(assert (=> d!24919 m!101017))

(declare-fun m!102593 () Bool)

(assert (=> d!24919 m!102593))

(declare-fun m!102595 () Bool)

(assert (=> d!24919 m!102595))

(assert (=> b!95009 m!101017))

(assert (=> b!95009 m!101833))

(assert (=> b!94656 d!24919))

(declare-fun d!24921 () Bool)

(assert (=> d!24921 (= (isDefined!101 (getValueByKey!147 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) (not (isEmpty!355 (getValueByKey!147 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun bs!3896 () Bool)

(assert (= bs!3896 d!24921))

(assert (=> bs!3896 m!101837))

(declare-fun m!102597 () Bool)

(assert (=> bs!3896 m!102597))

(assert (=> b!94656 d!24921))

(declare-fun e!62008 () Option!153)

(declare-fun b!95012 () Bool)

(assert (=> b!95012 (= e!62008 (getValueByKey!147 (t!5506 (toList!785 call!9444)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!95010 () Bool)

(declare-fun e!62007 () Option!153)

(assert (=> b!95010 (= e!62007 (Some!152 (_2!1177 (h!2188 (toList!785 call!9444)))))))

(declare-fun b!95013 () Bool)

(assert (=> b!95013 (= e!62008 None!151)))

(declare-fun b!95011 () Bool)

(assert (=> b!95011 (= e!62007 e!62008)))

(declare-fun c!15906 () Bool)

(assert (=> b!95011 (= c!15906 (and ((_ is Cons!1596) (toList!785 call!9444)) (not (= (_1!1177 (h!2188 (toList!785 call!9444))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun d!24923 () Bool)

(declare-fun c!15905 () Bool)

(assert (=> d!24923 (= c!15905 (and ((_ is Cons!1596) (toList!785 call!9444)) (= (_1!1177 (h!2188 (toList!785 call!9444))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24923 (= (getValueByKey!147 (toList!785 call!9444) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!62007)))

(assert (= (and d!24923 c!15905) b!95010))

(assert (= (and d!24923 (not c!15905)) b!95011))

(assert (= (and b!95011 c!15906) b!95012))

(assert (= (and b!95011 (not c!15906)) b!95013))

(assert (=> b!95012 m!101017))

(declare-fun m!102599 () Bool)

(assert (=> b!95012 m!102599))

(assert (=> b!94656 d!24923))

(declare-fun d!24925 () Bool)

(declare-fun e!62009 () Bool)

(assert (=> d!24925 e!62009))

(declare-fun res!48085 () Bool)

(assert (=> d!24925 (=> res!48085 e!62009)))

(declare-fun lt!47240 () Bool)

(assert (=> d!24925 (= res!48085 (not lt!47240))))

(declare-fun lt!47238 () Bool)

(assert (=> d!24925 (= lt!47240 lt!47238)))

(declare-fun lt!47239 () Unit!2822)

(declare-fun e!62010 () Unit!2822)

(assert (=> d!24925 (= lt!47239 e!62010)))

(declare-fun c!15907 () Bool)

(assert (=> d!24925 (= c!15907 lt!47238)))

(assert (=> d!24925 (= lt!47238 (containsKey!151 (toList!785 lt!46853) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!24925 (= (contains!797 lt!46853 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47240)))

(declare-fun b!95014 () Bool)

(declare-fun lt!47241 () Unit!2822)

(assert (=> b!95014 (= e!62010 lt!47241)))

(assert (=> b!95014 (= lt!47241 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46853) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> b!95014 (isDefined!101 (getValueByKey!147 (toList!785 lt!46853) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95015 () Bool)

(declare-fun Unit!2859 () Unit!2822)

(assert (=> b!95015 (= e!62010 Unit!2859)))

(declare-fun b!95016 () Bool)

(assert (=> b!95016 (= e!62009 (isDefined!101 (getValueByKey!147 (toList!785 lt!46853) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!24925 c!15907) b!95014))

(assert (= (and d!24925 (not c!15907)) b!95015))

(assert (= (and d!24925 (not res!48085)) b!95016))

(declare-fun m!102601 () Bool)

(assert (=> d!24925 m!102601))

(declare-fun m!102603 () Bool)

(assert (=> b!95014 m!102603))

(assert (=> b!95014 m!101501))

(assert (=> b!95014 m!101501))

(declare-fun m!102605 () Bool)

(assert (=> b!95014 m!102605))

(assert (=> b!95016 m!101501))

(assert (=> b!95016 m!101501))

(assert (=> b!95016 m!102605))

(assert (=> d!24605 d!24925))

(declare-fun b!95019 () Bool)

(declare-fun e!62012 () Option!153)

(assert (=> b!95019 (= e!62012 (getValueByKey!147 (t!5506 lt!46850) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95017 () Bool)

(declare-fun e!62011 () Option!153)

(assert (=> b!95017 (= e!62011 (Some!152 (_2!1177 (h!2188 lt!46850))))))

(declare-fun b!95020 () Bool)

(assert (=> b!95020 (= e!62012 None!151)))

(declare-fun b!95018 () Bool)

(assert (=> b!95018 (= e!62011 e!62012)))

(declare-fun c!15909 () Bool)

(assert (=> b!95018 (= c!15909 (and ((_ is Cons!1596) lt!46850) (not (= (_1!1177 (h!2188 lt!46850)) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun d!24927 () Bool)

(declare-fun c!15908 () Bool)

(assert (=> d!24927 (= c!15908 (and ((_ is Cons!1596) lt!46850) (= (_1!1177 (h!2188 lt!46850)) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24927 (= (getValueByKey!147 lt!46850 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62011)))

(assert (= (and d!24927 c!15908) b!95017))

(assert (= (and d!24927 (not c!15908)) b!95018))

(assert (= (and b!95018 c!15909) b!95019))

(assert (= (and b!95018 (not c!15909)) b!95020))

(declare-fun m!102607 () Bool)

(assert (=> b!95019 m!102607))

(assert (=> d!24605 d!24927))

(declare-fun d!24929 () Bool)

(assert (=> d!24929 (= (getValueByKey!147 lt!46850 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!47244 () Unit!2822)

(declare-fun choose!578 (List!1600 (_ BitVec 64) V!3131) Unit!2822)

(assert (=> d!24929 (= lt!47244 (choose!578 lt!46850 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun e!62015 () Bool)

(assert (=> d!24929 e!62015))

(declare-fun res!48090 () Bool)

(assert (=> d!24929 (=> (not res!48090) (not e!62015))))

(assert (=> d!24929 (= res!48090 (isStrictlySorted!297 lt!46850))))

(assert (=> d!24929 (= (lemmaContainsTupThenGetReturnValue!65 lt!46850 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47244)))

(declare-fun b!95025 () Bool)

(declare-fun res!48091 () Bool)

(assert (=> b!95025 (=> (not res!48091) (not e!62015))))

(assert (=> b!95025 (= res!48091 (containsKey!151 lt!46850 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95026 () Bool)

(assert (=> b!95026 (= e!62015 (contains!799 lt!46850 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!24929 res!48090) b!95025))

(assert (= (and b!95025 res!48091) b!95026))

(assert (=> d!24929 m!101495))

(declare-fun m!102609 () Bool)

(assert (=> d!24929 m!102609))

(declare-fun m!102611 () Bool)

(assert (=> d!24929 m!102611))

(declare-fun m!102613 () Bool)

(assert (=> b!95025 m!102613))

(declare-fun m!102615 () Bool)

(assert (=> b!95026 m!102615))

(assert (=> d!24605 d!24929))

(declare-fun b!95047 () Bool)

(declare-fun e!62027 () List!1600)

(declare-fun call!9555 () List!1600)

(assert (=> b!95047 (= e!62027 call!9555)))

(declare-fun b!95048 () Bool)

(declare-fun lt!47247 () List!1600)

(declare-fun e!62029 () Bool)

(assert (=> b!95048 (= e!62029 (contains!799 lt!47247 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95049 () Bool)

(declare-fun e!62030 () List!1600)

(assert (=> b!95049 (= e!62030 e!62027)))

(declare-fun c!15920 () Bool)

(assert (=> b!95049 (= c!15920 (and ((_ is Cons!1596) (toList!785 lt!46553)) (= (_1!1177 (h!2188 (toList!785 lt!46553))) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun c!15919 () Bool)

(declare-fun e!62026 () List!1600)

(declare-fun b!95050 () Bool)

(assert (=> b!95050 (= e!62026 (ite c!15920 (t!5506 (toList!785 lt!46553)) (ite c!15919 (Cons!1596 (h!2188 (toList!785 lt!46553)) (t!5506 (toList!785 lt!46553))) Nil!1597)))))

(declare-fun bm!9552 () Bool)

(declare-fun call!9557 () List!1600)

(assert (=> bm!9552 (= call!9555 call!9557)))

(declare-fun c!15921 () Bool)

(declare-fun bm!9553 () Bool)

(declare-fun $colon$colon!75 (List!1600 tuple2!2334) List!1600)

(assert (=> bm!9553 (= call!9557 ($colon$colon!75 e!62026 (ite c!15921 (h!2188 (toList!785 lt!46553)) (tuple2!2335 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!15918 () Bool)

(assert (=> bm!9553 (= c!15918 c!15921)))

(declare-fun b!95051 () Bool)

(assert (=> b!95051 (= e!62026 (insertStrictlySorted!67 (t!5506 (toList!785 lt!46553)) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95052 () Bool)

(declare-fun e!62028 () List!1600)

(declare-fun call!9556 () List!1600)

(assert (=> b!95052 (= e!62028 call!9556)))

(declare-fun b!95053 () Bool)

(assert (=> b!95053 (= e!62028 call!9556)))

(declare-fun bm!9554 () Bool)

(assert (=> bm!9554 (= call!9556 call!9555)))

(declare-fun b!95054 () Bool)

(assert (=> b!95054 (= c!15919 (and ((_ is Cons!1596) (toList!785 lt!46553)) (bvsgt (_1!1177 (h!2188 (toList!785 lt!46553))) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> b!95054 (= e!62027 e!62028)))

(declare-fun b!95055 () Bool)

(declare-fun res!48097 () Bool)

(assert (=> b!95055 (=> (not res!48097) (not e!62029))))

(assert (=> b!95055 (= res!48097 (containsKey!151 lt!47247 (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun d!24931 () Bool)

(assert (=> d!24931 e!62029))

(declare-fun res!48096 () Bool)

(assert (=> d!24931 (=> (not res!48096) (not e!62029))))

(assert (=> d!24931 (= res!48096 (isStrictlySorted!297 lt!47247))))

(assert (=> d!24931 (= lt!47247 e!62030)))

(assert (=> d!24931 (= c!15921 (and ((_ is Cons!1596) (toList!785 lt!46553)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46553))) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24931 (isStrictlySorted!297 (toList!785 lt!46553))))

(assert (=> d!24931 (= (insertStrictlySorted!67 (toList!785 lt!46553) (_1!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47247)))

(declare-fun b!95056 () Bool)

(assert (=> b!95056 (= e!62030 call!9557)))

(assert (= (and d!24931 c!15921) b!95056))

(assert (= (and d!24931 (not c!15921)) b!95049))

(assert (= (and b!95049 c!15920) b!95047))

(assert (= (and b!95049 (not c!15920)) b!95054))

(assert (= (and b!95054 c!15919) b!95052))

(assert (= (and b!95054 (not c!15919)) b!95053))

(assert (= (or b!95052 b!95053) bm!9554))

(assert (= (or b!95047 bm!9554) bm!9552))

(assert (= (or b!95056 bm!9552) bm!9553))

(assert (= (and bm!9553 c!15918) b!95051))

(assert (= (and bm!9553 (not c!15918)) b!95050))

(assert (= (and d!24931 res!48096) b!95055))

(assert (= (and b!95055 res!48097) b!95048))

(declare-fun m!102617 () Bool)

(assert (=> b!95055 m!102617))

(declare-fun m!102619 () Bool)

(assert (=> bm!9553 m!102619))

(declare-fun m!102621 () Bool)

(assert (=> b!95051 m!102621))

(declare-fun m!102623 () Bool)

(assert (=> d!24931 m!102623))

(declare-fun m!102625 () Bool)

(assert (=> d!24931 m!102625))

(declare-fun m!102627 () Bool)

(assert (=> b!95048 m!102627))

(assert (=> d!24605 d!24931))

(declare-fun d!24933 () Bool)

(declare-fun lt!47248 () Bool)

(assert (=> d!24933 (= lt!47248 (select (content!97 (toList!785 lt!46701)) (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62032 () Bool)

(assert (=> d!24933 (= lt!47248 e!62032)))

(declare-fun res!48098 () Bool)

(assert (=> d!24933 (=> (not res!48098) (not e!62032))))

(assert (=> d!24933 (= res!48098 ((_ is Cons!1596) (toList!785 lt!46701)))))

(assert (=> d!24933 (= (contains!799 (toList!785 lt!46701) (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47248)))

(declare-fun b!95057 () Bool)

(declare-fun e!62031 () Bool)

(assert (=> b!95057 (= e!62032 e!62031)))

(declare-fun res!48099 () Bool)

(assert (=> b!95057 (=> res!48099 e!62031)))

(assert (=> b!95057 (= res!48099 (= (h!2188 (toList!785 lt!46701)) (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95058 () Bool)

(assert (=> b!95058 (= e!62031 (contains!799 (t!5506 (toList!785 lt!46701)) (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!24933 res!48098) b!95057))

(assert (= (and b!95057 (not res!48099)) b!95058))

(declare-fun m!102629 () Bool)

(assert (=> d!24933 m!102629))

(declare-fun m!102631 () Bool)

(assert (=> d!24933 m!102631))

(declare-fun m!102633 () Bool)

(assert (=> b!95058 m!102633))

(assert (=> b!94352 d!24933))

(assert (=> d!24565 d!24705))

(declare-fun d!24935 () Bool)

(assert (=> d!24935 (= (get!1282 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94599 d!24935))

(declare-fun bm!9555 () Bool)

(declare-fun call!9558 () Bool)

(declare-fun c!15922 () Bool)

(assert (=> bm!9555 (= call!9558 (arrayNoDuplicates!0 (_keys!4118 (_2!1176 lt!46650)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15922 (Cons!1597 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000) Nil!1598) Nil!1598)))))

(declare-fun b!95059 () Bool)

(declare-fun e!62034 () Bool)

(assert (=> b!95059 (= e!62034 call!9558)))

(declare-fun b!95060 () Bool)

(declare-fun e!62033 () Bool)

(assert (=> b!95060 (= e!62033 e!62034)))

(assert (=> b!95060 (= c!15922 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(declare-fun d!24937 () Bool)

(declare-fun res!48101 () Bool)

(declare-fun e!62035 () Bool)

(assert (=> d!24937 (=> res!48101 e!62035)))

(assert (=> d!24937 (= res!48101 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(assert (=> d!24937 (= (arrayNoDuplicates!0 (_keys!4118 (_2!1176 lt!46650)) #b00000000000000000000000000000000 Nil!1598) e!62035)))

(declare-fun b!95061 () Bool)

(assert (=> b!95061 (= e!62035 e!62033)))

(declare-fun res!48100 () Bool)

(assert (=> b!95061 (=> (not res!48100) (not e!62033))))

(declare-fun e!62036 () Bool)

(assert (=> b!95061 (= res!48100 (not e!62036))))

(declare-fun res!48102 () Bool)

(assert (=> b!95061 (=> (not res!48102) (not e!62036))))

(assert (=> b!95061 (= res!48102 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(declare-fun b!95062 () Bool)

(assert (=> b!95062 (= e!62036 (contains!798 Nil!1598 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(declare-fun b!95063 () Bool)

(assert (=> b!95063 (= e!62034 call!9558)))

(assert (= (and d!24937 (not res!48101)) b!95061))

(assert (= (and b!95061 res!48102) b!95062))

(assert (= (and b!95061 res!48100) b!95060))

(assert (= (and b!95060 c!15922) b!95059))

(assert (= (and b!95060 (not c!15922)) b!95063))

(assert (= (or b!95059 b!95063) bm!9555))

(assert (=> bm!9555 m!101937))

(declare-fun m!102635 () Bool)

(assert (=> bm!9555 m!102635))

(assert (=> b!95060 m!101937))

(assert (=> b!95060 m!101937))

(assert (=> b!95060 m!101945))

(assert (=> b!95061 m!101937))

(assert (=> b!95061 m!101937))

(assert (=> b!95061 m!101945))

(assert (=> b!95062 m!101937))

(assert (=> b!95062 m!101937))

(declare-fun m!102637 () Bool)

(assert (=> b!95062 m!102637))

(assert (=> b!94597 d!24937))

(declare-fun b!95064 () Bool)

(declare-fun e!62038 () (_ BitVec 32))

(assert (=> b!95064 (= e!62038 #b00000000000000000000000000000000)))

(declare-fun bm!9556 () Bool)

(declare-fun call!9559 () (_ BitVec 32))

(assert (=> bm!9556 (= call!9559 (arrayCountValidKeys!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!95065 () Bool)

(declare-fun e!62037 () (_ BitVec 32))

(assert (=> b!95065 (= e!62038 e!62037)))

(declare-fun c!15924 () Bool)

(assert (=> b!95065 (= c!15924 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!24939 () Bool)

(declare-fun lt!47249 () (_ BitVec 32))

(assert (=> d!24939 (and (bvsge lt!47249 #b00000000000000000000000000000000) (bvsle lt!47249 (bvsub (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!24939 (= lt!47249 e!62038)))

(declare-fun c!15923 () Bool)

(assert (=> d!24939 (= c!15923 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!24939 (and (bvsle #b00000000000000000000000000000000 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!24939 (= (arrayCountValidKeys!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))) lt!47249)))

(declare-fun b!95066 () Bool)

(assert (=> b!95066 (= e!62037 (bvadd #b00000000000000000000000000000001 call!9559))))

(declare-fun b!95067 () Bool)

(assert (=> b!95067 (= e!62037 call!9559)))

(assert (= (and d!24939 c!15923) b!95064))

(assert (= (and d!24939 (not c!15923)) b!95065))

(assert (= (and b!95065 c!15924) b!95066))

(assert (= (and b!95065 (not c!15924)) b!95067))

(assert (= (or b!95066 b!95067) bm!9556))

(declare-fun m!102639 () Bool)

(assert (=> bm!9556 m!102639))

(declare-fun m!102641 () Bool)

(assert (=> b!95065 m!102641))

(assert (=> b!95065 m!102641))

(declare-fun m!102643 () Bool)

(assert (=> b!95065 m!102643))

(assert (=> b!94592 d!24939))

(assert (=> d!24639 d!24705))

(declare-fun d!24941 () Bool)

(assert (=> d!24941 (= (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!355 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3897 () Bool)

(assert (= bs!3897 d!24941))

(assert (=> bs!3897 m!101337))

(declare-fun m!102645 () Bool)

(assert (=> bs!3897 m!102645))

(assert (=> b!94355 d!24941))

(assert (=> b!94355 d!24819))

(declare-fun d!24943 () Bool)

(assert (=> d!24943 (= (isDefined!101 (getValueByKey!147 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))) (not (isEmpty!355 (getValueByKey!147 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))))

(declare-fun bs!3898 () Bool)

(assert (= bs!3898 d!24943))

(assert (=> bs!3898 m!101349))

(declare-fun m!102647 () Bool)

(assert (=> bs!3898 m!102647))

(assert (=> b!94363 d!24943))

(declare-fun b!95070 () Bool)

(declare-fun e!62040 () Option!153)

(assert (=> b!95070 (= e!62040 (getValueByKey!147 (t!5506 (toList!785 call!9446)) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(declare-fun b!95068 () Bool)

(declare-fun e!62039 () Option!153)

(assert (=> b!95068 (= e!62039 (Some!152 (_2!1177 (h!2188 (toList!785 call!9446)))))))

(declare-fun b!95071 () Bool)

(assert (=> b!95071 (= e!62040 None!151)))

(declare-fun b!95069 () Bool)

(assert (=> b!95069 (= e!62039 e!62040)))

(declare-fun c!15926 () Bool)

(assert (=> b!95069 (= c!15926 (and ((_ is Cons!1596) (toList!785 call!9446)) (not (= (_1!1177 (h!2188 (toList!785 call!9446))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))))

(declare-fun c!15925 () Bool)

(declare-fun d!24945 () Bool)

(assert (=> d!24945 (= c!15925 (and ((_ is Cons!1596) (toList!785 call!9446)) (= (_1!1177 (h!2188 (toList!785 call!9446))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))))))

(assert (=> d!24945 (= (getValueByKey!147 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))) e!62039)))

(assert (= (and d!24945 c!15925) b!95068))

(assert (= (and d!24945 (not c!15925)) b!95069))

(assert (= (and b!95069 c!15926) b!95070))

(assert (= (and b!95069 (not c!15926)) b!95071))

(assert (=> b!95070 m!101201))

(declare-fun m!102649 () Bool)

(assert (=> b!95070 m!102649))

(assert (=> b!94363 d!24945))

(declare-fun b!95072 () Bool)

(declare-fun e!62042 () (_ BitVec 32))

(assert (=> b!95072 (= e!62042 #b00000000000000000000000000000000)))

(declare-fun bm!9557 () Bool)

(declare-fun call!9560 () (_ BitVec 32))

(assert (=> bm!9557 (= call!9560 (arrayCountValidKeys!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95073 () Bool)

(declare-fun e!62041 () (_ BitVec 32))

(assert (=> b!95073 (= e!62042 e!62041)))

(declare-fun c!15928 () Bool)

(assert (=> b!95073 (= c!15928 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!24947 () Bool)

(declare-fun lt!47250 () (_ BitVec 32))

(assert (=> d!24947 (and (bvsge lt!47250 #b00000000000000000000000000000000) (bvsle lt!47250 (bvsub (size!2244 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!24947 (= lt!47250 e!62042)))

(declare-fun c!15927 () Bool)

(assert (=> d!24947 (= c!15927 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24947 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2244 (_keys!4118 newMap!16)) (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24947 (= (arrayCountValidKeys!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))) lt!47250)))

(declare-fun b!95074 () Bool)

(assert (=> b!95074 (= e!62041 (bvadd #b00000000000000000000000000000001 call!9560))))

(declare-fun b!95075 () Bool)

(assert (=> b!95075 (= e!62041 call!9560)))

(assert (= (and d!24947 c!15927) b!95072))

(assert (= (and d!24947 (not c!15927)) b!95073))

(assert (= (and b!95073 c!15928) b!95074))

(assert (= (and b!95073 (not c!15928)) b!95075))

(assert (= (or b!95074 b!95075) bm!9557))

(declare-fun m!102651 () Bool)

(assert (=> bm!9557 m!102651))

(assert (=> b!95073 m!101967))

(assert (=> b!95073 m!101967))

(assert (=> b!95073 m!101971))

(assert (=> bm!9462 d!24947))

(declare-fun d!24949 () Bool)

(assert (=> d!24949 (= (apply!90 lt!46888 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46888) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3899 () Bool)

(assert (= bs!3899 d!24949))

(assert (=> bs!3899 m!102569))

(assert (=> bs!3899 m!102569))

(declare-fun m!102653 () Bool)

(assert (=> bs!3899 m!102653))

(assert (=> b!94575 d!24949))

(assert (=> bm!9477 d!24591))

(declare-fun d!24951 () Bool)

(declare-fun e!62043 () Bool)

(assert (=> d!24951 e!62043))

(declare-fun res!48103 () Bool)

(assert (=> d!24951 (=> res!48103 e!62043)))

(declare-fun lt!47253 () Bool)

(assert (=> d!24951 (= res!48103 (not lt!47253))))

(declare-fun lt!47251 () Bool)

(assert (=> d!24951 (= lt!47253 lt!47251)))

(declare-fun lt!47252 () Unit!2822)

(declare-fun e!62044 () Unit!2822)

(assert (=> d!24951 (= lt!47252 e!62044)))

(declare-fun c!15929 () Bool)

(assert (=> d!24951 (= c!15929 lt!47251)))

(assert (=> d!24951 (= lt!47251 (containsKey!151 (toList!785 lt!46951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24951 (= (contains!797 lt!46951 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47253)))

(declare-fun b!95076 () Bool)

(declare-fun lt!47254 () Unit!2822)

(assert (=> b!95076 (= e!62044 lt!47254)))

(assert (=> b!95076 (= lt!47254 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95076 (isDefined!101 (getValueByKey!147 (toList!785 lt!46951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95077 () Bool)

(declare-fun Unit!2860 () Unit!2822)

(assert (=> b!95077 (= e!62044 Unit!2860)))

(declare-fun b!95078 () Bool)

(assert (=> b!95078 (= e!62043 (isDefined!101 (getValueByKey!147 (toList!785 lt!46951) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24951 c!15929) b!95076))

(assert (= (and d!24951 (not c!15929)) b!95077))

(assert (= (and d!24951 (not res!48103)) b!95078))

(declare-fun m!102655 () Bool)

(assert (=> d!24951 m!102655))

(declare-fun m!102657 () Bool)

(assert (=> b!95076 m!102657))

(declare-fun m!102659 () Bool)

(assert (=> b!95076 m!102659))

(assert (=> b!95076 m!102659))

(declare-fun m!102661 () Bool)

(assert (=> b!95076 m!102661))

(assert (=> b!95078 m!102659))

(assert (=> b!95078 m!102659))

(assert (=> b!95078 m!102661))

(assert (=> bm!9503 d!24951))

(declare-fun b!95081 () Bool)

(declare-fun e!62046 () Option!153)

(assert (=> b!95081 (= e!62046 (getValueByKey!147 (t!5506 (toList!785 lt!46845)) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95079 () Bool)

(declare-fun e!62045 () Option!153)

(assert (=> b!95079 (= e!62045 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46845)))))))

(declare-fun b!95082 () Bool)

(assert (=> b!95082 (= e!62046 None!151)))

(declare-fun b!95080 () Bool)

(assert (=> b!95080 (= e!62045 e!62046)))

(declare-fun c!15931 () Bool)

(assert (=> b!95080 (= c!15931 (and ((_ is Cons!1596) (toList!785 lt!46845)) (not (= (_1!1177 (h!2188 (toList!785 lt!46845))) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun d!24953 () Bool)

(declare-fun c!15930 () Bool)

(assert (=> d!24953 (= c!15930 (and ((_ is Cons!1596) (toList!785 lt!46845)) (= (_1!1177 (h!2188 (toList!785 lt!46845))) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!24953 (= (getValueByKey!147 (toList!785 lt!46845) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62045)))

(assert (= (and d!24953 c!15930) b!95079))

(assert (= (and d!24953 (not c!15930)) b!95080))

(assert (= (and b!95080 c!15931) b!95081))

(assert (= (and b!95080 (not c!15931)) b!95082))

(declare-fun m!102663 () Bool)

(assert (=> b!95081 m!102663))

(assert (=> b!94481 d!24953))

(declare-fun d!24955 () Bool)

(assert (=> d!24955 (= (get!1283 (getValueByKey!147 (toList!785 lt!46548) lt!46558)) (v!2767 (getValueByKey!147 (toList!785 lt!46548) lt!46558)))))

(assert (=> d!24615 d!24955))

(declare-fun b!95085 () Bool)

(declare-fun e!62048 () Option!153)

(assert (=> b!95085 (= e!62048 (getValueByKey!147 (t!5506 (toList!785 lt!46548)) lt!46558))))

(declare-fun b!95083 () Bool)

(declare-fun e!62047 () Option!153)

(assert (=> b!95083 (= e!62047 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46548)))))))

(declare-fun b!95086 () Bool)

(assert (=> b!95086 (= e!62048 None!151)))

(declare-fun b!95084 () Bool)

(assert (=> b!95084 (= e!62047 e!62048)))

(declare-fun c!15933 () Bool)

(assert (=> b!95084 (= c!15933 (and ((_ is Cons!1596) (toList!785 lt!46548)) (not (= (_1!1177 (h!2188 (toList!785 lt!46548))) lt!46558))))))

(declare-fun d!24957 () Bool)

(declare-fun c!15932 () Bool)

(assert (=> d!24957 (= c!15932 (and ((_ is Cons!1596) (toList!785 lt!46548)) (= (_1!1177 (h!2188 (toList!785 lt!46548))) lt!46558)))))

(assert (=> d!24957 (= (getValueByKey!147 (toList!785 lt!46548) lt!46558) e!62047)))

(assert (= (and d!24957 c!15932) b!95083))

(assert (= (and d!24957 (not c!15932)) b!95084))

(assert (= (and b!95084 c!15933) b!95085))

(assert (= (and b!95084 (not c!15933)) b!95086))

(declare-fun m!102665 () Bool)

(assert (=> b!95085 m!102665))

(assert (=> d!24615 d!24957))

(declare-fun d!24959 () Bool)

(declare-fun e!62049 () Bool)

(assert (=> d!24959 e!62049))

(declare-fun res!48104 () Bool)

(assert (=> d!24959 (=> (not res!48104) (not e!62049))))

(declare-fun lt!47258 () ListLongMap!1539)

(assert (=> d!24959 (= res!48104 (contains!797 lt!47258 (_1!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun lt!47255 () List!1600)

(assert (=> d!24959 (= lt!47258 (ListLongMap!1540 lt!47255))))

(declare-fun lt!47256 () Unit!2822)

(declare-fun lt!47257 () Unit!2822)

(assert (=> d!24959 (= lt!47256 lt!47257)))

(assert (=> d!24959 (= (getValueByKey!147 lt!47255 (_1!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24959 (= lt!47257 (lemmaContainsTupThenGetReturnValue!65 lt!47255 (_1!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24959 (= lt!47255 (insertStrictlySorted!67 (toList!785 lt!46668) (_1!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24959 (= (+!136 lt!46668 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!47258)))

(declare-fun b!95087 () Bool)

(declare-fun res!48105 () Bool)

(assert (=> b!95087 (=> (not res!48105) (not e!62049))))

(assert (=> b!95087 (= res!48105 (= (getValueByKey!147 (toList!785 lt!47258) (_1!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun b!95088 () Bool)

(assert (=> b!95088 (= e!62049 (contains!799 (toList!785 lt!47258) (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(assert (= (and d!24959 res!48104) b!95087))

(assert (= (and b!95087 res!48105) b!95088))

(declare-fun m!102667 () Bool)

(assert (=> d!24959 m!102667))

(declare-fun m!102669 () Bool)

(assert (=> d!24959 m!102669))

(declare-fun m!102671 () Bool)

(assert (=> d!24959 m!102671))

(declare-fun m!102673 () Bool)

(assert (=> d!24959 m!102673))

(declare-fun m!102675 () Bool)

(assert (=> b!95087 m!102675))

(declare-fun m!102677 () Bool)

(assert (=> b!95088 m!102677))

(assert (=> b!94331 d!24959))

(declare-fun d!24961 () Bool)

(declare-fun e!62050 () Bool)

(assert (=> d!24961 e!62050))

(declare-fun res!48106 () Bool)

(assert (=> d!24961 (=> (not res!48106) (not e!62050))))

(declare-fun lt!47262 () ListLongMap!1539)

(assert (=> d!24961 (= res!48106 (contains!797 lt!47262 (_1!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun lt!47259 () List!1600)

(assert (=> d!24961 (= lt!47262 (ListLongMap!1540 lt!47259))))

(declare-fun lt!47260 () Unit!2822)

(declare-fun lt!47261 () Unit!2822)

(assert (=> d!24961 (= lt!47260 lt!47261)))

(assert (=> d!24961 (= (getValueByKey!147 lt!47259 (_1!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24961 (= lt!47261 (lemmaContainsTupThenGetReturnValue!65 lt!47259 (_1!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24961 (= lt!47259 (insertStrictlySorted!67 (toList!785 lt!46666) (_1!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24961 (= (+!136 lt!46666 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!47262)))

(declare-fun b!95089 () Bool)

(declare-fun res!48107 () Bool)

(assert (=> b!95089 (=> (not res!48107) (not e!62050))))

(assert (=> b!95089 (= res!48107 (= (getValueByKey!147 (toList!785 lt!47262) (_1!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun b!95090 () Bool)

(assert (=> b!95090 (= e!62050 (contains!799 (toList!785 lt!47262) (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(assert (= (and d!24961 res!48106) b!95089))

(assert (= (and b!95089 res!48107) b!95090))

(declare-fun m!102679 () Bool)

(assert (=> d!24961 m!102679))

(declare-fun m!102681 () Bool)

(assert (=> d!24961 m!102681))

(declare-fun m!102683 () Bool)

(assert (=> d!24961 m!102683))

(declare-fun m!102685 () Bool)

(assert (=> d!24961 m!102685))

(declare-fun m!102687 () Bool)

(assert (=> b!95089 m!102687))

(declare-fun m!102689 () Bool)

(assert (=> b!95090 m!102689))

(assert (=> b!94331 d!24961))

(declare-fun d!24963 () Bool)

(declare-fun e!62051 () Bool)

(assert (=> d!24963 e!62051))

(declare-fun res!48108 () Bool)

(assert (=> d!24963 (=> (not res!48108) (not e!62051))))

(declare-fun lt!47266 () ListLongMap!1539)

(assert (=> d!24963 (= res!48108 (contains!797 lt!47266 (_1!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(declare-fun lt!47263 () List!1600)

(assert (=> d!24963 (= lt!47266 (ListLongMap!1540 lt!47263))))

(declare-fun lt!47264 () Unit!2822)

(declare-fun lt!47265 () Unit!2822)

(assert (=> d!24963 (= lt!47264 lt!47265)))

(assert (=> d!24963 (= (getValueByKey!147 lt!47263 (_1!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!24963 (= lt!47265 (lemmaContainsTupThenGetReturnValue!65 lt!47263 (_1!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!24963 (= lt!47263 (insertStrictlySorted!67 (toList!785 lt!46673) (_1!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!24963 (= (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!47266)))

(declare-fun b!95091 () Bool)

(declare-fun res!48109 () Bool)

(assert (=> b!95091 (=> (not res!48109) (not e!62051))))

(assert (=> b!95091 (= res!48109 (= (getValueByKey!147 (toList!785 lt!47266) (_1!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))))

(declare-fun b!95092 () Bool)

(assert (=> b!95092 (= e!62051 (contains!799 (toList!785 lt!47266) (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))

(assert (= (and d!24963 res!48108) b!95091))

(assert (= (and b!95091 res!48109) b!95092))

(declare-fun m!102691 () Bool)

(assert (=> d!24963 m!102691))

(declare-fun m!102693 () Bool)

(assert (=> d!24963 m!102693))

(declare-fun m!102695 () Bool)

(assert (=> d!24963 m!102695))

(declare-fun m!102697 () Bool)

(assert (=> d!24963 m!102697))

(declare-fun m!102699 () Bool)

(assert (=> b!95091 m!102699))

(declare-fun m!102701 () Bool)

(assert (=> b!95092 m!102701))

(assert (=> b!94331 d!24963))

(assert (=> b!94331 d!24907))

(declare-fun d!24965 () Bool)

(assert (=> d!24965 (= (apply!90 (+!136 lt!46668 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46667) (apply!90 lt!46668 lt!46667))))

(declare-fun lt!47267 () Unit!2822)

(assert (=> d!24965 (= lt!47267 (choose!572 lt!46668 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46667))))

(declare-fun e!62052 () Bool)

(assert (=> d!24965 e!62052))

(declare-fun res!48110 () Bool)

(assert (=> d!24965 (=> (not res!48110) (not e!62052))))

(assert (=> d!24965 (= res!48110 (contains!797 lt!46668 lt!46667))))

(assert (=> d!24965 (= (addApplyDifferent!66 lt!46668 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46667) lt!47267)))

(declare-fun b!95093 () Bool)

(assert (=> b!95093 (= e!62052 (not (= lt!46667 lt!46683)))))

(assert (= (and d!24965 res!48110) b!95093))

(declare-fun m!102703 () Bool)

(assert (=> d!24965 m!102703))

(assert (=> d!24965 m!101311))

(assert (=> d!24965 m!101313))

(declare-fun m!102705 () Bool)

(assert (=> d!24965 m!102705))

(assert (=> d!24965 m!101309))

(assert (=> d!24965 m!101311))

(assert (=> b!94331 d!24965))

(declare-fun d!24967 () Bool)

(assert (=> d!24967 (= (apply!90 (+!136 lt!46668 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46667) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46668 (tuple2!2335 lt!46683 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) lt!46667)))))

(declare-fun bs!3900 () Bool)

(assert (= bs!3900 d!24967))

(declare-fun m!102707 () Bool)

(assert (=> bs!3900 m!102707))

(assert (=> bs!3900 m!102707))

(declare-fun m!102709 () Bool)

(assert (=> bs!3900 m!102709))

(assert (=> b!94331 d!24967))

(declare-fun d!24969 () Bool)

(assert (=> d!24969 (= (apply!90 lt!46671 lt!46686) (get!1283 (getValueByKey!147 (toList!785 lt!46671) lt!46686)))))

(declare-fun bs!3901 () Bool)

(assert (= bs!3901 d!24969))

(declare-fun m!102711 () Bool)

(assert (=> bs!3901 m!102711))

(assert (=> bs!3901 m!102711))

(declare-fun m!102713 () Bool)

(assert (=> bs!3901 m!102713))

(assert (=> b!94331 d!24969))

(declare-fun d!24971 () Bool)

(assert (=> d!24971 (= (apply!90 (+!136 lt!46671 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46686) (apply!90 lt!46671 lt!46686))))

(declare-fun lt!47268 () Unit!2822)

(assert (=> d!24971 (= lt!47268 (choose!572 lt!46671 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46686))))

(declare-fun e!62053 () Bool)

(assert (=> d!24971 e!62053))

(declare-fun res!48111 () Bool)

(assert (=> d!24971 (=> (not res!48111) (not e!62053))))

(assert (=> d!24971 (= res!48111 (contains!797 lt!46671 lt!46686))))

(assert (=> d!24971 (= (addApplyDifferent!66 lt!46671 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46686) lt!47268)))

(declare-fun b!95094 () Bool)

(assert (=> b!95094 (= e!62053 (not (= lt!46686 lt!46679)))))

(assert (= (and d!24971 res!48111) b!95094))

(declare-fun m!102715 () Bool)

(assert (=> d!24971 m!102715))

(assert (=> d!24971 m!101293))

(assert (=> d!24971 m!101295))

(declare-fun m!102717 () Bool)

(assert (=> d!24971 m!102717))

(assert (=> d!24971 m!101301))

(assert (=> d!24971 m!101293))

(assert (=> b!94331 d!24971))

(declare-fun d!24973 () Bool)

(assert (=> d!24973 (= (apply!90 lt!46668 lt!46667) (get!1283 (getValueByKey!147 (toList!785 lt!46668) lt!46667)))))

(declare-fun bs!3902 () Bool)

(assert (= bs!3902 d!24973))

(declare-fun m!102719 () Bool)

(assert (=> bs!3902 m!102719))

(assert (=> bs!3902 m!102719))

(declare-fun m!102721 () Bool)

(assert (=> bs!3902 m!102721))

(assert (=> b!94331 d!24973))

(declare-fun d!24975 () Bool)

(assert (=> d!24975 (contains!797 (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46674)))

(declare-fun lt!47269 () Unit!2822)

(assert (=> d!24975 (= lt!47269 (choose!573 lt!46673 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46674))))

(assert (=> d!24975 (contains!797 lt!46673 lt!46674)))

(assert (=> d!24975 (= (addStillContains!66 lt!46673 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46674) lt!47269)))

(declare-fun bs!3903 () Bool)

(assert (= bs!3903 d!24975))

(assert (=> bs!3903 m!101289))

(assert (=> bs!3903 m!101289))

(assert (=> bs!3903 m!101291))

(declare-fun m!102723 () Bool)

(assert (=> bs!3903 m!102723))

(declare-fun m!102725 () Bool)

(assert (=> bs!3903 m!102725))

(assert (=> b!94331 d!24975))

(declare-fun d!24977 () Bool)

(assert (=> d!24977 (= (apply!90 lt!46666 lt!46676) (get!1283 (getValueByKey!147 (toList!785 lt!46666) lt!46676)))))

(declare-fun bs!3904 () Bool)

(assert (= bs!3904 d!24977))

(declare-fun m!102727 () Bool)

(assert (=> bs!3904 m!102727))

(assert (=> bs!3904 m!102727))

(declare-fun m!102729 () Bool)

(assert (=> bs!3904 m!102729))

(assert (=> b!94331 d!24977))

(declare-fun d!24979 () Bool)

(assert (=> d!24979 (= (apply!90 (+!136 lt!46666 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46676) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46666 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) lt!46676)))))

(declare-fun bs!3905 () Bool)

(assert (= bs!3905 d!24979))

(declare-fun m!102731 () Bool)

(assert (=> bs!3905 m!102731))

(assert (=> bs!3905 m!102731))

(declare-fun m!102733 () Bool)

(assert (=> bs!3905 m!102733))

(assert (=> b!94331 d!24979))

(declare-fun d!24981 () Bool)

(assert (=> d!24981 (= (apply!90 (+!136 lt!46671 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46686) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46671 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46686)))))

(declare-fun bs!3906 () Bool)

(assert (= bs!3906 d!24981))

(declare-fun m!102735 () Bool)

(assert (=> bs!3906 m!102735))

(assert (=> bs!3906 m!102735))

(declare-fun m!102737 () Bool)

(assert (=> bs!3906 m!102737))

(assert (=> b!94331 d!24981))

(declare-fun d!24983 () Bool)

(declare-fun e!62054 () Bool)

(assert (=> d!24983 e!62054))

(declare-fun res!48112 () Bool)

(assert (=> d!24983 (=> res!48112 e!62054)))

(declare-fun lt!47272 () Bool)

(assert (=> d!24983 (= res!48112 (not lt!47272))))

(declare-fun lt!47270 () Bool)

(assert (=> d!24983 (= lt!47272 lt!47270)))

(declare-fun lt!47271 () Unit!2822)

(declare-fun e!62055 () Unit!2822)

(assert (=> d!24983 (= lt!47271 e!62055)))

(declare-fun c!15934 () Bool)

(assert (=> d!24983 (= c!15934 lt!47270)))

(assert (=> d!24983 (= lt!47270 (containsKey!151 (toList!785 (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46674))))

(assert (=> d!24983 (= (contains!797 (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46674) lt!47272)))

(declare-fun b!95095 () Bool)

(declare-fun lt!47273 () Unit!2822)

(assert (=> b!95095 (= e!62055 lt!47273)))

(assert (=> b!95095 (= lt!47273 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46674))))

(assert (=> b!95095 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46674))))

(declare-fun b!95096 () Bool)

(declare-fun Unit!2861 () Unit!2822)

(assert (=> b!95096 (= e!62055 Unit!2861)))

(declare-fun b!95097 () Bool)

(assert (=> b!95097 (= e!62054 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46673 (tuple2!2335 lt!46672 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46674)))))

(assert (= (and d!24983 c!15934) b!95095))

(assert (= (and d!24983 (not c!15934)) b!95096))

(assert (= (and d!24983 (not res!48112)) b!95097))

(declare-fun m!102739 () Bool)

(assert (=> d!24983 m!102739))

(declare-fun m!102741 () Bool)

(assert (=> b!95095 m!102741))

(declare-fun m!102743 () Bool)

(assert (=> b!95095 m!102743))

(assert (=> b!95095 m!102743))

(declare-fun m!102745 () Bool)

(assert (=> b!95095 m!102745))

(assert (=> b!95097 m!102743))

(assert (=> b!95097 m!102743))

(assert (=> b!95097 m!102745))

(assert (=> b!94331 d!24983))

(declare-fun d!24985 () Bool)

(declare-fun e!62056 () Bool)

(assert (=> d!24985 e!62056))

(declare-fun res!48113 () Bool)

(assert (=> d!24985 (=> (not res!48113) (not e!62056))))

(declare-fun lt!47277 () ListLongMap!1539)

(assert (=> d!24985 (= res!48113 (contains!797 lt!47277 (_1!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(declare-fun lt!47274 () List!1600)

(assert (=> d!24985 (= lt!47277 (ListLongMap!1540 lt!47274))))

(declare-fun lt!47275 () Unit!2822)

(declare-fun lt!47276 () Unit!2822)

(assert (=> d!24985 (= lt!47275 lt!47276)))

(assert (=> d!24985 (= (getValueByKey!147 lt!47274 (_1!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!24985 (= lt!47276 (lemmaContainsTupThenGetReturnValue!65 lt!47274 (_1!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!24985 (= lt!47274 (insertStrictlySorted!67 (toList!785 lt!46671) (_1!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!24985 (= (+!136 lt!46671 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!47277)))

(declare-fun b!95098 () Bool)

(declare-fun res!48114 () Bool)

(assert (=> b!95098 (=> (not res!48114) (not e!62056))))

(assert (=> b!95098 (= res!48114 (= (getValueByKey!147 (toList!785 lt!47277) (_1!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!152 (_2!1177 (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))))

(declare-fun b!95099 () Bool)

(assert (=> b!95099 (= e!62056 (contains!799 (toList!785 lt!47277) (tuple2!2335 lt!46679 (ite (and c!15725 c!15724) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))

(assert (= (and d!24985 res!48113) b!95098))

(assert (= (and b!95098 res!48114) b!95099))

(declare-fun m!102747 () Bool)

(assert (=> d!24985 m!102747))

(declare-fun m!102749 () Bool)

(assert (=> d!24985 m!102749))

(declare-fun m!102751 () Bool)

(assert (=> d!24985 m!102751))

(declare-fun m!102753 () Bool)

(assert (=> d!24985 m!102753))

(declare-fun m!102755 () Bool)

(assert (=> b!95098 m!102755))

(declare-fun m!102757 () Bool)

(assert (=> b!95099 m!102757))

(assert (=> b!94331 d!24985))

(declare-fun d!24987 () Bool)

(assert (=> d!24987 (= (apply!90 (+!136 lt!46666 (tuple2!2335 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46676) (apply!90 lt!46666 lt!46676))))

(declare-fun lt!47278 () Unit!2822)

(assert (=> d!24987 (= lt!47278 (choose!572 lt!46666 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46676))))

(declare-fun e!62057 () Bool)

(assert (=> d!24987 e!62057))

(declare-fun res!48115 () Bool)

(assert (=> d!24987 (=> (not res!48115) (not e!62057))))

(assert (=> d!24987 (= res!48115 (contains!797 lt!46666 lt!46676))))

(assert (=> d!24987 (= (addApplyDifferent!66 lt!46666 lt!46678 (ite c!15725 (ite c!15724 (minValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46676) lt!47278)))

(declare-fun b!95100 () Bool)

(assert (=> b!95100 (= e!62057 (not (= lt!46676 lt!46678)))))

(assert (= (and d!24987 res!48115) b!95100))

(declare-fun m!102759 () Bool)

(assert (=> d!24987 m!102759))

(assert (=> d!24987 m!101297))

(assert (=> d!24987 m!101303))

(declare-fun m!102761 () Bool)

(assert (=> d!24987 m!102761))

(assert (=> d!24987 m!101299))

(assert (=> d!24987 m!101297))

(assert (=> b!94331 d!24987))

(declare-fun d!24989 () Bool)

(declare-fun e!62058 () Bool)

(assert (=> d!24989 e!62058))

(declare-fun res!48116 () Bool)

(assert (=> d!24989 (=> res!48116 e!62058)))

(declare-fun lt!47281 () Bool)

(assert (=> d!24989 (= res!48116 (not lt!47281))))

(declare-fun lt!47279 () Bool)

(assert (=> d!24989 (= lt!47281 lt!47279)))

(declare-fun lt!47280 () Unit!2822)

(declare-fun e!62059 () Unit!2822)

(assert (=> d!24989 (= lt!47280 e!62059)))

(declare-fun c!15935 () Bool)

(assert (=> d!24989 (= c!15935 lt!47279)))

(assert (=> d!24989 (= lt!47279 (containsKey!151 (toList!785 lt!46888) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!24989 (= (contains!797 lt!46888 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47281)))

(declare-fun b!95101 () Bool)

(declare-fun lt!47282 () Unit!2822)

(assert (=> b!95101 (= e!62059 lt!47282)))

(assert (=> b!95101 (= lt!47282 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46888) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95101 (isDefined!101 (getValueByKey!147 (toList!785 lt!46888) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95102 () Bool)

(declare-fun Unit!2862 () Unit!2822)

(assert (=> b!95102 (= e!62059 Unit!2862)))

(declare-fun b!95103 () Bool)

(assert (=> b!95103 (= e!62058 (isDefined!101 (getValueByKey!147 (toList!785 lt!46888) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!24989 c!15935) b!95101))

(assert (= (and d!24989 (not c!15935)) b!95102))

(assert (= (and d!24989 (not res!48116)) b!95103))

(assert (=> d!24989 m!101279))

(declare-fun m!102763 () Bool)

(assert (=> d!24989 m!102763))

(assert (=> b!95101 m!101279))

(declare-fun m!102765 () Bool)

(assert (=> b!95101 m!102765))

(assert (=> b!95101 m!101279))

(declare-fun m!102767 () Bool)

(assert (=> b!95101 m!102767))

(assert (=> b!95101 m!102767))

(declare-fun m!102769 () Bool)

(assert (=> b!95101 m!102769))

(assert (=> b!95103 m!101279))

(assert (=> b!95103 m!102767))

(assert (=> b!95103 m!102767))

(assert (=> b!95103 m!102769))

(assert (=> b!94584 d!24989))

(assert (=> b!94301 d!24635))

(declare-fun b!95104 () Bool)

(declare-fun e!62065 () ListLongMap!1539)

(assert (=> b!95104 (= e!62065 (ListLongMap!1540 Nil!1597))))

(declare-fun b!95105 () Bool)

(declare-fun e!62062 () Bool)

(declare-fun lt!47284 () ListLongMap!1539)

(assert (=> b!95105 (= e!62062 (isEmpty!356 lt!47284))))

(declare-fun b!95106 () Bool)

(assert (=> b!95106 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> b!95106 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_values!2419 newMap!16))))))

(declare-fun e!62066 () Bool)

(assert (=> b!95106 (= e!62066 (= (apply!90 lt!47284 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95107 () Bool)

(declare-fun res!48120 () Bool)

(declare-fun e!62064 () Bool)

(assert (=> b!95107 (=> (not res!48120) (not e!62064))))

(assert (=> b!95107 (= res!48120 (not (contains!797 lt!47284 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95108 () Bool)

(declare-fun e!62063 () Bool)

(assert (=> b!95108 (= e!62063 e!62066)))

(assert (=> b!95108 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun res!48117 () Bool)

(assert (=> b!95108 (= res!48117 (contains!797 lt!47284 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95108 (=> (not res!48117) (not e!62066))))

(declare-fun b!95109 () Bool)

(declare-fun lt!47286 () Unit!2822)

(declare-fun lt!47288 () Unit!2822)

(assert (=> b!95109 (= lt!47286 lt!47288)))

(declare-fun lt!47283 () (_ BitVec 64))

(declare-fun lt!47289 () ListLongMap!1539)

(declare-fun lt!47285 () V!3131)

(declare-fun lt!47287 () (_ BitVec 64))

(assert (=> b!95109 (not (contains!797 (+!136 lt!47289 (tuple2!2335 lt!47287 lt!47285)) lt!47283))))

(assert (=> b!95109 (= lt!47288 (addStillNotContains!40 lt!47289 lt!47287 lt!47285 lt!47283))))

(assert (=> b!95109 (= lt!47283 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!95109 (= lt!47285 (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!95109 (= lt!47287 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!9561 () ListLongMap!1539)

(assert (=> b!95109 (= lt!47289 call!9561)))

(declare-fun e!62060 () ListLongMap!1539)

(assert (=> b!95109 (= e!62060 (+!136 call!9561 (tuple2!2335 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95110 () Bool)

(assert (=> b!95110 (= e!62064 e!62063)))

(declare-fun c!15937 () Bool)

(declare-fun e!62061 () Bool)

(assert (=> b!95110 (= c!15937 e!62061)))

(declare-fun res!48119 () Bool)

(assert (=> b!95110 (=> (not res!48119) (not e!62061))))

(assert (=> b!95110 (= res!48119 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95111 () Bool)

(assert (=> b!95111 (= e!62062 (= lt!47284 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16))))))

(declare-fun b!95112 () Bool)

(assert (=> b!95112 (= e!62060 call!9561)))

(declare-fun b!95113 () Bool)

(assert (=> b!95113 (= e!62063 e!62062)))

(declare-fun c!15939 () Bool)

(assert (=> b!95113 (= c!15939 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9558 () Bool)

(assert (=> bm!9558 (= call!9561 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16)))))

(declare-fun b!95114 () Bool)

(assert (=> b!95114 (= e!62065 e!62060)))

(declare-fun c!15936 () Bool)

(assert (=> b!95114 (= c!15936 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!24991 () Bool)

(assert (=> d!24991 e!62064))

(declare-fun res!48118 () Bool)

(assert (=> d!24991 (=> (not res!48118) (not e!62064))))

(assert (=> d!24991 (= res!48118 (not (contains!797 lt!47284 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24991 (= lt!47284 e!62065)))

(declare-fun c!15938 () Bool)

(assert (=> d!24991 (= c!15938 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!24991 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24991 (= (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47284)))

(declare-fun b!95115 () Bool)

(assert (=> b!95115 (= e!62061 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95115 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!24991 c!15938) b!95104))

(assert (= (and d!24991 (not c!15938)) b!95114))

(assert (= (and b!95114 c!15936) b!95109))

(assert (= (and b!95114 (not c!15936)) b!95112))

(assert (= (or b!95109 b!95112) bm!9558))

(assert (= (and d!24991 res!48118) b!95107))

(assert (= (and b!95107 res!48120) b!95110))

(assert (= (and b!95110 res!48119) b!95115))

(assert (= (and b!95110 c!15937) b!95108))

(assert (= (and b!95110 (not c!15937)) b!95113))

(assert (= (and b!95108 res!48117) b!95106))

(assert (= (and b!95113 c!15939) b!95111))

(assert (= (and b!95113 (not c!15939)) b!95105))

(declare-fun b_lambda!4197 () Bool)

(assert (=> (not b_lambda!4197) (not b!95106)))

(assert (=> b!95106 t!5513))

(declare-fun b_and!5809 () Bool)

(assert (= b_and!5805 (and (=> t!5513 result!3205) b_and!5809)))

(assert (=> b!95106 t!5515))

(declare-fun b_and!5811 () Bool)

(assert (= b_and!5807 (and (=> t!5515 result!3207) b_and!5811)))

(declare-fun b_lambda!4199 () Bool)

(assert (=> (not b_lambda!4199) (not b!95109)))

(assert (=> b!95109 t!5513))

(declare-fun b_and!5813 () Bool)

(assert (= b_and!5809 (and (=> t!5513 result!3205) b_and!5813)))

(assert (=> b!95109 t!5515))

(declare-fun b_and!5815 () Bool)

(assert (= b_and!5811 (and (=> t!5515 result!3207) b_and!5815)))

(declare-fun m!102771 () Bool)

(assert (=> b!95107 m!102771))

(assert (=> b!95114 m!101279))

(assert (=> b!95114 m!101279))

(assert (=> b!95114 m!101287))

(assert (=> b!95115 m!101279))

(assert (=> b!95115 m!101279))

(assert (=> b!95115 m!101287))

(declare-fun m!102773 () Bool)

(assert (=> d!24991 m!102773))

(assert (=> d!24991 m!101265))

(assert (=> b!95108 m!101279))

(assert (=> b!95108 m!101279))

(declare-fun m!102775 () Bool)

(assert (=> b!95108 m!102775))

(declare-fun m!102777 () Bool)

(assert (=> b!95105 m!102777))

(declare-fun m!102779 () Bool)

(assert (=> b!95111 m!102779))

(assert (=> b!95106 m!101279))

(declare-fun m!102781 () Bool)

(assert (=> b!95106 m!102781))

(assert (=> b!95106 m!101273))

(assert (=> b!95106 m!101273))

(assert (=> b!95106 m!101275))

(assert (=> b!95106 m!101277))

(assert (=> b!95106 m!101275))

(assert (=> b!95106 m!101279))

(assert (=> bm!9558 m!102779))

(declare-fun m!102783 () Bool)

(assert (=> b!95109 m!102783))

(assert (=> b!95109 m!101273))

(declare-fun m!102785 () Bool)

(assert (=> b!95109 m!102785))

(assert (=> b!95109 m!101273))

(assert (=> b!95109 m!101275))

(assert (=> b!95109 m!101277))

(assert (=> b!95109 m!101275))

(declare-fun m!102787 () Bool)

(assert (=> b!95109 m!102787))

(assert (=> b!95109 m!102785))

(declare-fun m!102789 () Bool)

(assert (=> b!95109 m!102789))

(assert (=> b!95109 m!101279))

(assert (=> bm!9504 d!24991))

(declare-fun d!24993 () Bool)

(declare-fun e!62067 () Bool)

(assert (=> d!24993 e!62067))

(declare-fun res!48121 () Bool)

(assert (=> d!24993 (=> (not res!48121) (not e!62067))))

(declare-fun lt!47293 () ListLongMap!1539)

(assert (=> d!24993 (= res!48121 (contains!797 lt!47293 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47290 () List!1600)

(assert (=> d!24993 (= lt!47293 (ListLongMap!1540 lt!47290))))

(declare-fun lt!47291 () Unit!2822)

(declare-fun lt!47292 () Unit!2822)

(assert (=> d!24993 (= lt!47291 lt!47292)))

(assert (=> d!24993 (= (getValueByKey!147 lt!47290 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24993 (= lt!47292 (lemmaContainsTupThenGetReturnValue!65 lt!47290 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24993 (= lt!47290 (insertStrictlySorted!67 (toList!785 call!9469) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24993 (= (+!136 call!9469 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47293)))

(declare-fun b!95116 () Bool)

(declare-fun res!48122 () Bool)

(assert (=> b!95116 (=> (not res!48122) (not e!62067))))

(assert (=> b!95116 (= res!48122 (= (getValueByKey!147 (toList!785 lt!47293) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95117 () Bool)

(assert (=> b!95117 (= e!62067 (contains!799 (toList!785 lt!47293) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24993 res!48121) b!95116))

(assert (= (and b!95116 res!48122) b!95117))

(declare-fun m!102791 () Bool)

(assert (=> d!24993 m!102791))

(declare-fun m!102793 () Bool)

(assert (=> d!24993 m!102793))

(declare-fun m!102795 () Bool)

(assert (=> d!24993 m!102795))

(declare-fun m!102797 () Bool)

(assert (=> d!24993 m!102797))

(declare-fun m!102799 () Bool)

(assert (=> b!95116 m!102799))

(declare-fun m!102801 () Bool)

(assert (=> b!95117 m!102801))

(assert (=> b!94399 d!24993))

(declare-fun d!24995 () Bool)

(declare-fun e!62068 () Bool)

(assert (=> d!24995 e!62068))

(declare-fun res!48123 () Bool)

(assert (=> d!24995 (=> res!48123 e!62068)))

(declare-fun lt!47296 () Bool)

(assert (=> d!24995 (= res!48123 (not lt!47296))))

(declare-fun lt!47294 () Bool)

(assert (=> d!24995 (= lt!47296 lt!47294)))

(declare-fun lt!47295 () Unit!2822)

(declare-fun e!62069 () Unit!2822)

(assert (=> d!24995 (= lt!47295 e!62069)))

(declare-fun c!15940 () Bool)

(assert (=> d!24995 (= c!15940 lt!47294)))

(assert (=> d!24995 (= lt!47294 (containsKey!151 (toList!785 (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732))) lt!46730))))

(assert (=> d!24995 (= (contains!797 (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732)) lt!46730) lt!47296)))

(declare-fun b!95118 () Bool)

(declare-fun lt!47297 () Unit!2822)

(assert (=> b!95118 (= e!62069 lt!47297)))

(assert (=> b!95118 (= lt!47297 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732))) lt!46730))))

(assert (=> b!95118 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732))) lt!46730))))

(declare-fun b!95119 () Bool)

(declare-fun Unit!2863 () Unit!2822)

(assert (=> b!95119 (= e!62069 Unit!2863)))

(declare-fun b!95120 () Bool)

(assert (=> b!95120 (= e!62068 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732))) lt!46730)))))

(assert (= (and d!24995 c!15940) b!95118))

(assert (= (and d!24995 (not c!15940)) b!95119))

(assert (= (and d!24995 (not res!48123)) b!95120))

(declare-fun m!102803 () Bool)

(assert (=> d!24995 m!102803))

(declare-fun m!102805 () Bool)

(assert (=> b!95118 m!102805))

(declare-fun m!102807 () Bool)

(assert (=> b!95118 m!102807))

(assert (=> b!95118 m!102807))

(declare-fun m!102809 () Bool)

(assert (=> b!95118 m!102809))

(assert (=> b!95120 m!102807))

(assert (=> b!95120 m!102807))

(assert (=> b!95120 m!102809))

(assert (=> b!94399 d!24995))

(assert (=> b!94399 d!24661))

(declare-fun d!24997 () Bool)

(assert (=> d!24997 (not (contains!797 (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732)) lt!46730))))

(declare-fun lt!47300 () Unit!2822)

(declare-fun choose!579 (ListLongMap!1539 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2822)

(assert (=> d!24997 (= lt!47300 (choose!579 lt!46736 lt!46734 lt!46732 lt!46730))))

(declare-fun e!62072 () Bool)

(assert (=> d!24997 e!62072))

(declare-fun res!48126 () Bool)

(assert (=> d!24997 (=> (not res!48126) (not e!62072))))

(assert (=> d!24997 (= res!48126 (not (contains!797 lt!46736 lt!46730)))))

(assert (=> d!24997 (= (addStillNotContains!40 lt!46736 lt!46734 lt!46732 lt!46730) lt!47300)))

(declare-fun b!95124 () Bool)

(assert (=> b!95124 (= e!62072 (not (= lt!46734 lt!46730)))))

(assert (= (and d!24997 res!48126) b!95124))

(assert (=> d!24997 m!101379))

(assert (=> d!24997 m!101379))

(assert (=> d!24997 m!101383))

(declare-fun m!102811 () Bool)

(assert (=> d!24997 m!102811))

(declare-fun m!102813 () Bool)

(assert (=> d!24997 m!102813))

(assert (=> b!94399 d!24997))

(declare-fun d!24999 () Bool)

(declare-fun e!62073 () Bool)

(assert (=> d!24999 e!62073))

(declare-fun res!48127 () Bool)

(assert (=> d!24999 (=> (not res!48127) (not e!62073))))

(declare-fun lt!47304 () ListLongMap!1539)

(assert (=> d!24999 (= res!48127 (contains!797 lt!47304 (_1!1177 (tuple2!2335 lt!46734 lt!46732))))))

(declare-fun lt!47301 () List!1600)

(assert (=> d!24999 (= lt!47304 (ListLongMap!1540 lt!47301))))

(declare-fun lt!47302 () Unit!2822)

(declare-fun lt!47303 () Unit!2822)

(assert (=> d!24999 (= lt!47302 lt!47303)))

(assert (=> d!24999 (= (getValueByKey!147 lt!47301 (_1!1177 (tuple2!2335 lt!46734 lt!46732))) (Some!152 (_2!1177 (tuple2!2335 lt!46734 lt!46732))))))

(assert (=> d!24999 (= lt!47303 (lemmaContainsTupThenGetReturnValue!65 lt!47301 (_1!1177 (tuple2!2335 lt!46734 lt!46732)) (_2!1177 (tuple2!2335 lt!46734 lt!46732))))))

(assert (=> d!24999 (= lt!47301 (insertStrictlySorted!67 (toList!785 lt!46736) (_1!1177 (tuple2!2335 lt!46734 lt!46732)) (_2!1177 (tuple2!2335 lt!46734 lt!46732))))))

(assert (=> d!24999 (= (+!136 lt!46736 (tuple2!2335 lt!46734 lt!46732)) lt!47304)))

(declare-fun b!95125 () Bool)

(declare-fun res!48128 () Bool)

(assert (=> b!95125 (=> (not res!48128) (not e!62073))))

(assert (=> b!95125 (= res!48128 (= (getValueByKey!147 (toList!785 lt!47304) (_1!1177 (tuple2!2335 lt!46734 lt!46732))) (Some!152 (_2!1177 (tuple2!2335 lt!46734 lt!46732)))))))

(declare-fun b!95126 () Bool)

(assert (=> b!95126 (= e!62073 (contains!799 (toList!785 lt!47304) (tuple2!2335 lt!46734 lt!46732)))))

(assert (= (and d!24999 res!48127) b!95125))

(assert (= (and b!95125 res!48128) b!95126))

(declare-fun m!102815 () Bool)

(assert (=> d!24999 m!102815))

(declare-fun m!102817 () Bool)

(assert (=> d!24999 m!102817))

(declare-fun m!102819 () Bool)

(assert (=> d!24999 m!102819))

(declare-fun m!102821 () Bool)

(assert (=> d!24999 m!102821))

(declare-fun m!102823 () Bool)

(assert (=> b!95125 m!102823))

(declare-fun m!102825 () Bool)

(assert (=> b!95126 m!102825))

(assert (=> b!94399 d!24999))

(declare-fun d!25001 () Bool)

(assert (=> d!25001 (= (isDefined!101 (getValueByKey!147 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) (not (isEmpty!355 (getValueByKey!147 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun bs!3907 () Bool)

(assert (= bs!3907 d!25001))

(assert (=> bs!3907 m!101701))

(declare-fun m!102827 () Bool)

(assert (=> bs!3907 m!102827))

(assert (=> b!94602 d!25001))

(declare-fun b!95129 () Bool)

(declare-fun e!62075 () Option!153)

(assert (=> b!95129 (= e!62075 (getValueByKey!147 (t!5506 (toList!785 e!61547)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!95127 () Bool)

(declare-fun e!62074 () Option!153)

(assert (=> b!95127 (= e!62074 (Some!152 (_2!1177 (h!2188 (toList!785 e!61547)))))))

(declare-fun b!95130 () Bool)

(assert (=> b!95130 (= e!62075 None!151)))

(declare-fun b!95128 () Bool)

(assert (=> b!95128 (= e!62074 e!62075)))

(declare-fun c!15942 () Bool)

(assert (=> b!95128 (= c!15942 (and ((_ is Cons!1596) (toList!785 e!61547)) (not (= (_1!1177 (h!2188 (toList!785 e!61547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun c!15941 () Bool)

(declare-fun d!25003 () Bool)

(assert (=> d!25003 (= c!15941 (and ((_ is Cons!1596) (toList!785 e!61547)) (= (_1!1177 (h!2188 (toList!785 e!61547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!25003 (= (getValueByKey!147 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!62074)))

(assert (= (and d!25003 c!15941) b!95127))

(assert (= (and d!25003 (not c!15941)) b!95128))

(assert (= (and b!95128 c!15942) b!95129))

(assert (= (and b!95128 (not c!15942)) b!95130))

(assert (=> b!95129 m!101017))

(declare-fun m!102829 () Bool)

(assert (=> b!95129 m!102829))

(assert (=> b!94602 d!25003))

(declare-fun d!25005 () Bool)

(declare-fun e!62076 () Bool)

(assert (=> d!25005 e!62076))

(declare-fun res!48129 () Bool)

(assert (=> d!25005 (=> res!48129 e!62076)))

(declare-fun lt!47307 () Bool)

(assert (=> d!25005 (= res!48129 (not lt!47307))))

(declare-fun lt!47305 () Bool)

(assert (=> d!25005 (= lt!47307 lt!47305)))

(declare-fun lt!47306 () Unit!2822)

(declare-fun e!62077 () Unit!2822)

(assert (=> d!25005 (= lt!47306 e!62077)))

(declare-fun c!15943 () Bool)

(assert (=> d!25005 (= c!15943 lt!47305)))

(assert (=> d!25005 (= lt!47305 (containsKey!151 (toList!785 lt!46845) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!25005 (= (contains!797 lt!46845 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47307)))

(declare-fun b!95131 () Bool)

(declare-fun lt!47308 () Unit!2822)

(assert (=> b!95131 (= e!62077 lt!47308)))

(assert (=> b!95131 (= lt!47308 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46845) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> b!95131 (isDefined!101 (getValueByKey!147 (toList!785 lt!46845) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95132 () Bool)

(declare-fun Unit!2864 () Unit!2822)

(assert (=> b!95132 (= e!62077 Unit!2864)))

(declare-fun b!95133 () Bool)

(assert (=> b!95133 (= e!62076 (isDefined!101 (getValueByKey!147 (toList!785 lt!46845) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25005 c!15943) b!95131))

(assert (= (and d!25005 (not c!15943)) b!95132))

(assert (= (and d!25005 (not res!48129)) b!95133))

(declare-fun m!102831 () Bool)

(assert (=> d!25005 m!102831))

(declare-fun m!102833 () Bool)

(assert (=> b!95131 m!102833))

(assert (=> b!95131 m!101477))

(assert (=> b!95131 m!101477))

(declare-fun m!102835 () Bool)

(assert (=> b!95131 m!102835))

(assert (=> b!95133 m!101477))

(assert (=> b!95133 m!101477))

(assert (=> b!95133 m!102835))

(assert (=> d!24601 d!25005))

(declare-fun e!62079 () Option!153)

(declare-fun b!95136 () Bool)

(assert (=> b!95136 (= e!62079 (getValueByKey!147 (t!5506 lt!46842) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95134 () Bool)

(declare-fun e!62078 () Option!153)

(assert (=> b!95134 (= e!62078 (Some!152 (_2!1177 (h!2188 lt!46842))))))

(declare-fun b!95137 () Bool)

(assert (=> b!95137 (= e!62079 None!151)))

(declare-fun b!95135 () Bool)

(assert (=> b!95135 (= e!62078 e!62079)))

(declare-fun c!15945 () Bool)

(assert (=> b!95135 (= c!15945 (and ((_ is Cons!1596) lt!46842) (not (= (_1!1177 (h!2188 lt!46842)) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!15944 () Bool)

(declare-fun d!25007 () Bool)

(assert (=> d!25007 (= c!15944 (and ((_ is Cons!1596) lt!46842) (= (_1!1177 (h!2188 lt!46842)) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25007 (= (getValueByKey!147 lt!46842 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62078)))

(assert (= (and d!25007 c!15944) b!95134))

(assert (= (and d!25007 (not c!15944)) b!95135))

(assert (= (and b!95135 c!15945) b!95136))

(assert (= (and b!95135 (not c!15945)) b!95137))

(declare-fun m!102837 () Bool)

(assert (=> b!95136 m!102837))

(assert (=> d!24601 d!25007))

(declare-fun d!25009 () Bool)

(assert (=> d!25009 (= (getValueByKey!147 lt!46842 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!47309 () Unit!2822)

(assert (=> d!25009 (= lt!47309 (choose!578 lt!46842 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun e!62080 () Bool)

(assert (=> d!25009 e!62080))

(declare-fun res!48130 () Bool)

(assert (=> d!25009 (=> (not res!48130) (not e!62080))))

(assert (=> d!25009 (= res!48130 (isStrictlySorted!297 lt!46842))))

(assert (=> d!25009 (= (lemmaContainsTupThenGetReturnValue!65 lt!46842 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47309)))

(declare-fun b!95138 () Bool)

(declare-fun res!48131 () Bool)

(assert (=> b!95138 (=> (not res!48131) (not e!62080))))

(assert (=> b!95138 (= res!48131 (containsKey!151 lt!46842 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95139 () Bool)

(assert (=> b!95139 (= e!62080 (contains!799 lt!46842 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25009 res!48130) b!95138))

(assert (= (and b!95138 res!48131) b!95139))

(assert (=> d!25009 m!101471))

(declare-fun m!102839 () Bool)

(assert (=> d!25009 m!102839))

(declare-fun m!102841 () Bool)

(assert (=> d!25009 m!102841))

(declare-fun m!102843 () Bool)

(assert (=> b!95138 m!102843))

(declare-fun m!102845 () Bool)

(assert (=> b!95139 m!102845))

(assert (=> d!24601 d!25009))

(declare-fun b!95140 () Bool)

(declare-fun e!62082 () List!1600)

(declare-fun call!9562 () List!1600)

(assert (=> b!95140 (= e!62082 call!9562)))

(declare-fun lt!47310 () List!1600)

(declare-fun b!95141 () Bool)

(declare-fun e!62084 () Bool)

(assert (=> b!95141 (= e!62084 (contains!799 lt!47310 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95142 () Bool)

(declare-fun e!62085 () List!1600)

(assert (=> b!95142 (= e!62085 e!62082)))

(declare-fun c!15948 () Bool)

(assert (=> b!95142 (= c!15948 (and ((_ is Cons!1596) (toList!785 lt!46555)) (= (_1!1177 (h!2188 (toList!785 lt!46555))) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun c!15947 () Bool)

(declare-fun e!62081 () List!1600)

(declare-fun b!95143 () Bool)

(assert (=> b!95143 (= e!62081 (ite c!15948 (t!5506 (toList!785 lt!46555)) (ite c!15947 (Cons!1596 (h!2188 (toList!785 lt!46555)) (t!5506 (toList!785 lt!46555))) Nil!1597)))))

(declare-fun bm!9559 () Bool)

(declare-fun call!9564 () List!1600)

(assert (=> bm!9559 (= call!9562 call!9564)))

(declare-fun c!15949 () Bool)

(declare-fun bm!9560 () Bool)

(assert (=> bm!9560 (= call!9564 ($colon$colon!75 e!62081 (ite c!15949 (h!2188 (toList!785 lt!46555)) (tuple2!2335 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!15946 () Bool)

(assert (=> bm!9560 (= c!15946 c!15949)))

(declare-fun b!95144 () Bool)

(assert (=> b!95144 (= e!62081 (insertStrictlySorted!67 (t!5506 (toList!785 lt!46555)) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95145 () Bool)

(declare-fun e!62083 () List!1600)

(declare-fun call!9563 () List!1600)

(assert (=> b!95145 (= e!62083 call!9563)))

(declare-fun b!95146 () Bool)

(assert (=> b!95146 (= e!62083 call!9563)))

(declare-fun bm!9561 () Bool)

(assert (=> bm!9561 (= call!9563 call!9562)))

(declare-fun b!95147 () Bool)

(assert (=> b!95147 (= c!15947 (and ((_ is Cons!1596) (toList!785 lt!46555)) (bvsgt (_1!1177 (h!2188 (toList!785 lt!46555))) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> b!95147 (= e!62082 e!62083)))

(declare-fun b!95148 () Bool)

(declare-fun res!48133 () Bool)

(assert (=> b!95148 (=> (not res!48133) (not e!62084))))

(assert (=> b!95148 (= res!48133 (containsKey!151 lt!47310 (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun d!25011 () Bool)

(assert (=> d!25011 e!62084))

(declare-fun res!48132 () Bool)

(assert (=> d!25011 (=> (not res!48132) (not e!62084))))

(assert (=> d!25011 (= res!48132 (isStrictlySorted!297 lt!47310))))

(assert (=> d!25011 (= lt!47310 e!62085)))

(assert (=> d!25011 (= c!15949 (and ((_ is Cons!1596) (toList!785 lt!46555)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46555))) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25011 (isStrictlySorted!297 (toList!785 lt!46555))))

(assert (=> d!25011 (= (insertStrictlySorted!67 (toList!785 lt!46555) (_1!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47310)))

(declare-fun b!95149 () Bool)

(assert (=> b!95149 (= e!62085 call!9564)))

(assert (= (and d!25011 c!15949) b!95149))

(assert (= (and d!25011 (not c!15949)) b!95142))

(assert (= (and b!95142 c!15948) b!95140))

(assert (= (and b!95142 (not c!15948)) b!95147))

(assert (= (and b!95147 c!15947) b!95145))

(assert (= (and b!95147 (not c!15947)) b!95146))

(assert (= (or b!95145 b!95146) bm!9561))

(assert (= (or b!95140 bm!9561) bm!9559))

(assert (= (or b!95149 bm!9559) bm!9560))

(assert (= (and bm!9560 c!15946) b!95144))

(assert (= (and bm!9560 (not c!15946)) b!95143))

(assert (= (and d!25011 res!48132) b!95148))

(assert (= (and b!95148 res!48133) b!95141))

(declare-fun m!102847 () Bool)

(assert (=> b!95148 m!102847))

(declare-fun m!102849 () Bool)

(assert (=> bm!9560 m!102849))

(declare-fun m!102851 () Bool)

(assert (=> b!95144 m!102851))

(declare-fun m!102853 () Bool)

(assert (=> d!25011 m!102853))

(declare-fun m!102855 () Bool)

(assert (=> d!25011 m!102855))

(declare-fun m!102857 () Bool)

(assert (=> b!95141 m!102857))

(assert (=> d!24601 d!25011))

(declare-fun bm!9562 () Bool)

(declare-fun call!9565 () Bool)

(assert (=> bm!9562 (= call!9565 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!95150 () Bool)

(declare-fun e!62086 () Bool)

(declare-fun e!62087 () Bool)

(assert (=> b!95150 (= e!62086 e!62087)))

(declare-fun lt!47313 () (_ BitVec 64))

(assert (=> b!95150 (= lt!47313 (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!47312 () Unit!2822)

(assert (=> b!95150 (= lt!47312 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 newMap!16) lt!47313 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!95150 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!47313 #b00000000000000000000000000000000)))

(declare-fun lt!47311 () Unit!2822)

(assert (=> b!95150 (= lt!47311 lt!47312)))

(declare-fun res!48135 () Bool)

(assert (=> b!95150 (= res!48135 (= (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4118 newMap!16) (mask!6511 newMap!16)) (Found!261 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!95150 (=> (not res!48135) (not e!62087))))

(declare-fun d!25013 () Bool)

(declare-fun res!48134 () Bool)

(declare-fun e!62088 () Bool)

(assert (=> d!25013 (=> res!48134 e!62088)))

(assert (=> d!25013 (= res!48134 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!25013 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 newMap!16) (mask!6511 newMap!16)) e!62088)))

(declare-fun b!95151 () Bool)

(assert (=> b!95151 (= e!62088 e!62086)))

(declare-fun c!15950 () Bool)

(assert (=> b!95151 (= c!15950 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!95152 () Bool)

(assert (=> b!95152 (= e!62087 call!9565)))

(declare-fun b!95153 () Bool)

(assert (=> b!95153 (= e!62086 call!9565)))

(assert (= (and d!25013 (not res!48134)) b!95151))

(assert (= (and b!95151 c!15950) b!95150))

(assert (= (and b!95151 (not c!15950)) b!95153))

(assert (= (and b!95150 res!48135) b!95152))

(assert (= (or b!95152 b!95153) bm!9562))

(declare-fun m!102859 () Bool)

(assert (=> bm!9562 m!102859))

(assert (=> b!95150 m!101967))

(declare-fun m!102861 () Bool)

(assert (=> b!95150 m!102861))

(declare-fun m!102863 () Bool)

(assert (=> b!95150 m!102863))

(assert (=> b!95150 m!101967))

(declare-fun m!102865 () Bool)

(assert (=> b!95150 m!102865))

(assert (=> b!95151 m!101967))

(assert (=> b!95151 m!101967))

(assert (=> b!95151 m!101971))

(assert (=> bm!9487 d!25013))

(declare-fun d!25015 () Bool)

(declare-fun e!62089 () Bool)

(assert (=> d!25015 e!62089))

(declare-fun res!48136 () Bool)

(assert (=> d!25015 (=> res!48136 e!62089)))

(declare-fun lt!47316 () Bool)

(assert (=> d!25015 (= res!48136 (not lt!47316))))

(declare-fun lt!47314 () Bool)

(assert (=> d!25015 (= lt!47316 lt!47314)))

(declare-fun lt!47315 () Unit!2822)

(declare-fun e!62090 () Unit!2822)

(assert (=> d!25015 (= lt!47315 e!62090)))

(declare-fun c!15951 () Bool)

(assert (=> d!25015 (= c!15951 lt!47314)))

(assert (=> d!25015 (= lt!47314 (containsKey!151 (toList!785 lt!46929) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25015 (= (contains!797 lt!46929 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47316)))

(declare-fun b!95154 () Bool)

(declare-fun lt!47317 () Unit!2822)

(assert (=> b!95154 (= e!62090 lt!47317)))

(assert (=> b!95154 (= lt!47317 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46929) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95154 (isDefined!101 (getValueByKey!147 (toList!785 lt!46929) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95155 () Bool)

(declare-fun Unit!2865 () Unit!2822)

(assert (=> b!95155 (= e!62090 Unit!2865)))

(declare-fun b!95156 () Bool)

(assert (=> b!95156 (= e!62089 (isDefined!101 (getValueByKey!147 (toList!785 lt!46929) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25015 c!15951) b!95154))

(assert (= (and d!25015 (not c!15951)) b!95155))

(assert (= (and d!25015 (not res!48136)) b!95156))

(assert (=> d!25015 m!101279))

(declare-fun m!102867 () Bool)

(assert (=> d!25015 m!102867))

(assert (=> b!95154 m!101279))

(declare-fun m!102869 () Bool)

(assert (=> b!95154 m!102869))

(assert (=> b!95154 m!101279))

(declare-fun m!102871 () Bool)

(assert (=> b!95154 m!102871))

(assert (=> b!95154 m!102871))

(declare-fun m!102873 () Bool)

(assert (=> b!95154 m!102873))

(assert (=> b!95156 m!101279))

(assert (=> b!95156 m!102871))

(assert (=> b!95156 m!102871))

(assert (=> b!95156 m!102873))

(assert (=> b!94623 d!25015))

(assert (=> bm!9484 d!24627))

(declare-fun d!25017 () Bool)

(assert (=> d!25017 (= (apply!90 lt!46665 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46665) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3908 () Bool)

(assert (= bs!3908 d!25017))

(assert (=> bs!3908 m!102335))

(assert (=> bs!3908 m!102335))

(declare-fun m!102875 () Bool)

(assert (=> bs!3908 m!102875))

(assert (=> b!94318 d!25017))

(assert (=> d!24669 d!24533))

(declare-fun d!25019 () Bool)

(declare-fun isEmpty!357 (List!1600) Bool)

(assert (=> d!25019 (= (isEmpty!356 lt!46731) (isEmpty!357 (toList!785 lt!46731)))))

(declare-fun bs!3909 () Bool)

(assert (= bs!3909 d!25019))

(declare-fun m!102877 () Bool)

(assert (=> bs!3909 m!102877))

(assert (=> b!94395 d!25019))

(declare-fun lt!47318 () Bool)

(declare-fun d!25021 () Bool)

(assert (=> d!25021 (= lt!47318 (select (content!97 (toList!785 lt!46845)) (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun e!62092 () Bool)

(assert (=> d!25021 (= lt!47318 e!62092)))

(declare-fun res!48137 () Bool)

(assert (=> d!25021 (=> (not res!48137) (not e!62092))))

(assert (=> d!25021 (= res!48137 ((_ is Cons!1596) (toList!785 lt!46845)))))

(assert (=> d!25021 (= (contains!799 (toList!785 lt!46845) (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!47318)))

(declare-fun b!95157 () Bool)

(declare-fun e!62091 () Bool)

(assert (=> b!95157 (= e!62092 e!62091)))

(declare-fun res!48138 () Bool)

(assert (=> b!95157 (=> res!48138 e!62091)))

(assert (=> b!95157 (= res!48138 (= (h!2188 (toList!785 lt!46845)) (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!95158 () Bool)

(assert (=> b!95158 (= e!62091 (contains!799 (t!5506 (toList!785 lt!46845)) (tuple2!2335 lt!46554 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!25021 res!48137) b!95157))

(assert (= (and b!95157 (not res!48138)) b!95158))

(declare-fun m!102879 () Bool)

(assert (=> d!25021 m!102879))

(declare-fun m!102881 () Bool)

(assert (=> d!25021 m!102881))

(declare-fun m!102883 () Bool)

(assert (=> b!95158 m!102883))

(assert (=> b!94482 d!25021))

(declare-fun c!15952 () Bool)

(declare-fun call!9566 () Bool)

(declare-fun bm!9563 () Bool)

(assert (=> bm!9563 (= call!9566 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15952 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!15794 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598))) (ite c!15794 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)))))))

(declare-fun b!95159 () Bool)

(declare-fun e!62094 () Bool)

(assert (=> b!95159 (= e!62094 call!9566)))

(declare-fun b!95160 () Bool)

(declare-fun e!62093 () Bool)

(assert (=> b!95160 (= e!62093 e!62094)))

(assert (=> b!95160 (= c!15952 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!25023 () Bool)

(declare-fun res!48140 () Bool)

(declare-fun e!62095 () Bool)

(assert (=> d!25023 (=> res!48140 e!62095)))

(assert (=> d!25023 (= res!48140 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!25023 (= (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15794 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598))) e!62095)))

(declare-fun b!95161 () Bool)

(assert (=> b!95161 (= e!62095 e!62093)))

(declare-fun res!48139 () Bool)

(assert (=> b!95161 (=> (not res!48139) (not e!62093))))

(declare-fun e!62096 () Bool)

(assert (=> b!95161 (= res!48139 (not e!62096))))

(declare-fun res!48141 () Bool)

(assert (=> b!95161 (=> (not res!48141) (not e!62096))))

(assert (=> b!95161 (= res!48141 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!95162 () Bool)

(assert (=> b!95162 (= e!62096 (contains!798 (ite c!15794 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!95163 () Bool)

(assert (=> b!95163 (= e!62094 call!9566)))

(assert (= (and d!25023 (not res!48140)) b!95161))

(assert (= (and b!95161 res!48141) b!95162))

(assert (= (and b!95161 res!48139) b!95160))

(assert (= (and b!95160 c!15952) b!95159))

(assert (= (and b!95160 (not c!15952)) b!95163))

(assert (= (or b!95159 b!95163) bm!9563))

(declare-fun m!102885 () Bool)

(assert (=> bm!9563 m!102885))

(declare-fun m!102887 () Bool)

(assert (=> bm!9563 m!102887))

(assert (=> b!95160 m!102885))

(assert (=> b!95160 m!102885))

(declare-fun m!102889 () Bool)

(assert (=> b!95160 m!102889))

(assert (=> b!95161 m!102885))

(assert (=> b!95161 m!102885))

(assert (=> b!95161 m!102889))

(assert (=> b!95162 m!102885))

(assert (=> b!95162 m!102885))

(declare-fun m!102891 () Bool)

(assert (=> b!95162 m!102891))

(assert (=> bm!9488 d!25023))

(assert (=> b!94344 d!24689))

(declare-fun d!25025 () Bool)

(declare-fun res!48142 () Bool)

(declare-fun e!62097 () Bool)

(assert (=> d!25025 (=> res!48142 e!62097)))

(assert (=> d!25025 (= res!48142 (= (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!25025 (= (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!62097)))

(declare-fun b!95164 () Bool)

(declare-fun e!62098 () Bool)

(assert (=> b!95164 (= e!62097 e!62098)))

(declare-fun res!48143 () Bool)

(assert (=> b!95164 (=> (not res!48143) (not e!62098))))

(assert (=> b!95164 (= res!48143 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!95165 () Bool)

(assert (=> b!95165 (= e!62098 (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25025 (not res!48142)) b!95164))

(assert (= (and b!95164 res!48143) b!95165))

(declare-fun m!102893 () Bool)

(assert (=> d!25025 m!102893))

(assert (=> b!95165 m!101017))

(declare-fun m!102895 () Bool)

(assert (=> b!95165 m!102895))

(assert (=> b!94660 d!25025))

(assert (=> b!94615 d!24689))

(declare-fun d!25027 () Bool)

(declare-fun e!62099 () Bool)

(assert (=> d!25027 e!62099))

(declare-fun res!48144 () Bool)

(assert (=> d!25027 (=> res!48144 e!62099)))

(declare-fun lt!47321 () Bool)

(assert (=> d!25027 (= res!48144 (not lt!47321))))

(declare-fun lt!47319 () Bool)

(assert (=> d!25027 (= lt!47321 lt!47319)))

(declare-fun lt!47320 () Unit!2822)

(declare-fun e!62100 () Unit!2822)

(assert (=> d!25027 (= lt!47320 e!62100)))

(declare-fun c!15953 () Bool)

(assert (=> d!25027 (= c!15953 lt!47319)))

(assert (=> d!25027 (= lt!47319 (containsKey!151 (toList!785 lt!46665) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25027 (= (contains!797 lt!46665 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47321)))

(declare-fun b!95166 () Bool)

(declare-fun lt!47322 () Unit!2822)

(assert (=> b!95166 (= e!62100 lt!47322)))

(assert (=> b!95166 (= lt!47322 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46665) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95166 (isDefined!101 (getValueByKey!147 (toList!785 lt!46665) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95167 () Bool)

(declare-fun Unit!2866 () Unit!2822)

(assert (=> b!95167 (= e!62100 Unit!2866)))

(declare-fun b!95168 () Bool)

(assert (=> b!95168 (= e!62099 (isDefined!101 (getValueByKey!147 (toList!785 lt!46665) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25027 c!15953) b!95166))

(assert (= (and d!25027 (not c!15953)) b!95167))

(assert (= (and d!25027 (not res!48144)) b!95168))

(declare-fun m!102897 () Bool)

(assert (=> d!25027 m!102897))

(declare-fun m!102899 () Bool)

(assert (=> b!95166 m!102899))

(declare-fun m!102901 () Bool)

(assert (=> b!95166 m!102901))

(assert (=> b!95166 m!102901))

(declare-fun m!102903 () Bool)

(assert (=> b!95166 m!102903))

(assert (=> b!95168 m!102901))

(assert (=> b!95168 m!102901))

(assert (=> b!95168 m!102903))

(assert (=> bm!9455 d!25027))

(declare-fun d!25029 () Bool)

(declare-fun lt!47323 () Bool)

(assert (=> d!25029 (= lt!47323 (select (content!97 (toList!785 lt!46853)) (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun e!62102 () Bool)

(assert (=> d!25029 (= lt!47323 e!62102)))

(declare-fun res!48145 () Bool)

(assert (=> d!25029 (=> (not res!48145) (not e!62102))))

(assert (=> d!25029 (= res!48145 ((_ is Cons!1596) (toList!785 lt!46853)))))

(assert (=> d!25029 (= (contains!799 (toList!785 lt!46853) (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!47323)))

(declare-fun b!95169 () Bool)

(declare-fun e!62101 () Bool)

(assert (=> b!95169 (= e!62102 e!62101)))

(declare-fun res!48146 () Bool)

(assert (=> b!95169 (=> res!48146 e!62101)))

(assert (=> b!95169 (= res!48146 (= (h!2188 (toList!785 lt!46853)) (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!95170 () Bool)

(assert (=> b!95170 (= e!62101 (contains!799 (t!5506 (toList!785 lt!46853)) (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!25029 res!48145) b!95169))

(assert (= (and b!95169 (not res!48146)) b!95170))

(declare-fun m!102905 () Bool)

(assert (=> d!25029 m!102905))

(declare-fun m!102907 () Bool)

(assert (=> d!25029 m!102907))

(declare-fun m!102909 () Bool)

(assert (=> b!95170 m!102909))

(assert (=> b!94486 d!25029))

(declare-fun d!25031 () Bool)

(assert (=> d!25031 (= (apply!90 lt!46951 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46951) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3910 () Bool)

(assert (= bs!3910 d!25031))

(assert (=> bs!3910 m!102659))

(assert (=> bs!3910 m!102659))

(declare-fun m!102911 () Bool)

(assert (=> bs!3910 m!102911))

(assert (=> b!94636 d!25031))

(declare-fun lt!47324 () Bool)

(declare-fun d!25033 () Bool)

(assert (=> d!25033 (= lt!47324 (select (content!96 (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!62103 () Bool)

(assert (=> d!25033 (= lt!47324 e!62103)))

(declare-fun res!48148 () Bool)

(assert (=> d!25033 (=> (not res!48148) (not e!62103))))

(assert (=> d!25033 (= res!48148 ((_ is Cons!1597) (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)))))

(assert (=> d!25033 (= (contains!798 (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!47324)))

(declare-fun b!95171 () Bool)

(declare-fun e!62104 () Bool)

(assert (=> b!95171 (= e!62103 e!62104)))

(declare-fun res!48147 () Bool)

(assert (=> b!95171 (=> res!48147 e!62104)))

(assert (=> b!95171 (= res!48147 (= (h!2189 (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!95172 () Bool)

(assert (=> b!95172 (= e!62104 (contains!798 (t!5507 (ite c!15666 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) Nil!1598) Nil!1598)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!25033 res!48148) b!95171))

(assert (= (and b!95171 (not res!48147)) b!95172))

(declare-fun m!102913 () Bool)

(assert (=> d!25033 m!102913))

(assert (=> d!25033 m!101587))

(declare-fun m!102915 () Bool)

(assert (=> d!25033 m!102915))

(assert (=> b!95172 m!101587))

(declare-fun m!102917 () Bool)

(assert (=> b!95172 m!102917))

(assert (=> b!94564 d!25033))

(assert (=> d!24677 d!24705))

(declare-fun b!95173 () Bool)

(declare-fun e!62110 () ListLongMap!1539)

(assert (=> b!95173 (= e!62110 (ListLongMap!1540 Nil!1597))))

(declare-fun b!95174 () Bool)

(declare-fun e!62107 () Bool)

(declare-fun lt!47326 () ListLongMap!1539)

(assert (=> b!95174 (= e!62107 (isEmpty!356 lt!47326))))

(declare-fun b!95175 () Bool)

(assert (=> b!95175 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> b!95175 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2245 (_values!2419 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun e!62111 () Bool)

(assert (=> b!95175 (= e!62111 (= (apply!90 lt!47326 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95176 () Bool)

(declare-fun res!48152 () Bool)

(declare-fun e!62109 () Bool)

(assert (=> b!95176 (=> (not res!48152) (not e!62109))))

(assert (=> b!95176 (= res!48152 (not (contains!797 lt!47326 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95177 () Bool)

(declare-fun e!62108 () Bool)

(assert (=> b!95177 (= e!62108 e!62111)))

(assert (=> b!95177 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun res!48149 () Bool)

(assert (=> b!95177 (= res!48149 (contains!797 lt!47326 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!95177 (=> (not res!48149) (not e!62111))))

(declare-fun b!95178 () Bool)

(declare-fun lt!47328 () Unit!2822)

(declare-fun lt!47330 () Unit!2822)

(assert (=> b!95178 (= lt!47328 lt!47330)))

(declare-fun lt!47331 () ListLongMap!1539)

(declare-fun lt!47325 () (_ BitVec 64))

(declare-fun lt!47327 () V!3131)

(declare-fun lt!47329 () (_ BitVec 64))

(assert (=> b!95178 (not (contains!797 (+!136 lt!47331 (tuple2!2335 lt!47329 lt!47327)) lt!47325))))

(assert (=> b!95178 (= lt!47330 (addStillNotContains!40 lt!47331 lt!47329 lt!47327 lt!47325))))

(assert (=> b!95178 (= lt!47325 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!95178 (= lt!47327 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!95178 (= lt!47329 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!9567 () ListLongMap!1539)

(assert (=> b!95178 (= lt!47331 call!9567)))

(declare-fun e!62105 () ListLongMap!1539)

(assert (=> b!95178 (= e!62105 (+!136 call!9567 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95179 () Bool)

(assert (=> b!95179 (= e!62109 e!62108)))

(declare-fun c!15955 () Bool)

(declare-fun e!62106 () Bool)

(assert (=> b!95179 (= c!15955 e!62106)))

(declare-fun res!48151 () Bool)

(assert (=> b!95179 (=> (not res!48151) (not e!62106))))

(assert (=> b!95179 (= res!48151 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!95180 () Bool)

(assert (=> b!95180 (= e!62107 (= lt!47326 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!95181 () Bool)

(assert (=> b!95181 (= e!62105 call!9567)))

(declare-fun b!95182 () Bool)

(assert (=> b!95182 (= e!62108 e!62107)))

(declare-fun c!15957 () Bool)

(assert (=> b!95182 (= c!15957 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun bm!9564 () Bool)

(assert (=> bm!9564 (= call!9567 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!95183 () Bool)

(assert (=> b!95183 (= e!62110 e!62105)))

(declare-fun c!15954 () Bool)

(assert (=> b!95183 (= c!15954 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun d!25035 () Bool)

(assert (=> d!25035 e!62109))

(declare-fun res!48150 () Bool)

(assert (=> d!25035 (=> (not res!48150) (not e!62109))))

(assert (=> d!25035 (= res!48150 (not (contains!797 lt!47326 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25035 (= lt!47326 e!62110)))

(declare-fun c!15956 () Bool)

(assert (=> d!25035 (= c!15956 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!25035 (validMask!0 (mask!6511 (v!2763 (underlying!330 thiss!992))))))

(assert (=> d!25035 (= (getCurrentListMapNoExtraKeys!100 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (_values!2419 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992))) (extraKeys!2265 (v!2763 (underlying!330 thiss!992))) (zeroValue!2323 (v!2763 (underlying!330 thiss!992))) (minValue!2323 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992)))) lt!47326)))

(declare-fun b!95184 () Bool)

(assert (=> b!95184 (= e!62106 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!95184 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!25035 c!15956) b!95173))

(assert (= (and d!25035 (not c!15956)) b!95183))

(assert (= (and b!95183 c!15954) b!95178))

(assert (= (and b!95183 (not c!15954)) b!95181))

(assert (= (or b!95178 b!95181) bm!9564))

(assert (= (and d!25035 res!48150) b!95176))

(assert (= (and b!95176 res!48152) b!95179))

(assert (= (and b!95179 res!48151) b!95184))

(assert (= (and b!95179 c!15955) b!95177))

(assert (= (and b!95179 (not c!15955)) b!95182))

(assert (= (and b!95177 res!48149) b!95175))

(assert (= (and b!95182 c!15957) b!95180))

(assert (= (and b!95182 (not c!15957)) b!95174))

(declare-fun b_lambda!4201 () Bool)

(assert (=> (not b_lambda!4201) (not b!95175)))

(assert (=> b!95175 t!5503))

(declare-fun b_and!5817 () Bool)

(assert (= b_and!5813 (and (=> t!5503 result!3191) b_and!5817)))

(assert (=> b!95175 t!5505))

(declare-fun b_and!5819 () Bool)

(assert (= b_and!5815 (and (=> t!5505 result!3195) b_and!5819)))

(declare-fun b_lambda!4203 () Bool)

(assert (=> (not b_lambda!4203) (not b!95178)))

(assert (=> b!95178 t!5503))

(declare-fun b_and!5821 () Bool)

(assert (= b_and!5817 (and (=> t!5503 result!3191) b_and!5821)))

(assert (=> b!95178 t!5505))

(declare-fun b_and!5823 () Bool)

(assert (= b_and!5819 (and (=> t!5505 result!3195) b_and!5823)))

(declare-fun m!102919 () Bool)

(assert (=> b!95176 m!102919))

(assert (=> b!95183 m!101841))

(assert (=> b!95183 m!101841))

(declare-fun m!102921 () Bool)

(assert (=> b!95183 m!102921))

(assert (=> b!95184 m!101841))

(assert (=> b!95184 m!101841))

(assert (=> b!95184 m!102921))

(declare-fun m!102923 () Bool)

(assert (=> d!25035 m!102923))

(assert (=> d!25035 m!101027))

(assert (=> b!95177 m!101841))

(assert (=> b!95177 m!101841))

(declare-fun m!102925 () Bool)

(assert (=> b!95177 m!102925))

(declare-fun m!102927 () Bool)

(assert (=> b!95174 m!102927))

(declare-fun m!102929 () Bool)

(assert (=> b!95180 m!102929))

(assert (=> b!95175 m!101841))

(declare-fun m!102931 () Bool)

(assert (=> b!95175 m!102931))

(declare-fun m!102933 () Bool)

(assert (=> b!95175 m!102933))

(assert (=> b!95175 m!102933))

(assert (=> b!95175 m!101013))

(declare-fun m!102935 () Bool)

(assert (=> b!95175 m!102935))

(assert (=> b!95175 m!101013))

(assert (=> b!95175 m!101841))

(assert (=> bm!9564 m!102929))

(declare-fun m!102937 () Bool)

(assert (=> b!95178 m!102937))

(assert (=> b!95178 m!102933))

(declare-fun m!102939 () Bool)

(assert (=> b!95178 m!102939))

(assert (=> b!95178 m!102933))

(assert (=> b!95178 m!101013))

(assert (=> b!95178 m!102935))

(assert (=> b!95178 m!101013))

(declare-fun m!102941 () Bool)

(assert (=> b!95178 m!102941))

(assert (=> b!95178 m!102939))

(declare-fun m!102943 () Bool)

(assert (=> b!95178 m!102943))

(assert (=> b!95178 m!101841))

(assert (=> bm!9466 d!25035))

(assert (=> bm!9476 d!24627))

(assert (=> d!24559 d!24561))

(assert (=> d!24559 d!24563))

(declare-fun d!25037 () Bool)

(assert (=> d!25037 (isDefined!101 (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!25037 true))

(declare-fun _$12!338 () Unit!2822)

(assert (=> d!25037 (= (choose!568 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) _$12!338)))

(declare-fun bs!3911 () Bool)

(assert (= bs!3911 d!25037))

(assert (=> bs!3911 m!101017))

(assert (=> bs!3911 m!101183))

(assert (=> bs!3911 m!101183))

(assert (=> bs!3911 m!101185))

(assert (=> d!24559 d!25037))

(declare-fun d!25039 () Bool)

(declare-fun res!48157 () Bool)

(declare-fun e!62116 () Bool)

(assert (=> d!25039 (=> res!48157 e!62116)))

(assert (=> d!25039 (= res!48157 (or ((_ is Nil!1597) (toList!785 lt!46466)) ((_ is Nil!1597) (t!5506 (toList!785 lt!46466)))))))

(assert (=> d!25039 (= (isStrictlySorted!297 (toList!785 lt!46466)) e!62116)))

(declare-fun b!95189 () Bool)

(declare-fun e!62117 () Bool)

(assert (=> b!95189 (= e!62116 e!62117)))

(declare-fun res!48158 () Bool)

(assert (=> b!95189 (=> (not res!48158) (not e!62117))))

(assert (=> b!95189 (= res!48158 (bvslt (_1!1177 (h!2188 (toList!785 lt!46466))) (_1!1177 (h!2188 (t!5506 (toList!785 lt!46466))))))))

(declare-fun b!95190 () Bool)

(assert (=> b!95190 (= e!62117 (isStrictlySorted!297 (t!5506 (toList!785 lt!46466))))))

(assert (= (and d!25039 (not res!48157)) b!95189))

(assert (= (and b!95189 res!48158) b!95190))

(declare-fun m!102945 () Bool)

(assert (=> b!95190 m!102945))

(assert (=> d!24559 d!25039))

(assert (=> b!94630 d!24529))

(declare-fun bm!9565 () Bool)

(declare-fun call!9568 () Bool)

(assert (=> bm!9565 (= call!9568 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992)))))))

(declare-fun b!95191 () Bool)

(declare-fun e!62118 () Bool)

(declare-fun e!62119 () Bool)

(assert (=> b!95191 (= e!62118 e!62119)))

(declare-fun lt!47334 () (_ BitVec 64))

(assert (=> b!95191 (= lt!47334 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!47333 () Unit!2822)

(assert (=> b!95191 (= lt!47333 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) lt!47334 #b00000000000000000000000000000000))))

(assert (=> b!95191 (arrayContainsKey!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) lt!47334 #b00000000000000000000000000000000)))

(declare-fun lt!47332 () Unit!2822)

(assert (=> b!95191 (= lt!47332 lt!47333)))

(declare-fun res!48160 () Bool)

(assert (=> b!95191 (= res!48160 (= (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000) (_keys!4118 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992)))) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!95191 (=> (not res!48160) (not e!62119))))

(declare-fun d!25041 () Bool)

(declare-fun res!48159 () Bool)

(declare-fun e!62120 () Bool)

(assert (=> d!25041 (=> res!48159 e!62120)))

(assert (=> d!25041 (= res!48159 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!25041 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (mask!6511 (v!2763 (underlying!330 thiss!992)))) e!62120)))

(declare-fun b!95192 () Bool)

(assert (=> b!95192 (= e!62120 e!62118)))

(declare-fun c!15958 () Bool)

(assert (=> b!95192 (= c!15958 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95193 () Bool)

(assert (=> b!95193 (= e!62119 call!9568)))

(declare-fun b!95194 () Bool)

(assert (=> b!95194 (= e!62118 call!9568)))

(assert (= (and d!25041 (not res!48159)) b!95192))

(assert (= (and b!95192 c!15958) b!95191))

(assert (= (and b!95192 (not c!15958)) b!95194))

(assert (= (and b!95191 res!48160) b!95193))

(assert (= (or b!95193 b!95194) bm!9565))

(declare-fun m!102947 () Bool)

(assert (=> bm!9565 m!102947))

(assert (=> b!95191 m!102641))

(declare-fun m!102949 () Bool)

(assert (=> b!95191 m!102949))

(declare-fun m!102951 () Bool)

(assert (=> b!95191 m!102951))

(assert (=> b!95191 m!102641))

(declare-fun m!102953 () Bool)

(assert (=> b!95191 m!102953))

(assert (=> b!95192 m!102641))

(assert (=> b!95192 m!102641))

(assert (=> b!95192 m!102643))

(assert (=> b!94593 d!25041))

(declare-fun b!95197 () Bool)

(declare-fun e!62122 () Option!153)

(assert (=> b!95197 (= e!62122 (getValueByKey!147 (t!5506 (toList!785 lt!46917)) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95195 () Bool)

(declare-fun e!62121 () Option!153)

(assert (=> b!95195 (= e!62121 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46917)))))))

(declare-fun b!95198 () Bool)

(assert (=> b!95198 (= e!62122 None!151)))

(declare-fun b!95196 () Bool)

(assert (=> b!95196 (= e!62121 e!62122)))

(declare-fun c!15960 () Bool)

(assert (=> b!95196 (= c!15960 (and ((_ is Cons!1596) (toList!785 lt!46917)) (not (= (_1!1177 (h!2188 (toList!785 lt!46917))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))))

(declare-fun d!25043 () Bool)

(declare-fun c!15959 () Bool)

(assert (=> d!25043 (= c!15959 (and ((_ is Cons!1596) (toList!785 lt!46917)) (= (_1!1177 (h!2188 (toList!785 lt!46917))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(assert (=> d!25043 (= (getValueByKey!147 (toList!785 lt!46917) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) e!62121)))

(assert (= (and d!25043 c!15959) b!95195))

(assert (= (and d!25043 (not c!15959)) b!95196))

(assert (= (and b!95196 c!15960) b!95197))

(assert (= (and b!95196 (not c!15960)) b!95198))

(declare-fun m!102955 () Bool)

(assert (=> b!95197 m!102955))

(assert (=> b!94590 d!25043))

(declare-fun d!25045 () Bool)

(assert (=> d!25045 (= (get!1283 (getValueByKey!147 (toList!785 lt!46553) lt!46568)) (v!2767 (getValueByKey!147 (toList!785 lt!46553) lt!46568)))))

(assert (=> d!24609 d!25045))

(declare-fun b!95201 () Bool)

(declare-fun e!62124 () Option!153)

(assert (=> b!95201 (= e!62124 (getValueByKey!147 (t!5506 (toList!785 lt!46553)) lt!46568))))

(declare-fun b!95199 () Bool)

(declare-fun e!62123 () Option!153)

(assert (=> b!95199 (= e!62123 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46553)))))))

(declare-fun b!95202 () Bool)

(assert (=> b!95202 (= e!62124 None!151)))

(declare-fun b!95200 () Bool)

(assert (=> b!95200 (= e!62123 e!62124)))

(declare-fun c!15962 () Bool)

(assert (=> b!95200 (= c!15962 (and ((_ is Cons!1596) (toList!785 lt!46553)) (not (= (_1!1177 (h!2188 (toList!785 lt!46553))) lt!46568))))))

(declare-fun d!25047 () Bool)

(declare-fun c!15961 () Bool)

(assert (=> d!25047 (= c!15961 (and ((_ is Cons!1596) (toList!785 lt!46553)) (= (_1!1177 (h!2188 (toList!785 lt!46553))) lt!46568)))))

(assert (=> d!25047 (= (getValueByKey!147 (toList!785 lt!46553) lt!46568) e!62123)))

(assert (= (and d!25047 c!15961) b!95199))

(assert (= (and d!25047 (not c!15961)) b!95200))

(assert (= (and b!95200 c!15962) b!95201))

(assert (= (and b!95200 (not c!15962)) b!95202))

(declare-fun m!102957 () Bool)

(assert (=> b!95201 m!102957))

(assert (=> d!24609 d!25047))

(declare-fun d!25049 () Bool)

(assert (=> d!25049 (= (apply!90 lt!46665 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46665) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3912 () Bool)

(assert (= bs!3912 d!25049))

(assert (=> bs!3912 m!102901))

(assert (=> bs!3912 m!102901))

(declare-fun m!102959 () Bool)

(assert (=> bs!3912 m!102959))

(assert (=> b!94323 d!25049))

(assert (=> b!94576 d!24689))

(declare-fun d!25051 () Bool)

(assert (=> d!25051 (contains!797 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))

(declare-fun lt!47337 () Unit!2822)

(declare-fun choose!580 (array!4200 array!4202 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2822)

(assert (=> d!25051 (= lt!47337 (choose!580 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!25051 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25051 (= (lemmaArrayContainsKeyThenInListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47337)))

(declare-fun bs!3913 () Bool)

(assert (= bs!3913 d!25051))

(assert (=> bs!3913 m!101123))

(assert (=> bs!3913 m!101123))

(assert (=> bs!3913 m!101017))

(assert (=> bs!3913 m!101393))

(assert (=> bs!3913 m!101017))

(declare-fun m!102961 () Bool)

(assert (=> bs!3913 m!102961))

(assert (=> bs!3913 m!101265))

(assert (=> b!94447 d!25051))

(assert (=> b!94447 d!24867))

(assert (=> b!94447 d!24677))

(assert (=> b!94357 d!24689))

(declare-fun d!25053 () Bool)

(declare-fun e!62125 () Bool)

(assert (=> d!25053 e!62125))

(declare-fun res!48161 () Bool)

(assert (=> d!25053 (=> res!48161 e!62125)))

(declare-fun lt!47340 () Bool)

(assert (=> d!25053 (= res!48161 (not lt!47340))))

(declare-fun lt!47338 () Bool)

(assert (=> d!25053 (= lt!47340 lt!47338)))

(declare-fun lt!47339 () Unit!2822)

(declare-fun e!62126 () Unit!2822)

(assert (=> d!25053 (= lt!47339 e!62126)))

(declare-fun c!15963 () Bool)

(assert (=> d!25053 (= c!15963 lt!47338)))

(assert (=> d!25053 (= lt!47338 (containsKey!151 (toList!785 (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))) lt!46960))))

(assert (=> d!25053 (= (contains!797 (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))) lt!46960) lt!47340)))

(declare-fun b!95203 () Bool)

(declare-fun lt!47341 () Unit!2822)

(assert (=> b!95203 (= e!62126 lt!47341)))

(assert (=> b!95203 (= lt!47341 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))) lt!46960))))

(assert (=> b!95203 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))) lt!46960))))

(declare-fun b!95204 () Bool)

(declare-fun Unit!2867 () Unit!2822)

(assert (=> b!95204 (= e!62126 Unit!2867)))

(declare-fun b!95205 () Bool)

(assert (=> b!95205 (= e!62125 (isDefined!101 (getValueByKey!147 (toList!785 (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))) lt!46960)))))

(assert (= (and d!25053 c!15963) b!95203))

(assert (= (and d!25053 (not c!15963)) b!95204))

(assert (= (and d!25053 (not res!48161)) b!95205))

(declare-fun m!102963 () Bool)

(assert (=> d!25053 m!102963))

(declare-fun m!102965 () Bool)

(assert (=> b!95203 m!102965))

(declare-fun m!102967 () Bool)

(assert (=> b!95203 m!102967))

(assert (=> b!95203 m!102967))

(declare-fun m!102969 () Bool)

(assert (=> b!95203 m!102969))

(assert (=> b!95205 m!102967))

(assert (=> b!95205 m!102967))

(assert (=> b!95205 m!102969))

(assert (=> b!94649 d!25053))

(declare-fun d!25055 () Bool)

(declare-fun e!62127 () Bool)

(assert (=> d!25055 e!62127))

(declare-fun res!48162 () Bool)

(assert (=> d!25055 (=> (not res!48162) (not e!62127))))

(declare-fun lt!47345 () ListLongMap!1539)

(assert (=> d!25055 (= res!48162 (contains!797 lt!47345 (_1!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16)))))))

(declare-fun lt!47342 () List!1600)

(assert (=> d!25055 (= lt!47345 (ListLongMap!1540 lt!47342))))

(declare-fun lt!47343 () Unit!2822)

(declare-fun lt!47344 () Unit!2822)

(assert (=> d!25055 (= lt!47343 lt!47344)))

(assert (=> d!25055 (= (getValueByKey!147 lt!47342 (_1!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16)))))))

(assert (=> d!25055 (= lt!47344 (lemmaContainsTupThenGetReturnValue!65 lt!47342 (_1!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16)))))))

(assert (=> d!25055 (= lt!47342 (insertStrictlySorted!67 (toList!785 lt!46954) (_1!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16)))))))

(assert (=> d!25055 (= (+!136 lt!46954 (tuple2!2335 lt!46969 (minValue!2323 newMap!16))) lt!47345)))

(declare-fun b!95206 () Bool)

(declare-fun res!48163 () Bool)

(assert (=> b!95206 (=> (not res!48163) (not e!62127))))

(assert (=> b!95206 (= res!48163 (= (getValueByKey!147 (toList!785 lt!47345) (_1!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46969 (minValue!2323 newMap!16))))))))

(declare-fun b!95207 () Bool)

(assert (=> b!95207 (= e!62127 (contains!799 (toList!785 lt!47345) (tuple2!2335 lt!46969 (minValue!2323 newMap!16))))))

(assert (= (and d!25055 res!48162) b!95206))

(assert (= (and b!95206 res!48163) b!95207))

(declare-fun m!102971 () Bool)

(assert (=> d!25055 m!102971))

(declare-fun m!102973 () Bool)

(assert (=> d!25055 m!102973))

(declare-fun m!102975 () Bool)

(assert (=> d!25055 m!102975))

(declare-fun m!102977 () Bool)

(assert (=> d!25055 m!102977))

(declare-fun m!102979 () Bool)

(assert (=> b!95206 m!102979))

(declare-fun m!102981 () Bool)

(assert (=> b!95207 m!102981))

(assert (=> b!94649 d!25055))

(declare-fun d!25057 () Bool)

(declare-fun e!62128 () Bool)

(assert (=> d!25057 e!62128))

(declare-fun res!48164 () Bool)

(assert (=> d!25057 (=> (not res!48164) (not e!62128))))

(declare-fun lt!47349 () ListLongMap!1539)

(assert (=> d!25057 (= res!48164 (contains!797 lt!47349 (_1!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47346 () List!1600)

(assert (=> d!25057 (= lt!47349 (ListLongMap!1540 lt!47346))))

(declare-fun lt!47347 () Unit!2822)

(declare-fun lt!47348 () Unit!2822)

(assert (=> d!25057 (= lt!47347 lt!47348)))

(assert (=> d!25057 (= (getValueByKey!147 lt!47346 (_1!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16)))))))

(assert (=> d!25057 (= lt!47348 (lemmaContainsTupThenGetReturnValue!65 lt!47346 (_1!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16)))))))

(assert (=> d!25057 (= lt!47346 (insertStrictlySorted!67 (toList!785 lt!46957) (_1!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16)))))))

(assert (=> d!25057 (= (+!136 lt!46957 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))) lt!47349)))

(declare-fun b!95208 () Bool)

(declare-fun res!48165 () Bool)

(assert (=> b!95208 (=> (not res!48165) (not e!62128))))

(assert (=> b!95208 (= res!48165 (= (getValueByKey!147 (toList!785 lt!47349) (_1!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))))))))

(declare-fun b!95209 () Bool)

(assert (=> b!95209 (= e!62128 (contains!799 (toList!785 lt!47349) (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))))))

(assert (= (and d!25057 res!48164) b!95208))

(assert (= (and b!95208 res!48165) b!95209))

(declare-fun m!102983 () Bool)

(assert (=> d!25057 m!102983))

(declare-fun m!102985 () Bool)

(assert (=> d!25057 m!102985))

(declare-fun m!102987 () Bool)

(assert (=> d!25057 m!102987))

(declare-fun m!102989 () Bool)

(assert (=> d!25057 m!102989))

(declare-fun m!102991 () Bool)

(assert (=> b!95208 m!102991))

(declare-fun m!102993 () Bool)

(assert (=> b!95209 m!102993))

(assert (=> b!94649 d!25057))

(declare-fun d!25059 () Bool)

(declare-fun e!62129 () Bool)

(assert (=> d!25059 e!62129))

(declare-fun res!48166 () Bool)

(assert (=> d!25059 (=> (not res!48166) (not e!62129))))

(declare-fun lt!47353 () ListLongMap!1539)

(assert (=> d!25059 (= res!48166 (contains!797 lt!47353 (_1!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47350 () List!1600)

(assert (=> d!25059 (= lt!47353 (ListLongMap!1540 lt!47350))))

(declare-fun lt!47351 () Unit!2822)

(declare-fun lt!47352 () Unit!2822)

(assert (=> d!25059 (= lt!47351 lt!47352)))

(assert (=> d!25059 (= (getValueByKey!147 lt!47350 (_1!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))))))

(assert (=> d!25059 (= lt!47352 (lemmaContainsTupThenGetReturnValue!65 lt!47350 (_1!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))))))

(assert (=> d!25059 (= lt!47350 (insertStrictlySorted!67 (toList!785 lt!46959) (_1!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))))))

(assert (=> d!25059 (= (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))) lt!47353)))

(declare-fun b!95210 () Bool)

(declare-fun res!48167 () Bool)

(assert (=> b!95210 (=> (not res!48167) (not e!62129))))

(assert (=> b!95210 (= res!48167 (= (getValueByKey!147 (toList!785 lt!47353) (_1!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))))))))

(declare-fun b!95211 () Bool)

(assert (=> b!95211 (= e!62129 (contains!799 (toList!785 lt!47353) (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))))))

(assert (= (and d!25059 res!48166) b!95210))

(assert (= (and b!95210 res!48167) b!95211))

(declare-fun m!102995 () Bool)

(assert (=> d!25059 m!102995))

(declare-fun m!102997 () Bool)

(assert (=> d!25059 m!102997))

(declare-fun m!102999 () Bool)

(assert (=> d!25059 m!102999))

(declare-fun m!103001 () Bool)

(assert (=> d!25059 m!103001))

(declare-fun m!103003 () Bool)

(assert (=> b!95210 m!103003))

(declare-fun m!103005 () Bool)

(assert (=> b!95211 m!103005))

(assert (=> b!94649 d!25059))

(declare-fun d!25061 () Bool)

(assert (=> d!25061 (= (apply!90 (+!136 lt!46957 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))) lt!46972) (apply!90 lt!46957 lt!46972))))

(declare-fun lt!47354 () Unit!2822)

(assert (=> d!25061 (= lt!47354 (choose!572 lt!46957 lt!46965 (zeroValue!2323 newMap!16) lt!46972))))

(declare-fun e!62130 () Bool)

(assert (=> d!25061 e!62130))

(declare-fun res!48168 () Bool)

(assert (=> d!25061 (=> (not res!48168) (not e!62130))))

(assert (=> d!25061 (= res!48168 (contains!797 lt!46957 lt!46972))))

(assert (=> d!25061 (= (addApplyDifferent!66 lt!46957 lt!46965 (zeroValue!2323 newMap!16) lt!46972) lt!47354)))

(declare-fun b!95212 () Bool)

(assert (=> b!95212 (= e!62130 (not (= lt!46972 lt!46965)))))

(assert (= (and d!25061 res!48168) b!95212))

(declare-fun m!103007 () Bool)

(assert (=> d!25061 m!103007))

(assert (=> d!25061 m!101795))

(assert (=> d!25061 m!101797))

(declare-fun m!103009 () Bool)

(assert (=> d!25061 m!103009))

(assert (=> d!25061 m!101803))

(assert (=> d!25061 m!101795))

(assert (=> b!94649 d!25061))

(declare-fun d!25063 () Bool)

(assert (=> d!25063 (= (apply!90 lt!46957 lt!46972) (get!1283 (getValueByKey!147 (toList!785 lt!46957) lt!46972)))))

(declare-fun bs!3914 () Bool)

(assert (= bs!3914 d!25063))

(declare-fun m!103011 () Bool)

(assert (=> bs!3914 m!103011))

(assert (=> bs!3914 m!103011))

(declare-fun m!103013 () Bool)

(assert (=> bs!3914 m!103013))

(assert (=> b!94649 d!25063))

(declare-fun d!25065 () Bool)

(assert (=> d!25065 (= (apply!90 (+!136 lt!46952 (tuple2!2335 lt!46964 (minValue!2323 newMap!16))) lt!46962) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46952 (tuple2!2335 lt!46964 (minValue!2323 newMap!16)))) lt!46962)))))

(declare-fun bs!3915 () Bool)

(assert (= bs!3915 d!25065))

(declare-fun m!103015 () Bool)

(assert (=> bs!3915 m!103015))

(assert (=> bs!3915 m!103015))

(declare-fun m!103017 () Bool)

(assert (=> bs!3915 m!103017))

(assert (=> b!94649 d!25065))

(assert (=> b!94649 d!24991))

(declare-fun d!25067 () Bool)

(assert (=> d!25067 (= (apply!90 lt!46952 lt!46962) (get!1283 (getValueByKey!147 (toList!785 lt!46952) lt!46962)))))

(declare-fun bs!3916 () Bool)

(assert (= bs!3916 d!25067))

(declare-fun m!103019 () Bool)

(assert (=> bs!3916 m!103019))

(assert (=> bs!3916 m!103019))

(declare-fun m!103021 () Bool)

(assert (=> bs!3916 m!103021))

(assert (=> b!94649 d!25067))

(declare-fun d!25069 () Bool)

(assert (=> d!25069 (= (apply!90 (+!136 lt!46957 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16))) lt!46972) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46957 (tuple2!2335 lt!46965 (zeroValue!2323 newMap!16)))) lt!46972)))))

(declare-fun bs!3917 () Bool)

(assert (= bs!3917 d!25069))

(declare-fun m!103023 () Bool)

(assert (=> bs!3917 m!103023))

(assert (=> bs!3917 m!103023))

(declare-fun m!103025 () Bool)

(assert (=> bs!3917 m!103025))

(assert (=> b!94649 d!25069))

(declare-fun d!25071 () Bool)

(assert (=> d!25071 (contains!797 (+!136 lt!46959 (tuple2!2335 lt!46958 (zeroValue!2323 newMap!16))) lt!46960)))

(declare-fun lt!47355 () Unit!2822)

(assert (=> d!25071 (= lt!47355 (choose!573 lt!46959 lt!46958 (zeroValue!2323 newMap!16) lt!46960))))

(assert (=> d!25071 (contains!797 lt!46959 lt!46960)))

(assert (=> d!25071 (= (addStillContains!66 lt!46959 lt!46958 (zeroValue!2323 newMap!16) lt!46960) lt!47355)))

(declare-fun bs!3918 () Bool)

(assert (= bs!3918 d!25071))

(assert (=> bs!3918 m!101791))

(assert (=> bs!3918 m!101791))

(assert (=> bs!3918 m!101793))

(declare-fun m!103027 () Bool)

(assert (=> bs!3918 m!103027))

(declare-fun m!103029 () Bool)

(assert (=> bs!3918 m!103029))

(assert (=> b!94649 d!25071))

(declare-fun d!25073 () Bool)

(assert (=> d!25073 (= (apply!90 (+!136 lt!46954 (tuple2!2335 lt!46969 (minValue!2323 newMap!16))) lt!46953) (apply!90 lt!46954 lt!46953))))

(declare-fun lt!47356 () Unit!2822)

(assert (=> d!25073 (= lt!47356 (choose!572 lt!46954 lt!46969 (minValue!2323 newMap!16) lt!46953))))

(declare-fun e!62131 () Bool)

(assert (=> d!25073 e!62131))

(declare-fun res!48169 () Bool)

(assert (=> d!25073 (=> (not res!48169) (not e!62131))))

(assert (=> d!25073 (= res!48169 (contains!797 lt!46954 lt!46953))))

(assert (=> d!25073 (= (addApplyDifferent!66 lt!46954 lt!46969 (minValue!2323 newMap!16) lt!46953) lt!47356)))

(declare-fun b!95213 () Bool)

(assert (=> b!95213 (= e!62131 (not (= lt!46953 lt!46969)))))

(assert (= (and d!25073 res!48169) b!95213))

(declare-fun m!103031 () Bool)

(assert (=> d!25073 m!103031))

(assert (=> d!25073 m!101813))

(assert (=> d!25073 m!101815))

(declare-fun m!103033 () Bool)

(assert (=> d!25073 m!103033))

(assert (=> d!25073 m!101811))

(assert (=> d!25073 m!101813))

(assert (=> b!94649 d!25073))

(declare-fun d!25075 () Bool)

(assert (=> d!25075 (= (apply!90 (+!136 lt!46954 (tuple2!2335 lt!46969 (minValue!2323 newMap!16))) lt!46953) (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46954 (tuple2!2335 lt!46969 (minValue!2323 newMap!16)))) lt!46953)))))

(declare-fun bs!3919 () Bool)

(assert (= bs!3919 d!25075))

(declare-fun m!103035 () Bool)

(assert (=> bs!3919 m!103035))

(assert (=> bs!3919 m!103035))

(declare-fun m!103037 () Bool)

(assert (=> bs!3919 m!103037))

(assert (=> b!94649 d!25075))

(declare-fun d!25077 () Bool)

(assert (=> d!25077 (= (apply!90 lt!46954 lt!46953) (get!1283 (getValueByKey!147 (toList!785 lt!46954) lt!46953)))))

(declare-fun bs!3920 () Bool)

(assert (= bs!3920 d!25077))

(declare-fun m!103039 () Bool)

(assert (=> bs!3920 m!103039))

(assert (=> bs!3920 m!103039))

(declare-fun m!103041 () Bool)

(assert (=> bs!3920 m!103041))

(assert (=> b!94649 d!25077))

(declare-fun d!25079 () Bool)

(assert (=> d!25079 (= (apply!90 (+!136 lt!46952 (tuple2!2335 lt!46964 (minValue!2323 newMap!16))) lt!46962) (apply!90 lt!46952 lt!46962))))

(declare-fun lt!47357 () Unit!2822)

(assert (=> d!25079 (= lt!47357 (choose!572 lt!46952 lt!46964 (minValue!2323 newMap!16) lt!46962))))

(declare-fun e!62132 () Bool)

(assert (=> d!25079 e!62132))

(declare-fun res!48170 () Bool)

(assert (=> d!25079 (=> (not res!48170) (not e!62132))))

(assert (=> d!25079 (= res!48170 (contains!797 lt!46952 lt!46962))))

(assert (=> d!25079 (= (addApplyDifferent!66 lt!46952 lt!46964 (minValue!2323 newMap!16) lt!46962) lt!47357)))

(declare-fun b!95214 () Bool)

(assert (=> b!95214 (= e!62132 (not (= lt!46962 lt!46964)))))

(assert (= (and d!25079 res!48170) b!95214))

(declare-fun m!103043 () Bool)

(assert (=> d!25079 m!103043))

(assert (=> d!25079 m!101799))

(assert (=> d!25079 m!101805))

(declare-fun m!103045 () Bool)

(assert (=> d!25079 m!103045))

(assert (=> d!25079 m!101801))

(assert (=> d!25079 m!101799))

(assert (=> b!94649 d!25079))

(declare-fun d!25081 () Bool)

(declare-fun e!62133 () Bool)

(assert (=> d!25081 e!62133))

(declare-fun res!48171 () Bool)

(assert (=> d!25081 (=> (not res!48171) (not e!62133))))

(declare-fun lt!47361 () ListLongMap!1539)

(assert (=> d!25081 (= res!48171 (contains!797 lt!47361 (_1!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16)))))))

(declare-fun lt!47358 () List!1600)

(assert (=> d!25081 (= lt!47361 (ListLongMap!1540 lt!47358))))

(declare-fun lt!47359 () Unit!2822)

(declare-fun lt!47360 () Unit!2822)

(assert (=> d!25081 (= lt!47359 lt!47360)))

(assert (=> d!25081 (= (getValueByKey!147 lt!47358 (_1!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16)))))))

(assert (=> d!25081 (= lt!47360 (lemmaContainsTupThenGetReturnValue!65 lt!47358 (_1!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16)))))))

(assert (=> d!25081 (= lt!47358 (insertStrictlySorted!67 (toList!785 lt!46952) (_1!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16)))))))

(assert (=> d!25081 (= (+!136 lt!46952 (tuple2!2335 lt!46964 (minValue!2323 newMap!16))) lt!47361)))

(declare-fun b!95215 () Bool)

(declare-fun res!48172 () Bool)

(assert (=> b!95215 (=> (not res!48172) (not e!62133))))

(assert (=> b!95215 (= res!48172 (= (getValueByKey!147 (toList!785 lt!47361) (_1!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 lt!46964 (minValue!2323 newMap!16))))))))

(declare-fun b!95216 () Bool)

(assert (=> b!95216 (= e!62133 (contains!799 (toList!785 lt!47361) (tuple2!2335 lt!46964 (minValue!2323 newMap!16))))))

(assert (= (and d!25081 res!48171) b!95215))

(assert (= (and b!95215 res!48172) b!95216))

(declare-fun m!103047 () Bool)

(assert (=> d!25081 m!103047))

(declare-fun m!103049 () Bool)

(assert (=> d!25081 m!103049))

(declare-fun m!103051 () Bool)

(assert (=> d!25081 m!103051))

(declare-fun m!103053 () Bool)

(assert (=> d!25081 m!103053))

(declare-fun m!103055 () Bool)

(assert (=> b!95215 m!103055))

(declare-fun m!103057 () Bool)

(assert (=> b!95216 m!103057))

(assert (=> b!94649 d!25081))

(declare-fun b!95219 () Bool)

(declare-fun e!62135 () Option!153)

(assert (=> b!95219 (= e!62135 (getValueByKey!147 (t!5506 (toList!785 lt!46868)) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95217 () Bool)

(declare-fun e!62134 () Option!153)

(assert (=> b!95217 (= e!62134 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46868)))))))

(declare-fun b!95220 () Bool)

(assert (=> b!95220 (= e!62135 None!151)))

(declare-fun b!95218 () Bool)

(assert (=> b!95218 (= e!62134 e!62135)))

(declare-fun c!15965 () Bool)

(assert (=> b!95218 (= c!15965 (and ((_ is Cons!1596) (toList!785 lt!46868)) (not (= (_1!1177 (h!2188 (toList!785 lt!46868))) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun d!25083 () Bool)

(declare-fun c!15964 () Bool)

(assert (=> d!25083 (= c!15964 (and ((_ is Cons!1596) (toList!785 lt!46868)) (= (_1!1177 (h!2188 (toList!785 lt!46868))) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25083 (= (getValueByKey!147 (toList!785 lt!46868) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62134)))

(assert (= (and d!25083 c!15964) b!95217))

(assert (= (and d!25083 (not c!15964)) b!95218))

(assert (= (and b!95218 c!15965) b!95219))

(assert (= (and b!95218 (not c!15965)) b!95220))

(declare-fun m!103059 () Bool)

(assert (=> b!95219 m!103059))

(assert (=> b!94496 d!25083))

(declare-fun d!25085 () Bool)

(declare-fun e!62136 () Bool)

(assert (=> d!25085 e!62136))

(declare-fun res!48173 () Bool)

(assert (=> d!25085 (=> res!48173 e!62136)))

(declare-fun lt!47364 () Bool)

(assert (=> d!25085 (= res!48173 (not lt!47364))))

(declare-fun lt!47362 () Bool)

(assert (=> d!25085 (= lt!47364 lt!47362)))

(declare-fun lt!47363 () Unit!2822)

(declare-fun e!62137 () Unit!2822)

(assert (=> d!25085 (= lt!47363 e!62137)))

(declare-fun c!15966 () Bool)

(assert (=> d!25085 (= c!15966 lt!47362)))

(assert (=> d!25085 (= lt!47362 (containsKey!151 (toList!785 lt!46665) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25085 (= (contains!797 lt!46665 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47364)))

(declare-fun b!95221 () Bool)

(declare-fun lt!47365 () Unit!2822)

(assert (=> b!95221 (= e!62137 lt!47365)))

(assert (=> b!95221 (= lt!47365 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46665) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95221 (isDefined!101 (getValueByKey!147 (toList!785 lt!46665) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95222 () Bool)

(declare-fun Unit!2868 () Unit!2822)

(assert (=> b!95222 (= e!62137 Unit!2868)))

(declare-fun b!95223 () Bool)

(assert (=> b!95223 (= e!62136 (isDefined!101 (getValueByKey!147 (toList!785 lt!46665) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25085 c!15966) b!95221))

(assert (= (and d!25085 (not c!15966)) b!95222))

(assert (= (and d!25085 (not res!48173)) b!95223))

(assert (=> d!25085 m!101279))

(declare-fun m!103061 () Bool)

(assert (=> d!25085 m!103061))

(assert (=> b!95221 m!101279))

(declare-fun m!103063 () Bool)

(assert (=> b!95221 m!103063))

(assert (=> b!95221 m!101279))

(assert (=> b!95221 m!101955))

(assert (=> b!95221 m!101955))

(declare-fun m!103065 () Bool)

(assert (=> b!95221 m!103065))

(assert (=> b!95223 m!101279))

(assert (=> b!95223 m!101955))

(assert (=> b!95223 m!101955))

(assert (=> b!95223 m!103065))

(assert (=> b!94332 d!25085))

(declare-fun d!25087 () Bool)

(declare-fun res!48174 () Bool)

(declare-fun e!62138 () Bool)

(assert (=> d!25087 (=> res!48174 e!62138)))

(assert (=> d!25087 (= res!48174 (and ((_ is Cons!1596) (toList!785 lt!46547)) (= (_1!1177 (h!2188 (toList!785 lt!46547))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25087 (= (containsKey!151 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000) e!62138)))

(declare-fun b!95224 () Bool)

(declare-fun e!62139 () Bool)

(assert (=> b!95224 (= e!62138 e!62139)))

(declare-fun res!48175 () Bool)

(assert (=> b!95224 (=> (not res!48175) (not e!62139))))

(assert (=> b!95224 (= res!48175 (and (or (not ((_ is Cons!1596) (toList!785 lt!46547))) (bvsle (_1!1177 (h!2188 (toList!785 lt!46547))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1596) (toList!785 lt!46547)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46547))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95225 () Bool)

(assert (=> b!95225 (= e!62139 (containsKey!151 (t!5506 (toList!785 lt!46547)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25087 (not res!48174)) b!95224))

(assert (= (and b!95224 res!48175) b!95225))

(declare-fun m!103067 () Bool)

(assert (=> b!95225 m!103067))

(assert (=> d!24649 d!25087))

(declare-fun d!25089 () Bool)

(declare-fun e!62140 () Bool)

(assert (=> d!25089 e!62140))

(declare-fun res!48176 () Bool)

(assert (=> d!25089 (=> res!48176 e!62140)))

(declare-fun lt!47368 () Bool)

(assert (=> d!25089 (= res!48176 (not lt!47368))))

(declare-fun lt!47366 () Bool)

(assert (=> d!25089 (= lt!47368 lt!47366)))

(declare-fun lt!47367 () Unit!2822)

(declare-fun e!62141 () Unit!2822)

(assert (=> d!25089 (= lt!47367 e!62141)))

(declare-fun c!15967 () Bool)

(assert (=> d!25089 (= c!15967 lt!47366)))

(assert (=> d!25089 (= lt!47366 (containsKey!151 (toList!785 lt!46917) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25089 (= (contains!797 lt!46917 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!47368)))

(declare-fun b!95226 () Bool)

(declare-fun lt!47369 () Unit!2822)

(assert (=> b!95226 (= e!62141 lt!47369)))

(assert (=> b!95226 (= lt!47369 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46917) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> b!95226 (isDefined!101 (getValueByKey!147 (toList!785 lt!46917) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95227 () Bool)

(declare-fun Unit!2869 () Unit!2822)

(assert (=> b!95227 (= e!62141 Unit!2869)))

(declare-fun b!95228 () Bool)

(assert (=> b!95228 (= e!62140 (isDefined!101 (getValueByKey!147 (toList!785 lt!46917) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(assert (= (and d!25089 c!15967) b!95226))

(assert (= (and d!25089 (not c!15967)) b!95227))

(assert (= (and d!25089 (not res!48176)) b!95228))

(declare-fun m!103069 () Bool)

(assert (=> d!25089 m!103069))

(declare-fun m!103071 () Bool)

(assert (=> b!95226 m!103071))

(assert (=> b!95226 m!101663))

(assert (=> b!95226 m!101663))

(declare-fun m!103073 () Bool)

(assert (=> b!95226 m!103073))

(assert (=> b!95228 m!101663))

(assert (=> b!95228 m!101663))

(assert (=> b!95228 m!103073))

(assert (=> d!24651 d!25089))

(declare-fun e!62143 () Option!153)

(declare-fun b!95231 () Bool)

(assert (=> b!95231 (= e!62143 (getValueByKey!147 (t!5506 lt!46914) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95229 () Bool)

(declare-fun e!62142 () Option!153)

(assert (=> b!95229 (= e!62142 (Some!152 (_2!1177 (h!2188 lt!46914))))))

(declare-fun b!95232 () Bool)

(assert (=> b!95232 (= e!62143 None!151)))

(declare-fun b!95230 () Bool)

(assert (=> b!95230 (= e!62142 e!62143)))

(declare-fun c!15969 () Bool)

(assert (=> b!95230 (= c!15969 (and ((_ is Cons!1596) lt!46914) (not (= (_1!1177 (h!2188 lt!46914)) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))))

(declare-fun c!15968 () Bool)

(declare-fun d!25091 () Bool)

(assert (=> d!25091 (= c!15968 (and ((_ is Cons!1596) lt!46914) (= (_1!1177 (h!2188 lt!46914)) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(assert (=> d!25091 (= (getValueByKey!147 lt!46914 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) e!62142)))

(assert (= (and d!25091 c!15968) b!95229))

(assert (= (and d!25091 (not c!15968)) b!95230))

(assert (= (and b!95230 c!15969) b!95231))

(assert (= (and b!95230 (not c!15969)) b!95232))

(declare-fun m!103075 () Bool)

(assert (=> b!95231 m!103075))

(assert (=> d!24651 d!25091))

(declare-fun d!25093 () Bool)

(assert (=> d!25093 (= (getValueByKey!147 lt!46914 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) (Some!152 (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun lt!47370 () Unit!2822)

(assert (=> d!25093 (= lt!47370 (choose!578 lt!46914 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun e!62144 () Bool)

(assert (=> d!25093 e!62144))

(declare-fun res!48177 () Bool)

(assert (=> d!25093 (=> (not res!48177) (not e!62144))))

(assert (=> d!25093 (= res!48177 (isStrictlySorted!297 lt!46914))))

(assert (=> d!25093 (= (lemmaContainsTupThenGetReturnValue!65 lt!46914 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!47370)))

(declare-fun b!95233 () Bool)

(declare-fun res!48178 () Bool)

(assert (=> b!95233 (=> (not res!48178) (not e!62144))))

(assert (=> b!95233 (= res!48178 (containsKey!151 lt!46914 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95234 () Bool)

(assert (=> b!95234 (= e!62144 (contains!799 lt!46914 (tuple2!2335 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(assert (= (and d!25093 res!48177) b!95233))

(assert (= (and b!95233 res!48178) b!95234))

(assert (=> d!25093 m!101657))

(declare-fun m!103077 () Bool)

(assert (=> d!25093 m!103077))

(declare-fun m!103079 () Bool)

(assert (=> d!25093 m!103079))

(declare-fun m!103081 () Bool)

(assert (=> b!95233 m!103081))

(declare-fun m!103083 () Bool)

(assert (=> b!95234 m!103083))

(assert (=> d!24651 d!25093))

(declare-fun b!95235 () Bool)

(declare-fun e!62146 () List!1600)

(declare-fun call!9569 () List!1600)

(assert (=> b!95235 (= e!62146 call!9569)))

(declare-fun e!62148 () Bool)

(declare-fun b!95236 () Bool)

(declare-fun lt!47371 () List!1600)

(assert (=> b!95236 (= e!62148 (contains!799 lt!47371 (tuple2!2335 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun b!95237 () Bool)

(declare-fun e!62149 () List!1600)

(assert (=> b!95237 (= e!62149 e!62146)))

(declare-fun c!15972 () Bool)

(assert (=> b!95237 (= c!15972 (and ((_ is Cons!1596) (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)))) (= (_1!1177 (h!2188 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380))))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun b!95238 () Bool)

(declare-fun c!15971 () Bool)

(declare-fun e!62145 () List!1600)

(assert (=> b!95238 (= e!62145 (ite c!15972 (t!5506 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)))) (ite c!15971 (Cons!1596 (h!2188 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)))) (t!5506 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380))))) Nil!1597)))))

(declare-fun bm!9566 () Bool)

(declare-fun call!9571 () List!1600)

(assert (=> bm!9566 (= call!9569 call!9571)))

(declare-fun bm!9567 () Bool)

(declare-fun c!15973 () Bool)

(assert (=> bm!9567 (= call!9571 ($colon$colon!75 e!62145 (ite c!15973 (h!2188 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)))) (tuple2!2335 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))))

(declare-fun c!15970 () Bool)

(assert (=> bm!9567 (= c!15970 c!15973)))

(declare-fun b!95239 () Bool)

(assert (=> b!95239 (= e!62145 (insertStrictlySorted!67 (t!5506 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95240 () Bool)

(declare-fun e!62147 () List!1600)

(declare-fun call!9570 () List!1600)

(assert (=> b!95240 (= e!62147 call!9570)))

(declare-fun b!95241 () Bool)

(assert (=> b!95241 (= e!62147 call!9570)))

(declare-fun bm!9568 () Bool)

(assert (=> bm!9568 (= call!9570 call!9569)))

(declare-fun b!95242 () Bool)

(assert (=> b!95242 (= c!15971 (and ((_ is Cons!1596) (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)))) (bvsgt (_1!1177 (h!2188 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380))))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(assert (=> b!95242 (= e!62146 e!62147)))

(declare-fun b!95243 () Bool)

(declare-fun res!48180 () Bool)

(assert (=> b!95243 (=> (not res!48180) (not e!62148))))

(assert (=> b!95243 (= res!48180 (containsKey!151 lt!47371 (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun d!25095 () Bool)

(assert (=> d!25095 e!62148))

(declare-fun res!48179 () Bool)

(assert (=> d!25095 (=> (not res!48179) (not e!62148))))

(assert (=> d!25095 (= res!48179 (isStrictlySorted!297 lt!47371))))

(assert (=> d!25095 (= lt!47371 e!62149)))

(assert (=> d!25095 (= c!15973 (and ((_ is Cons!1596) (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380)))) (bvslt (_1!1177 (h!2188 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380))))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(assert (=> d!25095 (isStrictlySorted!297 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380))))))

(assert (=> d!25095 (= (insertStrictlySorted!67 (toList!785 (ite c!15683 call!9378 (ite c!15682 call!9377 call!9380))) (_1!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (_2!1177 (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!47371)))

(declare-fun b!95244 () Bool)

(assert (=> b!95244 (= e!62149 call!9571)))

(assert (= (and d!25095 c!15973) b!95244))

(assert (= (and d!25095 (not c!15973)) b!95237))

(assert (= (and b!95237 c!15972) b!95235))

(assert (= (and b!95237 (not c!15972)) b!95242))

(assert (= (and b!95242 c!15971) b!95240))

(assert (= (and b!95242 (not c!15971)) b!95241))

(assert (= (or b!95240 b!95241) bm!9568))

(assert (= (or b!95235 bm!9568) bm!9566))

(assert (= (or b!95244 bm!9566) bm!9567))

(assert (= (and bm!9567 c!15970) b!95239))

(assert (= (and bm!9567 (not c!15970)) b!95238))

(assert (= (and d!25095 res!48179) b!95243))

(assert (= (and b!95243 res!48180) b!95236))

(declare-fun m!103085 () Bool)

(assert (=> b!95243 m!103085))

(declare-fun m!103087 () Bool)

(assert (=> bm!9567 m!103087))

(declare-fun m!103089 () Bool)

(assert (=> b!95239 m!103089))

(declare-fun m!103091 () Bool)

(assert (=> d!25095 m!103091))

(declare-fun m!103093 () Bool)

(assert (=> d!25095 m!103093))

(declare-fun m!103095 () Bool)

(assert (=> b!95236 m!103095))

(assert (=> d!24651 d!25095))

(assert (=> b!94442 d!24633))

(declare-fun d!25097 () Bool)

(declare-fun e!62150 () Bool)

(assert (=> d!25097 e!62150))

(declare-fun res!48181 () Bool)

(assert (=> d!25097 (=> res!48181 e!62150)))

(declare-fun lt!47374 () Bool)

(assert (=> d!25097 (= res!48181 (not lt!47374))))

(declare-fun lt!47372 () Bool)

(assert (=> d!25097 (= lt!47374 lt!47372)))

(declare-fun lt!47373 () Unit!2822)

(declare-fun e!62151 () Unit!2822)

(assert (=> d!25097 (= lt!47373 e!62151)))

(declare-fun c!15974 () Bool)

(assert (=> d!25097 (= c!15974 lt!47372)))

(assert (=> d!25097 (= lt!47372 (containsKey!151 (toList!785 lt!46951) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25097 (= (contains!797 lt!46951 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47374)))

(declare-fun b!95245 () Bool)

(declare-fun lt!47375 () Unit!2822)

(assert (=> b!95245 (= e!62151 lt!47375)))

(assert (=> b!95245 (= lt!47375 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46951) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95245 (isDefined!101 (getValueByKey!147 (toList!785 lt!46951) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95246 () Bool)

(declare-fun Unit!2870 () Unit!2822)

(assert (=> b!95246 (= e!62151 Unit!2870)))

(declare-fun b!95247 () Bool)

(assert (=> b!95247 (= e!62150 (isDefined!101 (getValueByKey!147 (toList!785 lt!46951) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25097 c!15974) b!95245))

(assert (= (and d!25097 (not c!15974)) b!95246))

(assert (= (and d!25097 (not res!48181)) b!95247))

(declare-fun m!103097 () Bool)

(assert (=> d!25097 m!103097))

(declare-fun m!103099 () Bool)

(assert (=> b!95245 m!103099))

(declare-fun m!103101 () Bool)

(assert (=> b!95245 m!103101))

(assert (=> b!95245 m!103101))

(declare-fun m!103103 () Bool)

(assert (=> b!95245 m!103103))

(assert (=> b!95247 m!103101))

(assert (=> b!95247 m!103101))

(assert (=> b!95247 m!103103))

(assert (=> bm!9505 d!25097))

(declare-fun d!25099 () Bool)

(assert (=> d!25099 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46887 #b00000000000000000000000000000000)))

(declare-fun lt!47376 () Unit!2822)

(assert (=> d!25099 (= lt!47376 (choose!13 (_keys!4118 newMap!16) lt!46887 #b00000000000000000000000000000000))))

(assert (=> d!25099 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!25099 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 newMap!16) lt!46887 #b00000000000000000000000000000000) lt!47376)))

(declare-fun bs!3921 () Bool)

(assert (= bs!3921 d!25099))

(assert (=> bs!3921 m!101583))

(declare-fun m!103105 () Bool)

(assert (=> bs!3921 m!103105))

(assert (=> b!94557 d!25099))

(declare-fun d!25101 () Bool)

(declare-fun res!48182 () Bool)

(declare-fun e!62152 () Bool)

(assert (=> d!25101 (=> res!48182 e!62152)))

(assert (=> d!25101 (= res!48182 (= (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) lt!46887))))

(assert (=> d!25101 (= (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46887 #b00000000000000000000000000000000) e!62152)))

(declare-fun b!95248 () Bool)

(declare-fun e!62153 () Bool)

(assert (=> b!95248 (= e!62152 e!62153)))

(declare-fun res!48183 () Bool)

(assert (=> b!95248 (=> (not res!48183) (not e!62153))))

(assert (=> b!95248 (= res!48183 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95249 () Bool)

(assert (=> b!95249 (= e!62153 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46887 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25101 (not res!48182)) b!95248))

(assert (= (and b!95248 res!48183) b!95249))

(assert (=> d!25101 m!101279))

(declare-fun m!103107 () Bool)

(assert (=> b!95249 m!103107))

(assert (=> b!94557 d!25101))

(declare-fun b!95250 () Bool)

(declare-fun e!62155 () SeekEntryResult!261)

(declare-fun lt!47379 () SeekEntryResult!261)

(assert (=> b!95250 (= e!62155 (MissingZero!261 (index!3187 lt!47379)))))

(declare-fun b!95251 () Bool)

(declare-fun e!62156 () SeekEntryResult!261)

(assert (=> b!95251 (= e!62156 (Found!261 (index!3187 lt!47379)))))

(declare-fun b!95252 () Bool)

(declare-fun c!15977 () Bool)

(declare-fun lt!47377 () (_ BitVec 64))

(assert (=> b!95252 (= c!15977 (= lt!47377 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95252 (= e!62156 e!62155)))

(declare-fun b!95253 () Bool)

(declare-fun e!62154 () SeekEntryResult!261)

(assert (=> b!95253 (= e!62154 Undefined!261)))

(declare-fun b!95254 () Bool)

(assert (=> b!95254 (= e!62154 e!62156)))

(assert (=> b!95254 (= lt!47377 (select (arr!1996 (_keys!4118 newMap!16)) (index!3187 lt!47379)))))

(declare-fun c!15975 () Bool)

(assert (=> b!95254 (= c!15975 (= lt!47377 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!25103 () Bool)

(declare-fun lt!47378 () SeekEntryResult!261)

(assert (=> d!25103 (and (or ((_ is Undefined!261) lt!47378) (not ((_ is Found!261) lt!47378)) (and (bvsge (index!3186 lt!47378) #b00000000000000000000000000000000) (bvslt (index!3186 lt!47378) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!47378) ((_ is Found!261) lt!47378) (not ((_ is MissingZero!261) lt!47378)) (and (bvsge (index!3185 lt!47378) #b00000000000000000000000000000000) (bvslt (index!3185 lt!47378) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!47378) ((_ is Found!261) lt!47378) ((_ is MissingZero!261) lt!47378) (not ((_ is MissingVacant!261) lt!47378)) (and (bvsge (index!3188 lt!47378) #b00000000000000000000000000000000) (bvslt (index!3188 lt!47378) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!47378) (ite ((_ is Found!261) lt!47378) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!47378)) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!261) lt!47378) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3185 lt!47378)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!261) lt!47378) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!47378)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25103 (= lt!47378 e!62154)))

(declare-fun c!15976 () Bool)

(assert (=> d!25103 (= c!15976 (and ((_ is Intermediate!261) lt!47379) (undefined!1073 lt!47379)))))

(assert (=> d!25103 (= lt!47379 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (mask!6511 newMap!16)) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!25103 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25103 (= (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!47378)))

(declare-fun b!95255 () Bool)

(assert (=> b!95255 (= e!62155 (seekKeyOrZeroReturnVacant!0 (x!12665 lt!47379) (index!3187 lt!47379) (index!3187 lt!47379) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (= (and d!25103 c!15976) b!95253))

(assert (= (and d!25103 (not c!15976)) b!95254))

(assert (= (and b!95254 c!15975) b!95251))

(assert (= (and b!95254 (not c!15975)) b!95252))

(assert (= (and b!95252 c!15977) b!95250))

(assert (= (and b!95252 (not c!15977)) b!95255))

(declare-fun m!103109 () Bool)

(assert (=> b!95254 m!103109))

(declare-fun m!103111 () Bool)

(assert (=> d!25103 m!103111))

(declare-fun m!103113 () Bool)

(assert (=> d!25103 m!103113))

(declare-fun m!103115 () Bool)

(assert (=> d!25103 m!103115))

(declare-fun m!103117 () Bool)

(assert (=> d!25103 m!103117))

(assert (=> d!25103 m!101279))

(declare-fun m!103119 () Bool)

(assert (=> d!25103 m!103119))

(assert (=> d!25103 m!101265))

(assert (=> d!25103 m!101279))

(assert (=> d!25103 m!103117))

(assert (=> b!95255 m!101279))

(declare-fun m!103121 () Bool)

(assert (=> b!95255 m!103121))

(assert (=> b!94557 d!25103))

(declare-fun d!25105 () Bool)

(assert (=> d!25105 (= (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46568)) (v!2767 (getValueByKey!147 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46568)))))

(assert (=> d!24625 d!25105))

(declare-fun b!95258 () Bool)

(declare-fun e!62158 () Option!153)

(assert (=> b!95258 (= e!62158 (getValueByKey!147 (t!5506 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!46568))))

(declare-fun b!95256 () Bool)

(declare-fun e!62157 () Option!153)

(assert (=> b!95256 (= e!62157 (Some!152 (_2!1177 (h!2188 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))))))))

(declare-fun b!95259 () Bool)

(assert (=> b!95259 (= e!62158 None!151)))

(declare-fun b!95257 () Bool)

(assert (=> b!95257 (= e!62157 e!62158)))

(declare-fun c!15979 () Bool)

(assert (=> b!95257 (= c!15979 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) (not (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46568))))))

(declare-fun c!15978 () Bool)

(declare-fun d!25107 () Bool)

(assert (=> d!25107 (= c!15978 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992))))))) (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46568)))))

(assert (=> d!25107 (= (getValueByKey!147 (toList!785 (+!136 lt!46553 (tuple2!2335 lt!46561 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46568) e!62157)))

(assert (= (and d!25107 c!15978) b!95256))

(assert (= (and d!25107 (not c!15978)) b!95257))

(assert (= (and b!95257 c!15979) b!95258))

(assert (= (and b!95257 (not c!15979)) b!95259))

(declare-fun m!103123 () Bool)

(assert (=> b!95258 m!103123))

(assert (=> d!24625 d!25107))

(assert (=> d!24593 d!24591))

(declare-fun d!25109 () Bool)

(declare-fun e!62161 () Bool)

(assert (=> d!25109 e!62161))

(declare-fun res!48188 () Bool)

(assert (=> d!25109 (=> (not res!48188) (not e!62161))))

(declare-fun lt!47382 () SeekEntryResult!261)

(assert (=> d!25109 (= res!48188 ((_ is Found!261) lt!47382))))

(assert (=> d!25109 (= lt!47382 (seekEntryOrOpen!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!25109 true))

(declare-fun _$33!75 () Unit!2822)

(assert (=> d!25109 (= (choose!571 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) _$33!75)))

(declare-fun b!95264 () Bool)

(declare-fun res!48189 () Bool)

(assert (=> b!95264 (=> (not res!48189) (not e!62161))))

(assert (=> b!95264 (= res!48189 (inRange!0 (index!3186 lt!47382) (mask!6511 newMap!16)))))

(declare-fun b!95265 () Bool)

(assert (=> b!95265 (= e!62161 (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!47382)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!25109 res!48188) b!95264))

(assert (= (and b!95264 res!48189) b!95265))

(assert (=> d!25109 m!101017))

(assert (=> d!25109 m!101187))

(declare-fun m!103125 () Bool)

(assert (=> b!95264 m!103125))

(declare-fun m!103127 () Bool)

(assert (=> b!95265 m!103127))

(assert (=> d!24593 d!25109))

(assert (=> d!24593 d!24705))

(declare-fun d!25111 () Bool)

(declare-fun e!62162 () Bool)

(assert (=> d!25111 e!62162))

(declare-fun res!48190 () Bool)

(assert (=> d!25111 (=> (not res!48190) (not e!62162))))

(declare-fun lt!47386 () ListLongMap!1539)

(assert (=> d!25111 (= res!48190 (contains!797 lt!47386 (_1!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47383 () List!1600)

(assert (=> d!25111 (= lt!47386 (ListLongMap!1540 lt!47383))))

(declare-fun lt!47384 () Unit!2822)

(declare-fun lt!47385 () Unit!2822)

(assert (=> d!25111 (= lt!47384 lt!47385)))

(assert (=> d!25111 (= (getValueByKey!147 lt!47383 (_1!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25111 (= lt!47385 (lemmaContainsTupThenGetReturnValue!65 lt!47383 (_1!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25111 (= lt!47383 (insertStrictlySorted!67 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (_1!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25111 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47386)))

(declare-fun b!95266 () Bool)

(declare-fun res!48191 () Bool)

(assert (=> b!95266 (=> (not res!48191) (not e!62162))))

(assert (=> b!95266 (= res!48191 (= (getValueByKey!147 (toList!785 lt!47386) (_1!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95267 () Bool)

(assert (=> b!95267 (= e!62162 (contains!799 (toList!785 lt!47386) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25111 res!48190) b!95266))

(assert (= (and b!95266 res!48191) b!95267))

(declare-fun m!103129 () Bool)

(assert (=> d!25111 m!103129))

(declare-fun m!103131 () Bool)

(assert (=> d!25111 m!103131))

(declare-fun m!103133 () Bool)

(assert (=> d!25111 m!103133))

(declare-fun m!103135 () Bool)

(assert (=> d!25111 m!103135))

(declare-fun m!103137 () Bool)

(assert (=> b!95266 m!103137))

(declare-fun m!103139 () Bool)

(assert (=> b!95267 m!103139))

(assert (=> d!24681 d!25111))

(assert (=> d!24681 d!24677))

(declare-fun d!25113 () Bool)

(assert (=> d!25113 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!25113 true))

(declare-fun _$7!77 () Unit!2822)

(assert (=> d!25113 (= (choose!576 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46640 (zeroValue!2323 newMap!16) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)) _$7!77)))

(declare-fun bs!3922 () Bool)

(assert (= bs!3922 d!25113))

(assert (=> bs!3922 m!101123))

(assert (=> bs!3922 m!101123))

(assert (=> bs!3922 m!101827))

(assert (=> bs!3922 m!101015))

(assert (=> bs!3922 m!101831))

(assert (=> d!24681 d!25113))

(assert (=> d!24681 d!24705))

(declare-fun bm!9569 () Bool)

(declare-fun call!9574 () Bool)

(declare-fun lt!47387 () ListLongMap!1539)

(assert (=> bm!9569 (= call!9574 (contains!797 lt!47387 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95268 () Bool)

(declare-fun e!62170 () ListLongMap!1539)

(declare-fun e!62174 () ListLongMap!1539)

(assert (=> b!95268 (= e!62170 e!62174)))

(declare-fun c!15983 () Bool)

(assert (=> b!95268 (= c!15983 (and (not (= (bvand lt!46640 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46640 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95269 () Bool)

(declare-fun e!62172 () ListLongMap!1539)

(declare-fun call!9576 () ListLongMap!1539)

(assert (=> b!95269 (= e!62172 call!9576)))

(declare-fun b!95270 () Bool)

(declare-fun res!48193 () Bool)

(declare-fun e!62164 () Bool)

(assert (=> b!95270 (=> (not res!48193) (not e!62164))))

(declare-fun e!62165 () Bool)

(assert (=> b!95270 (= res!48193 e!62165)))

(declare-fun res!48196 () Bool)

(assert (=> b!95270 (=> res!48196 e!62165)))

(declare-fun e!62166 () Bool)

(assert (=> b!95270 (= res!48196 (not e!62166))))

(declare-fun res!48199 () Bool)

(assert (=> b!95270 (=> (not res!48199) (not e!62166))))

(assert (=> b!95270 (= res!48199 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95271 () Bool)

(declare-fun call!9577 () ListLongMap!1539)

(assert (=> b!95271 (= e!62170 (+!136 call!9577 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!95273 () Bool)

(declare-fun res!48198 () Bool)

(assert (=> b!95273 (=> (not res!48198) (not e!62164))))

(declare-fun e!62169 () Bool)

(assert (=> b!95273 (= res!48198 e!62169)))

(declare-fun c!15981 () Bool)

(assert (=> b!95273 (= c!15981 (not (= (bvand lt!46640 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95274 () Bool)

(assert (=> b!95274 (= e!62169 (not call!9574))))

(declare-fun b!95275 () Bool)

(declare-fun e!62163 () Bool)

(assert (=> b!95275 (= e!62163 (= (apply!90 lt!47387 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95275 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_values!2419 newMap!16))))))

(assert (=> b!95275 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95276 () Bool)

(assert (=> b!95276 (= e!62174 call!9576)))

(declare-fun b!95277 () Bool)

(declare-fun e!62167 () Bool)

(assert (=> b!95277 (= e!62167 (= (apply!90 lt!47387 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!95278 () Bool)

(declare-fun e!62171 () Bool)

(assert (=> b!95278 (= e!62171 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95279 () Bool)

(assert (=> b!95279 (= e!62166 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9570 () Bool)

(declare-fun call!9573 () ListLongMap!1539)

(assert (=> bm!9570 (= call!9573 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9571 () Bool)

(declare-fun call!9578 () Bool)

(assert (=> bm!9571 (= call!9578 (contains!797 lt!47387 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95280 () Bool)

(declare-fun e!62173 () Unit!2822)

(declare-fun Unit!2871 () Unit!2822)

(assert (=> b!95280 (= e!62173 Unit!2871)))

(declare-fun bm!9572 () Bool)

(declare-fun call!9575 () ListLongMap!1539)

(declare-fun call!9572 () ListLongMap!1539)

(declare-fun c!15984 () Bool)

(assert (=> bm!9572 (= call!9577 (+!136 (ite c!15984 call!9573 (ite c!15983 call!9572 call!9575)) (ite (or c!15984 c!15983) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!95281 () Bool)

(declare-fun e!62168 () Bool)

(assert (=> b!95281 (= e!62164 e!62168)))

(declare-fun c!15985 () Bool)

(assert (=> b!95281 (= c!15985 (not (= (bvand lt!46640 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95282 () Bool)

(declare-fun c!15980 () Bool)

(assert (=> b!95282 (= c!15980 (and (not (= (bvand lt!46640 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46640 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95282 (= e!62174 e!62172)))

(declare-fun b!95283 () Bool)

(assert (=> b!95283 (= e!62168 (not call!9578))))

(declare-fun d!25115 () Bool)

(assert (=> d!25115 e!62164))

(declare-fun res!48194 () Bool)

(assert (=> d!25115 (=> (not res!48194) (not e!62164))))

(assert (=> d!25115 (= res!48194 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!47392 () ListLongMap!1539)

(assert (=> d!25115 (= lt!47387 lt!47392)))

(declare-fun lt!47406 () Unit!2822)

(assert (=> d!25115 (= lt!47406 e!62173)))

(declare-fun c!15982 () Bool)

(assert (=> d!25115 (= c!15982 e!62171)))

(declare-fun res!48200 () Bool)

(assert (=> d!25115 (=> (not res!48200) (not e!62171))))

(assert (=> d!25115 (= res!48200 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!25115 (= lt!47392 e!62170)))

(assert (=> d!25115 (= c!15984 (and (not (= (bvand lt!46640 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46640 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25115 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25115 (= (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47387)))

(declare-fun b!95272 () Bool)

(declare-fun e!62175 () Bool)

(assert (=> b!95272 (= e!62175 (= (apply!90 lt!47387 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95284 () Bool)

(assert (=> b!95284 (= e!62172 call!9575)))

(declare-fun bm!9573 () Bool)

(assert (=> bm!9573 (= call!9575 call!9572)))

(declare-fun b!95285 () Bool)

(declare-fun lt!47403 () Unit!2822)

(assert (=> b!95285 (= e!62173 lt!47403)))

(declare-fun lt!47395 () ListLongMap!1539)

(assert (=> b!95285 (= lt!47395 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47394 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47394 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47396 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47396 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47397 () Unit!2822)

(assert (=> b!95285 (= lt!47397 (addStillContains!66 lt!47395 lt!47394 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47396))))

(assert (=> b!95285 (contains!797 (+!136 lt!47395 (tuple2!2335 lt!47394 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47396)))

(declare-fun lt!47402 () Unit!2822)

(assert (=> b!95285 (= lt!47402 lt!47397)))

(declare-fun lt!47388 () ListLongMap!1539)

(assert (=> b!95285 (= lt!47388 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47400 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47400 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47398 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47398 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47399 () Unit!2822)

(assert (=> b!95285 (= lt!47399 (addApplyDifferent!66 lt!47388 lt!47400 (minValue!2323 newMap!16) lt!47398))))

(assert (=> b!95285 (= (apply!90 (+!136 lt!47388 (tuple2!2335 lt!47400 (minValue!2323 newMap!16))) lt!47398) (apply!90 lt!47388 lt!47398))))

(declare-fun lt!47407 () Unit!2822)

(assert (=> b!95285 (= lt!47407 lt!47399)))

(declare-fun lt!47393 () ListLongMap!1539)

(assert (=> b!95285 (= lt!47393 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47401 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47401 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47408 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47408 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47391 () Unit!2822)

(assert (=> b!95285 (= lt!47391 (addApplyDifferent!66 lt!47393 lt!47401 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47408))))

(assert (=> b!95285 (= (apply!90 (+!136 lt!47393 (tuple2!2335 lt!47401 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47408) (apply!90 lt!47393 lt!47408))))

(declare-fun lt!47404 () Unit!2822)

(assert (=> b!95285 (= lt!47404 lt!47391)))

(declare-fun lt!47390 () ListLongMap!1539)

(assert (=> b!95285 (= lt!47390 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46640 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47405 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47405 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47389 () (_ BitVec 64))

(assert (=> b!95285 (= lt!47389 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95285 (= lt!47403 (addApplyDifferent!66 lt!47390 lt!47405 (minValue!2323 newMap!16) lt!47389))))

(assert (=> b!95285 (= (apply!90 (+!136 lt!47390 (tuple2!2335 lt!47405 (minValue!2323 newMap!16))) lt!47389) (apply!90 lt!47390 lt!47389))))

(declare-fun b!95286 () Bool)

(assert (=> b!95286 (= e!62165 e!62163)))

(declare-fun res!48192 () Bool)

(assert (=> b!95286 (=> (not res!48192) (not e!62163))))

(assert (=> b!95286 (= res!48192 (contains!797 lt!47387 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95286 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9574 () Bool)

(assert (=> bm!9574 (= call!9572 call!9573)))

(declare-fun b!95287 () Bool)

(assert (=> b!95287 (= e!62169 e!62175)))

(declare-fun res!48197 () Bool)

(assert (=> b!95287 (= res!48197 call!9574)))

(assert (=> b!95287 (=> (not res!48197) (not e!62175))))

(declare-fun b!95288 () Bool)

(assert (=> b!95288 (= e!62168 e!62167)))

(declare-fun res!48195 () Bool)

(assert (=> b!95288 (= res!48195 call!9578)))

(assert (=> b!95288 (=> (not res!48195) (not e!62167))))

(declare-fun bm!9575 () Bool)

(assert (=> bm!9575 (= call!9576 call!9577)))

(assert (= (and d!25115 c!15984) b!95271))

(assert (= (and d!25115 (not c!15984)) b!95268))

(assert (= (and b!95268 c!15983) b!95276))

(assert (= (and b!95268 (not c!15983)) b!95282))

(assert (= (and b!95282 c!15980) b!95269))

(assert (= (and b!95282 (not c!15980)) b!95284))

(assert (= (or b!95269 b!95284) bm!9573))

(assert (= (or b!95276 bm!9573) bm!9574))

(assert (= (or b!95276 b!95269) bm!9575))

(assert (= (or b!95271 bm!9574) bm!9570))

(assert (= (or b!95271 bm!9575) bm!9572))

(assert (= (and d!25115 res!48200) b!95278))

(assert (= (and d!25115 c!15982) b!95285))

(assert (= (and d!25115 (not c!15982)) b!95280))

(assert (= (and d!25115 res!48194) b!95270))

(assert (= (and b!95270 res!48199) b!95279))

(assert (= (and b!95270 (not res!48196)) b!95286))

(assert (= (and b!95286 res!48192) b!95275))

(assert (= (and b!95270 res!48193) b!95273))

(assert (= (and b!95273 c!15981) b!95287))

(assert (= (and b!95273 (not c!15981)) b!95274))

(assert (= (and b!95287 res!48197) b!95272))

(assert (= (or b!95287 b!95274) bm!9569))

(assert (= (and b!95273 res!48198) b!95281))

(assert (= (and b!95281 c!15985) b!95288))

(assert (= (and b!95281 (not c!15985)) b!95283))

(assert (= (and b!95288 res!48195) b!95277))

(assert (= (or b!95288 b!95283) bm!9571))

(declare-fun b_lambda!4205 () Bool)

(assert (=> (not b_lambda!4205) (not b!95275)))

(assert (=> b!95275 t!5513))

(declare-fun b_and!5825 () Bool)

(assert (= b_and!5821 (and (=> t!5513 result!3205) b_and!5825)))

(assert (=> b!95275 t!5515))

(declare-fun b_and!5827 () Bool)

(assert (= b_and!5823 (and (=> t!5515 result!3207) b_and!5827)))

(declare-fun m!103141 () Bool)

(assert (=> b!95272 m!103141))

(declare-fun m!103143 () Bool)

(assert (=> b!95271 m!103143))

(declare-fun m!103145 () Bool)

(assert (=> bm!9572 m!103145))

(assert (=> d!25115 m!101265))

(declare-fun m!103147 () Bool)

(assert (=> b!95277 m!103147))

(declare-fun m!103149 () Bool)

(assert (=> bm!9569 m!103149))

(declare-fun m!103151 () Bool)

(assert (=> bm!9571 m!103151))

(assert (=> b!95275 m!101273))

(assert (=> b!95275 m!101275))

(assert (=> b!95275 m!101277))

(assert (=> b!95275 m!101279))

(assert (=> b!95275 m!101275))

(assert (=> b!95275 m!101273))

(assert (=> b!95275 m!101279))

(declare-fun m!103153 () Bool)

(assert (=> b!95275 m!103153))

(assert (=> b!95286 m!101279))

(assert (=> b!95286 m!101279))

(declare-fun m!103155 () Bool)

(assert (=> b!95286 m!103155))

(assert (=> bm!9570 m!101015))

(declare-fun m!103157 () Bool)

(assert (=> bm!9570 m!103157))

(assert (=> b!95279 m!101279))

(assert (=> b!95279 m!101279))

(assert (=> b!95279 m!101287))

(assert (=> b!95278 m!101279))

(assert (=> b!95278 m!101279))

(assert (=> b!95278 m!101287))

(declare-fun m!103159 () Bool)

(assert (=> b!95285 m!103159))

(declare-fun m!103161 () Bool)

(assert (=> b!95285 m!103161))

(declare-fun m!103163 () Bool)

(assert (=> b!95285 m!103163))

(declare-fun m!103165 () Bool)

(assert (=> b!95285 m!103165))

(assert (=> b!95285 m!101279))

(declare-fun m!103167 () Bool)

(assert (=> b!95285 m!103167))

(declare-fun m!103169 () Bool)

(assert (=> b!95285 m!103169))

(declare-fun m!103171 () Bool)

(assert (=> b!95285 m!103171))

(assert (=> b!95285 m!103167))

(declare-fun m!103173 () Bool)

(assert (=> b!95285 m!103173))

(assert (=> b!95285 m!101015))

(assert (=> b!95285 m!103157))

(declare-fun m!103175 () Bool)

(assert (=> b!95285 m!103175))

(declare-fun m!103177 () Bool)

(assert (=> b!95285 m!103177))

(declare-fun m!103179 () Bool)

(assert (=> b!95285 m!103179))

(declare-fun m!103181 () Bool)

(assert (=> b!95285 m!103181))

(declare-fun m!103183 () Bool)

(assert (=> b!95285 m!103183))

(assert (=> b!95285 m!103159))

(assert (=> b!95285 m!103181))

(assert (=> b!95285 m!103163))

(assert (=> b!95285 m!101015))

(declare-fun m!103185 () Bool)

(assert (=> b!95285 m!103185))

(assert (=> b!95285 m!101015))

(declare-fun m!103187 () Bool)

(assert (=> b!95285 m!103187))

(assert (=> d!24681 d!25115))

(declare-fun d!25117 () Bool)

(assert (=> d!25117 (= (get!1283 (getValueByKey!147 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46549)) (v!2767 (getValueByKey!147 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46549)))))

(assert (=> d!24599 d!25117))

(declare-fun b!95291 () Bool)

(declare-fun e!62177 () Option!153)

(assert (=> b!95291 (= e!62177 (getValueByKey!147 (t!5506 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) lt!46549))))

(declare-fun e!62176 () Option!153)

(declare-fun b!95289 () Bool)

(assert (=> b!95289 (= e!62176 (Some!152 (_2!1177 (h!2188 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))))

(declare-fun b!95292 () Bool)

(assert (=> b!95292 (= e!62177 None!151)))

(declare-fun b!95290 () Bool)

(assert (=> b!95290 (= e!62176 e!62177)))

(declare-fun c!15987 () Bool)

(assert (=> b!95290 (= c!15987 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) (not (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46549))))))

(declare-fun c!15986 () Bool)

(declare-fun d!25119 () Bool)

(assert (=> d!25119 (= c!15986 (and ((_ is Cons!1596) (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))) (= (_1!1177 (h!2188 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))) lt!46549)))))

(assert (=> d!25119 (= (getValueByKey!147 (toList!785 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!46549) e!62176)))

(assert (= (and d!25119 c!15986) b!95289))

(assert (= (and d!25119 (not c!15986)) b!95290))

(assert (= (and b!95290 c!15987) b!95291))

(assert (= (and b!95290 (not c!15987)) b!95292))

(declare-fun m!103189 () Bool)

(assert (=> b!95291 m!103189))

(assert (=> d!24599 d!25119))

(declare-fun d!25121 () Bool)

(declare-fun res!48201 () Bool)

(declare-fun e!62178 () Bool)

(assert (=> d!25121 (=> res!48201 e!62178)))

(assert (=> d!25121 (= res!48201 (= (select (arr!1996 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!25121 (= (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!62178)))

(declare-fun b!95293 () Bool)

(declare-fun e!62179 () Bool)

(assert (=> b!95293 (= e!62178 e!62179)))

(declare-fun res!48202 () Bool)

(assert (=> b!95293 (=> (not res!48202) (not e!62179))))

(assert (=> b!95293 (= res!48202 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95294 () Bool)

(assert (=> b!95294 (= e!62179 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25121 (not res!48201)) b!95293))

(assert (= (and b!95293 res!48202) b!95294))

(assert (=> d!25121 m!101967))

(assert (=> b!95294 m!101017))

(declare-fun m!103191 () Bool)

(assert (=> b!95294 m!103191))

(assert (=> b!94500 d!25121))

(declare-fun d!25123 () Bool)

(assert (=> d!25123 (= (get!1283 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2767 (getValueByKey!147 (toList!785 lt!46547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24659 d!25123))

(assert (=> d!24659 d!24841))

(declare-fun d!25125 () Bool)

(assert (=> d!25125 (contains!797 (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))))

(assert (=> d!25125 true))

(declare-fun _$16!111 () Unit!2822)

(assert (=> d!25125 (= (choose!569 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (defaultEntry!2436 newMap!16)) _$16!111)))

(declare-fun bs!3923 () Bool)

(assert (= bs!3923 d!25125))

(assert (=> bs!3923 m!101355))

(assert (=> bs!3923 m!101201))

(assert (=> bs!3923 m!101355))

(assert (=> bs!3923 m!101201))

(assert (=> bs!3923 m!101357))

(assert (=> d!24581 d!25125))

(assert (=> d!24581 d!24705))

(assert (=> b!94658 d!24921))

(assert (=> b!94658 d!24923))

(declare-fun d!25127 () Bool)

(declare-fun e!62180 () Bool)

(assert (=> d!25127 e!62180))

(declare-fun res!48203 () Bool)

(assert (=> d!25127 (=> res!48203 e!62180)))

(declare-fun lt!47411 () Bool)

(assert (=> d!25127 (= res!48203 (not lt!47411))))

(declare-fun lt!47409 () Bool)

(assert (=> d!25127 (= lt!47411 lt!47409)))

(declare-fun lt!47410 () Unit!2822)

(declare-fun e!62181 () Unit!2822)

(assert (=> d!25127 (= lt!47410 e!62181)))

(declare-fun c!15988 () Bool)

(assert (=> d!25127 (= c!15988 lt!47409)))

(assert (=> d!25127 (= lt!47409 (containsKey!151 (toList!785 lt!46731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25127 (= (contains!797 lt!46731 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47411)))

(declare-fun b!95295 () Bool)

(declare-fun lt!47412 () Unit!2822)

(assert (=> b!95295 (= e!62181 lt!47412)))

(assert (=> b!95295 (= lt!47412 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95295 (isDefined!101 (getValueByKey!147 (toList!785 lt!46731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95296 () Bool)

(declare-fun Unit!2872 () Unit!2822)

(assert (=> b!95296 (= e!62181 Unit!2872)))

(declare-fun b!95297 () Bool)

(assert (=> b!95297 (= e!62180 (isDefined!101 (getValueByKey!147 (toList!785 lt!46731) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25127 c!15988) b!95295))

(assert (= (and d!25127 (not c!15988)) b!95296))

(assert (= (and d!25127 (not res!48203)) b!95297))

(declare-fun m!103193 () Bool)

(assert (=> d!25127 m!103193))

(declare-fun m!103195 () Bool)

(assert (=> b!95295 m!103195))

(declare-fun m!103197 () Bool)

(assert (=> b!95295 m!103197))

(assert (=> b!95295 m!103197))

(declare-fun m!103199 () Bool)

(assert (=> b!95295 m!103199))

(assert (=> b!95297 m!103197))

(assert (=> b!95297 m!103197))

(assert (=> b!95297 m!103199))

(assert (=> d!24585 d!25127))

(assert (=> d!24585 d!24539))

(assert (=> b!94495 d!24833))

(assert (=> b!94495 d!24835))

(assert (=> b!94655 d!24839))

(assert (=> b!94655 d!24841))

(declare-fun d!25129 () Bool)

(declare-fun e!62182 () Bool)

(assert (=> d!25129 e!62182))

(declare-fun res!48204 () Bool)

(assert (=> d!25129 (=> (not res!48204) (not e!62182))))

(declare-fun lt!47416 () ListLongMap!1539)

(assert (=> d!25129 (= res!48204 (contains!797 lt!47416 (_1!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun lt!47413 () List!1600)

(assert (=> d!25129 (= lt!47416 (ListLongMap!1540 lt!47413))))

(declare-fun lt!47414 () Unit!2822)

(declare-fun lt!47415 () Unit!2822)

(assert (=> d!25129 (= lt!47414 lt!47415)))

(assert (=> d!25129 (= (getValueByKey!147 lt!47413 (_1!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25129 (= lt!47415 (lemmaContainsTupThenGetReturnValue!65 lt!47413 (_1!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25129 (= lt!47413 (insertStrictlySorted!67 (toList!785 (ite c!15808 call!9500 (ite c!15807 call!9499 call!9502))) (_1!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25129 (= (+!136 (ite c!15808 call!9500 (ite c!15807 call!9499 call!9502)) (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) lt!47416)))

(declare-fun b!95298 () Bool)

(declare-fun res!48205 () Bool)

(assert (=> b!95298 (=> (not res!48205) (not e!62182))))

(assert (=> b!95298 (= res!48205 (= (getValueByKey!147 (toList!785 lt!47416) (_1!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))))

(declare-fun b!95299 () Bool)

(assert (=> b!95299 (= e!62182 (contains!799 (toList!785 lt!47416) (ite (or c!15808 c!15807) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (= (and d!25129 res!48204) b!95298))

(assert (= (and b!95298 res!48205) b!95299))

(declare-fun m!103201 () Bool)

(assert (=> d!25129 m!103201))

(declare-fun m!103203 () Bool)

(assert (=> d!25129 m!103203))

(declare-fun m!103205 () Bool)

(assert (=> d!25129 m!103205))

(declare-fun m!103207 () Bool)

(assert (=> d!25129 m!103207))

(declare-fun m!103209 () Bool)

(assert (=> b!95298 m!103209))

(declare-fun m!103211 () Bool)

(assert (=> b!95299 m!103211))

(assert (=> bm!9499 d!25129))

(declare-fun d!25131 () Bool)

(declare-fun res!48206 () Bool)

(declare-fun e!62183 () Bool)

(assert (=> d!25131 (=> res!48206 e!62183)))

(assert (=> d!25131 (= res!48206 (and ((_ is Cons!1596) (toList!785 lt!46547)) (= (_1!1177 (h!2188 (toList!785 lt!46547))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25131 (= (containsKey!151 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000) e!62183)))

(declare-fun b!95300 () Bool)

(declare-fun e!62184 () Bool)

(assert (=> b!95300 (= e!62183 e!62184)))

(declare-fun res!48207 () Bool)

(assert (=> b!95300 (=> (not res!48207) (not e!62184))))

(assert (=> b!95300 (= res!48207 (and (or (not ((_ is Cons!1596) (toList!785 lt!46547))) (bvsle (_1!1177 (h!2188 (toList!785 lt!46547))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1596) (toList!785 lt!46547)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46547))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95301 () Bool)

(assert (=> b!95301 (= e!62184 (containsKey!151 (t!5506 (toList!785 lt!46547)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25131 (not res!48206)) b!95300))

(assert (= (and b!95300 res!48207) b!95301))

(declare-fun m!103213 () Bool)

(assert (=> b!95301 m!103213))

(assert (=> d!24575 d!25131))

(declare-fun d!25133 () Bool)

(assert (=> d!25133 (= (apply!90 lt!46731 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1283 (getValueByKey!147 (toList!785 lt!46731) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3924 () Bool)

(assert (= bs!3924 d!25133))

(assert (=> bs!3924 m!101101))

(assert (=> bs!3924 m!102093))

(assert (=> bs!3924 m!102093))

(declare-fun m!103215 () Bool)

(assert (=> bs!3924 m!103215))

(assert (=> b!94396 d!25133))

(assert (=> b!94396 d!24661))

(declare-fun d!25135 () Bool)

(declare-fun res!48208 () Bool)

(declare-fun e!62185 () Bool)

(assert (=> d!25135 (=> res!48208 e!62185)))

(assert (=> d!25135 (= res!48208 (and ((_ is Cons!1596) (toList!785 call!9446)) (= (_1!1177 (h!2188 (toList!785 call!9446))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))))))

(assert (=> d!25135 (= (containsKey!151 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))) e!62185)))

(declare-fun b!95302 () Bool)

(declare-fun e!62186 () Bool)

(assert (=> b!95302 (= e!62185 e!62186)))

(declare-fun res!48209 () Bool)

(assert (=> b!95302 (=> (not res!48209) (not e!62186))))

(assert (=> b!95302 (= res!48209 (and (or (not ((_ is Cons!1596) (toList!785 call!9446))) (bvsle (_1!1177 (h!2188 (toList!785 call!9446))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))) ((_ is Cons!1596) (toList!785 call!9446)) (bvslt (_1!1177 (h!2188 (toList!785 call!9446))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))))))

(declare-fun b!95303 () Bool)

(assert (=> b!95303 (= e!62186 (containsKey!151 (t!5506 (toList!785 call!9446)) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(assert (= (and d!25135 (not res!48208)) b!95302))

(assert (= (and b!95302 res!48209) b!95303))

(assert (=> b!95303 m!101201))

(declare-fun m!103217 () Bool)

(assert (=> b!95303 m!103217))

(assert (=> d!24579 d!25135))

(declare-fun d!25137 () Bool)

(assert (=> d!25137 (= (apply!90 lt!46951 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1283 (getValueByKey!147 (toList!785 lt!46951) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3925 () Bool)

(assert (= bs!3925 d!25137))

(assert (=> bs!3925 m!103101))

(assert (=> bs!3925 m!103101))

(declare-fun m!103219 () Bool)

(assert (=> bs!3925 m!103219))

(assert (=> b!94641 d!25137))

(assert (=> d!24567 d!24529))

(declare-fun d!25139 () Bool)

(declare-fun res!48212 () Bool)

(declare-fun e!62187 () Bool)

(assert (=> d!25139 (=> (not res!48212) (not e!62187))))

(assert (=> d!25139 (= res!48212 (validMask!0 (mask!6511 (_2!1176 lt!46650))))))

(assert (=> d!25139 (= (simpleValid!65 (_2!1176 lt!46650)) e!62187)))

(declare-fun b!95306 () Bool)

(declare-fun res!48213 () Bool)

(assert (=> b!95306 (=> (not res!48213) (not e!62187))))

(assert (=> b!95306 (= res!48213 (= (size!2248 (_2!1176 lt!46650)) (bvadd (_size!466 (_2!1176 lt!46650)) (bvsdiv (bvadd (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!95307 () Bool)

(assert (=> b!95307 (= e!62187 (and (bvsge (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000000) (bvsle (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000011) (bvsge (_vacant!466 (_2!1176 lt!46650)) #b00000000000000000000000000000000)))))

(declare-fun b!95305 () Bool)

(declare-fun res!48211 () Bool)

(assert (=> b!95305 (=> (not res!48211) (not e!62187))))

(assert (=> b!95305 (= res!48211 (bvsge (size!2248 (_2!1176 lt!46650)) (_size!466 (_2!1176 lt!46650))))))

(declare-fun b!95304 () Bool)

(declare-fun res!48210 () Bool)

(assert (=> b!95304 (=> (not res!48210) (not e!62187))))

(assert (=> b!95304 (= res!48210 (and (= (size!2245 (_values!2419 (_2!1176 lt!46650))) (bvadd (mask!6511 (_2!1176 lt!46650)) #b00000000000000000000000000000001)) (= (size!2244 (_keys!4118 (_2!1176 lt!46650))) (size!2245 (_values!2419 (_2!1176 lt!46650)))) (bvsge (_size!466 (_2!1176 lt!46650)) #b00000000000000000000000000000000) (bvsle (_size!466 (_2!1176 lt!46650)) (bvadd (mask!6511 (_2!1176 lt!46650)) #b00000000000000000000000000000001))))))

(assert (= (and d!25139 res!48212) b!95304))

(assert (= (and b!95304 res!48210) b!95305))

(assert (= (and b!95305 res!48211) b!95306))

(assert (= (and b!95306 res!48213) b!95307))

(declare-fun m!103221 () Bool)

(assert (=> d!25139 m!103221))

(declare-fun m!103223 () Bool)

(assert (=> b!95306 m!103223))

(assert (=> b!95305 m!103223))

(assert (=> d!24657 d!25139))

(assert (=> b!94358 d!24689))

(declare-fun e!62189 () Option!153)

(declare-fun b!95310 () Bool)

(assert (=> b!95310 (= e!62189 (getValueByKey!147 (t!5506 (toList!785 lt!46849)) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95308 () Bool)

(declare-fun e!62188 () Option!153)

(assert (=> b!95308 (= e!62188 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46849)))))))

(declare-fun b!95311 () Bool)

(assert (=> b!95311 (= e!62189 None!151)))

(declare-fun b!95309 () Bool)

(assert (=> b!95309 (= e!62188 e!62189)))

(declare-fun c!15990 () Bool)

(assert (=> b!95309 (= c!15990 (and ((_ is Cons!1596) (toList!785 lt!46849)) (not (= (_1!1177 (h!2188 (toList!785 lt!46849))) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!15989 () Bool)

(declare-fun d!25141 () Bool)

(assert (=> d!25141 (= c!15989 (and ((_ is Cons!1596) (toList!785 lt!46849)) (= (_1!1177 (h!2188 (toList!785 lt!46849))) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25141 (= (getValueByKey!147 (toList!785 lt!46849) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62188)))

(assert (= (and d!25141 c!15989) b!95308))

(assert (= (and d!25141 (not c!15989)) b!95309))

(assert (= (and b!95309 c!15990) b!95310))

(assert (= (and b!95309 (not c!15990)) b!95311))

(declare-fun m!103225 () Bool)

(assert (=> b!95310 m!103225))

(assert (=> b!94483 d!25141))

(declare-fun d!25143 () Bool)

(declare-fun e!62190 () Bool)

(assert (=> d!25143 e!62190))

(declare-fun res!48214 () Bool)

(assert (=> d!25143 (=> res!48214 e!62190)))

(declare-fun lt!47419 () Bool)

(assert (=> d!25143 (= res!48214 (not lt!47419))))

(declare-fun lt!47417 () Bool)

(assert (=> d!25143 (= lt!47419 lt!47417)))

(declare-fun lt!47418 () Unit!2822)

(declare-fun e!62191 () Unit!2822)

(assert (=> d!25143 (= lt!47418 e!62191)))

(declare-fun c!15991 () Bool)

(assert (=> d!25143 (= c!15991 lt!47417)))

(assert (=> d!25143 (= lt!47417 (containsKey!151 (toList!785 lt!46951) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25143 (= (contains!797 lt!46951 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47419)))

(declare-fun b!95312 () Bool)

(declare-fun lt!47420 () Unit!2822)

(assert (=> b!95312 (= e!62191 lt!47420)))

(assert (=> b!95312 (= lt!47420 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46951) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95312 (isDefined!101 (getValueByKey!147 (toList!785 lt!46951) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95313 () Bool)

(declare-fun Unit!2873 () Unit!2822)

(assert (=> b!95313 (= e!62191 Unit!2873)))

(declare-fun b!95314 () Bool)

(assert (=> b!95314 (= e!62190 (isDefined!101 (getValueByKey!147 (toList!785 lt!46951) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25143 c!15991) b!95312))

(assert (= (and d!25143 (not c!15991)) b!95313))

(assert (= (and d!25143 (not res!48214)) b!95314))

(assert (=> d!25143 m!101279))

(declare-fun m!103227 () Bool)

(assert (=> d!25143 m!103227))

(assert (=> b!95312 m!101279))

(declare-fun m!103229 () Bool)

(assert (=> b!95312 m!103229))

(assert (=> b!95312 m!101279))

(assert (=> b!95312 m!102267))

(assert (=> b!95312 m!102267))

(declare-fun m!103231 () Bool)

(assert (=> b!95312 m!103231))

(assert (=> b!95314 m!101279))

(assert (=> b!95314 m!102267))

(assert (=> b!95314 m!102267))

(assert (=> b!95314 m!103231))

(assert (=> b!94650 d!25143))

(assert (=> b!94577 d!24689))

(declare-fun d!25145 () Bool)

(assert (=> d!25145 (= (inRange!0 (ite c!15771 (index!3186 lt!46820) (ite c!15772 (index!3185 lt!46817) (index!3188 lt!46817))) (mask!6511 newMap!16)) (and (bvsge (ite c!15771 (index!3186 lt!46820) (ite c!15772 (index!3185 lt!46817) (index!3188 lt!46817))) #b00000000000000000000000000000000) (bvslt (ite c!15771 (index!3186 lt!46820) (ite c!15772 (index!3185 lt!46817) (index!3188 lt!46817))) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9478 d!25145))

(declare-fun d!25147 () Bool)

(declare-fun res!48215 () Bool)

(declare-fun e!62192 () Bool)

(assert (=> d!25147 (=> res!48215 e!62192)))

(assert (=> d!25147 (= res!48215 (and ((_ is Cons!1596) (toList!785 e!61547)) (= (_1!1177 (h!2188 (toList!785 e!61547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!25147 (= (containsKey!151 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) e!62192)))

(declare-fun b!95315 () Bool)

(declare-fun e!62193 () Bool)

(assert (=> b!95315 (= e!62192 e!62193)))

(declare-fun res!48216 () Bool)

(assert (=> b!95315 (=> (not res!48216) (not e!62193))))

(assert (=> b!95315 (= res!48216 (and (or (not ((_ is Cons!1596) (toList!785 e!61547))) (bvsle (_1!1177 (h!2188 (toList!785 e!61547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1596) (toList!785 e!61547)) (bvslt (_1!1177 (h!2188 (toList!785 e!61547))) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!95316 () Bool)

(assert (=> b!95316 (= e!62193 (containsKey!151 (t!5506 (toList!785 e!61547)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!25147 (not res!48215)) b!95315))

(assert (= (and b!95315 res!48216) b!95316))

(assert (=> b!95316 m!101017))

(declare-fun m!103233 () Bool)

(assert (=> b!95316 m!103233))

(assert (=> d!24663 d!25147))

(declare-fun bm!9576 () Bool)

(declare-fun call!9581 () Bool)

(declare-fun lt!47421 () ListLongMap!1539)

(assert (=> bm!9576 (= call!9581 (contains!797 lt!47421 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95317 () Bool)

(declare-fun e!62201 () ListLongMap!1539)

(declare-fun e!62205 () ListLongMap!1539)

(assert (=> b!95317 (= e!62201 e!62205)))

(declare-fun c!15995 () Bool)

(assert (=> b!95317 (= c!15995 (and (not (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95318 () Bool)

(declare-fun e!62203 () ListLongMap!1539)

(declare-fun call!9583 () ListLongMap!1539)

(assert (=> b!95318 (= e!62203 call!9583)))

(declare-fun b!95319 () Bool)

(declare-fun res!48218 () Bool)

(declare-fun e!62195 () Bool)

(assert (=> b!95319 (=> (not res!48218) (not e!62195))))

(declare-fun e!62196 () Bool)

(assert (=> b!95319 (= res!48218 e!62196)))

(declare-fun res!48221 () Bool)

(assert (=> b!95319 (=> res!48221 e!62196)))

(declare-fun e!62197 () Bool)

(assert (=> b!95319 (= res!48221 (not e!62197))))

(declare-fun res!48224 () Bool)

(assert (=> b!95319 (=> (not res!48224) (not e!62197))))

(assert (=> b!95319 (= res!48224 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(declare-fun b!95320 () Bool)

(declare-fun call!9584 () ListLongMap!1539)

(assert (=> b!95320 (= e!62201 (+!136 call!9584 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (_2!1176 lt!46650)))))))

(declare-fun b!95322 () Bool)

(declare-fun res!48223 () Bool)

(assert (=> b!95322 (=> (not res!48223) (not e!62195))))

(declare-fun e!62200 () Bool)

(assert (=> b!95322 (= res!48223 e!62200)))

(declare-fun c!15993 () Bool)

(assert (=> b!95322 (= c!15993 (not (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95323 () Bool)

(assert (=> b!95323 (= e!62200 (not call!9581))))

(declare-fun b!95324 () Bool)

(declare-fun e!62194 () Bool)

(assert (=> b!95324 (= e!62194 (= (apply!90 lt!47421 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (_values!2419 (_2!1176 lt!46650))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 (_2!1176 lt!46650)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_values!2419 (_2!1176 lt!46650)))))))

(assert (=> b!95324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(declare-fun b!95325 () Bool)

(assert (=> b!95325 (= e!62205 call!9583)))

(declare-fun b!95326 () Bool)

(declare-fun e!62198 () Bool)

(assert (=> b!95326 (= e!62198 (= (apply!90 lt!47421 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 (_2!1176 lt!46650))))))

(declare-fun b!95327 () Bool)

(declare-fun e!62202 () Bool)

(assert (=> b!95327 (= e!62202 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(declare-fun b!95328 () Bool)

(assert (=> b!95328 (= e!62197 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(declare-fun bm!9577 () Bool)

(declare-fun call!9580 () ListLongMap!1539)

(assert (=> bm!9577 (= call!9580 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (_2!1176 lt!46650)) (_values!2419 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650)) (extraKeys!2265 (_2!1176 lt!46650)) (zeroValue!2323 (_2!1176 lt!46650)) (minValue!2323 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46650))))))

(declare-fun bm!9578 () Bool)

(declare-fun call!9585 () Bool)

(assert (=> bm!9578 (= call!9585 (contains!797 lt!47421 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95329 () Bool)

(declare-fun e!62204 () Unit!2822)

(declare-fun Unit!2874 () Unit!2822)

(assert (=> b!95329 (= e!62204 Unit!2874)))

(declare-fun c!15996 () Bool)

(declare-fun call!9582 () ListLongMap!1539)

(declare-fun call!9579 () ListLongMap!1539)

(declare-fun bm!9579 () Bool)

(assert (=> bm!9579 (= call!9584 (+!136 (ite c!15996 call!9580 (ite c!15995 call!9579 call!9582)) (ite (or c!15996 c!15995) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (_2!1176 lt!46650))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (_2!1176 lt!46650))))))))

(declare-fun b!95330 () Bool)

(declare-fun e!62199 () Bool)

(assert (=> b!95330 (= e!62195 e!62199)))

(declare-fun c!15997 () Bool)

(assert (=> b!95330 (= c!15997 (not (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95331 () Bool)

(declare-fun c!15992 () Bool)

(assert (=> b!95331 (= c!15992 (and (not (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95331 (= e!62205 e!62203)))

(declare-fun b!95332 () Bool)

(assert (=> b!95332 (= e!62199 (not call!9585))))

(declare-fun d!25149 () Bool)

(assert (=> d!25149 e!62195))

(declare-fun res!48219 () Bool)

(assert (=> d!25149 (=> (not res!48219) (not e!62195))))

(assert (=> d!25149 (= res!48219 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))))

(declare-fun lt!47426 () ListLongMap!1539)

(assert (=> d!25149 (= lt!47421 lt!47426)))

(declare-fun lt!47440 () Unit!2822)

(assert (=> d!25149 (= lt!47440 e!62204)))

(declare-fun c!15994 () Bool)

(assert (=> d!25149 (= c!15994 e!62202)))

(declare-fun res!48225 () Bool)

(assert (=> d!25149 (=> (not res!48225) (not e!62202))))

(assert (=> d!25149 (= res!48225 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(assert (=> d!25149 (= lt!47426 e!62201)))

(assert (=> d!25149 (= c!15996 (and (not (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (_2!1176 lt!46650)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25149 (validMask!0 (mask!6511 (_2!1176 lt!46650)))))

(assert (=> d!25149 (= (getCurrentListMap!466 (_keys!4118 (_2!1176 lt!46650)) (_values!2419 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650)) (extraKeys!2265 (_2!1176 lt!46650)) (zeroValue!2323 (_2!1176 lt!46650)) (minValue!2323 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46650))) lt!47421)))

(declare-fun b!95321 () Bool)

(declare-fun e!62206 () Bool)

(assert (=> b!95321 (= e!62206 (= (apply!90 lt!47421 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 (_2!1176 lt!46650))))))

(declare-fun b!95333 () Bool)

(assert (=> b!95333 (= e!62203 call!9582)))

(declare-fun bm!9580 () Bool)

(assert (=> bm!9580 (= call!9582 call!9579)))

(declare-fun b!95334 () Bool)

(declare-fun lt!47437 () Unit!2822)

(assert (=> b!95334 (= e!62204 lt!47437)))

(declare-fun lt!47429 () ListLongMap!1539)

(assert (=> b!95334 (= lt!47429 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (_2!1176 lt!46650)) (_values!2419 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650)) (extraKeys!2265 (_2!1176 lt!46650)) (zeroValue!2323 (_2!1176 lt!46650)) (minValue!2323 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46650))))))

(declare-fun lt!47428 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47428 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47430 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47430 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000))))

(declare-fun lt!47431 () Unit!2822)

(assert (=> b!95334 (= lt!47431 (addStillContains!66 lt!47429 lt!47428 (zeroValue!2323 (_2!1176 lt!46650)) lt!47430))))

(assert (=> b!95334 (contains!797 (+!136 lt!47429 (tuple2!2335 lt!47428 (zeroValue!2323 (_2!1176 lt!46650)))) lt!47430)))

(declare-fun lt!47436 () Unit!2822)

(assert (=> b!95334 (= lt!47436 lt!47431)))

(declare-fun lt!47422 () ListLongMap!1539)

(assert (=> b!95334 (= lt!47422 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (_2!1176 lt!46650)) (_values!2419 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650)) (extraKeys!2265 (_2!1176 lt!46650)) (zeroValue!2323 (_2!1176 lt!46650)) (minValue!2323 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46650))))))

(declare-fun lt!47434 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47434 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47432 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47432 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000))))

(declare-fun lt!47433 () Unit!2822)

(assert (=> b!95334 (= lt!47433 (addApplyDifferent!66 lt!47422 lt!47434 (minValue!2323 (_2!1176 lt!46650)) lt!47432))))

(assert (=> b!95334 (= (apply!90 (+!136 lt!47422 (tuple2!2335 lt!47434 (minValue!2323 (_2!1176 lt!46650)))) lt!47432) (apply!90 lt!47422 lt!47432))))

(declare-fun lt!47441 () Unit!2822)

(assert (=> b!95334 (= lt!47441 lt!47433)))

(declare-fun lt!47427 () ListLongMap!1539)

(assert (=> b!95334 (= lt!47427 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (_2!1176 lt!46650)) (_values!2419 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650)) (extraKeys!2265 (_2!1176 lt!46650)) (zeroValue!2323 (_2!1176 lt!46650)) (minValue!2323 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46650))))))

(declare-fun lt!47435 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47435 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47442 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47442 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000))))

(declare-fun lt!47425 () Unit!2822)

(assert (=> b!95334 (= lt!47425 (addApplyDifferent!66 lt!47427 lt!47435 (zeroValue!2323 (_2!1176 lt!46650)) lt!47442))))

(assert (=> b!95334 (= (apply!90 (+!136 lt!47427 (tuple2!2335 lt!47435 (zeroValue!2323 (_2!1176 lt!46650)))) lt!47442) (apply!90 lt!47427 lt!47442))))

(declare-fun lt!47438 () Unit!2822)

(assert (=> b!95334 (= lt!47438 lt!47425)))

(declare-fun lt!47424 () ListLongMap!1539)

(assert (=> b!95334 (= lt!47424 (getCurrentListMapNoExtraKeys!100 (_keys!4118 (_2!1176 lt!46650)) (_values!2419 (_2!1176 lt!46650)) (mask!6511 (_2!1176 lt!46650)) (extraKeys!2265 (_2!1176 lt!46650)) (zeroValue!2323 (_2!1176 lt!46650)) (minValue!2323 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1176 lt!46650))))))

(declare-fun lt!47439 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47439 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47423 () (_ BitVec 64))

(assert (=> b!95334 (= lt!47423 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000))))

(assert (=> b!95334 (= lt!47437 (addApplyDifferent!66 lt!47424 lt!47439 (minValue!2323 (_2!1176 lt!46650)) lt!47423))))

(assert (=> b!95334 (= (apply!90 (+!136 lt!47424 (tuple2!2335 lt!47439 (minValue!2323 (_2!1176 lt!46650)))) lt!47423) (apply!90 lt!47424 lt!47423))))

(declare-fun b!95335 () Bool)

(assert (=> b!95335 (= e!62196 e!62194)))

(declare-fun res!48217 () Bool)

(assert (=> b!95335 (=> (not res!48217) (not e!62194))))

(assert (=> b!95335 (= res!48217 (contains!797 lt!47421 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(assert (=> b!95335 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(declare-fun bm!9581 () Bool)

(assert (=> bm!9581 (= call!9579 call!9580)))

(declare-fun b!95336 () Bool)

(assert (=> b!95336 (= e!62200 e!62206)))

(declare-fun res!48222 () Bool)

(assert (=> b!95336 (= res!48222 call!9581)))

(assert (=> b!95336 (=> (not res!48222) (not e!62206))))

(declare-fun b!95337 () Bool)

(assert (=> b!95337 (= e!62199 e!62198)))

(declare-fun res!48220 () Bool)

(assert (=> b!95337 (= res!48220 call!9585)))

(assert (=> b!95337 (=> (not res!48220) (not e!62198))))

(declare-fun bm!9582 () Bool)

(assert (=> bm!9582 (= call!9583 call!9584)))

(assert (= (and d!25149 c!15996) b!95320))

(assert (= (and d!25149 (not c!15996)) b!95317))

(assert (= (and b!95317 c!15995) b!95325))

(assert (= (and b!95317 (not c!15995)) b!95331))

(assert (= (and b!95331 c!15992) b!95318))

(assert (= (and b!95331 (not c!15992)) b!95333))

(assert (= (or b!95318 b!95333) bm!9580))

(assert (= (or b!95325 bm!9580) bm!9581))

(assert (= (or b!95325 b!95318) bm!9582))

(assert (= (or b!95320 bm!9581) bm!9577))

(assert (= (or b!95320 bm!9582) bm!9579))

(assert (= (and d!25149 res!48225) b!95327))

(assert (= (and d!25149 c!15994) b!95334))

(assert (= (and d!25149 (not c!15994)) b!95329))

(assert (= (and d!25149 res!48219) b!95319))

(assert (= (and b!95319 res!48224) b!95328))

(assert (= (and b!95319 (not res!48221)) b!95335))

(assert (= (and b!95335 res!48217) b!95324))

(assert (= (and b!95319 res!48218) b!95322))

(assert (= (and b!95322 c!15993) b!95336))

(assert (= (and b!95322 (not c!15993)) b!95323))

(assert (= (and b!95336 res!48222) b!95321))

(assert (= (or b!95336 b!95323) bm!9576))

(assert (= (and b!95322 res!48223) b!95330))

(assert (= (and b!95330 c!15997) b!95337))

(assert (= (and b!95330 (not c!15997)) b!95332))

(assert (= (and b!95337 res!48220) b!95326))

(assert (= (or b!95337 b!95332) bm!9578))

(declare-fun b_lambda!4207 () Bool)

(assert (=> (not b_lambda!4207) (not b!95324)))

(declare-fun tb!1885 () Bool)

(declare-fun t!5517 () Bool)

(assert (=> (and b!93975 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 (_2!1176 lt!46650))) t!5517) tb!1885))

(declare-fun result!3209 () Bool)

(assert (=> tb!1885 (= result!3209 tp_is_empty!2613)))

(assert (=> b!95324 t!5517))

(declare-fun b_and!5829 () Bool)

(assert (= b_and!5825 (and (=> t!5517 result!3209) b_and!5829)))

(declare-fun t!5519 () Bool)

(declare-fun tb!1887 () Bool)

(assert (=> (and b!93983 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (_2!1176 lt!46650))) t!5519) tb!1887))

(declare-fun result!3211 () Bool)

(assert (= result!3211 result!3209))

(assert (=> b!95324 t!5519))

(declare-fun b_and!5831 () Bool)

(assert (= b_and!5827 (and (=> t!5519 result!3211) b_and!5831)))

(declare-fun m!103235 () Bool)

(assert (=> b!95321 m!103235))

(declare-fun m!103237 () Bool)

(assert (=> b!95320 m!103237))

(declare-fun m!103239 () Bool)

(assert (=> bm!9579 m!103239))

(assert (=> d!25149 m!103221))

(declare-fun m!103241 () Bool)

(assert (=> b!95326 m!103241))

(declare-fun m!103243 () Bool)

(assert (=> bm!9576 m!103243))

(declare-fun m!103245 () Bool)

(assert (=> bm!9578 m!103245))

(declare-fun m!103247 () Bool)

(assert (=> b!95324 m!103247))

(declare-fun m!103249 () Bool)

(assert (=> b!95324 m!103249))

(declare-fun m!103251 () Bool)

(assert (=> b!95324 m!103251))

(assert (=> b!95324 m!101937))

(assert (=> b!95324 m!103249))

(assert (=> b!95324 m!103247))

(assert (=> b!95324 m!101937))

(declare-fun m!103253 () Bool)

(assert (=> b!95324 m!103253))

(assert (=> b!95335 m!101937))

(assert (=> b!95335 m!101937))

(declare-fun m!103255 () Bool)

(assert (=> b!95335 m!103255))

(declare-fun m!103257 () Bool)

(assert (=> bm!9577 m!103257))

(assert (=> b!95328 m!101937))

(assert (=> b!95328 m!101937))

(assert (=> b!95328 m!101945))

(assert (=> b!95327 m!101937))

(assert (=> b!95327 m!101937))

(assert (=> b!95327 m!101945))

(declare-fun m!103259 () Bool)

(assert (=> b!95334 m!103259))

(declare-fun m!103261 () Bool)

(assert (=> b!95334 m!103261))

(declare-fun m!103263 () Bool)

(assert (=> b!95334 m!103263))

(declare-fun m!103265 () Bool)

(assert (=> b!95334 m!103265))

(assert (=> b!95334 m!101937))

(declare-fun m!103267 () Bool)

(assert (=> b!95334 m!103267))

(declare-fun m!103269 () Bool)

(assert (=> b!95334 m!103269))

(declare-fun m!103271 () Bool)

(assert (=> b!95334 m!103271))

(assert (=> b!95334 m!103267))

(declare-fun m!103273 () Bool)

(assert (=> b!95334 m!103273))

(assert (=> b!95334 m!103257))

(declare-fun m!103275 () Bool)

(assert (=> b!95334 m!103275))

(declare-fun m!103277 () Bool)

(assert (=> b!95334 m!103277))

(declare-fun m!103279 () Bool)

(assert (=> b!95334 m!103279))

(declare-fun m!103281 () Bool)

(assert (=> b!95334 m!103281))

(declare-fun m!103283 () Bool)

(assert (=> b!95334 m!103283))

(assert (=> b!95334 m!103259))

(assert (=> b!95334 m!103281))

(assert (=> b!95334 m!103263))

(declare-fun m!103285 () Bool)

(assert (=> b!95334 m!103285))

(declare-fun m!103287 () Bool)

(assert (=> b!95334 m!103287))

(assert (=> d!24665 d!25149))

(declare-fun d!25151 () Bool)

(assert (=> d!25151 (= (inRange!0 (index!3186 lt!46840) (mask!6511 newMap!16)) (and (bvsge (index!3186 lt!46840) #b00000000000000000000000000000000) (bvslt (index!3186 lt!46840) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!94479 d!25151))

(declare-fun d!25153 () Bool)

(declare-fun e!62207 () Bool)

(assert (=> d!25153 e!62207))

(declare-fun res!48226 () Bool)

(assert (=> d!25153 (=> res!48226 e!62207)))

(declare-fun lt!47445 () Bool)

(assert (=> d!25153 (= res!48226 (not lt!47445))))

(declare-fun lt!47443 () Bool)

(assert (=> d!25153 (= lt!47445 lt!47443)))

(declare-fun lt!47444 () Unit!2822)

(declare-fun e!62208 () Unit!2822)

(assert (=> d!25153 (= lt!47444 e!62208)))

(declare-fun c!15998 () Bool)

(assert (=> d!25153 (= c!15998 lt!47443)))

(assert (=> d!25153 (= lt!47443 (containsKey!151 (toList!785 lt!46868) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!25153 (= (contains!797 lt!46868 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47445)))

(declare-fun b!95338 () Bool)

(declare-fun lt!47446 () Unit!2822)

(assert (=> b!95338 (= e!62208 lt!47446)))

(assert (=> b!95338 (= lt!47446 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46868) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> b!95338 (isDefined!101 (getValueByKey!147 (toList!785 lt!46868) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95339 () Bool)

(declare-fun Unit!2875 () Unit!2822)

(assert (=> b!95339 (= e!62208 Unit!2875)))

(declare-fun b!95340 () Bool)

(assert (=> b!95340 (= e!62207 (isDefined!101 (getValueByKey!147 (toList!785 lt!46868) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25153 c!15998) b!95338))

(assert (= (and d!25153 (not c!15998)) b!95339))

(assert (= (and d!25153 (not res!48226)) b!95340))

(declare-fun m!103289 () Bool)

(assert (=> d!25153 m!103289))

(declare-fun m!103291 () Bool)

(assert (=> b!95338 m!103291))

(assert (=> b!95338 m!101545))

(assert (=> b!95338 m!101545))

(declare-fun m!103293 () Bool)

(assert (=> b!95338 m!103293))

(assert (=> b!95340 m!101545))

(assert (=> b!95340 m!101545))

(assert (=> b!95340 m!103293))

(assert (=> d!24621 d!25153))

(declare-fun e!62210 () Option!153)

(declare-fun b!95343 () Bool)

(assert (=> b!95343 (= e!62210 (getValueByKey!147 (t!5506 lt!46865) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95341 () Bool)

(declare-fun e!62209 () Option!153)

(assert (=> b!95341 (= e!62209 (Some!152 (_2!1177 (h!2188 lt!46865))))))

(declare-fun b!95344 () Bool)

(assert (=> b!95344 (= e!62210 None!151)))

(declare-fun b!95342 () Bool)

(assert (=> b!95342 (= e!62209 e!62210)))

(declare-fun c!16000 () Bool)

(assert (=> b!95342 (= c!16000 (and ((_ is Cons!1596) lt!46865) (not (= (_1!1177 (h!2188 lt!46865)) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!15999 () Bool)

(declare-fun d!25155 () Bool)

(assert (=> d!25155 (= c!15999 (and ((_ is Cons!1596) lt!46865) (= (_1!1177 (h!2188 lt!46865)) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25155 (= (getValueByKey!147 lt!46865 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62209)))

(assert (= (and d!25155 c!15999) b!95341))

(assert (= (and d!25155 (not c!15999)) b!95342))

(assert (= (and b!95342 c!16000) b!95343))

(assert (= (and b!95342 (not c!16000)) b!95344))

(declare-fun m!103295 () Bool)

(assert (=> b!95343 m!103295))

(assert (=> d!24621 d!25155))

(declare-fun d!25157 () Bool)

(assert (=> d!25157 (= (getValueByKey!147 lt!46865 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!47447 () Unit!2822)

(assert (=> d!25157 (= lt!47447 (choose!578 lt!46865 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun e!62211 () Bool)

(assert (=> d!25157 e!62211))

(declare-fun res!48227 () Bool)

(assert (=> d!25157 (=> (not res!48227) (not e!62211))))

(assert (=> d!25157 (= res!48227 (isStrictlySorted!297 lt!46865))))

(assert (=> d!25157 (= (lemmaContainsTupThenGetReturnValue!65 lt!46865 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47447)))

(declare-fun b!95345 () Bool)

(declare-fun res!48228 () Bool)

(assert (=> b!95345 (=> (not res!48228) (not e!62211))))

(assert (=> b!95345 (= res!48228 (containsKey!151 lt!46865 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95346 () Bool)

(assert (=> b!95346 (= e!62211 (contains!799 lt!46865 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25157 res!48227) b!95345))

(assert (= (and b!95345 res!48228) b!95346))

(assert (=> d!25157 m!101539))

(declare-fun m!103297 () Bool)

(assert (=> d!25157 m!103297))

(declare-fun m!103299 () Bool)

(assert (=> d!25157 m!103299))

(declare-fun m!103301 () Bool)

(assert (=> b!95345 m!103301))

(declare-fun m!103303 () Bool)

(assert (=> b!95346 m!103303))

(assert (=> d!24621 d!25157))

(declare-fun b!95347 () Bool)

(declare-fun e!62213 () List!1600)

(declare-fun call!9586 () List!1600)

(assert (=> b!95347 (= e!62213 call!9586)))

(declare-fun e!62215 () Bool)

(declare-fun lt!47448 () List!1600)

(declare-fun b!95348 () Bool)

(assert (=> b!95348 (= e!62215 (contains!799 lt!47448 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95349 () Bool)

(declare-fun e!62216 () List!1600)

(assert (=> b!95349 (= e!62216 e!62213)))

(declare-fun c!16003 () Bool)

(assert (=> b!95349 (= c!16003 (and ((_ is Cons!1596) (toList!785 lt!46550)) (= (_1!1177 (h!2188 (toList!785 lt!46550))) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95350 () Bool)

(declare-fun c!16002 () Bool)

(declare-fun e!62212 () List!1600)

(assert (=> b!95350 (= e!62212 (ite c!16003 (t!5506 (toList!785 lt!46550)) (ite c!16002 (Cons!1596 (h!2188 (toList!785 lt!46550)) (t!5506 (toList!785 lt!46550))) Nil!1597)))))

(declare-fun bm!9583 () Bool)

(declare-fun call!9588 () List!1600)

(assert (=> bm!9583 (= call!9586 call!9588)))

(declare-fun c!16004 () Bool)

(declare-fun bm!9584 () Bool)

(assert (=> bm!9584 (= call!9588 ($colon$colon!75 e!62212 (ite c!16004 (h!2188 (toList!785 lt!46550)) (tuple2!2335 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!16001 () Bool)

(assert (=> bm!9584 (= c!16001 c!16004)))

(declare-fun b!95351 () Bool)

(assert (=> b!95351 (= e!62212 (insertStrictlySorted!67 (t!5506 (toList!785 lt!46550)) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95352 () Bool)

(declare-fun e!62214 () List!1600)

(declare-fun call!9587 () List!1600)

(assert (=> b!95352 (= e!62214 call!9587)))

(declare-fun b!95353 () Bool)

(assert (=> b!95353 (= e!62214 call!9587)))

(declare-fun bm!9585 () Bool)

(assert (=> bm!9585 (= call!9587 call!9586)))

(declare-fun b!95354 () Bool)

(assert (=> b!95354 (= c!16002 (and ((_ is Cons!1596) (toList!785 lt!46550)) (bvsgt (_1!1177 (h!2188 (toList!785 lt!46550))) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> b!95354 (= e!62213 e!62214)))

(declare-fun b!95355 () Bool)

(declare-fun res!48230 () Bool)

(assert (=> b!95355 (=> (not res!48230) (not e!62215))))

(assert (=> b!95355 (= res!48230 (containsKey!151 lt!47448 (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun d!25159 () Bool)

(assert (=> d!25159 e!62215))

(declare-fun res!48229 () Bool)

(assert (=> d!25159 (=> (not res!48229) (not e!62215))))

(assert (=> d!25159 (= res!48229 (isStrictlySorted!297 lt!47448))))

(assert (=> d!25159 (= lt!47448 e!62216)))

(assert (=> d!25159 (= c!16004 (and ((_ is Cons!1596) (toList!785 lt!46550)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46550))) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25159 (isStrictlySorted!297 (toList!785 lt!46550))))

(assert (=> d!25159 (= (insertStrictlySorted!67 (toList!785 lt!46550) (_1!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47448)))

(declare-fun b!95356 () Bool)

(assert (=> b!95356 (= e!62216 call!9588)))

(assert (= (and d!25159 c!16004) b!95356))

(assert (= (and d!25159 (not c!16004)) b!95349))

(assert (= (and b!95349 c!16003) b!95347))

(assert (= (and b!95349 (not c!16003)) b!95354))

(assert (= (and b!95354 c!16002) b!95352))

(assert (= (and b!95354 (not c!16002)) b!95353))

(assert (= (or b!95352 b!95353) bm!9585))

(assert (= (or b!95347 bm!9585) bm!9583))

(assert (= (or b!95356 bm!9583) bm!9584))

(assert (= (and bm!9584 c!16001) b!95351))

(assert (= (and bm!9584 (not c!16001)) b!95350))

(assert (= (and d!25159 res!48229) b!95355))

(assert (= (and b!95355 res!48230) b!95348))

(declare-fun m!103305 () Bool)

(assert (=> b!95355 m!103305))

(declare-fun m!103307 () Bool)

(assert (=> bm!9584 m!103307))

(declare-fun m!103309 () Bool)

(assert (=> b!95351 m!103309))

(declare-fun m!103311 () Bool)

(assert (=> d!25159 m!103311))

(declare-fun m!103313 () Bool)

(assert (=> d!25159 m!103313))

(declare-fun m!103315 () Bool)

(assert (=> b!95348 m!103315))

(assert (=> d!24621 d!25159))

(assert (=> b!94616 d!24689))

(declare-fun d!25161 () Bool)

(declare-fun e!62217 () Bool)

(assert (=> d!25161 e!62217))

(declare-fun res!48231 () Bool)

(assert (=> d!25161 (=> (not res!48231) (not e!62217))))

(declare-fun lt!47452 () ListLongMap!1539)

(assert (=> d!25161 (= res!48231 (contains!797 lt!47452 (_1!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun lt!47449 () List!1600)

(assert (=> d!25161 (= lt!47452 (ListLongMap!1540 lt!47449))))

(declare-fun lt!47450 () Unit!2822)

(declare-fun lt!47451 () Unit!2822)

(assert (=> d!25161 (= lt!47450 lt!47451)))

(assert (=> d!25161 (= (getValueByKey!147 lt!47449 (_1!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25161 (= lt!47451 (lemmaContainsTupThenGetReturnValue!65 lt!47449 (_1!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25161 (= lt!47449 (insertStrictlySorted!67 (toList!785 (ite c!15799 call!9493 (ite c!15798 call!9492 call!9495))) (_1!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25161 (= (+!136 (ite c!15799 call!9493 (ite c!15798 call!9492 call!9495)) (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) lt!47452)))

(declare-fun b!95357 () Bool)

(declare-fun res!48232 () Bool)

(assert (=> b!95357 (=> (not res!48232) (not e!62217))))

(assert (=> b!95357 (= res!48232 (= (getValueByKey!147 (toList!785 lt!47452) (_1!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!152 (_2!1177 (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))))

(declare-fun b!95358 () Bool)

(assert (=> b!95358 (= e!62217 (contains!799 (toList!785 lt!47452) (ite (or c!15799 c!15798) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (= (and d!25161 res!48231) b!95357))

(assert (= (and b!95357 res!48232) b!95358))

(declare-fun m!103317 () Bool)

(assert (=> d!25161 m!103317))

(declare-fun m!103319 () Bool)

(assert (=> d!25161 m!103319))

(declare-fun m!103321 () Bool)

(assert (=> d!25161 m!103321))

(declare-fun m!103323 () Bool)

(assert (=> d!25161 m!103323))

(declare-fun m!103325 () Bool)

(assert (=> b!95357 m!103325))

(declare-fun m!103327 () Bool)

(assert (=> b!95358 m!103327))

(assert (=> bm!9492 d!25161))

(assert (=> b!94451 d!24745))

(declare-fun d!25163 () Bool)

(declare-fun e!62218 () Bool)

(assert (=> d!25163 e!62218))

(declare-fun res!48233 () Bool)

(assert (=> d!25163 (=> (not res!48233) (not e!62218))))

(declare-fun lt!47456 () ListLongMap!1539)

(assert (=> d!25163 (= res!48233 (contains!797 lt!47456 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47453 () List!1600)

(assert (=> d!25163 (= lt!47456 (ListLongMap!1540 lt!47453))))

(declare-fun lt!47454 () Unit!2822)

(declare-fun lt!47455 () Unit!2822)

(assert (=> d!25163 (= lt!47454 lt!47455)))

(assert (=> d!25163 (= (getValueByKey!147 lt!47453 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25163 (= lt!47455 (lemmaContainsTupThenGetReturnValue!65 lt!47453 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25163 (= lt!47453 (insertStrictlySorted!67 (toList!785 (map!1243 newMap!16)) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25163 (= (+!136 (map!1243 newMap!16) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47456)))

(declare-fun b!95359 () Bool)

(declare-fun res!48234 () Bool)

(assert (=> b!95359 (=> (not res!48234) (not e!62218))))

(assert (=> b!95359 (= res!48234 (= (getValueByKey!147 (toList!785 lt!47456) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95360 () Bool)

(assert (=> b!95360 (= e!62218 (contains!799 (toList!785 lt!47456) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25163 res!48233) b!95359))

(assert (= (and b!95359 res!48234) b!95360))

(declare-fun m!103329 () Bool)

(assert (=> d!25163 m!103329))

(declare-fun m!103331 () Bool)

(assert (=> d!25163 m!103331))

(declare-fun m!103333 () Bool)

(assert (=> d!25163 m!103333))

(declare-fun m!103335 () Bool)

(assert (=> d!25163 m!103335))

(declare-fun m!103337 () Bool)

(assert (=> b!95359 m!103337))

(declare-fun m!103339 () Bool)

(assert (=> b!95360 m!103339))

(assert (=> b!94451 d!25163))

(assert (=> b!94451 d!24549))

(declare-fun d!25165 () Bool)

(assert (=> d!25165 (isDefined!101 (getValueByKey!147 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(declare-fun lt!47457 () Unit!2822)

(assert (=> d!25165 (= lt!47457 (choose!568 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(declare-fun e!62219 () Bool)

(assert (=> d!25165 e!62219))

(declare-fun res!48235 () Bool)

(assert (=> d!25165 (=> (not res!48235) (not e!62219))))

(assert (=> d!25165 (= res!48235 (isStrictlySorted!297 (toList!785 call!9446)))))

(assert (=> d!25165 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))) lt!47457)))

(declare-fun b!95361 () Bool)

(assert (=> b!95361 (= e!62219 (containsKey!151 (toList!785 call!9446) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(assert (= (and d!25165 res!48235) b!95361))

(assert (=> d!25165 m!101201))

(assert (=> d!25165 m!101349))

(assert (=> d!25165 m!101349))

(assert (=> d!25165 m!101351))

(assert (=> d!25165 m!101201))

(declare-fun m!103341 () Bool)

(assert (=> d!25165 m!103341))

(declare-fun m!103343 () Bool)

(assert (=> d!25165 m!103343))

(assert (=> b!95361 m!101201))

(assert (=> b!95361 m!101345))

(assert (=> b!94361 d!25165))

(assert (=> b!94361 d!24943))

(assert (=> b!94361 d!24945))

(declare-fun d!25167 () Bool)

(assert (=> d!25167 (= (+!136 (getCurrentListMap!466 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!466 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!25167 true))

(declare-fun _$5!95 () Unit!2822)

(assert (=> d!25167 (= (choose!570 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3186 lt!46636) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) _$5!95)))

(declare-fun bs!3926 () Bool)

(assert (= bs!3926 d!25167))

(assert (=> bs!3926 m!101123))

(assert (=> bs!3926 m!101123))

(assert (=> bs!3926 m!101361))

(assert (=> bs!3926 m!101199))

(assert (=> bs!3926 m!101363))

(assert (=> d!24583 d!25167))

(assert (=> d!24583 d!24705))

(declare-fun d!25169 () Bool)

(declare-fun e!62220 () Bool)

(assert (=> d!25169 e!62220))

(declare-fun res!48236 () Bool)

(assert (=> d!25169 (=> (not res!48236) (not e!62220))))

(declare-fun lt!47461 () ListLongMap!1539)

(assert (=> d!25169 (= res!48236 (contains!797 lt!47461 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun lt!47458 () List!1600)

(assert (=> d!25169 (= lt!47461 (ListLongMap!1540 lt!47458))))

(declare-fun lt!47459 () Unit!2822)

(declare-fun lt!47460 () Unit!2822)

(assert (=> d!25169 (= lt!47459 lt!47460)))

(assert (=> d!25169 (= (getValueByKey!147 lt!47458 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!25169 (= lt!47460 (lemmaContainsTupThenGetReturnValue!65 lt!47458 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!25169 (= lt!47458 (insertStrictlySorted!67 (toList!785 call!9504) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!25169 (= (+!136 call!9504 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) lt!47461)))

(declare-fun b!95362 () Bool)

(declare-fun res!48237 () Bool)

(assert (=> b!95362 (=> (not res!48237) (not e!62220))))

(assert (=> b!95362 (= res!48237 (= (getValueByKey!147 (toList!785 lt!47461) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun b!95363 () Bool)

(assert (=> b!95363 (= e!62220 (contains!799 (toList!785 lt!47461) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(assert (= (and d!25169 res!48236) b!95362))

(assert (= (and b!95362 res!48237) b!95363))

(declare-fun m!103345 () Bool)

(assert (=> d!25169 m!103345))

(declare-fun m!103347 () Bool)

(assert (=> d!25169 m!103347))

(declare-fun m!103349 () Bool)

(assert (=> d!25169 m!103349))

(declare-fun m!103351 () Bool)

(assert (=> d!25169 m!103351))

(declare-fun m!103353 () Bool)

(assert (=> b!95362 m!103353))

(declare-fun m!103355 () Bool)

(assert (=> b!95363 m!103355))

(assert (=> b!94608 d!25169))

(assert (=> b!94404 d!24595))

(assert (=> d!24607 d!24599))

(declare-fun d!25171 () Bool)

(assert (=> d!25171 (= (apply!90 (+!136 lt!46550 (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!46549) (apply!90 lt!46550 lt!46549))))

(assert (=> d!25171 true))

(declare-fun _$34!852 () Unit!2822)

(assert (=> d!25171 (= (choose!572 lt!46550 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))) lt!46549) _$34!852)))

(declare-fun bs!3927 () Bool)

(assert (= bs!3927 d!25171))

(assert (=> bs!3927 m!101171))

(assert (=> bs!3927 m!101171))

(assert (=> bs!3927 m!101173))

(assert (=> bs!3927 m!101169))

(assert (=> d!24607 d!25171))

(declare-fun d!25173 () Bool)

(declare-fun e!62221 () Bool)

(assert (=> d!25173 e!62221))

(declare-fun res!48238 () Bool)

(assert (=> d!25173 (=> res!48238 e!62221)))

(declare-fun lt!47464 () Bool)

(assert (=> d!25173 (= res!48238 (not lt!47464))))

(declare-fun lt!47462 () Bool)

(assert (=> d!25173 (= lt!47464 lt!47462)))

(declare-fun lt!47463 () Unit!2822)

(declare-fun e!62222 () Unit!2822)

(assert (=> d!25173 (= lt!47463 e!62222)))

(declare-fun c!16005 () Bool)

(assert (=> d!25173 (= c!16005 lt!47462)))

(assert (=> d!25173 (= lt!47462 (containsKey!151 (toList!785 lt!46550) lt!46549))))

(assert (=> d!25173 (= (contains!797 lt!46550 lt!46549) lt!47464)))

(declare-fun b!95364 () Bool)

(declare-fun lt!47465 () Unit!2822)

(assert (=> b!95364 (= e!62222 lt!47465)))

(assert (=> b!95364 (= lt!47465 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46550) lt!46549))))

(assert (=> b!95364 (isDefined!101 (getValueByKey!147 (toList!785 lt!46550) lt!46549))))

(declare-fun b!95365 () Bool)

(declare-fun Unit!2876 () Unit!2822)

(assert (=> b!95365 (= e!62222 Unit!2876)))

(declare-fun b!95366 () Bool)

(assert (=> b!95366 (= e!62221 (isDefined!101 (getValueByKey!147 (toList!785 lt!46550) lt!46549)))))

(assert (= (and d!25173 c!16005) b!95364))

(assert (= (and d!25173 (not c!16005)) b!95365))

(assert (= (and d!25173 (not res!48238)) b!95366))

(declare-fun m!103357 () Bool)

(assert (=> d!25173 m!103357))

(declare-fun m!103359 () Bool)

(assert (=> b!95364 m!103359))

(assert (=> b!95364 m!101533))

(assert (=> b!95364 m!101533))

(declare-fun m!103361 () Bool)

(assert (=> b!95364 m!103361))

(assert (=> b!95366 m!101533))

(assert (=> b!95366 m!101533))

(assert (=> b!95366 m!103361))

(assert (=> d!24607 d!25173))

(assert (=> d!24607 d!24619))

(assert (=> d!24607 d!24621))

(declare-fun d!25175 () Bool)

(assert (=> d!25175 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47466 () Unit!2822)

(assert (=> d!25175 (= lt!47466 (choose!568 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62223 () Bool)

(assert (=> d!25175 e!62223))

(declare-fun res!48239 () Bool)

(assert (=> d!25175 (=> (not res!48239) (not e!62223))))

(assert (=> d!25175 (= res!48239 (isStrictlySorted!297 (toList!785 lt!46547)))))

(assert (=> d!25175 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000) lt!47466)))

(declare-fun b!95367 () Bool)

(assert (=> b!95367 (= e!62223 (containsKey!151 (toList!785 lt!46547) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25175 res!48239) b!95367))

(assert (=> d!25175 m!101337))

(assert (=> d!25175 m!101337))

(assert (=> d!25175 m!101339))

(declare-fun m!103363 () Bool)

(assert (=> d!25175 m!103363))

(assert (=> d!25175 m!102245))

(assert (=> b!95367 m!101333))

(assert (=> b!94353 d!25175))

(assert (=> b!94353 d!24941))

(assert (=> b!94353 d!24819))

(declare-fun d!25177 () Bool)

(assert (=> d!25177 (= (apply!90 lt!46888 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1283 (getValueByKey!147 (toList!785 lt!46888) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3928 () Bool)

(assert (= bs!3928 d!25177))

(assert (=> bs!3928 m!101279))

(assert (=> bs!3928 m!102767))

(assert (=> bs!3928 m!102767))

(declare-fun m!103365 () Bool)

(assert (=> bs!3928 m!103365))

(assert (=> b!94573 d!25177))

(declare-fun d!25179 () Bool)

(declare-fun c!16006 () Bool)

(assert (=> d!25179 (= c!16006 ((_ is ValueCellFull!963) (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000)))))

(declare-fun e!62224 () V!3131)

(assert (=> d!25179 (= (get!1280 (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62224)))

(declare-fun b!95368 () Bool)

(assert (=> b!95368 (= e!62224 (get!1281 (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95369 () Bool)

(assert (=> b!95369 (= e!62224 (get!1282 (select (arr!1997 (ite c!15716 (_values!2419 newMap!16) lt!46653)) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25179 c!16006) b!95368))

(assert (= (and d!25179 (not c!16006)) b!95369))

(assert (=> b!95368 m!101607))

(assert (=> b!95368 m!101275))

(declare-fun m!103367 () Bool)

(assert (=> b!95368 m!103367))

(assert (=> b!95369 m!101607))

(assert (=> b!95369 m!101275))

(declare-fun m!103369 () Bool)

(assert (=> b!95369 m!103369))

(assert (=> b!94573 d!25179))

(assert (=> b!94445 d!24593))

(declare-fun d!25181 () Bool)

(assert (=> d!25181 (= (isEmpty!355 (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355))) (not ((_ is Some!152) (getValueByKey!147 (toList!785 lt!46466) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))))

(assert (=> d!24561 d!25181))

(declare-fun d!25183 () Bool)

(declare-fun lt!47467 () Bool)

(assert (=> d!25183 (= lt!47467 (select (content!97 (toList!785 lt!46917)) (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun e!62226 () Bool)

(assert (=> d!25183 (= lt!47467 e!62226)))

(declare-fun res!48240 () Bool)

(assert (=> d!25183 (=> (not res!48240) (not e!62226))))

(assert (=> d!25183 (= res!48240 ((_ is Cons!1596) (toList!785 lt!46917)))))

(assert (=> d!25183 (= (contains!799 (toList!785 lt!46917) (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47467)))

(declare-fun b!95370 () Bool)

(declare-fun e!62225 () Bool)

(assert (=> b!95370 (= e!62226 e!62225)))

(declare-fun res!48241 () Bool)

(assert (=> b!95370 (=> res!48241 e!62225)))

(assert (=> b!95370 (= res!48241 (= (h!2188 (toList!785 lt!46917)) (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95371 () Bool)

(assert (=> b!95371 (= e!62225 (contains!799 (t!5506 (toList!785 lt!46917)) (ite (or c!15683 c!15682) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2763 (underlying!330 thiss!992)))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (= (and d!25183 res!48240) b!95370))

(assert (= (and b!95370 (not res!48241)) b!95371))

(declare-fun m!103371 () Bool)

(assert (=> d!25183 m!103371))

(declare-fun m!103373 () Bool)

(assert (=> d!25183 m!103373))

(declare-fun m!103375 () Bool)

(assert (=> b!95371 m!103375))

(assert (=> b!94591 d!25183))

(assert (=> b!94324 d!24689))

(declare-fun bm!9586 () Bool)

(declare-fun call!9589 () Bool)

(declare-fun c!16007 () Bool)

(assert (=> bm!9586 (= call!9589 (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16007 (Cons!1597 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000) Nil!1598) Nil!1598)))))

(declare-fun b!95372 () Bool)

(declare-fun e!62228 () Bool)

(assert (=> b!95372 (= e!62228 call!9589)))

(declare-fun b!95373 () Bool)

(declare-fun e!62227 () Bool)

(assert (=> b!95373 (= e!62227 e!62228)))

(assert (=> b!95373 (= c!16007 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!25185 () Bool)

(declare-fun res!48243 () Bool)

(declare-fun e!62229 () Bool)

(assert (=> d!25185 (=> res!48243 e!62229)))

(assert (=> d!25185 (= res!48243 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 (v!2763 (underlying!330 thiss!992))))))))

(assert (=> d!25185 (= (arrayNoDuplicates!0 (_keys!4118 (v!2763 (underlying!330 thiss!992))) #b00000000000000000000000000000000 Nil!1598) e!62229)))

(declare-fun b!95374 () Bool)

(assert (=> b!95374 (= e!62229 e!62227)))

(declare-fun res!48242 () Bool)

(assert (=> b!95374 (=> (not res!48242) (not e!62227))))

(declare-fun e!62230 () Bool)

(assert (=> b!95374 (= res!48242 (not e!62230))))

(declare-fun res!48244 () Bool)

(assert (=> b!95374 (=> (not res!48244) (not e!62230))))

(assert (=> b!95374 (= res!48244 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95375 () Bool)

(assert (=> b!95375 (= e!62230 (contains!798 Nil!1598 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95376 () Bool)

(assert (=> b!95376 (= e!62228 call!9589)))

(assert (= (and d!25185 (not res!48243)) b!95374))

(assert (= (and b!95374 res!48244) b!95375))

(assert (= (and b!95374 res!48242) b!95373))

(assert (= (and b!95373 c!16007) b!95372))

(assert (= (and b!95373 (not c!16007)) b!95376))

(assert (= (or b!95372 b!95376) bm!9586))

(assert (=> bm!9586 m!102641))

(declare-fun m!103377 () Bool)

(assert (=> bm!9586 m!103377))

(assert (=> b!95373 m!102641))

(assert (=> b!95373 m!102641))

(assert (=> b!95373 m!102643))

(assert (=> b!95374 m!102641))

(assert (=> b!95374 m!102641))

(assert (=> b!95374 m!102643))

(assert (=> b!95375 m!102641))

(assert (=> b!95375 m!102641))

(declare-fun m!103379 () Bool)

(assert (=> b!95375 m!103379))

(assert (=> b!94594 d!25185))

(declare-fun b!95389 () Bool)

(declare-fun e!62239 () SeekEntryResult!261)

(declare-fun e!62237 () SeekEntryResult!261)

(assert (=> b!95389 (= e!62239 e!62237)))

(declare-fun lt!47472 () (_ BitVec 64))

(declare-fun c!16015 () Bool)

(assert (=> b!95389 (= c!16015 (= lt!47472 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!95390 () Bool)

(assert (=> b!95390 (= e!62237 (Found!261 (index!3187 lt!46835)))))

(declare-fun b!95391 () Bool)

(declare-fun e!62238 () SeekEntryResult!261)

(assert (=> b!95391 (= e!62238 (MissingVacant!261 (index!3187 lt!46835)))))

(declare-fun b!95392 () Bool)

(assert (=> b!95392 (= e!62238 (seekKeyOrZeroReturnVacant!0 (bvadd (x!12665 lt!46835) #b00000000000000000000000000000001) (nextIndex!0 (index!3187 lt!46835) (x!12665 lt!46835) (mask!6511 newMap!16)) (index!3187 lt!46835) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!95393 () Bool)

(declare-fun c!16016 () Bool)

(assert (=> b!95393 (= c!16016 (= lt!47472 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95393 (= e!62237 e!62238)))

(declare-fun d!25187 () Bool)

(declare-fun lt!47473 () SeekEntryResult!261)

(assert (=> d!25187 (and (or ((_ is Undefined!261) lt!47473) (not ((_ is Found!261) lt!47473)) (and (bvsge (index!3186 lt!47473) #b00000000000000000000000000000000) (bvslt (index!3186 lt!47473) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!47473) ((_ is Found!261) lt!47473) (not ((_ is MissingVacant!261) lt!47473)) (not (= (index!3188 lt!47473) (index!3187 lt!46835))) (and (bvsge (index!3188 lt!47473) #b00000000000000000000000000000000) (bvslt (index!3188 lt!47473) (size!2244 (_keys!4118 newMap!16))))) (or ((_ is Undefined!261) lt!47473) (ite ((_ is Found!261) lt!47473) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!47473)) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) (and ((_ is MissingVacant!261) lt!47473) (= (index!3188 lt!47473) (index!3187 lt!46835)) (= (select (arr!1996 (_keys!4118 newMap!16)) (index!3188 lt!47473)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!25187 (= lt!47473 e!62239)))

(declare-fun c!16014 () Bool)

(assert (=> d!25187 (= c!16014 (bvsge (x!12665 lt!46835) #b01111111111111111111111111111110))))

(assert (=> d!25187 (= lt!47472 (select (arr!1996 (_keys!4118 newMap!16)) (index!3187 lt!46835)))))

(assert (=> d!25187 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25187 (= (seekKeyOrZeroReturnVacant!0 (x!12665 lt!46835) (index!3187 lt!46835) (index!3187 lt!46835) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!47473)))

(declare-fun b!95394 () Bool)

(assert (=> b!95394 (= e!62239 Undefined!261)))

(assert (= (and d!25187 c!16014) b!95394))

(assert (= (and d!25187 (not c!16014)) b!95389))

(assert (= (and b!95389 c!16015) b!95390))

(assert (= (and b!95389 (not c!16015)) b!95393))

(assert (= (and b!95393 c!16016) b!95391))

(assert (= (and b!95393 (not c!16016)) b!95392))

(declare-fun m!103381 () Bool)

(assert (=> b!95392 m!103381))

(assert (=> b!95392 m!103381))

(assert (=> b!95392 m!101017))

(declare-fun m!103383 () Bool)

(assert (=> b!95392 m!103383))

(declare-fun m!103385 () Bool)

(assert (=> d!25187 m!103385))

(declare-fun m!103387 () Bool)

(assert (=> d!25187 m!103387))

(assert (=> d!25187 m!101441))

(assert (=> d!25187 m!101265))

(assert (=> b!94474 d!25187))

(assert (=> b!94369 d!24879))

(assert (=> b!94369 d!24677))

(declare-fun bm!9587 () Bool)

(declare-fun call!9592 () Bool)

(declare-fun lt!47474 () ListLongMap!1539)

(assert (=> bm!9587 (= call!9592 (contains!797 lt!47474 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95395 () Bool)

(declare-fun e!62247 () ListLongMap!1539)

(declare-fun e!62251 () ListLongMap!1539)

(assert (=> b!95395 (= e!62247 e!62251)))

(declare-fun c!16020 () Bool)

(assert (=> b!95395 (= c!16020 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95396 () Bool)

(declare-fun e!62249 () ListLongMap!1539)

(declare-fun call!9594 () ListLongMap!1539)

(assert (=> b!95396 (= e!62249 call!9594)))

(declare-fun b!95397 () Bool)

(declare-fun res!48246 () Bool)

(declare-fun e!62241 () Bool)

(assert (=> b!95397 (=> (not res!48246) (not e!62241))))

(declare-fun e!62242 () Bool)

(assert (=> b!95397 (= res!48246 e!62242)))

(declare-fun res!48249 () Bool)

(assert (=> b!95397 (=> res!48249 e!62242)))

(declare-fun e!62243 () Bool)

(assert (=> b!95397 (= res!48249 (not e!62243))))

(declare-fun res!48252 () Bool)

(assert (=> b!95397 (=> (not res!48252) (not e!62243))))

(assert (=> b!95397 (= res!48252 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95398 () Bool)

(declare-fun call!9595 () ListLongMap!1539)

(assert (=> b!95398 (= e!62247 (+!136 call!9595 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!95400 () Bool)

(declare-fun res!48251 () Bool)

(assert (=> b!95400 (=> (not res!48251) (not e!62241))))

(declare-fun e!62246 () Bool)

(assert (=> b!95400 (= res!48251 e!62246)))

(declare-fun c!16018 () Bool)

(assert (=> b!95400 (= c!16018 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95401 () Bool)

(assert (=> b!95401 (= e!62246 (not call!9592))))

(declare-fun e!62240 () Bool)

(declare-fun b!95402 () Bool)

(assert (=> b!95402 (= e!62240 (= (apply!90 lt!47474 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))))))

(assert (=> b!95402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95403 () Bool)

(assert (=> b!95403 (= e!62251 call!9594)))

(declare-fun b!95404 () Bool)

(declare-fun e!62244 () Bool)

(assert (=> b!95404 (= e!62244 (= (apply!90 lt!47474 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!95405 () Bool)

(declare-fun e!62248 () Bool)

(assert (=> b!95405 (= e!62248 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95406 () Bool)

(assert (=> b!95406 (= e!62243 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun call!9591 () ListLongMap!1539)

(declare-fun bm!9588 () Bool)

(assert (=> bm!9588 (= call!9591 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9589 () Bool)

(declare-fun call!9596 () Bool)

(assert (=> bm!9589 (= call!9596 (contains!797 lt!47474 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95407 () Bool)

(declare-fun e!62250 () Unit!2822)

(declare-fun Unit!2877 () Unit!2822)

(assert (=> b!95407 (= e!62250 Unit!2877)))

(declare-fun call!9590 () ListLongMap!1539)

(declare-fun call!9593 () ListLongMap!1539)

(declare-fun c!16021 () Bool)

(declare-fun bm!9590 () Bool)

(assert (=> bm!9590 (= call!9595 (+!136 (ite c!16021 call!9591 (ite c!16020 call!9590 call!9593)) (ite (or c!16021 c!16020) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!95408 () Bool)

(declare-fun e!62245 () Bool)

(assert (=> b!95408 (= e!62241 e!62245)))

(declare-fun c!16022 () Bool)

(assert (=> b!95408 (= c!16022 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95409 () Bool)

(declare-fun c!16017 () Bool)

(assert (=> b!95409 (= c!16017 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95409 (= e!62251 e!62249)))

(declare-fun b!95410 () Bool)

(assert (=> b!95410 (= e!62245 (not call!9596))))

(declare-fun d!25189 () Bool)

(assert (=> d!25189 e!62241))

(declare-fun res!48247 () Bool)

(assert (=> d!25189 (=> (not res!48247) (not e!62241))))

(assert (=> d!25189 (= res!48247 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!47479 () ListLongMap!1539)

(assert (=> d!25189 (= lt!47474 lt!47479)))

(declare-fun lt!47493 () Unit!2822)

(assert (=> d!25189 (= lt!47493 e!62250)))

(declare-fun c!16019 () Bool)

(assert (=> d!25189 (= c!16019 e!62248)))

(declare-fun res!48253 () Bool)

(assert (=> d!25189 (=> (not res!48253) (not e!62248))))

(assert (=> d!25189 (= res!48253 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!25189 (= lt!47479 e!62247)))

(assert (=> d!25189 (= c!16021 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25189 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25189 (= (getCurrentListMap!466 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47474)))

(declare-fun b!95399 () Bool)

(declare-fun e!62252 () Bool)

(assert (=> b!95399 (= e!62252 (= (apply!90 lt!47474 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!95411 () Bool)

(assert (=> b!95411 (= e!62249 call!9593)))

(declare-fun bm!9591 () Bool)

(assert (=> bm!9591 (= call!9593 call!9590)))

(declare-fun b!95412 () Bool)

(declare-fun lt!47490 () Unit!2822)

(assert (=> b!95412 (= e!62250 lt!47490)))

(declare-fun lt!47482 () ListLongMap!1539)

(assert (=> b!95412 (= lt!47482 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47481 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47481 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47483 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47483 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47484 () Unit!2822)

(assert (=> b!95412 (= lt!47484 (addStillContains!66 lt!47482 lt!47481 (zeroValue!2323 newMap!16) lt!47483))))

(assert (=> b!95412 (contains!797 (+!136 lt!47482 (tuple2!2335 lt!47481 (zeroValue!2323 newMap!16))) lt!47483)))

(declare-fun lt!47489 () Unit!2822)

(assert (=> b!95412 (= lt!47489 lt!47484)))

(declare-fun lt!47475 () ListLongMap!1539)

(assert (=> b!95412 (= lt!47475 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47487 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47487 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47485 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47485 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47486 () Unit!2822)

(assert (=> b!95412 (= lt!47486 (addApplyDifferent!66 lt!47475 lt!47487 (minValue!2323 newMap!16) lt!47485))))

(assert (=> b!95412 (= (apply!90 (+!136 lt!47475 (tuple2!2335 lt!47487 (minValue!2323 newMap!16))) lt!47485) (apply!90 lt!47475 lt!47485))))

(declare-fun lt!47494 () Unit!2822)

(assert (=> b!95412 (= lt!47494 lt!47486)))

(declare-fun lt!47480 () ListLongMap!1539)

(assert (=> b!95412 (= lt!47480 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47488 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47488 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47495 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47495 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47478 () Unit!2822)

(assert (=> b!95412 (= lt!47478 (addApplyDifferent!66 lt!47480 lt!47488 (zeroValue!2323 newMap!16) lt!47495))))

(assert (=> b!95412 (= (apply!90 (+!136 lt!47480 (tuple2!2335 lt!47488 (zeroValue!2323 newMap!16))) lt!47495) (apply!90 lt!47480 lt!47495))))

(declare-fun lt!47491 () Unit!2822)

(assert (=> b!95412 (= lt!47491 lt!47478)))

(declare-fun lt!47477 () ListLongMap!1539)

(assert (=> b!95412 (= lt!47477 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47492 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47492 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47476 () (_ BitVec 64))

(assert (=> b!95412 (= lt!47476 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95412 (= lt!47490 (addApplyDifferent!66 lt!47477 lt!47492 (minValue!2323 newMap!16) lt!47476))))

(assert (=> b!95412 (= (apply!90 (+!136 lt!47477 (tuple2!2335 lt!47492 (minValue!2323 newMap!16))) lt!47476) (apply!90 lt!47477 lt!47476))))

(declare-fun b!95413 () Bool)

(assert (=> b!95413 (= e!62242 e!62240)))

(declare-fun res!48245 () Bool)

(assert (=> b!95413 (=> (not res!48245) (not e!62240))))

(assert (=> b!95413 (= res!48245 (contains!797 lt!47474 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95413 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9592 () Bool)

(assert (=> bm!9592 (= call!9590 call!9591)))

(declare-fun b!95414 () Bool)

(assert (=> b!95414 (= e!62246 e!62252)))

(declare-fun res!48250 () Bool)

(assert (=> b!95414 (= res!48250 call!9592)))

(assert (=> b!95414 (=> (not res!48250) (not e!62252))))

(declare-fun b!95415 () Bool)

(assert (=> b!95415 (= e!62245 e!62244)))

(declare-fun res!48248 () Bool)

(assert (=> b!95415 (= res!48248 call!9596)))

(assert (=> b!95415 (=> (not res!48248) (not e!62244))))

(declare-fun bm!9593 () Bool)

(assert (=> bm!9593 (= call!9594 call!9595)))

(assert (= (and d!25189 c!16021) b!95398))

(assert (= (and d!25189 (not c!16021)) b!95395))

(assert (= (and b!95395 c!16020) b!95403))

(assert (= (and b!95395 (not c!16020)) b!95409))

(assert (= (and b!95409 c!16017) b!95396))

(assert (= (and b!95409 (not c!16017)) b!95411))

(assert (= (or b!95396 b!95411) bm!9591))

(assert (= (or b!95403 bm!9591) bm!9592))

(assert (= (or b!95403 b!95396) bm!9593))

(assert (= (or b!95398 bm!9592) bm!9588))

(assert (= (or b!95398 bm!9593) bm!9590))

(assert (= (and d!25189 res!48253) b!95405))

(assert (= (and d!25189 c!16019) b!95412))

(assert (= (and d!25189 (not c!16019)) b!95407))

(assert (= (and d!25189 res!48247) b!95397))

(assert (= (and b!95397 res!48252) b!95406))

(assert (= (and b!95397 (not res!48249)) b!95413))

(assert (= (and b!95413 res!48245) b!95402))

(assert (= (and b!95397 res!48246) b!95400))

(assert (= (and b!95400 c!16018) b!95414))

(assert (= (and b!95400 (not c!16018)) b!95401))

(assert (= (and b!95414 res!48250) b!95399))

(assert (= (or b!95414 b!95401) bm!9587))

(assert (= (and b!95400 res!48251) b!95408))

(assert (= (and b!95408 c!16022) b!95415))

(assert (= (and b!95408 (not c!16022)) b!95410))

(assert (= (and b!95415 res!48248) b!95404))

(assert (= (or b!95415 b!95410) bm!9589))

(declare-fun b_lambda!4209 () Bool)

(assert (=> (not b_lambda!4209) (not b!95402)))

(assert (=> b!95402 t!5513))

(declare-fun b_and!5833 () Bool)

(assert (= b_and!5829 (and (=> t!5513 result!3205) b_and!5833)))

(assert (=> b!95402 t!5515))

(declare-fun b_and!5835 () Bool)

(assert (= b_and!5831 (and (=> t!5515 result!3207) b_and!5835)))

(declare-fun m!103389 () Bool)

(assert (=> b!95399 m!103389))

(declare-fun m!103391 () Bool)

(assert (=> b!95398 m!103391))

(declare-fun m!103393 () Bool)

(assert (=> bm!9590 m!103393))

(assert (=> d!25189 m!101265))

(declare-fun m!103395 () Bool)

(assert (=> b!95404 m!103395))

(declare-fun m!103397 () Bool)

(assert (=> bm!9587 m!103397))

(declare-fun m!103399 () Bool)

(assert (=> bm!9589 m!103399))

(declare-fun m!103401 () Bool)

(assert (=> b!95402 m!103401))

(assert (=> b!95402 m!101275))

(declare-fun m!103403 () Bool)

(assert (=> b!95402 m!103403))

(assert (=> b!95402 m!101279))

(assert (=> b!95402 m!101275))

(assert (=> b!95402 m!103401))

(assert (=> b!95402 m!101279))

(declare-fun m!103405 () Bool)

(assert (=> b!95402 m!103405))

(assert (=> b!95413 m!101279))

(assert (=> b!95413 m!101279))

(declare-fun m!103407 () Bool)

(assert (=> b!95413 m!103407))

(declare-fun m!103409 () Bool)

(assert (=> bm!9588 m!103409))

(assert (=> b!95406 m!101279))

(assert (=> b!95406 m!101279))

(assert (=> b!95406 m!101287))

(assert (=> b!95405 m!101279))

(assert (=> b!95405 m!101279))

(assert (=> b!95405 m!101287))

(declare-fun m!103411 () Bool)

(assert (=> b!95412 m!103411))

(declare-fun m!103413 () Bool)

(assert (=> b!95412 m!103413))

(declare-fun m!103415 () Bool)

(assert (=> b!95412 m!103415))

(declare-fun m!103417 () Bool)

(assert (=> b!95412 m!103417))

(assert (=> b!95412 m!101279))

(declare-fun m!103419 () Bool)

(assert (=> b!95412 m!103419))

(declare-fun m!103421 () Bool)

(assert (=> b!95412 m!103421))

(declare-fun m!103423 () Bool)

(assert (=> b!95412 m!103423))

(assert (=> b!95412 m!103419))

(declare-fun m!103425 () Bool)

(assert (=> b!95412 m!103425))

(assert (=> b!95412 m!103409))

(declare-fun m!103427 () Bool)

(assert (=> b!95412 m!103427))

(declare-fun m!103429 () Bool)

(assert (=> b!95412 m!103429))

(declare-fun m!103431 () Bool)

(assert (=> b!95412 m!103431))

(declare-fun m!103433 () Bool)

(assert (=> b!95412 m!103433))

(declare-fun m!103435 () Bool)

(assert (=> b!95412 m!103435))

(assert (=> b!95412 m!103411))

(assert (=> b!95412 m!103433))

(assert (=> b!95412 m!103415))

(declare-fun m!103437 () Bool)

(assert (=> b!95412 m!103437))

(declare-fun m!103439 () Bool)

(assert (=> b!95412 m!103439))

(assert (=> b!94369 d!25189))

(declare-fun d!25191 () Bool)

(assert (=> d!25191 (isDefined!101 (getValueByKey!147 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47496 () Unit!2822)

(assert (=> d!25191 (= lt!47496 (choose!568 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62253 () Bool)

(assert (=> d!25191 e!62253))

(declare-fun res!48254 () Bool)

(assert (=> d!25191 (=> (not res!48254) (not e!62253))))

(assert (=> d!25191 (= res!48254 (isStrictlySorted!297 (toList!785 lt!46547)))))

(assert (=> d!25191 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000) lt!47496)))

(declare-fun b!95416 () Bool)

(assert (=> b!95416 (= e!62253 (containsKey!151 (toList!785 lt!46547) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25191 res!48254) b!95416))

(assert (=> d!25191 m!101651))

(assert (=> d!25191 m!101651))

(assert (=> d!25191 m!101653))

(declare-fun m!103441 () Bool)

(assert (=> d!25191 m!103441))

(assert (=> d!25191 m!102245))

(assert (=> b!95416 m!101647))

(assert (=> b!94587 d!25191))

(assert (=> b!94587 d!24903))

(assert (=> b!94587 d!24901))

(declare-fun d!25193 () Bool)

(assert (=> d!25193 (= (apply!90 lt!46929 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1283 (getValueByKey!147 (toList!785 lt!46929) (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3929 () Bool)

(assert (= bs!3929 d!25193))

(assert (=> bs!3929 m!101279))

(assert (=> bs!3929 m!102871))

(assert (=> bs!3929 m!102871))

(declare-fun m!103443 () Bool)

(assert (=> bs!3929 m!103443))

(assert (=> b!94612 d!25193))

(declare-fun c!16023 () Bool)

(declare-fun d!25195 () Bool)

(assert (=> d!25195 (= c!16023 ((_ is ValueCellFull!963) (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!62254 () V!3131)

(assert (=> d!25195 (= (get!1280 (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62254)))

(declare-fun b!95417 () Bool)

(assert (=> b!95417 (= e!62254 (get!1281 (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95418 () Bool)

(assert (=> b!95418 (= e!62254 (get!1282 (select (arr!1997 (ite c!15725 (_values!2419 newMap!16) (array!4203 (store (arr!1997 (_values!2419 newMap!16)) (index!3186 lt!46636) (ValueCellFull!963 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2245 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25195 c!16023) b!95417))

(assert (= (and d!25195 (not c!16023)) b!95418))

(assert (=> b!95417 m!101731))

(assert (=> b!95417 m!101275))

(declare-fun m!103445 () Bool)

(assert (=> b!95417 m!103445))

(assert (=> b!95418 m!101731))

(assert (=> b!95418 m!101275))

(declare-fun m!103447 () Bool)

(assert (=> b!95418 m!103447))

(assert (=> b!94612 d!25195))

(declare-fun d!25197 () Bool)

(assert (=> d!25197 (isDefined!101 (getValueByKey!147 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!47497 () Unit!2822)

(assert (=> d!25197 (= lt!47497 (choose!568 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!62255 () Bool)

(assert (=> d!25197 e!62255))

(declare-fun res!48255 () Bool)

(assert (=> d!25197 (=> (not res!48255) (not e!62255))))

(assert (=> d!25197 (= res!48255 (isStrictlySorted!297 (toList!785 e!61547)))))

(assert (=> d!25197 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)) lt!47497)))

(declare-fun b!95419 () Bool)

(assert (=> b!95419 (= e!62255 (containsKey!151 (toList!785 e!61547) (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!25197 res!48255) b!95419))

(assert (=> d!25197 m!101017))

(assert (=> d!25197 m!101701))

(assert (=> d!25197 m!101701))

(assert (=> d!25197 m!101703))

(assert (=> d!25197 m!101017))

(declare-fun m!103449 () Bool)

(assert (=> d!25197 m!103449))

(declare-fun m!103451 () Bool)

(assert (=> d!25197 m!103451))

(assert (=> b!95419 m!101017))

(assert (=> b!95419 m!101697))

(assert (=> b!94600 d!25197))

(assert (=> b!94600 d!25001))

(assert (=> b!94600 d!25003))

(declare-fun d!25199 () Bool)

(declare-fun lt!47498 () Bool)

(assert (=> d!25199 (= lt!47498 (select (content!97 (toList!785 lt!46868)) (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun e!62257 () Bool)

(assert (=> d!25199 (= lt!47498 e!62257)))

(declare-fun res!48256 () Bool)

(assert (=> d!25199 (=> (not res!48256) (not e!62257))))

(assert (=> d!25199 (= res!48256 ((_ is Cons!1596) (toList!785 lt!46868)))))

(assert (=> d!25199 (= (contains!799 (toList!785 lt!46868) (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) lt!47498)))

(declare-fun b!95420 () Bool)

(declare-fun e!62256 () Bool)

(assert (=> b!95420 (= e!62257 e!62256)))

(declare-fun res!48257 () Bool)

(assert (=> b!95420 (=> res!48257 e!62256)))

(assert (=> b!95420 (= res!48257 (= (h!2188 (toList!785 lt!46868)) (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(declare-fun b!95421 () Bool)

(assert (=> b!95421 (= e!62256 (contains!799 (t!5506 (toList!785 lt!46868)) (tuple2!2335 lt!46565 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))

(assert (= (and d!25199 res!48256) b!95420))

(assert (= (and b!95420 (not res!48257)) b!95421))

(declare-fun m!103453 () Bool)

(assert (=> d!25199 m!103453))

(declare-fun m!103455 () Bool)

(assert (=> d!25199 m!103455))

(declare-fun m!103457 () Bool)

(assert (=> b!95421 m!103457))

(assert (=> b!94497 d!25199))

(declare-fun d!25201 () Bool)

(declare-fun e!62258 () Bool)

(assert (=> d!25201 e!62258))

(declare-fun res!48258 () Bool)

(assert (=> d!25201 (=> res!48258 e!62258)))

(declare-fun lt!47501 () Bool)

(assert (=> d!25201 (= res!48258 (not lt!47501))))

(declare-fun lt!47499 () Bool)

(assert (=> d!25201 (= lt!47501 lt!47499)))

(declare-fun lt!47500 () Unit!2822)

(declare-fun e!62259 () Unit!2822)

(assert (=> d!25201 (= lt!47500 e!62259)))

(declare-fun c!16024 () Bool)

(assert (=> d!25201 (= c!16024 lt!47499)))

(assert (=> d!25201 (= lt!47499 (containsKey!151 (toList!785 lt!46929) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25201 (= (contains!797 lt!46929 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47501)))

(declare-fun b!95422 () Bool)

(declare-fun lt!47502 () Unit!2822)

(assert (=> b!95422 (= e!62259 lt!47502)))

(assert (=> b!95422 (= lt!47502 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46929) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95422 (isDefined!101 (getValueByKey!147 (toList!785 lt!46929) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95423 () Bool)

(declare-fun Unit!2878 () Unit!2822)

(assert (=> b!95423 (= e!62259 Unit!2878)))

(declare-fun b!95424 () Bool)

(assert (=> b!95424 (= e!62258 (isDefined!101 (getValueByKey!147 (toList!785 lt!46929) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25201 c!16024) b!95422))

(assert (= (and d!25201 (not c!16024)) b!95423))

(assert (= (and d!25201 (not res!48258)) b!95424))

(declare-fun m!103459 () Bool)

(assert (=> d!25201 m!103459))

(declare-fun m!103461 () Bool)

(assert (=> b!95422 m!103461))

(assert (=> b!95422 m!101979))

(assert (=> b!95422 m!101979))

(declare-fun m!103463 () Bool)

(assert (=> b!95422 m!103463))

(assert (=> b!95424 m!101979))

(assert (=> b!95424 m!101979))

(assert (=> b!95424 m!103463))

(assert (=> bm!9496 d!25201))

(assert (=> b!94401 d!25035))

(declare-fun b!95427 () Bool)

(declare-fun e!62261 () Option!153)

(assert (=> b!95427 (= e!62261 (getValueByKey!147 (t!5506 (toList!785 lt!46928)) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95425 () Bool)

(declare-fun e!62260 () Option!153)

(assert (=> b!95425 (= e!62260 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46928)))))))

(declare-fun b!95428 () Bool)

(assert (=> b!95428 (= e!62261 None!151)))

(declare-fun b!95426 () Bool)

(assert (=> b!95426 (= e!62260 e!62261)))

(declare-fun c!16026 () Bool)

(assert (=> b!95426 (= c!16026 (and ((_ is Cons!1596) (toList!785 lt!46928)) (not (= (_1!1177 (h!2188 (toList!785 lt!46928))) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!16025 () Bool)

(declare-fun d!25203 () Bool)

(assert (=> d!25203 (= c!16025 (and ((_ is Cons!1596) (toList!785 lt!46928)) (= (_1!1177 (h!2188 (toList!785 lt!46928))) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25203 (= (getValueByKey!147 (toList!785 lt!46928) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62260)))

(assert (= (and d!25203 c!16025) b!95425))

(assert (= (and d!25203 (not c!16025)) b!95426))

(assert (= (and b!95426 c!16026) b!95427))

(assert (= (and b!95426 (not c!16026)) b!95428))

(declare-fun m!103465 () Bool)

(assert (=> b!95427 m!103465))

(assert (=> b!94603 d!25203))

(declare-fun d!25205 () Bool)

(declare-fun e!62262 () Bool)

(assert (=> d!25205 e!62262))

(declare-fun res!48259 () Bool)

(assert (=> d!25205 (=> res!48259 e!62262)))

(declare-fun lt!47505 () Bool)

(assert (=> d!25205 (= res!48259 (not lt!47505))))

(declare-fun lt!47503 () Bool)

(assert (=> d!25205 (= lt!47505 lt!47503)))

(declare-fun lt!47504 () Unit!2822)

(declare-fun e!62263 () Unit!2822)

(assert (=> d!25205 (= lt!47504 e!62263)))

(declare-fun c!16027 () Bool)

(assert (=> d!25205 (= c!16027 lt!47503)))

(assert (=> d!25205 (= lt!47503 (containsKey!151 (toList!785 lt!46849) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!25205 (= (contains!797 lt!46849 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47505)))

(declare-fun b!95429 () Bool)

(declare-fun lt!47506 () Unit!2822)

(assert (=> b!95429 (= e!62263 lt!47506)))

(assert (=> b!95429 (= lt!47506 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46849) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> b!95429 (isDefined!101 (getValueByKey!147 (toList!785 lt!46849) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95430 () Bool)

(declare-fun Unit!2879 () Unit!2822)

(assert (=> b!95430 (= e!62263 Unit!2879)))

(declare-fun b!95431 () Bool)

(assert (=> b!95431 (= e!62262 (isDefined!101 (getValueByKey!147 (toList!785 lt!46849) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25205 c!16027) b!95429))

(assert (= (and d!25205 (not c!16027)) b!95430))

(assert (= (and d!25205 (not res!48259)) b!95431))

(declare-fun m!103467 () Bool)

(assert (=> d!25205 m!103467))

(declare-fun m!103469 () Bool)

(assert (=> b!95429 m!103469))

(assert (=> b!95429 m!101489))

(assert (=> b!95429 m!101489))

(declare-fun m!103471 () Bool)

(assert (=> b!95429 m!103471))

(assert (=> b!95431 m!101489))

(assert (=> b!95431 m!101489))

(assert (=> b!95431 m!103471))

(assert (=> d!24603 d!25205))

(declare-fun e!62265 () Option!153)

(declare-fun b!95434 () Bool)

(assert (=> b!95434 (= e!62265 (getValueByKey!147 (t!5506 lt!46846) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95432 () Bool)

(declare-fun e!62264 () Option!153)

(assert (=> b!95432 (= e!62264 (Some!152 (_2!1177 (h!2188 lt!46846))))))

(declare-fun b!95435 () Bool)

(assert (=> b!95435 (= e!62265 None!151)))

(declare-fun b!95433 () Bool)

(assert (=> b!95433 (= e!62264 e!62265)))

(declare-fun c!16029 () Bool)

(assert (=> b!95433 (= c!16029 (and ((_ is Cons!1596) lt!46846) (not (= (_1!1177 (h!2188 lt!46846)) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun d!25207 () Bool)

(declare-fun c!16028 () Bool)

(assert (=> d!25207 (= c!16028 (and ((_ is Cons!1596) lt!46846) (= (_1!1177 (h!2188 lt!46846)) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25207 (= (getValueByKey!147 lt!46846 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62264)))

(assert (= (and d!25207 c!16028) b!95432))

(assert (= (and d!25207 (not c!16028)) b!95433))

(assert (= (and b!95433 c!16029) b!95434))

(assert (= (and b!95433 (not c!16029)) b!95435))

(declare-fun m!103473 () Bool)

(assert (=> b!95434 m!103473))

(assert (=> d!24603 d!25207))

(declare-fun d!25209 () Bool)

(assert (=> d!25209 (= (getValueByKey!147 lt!46846 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!47507 () Unit!2822)

(assert (=> d!25209 (= lt!47507 (choose!578 lt!46846 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun e!62266 () Bool)

(assert (=> d!25209 e!62266))

(declare-fun res!48260 () Bool)

(assert (=> d!25209 (=> (not res!48260) (not e!62266))))

(assert (=> d!25209 (= res!48260 (isStrictlySorted!297 lt!46846))))

(assert (=> d!25209 (= (lemmaContainsTupThenGetReturnValue!65 lt!46846 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47507)))

(declare-fun b!95436 () Bool)

(declare-fun res!48261 () Bool)

(assert (=> b!95436 (=> (not res!48261) (not e!62266))))

(assert (=> b!95436 (= res!48261 (containsKey!151 lt!46846 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95437 () Bool)

(assert (=> b!95437 (= e!62266 (contains!799 lt!46846 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25209 res!48260) b!95436))

(assert (= (and b!95436 res!48261) b!95437))

(assert (=> d!25209 m!101483))

(declare-fun m!103475 () Bool)

(assert (=> d!25209 m!103475))

(declare-fun m!103477 () Bool)

(assert (=> d!25209 m!103477))

(declare-fun m!103479 () Bool)

(assert (=> b!95436 m!103479))

(declare-fun m!103481 () Bool)

(assert (=> b!95437 m!103481))

(assert (=> d!24603 d!25209))

(declare-fun b!95438 () Bool)

(declare-fun e!62268 () List!1600)

(declare-fun call!9597 () List!1600)

(assert (=> b!95438 (= e!62268 call!9597)))

(declare-fun lt!47508 () List!1600)

(declare-fun b!95439 () Bool)

(declare-fun e!62270 () Bool)

(assert (=> b!95439 (= e!62270 (contains!799 lt!47508 (tuple2!2335 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95440 () Bool)

(declare-fun e!62271 () List!1600)

(assert (=> b!95440 (= e!62271 e!62268)))

(declare-fun c!16032 () Bool)

(assert (=> b!95440 (= c!16032 (and ((_ is Cons!1596) (toList!785 lt!46548)) (= (_1!1177 (h!2188 (toList!785 lt!46548))) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95441 () Bool)

(declare-fun c!16031 () Bool)

(declare-fun e!62267 () List!1600)

(assert (=> b!95441 (= e!62267 (ite c!16032 (t!5506 (toList!785 lt!46548)) (ite c!16031 (Cons!1596 (h!2188 (toList!785 lt!46548)) (t!5506 (toList!785 lt!46548))) Nil!1597)))))

(declare-fun bm!9594 () Bool)

(declare-fun call!9599 () List!1600)

(assert (=> bm!9594 (= call!9597 call!9599)))

(declare-fun c!16033 () Bool)

(declare-fun bm!9595 () Bool)

(assert (=> bm!9595 (= call!9599 ($colon$colon!75 e!62267 (ite c!16033 (h!2188 (toList!785 lt!46548)) (tuple2!2335 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!16030 () Bool)

(assert (=> bm!9595 (= c!16030 c!16033)))

(declare-fun b!95442 () Bool)

(assert (=> b!95442 (= e!62267 (insertStrictlySorted!67 (t!5506 (toList!785 lt!46548)) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95443 () Bool)

(declare-fun e!62269 () List!1600)

(declare-fun call!9598 () List!1600)

(assert (=> b!95443 (= e!62269 call!9598)))

(declare-fun b!95444 () Bool)

(assert (=> b!95444 (= e!62269 call!9598)))

(declare-fun bm!9596 () Bool)

(assert (=> bm!9596 (= call!9598 call!9597)))

(declare-fun b!95445 () Bool)

(assert (=> b!95445 (= c!16031 (and ((_ is Cons!1596) (toList!785 lt!46548)) (bvsgt (_1!1177 (h!2188 (toList!785 lt!46548))) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> b!95445 (= e!62268 e!62269)))

(declare-fun b!95446 () Bool)

(declare-fun res!48263 () Bool)

(assert (=> b!95446 (=> (not res!48263) (not e!62270))))

(assert (=> b!95446 (= res!48263 (containsKey!151 lt!47508 (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun d!25211 () Bool)

(assert (=> d!25211 e!62270))

(declare-fun res!48262 () Bool)

(assert (=> d!25211 (=> (not res!48262) (not e!62270))))

(assert (=> d!25211 (= res!48262 (isStrictlySorted!297 lt!47508))))

(assert (=> d!25211 (= lt!47508 e!62271)))

(assert (=> d!25211 (= c!16033 (and ((_ is Cons!1596) (toList!785 lt!46548)) (bvslt (_1!1177 (h!2188 (toList!785 lt!46548))) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25211 (isStrictlySorted!297 (toList!785 lt!46548))))

(assert (=> d!25211 (= (insertStrictlySorted!67 (toList!785 lt!46548) (_1!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 lt!46560 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47508)))

(declare-fun b!95447 () Bool)

(assert (=> b!95447 (= e!62271 call!9599)))

(assert (= (and d!25211 c!16033) b!95447))

(assert (= (and d!25211 (not c!16033)) b!95440))

(assert (= (and b!95440 c!16032) b!95438))

(assert (= (and b!95440 (not c!16032)) b!95445))

(assert (= (and b!95445 c!16031) b!95443))

(assert (= (and b!95445 (not c!16031)) b!95444))

(assert (= (or b!95443 b!95444) bm!9596))

(assert (= (or b!95438 bm!9596) bm!9594))

(assert (= (or b!95447 bm!9594) bm!9595))

(assert (= (and bm!9595 c!16030) b!95442))

(assert (= (and bm!9595 (not c!16030)) b!95441))

(assert (= (and d!25211 res!48262) b!95446))

(assert (= (and b!95446 res!48263) b!95439))

(declare-fun m!103483 () Bool)

(assert (=> b!95446 m!103483))

(declare-fun m!103485 () Bool)

(assert (=> bm!9595 m!103485))

(declare-fun m!103487 () Bool)

(assert (=> b!95442 m!103487))

(declare-fun m!103489 () Bool)

(assert (=> d!25211 m!103489))

(declare-fun m!103491 () Bool)

(assert (=> d!25211 m!103491))

(declare-fun m!103493 () Bool)

(assert (=> b!95439 m!103493))

(assert (=> d!24603 d!25211))

(declare-fun d!25213 () Bool)

(declare-fun e!62272 () Bool)

(assert (=> d!25213 e!62272))

(declare-fun res!48264 () Bool)

(assert (=> d!25213 (=> (not res!48264) (not e!62272))))

(declare-fun lt!47512 () ListLongMap!1539)

(assert (=> d!25213 (= res!48264 (contains!797 lt!47512 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun lt!47509 () List!1600)

(assert (=> d!25213 (= lt!47512 (ListLongMap!1540 lt!47509))))

(declare-fun lt!47510 () Unit!2822)

(declare-fun lt!47511 () Unit!2822)

(assert (=> d!25213 (= lt!47510 lt!47511)))

(assert (=> d!25213 (= (getValueByKey!147 lt!47509 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!25213 (= lt!47511 (lemmaContainsTupThenGetReturnValue!65 lt!47509 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!25213 (= lt!47509 (insertStrictlySorted!67 (toList!785 call!9497) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!25213 (= (+!136 call!9497 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) lt!47512)))

(declare-fun b!95448 () Bool)

(declare-fun res!48265 () Bool)

(assert (=> b!95448 (=> (not res!48265) (not e!62272))))

(assert (=> b!95448 (= res!48265 (= (getValueByKey!147 (toList!785 lt!47512) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun b!95449 () Bool)

(assert (=> b!95449 (= e!62272 (contains!799 (toList!785 lt!47512) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(assert (= (and d!25213 res!48264) b!95448))

(assert (= (and b!95448 res!48265) b!95449))

(declare-fun m!103495 () Bool)

(assert (=> d!25213 m!103495))

(declare-fun m!103497 () Bool)

(assert (=> d!25213 m!103497))

(declare-fun m!103499 () Bool)

(assert (=> d!25213 m!103499))

(declare-fun m!103501 () Bool)

(assert (=> d!25213 m!103501))

(declare-fun m!103503 () Bool)

(assert (=> b!95448 m!103503))

(declare-fun m!103505 () Bool)

(assert (=> b!95449 m!103505))

(assert (=> b!94569 d!25213))

(assert (=> b!94558 d!24689))

(declare-fun b!95450 () Bool)

(declare-fun e!62274 () (_ BitVec 32))

(assert (=> b!95450 (= e!62274 #b00000000000000000000000000000000)))

(declare-fun bm!9597 () Bool)

(declare-fun call!9600 () (_ BitVec 32))

(assert (=> bm!9597 (= call!9600 (arrayCountValidKeys!0 (_keys!4118 (_2!1176 lt!46650)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(declare-fun b!95451 () Bool)

(declare-fun e!62273 () (_ BitVec 32))

(assert (=> b!95451 (= e!62274 e!62273)))

(declare-fun c!16035 () Bool)

(assert (=> b!95451 (= c!16035 (validKeyInArray!0 (select (arr!1996 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(declare-fun d!25215 () Bool)

(declare-fun lt!47513 () (_ BitVec 32))

(assert (=> d!25215 (and (bvsge lt!47513 #b00000000000000000000000000000000) (bvsle lt!47513 (bvsub (size!2244 (_keys!4118 (_2!1176 lt!46650))) #b00000000000000000000000000000000)))))

(assert (=> d!25215 (= lt!47513 e!62274)))

(declare-fun c!16034 () Bool)

(assert (=> d!25215 (= c!16034 (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(assert (=> d!25215 (and (bvsle #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2244 (_keys!4118 (_2!1176 lt!46650))) (size!2244 (_keys!4118 (_2!1176 lt!46650)))))))

(assert (=> d!25215 (= (arrayCountValidKeys!0 (_keys!4118 (_2!1176 lt!46650)) #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46650)))) lt!47513)))

(declare-fun b!95452 () Bool)

(assert (=> b!95452 (= e!62273 (bvadd #b00000000000000000000000000000001 call!9600))))

(declare-fun b!95453 () Bool)

(assert (=> b!95453 (= e!62273 call!9600)))

(assert (= (and d!25215 c!16034) b!95450))

(assert (= (and d!25215 (not c!16034)) b!95451))

(assert (= (and b!95451 c!16035) b!95452))

(assert (= (and b!95451 (not c!16035)) b!95453))

(assert (= (or b!95452 b!95453) bm!9597))

(declare-fun m!103507 () Bool)

(assert (=> bm!9597 m!103507))

(assert (=> b!95451 m!101937))

(assert (=> b!95451 m!101937))

(assert (=> b!95451 m!101945))

(assert (=> b!94595 d!25215))

(declare-fun b!95456 () Bool)

(declare-fun e!62276 () Option!153)

(assert (=> b!95456 (= e!62276 (getValueByKey!147 (t!5506 (toList!785 lt!46987)) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95454 () Bool)

(declare-fun e!62275 () Option!153)

(assert (=> b!95454 (= e!62275 (Some!152 (_2!1177 (h!2188 (toList!785 lt!46987)))))))

(declare-fun b!95457 () Bool)

(assert (=> b!95457 (= e!62276 None!151)))

(declare-fun b!95455 () Bool)

(assert (=> b!95455 (= e!62275 e!62276)))

(declare-fun c!16037 () Bool)

(assert (=> b!95455 (= c!16037 (and ((_ is Cons!1596) (toList!785 lt!46987)) (not (= (_1!1177 (h!2188 (toList!785 lt!46987))) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun d!25217 () Bool)

(declare-fun c!16036 () Bool)

(assert (=> d!25217 (= c!16036 (and ((_ is Cons!1596) (toList!785 lt!46987)) (= (_1!1177 (h!2188 (toList!785 lt!46987))) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25217 (= (getValueByKey!147 (toList!785 lt!46987) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62275)))

(assert (= (and d!25217 c!16036) b!95454))

(assert (= (and d!25217 (not c!16036)) b!95455))

(assert (= (and b!95455 c!16037) b!95456))

(assert (= (and b!95455 (not c!16037)) b!95457))

(declare-fun m!103509 () Bool)

(assert (=> b!95456 m!103509))

(assert (=> b!94661 d!25217))

(declare-fun d!25219 () Bool)

(declare-fun res!48266 () Bool)

(declare-fun e!62277 () Bool)

(assert (=> d!25219 (=> (not res!48266) (not e!62277))))

(assert (=> d!25219 (= res!48266 (simpleValid!65 (_2!1176 lt!46823)))))

(assert (=> d!25219 (= (valid!376 (_2!1176 lt!46823)) e!62277)))

(declare-fun b!95458 () Bool)

(declare-fun res!48267 () Bool)

(assert (=> b!95458 (=> (not res!48267) (not e!62277))))

(assert (=> b!95458 (= res!48267 (= (arrayCountValidKeys!0 (_keys!4118 (_2!1176 lt!46823)) #b00000000000000000000000000000000 (size!2244 (_keys!4118 (_2!1176 lt!46823)))) (_size!466 (_2!1176 lt!46823))))))

(declare-fun b!95459 () Bool)

(declare-fun res!48268 () Bool)

(assert (=> b!95459 (=> (not res!48268) (not e!62277))))

(assert (=> b!95459 (= res!48268 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (_2!1176 lt!46823)) (mask!6511 (_2!1176 lt!46823))))))

(declare-fun b!95460 () Bool)

(assert (=> b!95460 (= e!62277 (arrayNoDuplicates!0 (_keys!4118 (_2!1176 lt!46823)) #b00000000000000000000000000000000 Nil!1598))))

(assert (= (and d!25219 res!48266) b!95458))

(assert (= (and b!95458 res!48267) b!95459))

(assert (= (and b!95459 res!48268) b!95460))

(declare-fun m!103511 () Bool)

(assert (=> d!25219 m!103511))

(declare-fun m!103513 () Bool)

(assert (=> b!95458 m!103513))

(declare-fun m!103515 () Bool)

(assert (=> b!95459 m!103515))

(declare-fun m!103517 () Bool)

(assert (=> b!95460 m!103517))

(assert (=> b!94452 d!25219))

(declare-fun d!25221 () Bool)

(declare-fun e!62278 () Bool)

(assert (=> d!25221 e!62278))

(declare-fun res!48269 () Bool)

(assert (=> d!25221 (=> res!48269 e!62278)))

(declare-fun lt!47516 () Bool)

(assert (=> d!25221 (= res!48269 (not lt!47516))))

(declare-fun lt!47514 () Bool)

(assert (=> d!25221 (= lt!47516 lt!47514)))

(declare-fun lt!47515 () Unit!2822)

(declare-fun e!62279 () Unit!2822)

(assert (=> d!25221 (= lt!47515 e!62279)))

(declare-fun c!16038 () Bool)

(assert (=> d!25221 (= c!16038 lt!47514)))

(assert (=> d!25221 (= lt!47514 (containsKey!151 (toList!785 lt!46701) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25221 (= (contains!797 lt!46701 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47516)))

(declare-fun b!95461 () Bool)

(declare-fun lt!47517 () Unit!2822)

(assert (=> b!95461 (= e!62279 lt!47517)))

(assert (=> b!95461 (= lt!47517 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46701) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!95461 (isDefined!101 (getValueByKey!147 (toList!785 lt!46701) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95462 () Bool)

(declare-fun Unit!2880 () Unit!2822)

(assert (=> b!95462 (= e!62279 Unit!2880)))

(declare-fun b!95463 () Bool)

(assert (=> b!95463 (= e!62278 (isDefined!101 (getValueByKey!147 (toList!785 lt!46701) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25221 c!16038) b!95461))

(assert (= (and d!25221 (not c!16038)) b!95462))

(assert (= (and d!25221 (not res!48269)) b!95463))

(declare-fun m!103519 () Bool)

(assert (=> d!25221 m!103519))

(declare-fun m!103521 () Bool)

(assert (=> b!95461 m!103521))

(assert (=> b!95461 m!101329))

(assert (=> b!95461 m!101329))

(declare-fun m!103523 () Bool)

(assert (=> b!95461 m!103523))

(assert (=> b!95463 m!101329))

(assert (=> b!95463 m!101329))

(assert (=> b!95463 m!103523))

(assert (=> d!24573 d!25221))

(declare-fun e!62281 () Option!153)

(declare-fun b!95466 () Bool)

(assert (=> b!95466 (= e!62281 (getValueByKey!147 (t!5506 lt!46698) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95464 () Bool)

(declare-fun e!62280 () Option!153)

(assert (=> b!95464 (= e!62280 (Some!152 (_2!1177 (h!2188 lt!46698))))))

(declare-fun b!95467 () Bool)

(assert (=> b!95467 (= e!62281 None!151)))

(declare-fun b!95465 () Bool)

(assert (=> b!95465 (= e!62280 e!62281)))

(declare-fun c!16040 () Bool)

(assert (=> b!95465 (= c!16040 (and ((_ is Cons!1596) lt!46698) (not (= (_1!1177 (h!2188 lt!46698)) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun d!25223 () Bool)

(declare-fun c!16039 () Bool)

(assert (=> d!25223 (= c!16039 (and ((_ is Cons!1596) lt!46698) (= (_1!1177 (h!2188 lt!46698)) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25223 (= (getValueByKey!147 lt!46698 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62280)))

(assert (= (and d!25223 c!16039) b!95464))

(assert (= (and d!25223 (not c!16039)) b!95465))

(assert (= (and b!95465 c!16040) b!95466))

(assert (= (and b!95465 (not c!16040)) b!95467))

(declare-fun m!103525 () Bool)

(assert (=> b!95466 m!103525))

(assert (=> d!24573 d!25223))

(declare-fun d!25225 () Bool)

(assert (=> d!25225 (= (getValueByKey!147 lt!46698 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!152 (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!47518 () Unit!2822)

(assert (=> d!25225 (= lt!47518 (choose!578 lt!46698 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62282 () Bool)

(assert (=> d!25225 e!62282))

(declare-fun res!48270 () Bool)

(assert (=> d!25225 (=> (not res!48270) (not e!62282))))

(assert (=> d!25225 (= res!48270 (isStrictlySorted!297 lt!46698))))

(assert (=> d!25225 (= (lemmaContainsTupThenGetReturnValue!65 lt!46698 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47518)))

(declare-fun b!95468 () Bool)

(declare-fun res!48271 () Bool)

(assert (=> b!95468 (=> (not res!48271) (not e!62282))))

(assert (=> b!95468 (= res!48271 (containsKey!151 lt!46698 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95469 () Bool)

(assert (=> b!95469 (= e!62282 (contains!799 lt!46698 (tuple2!2335 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25225 res!48270) b!95468))

(assert (= (and b!95468 res!48271) b!95469))

(assert (=> d!25225 m!101323))

(declare-fun m!103527 () Bool)

(assert (=> d!25225 m!103527))

(declare-fun m!103529 () Bool)

(assert (=> d!25225 m!103529))

(declare-fun m!103531 () Bool)

(assert (=> b!95468 m!103531))

(declare-fun m!103533 () Bool)

(assert (=> b!95469 m!103533))

(assert (=> d!24573 d!25225))

(declare-fun b!95470 () Bool)

(declare-fun e!62284 () List!1600)

(declare-fun call!9601 () List!1600)

(assert (=> b!95470 (= e!62284 call!9601)))

(declare-fun b!95471 () Bool)

(declare-fun e!62286 () Bool)

(declare-fun lt!47519 () List!1600)

(assert (=> b!95471 (= e!62286 (contains!799 lt!47519 (tuple2!2335 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!95472 () Bool)

(declare-fun e!62287 () List!1600)

(assert (=> b!95472 (= e!62287 e!62284)))

(declare-fun c!16043 () Bool)

(assert (=> b!95472 (= c!16043 (and ((_ is Cons!1596) (toList!785 (ite c!15725 call!9452 call!9453))) (= (_1!1177 (h!2188 (toList!785 (ite c!15725 call!9452 call!9453)))) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!62283 () List!1600)

(declare-fun c!16042 () Bool)

(declare-fun b!95473 () Bool)

(assert (=> b!95473 (= e!62283 (ite c!16043 (t!5506 (toList!785 (ite c!15725 call!9452 call!9453))) (ite c!16042 (Cons!1596 (h!2188 (toList!785 (ite c!15725 call!9452 call!9453))) (t!5506 (toList!785 (ite c!15725 call!9452 call!9453)))) Nil!1597)))))

(declare-fun bm!9598 () Bool)

(declare-fun call!9603 () List!1600)

(assert (=> bm!9598 (= call!9601 call!9603)))

(declare-fun c!16044 () Bool)

(declare-fun bm!9599 () Bool)

(assert (=> bm!9599 (= call!9603 ($colon$colon!75 e!62283 (ite c!16044 (h!2188 (toList!785 (ite c!15725 call!9452 call!9453))) (tuple2!2335 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!16041 () Bool)

(assert (=> bm!9599 (= c!16041 c!16044)))

(declare-fun b!95474 () Bool)

(assert (=> b!95474 (= e!62283 (insertStrictlySorted!67 (t!5506 (toList!785 (ite c!15725 call!9452 call!9453))) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95475 () Bool)

(declare-fun e!62285 () List!1600)

(declare-fun call!9602 () List!1600)

(assert (=> b!95475 (= e!62285 call!9602)))

(declare-fun b!95476 () Bool)

(assert (=> b!95476 (= e!62285 call!9602)))

(declare-fun bm!9600 () Bool)

(assert (=> bm!9600 (= call!9602 call!9601)))

(declare-fun b!95477 () Bool)

(assert (=> b!95477 (= c!16042 (and ((_ is Cons!1596) (toList!785 (ite c!15725 call!9452 call!9453))) (bvsgt (_1!1177 (h!2188 (toList!785 (ite c!15725 call!9452 call!9453)))) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!95477 (= e!62284 e!62285)))

(declare-fun b!95478 () Bool)

(declare-fun res!48273 () Bool)

(assert (=> b!95478 (=> (not res!48273) (not e!62286))))

(assert (=> b!95478 (= res!48273 (containsKey!151 lt!47519 (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!25227 () Bool)

(assert (=> d!25227 e!62286))

(declare-fun res!48272 () Bool)

(assert (=> d!25227 (=> (not res!48272) (not e!62286))))

(assert (=> d!25227 (= res!48272 (isStrictlySorted!297 lt!47519))))

(assert (=> d!25227 (= lt!47519 e!62287)))

(assert (=> d!25227 (= c!16044 (and ((_ is Cons!1596) (toList!785 (ite c!15725 call!9452 call!9453))) (bvslt (_1!1177 (h!2188 (toList!785 (ite c!15725 call!9452 call!9453)))) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25227 (isStrictlySorted!297 (toList!785 (ite c!15725 call!9452 call!9453)))))

(assert (=> d!25227 (= (insertStrictlySorted!67 (toList!785 (ite c!15725 call!9452 call!9453)) (_1!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1177 (ite c!15725 (ite c!15724 (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47519)))

(declare-fun b!95479 () Bool)

(assert (=> b!95479 (= e!62287 call!9603)))

(assert (= (and d!25227 c!16044) b!95479))

(assert (= (and d!25227 (not c!16044)) b!95472))

(assert (= (and b!95472 c!16043) b!95470))

(assert (= (and b!95472 (not c!16043)) b!95477))

(assert (= (and b!95477 c!16042) b!95475))

(assert (= (and b!95477 (not c!16042)) b!95476))

(assert (= (or b!95475 b!95476) bm!9600))

(assert (= (or b!95470 bm!9600) bm!9598))

(assert (= (or b!95479 bm!9598) bm!9599))

(assert (= (and bm!9599 c!16041) b!95474))

(assert (= (and bm!9599 (not c!16041)) b!95473))

(assert (= (and d!25227 res!48272) b!95478))

(assert (= (and b!95478 res!48273) b!95471))

(declare-fun m!103535 () Bool)

(assert (=> b!95478 m!103535))

(declare-fun m!103537 () Bool)

(assert (=> bm!9599 m!103537))

(declare-fun m!103539 () Bool)

(assert (=> b!95474 m!103539))

(declare-fun m!103541 () Bool)

(assert (=> d!25227 m!103541))

(declare-fun m!103543 () Bool)

(assert (=> d!25227 m!103543))

(declare-fun m!103545 () Bool)

(assert (=> b!95471 m!103545))

(assert (=> d!24573 d!25227))

(declare-fun d!25229 () Bool)

(declare-fun e!62288 () Bool)

(assert (=> d!25229 e!62288))

(declare-fun res!48274 () Bool)

(assert (=> d!25229 (=> res!48274 e!62288)))

(declare-fun lt!47522 () Bool)

(assert (=> d!25229 (= res!48274 (not lt!47522))))

(declare-fun lt!47520 () Bool)

(assert (=> d!25229 (= lt!47522 lt!47520)))

(declare-fun lt!47521 () Unit!2822)

(declare-fun e!62289 () Unit!2822)

(assert (=> d!25229 (= lt!47521 e!62289)))

(declare-fun c!16045 () Bool)

(assert (=> d!25229 (= c!16045 lt!47520)))

(assert (=> d!25229 (= lt!47520 (containsKey!151 (toList!785 lt!46928) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25229 (= (contains!797 lt!46928 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47522)))

(declare-fun b!95480 () Bool)

(declare-fun lt!47523 () Unit!2822)

(assert (=> b!95480 (= e!62289 lt!47523)))

(assert (=> b!95480 (= lt!47523 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46928) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!95480 (isDefined!101 (getValueByKey!147 (toList!785 lt!46928) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95481 () Bool)

(declare-fun Unit!2881 () Unit!2822)

(assert (=> b!95481 (= e!62289 Unit!2881)))

(declare-fun b!95482 () Bool)

(assert (=> b!95482 (= e!62288 (isDefined!101 (getValueByKey!147 (toList!785 lt!46928) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25229 c!16045) b!95480))

(assert (= (and d!25229 (not c!16045)) b!95481))

(assert (= (and d!25229 (not res!48274)) b!95482))

(declare-fun m!103547 () Bool)

(assert (=> d!25229 m!103547))

(declare-fun m!103549 () Bool)

(assert (=> b!95480 m!103549))

(assert (=> b!95480 m!101715))

(assert (=> b!95480 m!101715))

(declare-fun m!103551 () Bool)

(assert (=> b!95480 m!103551))

(assert (=> b!95482 m!101715))

(assert (=> b!95482 m!101715))

(assert (=> b!95482 m!103551))

(assert (=> d!24667 d!25229))

(declare-fun e!62291 () Option!153)

(declare-fun b!95485 () Bool)

(assert (=> b!95485 (= e!62291 (getValueByKey!147 (t!5506 lt!46925) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95483 () Bool)

(declare-fun e!62290 () Option!153)

(assert (=> b!95483 (= e!62290 (Some!152 (_2!1177 (h!2188 lt!46925))))))

(declare-fun b!95486 () Bool)

(assert (=> b!95486 (= e!62291 None!151)))

(declare-fun b!95484 () Bool)

(assert (=> b!95484 (= e!62290 e!62291)))

(declare-fun c!16047 () Bool)

(assert (=> b!95484 (= c!16047 (and ((_ is Cons!1596) lt!46925) (not (= (_1!1177 (h!2188 lt!46925)) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!16046 () Bool)

(declare-fun d!25231 () Bool)

(assert (=> d!25231 (= c!16046 (and ((_ is Cons!1596) lt!46925) (= (_1!1177 (h!2188 lt!46925)) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25231 (= (getValueByKey!147 lt!46925 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62290)))

(assert (= (and d!25231 c!16046) b!95483))

(assert (= (and d!25231 (not c!16046)) b!95484))

(assert (= (and b!95484 c!16047) b!95485))

(assert (= (and b!95484 (not c!16047)) b!95486))

(declare-fun m!103553 () Bool)

(assert (=> b!95485 m!103553))

(assert (=> d!24667 d!25231))

(declare-fun d!25233 () Bool)

(assert (=> d!25233 (= (getValueByKey!147 lt!46925 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47524 () Unit!2822)

(assert (=> d!25233 (= lt!47524 (choose!578 lt!46925 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62292 () Bool)

(assert (=> d!25233 e!62292))

(declare-fun res!48275 () Bool)

(assert (=> d!25233 (=> (not res!48275) (not e!62292))))

(assert (=> d!25233 (= res!48275 (isStrictlySorted!297 lt!46925))))

(assert (=> d!25233 (= (lemmaContainsTupThenGetReturnValue!65 lt!46925 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47524)))

(declare-fun b!95487 () Bool)

(declare-fun res!48276 () Bool)

(assert (=> b!95487 (=> (not res!48276) (not e!62292))))

(assert (=> b!95487 (= res!48276 (containsKey!151 lt!46925 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95488 () Bool)

(assert (=> b!95488 (= e!62292 (contains!799 lt!46925 (tuple2!2335 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25233 res!48275) b!95487))

(assert (= (and b!95487 res!48276) b!95488))

(assert (=> d!25233 m!101709))

(declare-fun m!103555 () Bool)

(assert (=> d!25233 m!103555))

(declare-fun m!103557 () Bool)

(assert (=> d!25233 m!103557))

(declare-fun m!103559 () Bool)

(assert (=> b!95487 m!103559))

(declare-fun m!103561 () Bool)

(assert (=> b!95488 m!103561))

(assert (=> d!24667 d!25233))

(declare-fun b!95489 () Bool)

(declare-fun e!62294 () List!1600)

(declare-fun call!9604 () List!1600)

(assert (=> b!95489 (= e!62294 call!9604)))

(declare-fun lt!47525 () List!1600)

(declare-fun b!95490 () Bool)

(declare-fun e!62296 () Bool)

(assert (=> b!95490 (= e!62296 (contains!799 lt!47525 (tuple2!2335 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95491 () Bool)

(declare-fun e!62297 () List!1600)

(assert (=> b!95491 (= e!62297 e!62294)))

(declare-fun c!16050 () Bool)

(assert (=> b!95491 (= c!16050 (and ((_ is Cons!1596) (toList!785 call!9447)) (= (_1!1177 (h!2188 (toList!785 call!9447))) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!16049 () Bool)

(declare-fun e!62293 () List!1600)

(declare-fun b!95492 () Bool)

(assert (=> b!95492 (= e!62293 (ite c!16050 (t!5506 (toList!785 call!9447)) (ite c!16049 (Cons!1596 (h!2188 (toList!785 call!9447)) (t!5506 (toList!785 call!9447))) Nil!1597)))))

(declare-fun bm!9601 () Bool)

(declare-fun call!9606 () List!1600)

(assert (=> bm!9601 (= call!9604 call!9606)))

(declare-fun bm!9602 () Bool)

(declare-fun c!16051 () Bool)

(assert (=> bm!9602 (= call!9606 ($colon$colon!75 e!62293 (ite c!16051 (h!2188 (toList!785 call!9447)) (tuple2!2335 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!16048 () Bool)

(assert (=> bm!9602 (= c!16048 c!16051)))

(declare-fun b!95493 () Bool)

(assert (=> b!95493 (= e!62293 (insertStrictlySorted!67 (t!5506 (toList!785 call!9447)) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95494 () Bool)

(declare-fun e!62295 () List!1600)

(declare-fun call!9605 () List!1600)

(assert (=> b!95494 (= e!62295 call!9605)))

(declare-fun b!95495 () Bool)

(assert (=> b!95495 (= e!62295 call!9605)))

(declare-fun bm!9603 () Bool)

(assert (=> bm!9603 (= call!9605 call!9604)))

(declare-fun b!95496 () Bool)

(assert (=> b!95496 (= c!16049 (and ((_ is Cons!1596) (toList!785 call!9447)) (bvsgt (_1!1177 (h!2188 (toList!785 call!9447))) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!95496 (= e!62294 e!62295)))

(declare-fun b!95497 () Bool)

(declare-fun res!48278 () Bool)

(assert (=> b!95497 (=> (not res!48278) (not e!62296))))

(assert (=> b!95497 (= res!48278 (containsKey!151 lt!47525 (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!25235 () Bool)

(assert (=> d!25235 e!62296))

(declare-fun res!48277 () Bool)

(assert (=> d!25235 (=> (not res!48277) (not e!62296))))

(assert (=> d!25235 (= res!48277 (isStrictlySorted!297 lt!47525))))

(assert (=> d!25235 (= lt!47525 e!62297)))

(assert (=> d!25235 (= c!16051 (and ((_ is Cons!1596) (toList!785 call!9447)) (bvslt (_1!1177 (h!2188 (toList!785 call!9447))) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25235 (isStrictlySorted!297 (toList!785 call!9447))))

(assert (=> d!25235 (= (insertStrictlySorted!67 (toList!785 call!9447) (_1!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1177 (tuple2!2335 (select (arr!1996 (_keys!4118 (v!2763 (underlying!330 thiss!992)))) from!355) (get!1280 (select (arr!1997 (_values!2419 (v!2763 (underlying!330 thiss!992)))) from!355) (dynLambda!374 (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47525)))

(declare-fun b!95498 () Bool)

(assert (=> b!95498 (= e!62297 call!9606)))

(assert (= (and d!25235 c!16051) b!95498))

(assert (= (and d!25235 (not c!16051)) b!95491))

(assert (= (and b!95491 c!16050) b!95489))

(assert (= (and b!95491 (not c!16050)) b!95496))

(assert (= (and b!95496 c!16049) b!95494))

(assert (= (and b!95496 (not c!16049)) b!95495))

(assert (= (or b!95494 b!95495) bm!9603))

(assert (= (or b!95489 bm!9603) bm!9601))

(assert (= (or b!95498 bm!9601) bm!9602))

(assert (= (and bm!9602 c!16048) b!95493))

(assert (= (and bm!9602 (not c!16048)) b!95492))

(assert (= (and d!25235 res!48277) b!95497))

(assert (= (and b!95497 res!48278) b!95490))

(declare-fun m!103563 () Bool)

(assert (=> b!95497 m!103563))

(declare-fun m!103565 () Bool)

(assert (=> bm!9602 m!103565))

(declare-fun m!103567 () Bool)

(assert (=> b!95493 m!103567))

(declare-fun m!103569 () Bool)

(assert (=> d!25235 m!103569))

(declare-fun m!103571 () Bool)

(assert (=> d!25235 m!103571))

(declare-fun m!103573 () Bool)

(assert (=> b!95490 m!103573))

(assert (=> d!24667 d!25235))

(declare-fun d!25237 () Bool)

(declare-fun e!62298 () Bool)

(assert (=> d!25237 e!62298))

(declare-fun res!48279 () Bool)

(assert (=> d!25237 (=> res!48279 e!62298)))

(declare-fun lt!47528 () Bool)

(assert (=> d!25237 (= res!48279 (not lt!47528))))

(declare-fun lt!47526 () Bool)

(assert (=> d!25237 (= lt!47528 lt!47526)))

(declare-fun lt!47527 () Unit!2822)

(declare-fun e!62299 () Unit!2822)

(assert (=> d!25237 (= lt!47527 e!62299)))

(declare-fun c!16052 () Bool)

(assert (=> d!25237 (= c!16052 lt!47526)))

(assert (=> d!25237 (= lt!47526 (containsKey!151 (toList!785 lt!46987) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> d!25237 (= (contains!797 lt!46987 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47528)))

(declare-fun b!95499 () Bool)

(declare-fun lt!47529 () Unit!2822)

(assert (=> b!95499 (= e!62299 lt!47529)))

(assert (=> b!95499 (= lt!47529 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46987) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(assert (=> b!95499 (isDefined!101 (getValueByKey!147 (toList!785 lt!46987) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95500 () Bool)

(declare-fun Unit!2882 () Unit!2822)

(assert (=> b!95500 (= e!62299 Unit!2882)))

(declare-fun b!95501 () Bool)

(assert (=> b!95501 (= e!62298 (isDefined!101 (getValueByKey!147 (toList!785 lt!46987) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25237 c!16052) b!95499))

(assert (= (and d!25237 (not c!16052)) b!95500))

(assert (= (and d!25237 (not res!48279)) b!95501))

(declare-fun m!103575 () Bool)

(assert (=> d!25237 m!103575))

(declare-fun m!103577 () Bool)

(assert (=> b!95499 m!103577))

(assert (=> b!95499 m!101853))

(assert (=> b!95499 m!101853))

(declare-fun m!103579 () Bool)

(assert (=> b!95499 m!103579))

(assert (=> b!95501 m!101853))

(assert (=> b!95501 m!101853))

(assert (=> b!95501 m!103579))

(assert (=> d!24687 d!25237))

(declare-fun b!95504 () Bool)

(declare-fun e!62301 () Option!153)

(assert (=> b!95504 (= e!62301 (getValueByKey!147 (t!5506 lt!46984) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95502 () Bool)

(declare-fun e!62300 () Option!153)

(assert (=> b!95502 (= e!62300 (Some!152 (_2!1177 (h!2188 lt!46984))))))

(declare-fun b!95505 () Bool)

(assert (=> b!95505 (= e!62301 None!151)))

(declare-fun b!95503 () Bool)

(assert (=> b!95503 (= e!62300 e!62301)))

(declare-fun c!16054 () Bool)

(assert (=> b!95503 (= c!16054 (and ((_ is Cons!1596) lt!46984) (not (= (_1!1177 (h!2188 lt!46984)) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun d!25239 () Bool)

(declare-fun c!16053 () Bool)

(assert (=> d!25239 (= c!16053 (and ((_ is Cons!1596) lt!46984) (= (_1!1177 (h!2188 lt!46984)) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25239 (= (getValueByKey!147 lt!46984 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) e!62300)))

(assert (= (and d!25239 c!16053) b!95502))

(assert (= (and d!25239 (not c!16053)) b!95503))

(assert (= (and b!95503 c!16054) b!95504))

(assert (= (and b!95503 (not c!16054)) b!95505))

(declare-fun m!103581 () Bool)

(assert (=> b!95504 m!103581))

(assert (=> d!24687 d!25239))

(declare-fun d!25241 () Bool)

(assert (=> d!25241 (= (getValueByKey!147 lt!46984 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) (Some!152 (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun lt!47530 () Unit!2822)

(assert (=> d!25241 (= lt!47530 (choose!578 lt!46984 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun e!62302 () Bool)

(assert (=> d!25241 e!62302))

(declare-fun res!48280 () Bool)

(assert (=> d!25241 (=> (not res!48280) (not e!62302))))

(assert (=> d!25241 (= res!48280 (isStrictlySorted!297 lt!46984))))

(assert (=> d!25241 (= (lemmaContainsTupThenGetReturnValue!65 lt!46984 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47530)))

(declare-fun b!95506 () Bool)

(declare-fun res!48281 () Bool)

(assert (=> b!95506 (=> (not res!48281) (not e!62302))))

(assert (=> b!95506 (= res!48281 (containsKey!151 lt!46984 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95507 () Bool)

(assert (=> b!95507 (= e!62302 (contains!799 lt!46984 (tuple2!2335 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (= (and d!25241 res!48280) b!95506))

(assert (= (and b!95506 res!48281) b!95507))

(assert (=> d!25241 m!101847))

(declare-fun m!103583 () Bool)

(assert (=> d!25241 m!103583))

(declare-fun m!103585 () Bool)

(assert (=> d!25241 m!103585))

(declare-fun m!103587 () Bool)

(assert (=> b!95506 m!103587))

(declare-fun m!103589 () Bool)

(assert (=> b!95507 m!103589))

(assert (=> d!24687 d!25241))

(declare-fun b!95508 () Bool)

(declare-fun e!62304 () List!1600)

(declare-fun call!9607 () List!1600)

(assert (=> b!95508 (= e!62304 call!9607)))

(declare-fun b!95509 () Bool)

(declare-fun e!62306 () Bool)

(declare-fun lt!47531 () List!1600)

(assert (=> b!95509 (= e!62306 (contains!799 lt!47531 (tuple2!2335 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun b!95510 () Bool)

(declare-fun e!62307 () List!1600)

(assert (=> b!95510 (= e!62307 e!62304)))

(declare-fun c!16057 () Bool)

(assert (=> b!95510 (= c!16057 (and ((_ is Cons!1596) (toList!785 call!9382)) (= (_1!1177 (h!2188 (toList!785 call!9382))) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(declare-fun e!62303 () List!1600)

(declare-fun c!16056 () Bool)

(declare-fun b!95511 () Bool)

(assert (=> b!95511 (= e!62303 (ite c!16057 (t!5506 (toList!785 call!9382)) (ite c!16056 (Cons!1596 (h!2188 (toList!785 call!9382)) (t!5506 (toList!785 call!9382))) Nil!1597)))))

(declare-fun bm!9604 () Bool)

(declare-fun call!9609 () List!1600)

(assert (=> bm!9604 (= call!9607 call!9609)))

(declare-fun bm!9605 () Bool)

(declare-fun c!16058 () Bool)

(assert (=> bm!9605 (= call!9609 ($colon$colon!75 e!62303 (ite c!16058 (h!2188 (toList!785 call!9382)) (tuple2!2335 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))))

(declare-fun c!16055 () Bool)

(assert (=> bm!9605 (= c!16055 c!16058)))

(declare-fun b!95512 () Bool)

(assert (=> b!95512 (= e!62303 (insertStrictlySorted!67 (t!5506 (toList!785 call!9382)) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun b!95513 () Bool)

(declare-fun e!62305 () List!1600)

(declare-fun call!9608 () List!1600)

(assert (=> b!95513 (= e!62305 call!9608)))

(declare-fun b!95514 () Bool)

(assert (=> b!95514 (= e!62305 call!9608)))

(declare-fun bm!9606 () Bool)

(assert (=> bm!9606 (= call!9608 call!9607)))

(declare-fun b!95515 () Bool)

(assert (=> b!95515 (= c!16056 (and ((_ is Cons!1596) (toList!785 call!9382)) (bvsgt (_1!1177 (h!2188 (toList!785 call!9382))) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> b!95515 (= e!62304 e!62305)))

(declare-fun b!95516 () Bool)

(declare-fun res!48283 () Bool)

(assert (=> b!95516 (=> (not res!48283) (not e!62306))))

(assert (=> b!95516 (= res!48283 (containsKey!151 lt!47531 (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))))))

(declare-fun d!25243 () Bool)

(assert (=> d!25243 e!62306))

(declare-fun res!48282 () Bool)

(assert (=> d!25243 (=> (not res!48282) (not e!62306))))

(assert (=> d!25243 (= res!48282 (isStrictlySorted!297 lt!47531))))

(assert (=> d!25243 (= lt!47531 e!62307)))

(assert (=> d!25243 (= c!16058 (and ((_ is Cons!1596) (toList!785 call!9382)) (bvslt (_1!1177 (h!2188 (toList!785 call!9382))) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))))))))

(assert (=> d!25243 (isStrictlySorted!297 (toList!785 call!9382))))

(assert (=> d!25243 (= (insertStrictlySorted!67 (toList!785 call!9382) (_1!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992))))) (_2!1177 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2763 (underlying!330 thiss!992)))))) lt!47531)))

(declare-fun b!95517 () Bool)

(assert (=> b!95517 (= e!62307 call!9609)))

(assert (= (and d!25243 c!16058) b!95517))

(assert (= (and d!25243 (not c!16058)) b!95510))

(assert (= (and b!95510 c!16057) b!95508))

(assert (= (and b!95510 (not c!16057)) b!95515))

(assert (= (and b!95515 c!16056) b!95513))

(assert (= (and b!95515 (not c!16056)) b!95514))

(assert (= (or b!95513 b!95514) bm!9606))

(assert (= (or b!95508 bm!9606) bm!9604))

(assert (= (or b!95517 bm!9604) bm!9605))

(assert (= (and bm!9605 c!16055) b!95512))

(assert (= (and bm!9605 (not c!16055)) b!95511))

(assert (= (and d!25243 res!48282) b!95516))

(assert (= (and b!95516 res!48283) b!95509))

(declare-fun m!103591 () Bool)

(assert (=> b!95516 m!103591))

(declare-fun m!103593 () Bool)

(assert (=> bm!9605 m!103593))

(declare-fun m!103595 () Bool)

(assert (=> b!95512 m!103595))

(declare-fun m!103597 () Bool)

(assert (=> d!25243 m!103597))

(declare-fun m!103599 () Bool)

(assert (=> d!25243 m!103599))

(declare-fun m!103601 () Bool)

(assert (=> b!95509 m!103601))

(assert (=> d!24687 d!25243))

(declare-fun d!25245 () Bool)

(declare-fun e!62308 () Bool)

(assert (=> d!25245 e!62308))

(declare-fun res!48284 () Bool)

(assert (=> d!25245 (=> res!48284 e!62308)))

(declare-fun lt!47534 () Bool)

(assert (=> d!25245 (= res!48284 (not lt!47534))))

(declare-fun lt!47532 () Bool)

(assert (=> d!25245 (= lt!47534 lt!47532)))

(declare-fun lt!47533 () Unit!2822)

(declare-fun e!62309 () Unit!2822)

(assert (=> d!25245 (= lt!47533 e!62309)))

(declare-fun c!16059 () Bool)

(assert (=> d!25245 (= c!16059 lt!47532)))

(assert (=> d!25245 (= lt!47532 (containsKey!151 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(assert (=> d!25245 (= (contains!797 (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))) lt!47534)))

(declare-fun b!95518 () Bool)

(declare-fun lt!47535 () Unit!2822)

(assert (=> b!95518 (= e!62309 lt!47535)))

(assert (=> b!95518 (= lt!47535 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(assert (=> b!95518 (isDefined!101 (getValueByKey!147 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636))))))

(declare-fun b!95519 () Bool)

(declare-fun Unit!2883 () Unit!2822)

(assert (=> b!95519 (= e!62309 Unit!2883)))

(declare-fun b!95520 () Bool)

(assert (=> b!95520 (= e!62308 (isDefined!101 (getValueByKey!147 (toList!785 (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1996 (_keys!4118 newMap!16)) (index!3186 lt!46636)))))))

(assert (= (and d!25245 c!16059) b!95518))

(assert (= (and d!25245 (not c!16059)) b!95519))

(assert (= (and d!25245 (not res!48284)) b!95520))

(assert (=> d!25245 m!101201))

(declare-fun m!103603 () Bool)

(assert (=> d!25245 m!103603))

(assert (=> b!95518 m!101201))

(declare-fun m!103605 () Bool)

(assert (=> b!95518 m!103605))

(assert (=> b!95518 m!101201))

(declare-fun m!103607 () Bool)

(assert (=> b!95518 m!103607))

(assert (=> b!95518 m!103607))

(declare-fun m!103609 () Bool)

(assert (=> b!95518 m!103609))

(assert (=> b!95520 m!101201))

(assert (=> b!95520 m!103607))

(assert (=> b!95520 m!103607))

(assert (=> b!95520 m!103609))

(assert (=> b!94366 d!25245))

(declare-fun bm!9607 () Bool)

(declare-fun call!9612 () Bool)

(declare-fun lt!47536 () ListLongMap!1539)

(assert (=> bm!9607 (= call!9612 (contains!797 lt!47536 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95521 () Bool)

(declare-fun e!62317 () ListLongMap!1539)

(declare-fun e!62321 () ListLongMap!1539)

(assert (=> b!95521 (= e!62317 e!62321)))

(declare-fun c!16063 () Bool)

(assert (=> b!95521 (= c!16063 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95522 () Bool)

(declare-fun e!62319 () ListLongMap!1539)

(declare-fun call!9614 () ListLongMap!1539)

(assert (=> b!95522 (= e!62319 call!9614)))

(declare-fun b!95523 () Bool)

(declare-fun res!48286 () Bool)

(declare-fun e!62311 () Bool)

(assert (=> b!95523 (=> (not res!48286) (not e!62311))))

(declare-fun e!62312 () Bool)

(assert (=> b!95523 (= res!48286 e!62312)))

(declare-fun res!48289 () Bool)

(assert (=> b!95523 (=> res!48289 e!62312)))

(declare-fun e!62313 () Bool)

(assert (=> b!95523 (= res!48289 (not e!62313))))

(declare-fun res!48292 () Bool)

(assert (=> b!95523 (=> (not res!48292) (not e!62313))))

(assert (=> b!95523 (= res!48292 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95524 () Bool)

(declare-fun call!9615 () ListLongMap!1539)

(assert (=> b!95524 (= e!62317 (+!136 call!9615 (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun b!95526 () Bool)

(declare-fun res!48291 () Bool)

(assert (=> b!95526 (=> (not res!48291) (not e!62311))))

(declare-fun e!62316 () Bool)

(assert (=> b!95526 (= res!48291 e!62316)))

(declare-fun c!16061 () Bool)

(assert (=> b!95526 (= c!16061 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95527 () Bool)

(assert (=> b!95527 (= e!62316 (not call!9612))))

(declare-fun b!95528 () Bool)

(declare-fun e!62310 () Bool)

(assert (=> b!95528 (= e!62310 (= (apply!90 lt!47536 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1280 (select (arr!1997 lt!46653) #b00000000000000000000000000000000) (dynLambda!374 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95528 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 lt!46653)))))

(assert (=> b!95528 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun b!95529 () Bool)

(assert (=> b!95529 (= e!62321 call!9614)))

(declare-fun b!95530 () Bool)

(declare-fun e!62314 () Bool)

(assert (=> b!95530 (= e!62314 (= (apply!90 lt!47536 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!95531 () Bool)

(declare-fun e!62318 () Bool)

(assert (=> b!95531 (= e!62318 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95532 () Bool)

(assert (=> b!95532 (= e!62313 (validKeyInArray!0 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9608 () Bool)

(declare-fun call!9611 () ListLongMap!1539)

(assert (=> bm!9608 (= call!9611 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9609 () Bool)

(declare-fun call!9616 () Bool)

(assert (=> bm!9609 (= call!9616 (contains!797 lt!47536 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95533 () Bool)

(declare-fun e!62320 () Unit!2822)

(declare-fun Unit!2884 () Unit!2822)

(assert (=> b!95533 (= e!62320 Unit!2884)))

(declare-fun call!9613 () ListLongMap!1539)

(declare-fun call!9610 () ListLongMap!1539)

(declare-fun bm!9610 () Bool)

(declare-fun c!16064 () Bool)

(assert (=> bm!9610 (= call!9615 (+!136 (ite c!16064 call!9611 (ite c!16063 call!9610 call!9613)) (ite (or c!16064 c!16063) (tuple2!2335 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2335 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun b!95534 () Bool)

(declare-fun e!62315 () Bool)

(assert (=> b!95534 (= e!62311 e!62315)))

(declare-fun c!16065 () Bool)

(assert (=> b!95534 (= c!16065 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95535 () Bool)

(declare-fun c!16060 () Bool)

(assert (=> b!95535 (= c!16060 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95535 (= e!62321 e!62319)))

(declare-fun b!95536 () Bool)

(assert (=> b!95536 (= e!62315 (not call!9616))))

(declare-fun d!25247 () Bool)

(assert (=> d!25247 e!62311))

(declare-fun res!48287 () Bool)

(assert (=> d!25247 (=> (not res!48287) (not e!62311))))

(assert (=> d!25247 (= res!48287 (or (bvsge #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))))

(declare-fun lt!47541 () ListLongMap!1539)

(assert (=> d!25247 (= lt!47536 lt!47541)))

(declare-fun lt!47555 () Unit!2822)

(assert (=> d!25247 (= lt!47555 e!62320)))

(declare-fun c!16062 () Bool)

(assert (=> d!25247 (= c!16062 e!62318)))

(declare-fun res!48293 () Bool)

(assert (=> d!25247 (=> (not res!48293) (not e!62318))))

(assert (=> d!25247 (= res!48293 (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(assert (=> d!25247 (= lt!47541 e!62317)))

(assert (=> d!25247 (= c!16064 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25247 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25247 (= (getCurrentListMap!466 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47536)))

(declare-fun b!95525 () Bool)

(declare-fun e!62322 () Bool)

(assert (=> b!95525 (= e!62322 (= (apply!90 lt!47536 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!95537 () Bool)

(assert (=> b!95537 (= e!62319 call!9613)))

(declare-fun bm!9611 () Bool)

(assert (=> bm!9611 (= call!9613 call!9610)))

(declare-fun b!95538 () Bool)

(declare-fun lt!47552 () Unit!2822)

(assert (=> b!95538 (= e!62320 lt!47552)))

(declare-fun lt!47544 () ListLongMap!1539)

(assert (=> b!95538 (= lt!47544 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47543 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47543 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47545 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47545 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47546 () Unit!2822)

(assert (=> b!95538 (= lt!47546 (addStillContains!66 lt!47544 lt!47543 (zeroValue!2323 newMap!16) lt!47545))))

(assert (=> b!95538 (contains!797 (+!136 lt!47544 (tuple2!2335 lt!47543 (zeroValue!2323 newMap!16))) lt!47545)))

(declare-fun lt!47551 () Unit!2822)

(assert (=> b!95538 (= lt!47551 lt!47546)))

(declare-fun lt!47537 () ListLongMap!1539)

(assert (=> b!95538 (= lt!47537 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47549 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47549 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47547 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47547 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47548 () Unit!2822)

(assert (=> b!95538 (= lt!47548 (addApplyDifferent!66 lt!47537 lt!47549 (minValue!2323 newMap!16) lt!47547))))

(assert (=> b!95538 (= (apply!90 (+!136 lt!47537 (tuple2!2335 lt!47549 (minValue!2323 newMap!16))) lt!47547) (apply!90 lt!47537 lt!47547))))

(declare-fun lt!47556 () Unit!2822)

(assert (=> b!95538 (= lt!47556 lt!47548)))

(declare-fun lt!47542 () ListLongMap!1539)

(assert (=> b!95538 (= lt!47542 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47550 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47550 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47557 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47557 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47540 () Unit!2822)

(assert (=> b!95538 (= lt!47540 (addApplyDifferent!66 lt!47542 lt!47550 (zeroValue!2323 newMap!16) lt!47557))))

(assert (=> b!95538 (= (apply!90 (+!136 lt!47542 (tuple2!2335 lt!47550 (zeroValue!2323 newMap!16))) lt!47557) (apply!90 lt!47542 lt!47557))))

(declare-fun lt!47553 () Unit!2822)

(assert (=> b!95538 (= lt!47553 lt!47540)))

(declare-fun lt!47539 () ListLongMap!1539)

(assert (=> b!95538 (= lt!47539 (getCurrentListMapNoExtraKeys!100 (_keys!4118 newMap!16) lt!46653 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47554 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47554 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47538 () (_ BitVec 64))

(assert (=> b!95538 (= lt!47538 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95538 (= lt!47552 (addApplyDifferent!66 lt!47539 lt!47554 (minValue!2323 newMap!16) lt!47538))))

(assert (=> b!95538 (= (apply!90 (+!136 lt!47539 (tuple2!2335 lt!47554 (minValue!2323 newMap!16))) lt!47538) (apply!90 lt!47539 lt!47538))))

(declare-fun b!95539 () Bool)

(assert (=> b!95539 (= e!62312 e!62310)))

(declare-fun res!48285 () Bool)

(assert (=> b!95539 (=> (not res!48285) (not e!62310))))

(assert (=> b!95539 (= res!48285 (contains!797 lt!47536 (select (arr!1996 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95539 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_keys!4118 newMap!16))))))

(declare-fun bm!9612 () Bool)

(assert (=> bm!9612 (= call!9610 call!9611)))

(declare-fun b!95540 () Bool)

(assert (=> b!95540 (= e!62316 e!62322)))

(declare-fun res!48290 () Bool)

(assert (=> b!95540 (= res!48290 call!9612)))

(assert (=> b!95540 (=> (not res!48290) (not e!62322))))

(declare-fun b!95541 () Bool)

(assert (=> b!95541 (= e!62315 e!62314)))

(declare-fun res!48288 () Bool)

(assert (=> b!95541 (= res!48288 call!9616)))

(assert (=> b!95541 (=> (not res!48288) (not e!62314))))

(declare-fun bm!9613 () Bool)

(assert (=> bm!9613 (= call!9614 call!9615)))

(assert (= (and d!25247 c!16064) b!95524))

(assert (= (and d!25247 (not c!16064)) b!95521))

(assert (= (and b!95521 c!16063) b!95529))

(assert (= (and b!95521 (not c!16063)) b!95535))

(assert (= (and b!95535 c!16060) b!95522))

(assert (= (and b!95535 (not c!16060)) b!95537))

(assert (= (or b!95522 b!95537) bm!9611))

(assert (= (or b!95529 bm!9611) bm!9612))

(assert (= (or b!95529 b!95522) bm!9613))

(assert (= (or b!95524 bm!9612) bm!9608))

(assert (= (or b!95524 bm!9613) bm!9610))

(assert (= (and d!25247 res!48293) b!95531))

(assert (= (and d!25247 c!16062) b!95538))

(assert (= (and d!25247 (not c!16062)) b!95533))

(assert (= (and d!25247 res!48287) b!95523))

(assert (= (and b!95523 res!48292) b!95532))

(assert (= (and b!95523 (not res!48289)) b!95539))

(assert (= (and b!95539 res!48285) b!95528))

(assert (= (and b!95523 res!48286) b!95526))

(assert (= (and b!95526 c!16061) b!95540))

(assert (= (and b!95526 (not c!16061)) b!95527))

(assert (= (and b!95540 res!48290) b!95525))

(assert (= (or b!95540 b!95527) bm!9607))

(assert (= (and b!95526 res!48291) b!95534))

(assert (= (and b!95534 c!16065) b!95541))

(assert (= (and b!95534 (not c!16065)) b!95536))

(assert (= (and b!95541 res!48288) b!95530))

(assert (= (or b!95541 b!95536) bm!9609))

(declare-fun b_lambda!4211 () Bool)

(assert (=> (not b_lambda!4211) (not b!95528)))

(assert (=> b!95528 t!5513))

(declare-fun b_and!5837 () Bool)

(assert (= b_and!5833 (and (=> t!5513 result!3205) b_and!5837)))

(assert (=> b!95528 t!5515))

(declare-fun b_and!5839 () Bool)

(assert (= b_and!5835 (and (=> t!5515 result!3207) b_and!5839)))

(declare-fun m!103611 () Bool)

(assert (=> b!95525 m!103611))

(declare-fun m!103613 () Bool)

(assert (=> b!95524 m!103613))

(declare-fun m!103615 () Bool)

(assert (=> bm!9610 m!103615))

(assert (=> d!25247 m!101265))

(declare-fun m!103617 () Bool)

(assert (=> b!95530 m!103617))

(declare-fun m!103619 () Bool)

(assert (=> bm!9607 m!103619))

(declare-fun m!103621 () Bool)

(assert (=> bm!9609 m!103621))

(declare-fun m!103623 () Bool)

(assert (=> b!95528 m!103623))

(assert (=> b!95528 m!101275))

(declare-fun m!103625 () Bool)

(assert (=> b!95528 m!103625))

(assert (=> b!95528 m!101279))

(assert (=> b!95528 m!101275))

(assert (=> b!95528 m!103623))

(assert (=> b!95528 m!101279))

(declare-fun m!103627 () Bool)

(assert (=> b!95528 m!103627))

(assert (=> b!95539 m!101279))

(assert (=> b!95539 m!101279))

(declare-fun m!103629 () Bool)

(assert (=> b!95539 m!103629))

(declare-fun m!103631 () Bool)

(assert (=> bm!9608 m!103631))

(assert (=> b!95532 m!101279))

(assert (=> b!95532 m!101279))

(assert (=> b!95532 m!101287))

(assert (=> b!95531 m!101279))

(assert (=> b!95531 m!101279))

(assert (=> b!95531 m!101287))

(declare-fun m!103633 () Bool)

(assert (=> b!95538 m!103633))

(declare-fun m!103635 () Bool)

(assert (=> b!95538 m!103635))

(declare-fun m!103637 () Bool)

(assert (=> b!95538 m!103637))

(declare-fun m!103639 () Bool)

(assert (=> b!95538 m!103639))

(assert (=> b!95538 m!101279))

(declare-fun m!103641 () Bool)

(assert (=> b!95538 m!103641))

(declare-fun m!103643 () Bool)

(assert (=> b!95538 m!103643))

(declare-fun m!103645 () Bool)

(assert (=> b!95538 m!103645))

(assert (=> b!95538 m!103641))

(declare-fun m!103647 () Bool)

(assert (=> b!95538 m!103647))

(assert (=> b!95538 m!103631))

(declare-fun m!103649 () Bool)

(assert (=> b!95538 m!103649))

(declare-fun m!103651 () Bool)

(assert (=> b!95538 m!103651))

(declare-fun m!103653 () Bool)

(assert (=> b!95538 m!103653))

(declare-fun m!103655 () Bool)

(assert (=> b!95538 m!103655))

(declare-fun m!103657 () Bool)

(assert (=> b!95538 m!103657))

(assert (=> b!95538 m!103633))

(assert (=> b!95538 m!103655))

(assert (=> b!95538 m!103637))

(declare-fun m!103659 () Bool)

(assert (=> b!95538 m!103659))

(declare-fun m!103661 () Bool)

(assert (=> b!95538 m!103661))

(assert (=> b!94366 d!25247))

(declare-fun d!25249 () Bool)

(declare-fun e!62323 () Bool)

(assert (=> d!25249 e!62323))

(declare-fun res!48294 () Bool)

(assert (=> d!25249 (=> res!48294 e!62323)))

(declare-fun lt!47560 () Bool)

(assert (=> d!25249 (= res!48294 (not lt!47560))))

(declare-fun lt!47558 () Bool)

(assert (=> d!25249 (= lt!47560 lt!47558)))

(declare-fun lt!47559 () Unit!2822)

(declare-fun e!62324 () Unit!2822)

(assert (=> d!25249 (= lt!47559 e!62324)))

(declare-fun c!16066 () Bool)

(assert (=> d!25249 (= c!16066 lt!47558)))

(assert (=> d!25249 (= lt!47558 (containsKey!151 (toList!785 lt!46731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25249 (= (contains!797 lt!46731 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47560)))

(declare-fun b!95542 () Bool)

(declare-fun lt!47561 () Unit!2822)

(assert (=> b!95542 (= e!62324 lt!47561)))

(assert (=> b!95542 (= lt!47561 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95542 (isDefined!101 (getValueByKey!147 (toList!785 lt!46731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95543 () Bool)

(declare-fun Unit!2885 () Unit!2822)

(assert (=> b!95543 (= e!62324 Unit!2885)))

(declare-fun b!95544 () Bool)

(assert (=> b!95544 (= e!62323 (isDefined!101 (getValueByKey!147 (toList!785 lt!46731) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25249 c!16066) b!95542))

(assert (= (and d!25249 (not c!16066)) b!95543))

(assert (= (and d!25249 (not res!48294)) b!95544))

(declare-fun m!103663 () Bool)

(assert (=> d!25249 m!103663))

(declare-fun m!103665 () Bool)

(assert (=> b!95542 m!103665))

(declare-fun m!103667 () Bool)

(assert (=> b!95542 m!103667))

(assert (=> b!95542 m!103667))

(declare-fun m!103669 () Bool)

(assert (=> b!95542 m!103669))

(assert (=> b!95544 m!103667))

(assert (=> b!95544 m!103667))

(assert (=> b!95544 m!103669))

(assert (=> b!94397 d!25249))

(assert (=> b!94642 d!24689))

(declare-fun d!25251 () Bool)

(declare-fun e!62325 () Bool)

(assert (=> d!25251 e!62325))

(declare-fun res!48295 () Bool)

(assert (=> d!25251 (=> res!48295 e!62325)))

(declare-fun lt!47564 () Bool)

(assert (=> d!25251 (= res!48295 (not lt!47564))))

(declare-fun lt!47562 () Bool)

(assert (=> d!25251 (= lt!47564 lt!47562)))

(declare-fun lt!47563 () Unit!2822)

(declare-fun e!62326 () Unit!2822)

(assert (=> d!25251 (= lt!47563 e!62326)))

(declare-fun c!16067 () Bool)

(assert (=> d!25251 (= c!16067 lt!47562)))

(assert (=> d!25251 (= lt!47562 (containsKey!151 (toList!785 lt!46888) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25251 (= (contains!797 lt!46888 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47564)))

(declare-fun b!95545 () Bool)

(declare-fun lt!47565 () Unit!2822)

(assert (=> b!95545 (= e!62326 lt!47565)))

(assert (=> b!95545 (= lt!47565 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!785 lt!46888) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95545 (isDefined!101 (getValueByKey!147 (toList!785 lt!46888) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95546 () Bool)

(declare-fun Unit!2886 () Unit!2822)

(assert (=> b!95546 (= e!62326 Unit!2886)))

(declare-fun b!95547 () Bool)

(assert (=> b!95547 (= e!62325 (isDefined!101 (getValueByKey!147 (toList!785 lt!46888) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25251 c!16067) b!95545))

(assert (= (and d!25251 (not c!16067)) b!95546))

(assert (= (and d!25251 (not res!48295)) b!95547))

(declare-fun m!103671 () Bool)

(assert (=> d!25251 m!103671))

(declare-fun m!103673 () Bool)

(assert (=> b!95545 m!103673))

(assert (=> b!95545 m!102211))

(assert (=> b!95545 m!102211))

(declare-fun m!103675 () Bool)

(assert (=> b!95545 m!103675))

(assert (=> b!95547 m!102211))

(assert (=> b!95547 m!102211))

(assert (=> b!95547 m!103675))

(assert (=> bm!9489 d!25251))

(declare-fun mapIsEmpty!3689 () Bool)

(declare-fun mapRes!3689 () Bool)

(assert (=> mapIsEmpty!3689 mapRes!3689))

(declare-fun b!95549 () Bool)

(declare-fun e!62327 () Bool)

(assert (=> b!95549 (= e!62327 tp_is_empty!2613)))

(declare-fun b!95548 () Bool)

(declare-fun e!62328 () Bool)

(assert (=> b!95548 (= e!62328 tp_is_empty!2613)))

(declare-fun condMapEmpty!3689 () Bool)

(declare-fun mapDefault!3689 () ValueCell!963)

(assert (=> mapNonEmpty!3688 (= condMapEmpty!3689 (= mapRest!3688 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3689)))))

(assert (=> mapNonEmpty!3688 (= tp!9466 (and e!62327 mapRes!3689))))

(declare-fun mapNonEmpty!3689 () Bool)

(declare-fun tp!9467 () Bool)

(assert (=> mapNonEmpty!3689 (= mapRes!3689 (and tp!9467 e!62328))))

(declare-fun mapKey!3689 () (_ BitVec 32))

(declare-fun mapRest!3689 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapValue!3689 () ValueCell!963)

(assert (=> mapNonEmpty!3689 (= mapRest!3688 (store mapRest!3689 mapKey!3689 mapValue!3689))))

(assert (= (and mapNonEmpty!3688 condMapEmpty!3689) mapIsEmpty!3689))

(assert (= (and mapNonEmpty!3688 (not condMapEmpty!3689)) mapNonEmpty!3689))

(assert (= (and mapNonEmpty!3689 ((_ is ValueCellFull!963) mapValue!3689)) b!95548))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!963) mapDefault!3689)) b!95549))

(declare-fun m!103677 () Bool)

(assert (=> mapNonEmpty!3689 m!103677))

(declare-fun mapIsEmpty!3690 () Bool)

(declare-fun mapRes!3690 () Bool)

(assert (=> mapIsEmpty!3690 mapRes!3690))

(declare-fun b!95551 () Bool)

(declare-fun e!62329 () Bool)

(assert (=> b!95551 (= e!62329 tp_is_empty!2613)))

(declare-fun b!95550 () Bool)

(declare-fun e!62330 () Bool)

(assert (=> b!95550 (= e!62330 tp_is_empty!2613)))

(declare-fun condMapEmpty!3690 () Bool)

(declare-fun mapDefault!3690 () ValueCell!963)

(assert (=> mapNonEmpty!3687 (= condMapEmpty!3690 (= mapRest!3687 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3690)))))

(assert (=> mapNonEmpty!3687 (= tp!9465 (and e!62329 mapRes!3690))))

(declare-fun mapNonEmpty!3690 () Bool)

(declare-fun tp!9468 () Bool)

(assert (=> mapNonEmpty!3690 (= mapRes!3690 (and tp!9468 e!62330))))

(declare-fun mapValue!3690 () ValueCell!963)

(declare-fun mapRest!3690 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapKey!3690 () (_ BitVec 32))

(assert (=> mapNonEmpty!3690 (= mapRest!3687 (store mapRest!3690 mapKey!3690 mapValue!3690))))

(assert (= (and mapNonEmpty!3687 condMapEmpty!3690) mapIsEmpty!3690))

(assert (= (and mapNonEmpty!3687 (not condMapEmpty!3690)) mapNonEmpty!3690))

(assert (= (and mapNonEmpty!3690 ((_ is ValueCellFull!963) mapValue!3690)) b!95550))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!963) mapDefault!3690)) b!95551))

(declare-fun m!103679 () Bool)

(assert (=> mapNonEmpty!3690 m!103679))

(declare-fun b_lambda!4213 () Bool)

(assert (= b_lambda!4191 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4213)))

(declare-fun b_lambda!4215 () Bool)

(assert (= b_lambda!4197 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4215)))

(declare-fun b_lambda!4217 () Bool)

(assert (= b_lambda!4199 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4217)))

(declare-fun b_lambda!4219 () Bool)

(assert (= b_lambda!4195 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4219)))

(declare-fun b_lambda!4221 () Bool)

(assert (= b_lambda!4187 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4221)))

(declare-fun b_lambda!4223 () Bool)

(assert (= b_lambda!4201 (or (and b!93975 b_free!2393) (and b!93983 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))) b_lambda!4223)))

(declare-fun b_lambda!4225 () Bool)

(assert (= b_lambda!4185 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4225)))

(declare-fun b_lambda!4227 () Bool)

(assert (= b_lambda!4193 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4227)))

(declare-fun b_lambda!4229 () Bool)

(assert (= b_lambda!4181 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4229)))

(declare-fun b_lambda!4231 () Bool)

(assert (= b_lambda!4203 (or (and b!93975 b_free!2393) (and b!93983 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))))) b_lambda!4231)))

(declare-fun b_lambda!4233 () Bool)

(assert (= b_lambda!4183 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4233)))

(declare-fun b_lambda!4235 () Bool)

(assert (= b_lambda!4189 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4235)))

(declare-fun b_lambda!4237 () Bool)

(assert (= b_lambda!4179 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4237)))

(declare-fun b_lambda!4239 () Bool)

(assert (= b_lambda!4211 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4239)))

(declare-fun b_lambda!4241 () Bool)

(assert (= b_lambda!4209 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4241)))

(declare-fun b_lambda!4243 () Bool)

(assert (= b_lambda!4205 (or (and b!93975 b_free!2393 (= (defaultEntry!2436 (v!2763 (underlying!330 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!93983 b_free!2395) b_lambda!4243)))

(check-sat (not bm!9607) (not d!25167) (not b!95048) (not d!24763) (not d!25055) (not b!95299) (not bm!9584) (not b!94916) (not b!95524) (not bm!9572) (not b!95525) (not b!94817) (not b!95405) (not b!95544) (not d!25109) (not d!24699) (not d!25225) (not bm!9560) (not d!24815) (not b!95160) (not b!94740) (not b!94992) (not d!25017) (not b!94680) (not b!94671) (not bm!9562) (not d!24785) (not d!24999) (not b!94841) (not d!25067) (not b_lambda!4217) (not d!24767) (not b!95061) (not b!95412) (not d!25169) (not b!95108) (not b!95095) (not b_lambda!4153) (not b!95115) (not d!25153) (not b!95150) (not b!95487) (not b!95205) (not b!95360) (not b!94995) (not bm!9563) (not b!94932) (not d!25227) (not bm!9577) (not bm!9609) (not b!95267) (not d!24993) (not b!94715) (not b!95448) (not d!25069) (not b!95006) (not b!95373) (not bm!9544) (not d!24695) (not b!94887) (not b!95055) (not d!25027) (not b!94676) (not d!25077) (not b!95245) (not b!95417) (not d!24873) (not d!25177) (not b!95184) (not d!24905) (not b!94778) (not bm!9608) (not b!95004) (not b!95532) (not b!94999) (not d!24691) (not bm!9589) (not b!95277) (not d!25197) (not b!95324) (not d!25165) (not b!95105) (not b!94764) (not b!95191) (not b!95340) (not b!94805) (not b!95478) (not b!94739) (not b!95087) (not b!95504) (not b!95154) (not b!95012) (not d!24919) (not d!24931) (not b!94727) (not bm!9557) (not d!25057) (not d!25085) (not b!95148) (not b!95076) (not b!94883) (not d!25175) (not b!95542) (not b!95089) (not d!25049) (not b!95334) (not b!95286) (not b!95090) (not b!95141) (not b!94763) (not b!95258) (not b!95301) (not b_lambda!4207) (not b!95361) (not b!95008) (not b!95499) (not b!95228) (not d!24989) (not b!95026) (not d!24825) (not b!95439) (not b!95399) (not b!95210) (not b!95158) (not d!24769) (not b!94854) (not b!94742) (not bm!9537) (not b!94684) (not b!95392) (not d!24697) (not d!24981) (not d!24761) (not b!94718) (not b!95065) (not b!94752) (not d!24777) (not b_lambda!4177) (not b_lambda!4237) (not d!24889) (not b!95125) (not b!95348) (not d!25245) (not b!95272) (not b!94784) (not b!95297) (not b!95176) (not b!95490) (not d!24801) (not b!94770) (not d!25143) (not b!95085) (not b!94852) (not b!94786) (not b!94890) (not d!24869) (not d!24803) (not b!94675) (not b!94785) (not d!24723) (not b!94719) (not b!94787) (not b!95371) (not d!24893) (not b!94955) (not b!95459) (not d!24797) (not b!94878) (not d!25071) (not d!25103) (not b!95485) (not b_lambda!4239) (not b!94744) (not b!95363) (not b!95249) (not d!25051) (not d!25149) (not b!95326) b_and!5839 (not b!94795) (not b!94957) (not d!24807) (not b!95328) (not b!94716) (not b!94794) (not d!25129) (not b_next!2393) (not d!25205) b_and!5837 (not d!24741) (not b!95234) (not b_lambda!4213) (not b!95320) (not d!25249) (not d!24965) (not b!95197) (not d!24805) (not b!95530) (not d!25127) (not b!95126) (not b_lambda!4223) (not bm!9528) (not b!94966) (not b!95165) (not bm!9565) (not b!94942) (not b!95078) (not b!95062) (not b!95225) (not b!94755) (not b!94722) (not b!95168) (not b!94767) (not d!25243) (not b!94951) (not b!95516) (not d!25113) (not d!25161) (not d!25221) (not d!24941) (not d!24997) (not d!24917) (not bm!9567) (not d!24845) (not bm!9510) (not b!95019) (not b!94738) (not b!95335) (not b!95468) (not bm!9516) (not d!24791) (not d!24789) (not b!94826) (not b!94997) (not b!94775) (not d!24987) (not b!94792) (not b!95298) (not b!95207) (not bm!9531) (not d!25021) (not b!94781) (not b!94678) (not b_next!2395) (not b!95418) (not b!95545) (not d!24839) (not b!95398) (not b!94759) (not d!24831) (not b_lambda!4167) (not b!95120) (not d!24757) (not b!94941) (not d!25001) (not b!95427) (not b!95162) (not b!94822) (not d!24973) (not b!94782) (not b!95005) (not b!95419) (not b!95518) (not b_lambda!4175) (not d!25093) (not mapNonEmpty!3690) (not bm!9590) (not bm!9556) (not d!25035) (not b!94889) (not b!95471) (not b!94920) (not d!25037) (not b!95316) (not d!25189) (not b!95129) (not b!95060) (not b!95429) (not d!24909) (not d!25213) (not b!95345) (not b!95368) (not b!95144) (not d!25029) (not b!95437) (not b_lambda!4233) (not d!24795) (not d!25111) (not d!24749) (not d!24787) (not d!24949) (not d!25199) (not b!94824) (not d!24843) (not bm!9515) (not bm!9522) (not d!24759) (not b!94990) (not b!95474) (not b!94971) (not b!95421) (not b!94980) (not b!94790) (not b_lambda!4227) (not b!95016) (not b!95278) (not b!95413) (not bm!9587) (not d!24707) (not bm!9535) (not b!95177) (not b!94796) (not b!95117) (not b!95362) (not b!94988) (not d!25089) (not b!95458) (not b!95275) (not d!25115) (not d!24977) (not b!95461) (not b!94747) (not b!94808) (not d!24745) (not b!94996) (not d!24755) (not bm!9519) (not bm!9545) (not d!24903) (not d!25061) (not d!25033) (not b!95101) (not b!95233) (not b!94735) (not d!25159) (not bm!9576) (not d!25209) (not b!94789) (not bm!9517) (not b!95538) (not d!25211) (not b!94828) (not b!94804) (not b!95327) (not d!25015) (not b!95310) (not b!95422) (not b!95192) (not b!95178) (not bm!9602) (not b!95203) (not b!94842) (not b!95512) (not b_lambda!4225) (not b!95402) (not d!25237) (not b!95469) (not bm!9558) (not b!95343) (not bm!9571) (not d!24783) (not d!25193) (not d!24857) (not b!94721) (not b!94974) (not b!95206) (not d!25157) (not bm!9588) (not d!25081) (not d!25009) (not b!95180) (not d!25163) (not b!95366) (not d!25247) (not b!94756) (not d!25183) (not d!24967) (not d!24765) (not d!24799) (not b!94834) (not d!24877) (not b!95174) (not b!95231) (not b!94728) (not b!95507) (not b!95501) (not b!95482) (not d!25075) (not b!95488) (not b!95051) (not b!95175) (not d!24793) (not b!94765) (not d!24943) (not b!95243) (not bm!9578) (not b!95364) (not b!94762) (not b!94908) (not b!94952) (not bm!9570) (not b_lambda!4241) (not d!25187) (not b!94897) (not d!24875) (not b!94669) (not b!95014) (not b!95172) (not b!95009) (not b_lambda!4149) (not b_lambda!4219) (not b!95073) (not b!94901) (not d!24743) (not b!95547) (not b!95312) (not b!95358) (not b!94895) (not bm!9597) (not b!94748) (not b!95097) (not b!94677) (not b!94798) (not b!94683) (not d!24751) (not d!24855) (not b!95116) (not d!24913) (not b_lambda!4235) (not b!94986) (not b!95156) (not d!24853) (not d!24809) (not mapNonEmpty!3689) (not b!95131) (not d!25079) (not b!94958) (not d!24821) (not b!94812) (not b!94674) (not b!94937) (not b!95166) (not d!24849) (not d!25139) (not b!95520) (not bm!9529) (not b!95357) (not b!94668) (not b!95436) (not d!24773) (not b!94905) (not bm!9579) (not b!94746) (not d!25191) (not b!94772) (not b!94849) (not b!95226) (not b!95295) (not b!95346) (not d!25201) (not b!95351) (not b!95070) (not b!94965) (not d!24753) (not bm!9586) (not d!25229) (not b!95480) (not b!94820) (not b!95255) (not b!95456) (not d!24847) (not b!95424) (not d!25251) (not d!24979) (not b!95091) (not b!95058) (not b_lambda!4171) (not d!24833) (not d!25233) (not b!94959) (not b!94909) (not b!95170) (not b!94835) (not b!95359) (not b!95223) (not b!95294) (not b_lambda!4221) (not b!95355) (not d!24995) (not b!95416) (not b!94987) (not d!24921) (not bm!9540) (not d!25235) (not bm!9564) (not b!95239) (not b!95201) (not b!94690) (not b!95211) (not d!24969) (not b!94838) (not b!95509) (not d!24971) (not b!94976) (not b!94929) (not d!24837) (not b!94799) (not d!24983) (not d!24859) (not d!25059) (not b!94829) (not b_lambda!4243) (not d!24963) (not b!95109) (not b!95025) (not b!94758) (not b!95099) (not d!24915) (not b!95539) (not b!95279) (not d!25053) (not b!95219) (not b!94944) (not d!25099) (not b!95092) (not b!95291) (not b!95374) (not b!94930) (not d!25031) (not b!95451) (not bm!9555) (not b!95531) (not d!24725) (not b!95133) (not bm!9610) (not d!25171) (not b!95103) (not b!95431) (not bm!9518) (not b!95338) (not b!94902) (not d!24985) (not d!24771) (not b_lambda!4229) (not b!95208) (not bm!9599) (not b!95463) (not b_lambda!4169) (not b!95434) (not b!95183) (not d!25065) (not b!95404) (not b!95088) (not b!95114) (not b!95161) (not d!24881) (not b!94840) (not b!94907) (not b!95247) (not b_lambda!4231) (not d!25097) (not bm!9536) (not d!25063) (not b!94886) (not b!95106) (not b!95002) (not b!95098) (not d!24933) (not b!95107) (not d!24693) (not d!25137) (not d!24975) (not b!94848) (not b!95081) (not d!24883) (not d!25219) (not b!94989) (not b!95406) (not bm!9527) (not b!94945) (not b!94729) (not b!94720) (not d!24811) (not b!94730) (not b_lambda!4173) tp_is_empty!2613 (not b!95506) (not b!95215) (not d!24959) (not b!95266) (not b!95306) (not d!24907) (not d!24879) (not b!95138) (not b!94811) (not bm!9523) (not b!94892) (not b!94724) (not d!25005) (not bm!9520) (not b!94940) (not b!95190) (not d!25173) (not b!95446) (not b!95369) (not b!95285) (not b!95111) (not b_lambda!4215) (not b!95303) (not bm!9569) (not bm!9595) (not b!94773) (not b!95314) (not d!24747) (not d!24867) (not d!25095) (not b!94915) (not b!95236) (not d!24829) (not bm!9605) (not b!94830) (not d!25019) (not d!25073) (not d!25133) (not b!94766) (not d!24951) (not b!95305) (not d!24703) (not d!24711) (not b!94815) (not b!94760) (not d!24851) (not b!95216) (not b!94802) (not b!95209) (not b!95321) (not b!95449) (not d!24991) (not b!95367) (not bm!9539) (not b!95139) (not bm!9538) (not b!95264) (not b!95151) (not b!95271) (not d!24925) (not d!25241) (not b!95497) (not b!95221) (not b!95375) (not b!95118) (not b!95442) (not b!95136) (not d!24865) (not b!95493) (not d!24813) (not b!95460) (not b!95466) (not d!25011) (not b!94983) (not bm!9521) (not d!24891) (not d!24961) (not d!25125) (not b!94919) (not d!24775) (not b!95528) (not d!24929) (not bm!9553) (not bm!9530))
(check-sat b_and!5837 b_and!5839 (not b_next!2393) (not b_next!2395))
