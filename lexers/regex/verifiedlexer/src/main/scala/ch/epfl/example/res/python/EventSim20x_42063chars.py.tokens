Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "__future__")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "annotations")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "dataclasses")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "dataclass")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "field")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "enum")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Enum")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "auto")
Token(newLine, "\n")
Token(keyword, "from")
Token(space, " ")
Token(identifier, "typing")
Token(space, " ")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "Callable")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "List")
Token(newLine, "\n")
Token(keyword, "import")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "random")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, "(")
Token(identifier, "Enum")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "ARRIVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "SERVE")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "DEPART")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "auto")
Token(delimiter, "(")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(delimiter, "(")
Token(identifier, "order")
Token(delimiter, "=")
Token(keyword, "True")
Token(delimiter, ")")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "time")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(indentation, "\n    ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "field")
Token(delimiter, "(")
Token(identifier, "compare")
Token(delimiter, "=")
Token(keyword, "False")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "default")
Token(delimiter, "=")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__str__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "str")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(shortString_delimiter_", "f"t={self.time:5.2f} {self.kind.name:<6} {self.payload}"")
Token(newLine, "\n")
Token(newLine, "\n")
Token(operator, "@")
Token(identifier, "dataclass")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "name")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(indentation, "\n    ")
Token(identifier, "busy_until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(keyword, "return")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "class")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "__init__")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "seed")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "int")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(decimalInt, "123")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "seed")
Token(delimiter, "(")
Token(identifier, "seed")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "List")
Token(delimiter, "[")
Token(identifier, "Event")
Token(delimiter, "]")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(delimiter, "[")
Token(delimiter, "]")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Server")
Token(delimiter, "(")
Token(shortString_delimiter_", ""S1"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "when")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "str")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(shortString_delimiter_", """")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappush")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Event")
Token(delimiter, "(")
Token(identifier, "when")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "kind")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "payload")
Token(delimiter, ")")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n    ")
Token(keyword, "def")
Token(space, " ")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(space, " ")
Token(identifier, "float")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(space, " ")
Token(delimiter, "->")
Token(space, " ")
Token(keyword, "None")
Token(delimiter, ":")
Token(indentation, "\n        ")
Token(comment, "# Seed a few arrivals")
Token(indentation, "\n        ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(floatLiteral, "0.0")
Token(indentation, "\n        ")
Token(keyword, "for")
Token(space, " ")
Token(identifier, "i")
Token(space, " ")
Token(keyword, "in")
Token(space, " ")
Token(identifier, "range")
Token(delimiter, "(")
Token(decimalInt, "6")
Token(delimiter, ")")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "t")
Token(space, " ")
Token(delimiter, "+=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "1.0")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "t")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ",")
Token(space, " ")
Token(shortString_delimiter_", "f"cust{i}"")
Token(delimiter, ")")
Token(newLine, "\n")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim start =="")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(keyword, "while")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(space, " ")
Token(keyword, "and")
Token(space, " ")
Token(delimiter, "(")
Token(identifier, "evt")
Token(space, " ")
Token(operator, ":=")
Token(space, " ")
Token(identifier, "heapq")
Token(delimiter, ".")
Token(identifier, "heappop")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "q")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ".")
Token(identifier, "time")
Token(space, " ")
Token(operator, "<=")
Token(space, " ")
Token(identifier, "until")
Token(delimiter, ":")
Token(indentation, "\n            ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "time")
Token(indentation, "\n            ")
Token(identifier, "print")
Token(delimiter, "(")
Token(identifier, "evt")
Token(delimiter, ")")
Token(indentation, "\n            ")
Token(identifier, "match")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "kind")
Token(delimiter, ":")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "ARRIVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "start")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "max")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "free_at")
Token(delimiter, "(")
Token(delimiter, ")")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "start")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "SERVE")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "service")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "random")
Token(delimiter, ".")
Token(identifier, "uniform")
Token(delimiter, "(")
Token(floatLiteral, "0.2")
Token(delimiter, ",")
Token(space, " ")
Token(floatLiteral, "0.8")
Token(delimiter, ")")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "now")
Token(space, " ")
Token(operator, "+")
Token(space, " ")
Token(identifier, "service")
Token(indentation, "\n                    ")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "schedule")
Token(delimiter, "(")
Token(identifier, "self")
Token(delimiter, ".")
Token(identifier, "server")
Token(delimiter, ".")
Token(identifier, "busy_until")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ",")
Token(space, " ")
Token(identifier, "evt")
Token(delimiter, ".")
Token(identifier, "payload")
Token(delimiter, ")")
Token(indentation, "\n                ")
Token(identifier, "case")
Token(space, " ")
Token(identifier, "Kind")
Token(delimiter, ".")
Token(identifier, "DEPART")
Token(delimiter, ":")
Token(indentation, "\n                    ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", "f"  {evt.payload} served in {evt.time - self.now + 0.0:.2f}s (instant print on depart)"")
Token(delimiter, ")")
Token(indentation, "\n        ")
Token(identifier, "print")
Token(delimiter, "(")
Token(shortString_delimiter_", ""== EventSim end =="")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")
Token(keyword, "if")
Token(space, " ")
Token(identifier, "__name__")
Token(space, " ")
Token(operator, "==")
Token(space, " ")
Token(shortString_delimiter_", ""__main__"")
Token(delimiter, ":")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(space, " ")
Token(delimiter, "=")
Token(space, " ")
Token(identifier, "Simulator")
Token(delimiter, "(")
Token(delimiter, ")")
Token(indentation, "\n    ")
Token(identifier, "sim")
Token(delimiter, ".")
Token(identifier, "run")
Token(delimiter, "(")
Token(identifier, "until")
Token(delimiter, "=")
Token(floatLiteral, "5.0")
Token(delimiter, ")")
Token(newLine, "\n")
Token(newLine, "\n")