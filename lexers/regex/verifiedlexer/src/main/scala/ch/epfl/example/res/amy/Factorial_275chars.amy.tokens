Token(keyword, "object")
Token(whitespace, " ")
Token(identifier, "Factorial")
Token(whitespace, "\n  ")
Token(keyword, "def")
Token(whitespace, " ")
Token(identifier, "fact")
Token(delimiter, "(")
Token(identifier, "i")
Token(delimiter, ":")
Token(whitespace, " ")
Token(primitive_type, "Int(32)")
Token(delimiter, ")")
Token(delimiter, ":")
Token(whitespace, " ")
Token(primitive_type, "Int(32)")
Token(whitespace, " ")
Token(delimiter, "=")
Token(whitespace, " ")
Token(delimiter, "{")
Token(whitespace, "\n    ")
Token(keyword, "if")
Token(whitespace, " ")
Token(delimiter, "(")
Token(identifier, "i")
Token(whitespace, " ")
Token(operator, "<")
Token(whitespace, " ")
Token(integer_literal, "2")
Token(delimiter, ")")
Token(whitespace, " ")
Token(delimiter, "{")
Token(whitespace, " ")
Token(integer_literal, "1")
Token(whitespace, " ")
Token(delimiter, "}")
Token(whitespace, "\n    ")
Token(keyword, "else")
Token(whitespace, " ")
Token(delimiter, "{")
Token(whitespace, " \n      ")
Token(keyword, "val")
Token(whitespace, " ")
Token(identifier, "rec")
Token(delimiter, ":")
Token(whitespace, " ")
Token(primitive_type, "Int(32)")
Token(whitespace, " ")
Token(delimiter, "=")
Token(whitespace, " ")
Token(identifier, "fact")
Token(delimiter, "(")
Token(identifier, "i")
Token(operator, "-")
Token(integer_literal, "1")
Token(delimiter, ")")
Token(delimiter, ";")
Token(whitespace, "\n      ")
Token(identifier, "i")
Token(whitespace, " ")
Token(operator, "*")
Token(whitespace, " ")
Token(identifier, "rec")
Token(whitespace, "\n    ")
Token(delimiter, "}")
Token(whitespace, "\n  ")
Token(delimiter, "}")
Token(whitespace, "\n\n  ")
Token(identifier, "Std")
Token(delimiter, ".")
Token(identifier, "printString")
Token(delimiter, "(")
Token(string_literal, ""5! = "")
Token(whitespace, "  ")
Token(operator, "++")
Token(whitespace, " ")
Token(identifier, "Std")
Token(delimiter, ".")
Token(identifier, "intToString")
Token(delimiter, "(")
Token(identifier, "fact")
Token(delimiter, "(")
Token(integer_literal, "5")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ";")
Token(whitespace, "\n  ")
Token(identifier, "Std")
Token(delimiter, ".")
Token(identifier, "printString")
Token(delimiter, "(")
Token(string_literal, ""10! = "")
Token(whitespace, " ")
Token(operator, "++")
Token(whitespace, " ")
Token(identifier, "Std")
Token(delimiter, ".")
Token(identifier, "intToString")
Token(delimiter, "(")
Token(identifier, "fact")
Token(delimiter, "(")
Token(integer_literal, "10")
Token(delimiter, ")")
Token(delimiter, ")")
Token(delimiter, ")")
Token(whitespace, "\n")
Token(keyword, "end")
Token(whitespace, " ")
Token(identifier, "Factorial")
Token(whitespace, "\n")